BackdropNode {
 inputs 0
 name BackdropNode33
 knobChanged "try:\n    listenedKnobs = \['text', 'position', 'name']\n    node = nuke.thisNode()\n    name = node.knob('name').value()\n    text = node.knob('text').value()\n    position = node.knob('position').value()\n    position = \"<\" + position + \">\"\n    label = node.knob('label').value()\n    \n    if nuke.thisKnob().name() in listenedKnobs:\n        if text == \"\":\n            if node.knob('position').value() == \"left\":\n                node.knob('label').setValue()\n            else:\n                node.knob('label').setValue(position + name)\n        else:\n            if node.knob('position').value() == \"left\":\n                node.knob('label').setValue(text)\n            else:\n                node.knob('label').setValue(position + text)\n                \n    elif nuke.thisKnob().name() == 'font_size':\n        fontSize = node.knob('font_size').value()\n        node.knob('note_font_size').setValue(fontSize)\nexcept:\n    pass"
 tile_color 0x5e5e5eff
 label "<Left>Muzzleflash "
 note_font_size 50
 selected true
 xpos -1189
 ypos -1167
 bdwidth 966
 bdheight 1259
 z_order -1
 addUserKnob {20 F_VFX l BackdropNode}
 addUserKnob {43 text l Text}
 text "Muzzleflash "
 addUserKnob {7 font_size l "Font Size" R 10 100}
 font_size 50
 addUserKnob {4 position l "" -STARTLINE M {Left Center}}
 addUserKnob {26 S01 l " " T " "}
 addUserKnob {22 grow l " <img src=\"F_scalep.png\">" -STARTLINE T "n=nuke.thisNode()\n\ndef grow(node=None,step=50):\n    try:\n        if not node:\n            n=nuke.selectedNode()\n        else:\n            n=node\n            n\['xpos'].setValue(n\['xpos'].getValue()-step)\n            n\['ypos'].setValue(n\['ypos'].getValue()-step)\n            n\['bdwidth'].setValue(n\['bdwidth'].getValue()+step*2)\n            n\['bdheight'].setValue(n\['bdheight'].getValue()+step*2)\n    except:\n        pass\ngrow(n,50)"}
 addUserKnob {22 shrink l " <img src=\"F_scalem.png\">" -STARTLINE T "n=nuke.thisNode()\n\ndef shrink(node=None,step=50):\n    try:\n        if not node:\n            n=nuke.selectedNode()\n        else:\n            n=node\n            n\['xpos'].setValue(n\['xpos'].getValue()+step)\n            n\['ypos'].setValue(n\['ypos'].getValue()+step)\n            n\['bdwidth'].setValue(n\['bdwidth'].getValue()-step*2)\n            n\['bdheight'].setValue(n\['bdheight'].getValue()-step*2)\n    except:\n        pass\nshrink(n,50)"}
 addUserKnob {22 colorandom l " <img src=\"ColorBars.png\">" -STARTLINE T "import colorsys, random\nn=nuke.thisNode()\nR,G,B= colorsys.hsv_to_rgb(random.random(),.1+random.random()*.15,.15+random.random()*.15)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ) )"}
 addUserKnob {22 darkgrey l "<font color=\"#232323\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.0, 0.0, 0.14]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
 addUserKnob {22 lightgrey l "<font color=\"#383838\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.0, 0.0, 0.22]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
 addUserKnob {22 red l "<font color=\"#8c3838\" size=6>■</font>" T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.0, 0.6, 0.55]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n" +STARTLINE}
 addUserKnob {22 orange l "<font color=\"#b28e59\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.1, 0.5, 0.7]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
 addUserKnob {22 yellow l "<font color=\"#ccc766\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.16, 0.5, 0.8]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
 addUserKnob {22 green l "<font color=\"#5d995b\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.33, 0.4, 0.6]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
 addUserKnob {22 cyan l "<font color=\"#72998f\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.46, 0.25, 0.6]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
 addUserKnob {22 blue l "<font color=\"#59687f\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.6, 0.3, 0.5]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
 addUserKnob {22 darkblue l "<font color=\"#63628c\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.67, 0.3, 0.55]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
 addUserKnob {22 magenta l "<font color=\"#927a99\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.8, 0.2, 0.6]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
 addUserKnob {22 pink l "<font color=\"#997a89\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.92, 0.2, 0.6]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
 addUserKnob {26 S02 l " " T " "}
 addUserKnob {26 Ftools l "" +STARTLINE T "<font color=\"#1C1C1C\"> v1.2 - Franklin VFX - 2018"}
}
BackdropNode {
 inputs 0
 name BackdropNode34
 knobChanged "try:\n    listenedKnobs = \['text', 'position', 'name']\n    node = nuke.thisNode()\n    name = node.knob('name').value()\n    text = node.knob('text').value()\n    position = node.knob('position').value()\n    position = \"<\" + position + \">\"\n    label = node.knob('label').value()\n    \n    if nuke.thisKnob().name() in listenedKnobs:\n        if text == \"\":\n            if node.knob('position').value() == \"left\":\n                node.knob('label').setValue()\n            else:\n                node.knob('label').setValue(position + name)\n        else:\n            if node.knob('position').value() == \"left\":\n                node.knob('label').setValue(text)\n            else:\n                node.knob('label').setValue(position + text)\n                \n    elif nuke.thisKnob().name() == 'font_size':\n        fontSize = node.knob('font_size').value()\n        node.knob('note_font_size').setValue(fontSize)\nexcept:\n    pass"
 tile_color 0x232323ff
 label <Center>GUN
 note_font_size 50
 selected true
 xpos -884
 ypos -1046
 bdwidth 255
 bdheight 271
 addUserKnob {20 F_VFX l BackdropNode}
 addUserKnob {43 text l Text}
 text GUN
 addUserKnob {7 font_size l "Font Size" R 10 100}
 font_size 50
 addUserKnob {4 position l "" -STARTLINE M {Left Center}}
 position Center
 addUserKnob {26 S01 l " " T " "}
 addUserKnob {22 grow l " <img src=\"F_scalep.png\">" -STARTLINE T "n=nuke.thisNode()\n\ndef grow(node=None,step=50):\n    try:\n        if not node:\n            n=nuke.selectedNode()\n        else:\n            n=node\n            n\['xpos'].setValue(n\['xpos'].getValue()-step)\n            n\['ypos'].setValue(n\['ypos'].getValue()-step)\n            n\['bdwidth'].setValue(n\['bdwidth'].getValue()+step*2)\n            n\['bdheight'].setValue(n\['bdheight'].getValue()+step*2)\n    except:\n        pass\ngrow(n,50)"}
 addUserKnob {22 shrink l " <img src=\"F_scalem.png\">" -STARTLINE T "n=nuke.thisNode()\n\ndef shrink(node=None,step=50):\n    try:\n        if not node:\n            n=nuke.selectedNode()\n        else:\n            n=node\n            n\['xpos'].setValue(n\['xpos'].getValue()+step)\n            n\['ypos'].setValue(n\['ypos'].getValue()+step)\n            n\['bdwidth'].setValue(n\['bdwidth'].getValue()-step*2)\n            n\['bdheight'].setValue(n\['bdheight'].getValue()-step*2)\n    except:\n        pass\nshrink(n,50)"}
 addUserKnob {22 colorandom l " <img src=\"ColorBars.png\">" -STARTLINE T "import colorsys, random\nn=nuke.thisNode()\nR,G,B= colorsys.hsv_to_rgb(random.random(),.1+random.random()*.15,.15+random.random()*.15)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ) )"}
 addUserKnob {22 darkgrey l "<font color=\"#232323\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.0, 0.0, 0.14]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
 addUserKnob {22 lightgrey l "<font color=\"#383838\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.0, 0.0, 0.22]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
 addUserKnob {22 red l "<font color=\"#8c3838\" size=6>■</font>" T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.0, 0.6, 0.55]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n" +STARTLINE}
 addUserKnob {22 orange l "<font color=\"#b28e59\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.1, 0.5, 0.7]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
 addUserKnob {22 yellow l "<font color=\"#ccc766\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.16, 0.5, 0.8]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
 addUserKnob {22 green l "<font color=\"#5d995b\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.33, 0.4, 0.6]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
 addUserKnob {22 cyan l "<font color=\"#72998f\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.46, 0.25, 0.6]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
 addUserKnob {22 blue l "<font color=\"#59687f\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.6, 0.3, 0.5]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
 addUserKnob {22 darkblue l "<font color=\"#63628c\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.67, 0.3, 0.55]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
 addUserKnob {22 magenta l "<font color=\"#927a99\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.8, 0.2, 0.6]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
 addUserKnob {22 pink l "<font color=\"#997a89\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.92, 0.2, 0.6]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
 addUserKnob {26 S02 l " " T " "}
 addUserKnob {26 Ftools l "" +STARTLINE T "<font color=\"#1C1C1C\"> v1.2 - Franklin VFX - 2018"}
}
BackdropNode {
 inputs 0
 name BackdropNode35
 knobChanged "try:\n    listenedKnobs = \['text', 'position', 'name']\n    node = nuke.thisNode()\n    name = node.knob('name').value()\n    text = node.knob('text').value()\n    position = node.knob('position').value()\n    position = \"<\" + position + \">\"\n    label = node.knob('label').value()\n    \n    if nuke.thisKnob().name() in listenedKnobs:\n        if text == \"\":\n            if node.knob('position').value() == \"left\":\n                node.knob('label').setValue()\n            else:\n                node.knob('label').setValue(position + name)\n        else:\n            if node.knob('position').value() == \"left\":\n                node.knob('label').setValue(text)\n            else:\n                node.knob('label').setValue(position + text)\n                \n    elif nuke.thisKnob().name() == 'font_size':\n        fontSize = node.knob('font_size').value()\n        node.knob('note_font_size').setValue(fontSize)\nexcept:\n    pass"
 tile_color 0x232323ff
 label <Center>Card3D
 note_font_size 50
 selected true
 xpos -1159
 ypos -1048
 bdwidth 255
 bdheight 271
 addUserKnob {20 F_VFX l BackdropNode}
 addUserKnob {43 text l Text}
 text Card3D
 addUserKnob {7 font_size l "Font Size" R 10 100}
 font_size 50
 addUserKnob {4 position l "" -STARTLINE M {Left Center}}
 position Center
 addUserKnob {26 S01 l " " T " "}
 addUserKnob {22 grow l " <img src=\"F_scalep.png\">" -STARTLINE T "n=nuke.thisNode()\n\ndef grow(node=None,step=50):\n    try:\n        if not node:\n            n=nuke.selectedNode()\n        else:\n            n=node\n            n\['xpos'].setValue(n\['xpos'].getValue()-step)\n            n\['ypos'].setValue(n\['ypos'].getValue()-step)\n            n\['bdwidth'].setValue(n\['bdwidth'].getValue()+step*2)\n            n\['bdheight'].setValue(n\['bdheight'].getValue()+step*2)\n    except:\n        pass\ngrow(n,50)"}
 addUserKnob {22 shrink l " <img src=\"F_scalem.png\">" -STARTLINE T "n=nuke.thisNode()\n\ndef shrink(node=None,step=50):\n    try:\n        if not node:\n            n=nuke.selectedNode()\n        else:\n            n=node\n            n\['xpos'].setValue(n\['xpos'].getValue()+step)\n            n\['ypos'].setValue(n\['ypos'].getValue()+step)\n            n\['bdwidth'].setValue(n\['bdwidth'].getValue()-step*2)\n            n\['bdheight'].setValue(n\['bdheight'].getValue()-step*2)\n    except:\n        pass\nshrink(n,50)"}
 addUserKnob {22 colorandom l " <img src=\"ColorBars.png\">" -STARTLINE T "import colorsys, random\nn=nuke.thisNode()\nR,G,B= colorsys.hsv_to_rgb(random.random(),.1+random.random()*.15,.15+random.random()*.15)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ) )"}
 addUserKnob {22 darkgrey l "<font color=\"#232323\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.0, 0.0, 0.14]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
 addUserKnob {22 lightgrey l "<font color=\"#383838\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.0, 0.0, 0.22]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
 addUserKnob {22 red l "<font color=\"#8c3838\" size=6>■</font>" T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.0, 0.6, 0.55]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n" +STARTLINE}
 addUserKnob {22 orange l "<font color=\"#b28e59\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.1, 0.5, 0.7]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
 addUserKnob {22 yellow l "<font color=\"#ccc766\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.16, 0.5, 0.8]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
 addUserKnob {22 green l "<font color=\"#5d995b\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.33, 0.4, 0.6]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
 addUserKnob {22 cyan l "<font color=\"#72998f\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.46, 0.25, 0.6]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
 addUserKnob {22 blue l "<font color=\"#59687f\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.6, 0.3, 0.5]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
 addUserKnob {22 darkblue l "<font color=\"#63628c\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.67, 0.3, 0.55]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
 addUserKnob {22 magenta l "<font color=\"#927a99\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.8, 0.2, 0.6]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
 addUserKnob {22 pink l "<font color=\"#997a89\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.92, 0.2, 0.6]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
 addUserKnob {26 S02 l " " T " "}
 addUserKnob {26 Ftools l "" +STARTLINE T "<font color=\"#1C1C1C\"> v1.2 - Franklin VFX - 2018"}
}
BackdropNode {
 inputs 0
 name BackdropNode36
 knobChanged "try:\n    listenedKnobs = \['text', 'position', 'name']\n    node = nuke.thisNode()\n    name = node.knob('name').value()\n    text = node.knob('text').value()\n    position = node.knob('position').value()\n    position = \"<\" + position + \">\"\n    label = node.knob('label').value()\n    \n    if nuke.thisKnob().name() in listenedKnobs:\n        if text == \"\":\n            if node.knob('position').value() == \"left\":\n                node.knob('label').setValue()\n            else:\n                node.knob('label').setValue(position + name)\n        else:\n            if node.knob('position').value() == \"left\":\n                node.knob('label').setValue(text)\n            else:\n                node.knob('label').setValue(position + text)\n                \n    elif nuke.thisKnob().name() == 'font_size':\n        fontSize = node.knob('font_size').value()\n        node.knob('note_font_size').setValue(fontSize)\nexcept:\n    pass"
 tile_color 0x383838ff
 label "<Left>color & effects"
 note_font_size 50
 selected true
 xpos -1156
 ypos -381
 bdwidth 408
 bdheight 404
 addUserKnob {20 F_VFX l BackdropNode}
 addUserKnob {43 text l Text}
 text "color & effects"
 addUserKnob {7 font_size l "Font Size" R 10 100}
 font_size 50
 addUserKnob {4 position l "" -STARTLINE M {Left Center}}
 addUserKnob {26 S01 l " " T " "}
 addUserKnob {22 grow l " <img src=\"F_scalep.png\">" -STARTLINE T "n=nuke.thisNode()\n\ndef grow(node=None,step=50):\n    try:\n        if not node:\n            n=nuke.selectedNode()\n        else:\n            n=node\n            n\['xpos'].setValue(n\['xpos'].getValue()-step)\n            n\['ypos'].setValue(n\['ypos'].getValue()-step)\n            n\['bdwidth'].setValue(n\['bdwidth'].getValue()+step*2)\n            n\['bdheight'].setValue(n\['bdheight'].getValue()+step*2)\n    except:\n        pass\ngrow(n,50)"}
 addUserKnob {22 shrink l " <img src=\"F_scalem.png\">" -STARTLINE T "n=nuke.thisNode()\n\ndef shrink(node=None,step=50):\n    try:\n        if not node:\n            n=nuke.selectedNode()\n        else:\n            n=node\n            n\['xpos'].setValue(n\['xpos'].getValue()+step)\n            n\['ypos'].setValue(n\['ypos'].getValue()+step)\n            n\['bdwidth'].setValue(n\['bdwidth'].getValue()-step*2)\n            n\['bdheight'].setValue(n\['bdheight'].getValue()-step*2)\n    except:\n        pass\nshrink(n,50)"}
 addUserKnob {22 colorandom l " <img src=\"ColorBars.png\">" -STARTLINE T "import colorsys, random\nn=nuke.thisNode()\nR,G,B= colorsys.hsv_to_rgb(random.random(),.1+random.random()*.15,.15+random.random()*.15)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ) )"}
 addUserKnob {22 darkgrey l "<font color=\"#232323\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.0, 0.0, 0.14]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
 addUserKnob {22 lightgrey l "<font color=\"#383838\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.0, 0.0, 0.22]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
 addUserKnob {22 red l "<font color=\"#8c3838\" size=6>■</font>" T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.0, 0.6, 0.55]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n" +STARTLINE}
 addUserKnob {22 orange l "<font color=\"#b28e59\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.1, 0.5, 0.7]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
 addUserKnob {22 yellow l "<font color=\"#ccc766\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.16, 0.5, 0.8]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
 addUserKnob {22 green l "<font color=\"#5d995b\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.33, 0.4, 0.6]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
 addUserKnob {22 cyan l "<font color=\"#72998f\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.46, 0.25, 0.6]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
 addUserKnob {22 blue l "<font color=\"#59687f\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.6, 0.3, 0.5]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
 addUserKnob {22 darkblue l "<font color=\"#63628c\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.67, 0.3, 0.55]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
 addUserKnob {22 magenta l "<font color=\"#927a99\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.8, 0.2, 0.6]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
 addUserKnob {22 pink l "<font color=\"#997a89\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.92, 0.2, 0.6]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
 addUserKnob {26 S02 l " " T " "}
 addUserKnob {26 Ftools l "" +STARTLINE T "<font color=\"#1C1C1C\"> v1.2 - Franklin VFX - 2018"}
}
BackdropNode {
 inputs 0
 name BackdropNode37
 knobChanged "try:\n    listenedKnobs = \['text', 'position', 'name']\n    node = nuke.thisNode()\n    name = node.knob('name').value()\n    text = node.knob('text').value()\n    position = node.knob('position').value()\n    position = \"<\" + position + \">\"\n    label = node.knob('label').value()\n    \n    if nuke.thisKnob().name() in listenedKnobs:\n        if text == \"\":\n            if node.knob('position').value() == \"left\":\n                node.knob('label').setValue()\n            else:\n                node.knob('label').setValue(position + name)\n        else:\n            if node.knob('position').value() == \"left\":\n                node.knob('label').setValue(text)\n            else:\n                node.knob('label').setValue(position + text)\n                \n    elif nuke.thisKnob().name() == 'font_size':\n        fontSize = node.knob('font_size').value()\n        node.knob('note_font_size').setValue(fontSize)\nexcept:\n    pass"
 tile_color 0x232323ff
 label <Center>ENV
 note_font_size 50
 selected true
 xpos -612
 ypos -1046
 bdwidth 255
 bdheight 271
 addUserKnob {20 F_VFX l BackdropNode}
 addUserKnob {43 text l Text}
 text ENV
 addUserKnob {7 font_size l "Font Size" R 10 100}
 font_size 50
 addUserKnob {4 position l "" -STARTLINE M {Left Center}}
 position Center
 addUserKnob {26 S01 l " " T " "}
 addUserKnob {22 grow l " <img src=\"F_scalep.png\">" -STARTLINE T "n=nuke.thisNode()\n\ndef grow(node=None,step=50):\n    try:\n        if not node:\n            n=nuke.selectedNode()\n        else:\n            n=node\n            n\['xpos'].setValue(n\['xpos'].getValue()-step)\n            n\['ypos'].setValue(n\['ypos'].getValue()-step)\n            n\['bdwidth'].setValue(n\['bdwidth'].getValue()+step*2)\n            n\['bdheight'].setValue(n\['bdheight'].getValue()+step*2)\n    except:\n        pass\ngrow(n,50)"}
 addUserKnob {22 shrink l " <img src=\"F_scalem.png\">" -STARTLINE T "n=nuke.thisNode()\n\ndef shrink(node=None,step=50):\n    try:\n        if not node:\n            n=nuke.selectedNode()\n        else:\n            n=node\n            n\['xpos'].setValue(n\['xpos'].getValue()+step)\n            n\['ypos'].setValue(n\['ypos'].getValue()+step)\n            n\['bdwidth'].setValue(n\['bdwidth'].getValue()-step*2)\n            n\['bdheight'].setValue(n\['bdheight'].getValue()-step*2)\n    except:\n        pass\nshrink(n,50)"}
 addUserKnob {22 colorandom l " <img src=\"ColorBars.png\">" -STARTLINE T "import colorsys, random\nn=nuke.thisNode()\nR,G,B= colorsys.hsv_to_rgb(random.random(),.1+random.random()*.15,.15+random.random()*.15)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ) )"}
 addUserKnob {22 darkgrey l "<font color=\"#232323\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.0, 0.0, 0.14]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
 addUserKnob {22 lightgrey l "<font color=\"#383838\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.0, 0.0, 0.22]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
 addUserKnob {22 red l "<font color=\"#8c3838\" size=6>■</font>" T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.0, 0.6, 0.55]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n" +STARTLINE}
 addUserKnob {22 orange l "<font color=\"#b28e59\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.1, 0.5, 0.7]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
 addUserKnob {22 yellow l "<font color=\"#ccc766\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.16, 0.5, 0.8]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
 addUserKnob {22 green l "<font color=\"#5d995b\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.33, 0.4, 0.6]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
 addUserKnob {22 cyan l "<font color=\"#72998f\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.46, 0.25, 0.6]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
 addUserKnob {22 blue l "<font color=\"#59687f\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.6, 0.3, 0.5]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
 addUserKnob {22 darkblue l "<font color=\"#63628c\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.67, 0.3, 0.55]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
 addUserKnob {22 magenta l "<font color=\"#927a99\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.8, 0.2, 0.6]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
 addUserKnob {22 pink l "<font color=\"#997a89\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.92, 0.2, 0.6]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
 addUserKnob {26 S02 l " " T " "}
 addUserKnob {26 Ftools l "" +STARTLINE T "<font color=\"#1C1C1C\"> v1.2 - Franklin VFX - 2018"}
}
push $cut_paste_input
Card3D {
 rotate {0 {(random(frame/7)*180)-90} {(random(frame/6)*180)-90}}
 uniform_scale 0.6
 shutteroffset centred
 name Card3D2
 selected true
 xpos -1067
 ypos -825
}
Group {
 name muzzleflash1
 tile_color 0x3f3f3fff
 note_font_color 0xff7e21ff
 selected true
 xpos -1067
 ypos -609
 addUserKnob {20 settings}
 addUserKnob {26 _43 l "" +STARTLINE T "<h1>MUZZLE "}
 addUserKnob {26 _44 l "" -STARTLINE T "<h1><p style=\"color: Orange\">FX"}
 addUserKnob {26 _45 l "" +STARTLINE T "\n"}
 addUserKnob {3 count l "" t "DONT TOUCH;\nyou can edit the keyframes in the dope sheet by changing its timing. but leave this knob as its is." +STARTLINE}
 count {{curve x26 1}}
 addUserKnob {22 python_button_6 l fire! -STARTLINE T "node = nuke.thisNode()\n\nnumber = node\['count'].getValue()\n\n\nif not node\['count'].isKey(nuke.frame()):\n\tnode\['count'].setAnimated(0)\n\tnumber = number + 1\n\tnode\['count'].setValue(number)"}
 addUserKnob {22 python_button_7 l reset -STARTLINE T "node = nuke.thisNode()\n\nfor curve in node\['count'].animations():\n    curve.clear()"}
 addUserKnob {26 _46 l "" +STARTLINE T "\n\n"}
 addUserKnob {26 ""}
 addUserKnob {26 _9 l "" +STARTLINE T <b><h2>Settings}
 addUserKnob {20 _40 l "" +STARTLINE n 1}
 _40 0
 addUserKnob {4 mode t "Begin by aligning your Card3d in the right perspective. you can use the \"align\" input to draw a shape on the card, this can be used to outline the gun and use this as alignment helper.\n\nafter completing the alignment you can switch to the \"muzzleflash only\" mode. this is really fast and can be used to find the right timing of the gun shots.\n\nif you are happy about the alignment and timing of the shots you can finally switch to the \"muzzleflash + smoke\" mode." M {align "muzzleflash only (fast)" "muzzleflash + smoke (slower)" "" "" "" "" "" "" ""}}
 addUserKnob {6 EnableCheckerboard l checkerboard t "you can dissable the checkerboard from the \"align\" mode; for a better visibility of your own drawn shapes from the \"align\" input of this node." +STARTLINE}
 EnableCheckerboard true
 addUserKnob {14 size_bbox l overscan R 0 100}
 addUserKnob {3 seed t "this will change the seed of the random picked muzzleflash & smoke assets."}
 seed 7602
 addUserKnob {22 randomize -STARTLINE T "import random\nnode = nuke.thisNode()\n\nrandomnmbr = random.randint(0,10000)\n\nnode\['seed'].setValue(randomnmbr)"}
 addUserKnob {26 _4 l "" +STARTLINE T "\n"}
 addUserKnob {22 python_button_8 l "localize assets" t "THIS WILL FREEZE YOUR COMP FOR A WHILE. Be aware! " T "g = nuke.thisNode()\ng.begin()\nsmoke = nuke.toNode('muzzleflash_maker_SMOKE')\nmuzzle = nuke.toNode('muzzleflash_maker_FLASH')\n\nsmoke.begin()\nfor s in nuke.allNodes():\n    classTypes = \['Read']\n    for n in classTypes:\n        if n in s.Class():\n            s\['localizationPolicy'].setValue('on')\n            s\['updateLocalization'].execute()\nsmoke.end()\n\nmuzzle.begin()\nfor s in nuke.allNodes():\n    classTypes = \['Read']\n    for n in classTypes:\n        if n in s.Class():\n            s\['localizationPolicy'].setValue('on')\n            s\['updateLocalization'].execute()\nmuzzle.end()\n\n\n" +STARTLINE}
 addUserKnob {20 endGroup_3 l endGroup n -1}
 addUserKnob {26 ""}
 addUserKnob {26 _6 l "" +STARTLINE T <b><h2>Flash}
 addUserKnob {20 _31 l "" +STARTLINE n 1}
 _31 0
 addUserKnob {68 SelectAssetFlash l assets M {default pistol/Colt45 rifle/AK rifle/AR-15 rifle/G2 rifle/M16 rifle/M249 smg/mp5 shotgun/M870 rifle/M4 "" "" "" "" "" "" ""}}
 SelectAssetFlash smg/mp5
 addUserKnob {7 brighness_flare l brighness}
 brighness_flare 0.5
 addUserKnob {7 ScaleVariationFlash l "scale variation"}
 ScaleVariationFlash 0.2
 addUserKnob {7 FlashMB l motionblur t "amount of motion blur. 1 is default and 0 is nothing. you can increase behond 1 to exaggerate the motion blur" R 0 2}
 FlashMB 1
 addUserKnob {26 _36 l "" +STARTLINE T "\n\n"}
 addUserKnob {26 _23 l "" +STARTLINE T "<b>front&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;"}
 addUserKnob {6 ActivateFrontFlash l "" -STARTLINE}
 ActivateFrontFlash true
 addUserKnob {26 _28 l "" +STARTLINE T "<h6>scale&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;"}
 addUserKnob {14 ScaleFrontFlash l "" -STARTLINE R 0 100}
 ScaleFrontFlash 1
 addUserKnob {26 _35 l "" +STARTLINE +INVISIBLE T "<h6>sparks&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;"}
 addUserKnob {7 SparksFrontFlash l "" -STARTLINE +INVISIBLE}
 addUserKnob {26 _24 l "" +STARTLINE T "\n"}
 addUserKnob {26 _25 l "" +STARTLINE T "<b>side & top &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;"}
 addUserKnob {6 ActivateSideFlash l "" -STARTLINE}
 ActivateSideFlash true
 addUserKnob {26 _29 l "" +STARTLINE T "<h6>scale&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;"}
 addUserKnob {14 ScaleSideFlash l "" -STARTLINE R 0 100}
 ScaleSideFlash 1
 addUserKnob {26 _38 l "" +STARTLINE +INVISIBLE T "<h6>sparks&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;"}
 addUserKnob {7 SparksSideFlash l "" -STARTLINE +INVISIBLE}
 addUserKnob {26 _26 l "" +STARTLINE T "\n"}
 addUserKnob {20 endGroup_2 l endGroup n -1}
 addUserKnob {26 ""}
 addUserKnob {26 _5 l "" +STARTLINE T <B><h2>Smoke}
 addUserKnob {20 _22 l "" +STARTLINE n 1}
 _22 0
 addUserKnob {4 StartOfSmoke l "smoke starting" M {"at flash" "after flash" ""}}
 addUserKnob {7 SmokeLightDirection l "light direction" R -1 1}
 addUserKnob {7 FadeSpeedSmoke l "fade out speed"}
 addUserKnob {7 ScaleVariationSmoke l "scale variation"}
 ScaleVariationSmoke 0.1
 addUserKnob {7 SmokeMB l motionblur t "amount of motion blur. 1 is default and 0 is nothing. you can increase behond 1 to exaggerate the motion blur" R 0 2}
 SmokeMB 1
 addUserKnob {26 _21 l "" +STARTLINE T "\n"}
 addUserKnob {26 _13 l "" +STARTLINE T "<b>front&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;"}
 addUserKnob {6 ActivateFrontSmoke l "" -STARTLINE}
 ActivateFrontSmoke true
 addUserKnob {26 _14 l "" +STARTLINE T "<h6>scale&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;"}
 addUserKnob {14 ScaleFrontSmoke l "" -STARTLINE R 0 100}
 ScaleFrontSmoke 1
 addUserKnob {26 _42 l "" +STARTLINE T "<h6>brightness&nbsp;&nbsp;"}
 addUserKnob {7 brighnesFrontSmoke l "" -STARTLINE}
 brighnesFrontSmoke 1
 addUserKnob {26 _37 l "" +STARTLINE T "<h6>animation&nbsp;&nbsp;&nbsp;"}
 addUserKnob {7 ScaleAnimationFrontSmoke l "" -STARTLINE}
 ScaleAnimationFrontSmoke 1
 addUserKnob {26 _15 l "" +STARTLINE T "\n"}
 addUserKnob {26 _16 l "" +STARTLINE T "<b>side & top &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;"}
 addUserKnob {6 ActivateSideSmoke l "" -STARTLINE}
 ActivateSideSmoke true
 addUserKnob {26 _17 l "" +STARTLINE T "<h6>scale&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;"}
 addUserKnob {14 ScaleSideSmoke l "" -STARTLINE R 0 100}
 ScaleSideSmoke 1
 addUserKnob {26 _41 l "" +STARTLINE T "<h6>brightness&nbsp;&nbsp;"}
 addUserKnob {7 brightnesSideSmoke l "" -STARTLINE}
 brightnesSideSmoke 1
 addUserKnob {26 _39 l "" +STARTLINE T "<h6>animation&nbsp;&nbsp;&nbsp;"}
 addUserKnob {7 ScaleAnimationSideSmoke l "" -STARTLINE}
 ScaleAnimationSideSmoke 1
 addUserKnob {26 _18 l "" +STARTLINE T "\n"}
 addUserKnob {26 _19 l "" +STARTLINE +INVISIBLE T "<b>top&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;"}
 addUserKnob {6 ActivateTopSmoke l "" -STARTLINE +INVISIBLE}
 ActivateTopSmoke true
 addUserKnob {26 _20 l "" +STARTLINE +INVISIBLE T "<h6>scale&nbsp;&nbsp;&nbsp;"}
 addUserKnob {14 ScaleTopSmoke l "" -STARTLINE +INVISIBLE R 0 100}
 ScaleTopSmoke 1
 addUserKnob {26 _7 l "" +STARTLINE +INVISIBLE T "\n"}
 addUserKnob {20 endGroup_1 l endGroup n -1}
 addUserKnob {26 ""}
 addUserKnob {26 _32 l "" +STARTLINE T "<b><h2>Parent linking"}
 addUserKnob {20 group l "" +STARTLINE n 1}
 group 0
 addUserKnob {26 _8 l "" +STARTLINE T "\n"}
 addUserKnob {26 _2 l "" +STARTLINE T "<b>Link GUN matchmove"}
 addUserKnob {22 python_button_1 l "set parent" t "select parent node, and press this button to set the selected node as parent" T "g = nuke.thisNode()\ng.end()\nn = nuke.selectedNode()\['name'].getValue()\ng.begin()\ng\['parent_gun'].setValue(n)\n" +STARTLINE}
 addUserKnob {22 python_button_3 l reset -STARTLINE T "g = nuke.thisNode()\ng.end()\nn = \"null\"\ng.begin()\ng\['parent_gun'].setValue(n)\n"}
 addUserKnob {1 parent_gun l parent +DISABLED}
 parent_gun Transform2
 addUserKnob {26 ""}
 addUserKnob {26 _1 l "" +STARTLINE T "\n"}
 addUserKnob {26 _3 l "" +STARTLINE T "<b>Link ENV matchmove"}
 addUserKnob {22 python_button_2 l "set parent" t "select parent node, and press this button to set the selected node as parent" T "g = nuke.thisNode()\ng.end()\nn = nuke.selectedNode()\['name'].getValue()\ng.begin()\ng\['parent_env'].setValue(n)\n" +STARTLINE}
 addUserKnob {22 python_button_5 l reset -STARTLINE T "g = nuke.thisNode()\ng.end()\nn = \"null\"\ng.begin()\ng\['parent_env'].setValue(n)\n"}
 addUserKnob {1 parent_env l parent +DISABLED}
 parent_env Transform3
 addUserKnob {20 endGroup n -1}
 addUserKnob {26 _34 l "" +STARTLINE T "\n\n\n"}
 addUserKnob {26 _33 l "" +STARTLINE T "\n\n\n<i>made by Yorben - v1.55 (BETA)"}
 addUserKnob {20 expression}
 addUserKnob {26 _10 l "" +STARTLINE T <b>Firing}
 addUserKnob {6 firing l "" t "you can use this to link to the \"dissable knob\" of nodes you want to <b>dissable</b> when there is a muzzleflash." +STARTLINE +STARTLINE}
 firing {{muzzleflash_maker_FLASH.firing(floor(frame))}}
 addUserKnob {26 _11 l "" +STARTLINE T "\n"}
 addUserKnob {26 _12 l "" +STARTLINE T "<b>Not firing"}
 addUserKnob {6 notfiring l "" t "you can use this to link to the \"dissable knob\" of nodes you want to <b>enable</b> when there is a muzzleflash." +STARTLINE +STARTLINE}
 notfiring {{muzzleflash_maker_FLASH.firing==0}}
 addUserKnob {2 filepath +INVISIBLE}
 filepath /Volumes/Server03_F/08_USER_TEMP_FOLDERS/YORBEN/Muzzleflash/NEW/custom_assets/
 addUserKnob {6 EnableExtraFrames l "extra frames" +INVISIBLE +STARTLINE}
 addUserKnob {3 shot1 l "" +STARTLINE +INVISIBLE}
 shot1 {{"\[python -execlocal try:\\n\\ \\ \\ SelectedKey\\ =\\ nuke.thisNode().knob('count').animation(0).keys()\\\[0\\].x\\nexcept:\\n\\ \\ \\ SelectedKey\\ =\\ 0\\n\\nret\\ =\\ SelectedKey]" i}}
 addUserKnob {3 shot2 l "" +STARTLINE +INVISIBLE}
 shot2 {{"\[python -execlocal try:\\n\\ \\ \\ SelectedKey\\ =\\ nuke.thisNode().knob('count').animation(0).keys()\\\[1\\].x\\nexcept:\\n\\ \\ \\ SelectedKey\\ =\\ 0\\n\\nret\\ =\\ SelectedKey]" i}}
 addUserKnob {3 shot3 l "" +STARTLINE +INVISIBLE}
 shot3 {{"\[python -execlocal try:\\n\\ \\ \\ SelectedKey\\ =\\ nuke.thisNode().knob('count').animation(0).keys()\\\[2\\].x\\nexcept:\\n\\ \\ \\ SelectedKey\\ =\\ 0\\n\\nret\\ =\\ SelectedKey]" i}}
 addUserKnob {3 shot4 l "" +STARTLINE +INVISIBLE}
 shot4 {{"\[python -execlocal try:\\n\\ \\ \\ SelectedKey\\ =\\ nuke.thisNode().knob('count').animation(0).keys()\\\[3\\].x\\nexcept:\\n\\ \\ \\ SelectedKey\\ =\\ 0\\n\\nret\\ =\\ SelectedKey]" i}}
 addUserKnob {3 shot5 l "" +STARTLINE +INVISIBLE}
 shot5 {{"\[python -execlocal try:\\n\\ \\ \\ SelectedKey\\ =\\ nuke.thisNode().knob('count').animation(0).keys()\\\[4\\].x\\nexcept:\\n\\ \\ \\ SelectedKey\\ =\\ 0\\n\\nret\\ =\\ SelectedKey]" i}}
 addUserKnob {3 shot6 l "" +STARTLINE +INVISIBLE}
 shot6 {{"\[python -execlocal try:\\n\\ \\ \\ SelectedKey\\ =\\ nuke.thisNode().knob('count').animation(0).keys()\\\[5\\].x\\nexcept:\\n\\ \\ \\ SelectedKey\\ =\\ 0\\n\\nret\\ =\\ SelectedKey]" i}}
 addUserKnob {3 shot7 l "" +STARTLINE +INVISIBLE}
 shot7 {{"\[python -execlocal try:\\n\\ \\ \\ SelectedKey\\ =\\ nuke.thisNode().knob('count').animation(0).keys()\\\[6\\].x\\nexcept:\\n\\ \\ \\ SelectedKey\\ =\\ 0\\n\\nret\\ =\\ SelectedKey]" i}}
 addUserKnob {3 shot8 l "" +STARTLINE +INVISIBLE}
 shot8 {{"\[python -execlocal try:\\n\\ \\ \\ SelectedKey\\ =\\ nuke.thisNode().knob('count').animation(0).keys()\\\[7\\].x\\nexcept:\\n\\ \\ \\ SelectedKey\\ =\\ 0\\n\\nret\\ =\\ SelectedKey]" i}}
 addUserKnob {3 shot9 l "" +STARTLINE +INVISIBLE}
 shot9 {{"\[python -execlocal try:\\n\\ \\ \\ SelectedKey\\ =\\ nuke.thisNode().knob('count').animation(0).keys()\\\[8\\].x\\nexcept:\\n\\ \\ \\ SelectedKey\\ =\\ 0\\n\\nret\\ =\\ SelectedKey]" i}}
 addUserKnob {3 shot10 l "" +STARTLINE +INVISIBLE}
 shot10 {{"\[python -execlocal try:\\n\\ \\ \\ SelectedKey\\ =\\ nuke.thisNode().knob('count').animation(0).keys()\\\[9\\].x\\nexcept:\\n\\ \\ \\ SelectedKey\\ =\\ 0\\n\\nret\\ =\\ SelectedKey]" i}}
 addUserKnob {3 shot11 l "" +STARTLINE +INVISIBLE}
 shot11 {{"\[python -execlocal try:\\n\\ \\ \\ SelectedKey\\ =\\ nuke.thisNode().knob('count').animation(0).keys()\\\[10\\].x\\nexcept:\\n\\ \\ \\ SelectedKey\\ =\\ 0\\n\\nret\\ =\\ SelectedKey]" i}}
 addUserKnob {3 shot12 l "" +STARTLINE +INVISIBLE}
 shot12 {{"\[python -execlocal try:\\n\\ \\ \\ SelectedKey\\ =\\ nuke.thisNode().knob('count').animation(0).keys()\\\[11\\].x\\nexcept:\\n\\ \\ \\ SelectedKey\\ =\\ 0\\n\\nret\\ =\\ SelectedKey]" i}}
}
 BackdropNode {
  inputs 0
  name BackdropNode1
  knobChanged "try:\n    listenedKnobs = \['text', 'position', 'name']\n    node = nuke.thisNode()\n    name = node.knob('name').value()\n    text = node.knob('text').value()\n    position = node.knob('position').value()\n    position = \"<\" + position + \">\"\n    label = node.knob('label').value()\n    \n    if nuke.thisKnob().name() in listenedKnobs:\n        if text == \"\":\n            if node.knob('position').value() == \"left\":\n                node.knob('label').setValue()\n            else:\n                node.knob('label').setValue(position + name)\n        else:\n            if node.knob('position').value() == \"left\":\n                node.knob('label').setValue(text)\n            else:\n                node.knob('label').setValue(position + text)\n                \n    elif nuke.thisKnob().name() == 'font_size':\n        fontSize = node.knob('font_size').value()\n        node.knob('note_font_size').setValue(fontSize)\nexcept:\n    pass"
  tile_color 0x232323ff
  label <Left>FX
  note_font_size 50
  xpos -1060
  ypos -313
  bdwidth 341
  bdheight 1163
  addUserKnob {20 F_VFX l BackdropNode}
  addUserKnob {43 text l Text}
  text FX
  addUserKnob {7 font_size l "Font Size" R 10 100}
  font_size 50
  addUserKnob {4 position l "" -STARTLINE M {Left Center}}
  addUserKnob {26 S01 l " " T " "}
  addUserKnob {22 grow l " <img src=\"F_scalep.png\">" -STARTLINE T "n=nuke.thisNode()\n\ndef grow(node=None,step=50):\n    try:\n        if not node:\n            n=nuke.selectedNode()\n        else:\n            n=node\n            n\['xpos'].setValue(n\['xpos'].getValue()-step)\n            n\['ypos'].setValue(n\['ypos'].getValue()-step)\n            n\['bdwidth'].setValue(n\['bdwidth'].getValue()+step*2)\n            n\['bdheight'].setValue(n\['bdheight'].getValue()+step*2)\n    except:\n        pass\ngrow(n,50)"}
  addUserKnob {22 shrink l " <img src=\"F_scalem.png\">" -STARTLINE T "n=nuke.thisNode()\n\ndef shrink(node=None,step=50):\n    try:\n        if not node:\n            n=nuke.selectedNode()\n        else:\n            n=node\n            n\['xpos'].setValue(n\['xpos'].getValue()+step)\n            n\['ypos'].setValue(n\['ypos'].getValue()+step)\n            n\['bdwidth'].setValue(n\['bdwidth'].getValue()-step*2)\n            n\['bdheight'].setValue(n\['bdheight'].getValue()-step*2)\n    except:\n        pass\nshrink(n,50)"}
  addUserKnob {22 colorandom l " <img src=\"ColorBars.png\">" -STARTLINE T "import colorsys, random\nn=nuke.thisNode()\nR,G,B= colorsys.hsv_to_rgb(random.random(),.1+random.random()*.15,.15+random.random()*.15)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ) )"}
  addUserKnob {22 darkgrey l "<font color=\"#232323\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.0, 0.0, 0.14]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
  addUserKnob {22 lightgrey l "<font color=\"#383838\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.0, 0.0, 0.22]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
  addUserKnob {22 red l "<font color=\"#8c3838\" size=6>■</font>" T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.0, 0.6, 0.55]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n" +STARTLINE}
  addUserKnob {22 orange l "<font color=\"#b28e59\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.1, 0.5, 0.7]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
  addUserKnob {22 yellow l "<font color=\"#ccc766\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.16, 0.5, 0.8]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
  addUserKnob {22 green l "<font color=\"#5d995b\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.33, 0.4, 0.6]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
  addUserKnob {22 cyan l "<font color=\"#72998f\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.46, 0.25, 0.6]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
  addUserKnob {22 blue l "<font color=\"#59687f\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.6, 0.3, 0.5]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
  addUserKnob {22 darkblue l "<font color=\"#63628c\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.67, 0.3, 0.55]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
  addUserKnob {22 magenta l "<font color=\"#927a99\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.8, 0.2, 0.6]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
  addUserKnob {22 pink l "<font color=\"#997a89\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.92, 0.2, 0.6]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
  addUserKnob {26 S02 l " " T " "}
  addUserKnob {26 Ftools l "" +STARTLINE T "<font color=\"#1C1C1C\"> v1.2 - Franklin VFX - 2018"}
 }
 BackdropNode {
  inputs 0
  name BackdropNode2
  knobChanged "try:\n    listenedKnobs = \['text', 'position', 'name']\n    node = nuke.thisNode()\n    name = node.knob('name').value()\n    text = node.knob('text').value()\n    position = node.knob('position').value()\n    position = \"<\" + position + \">\"\n    label = node.knob('label').value()\n    \n    if nuke.thisKnob().name() in listenedKnobs:\n        if text == \"\":\n            if node.knob('position').value() == \"left\":\n                node.knob('label').setValue()\n            else:\n                node.knob('label').setValue(position + name)\n        else:\n            if node.knob('position').value() == \"left\":\n                node.knob('label').setValue(text)\n            else:\n                node.knob('label').setValue(position + text)\n                \n    elif nuke.thisKnob().name() == 'font_size':\n        fontSize = node.knob('font_size').value()\n        node.knob('note_font_size').setValue(fontSize)\nexcept:\n    pass"
  tile_color 0x383838ff
  label <Left>alignment
  note_font_size 50
  xpos -1892
  ypos -309
  bdwidth 780
  bdheight 1151
  addUserKnob {20 F_VFX l BackdropNode}
  addUserKnob {43 text l Text}
  text alignment
  addUserKnob {7 font_size l "Font Size" R 10 100}
  font_size 50
  addUserKnob {4 position l "" -STARTLINE M {Left Center}}
  addUserKnob {26 S01 l " " T " "}
  addUserKnob {22 grow l " <img src=\"F_scalep.png\">" -STARTLINE T "n=nuke.thisNode()\n\ndef grow(node=None,step=50):\n    try:\n        if not node:\n            n=nuke.selectedNode()\n        else:\n            n=node\n            n\['xpos'].setValue(n\['xpos'].getValue()-step)\n            n\['ypos'].setValue(n\['ypos'].getValue()-step)\n            n\['bdwidth'].setValue(n\['bdwidth'].getValue()+step*2)\n            n\['bdheight'].setValue(n\['bdheight'].getValue()+step*2)\n    except:\n        pass\ngrow(n,50)"}
  addUserKnob {22 shrink l " <img src=\"F_scalem.png\">" -STARTLINE T "n=nuke.thisNode()\n\ndef shrink(node=None,step=50):\n    try:\n        if not node:\n            n=nuke.selectedNode()\n        else:\n            n=node\n            n\['xpos'].setValue(n\['xpos'].getValue()+step)\n            n\['ypos'].setValue(n\['ypos'].getValue()+step)\n            n\['bdwidth'].setValue(n\['bdwidth'].getValue()-step*2)\n            n\['bdheight'].setValue(n\['bdheight'].getValue()-step*2)\n    except:\n        pass\nshrink(n,50)"}
  addUserKnob {22 colorandom l " <img src=\"ColorBars.png\">" -STARTLINE T "import colorsys, random\nn=nuke.thisNode()\nR,G,B= colorsys.hsv_to_rgb(random.random(),.1+random.random()*.15,.15+random.random()*.15)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ) )"}
  addUserKnob {22 darkgrey l "<font color=\"#232323\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.0, 0.0, 0.14]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
  addUserKnob {22 lightgrey l "<font color=\"#383838\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.0, 0.0, 0.22]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
  addUserKnob {22 red l "<font color=\"#8c3838\" size=6>■</font>" T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.0, 0.6, 0.55]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n" +STARTLINE}
  addUserKnob {22 orange l "<font color=\"#b28e59\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.1, 0.5, 0.7]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
  addUserKnob {22 yellow l "<font color=\"#ccc766\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.16, 0.5, 0.8]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
  addUserKnob {22 green l "<font color=\"#5d995b\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.33, 0.4, 0.6]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
  addUserKnob {22 cyan l "<font color=\"#72998f\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.46, 0.25, 0.6]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
  addUserKnob {22 blue l "<font color=\"#59687f\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.6, 0.3, 0.5]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
  addUserKnob {22 darkblue l "<font color=\"#63628c\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.67, 0.3, 0.55]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
  addUserKnob {22 magenta l "<font color=\"#927a99\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.8, 0.2, 0.6]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
  addUserKnob {22 pink l "<font color=\"#997a89\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.92, 0.2, 0.6]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
  addUserKnob {26 S02 l " " T " "}
  addUserKnob {26 Ftools l "" +STARTLINE T "<font color=\"#1C1C1C\"> v1.2 - Franklin VFX - 2018"}
 }
 BackdropNode {
  inputs 0
  name BackdropNode3
  knobChanged "try:\n    listenedKnobs = \['text', 'position', 'name']\n    node = nuke.thisNode()\n    name = node.knob('name').value()\n    text = node.knob('text').value()\n    position = node.knob('position').value()\n    position = \"<\" + position + \">\"\n    label = node.knob('label').value()\n    \n    if nuke.thisKnob().name() in listenedKnobs:\n        if text == \"\":\n            if node.knob('position').value() == \"left\":\n                node.knob('label').setValue()\n            else:\n                node.knob('label').setValue(position + name)\n        else:\n            if node.knob('position').value() == \"left\":\n                node.knob('label').setValue(text)\n            else:\n                node.knob('label').setValue(position + text)\n                \n    elif nuke.thisKnob().name() == 'font_size':\n        fontSize = node.knob('font_size').value()\n        node.knob('note_font_size').setValue(fontSize)\nexcept:\n    pass"
  tile_color 0x343941ff
  label "<Left>perspective revealer"
  note_font_size 50
  xpos -635
  ypos 4
  bdwidth 362
  bdheight 518
  addUserKnob {20 F_VFX l BackdropNode}
  addUserKnob {43 text l Text}
  text "perspective revealer"
  addUserKnob {7 font_size l "Font Size" R 10 100}
  font_size 50
  addUserKnob {4 position l "" -STARTLINE M {Left Center}}
  addUserKnob {26 S01 l " " T " "}
  addUserKnob {22 grow l " <img src=\"F_scalep.png\">" -STARTLINE T "n=nuke.thisNode()\n\ndef grow(node=None,step=50):\n    try:\n        if not node:\n            n=nuke.selectedNode()\n        else:\n            n=node\n            n\['xpos'].setValue(n\['xpos'].getValue()-step)\n            n\['ypos'].setValue(n\['ypos'].getValue()-step)\n            n\['bdwidth'].setValue(n\['bdwidth'].getValue()+step*2)\n            n\['bdheight'].setValue(n\['bdheight'].getValue()+step*2)\n    except:\n        pass\ngrow(n,50)"}
  addUserKnob {22 shrink l " <img src=\"F_scalem.png\">" -STARTLINE T "n=nuke.thisNode()\n\ndef shrink(node=None,step=50):\n    try:\n        if not node:\n            n=nuke.selectedNode()\n        else:\n            n=node\n            n\['xpos'].setValue(n\['xpos'].getValue()+step)\n            n\['ypos'].setValue(n\['ypos'].getValue()+step)\n            n\['bdwidth'].setValue(n\['bdwidth'].getValue()-step*2)\n            n\['bdheight'].setValue(n\['bdheight'].getValue()-step*2)\n    except:\n        pass\nshrink(n,50)"}
  addUserKnob {22 colorandom l " <img src=\"ColorBars.png\">" -STARTLINE T "import colorsys, random\nn=nuke.thisNode()\nR,G,B= colorsys.hsv_to_rgb(random.random(),.1+random.random()*.15,.15+random.random()*.15)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ) )"}
  addUserKnob {22 darkgrey l "<font color=\"#232323\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.0, 0.0, 0.14]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
  addUserKnob {22 lightgrey l "<font color=\"#383838\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.0, 0.0, 0.22]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
  addUserKnob {22 red l "<font color=\"#8c3838\" size=6>■</font>" T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.0, 0.6, 0.55]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n" +STARTLINE}
  addUserKnob {22 orange l "<font color=\"#b28e59\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.1, 0.5, 0.7]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
  addUserKnob {22 yellow l "<font color=\"#ccc766\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.16, 0.5, 0.8]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
  addUserKnob {22 green l "<font color=\"#5d995b\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.33, 0.4, 0.6]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
  addUserKnob {22 cyan l "<font color=\"#72998f\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.46, 0.25, 0.6]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
  addUserKnob {22 blue l "<font color=\"#59687f\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.6, 0.3, 0.5]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
  addUserKnob {22 darkblue l "<font color=\"#63628c\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.67, 0.3, 0.55]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
  addUserKnob {22 magenta l "<font color=\"#927a99\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.8, 0.2, 0.6]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
  addUserKnob {22 pink l "<font color=\"#997a89\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.92, 0.2, 0.6]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
  addUserKnob {26 S02 l " " T " "}
  addUserKnob {26 Ftools l "" +STARTLINE T "<font color=\"#1C1C1C\"> v1.2 - Franklin VFX - 2018"}
 }
 CheckerBoard2 {
  inputs 0
  boxsize 204
  name CheckerBoard1
  xpos -1599
  ypos -223
 }
 BlackOutside {
  name BlackOutside1
  xpos -1599
  ypos -151
 }
 Input {
  inputs 0
  name align
  xpos -1804
  ypos -180
  number 1
 }
 Dot {
  name Dot1
  xpos -1770
  ypos -38
 }
 Merge2 {
  inputs 2
  operation plus
  name Merge2
  xpos -1599
  ypos -42
  disable {{parent.EnableCheckerboard==0}}
 }
 Transform {
  scale 0.018
  center {{width/2} {height/2}}
  shutteroffset centred
  name Transform_scaling
  xpos -1599
  ypos 117
 }
 Card3D {
  translate {{"\[if \{\[exists  parent.input0]\} \{return \[value \[topnode parent.input0].name].translate.x\} \{return 0\}]"} {"\[if \{\[exists  parent.input0]\} \{return \[value \[topnode parent.input0].name].translate.y\} \{return 0\}]"} {"\[if \{\[exists  parent.input0]\} \{return \[value \[topnode parent.input0].name].translate.z\} \{return -1\}]"}}
  rotate {{"\[if \{\[exists  parent.input0]\} \{return \[value \[topnode parent.input0].name].rotate.x\} \{return 0\}]"} {"\[if \{\[exists  parent.input0]\} \{return \[value \[topnode parent.input0].name].rotate.y\} \{return 0\}]"} {"\[if \{\[exists  parent.input0]\} \{return \[value \[topnode parent.input0].name].rotate.z\} \{return 0\}]"}}
  scaling {{"\[if \{\[exists  parent.input0]\} \{return \[value \[topnode parent.input0].name].scaling.x\} \{return 1\}]"} {"\[if \{\[exists  parent.input0]\} \{return \[value \[topnode parent.input0].name].scaling.y\} \{return 1\}]"} {"\[if \{\[exists  parent.input0]\} \{return \[value \[topnode parent.input0].name].scaling.z\} \{return 1\}]"}}
  uniform_scale {{"\[if \{\[exists  parent.input0]\} \{return (\[value \[topnode parent.input0].name].uniform_scale*25)\} \{return 25\}]"}}
  shutteroffset centred
  name cCard3D_3
  tile_color 0x7b1d1dff
  label "ref frame: \[value ref]"
  xpos -1599
  ypos 194
  addUserKnob {20 User l parent}
  addUserKnob {22 python_button l "set parent" t "select parent node, and press this button to set the selected node as parent" +INVISIBLE T "n = nuke.selectedNode()\['name'].getValue()\nnuke.thisNode()\['string'].setValue(n)" +STARTLINE}
  addUserKnob {1 string l parent +INVISIBLE}
  string null
  addUserKnob {3 id l "id number"}
  id {{parent.CTimeOffset7.shotnmbr}}
  addUserKnob {3 ref l "ref frame"}
  ref {{parent.CTimeOffset7.time_offset}}
 }
set Nff59500 [stack 0]
 Input {
  inputs 0
  name Card3D
  xpos -1246
  ypos -190
 }
 CopyBBox {
  inputs 2
  name CopyBBox1
  xpos -1246
  ypos 200
 }
 Dot {
  name Dot2
  xpos -1212
  ypos 274
 }
set Nff7c8f0 [stack 0]
 Dot {
  name Dot3
  xpos -1376
  ypos 274
 }
 Remove {
  name Remove2
  xpos -1410
  ypos 492
 }
push $Nff59500
 Merge2 {
  inputs 2
  operation plus
  bbox B
  name Merge4
  xpos -1599
  ypos 498
 }
 Transform {
  translate {{"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].translate.x\}]"} {"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].translate.y\}]"}}
  rotate {{"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].rotate\}]"}}
  scale {{"\[if \{\[value parent_gun]==\"null\"\} \{return 1\} \{return \[value parent_gun].scale\}]"}}
  center {{"\[if \{\[value parent_gun]==\"null\"\} \{return root.width/2\} \{return \[value parent_gun].center.x\}]"} {"\[if \{\[value parent_gun]==\"null\"\} \{return root.height/2\} \{return \[value parent_gun].center.y\}]"}}
  name Transform_GUNMatchMove1
  label "(child of \[value string])\n"
  xpos -1599
  ypos 580
  addUserKnob {20 User l parent}
  addUserKnob {22 python_button l "set parent" t "select parent node, and press this button to set the selected node as parent" T "n = nuke.selectedNode()\['name'].getValue()\nnuke.thisNode()\['string'].setValue(n)" +STARTLINE}
  addUserKnob {1 string l parent}
  string Transform_MatchMove10
  addUserKnob {3 ref +INVISIBLE}
  ref {{parent.cCard3D_8.ref}}
 }
 Transform {
  translate {{"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return -((root.width/2)-(\[value parent_gun].center.x(1)+\[value parent_gun].translate.x(1)))\}]"} {"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return -((root.height/2)-(\[value parent_gun].center.y(1)+\[value parent_gun].translate.y(1)))\}]"}}
  name Transform_GUNMatchMove3
  label "alignment correction"
  xpos -1599
  ypos 640
  addUserKnob {20 User l parent}
  addUserKnob {22 python_button l "set parent" t "select parent node, and press this button to set the selected node as parent" T "n = nuke.selectedNode()\['name'].getValue()\nnuke.thisNode()\['string'].setValue(n)" +STARTLINE}
  addUserKnob {1 string l parent}
  string Transform_MatchMove10
  addUserKnob {3 ref +INVISIBLE}
  ref {{parent.cCard3D_8.ref}}
 }
 Dot {
  name Dot4
  xpos -1565
  ypos 1014
 }
 Group {
  inputs 0
  name muzzleflash_maker_FLASH
  xpos -829
  ypos -189
  disable {{((ActivateFrontFlash+ActivateSideFlash)==0)+(mode==0)}}
  addUserKnob {20 User}
  addUserKnob {6 firing +INVISIBLE +STARTLINE}
  firing {{"gunshot1.cSwitch_3.shot\n+\ngunshot2.cSwitch_3.shot\n+\ngunshot3.cSwitch_3.shot\n+\ngunshot4.cSwitch_3.shot\n+\ngunshot5.cSwitch_3.shot\n+\ngunshot6.cSwitch_3.shot\n+\ngunshot7.cSwitch_3.shot\n+\ngunshot8.cSwitch_3.shot\n+\ngunshot9.cSwitch_3.shot\n+\ngunshot10.cSwitch_3.shot\n+\ngunshot11.cSwitch_3.shot\n+\ngunshot12.cSwitch_3.shot"}}
  addUserKnob {26 _1 l "" +STARTLINE T "\n\n"}
  addUserKnob {26 _2 l "" +STARTLINE T "<i>All the settings are in the properties pannel of the main group"}
 }
  BackdropNode {
   inputs 0
   name BackdropNode2
   knobChanged "try:\n    listenedKnobs = \['text', 'position', 'name']\n    node = nuke.thisNode()\n    name = node.knob('name').value()\n    text = node.knob('text').value()\n    position = node.knob('position').value()\n    position = \"<\" + position + \">\"\n    label = node.knob('label').value()\n    \n    if nuke.thisKnob().name() in listenedKnobs:\n        if text == \"\":\n            if node.knob('position').value() == \"left\":\n                node.knob('label').setValue()\n            else:\n                node.knob('label').setValue(position + name)\n        else:\n            if node.knob('position').value() == \"left\":\n                node.knob('label').setValue(text)\n            else:\n                node.knob('label').setValue(position + text)\n                \n    elif nuke.thisKnob().name() == 'font_size':\n        fontSize = node.knob('font_size').value()\n        node.knob('note_font_size').setValue(fontSize)\nexcept:\n    pass"
   tile_color 0x374a63ff
   label <Center>ASSETS
   note_font_size 200
   xpos 3194
   ypos -3419
   bdwidth 7929
   bdheight 1212
   z_order -4
   addUserKnob {20 F_VFX l BackdropNode}
   addUserKnob {43 text l Text}
   text ASSETS
   addUserKnob {7 font_size l "Font Size" R 10 100}
   font_size 200
   addUserKnob {4 position l "" -STARTLINE M {Left Center}}
   position Center
   addUserKnob {26 S01 l " " T " "}
   addUserKnob {22 grow l " <img src=\"F_scalep.png\">" -STARTLINE T "n=nuke.thisNode()\n\ndef grow(node=None,step=50):\n    try:\n        if not node:\n            n=nuke.selectedNode()\n        else:\n            n=node\n            n\['xpos'].setValue(n\['xpos'].getValue()-step)\n            n\['ypos'].setValue(n\['ypos'].getValue()-step)\n            n\['bdwidth'].setValue(n\['bdwidth'].getValue()+step*2)\n            n\['bdheight'].setValue(n\['bdheight'].getValue()+step*2)\n    except:\n        pass\ngrow(n,50)"}
   addUserKnob {22 shrink l " <img src=\"F_scalem.png\">" -STARTLINE T "n=nuke.thisNode()\n\ndef shrink(node=None,step=50):\n    try:\n        if not node:\n            n=nuke.selectedNode()\n        else:\n            n=node\n            n\['xpos'].setValue(n\['xpos'].getValue()+step)\n            n\['ypos'].setValue(n\['ypos'].getValue()+step)\n            n\['bdwidth'].setValue(n\['bdwidth'].getValue()-step*2)\n            n\['bdheight'].setValue(n\['bdheight'].getValue()-step*2)\n    except:\n        pass\nshrink(n,50)"}
   addUserKnob {22 colorandom l " <img src=\"ColorBars.png\">" -STARTLINE T "import colorsys, random\nn=nuke.thisNode()\nR,G,B= colorsys.hsv_to_rgb(random.random(),.1+random.random()*.15,.15+random.random()*.15)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ) )"}
   addUserKnob {22 darkgrey l "<font color=\"#232323\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.0, 0.0, 0.14]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
   addUserKnob {22 lightgrey l "<font color=\"#383838\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.0, 0.0, 0.22]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
   addUserKnob {22 red l "<font color=\"#8c3838\" size=6>■</font>" T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.0, 0.6, 0.55]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n" +STARTLINE}
   addUserKnob {22 orange l "<font color=\"#b28e59\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.1, 0.5, 0.7]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
   addUserKnob {22 yellow l "<font color=\"#ccc766\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.16, 0.5, 0.8]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
   addUserKnob {22 green l "<font color=\"#5d995b\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.33, 0.4, 0.6]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
   addUserKnob {22 cyan l "<font color=\"#72998f\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.46, 0.25, 0.6]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
   addUserKnob {22 blue l "<font color=\"#59687f\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.6, 0.3, 0.5]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
   addUserKnob {22 darkblue l "<font color=\"#63628c\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.67, 0.3, 0.55]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
   addUserKnob {22 magenta l "<font color=\"#927a99\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.8, 0.2, 0.6]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
   addUserKnob {22 pink l "<font color=\"#997a89\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.92, 0.2, 0.6]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
   addUserKnob {26 S02 l " " T " "}
   addUserKnob {26 Ftools l "" +STARTLINE T "<font color=\"#1C1C1C\"> v1.2 - Franklin VFX - 2018"}
  }
  BackdropNode {
   inputs 0
   name BackdropNode24
   knobChanged "try:\n    listenedKnobs = \['text', 'position', 'name']\n    node = nuke.thisNode()\n    name = node.knob('name').value()\n    text = node.knob('text').value()\n    position = node.knob('position').value()\n    position = \"<\" + position + \">\"\n    label = node.knob('label').value()\n    \n    if nuke.thisKnob().name() in listenedKnobs:\n        if text == \"\":\n            if node.knob('position').value() == \"left\":\n                node.knob('label').setValue()\n            else:\n                node.knob('label').setValue(position + name)\n        else:\n            if node.knob('position').value() == \"left\":\n                node.knob('label').setValue(text)\n            else:\n                node.knob('label').setValue(position + text)\n                \n    elif nuke.thisKnob().name() == 'font_size':\n        fontSize = node.knob('font_size').value()\n        node.knob('note_font_size').setValue(fontSize)\nexcept:\n    pass"
   tile_color 0x7c7c7cff
   label <Center>FRONT
   note_font_size 50
   xpos 7353
   ypos -3062
   bdwidth 3669
   bdheight 761
   z_order -1
   addUserKnob {20 F_VFX l BackdropNode}
   addUserKnob {43 text l Text}
   text FRONT
   addUserKnob {7 font_size l "Font Size" R 10 100}
   font_size 50
   addUserKnob {4 position l "" -STARTLINE M {Left Center}}
   position Center
   addUserKnob {26 S01 l " " T " "}
   addUserKnob {22 grow l " <img src=\"F_scalep.png\">" -STARTLINE T "n=nuke.thisNode()\n\ndef grow(node=None,step=50):\n    try:\n        if not node:\n            n=nuke.selectedNode()\n        else:\n            n=node\n            n\['xpos'].setValue(n\['xpos'].getValue()-step)\n            n\['ypos'].setValue(n\['ypos'].getValue()-step)\n            n\['bdwidth'].setValue(n\['bdwidth'].getValue()+step*2)\n            n\['bdheight'].setValue(n\['bdheight'].getValue()+step*2)\n    except:\n        pass\ngrow(n,50)"}
   addUserKnob {22 shrink l " <img src=\"F_scalem.png\">" -STARTLINE T "n=nuke.thisNode()\n\ndef shrink(node=None,step=50):\n    try:\n        if not node:\n            n=nuke.selectedNode()\n        else:\n            n=node\n            n\['xpos'].setValue(n\['xpos'].getValue()+step)\n            n\['ypos'].setValue(n\['ypos'].getValue()+step)\n            n\['bdwidth'].setValue(n\['bdwidth'].getValue()-step*2)\n            n\['bdheight'].setValue(n\['bdheight'].getValue()-step*2)\n    except:\n        pass\nshrink(n,50)"}
   addUserKnob {22 colorandom l " <img src=\"ColorBars.png\">" -STARTLINE T "import colorsys, random\nn=nuke.thisNode()\nR,G,B= colorsys.hsv_to_rgb(random.random(),.1+random.random()*.15,.15+random.random()*.15)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ) )"}
   addUserKnob {22 darkgrey l "<font color=\"#232323\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.0, 0.0, 0.14]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
   addUserKnob {22 lightgrey l "<font color=\"#383838\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.0, 0.0, 0.22]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
   addUserKnob {22 red l "<font color=\"#8c3838\" size=6>■</font>" T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.0, 0.6, 0.55]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n" +STARTLINE}
   addUserKnob {22 orange l "<font color=\"#b28e59\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.1, 0.5, 0.7]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
   addUserKnob {22 yellow l "<font color=\"#ccc766\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.16, 0.5, 0.8]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
   addUserKnob {22 green l "<font color=\"#5d995b\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.33, 0.4, 0.6]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
   addUserKnob {22 cyan l "<font color=\"#72998f\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.46, 0.25, 0.6]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
   addUserKnob {22 blue l "<font color=\"#59687f\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.6, 0.3, 0.5]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
   addUserKnob {22 darkblue l "<font color=\"#63628c\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.67, 0.3, 0.55]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
   addUserKnob {22 magenta l "<font color=\"#927a99\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.8, 0.2, 0.6]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
   addUserKnob {22 pink l "<font color=\"#997a89\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.92, 0.2, 0.6]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
   addUserKnob {26 S02 l " " T " "}
   addUserKnob {26 Ftools l "" +STARTLINE T "<font color=\"#1C1C1C\"> v1.2 - Franklin VFX - 2018"}
  }
  BackdropNode {
   inputs 0
   name BackdropNode3
   knobChanged "try:\n    listenedKnobs = \['text', 'position', 'name']\n    node = nuke.thisNode()\n    name = node.knob('name').value()\n    text = node.knob('text').value()\n    position = node.knob('position').value()\n    position = \"<\" + position + \">\"\n    label = node.knob('label').value()\n    \n    if nuke.thisKnob().name() in listenedKnobs:\n        if text == \"\":\n            if node.knob('position').value() == \"left\":\n                node.knob('label').setValue()\n            else:\n                node.knob('label').setValue(position + name)\n        else:\n            if node.knob('position').value() == \"left\":\n                node.knob('label').setValue(text)\n            else:\n                node.knob('label').setValue(position + text)\n                \n    elif nuke.thisKnob().name() == 'font_size':\n        fontSize = node.knob('font_size').value()\n        node.knob('note_font_size').setValue(fontSize)\nexcept:\n    pass"
   tile_color 0x7c7c7cff
   label "<Center>SIDE & TOP"
   note_font_size 50
   xpos 3307
   ypos -3105
   bdwidth 3566
   bdheight 764
   z_order -1
   addUserKnob {20 F_VFX l BackdropNode}
   addUserKnob {43 text l Text}
   text "SIDE & TOP"
   addUserKnob {7 font_size l "Font Size" R 10 100}
   font_size 50
   addUserKnob {4 position l "" -STARTLINE M {Left Center}}
   position Center
   addUserKnob {26 S01 l " " T " "}
   addUserKnob {22 grow l " <img src=\"F_scalep.png\">" -STARTLINE T "n=nuke.thisNode()\n\ndef grow(node=None,step=50):\n    try:\n        if not node:\n            n=nuke.selectedNode()\n        else:\n            n=node\n            n\['xpos'].setValue(n\['xpos'].getValue()-step)\n            n\['ypos'].setValue(n\['ypos'].getValue()-step)\n            n\['bdwidth'].setValue(n\['bdwidth'].getValue()+step*2)\n            n\['bdheight'].setValue(n\['bdheight'].getValue()+step*2)\n    except:\n        pass\ngrow(n,50)"}
   addUserKnob {22 shrink l " <img src=\"F_scalem.png\">" -STARTLINE T "n=nuke.thisNode()\n\ndef shrink(node=None,step=50):\n    try:\n        if not node:\n            n=nuke.selectedNode()\n        else:\n            n=node\n            n\['xpos'].setValue(n\['xpos'].getValue()+step)\n            n\['ypos'].setValue(n\['ypos'].getValue()+step)\n            n\['bdwidth'].setValue(n\['bdwidth'].getValue()-step*2)\n            n\['bdheight'].setValue(n\['bdheight'].getValue()-step*2)\n    except:\n        pass\nshrink(n,50)"}
   addUserKnob {22 colorandom l " <img src=\"ColorBars.png\">" -STARTLINE T "import colorsys, random\nn=nuke.thisNode()\nR,G,B= colorsys.hsv_to_rgb(random.random(),.1+random.random()*.15,.15+random.random()*.15)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ) )"}
   addUserKnob {22 darkgrey l "<font color=\"#232323\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.0, 0.0, 0.14]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
   addUserKnob {22 lightgrey l "<font color=\"#383838\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.0, 0.0, 0.22]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
   addUserKnob {22 red l "<font color=\"#8c3838\" size=6>■</font>" T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.0, 0.6, 0.55]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n" +STARTLINE}
   addUserKnob {22 orange l "<font color=\"#b28e59\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.1, 0.5, 0.7]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
   addUserKnob {22 yellow l "<font color=\"#ccc766\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.16, 0.5, 0.8]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
   addUserKnob {22 green l "<font color=\"#5d995b\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.33, 0.4, 0.6]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
   addUserKnob {22 cyan l "<font color=\"#72998f\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.46, 0.25, 0.6]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
   addUserKnob {22 blue l "<font color=\"#59687f\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.6, 0.3, 0.5]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
   addUserKnob {22 darkblue l "<font color=\"#63628c\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.67, 0.3, 0.55]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
   addUserKnob {22 magenta l "<font color=\"#927a99\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.8, 0.2, 0.6]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
   addUserKnob {22 pink l "<font color=\"#997a89\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.92, 0.2, 0.6]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
   addUserKnob {26 S02 l " " T " "}
   addUserKnob {26 Ftools l "" +STARTLINE T "<font color=\"#1C1C1C\"> v1.2 - Franklin VFX - 2018"}
  }
  BackdropNode {
   inputs 0
   name BackdropNode1
   knobChanged "try:\n    listenedKnobs = \['text', 'position', 'name']\n    node = nuke.thisNode()\n    name = node.knob('name').value()\n    text = node.knob('text').value()\n    position = node.knob('position').value()\n    position = \"<\" + position + \">\"\n    label = node.knob('label').value()\n    \n    if nuke.thisKnob().name() in listenedKnobs:\n        if text == \"\":\n            if node.knob('position').value() == \"left\":\n                node.knob('label').setValue()\n            else:\n                node.knob('label').setValue(position + name)\n        else:\n            if node.knob('position').value() == \"left\":\n                node.knob('label').setValue(text)\n            else:\n                node.knob('label').setValue(position + text)\n                \n    elif nuke.thisKnob().name() == 'font_size':\n        fontSize = node.knob('font_size').value()\n        node.knob('note_font_size').setValue(fontSize)\nexcept:\n    pass"
   tile_color 0x232323ff
   label <Left>muzzleflashes
   note_font_size 50
   xpos 7770
   ypos -1210
   bdwidth 2699
   bdheight 707
   addUserKnob {20 F_VFX l BackdropNode}
   addUserKnob {43 text l Text}
   text muzzleflashes
   addUserKnob {7 font_size l "Font Size" R 10 100}
   font_size 50
   addUserKnob {4 position l "" -STARTLINE M {Left Center}}
   addUserKnob {26 S01 l " " T " "}
   addUserKnob {22 grow l " <img src=\"F_scalep.png\">" -STARTLINE T "n=nuke.thisNode()\n\ndef grow(node=None,step=50):\n    try:\n        if not node:\n            n=nuke.selectedNode()\n        else:\n            n=node\n            n\['xpos'].setValue(n\['xpos'].getValue()-step)\n            n\['ypos'].setValue(n\['ypos'].getValue()-step)\n            n\['bdwidth'].setValue(n\['bdwidth'].getValue()+step*2)\n            n\['bdheight'].setValue(n\['bdheight'].getValue()+step*2)\n    except:\n        pass\ngrow(n,50)"}
   addUserKnob {22 shrink l " <img src=\"F_scalem.png\">" -STARTLINE T "n=nuke.thisNode()\n\ndef shrink(node=None,step=50):\n    try:\n        if not node:\n            n=nuke.selectedNode()\n        else:\n            n=node\n            n\['xpos'].setValue(n\['xpos'].getValue()+step)\n            n\['ypos'].setValue(n\['ypos'].getValue()+step)\n            n\['bdwidth'].setValue(n\['bdwidth'].getValue()-step*2)\n            n\['bdheight'].setValue(n\['bdheight'].getValue()-step*2)\n    except:\n        pass\nshrink(n,50)"}
   addUserKnob {22 colorandom l " <img src=\"ColorBars.png\">" -STARTLINE T "import colorsys, random\nn=nuke.thisNode()\nR,G,B= colorsys.hsv_to_rgb(random.random(),.1+random.random()*.15,.15+random.random()*.15)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ) )"}
   addUserKnob {22 darkgrey l "<font color=\"#232323\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.0, 0.0, 0.14]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
   addUserKnob {22 lightgrey l "<font color=\"#383838\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.0, 0.0, 0.22]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
   addUserKnob {22 red l "<font color=\"#8c3838\" size=6>■</font>" T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.0, 0.6, 0.55]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n" +STARTLINE}
   addUserKnob {22 orange l "<font color=\"#b28e59\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.1, 0.5, 0.7]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
   addUserKnob {22 yellow l "<font color=\"#ccc766\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.16, 0.5, 0.8]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
   addUserKnob {22 green l "<font color=\"#5d995b\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.33, 0.4, 0.6]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
   addUserKnob {22 cyan l "<font color=\"#72998f\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.46, 0.25, 0.6]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
   addUserKnob {22 blue l "<font color=\"#59687f\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.6, 0.3, 0.5]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
   addUserKnob {22 darkblue l "<font color=\"#63628c\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.67, 0.3, 0.55]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
   addUserKnob {22 magenta l "<font color=\"#927a99\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.8, 0.2, 0.6]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
   addUserKnob {22 pink l "<font color=\"#997a89\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.92, 0.2, 0.6]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
   addUserKnob {26 S02 l " " T " "}
   addUserKnob {26 Ftools l "" +STARTLINE T "<font color=\"#1C1C1C\"> v1.2 - Franklin VFX - 2018"}
  }
  BackdropNode {
   inputs 0
   name BackdropNode13
   knobChanged "try:\n    listenedKnobs = \['text', 'position', 'name']\n    node = nuke.thisNode()\n    name = node.knob('name').value()\n    text = node.knob('text').value()\n    position = node.knob('position').value()\n    position = \"<\" + position + \">\"\n    label = node.knob('label').value()\n    \n    if nuke.thisKnob().name() in listenedKnobs:\n        if text == \"\":\n            if node.knob('position').value() == \"left\":\n                node.knob('label').setValue()\n            else:\n                node.knob('label').setValue(position + name)\n        else:\n            if node.knob('position').value() == \"left\":\n                node.knob('label').setValue(text)\n            else:\n                node.knob('label').setValue(position + text)\n                \n    elif nuke.thisKnob().name() == 'font_size':\n        fontSize = node.knob('font_size').value()\n        node.knob('note_font_size').setValue(fontSize)\nexcept:\n    pass"
   tile_color 0x232323ff
   label "<Left>\[1] colt45"
   note_font_size 50
   xpos 7761
   ypos -2961
   bdwidth 297
   bdheight 396
   addUserKnob {20 F_VFX l BackdropNode}
   addUserKnob {43 text l Text}
   text "\[1] colt45"
   addUserKnob {7 font_size l "Font Size" R 10 100}
   font_size 50
   addUserKnob {4 position l "" -STARTLINE M {Left Center}}
   addUserKnob {26 S01 l " " T " "}
   addUserKnob {22 grow l " <img src=\"F_scalep.png\">" -STARTLINE T "n=nuke.thisNode()\n\ndef grow(node=None,step=50):\n    try:\n        if not node:\n            n=nuke.selectedNode()\n        else:\n            n=node\n            n\['xpos'].setValue(n\['xpos'].getValue()-step)\n            n\['ypos'].setValue(n\['ypos'].getValue()-step)\n            n\['bdwidth'].setValue(n\['bdwidth'].getValue()+step*2)\n            n\['bdheight'].setValue(n\['bdheight'].getValue()+step*2)\n    except:\n        pass\ngrow(n,50)"}
   addUserKnob {22 shrink l " <img src=\"F_scalem.png\">" -STARTLINE T "n=nuke.thisNode()\n\ndef shrink(node=None,step=50):\n    try:\n        if not node:\n            n=nuke.selectedNode()\n        else:\n            n=node\n            n\['xpos'].setValue(n\['xpos'].getValue()+step)\n            n\['ypos'].setValue(n\['ypos'].getValue()+step)\n            n\['bdwidth'].setValue(n\['bdwidth'].getValue()-step*2)\n            n\['bdheight'].setValue(n\['bdheight'].getValue()-step*2)\n    except:\n        pass\nshrink(n,50)"}
   addUserKnob {22 colorandom l " <img src=\"ColorBars.png\">" -STARTLINE T "import colorsys, random\nn=nuke.thisNode()\nR,G,B= colorsys.hsv_to_rgb(random.random(),.1+random.random()*.15,.15+random.random()*.15)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ) )"}
   addUserKnob {22 darkgrey l "<font color=\"#232323\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.0, 0.0, 0.14]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
   addUserKnob {22 lightgrey l "<font color=\"#383838\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.0, 0.0, 0.22]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
   addUserKnob {22 red l "<font color=\"#8c3838\" size=6>■</font>" T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.0, 0.6, 0.55]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n" +STARTLINE}
   addUserKnob {22 orange l "<font color=\"#b28e59\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.1, 0.5, 0.7]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
   addUserKnob {22 yellow l "<font color=\"#ccc766\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.16, 0.5, 0.8]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
   addUserKnob {22 green l "<font color=\"#5d995b\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.33, 0.4, 0.6]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
   addUserKnob {22 cyan l "<font color=\"#72998f\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.46, 0.25, 0.6]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
   addUserKnob {22 blue l "<font color=\"#59687f\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.6, 0.3, 0.5]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
   addUserKnob {22 darkblue l "<font color=\"#63628c\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.67, 0.3, 0.55]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
   addUserKnob {22 magenta l "<font color=\"#927a99\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.8, 0.2, 0.6]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
   addUserKnob {22 pink l "<font color=\"#997a89\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.92, 0.2, 0.6]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
   addUserKnob {26 S02 l " " T " "}
   addUserKnob {26 Ftools l "" +STARTLINE T "<font color=\"#1C1C1C\"> v1.2 - Franklin VFX - 2018"}
  }
  BackdropNode {
   inputs 0
   name BackdropNode16
   knobChanged "try:\n    listenedKnobs = \['text', 'position', 'name']\n    node = nuke.thisNode()\n    name = node.knob('name').value()\n    text = node.knob('text').value()\n    position = node.knob('position').value()\n    position = \"<\" + position + \">\"\n    label = node.knob('label').value()\n    \n    if nuke.thisKnob().name() in listenedKnobs:\n        if text == \"\":\n            if node.knob('position').value() == \"left\":\n                node.knob('label').setValue()\n            else:\n                node.knob('label').setValue(position + name)\n        else:\n            if node.knob('position').value() == \"left\":\n                node.knob('label').setValue(text)\n            else:\n                node.knob('label').setValue(position + text)\n                \n    elif nuke.thisKnob().name() == 'font_size':\n        fontSize = node.knob('font_size').value()\n        node.knob('note_font_size').setValue(fontSize)\nexcept:\n    pass"
   tile_color 0x232323ff
   label "<Left>\[3] AR-15"
   note_font_size 50
   xpos 8497
   ypos -2953
   bdwidth 297
   bdheight 396
   addUserKnob {20 F_VFX l BackdropNode}
   addUserKnob {43 text l Text}
   text "\[3] AR-15"
   addUserKnob {7 font_size l "Font Size" R 10 100}
   font_size 50
   addUserKnob {4 position l "" -STARTLINE M {Left Center}}
   addUserKnob {26 S01 l " " T " "}
   addUserKnob {22 grow l " <img src=\"F_scalep.png\">" -STARTLINE T "n=nuke.thisNode()\n\ndef grow(node=None,step=50):\n    try:\n        if not node:\n            n=nuke.selectedNode()\n        else:\n            n=node\n            n\['xpos'].setValue(n\['xpos'].getValue()-step)\n            n\['ypos'].setValue(n\['ypos'].getValue()-step)\n            n\['bdwidth'].setValue(n\['bdwidth'].getValue()+step*2)\n            n\['bdheight'].setValue(n\['bdheight'].getValue()+step*2)\n    except:\n        pass\ngrow(n,50)"}
   addUserKnob {22 shrink l " <img src=\"F_scalem.png\">" -STARTLINE T "n=nuke.thisNode()\n\ndef shrink(node=None,step=50):\n    try:\n        if not node:\n            n=nuke.selectedNode()\n        else:\n            n=node\n            n\['xpos'].setValue(n\['xpos'].getValue()+step)\n            n\['ypos'].setValue(n\['ypos'].getValue()+step)\n            n\['bdwidth'].setValue(n\['bdwidth'].getValue()-step*2)\n            n\['bdheight'].setValue(n\['bdheight'].getValue()-step*2)\n    except:\n        pass\nshrink(n,50)"}
   addUserKnob {22 colorandom l " <img src=\"ColorBars.png\">" -STARTLINE T "import colorsys, random\nn=nuke.thisNode()\nR,G,B= colorsys.hsv_to_rgb(random.random(),.1+random.random()*.15,.15+random.random()*.15)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ) )"}
   addUserKnob {22 darkgrey l "<font color=\"#232323\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.0, 0.0, 0.14]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
   addUserKnob {22 lightgrey l "<font color=\"#383838\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.0, 0.0, 0.22]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
   addUserKnob {22 red l "<font color=\"#8c3838\" size=6>■</font>" T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.0, 0.6, 0.55]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n" +STARTLINE}
   addUserKnob {22 orange l "<font color=\"#b28e59\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.1, 0.5, 0.7]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
   addUserKnob {22 yellow l "<font color=\"#ccc766\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.16, 0.5, 0.8]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
   addUserKnob {22 green l "<font color=\"#5d995b\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.33, 0.4, 0.6]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
   addUserKnob {22 cyan l "<font color=\"#72998f\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.46, 0.25, 0.6]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
   addUserKnob {22 blue l "<font color=\"#59687f\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.6, 0.3, 0.5]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
   addUserKnob {22 darkblue l "<font color=\"#63628c\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.67, 0.3, 0.55]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
   addUserKnob {22 magenta l "<font color=\"#927a99\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.8, 0.2, 0.6]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
   addUserKnob {22 pink l "<font color=\"#997a89\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.92, 0.2, 0.6]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
   addUserKnob {26 S02 l " " T " "}
   addUserKnob {26 Ftools l "" +STARTLINE T "<font color=\"#1C1C1C\"> v1.2 - Franklin VFX - 2018"}
  }
  BackdropNode {
   inputs 0
   name BackdropNode17
   knobChanged "try:\n    listenedKnobs = \['text', 'position', 'name']\n    node = nuke.thisNode()\n    name = node.knob('name').value()\n    text = node.knob('text').value()\n    position = node.knob('position').value()\n    position = \"<\" + position + \">\"\n    label = node.knob('label').value()\n    \n    if nuke.thisKnob().name() in listenedKnobs:\n        if text == \"\":\n            if node.knob('position').value() == \"left\":\n                node.knob('label').setValue()\n            else:\n                node.knob('label').setValue(position + name)\n        else:\n            if node.knob('position').value() == \"left\":\n                node.knob('label').setValue(text)\n            else:\n                node.knob('label').setValue(position + text)\n                \n    elif nuke.thisKnob().name() == 'font_size':\n        fontSize = node.knob('font_size').value()\n        node.knob('note_font_size').setValue(fontSize)\nexcept:\n    pass"
   tile_color 0x232323ff
   label "<Left>\[2] AK"
   note_font_size 50
   xpos 8121
   ypos -2960
   bdwidth 297
   bdheight 396
   addUserKnob {20 F_VFX l BackdropNode}
   addUserKnob {43 text l Text}
   text "\[2] AK"
   addUserKnob {7 font_size l "Font Size" R 10 100}
   font_size 50
   addUserKnob {4 position l "" -STARTLINE M {Left Center}}
   addUserKnob {26 S01 l " " T " "}
   addUserKnob {22 grow l " <img src=\"F_scalep.png\">" -STARTLINE T "n=nuke.thisNode()\n\ndef grow(node=None,step=50):\n    try:\n        if not node:\n            n=nuke.selectedNode()\n        else:\n            n=node\n            n\['xpos'].setValue(n\['xpos'].getValue()-step)\n            n\['ypos'].setValue(n\['ypos'].getValue()-step)\n            n\['bdwidth'].setValue(n\['bdwidth'].getValue()+step*2)\n            n\['bdheight'].setValue(n\['bdheight'].getValue()+step*2)\n    except:\n        pass\ngrow(n,50)"}
   addUserKnob {22 shrink l " <img src=\"F_scalem.png\">" -STARTLINE T "n=nuke.thisNode()\n\ndef shrink(node=None,step=50):\n    try:\n        if not node:\n            n=nuke.selectedNode()\n        else:\n            n=node\n            n\['xpos'].setValue(n\['xpos'].getValue()+step)\n            n\['ypos'].setValue(n\['ypos'].getValue()+step)\n            n\['bdwidth'].setValue(n\['bdwidth'].getValue()-step*2)\n            n\['bdheight'].setValue(n\['bdheight'].getValue()-step*2)\n    except:\n        pass\nshrink(n,50)"}
   addUserKnob {22 colorandom l " <img src=\"ColorBars.png\">" -STARTLINE T "import colorsys, random\nn=nuke.thisNode()\nR,G,B= colorsys.hsv_to_rgb(random.random(),.1+random.random()*.15,.15+random.random()*.15)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ) )"}
   addUserKnob {22 darkgrey l "<font color=\"#232323\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.0, 0.0, 0.14]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
   addUserKnob {22 lightgrey l "<font color=\"#383838\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.0, 0.0, 0.22]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
   addUserKnob {22 red l "<font color=\"#8c3838\" size=6>■</font>" T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.0, 0.6, 0.55]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n" +STARTLINE}
   addUserKnob {22 orange l "<font color=\"#b28e59\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.1, 0.5, 0.7]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
   addUserKnob {22 yellow l "<font color=\"#ccc766\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.16, 0.5, 0.8]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
   addUserKnob {22 green l "<font color=\"#5d995b\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.33, 0.4, 0.6]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
   addUserKnob {22 cyan l "<font color=\"#72998f\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.46, 0.25, 0.6]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
   addUserKnob {22 blue l "<font color=\"#59687f\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.6, 0.3, 0.5]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
   addUserKnob {22 darkblue l "<font color=\"#63628c\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.67, 0.3, 0.55]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
   addUserKnob {22 magenta l "<font color=\"#927a99\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.8, 0.2, 0.6]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
   addUserKnob {22 pink l "<font color=\"#997a89\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.92, 0.2, 0.6]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
   addUserKnob {26 S02 l " " T " "}
   addUserKnob {26 Ftools l "" +STARTLINE T "<font color=\"#1C1C1C\"> v1.2 - Franklin VFX - 2018"}
  }
  BackdropNode {
   inputs 0
   name BackdropNode18
   knobChanged "try:\n    listenedKnobs = \['text', 'position', 'name']\n    node = nuke.thisNode()\n    name = node.knob('name').value()\n    text = node.knob('text').value()\n    position = node.knob('position').value()\n    position = \"<\" + position + \">\"\n    label = node.knob('label').value()\n    \n    if nuke.thisKnob().name() in listenedKnobs:\n        if text == \"\":\n            if node.knob('position').value() == \"left\":\n                node.knob('label').setValue()\n            else:\n                node.knob('label').setValue(position + name)\n        else:\n            if node.knob('position').value() == \"left\":\n                node.knob('label').setValue(text)\n            else:\n                node.knob('label').setValue(position + text)\n                \n    elif nuke.thisKnob().name() == 'font_size':\n        fontSize = node.knob('font_size').value()\n        node.knob('note_font_size').setValue(fontSize)\nexcept:\n    pass"
   tile_color 0x232323ff
   label "<Left>\[4] G2"
   note_font_size 50
   xpos 8873
   ypos -2960
   bdwidth 297
   bdheight 396
   addUserKnob {20 F_VFX l BackdropNode}
   addUserKnob {43 text l Text}
   text "\[4] G2"
   addUserKnob {7 font_size l "Font Size" R 10 100}
   font_size 50
   addUserKnob {4 position l "" -STARTLINE M {Left Center}}
   addUserKnob {26 S01 l " " T " "}
   addUserKnob {22 grow l " <img src=\"F_scalep.png\">" -STARTLINE T "n=nuke.thisNode()\n\ndef grow(node=None,step=50):\n    try:\n        if not node:\n            n=nuke.selectedNode()\n        else:\n            n=node\n            n\['xpos'].setValue(n\['xpos'].getValue()-step)\n            n\['ypos'].setValue(n\['ypos'].getValue()-step)\n            n\['bdwidth'].setValue(n\['bdwidth'].getValue()+step*2)\n            n\['bdheight'].setValue(n\['bdheight'].getValue()+step*2)\n    except:\n        pass\ngrow(n,50)"}
   addUserKnob {22 shrink l " <img src=\"F_scalem.png\">" -STARTLINE T "n=nuke.thisNode()\n\ndef shrink(node=None,step=50):\n    try:\n        if not node:\n            n=nuke.selectedNode()\n        else:\n            n=node\n            n\['xpos'].setValue(n\['xpos'].getValue()+step)\n            n\['ypos'].setValue(n\['ypos'].getValue()+step)\n            n\['bdwidth'].setValue(n\['bdwidth'].getValue()-step*2)\n            n\['bdheight'].setValue(n\['bdheight'].getValue()-step*2)\n    except:\n        pass\nshrink(n,50)"}
   addUserKnob {22 colorandom l " <img src=\"ColorBars.png\">" -STARTLINE T "import colorsys, random\nn=nuke.thisNode()\nR,G,B= colorsys.hsv_to_rgb(random.random(),.1+random.random()*.15,.15+random.random()*.15)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ) )"}
   addUserKnob {22 darkgrey l "<font color=\"#232323\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.0, 0.0, 0.14]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
   addUserKnob {22 lightgrey l "<font color=\"#383838\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.0, 0.0, 0.22]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
   addUserKnob {22 red l "<font color=\"#8c3838\" size=6>■</font>" T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.0, 0.6, 0.55]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n" +STARTLINE}
   addUserKnob {22 orange l "<font color=\"#b28e59\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.1, 0.5, 0.7]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
   addUserKnob {22 yellow l "<font color=\"#ccc766\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.16, 0.5, 0.8]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
   addUserKnob {22 green l "<font color=\"#5d995b\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.33, 0.4, 0.6]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
   addUserKnob {22 cyan l "<font color=\"#72998f\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.46, 0.25, 0.6]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
   addUserKnob {22 blue l "<font color=\"#59687f\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.6, 0.3, 0.5]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
   addUserKnob {22 darkblue l "<font color=\"#63628c\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.67, 0.3, 0.55]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
   addUserKnob {22 magenta l "<font color=\"#927a99\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.8, 0.2, 0.6]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
   addUserKnob {22 pink l "<font color=\"#997a89\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.92, 0.2, 0.6]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
   addUserKnob {26 S02 l " " T " "}
   addUserKnob {26 Ftools l "" +STARTLINE T "<font color=\"#1C1C1C\"> v1.2 - Franklin VFX - 2018"}
  }
  BackdropNode {
   inputs 0
   name BackdropNode19
   knobChanged "try:\n    listenedKnobs = \['text', 'position', 'name']\n    node = nuke.thisNode()\n    name = node.knob('name').value()\n    text = node.knob('text').value()\n    position = node.knob('position').value()\n    position = \"<\" + position + \">\"\n    label = node.knob('label').value()\n    \n    if nuke.thisKnob().name() in listenedKnobs:\n        if text == \"\":\n            if node.knob('position').value() == \"left\":\n                node.knob('label').setValue()\n            else:\n                node.knob('label').setValue(position + name)\n        else:\n            if node.knob('position').value() == \"left\":\n                node.knob('label').setValue(text)\n            else:\n                node.knob('label').setValue(position + text)\n                \n    elif nuke.thisKnob().name() == 'font_size':\n        fontSize = node.knob('font_size').value()\n        node.knob('note_font_size').setValue(fontSize)\nexcept:\n    pass"
   tile_color 0x232323ff
   label "<Left>\[6] M249"
   note_font_size 50
   xpos 9592
   ypos -2968
   bdwidth 308
   bdheight 401
   addUserKnob {20 F_VFX l BackdropNode}
   addUserKnob {43 text l Text}
   text "\[6] M249"
   addUserKnob {7 font_size l "Font Size" R 10 100}
   font_size 50
   addUserKnob {4 position l "" -STARTLINE M {Left Center}}
   addUserKnob {26 S01 l " " T " "}
   addUserKnob {22 grow l " <img src=\"F_scalep.png\">" -STARTLINE T "n=nuke.thisNode()\n\ndef grow(node=None,step=50):\n    try:\n        if not node:\n            n=nuke.selectedNode()\n        else:\n            n=node\n            n\['xpos'].setValue(n\['xpos'].getValue()-step)\n            n\['ypos'].setValue(n\['ypos'].getValue()-step)\n            n\['bdwidth'].setValue(n\['bdwidth'].getValue()+step*2)\n            n\['bdheight'].setValue(n\['bdheight'].getValue()+step*2)\n    except:\n        pass\ngrow(n,50)"}
   addUserKnob {22 shrink l " <img src=\"F_scalem.png\">" -STARTLINE T "n=nuke.thisNode()\n\ndef shrink(node=None,step=50):\n    try:\n        if not node:\n            n=nuke.selectedNode()\n        else:\n            n=node\n            n\['xpos'].setValue(n\['xpos'].getValue()+step)\n            n\['ypos'].setValue(n\['ypos'].getValue()+step)\n            n\['bdwidth'].setValue(n\['bdwidth'].getValue()-step*2)\n            n\['bdheight'].setValue(n\['bdheight'].getValue()-step*2)\n    except:\n        pass\nshrink(n,50)"}
   addUserKnob {22 colorandom l " <img src=\"ColorBars.png\">" -STARTLINE T "import colorsys, random\nn=nuke.thisNode()\nR,G,B= colorsys.hsv_to_rgb(random.random(),.1+random.random()*.15,.15+random.random()*.15)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ) )"}
   addUserKnob {22 darkgrey l "<font color=\"#232323\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.0, 0.0, 0.14]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
   addUserKnob {22 lightgrey l "<font color=\"#383838\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.0, 0.0, 0.22]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
   addUserKnob {22 red l "<font color=\"#8c3838\" size=6>■</font>" T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.0, 0.6, 0.55]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n" +STARTLINE}
   addUserKnob {22 orange l "<font color=\"#b28e59\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.1, 0.5, 0.7]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
   addUserKnob {22 yellow l "<font color=\"#ccc766\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.16, 0.5, 0.8]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
   addUserKnob {22 green l "<font color=\"#5d995b\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.33, 0.4, 0.6]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
   addUserKnob {22 cyan l "<font color=\"#72998f\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.46, 0.25, 0.6]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
   addUserKnob {22 blue l "<font color=\"#59687f\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.6, 0.3, 0.5]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
   addUserKnob {22 darkblue l "<font color=\"#63628c\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.67, 0.3, 0.55]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
   addUserKnob {22 magenta l "<font color=\"#927a99\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.8, 0.2, 0.6]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
   addUserKnob {22 pink l "<font color=\"#997a89\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.92, 0.2, 0.6]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
   addUserKnob {26 S02 l " " T " "}
   addUserKnob {26 Ftools l "" +STARTLINE T "<font color=\"#1C1C1C\"> v1.2 - Franklin VFX - 2018"}
  }
  BackdropNode {
   inputs 0
   name BackdropNode20
   knobChanged "try:\n    listenedKnobs = \['text', 'position', 'name']\n    node = nuke.thisNode()\n    name = node.knob('name').value()\n    text = node.knob('text').value()\n    position = node.knob('position').value()\n    position = \"<\" + position + \">\"\n    label = node.knob('label').value()\n    \n    if nuke.thisKnob().name() in listenedKnobs:\n        if text == \"\":\n            if node.knob('position').value() == \"left\":\n                node.knob('label').setValue()\n            else:\n                node.knob('label').setValue(position + name)\n        else:\n            if node.knob('position').value() == \"left\":\n                node.knob('label').setValue(text)\n            else:\n                node.knob('label').setValue(position + text)\n                \n    elif nuke.thisKnob().name() == 'font_size':\n        fontSize = node.knob('font_size').value()\n        node.knob('note_font_size').setValue(fontSize)\nexcept:\n    pass"
   tile_color 0x232323ff
   label "<Left>\[7] mp5"
   note_font_size 50
   xpos 9970
   ypos -2968
   bdwidth 297
   bdheight 396
   addUserKnob {20 F_VFX l BackdropNode}
   addUserKnob {43 text l Text}
   text "\[7] mp5"
   addUserKnob {7 font_size l "Font Size" R 10 100}
   font_size 50
   addUserKnob {4 position l "" -STARTLINE M {Left Center}}
   addUserKnob {26 S01 l " " T " "}
   addUserKnob {22 grow l " <img src=\"F_scalep.png\">" -STARTLINE T "n=nuke.thisNode()\n\ndef grow(node=None,step=50):\n    try:\n        if not node:\n            n=nuke.selectedNode()\n        else:\n            n=node\n            n\['xpos'].setValue(n\['xpos'].getValue()-step)\n            n\['ypos'].setValue(n\['ypos'].getValue()-step)\n            n\['bdwidth'].setValue(n\['bdwidth'].getValue()+step*2)\n            n\['bdheight'].setValue(n\['bdheight'].getValue()+step*2)\n    except:\n        pass\ngrow(n,50)"}
   addUserKnob {22 shrink l " <img src=\"F_scalem.png\">" -STARTLINE T "n=nuke.thisNode()\n\ndef shrink(node=None,step=50):\n    try:\n        if not node:\n            n=nuke.selectedNode()\n        else:\n            n=node\n            n\['xpos'].setValue(n\['xpos'].getValue()+step)\n            n\['ypos'].setValue(n\['ypos'].getValue()+step)\n            n\['bdwidth'].setValue(n\['bdwidth'].getValue()-step*2)\n            n\['bdheight'].setValue(n\['bdheight'].getValue()-step*2)\n    except:\n        pass\nshrink(n,50)"}
   addUserKnob {22 colorandom l " <img src=\"ColorBars.png\">" -STARTLINE T "import colorsys, random\nn=nuke.thisNode()\nR,G,B= colorsys.hsv_to_rgb(random.random(),.1+random.random()*.15,.15+random.random()*.15)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ) )"}
   addUserKnob {22 darkgrey l "<font color=\"#232323\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.0, 0.0, 0.14]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
   addUserKnob {22 lightgrey l "<font color=\"#383838\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.0, 0.0, 0.22]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
   addUserKnob {22 red l "<font color=\"#8c3838\" size=6>■</font>" T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.0, 0.6, 0.55]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n" +STARTLINE}
   addUserKnob {22 orange l "<font color=\"#b28e59\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.1, 0.5, 0.7]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
   addUserKnob {22 yellow l "<font color=\"#ccc766\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.16, 0.5, 0.8]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
   addUserKnob {22 green l "<font color=\"#5d995b\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.33, 0.4, 0.6]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
   addUserKnob {22 cyan l "<font color=\"#72998f\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.46, 0.25, 0.6]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
   addUserKnob {22 blue l "<font color=\"#59687f\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.6, 0.3, 0.5]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
   addUserKnob {22 darkblue l "<font color=\"#63628c\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.67, 0.3, 0.55]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
   addUserKnob {22 magenta l "<font color=\"#927a99\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.8, 0.2, 0.6]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
   addUserKnob {22 pink l "<font color=\"#997a89\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.92, 0.2, 0.6]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
   addUserKnob {26 S02 l " " T " "}
   addUserKnob {26 Ftools l "" +STARTLINE T "<font color=\"#1C1C1C\"> v1.2 - Franklin VFX - 2018"}
  }
  BackdropNode {
   inputs 0
   name BackdropNode4
   knobChanged "try:\n    listenedKnobs = \['text', 'position', 'name']\n    node = nuke.thisNode()\n    name = node.knob('name').value()\n    text = node.knob('text').value()\n    position = node.knob('position').value()\n    position = \"<\" + position + \">\"\n    label = node.knob('label').value()\n    \n    if nuke.thisKnob().name() in listenedKnobs:\n        if text == \"\":\n            if node.knob('position').value() == \"left\":\n                node.knob('label').setValue()\n            else:\n                node.knob('label').setValue(position + name)\n        else:\n            if node.knob('position').value() == \"left\":\n                node.knob('label').setValue(text)\n            else:\n                node.knob('label').setValue(position + text)\n                \n    elif nuke.thisKnob().name() == 'font_size':\n        fontSize = node.knob('font_size').value()\n        node.knob('note_font_size').setValue(fontSize)\nexcept:\n    pass"
   tile_color 0x232323ff
   label "<Left>\[1] colt45"
   note_font_size 50
   xpos 6181
   ypos -2964
   bdwidth 297
   bdheight 396
   addUserKnob {20 F_VFX l BackdropNode}
   addUserKnob {43 text l Text}
   text "\[1] colt45"
   addUserKnob {7 font_size l "Font Size" R 10 100}
   font_size 50
   addUserKnob {4 position l "" -STARTLINE M {Left Center}}
   addUserKnob {26 S01 l " " T " "}
   addUserKnob {22 grow l " <img src=\"F_scalep.png\">" -STARTLINE T "n=nuke.thisNode()\n\ndef grow(node=None,step=50):\n    try:\n        if not node:\n            n=nuke.selectedNode()\n        else:\n            n=node\n            n\['xpos'].setValue(n\['xpos'].getValue()-step)\n            n\['ypos'].setValue(n\['ypos'].getValue()-step)\n            n\['bdwidth'].setValue(n\['bdwidth'].getValue()+step*2)\n            n\['bdheight'].setValue(n\['bdheight'].getValue()+step*2)\n    except:\n        pass\ngrow(n,50)"}
   addUserKnob {22 shrink l " <img src=\"F_scalem.png\">" -STARTLINE T "n=nuke.thisNode()\n\ndef shrink(node=None,step=50):\n    try:\n        if not node:\n            n=nuke.selectedNode()\n        else:\n            n=node\n            n\['xpos'].setValue(n\['xpos'].getValue()+step)\n            n\['ypos'].setValue(n\['ypos'].getValue()+step)\n            n\['bdwidth'].setValue(n\['bdwidth'].getValue()-step*2)\n            n\['bdheight'].setValue(n\['bdheight'].getValue()-step*2)\n    except:\n        pass\nshrink(n,50)"}
   addUserKnob {22 colorandom l " <img src=\"ColorBars.png\">" -STARTLINE T "import colorsys, random\nn=nuke.thisNode()\nR,G,B= colorsys.hsv_to_rgb(random.random(),.1+random.random()*.15,.15+random.random()*.15)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ) )"}
   addUserKnob {22 darkgrey l "<font color=\"#232323\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.0, 0.0, 0.14]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
   addUserKnob {22 lightgrey l "<font color=\"#383838\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.0, 0.0, 0.22]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
   addUserKnob {22 red l "<font color=\"#8c3838\" size=6>■</font>" T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.0, 0.6, 0.55]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n" +STARTLINE}
   addUserKnob {22 orange l "<font color=\"#b28e59\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.1, 0.5, 0.7]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
   addUserKnob {22 yellow l "<font color=\"#ccc766\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.16, 0.5, 0.8]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
   addUserKnob {22 green l "<font color=\"#5d995b\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.33, 0.4, 0.6]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
   addUserKnob {22 cyan l "<font color=\"#72998f\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.46, 0.25, 0.6]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
   addUserKnob {22 blue l "<font color=\"#59687f\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.6, 0.3, 0.5]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
   addUserKnob {22 darkblue l "<font color=\"#63628c\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.67, 0.3, 0.55]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
   addUserKnob {22 magenta l "<font color=\"#927a99\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.8, 0.2, 0.6]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
   addUserKnob {22 pink l "<font color=\"#997a89\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.92, 0.2, 0.6]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
   addUserKnob {26 S02 l " " T " "}
   addUserKnob {26 Ftools l "" +STARTLINE T "<font color=\"#1C1C1C\"> v1.2 - Franklin VFX - 2018"}
  }
  BackdropNode {
   inputs 0
   name BackdropNode5
   knobChanged "try:\n    listenedKnobs = \['text', 'position', 'name']\n    node = nuke.thisNode()\n    name = node.knob('name').value()\n    text = node.knob('text').value()\n    position = node.knob('position').value()\n    position = \"<\" + position + \">\"\n    label = node.knob('label').value()\n    \n    if nuke.thisKnob().name() in listenedKnobs:\n        if text == \"\":\n            if node.knob('position').value() == \"left\":\n                node.knob('label').setValue()\n            else:\n                node.knob('label').setValue(position + name)\n        else:\n            if node.knob('position').value() == \"left\":\n                node.knob('label').setValue(text)\n            else:\n                node.knob('label').setValue(position + text)\n                \n    elif nuke.thisKnob().name() == 'font_size':\n        fontSize = node.knob('font_size').value()\n        node.knob('note_font_size').setValue(fontSize)\nexcept:\n    pass"
   tile_color 0x232323ff
   label "<Left>\[3] AR-15"
   note_font_size 50
   xpos 5449
   ypos -2965
   bdwidth 297
   bdheight 396
   addUserKnob {20 F_VFX l BackdropNode}
   addUserKnob {43 text l Text}
   text "\[3] AR-15"
   addUserKnob {7 font_size l "Font Size" R 10 100}
   font_size 50
   addUserKnob {4 position l "" -STARTLINE M {Left Center}}
   addUserKnob {26 S01 l " " T " "}
   addUserKnob {22 grow l " <img src=\"F_scalep.png\">" -STARTLINE T "n=nuke.thisNode()\n\ndef grow(node=None,step=50):\n    try:\n        if not node:\n            n=nuke.selectedNode()\n        else:\n            n=node\n            n\['xpos'].setValue(n\['xpos'].getValue()-step)\n            n\['ypos'].setValue(n\['ypos'].getValue()-step)\n            n\['bdwidth'].setValue(n\['bdwidth'].getValue()+step*2)\n            n\['bdheight'].setValue(n\['bdheight'].getValue()+step*2)\n    except:\n        pass\ngrow(n,50)"}
   addUserKnob {22 shrink l " <img src=\"F_scalem.png\">" -STARTLINE T "n=nuke.thisNode()\n\ndef shrink(node=None,step=50):\n    try:\n        if not node:\n            n=nuke.selectedNode()\n        else:\n            n=node\n            n\['xpos'].setValue(n\['xpos'].getValue()+step)\n            n\['ypos'].setValue(n\['ypos'].getValue()+step)\n            n\['bdwidth'].setValue(n\['bdwidth'].getValue()-step*2)\n            n\['bdheight'].setValue(n\['bdheight'].getValue()-step*2)\n    except:\n        pass\nshrink(n,50)"}
   addUserKnob {22 colorandom l " <img src=\"ColorBars.png\">" -STARTLINE T "import colorsys, random\nn=nuke.thisNode()\nR,G,B= colorsys.hsv_to_rgb(random.random(),.1+random.random()*.15,.15+random.random()*.15)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ) )"}
   addUserKnob {22 darkgrey l "<font color=\"#232323\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.0, 0.0, 0.14]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
   addUserKnob {22 lightgrey l "<font color=\"#383838\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.0, 0.0, 0.22]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
   addUserKnob {22 red l "<font color=\"#8c3838\" size=6>■</font>" T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.0, 0.6, 0.55]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n" +STARTLINE}
   addUserKnob {22 orange l "<font color=\"#b28e59\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.1, 0.5, 0.7]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
   addUserKnob {22 yellow l "<font color=\"#ccc766\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.16, 0.5, 0.8]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
   addUserKnob {22 green l "<font color=\"#5d995b\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.33, 0.4, 0.6]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
   addUserKnob {22 cyan l "<font color=\"#72998f\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.46, 0.25, 0.6]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
   addUserKnob {22 blue l "<font color=\"#59687f\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.6, 0.3, 0.5]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
   addUserKnob {22 darkblue l "<font color=\"#63628c\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.67, 0.3, 0.55]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
   addUserKnob {22 magenta l "<font color=\"#927a99\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.8, 0.2, 0.6]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
   addUserKnob {22 pink l "<font color=\"#997a89\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.92, 0.2, 0.6]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
   addUserKnob {26 S02 l " " T " "}
   addUserKnob {26 Ftools l "" +STARTLINE T "<font color=\"#1C1C1C\"> v1.2 - Franklin VFX - 2018"}
  }
  BackdropNode {
   inputs 0
   name BackdropNode6
   knobChanged "try:\n    listenedKnobs = \['text', 'position', 'name']\n    node = nuke.thisNode()\n    name = node.knob('name').value()\n    text = node.knob('text').value()\n    position = node.knob('position').value()\n    position = \"<\" + position + \">\"\n    label = node.knob('label').value()\n    \n    if nuke.thisKnob().name() in listenedKnobs:\n        if text == \"\":\n            if node.knob('position').value() == \"left\":\n                node.knob('label').setValue()\n            else:\n                node.knob('label').setValue(position + name)\n        else:\n            if node.knob('position').value() == \"left\":\n                node.knob('label').setValue(text)\n            else:\n                node.knob('label').setValue(position + text)\n                \n    elif nuke.thisKnob().name() == 'font_size':\n        fontSize = node.knob('font_size').value()\n        node.knob('note_font_size').setValue(fontSize)\nexcept:\n    pass"
   tile_color 0x232323ff
   label "<Left>\[2] AK"
   note_font_size 50
   xpos 5804
   ypos -2967
   bdwidth 297
   bdheight 396
   addUserKnob {20 F_VFX l BackdropNode}
   addUserKnob {43 text l Text}
   text "\[2] AK"
   addUserKnob {7 font_size l "Font Size" R 10 100}
   font_size 50
   addUserKnob {4 position l "" -STARTLINE M {Left Center}}
   addUserKnob {26 S01 l " " T " "}
   addUserKnob {22 grow l " <img src=\"F_scalep.png\">" -STARTLINE T "n=nuke.thisNode()\n\ndef grow(node=None,step=50):\n    try:\n        if not node:\n            n=nuke.selectedNode()\n        else:\n            n=node\n            n\['xpos'].setValue(n\['xpos'].getValue()-step)\n            n\['ypos'].setValue(n\['ypos'].getValue()-step)\n            n\['bdwidth'].setValue(n\['bdwidth'].getValue()+step*2)\n            n\['bdheight'].setValue(n\['bdheight'].getValue()+step*2)\n    except:\n        pass\ngrow(n,50)"}
   addUserKnob {22 shrink l " <img src=\"F_scalem.png\">" -STARTLINE T "n=nuke.thisNode()\n\ndef shrink(node=None,step=50):\n    try:\n        if not node:\n            n=nuke.selectedNode()\n        else:\n            n=node\n            n\['xpos'].setValue(n\['xpos'].getValue()+step)\n            n\['ypos'].setValue(n\['ypos'].getValue()+step)\n            n\['bdwidth'].setValue(n\['bdwidth'].getValue()-step*2)\n            n\['bdheight'].setValue(n\['bdheight'].getValue()-step*2)\n    except:\n        pass\nshrink(n,50)"}
   addUserKnob {22 colorandom l " <img src=\"ColorBars.png\">" -STARTLINE T "import colorsys, random\nn=nuke.thisNode()\nR,G,B= colorsys.hsv_to_rgb(random.random(),.1+random.random()*.15,.15+random.random()*.15)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ) )"}
   addUserKnob {22 darkgrey l "<font color=\"#232323\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.0, 0.0, 0.14]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
   addUserKnob {22 lightgrey l "<font color=\"#383838\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.0, 0.0, 0.22]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
   addUserKnob {22 red l "<font color=\"#8c3838\" size=6>■</font>" T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.0, 0.6, 0.55]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n" +STARTLINE}
   addUserKnob {22 orange l "<font color=\"#b28e59\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.1, 0.5, 0.7]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
   addUserKnob {22 yellow l "<font color=\"#ccc766\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.16, 0.5, 0.8]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
   addUserKnob {22 green l "<font color=\"#5d995b\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.33, 0.4, 0.6]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
   addUserKnob {22 cyan l "<font color=\"#72998f\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.46, 0.25, 0.6]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
   addUserKnob {22 blue l "<font color=\"#59687f\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.6, 0.3, 0.5]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
   addUserKnob {22 darkblue l "<font color=\"#63628c\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.67, 0.3, 0.55]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
   addUserKnob {22 magenta l "<font color=\"#927a99\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.8, 0.2, 0.6]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
   addUserKnob {22 pink l "<font color=\"#997a89\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.92, 0.2, 0.6]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
   addUserKnob {26 S02 l " " T " "}
   addUserKnob {26 Ftools l "" +STARTLINE T "<font color=\"#1C1C1C\"> v1.2 - Franklin VFX - 2018"}
  }
  BackdropNode {
   inputs 0
   name BackdropNode7
   knobChanged "try:\n    listenedKnobs = \['text', 'position', 'name']\n    node = nuke.thisNode()\n    name = node.knob('name').value()\n    text = node.knob('text').value()\n    position = node.knob('position').value()\n    position = \"<\" + position + \">\"\n    label = node.knob('label').value()\n    \n    if nuke.thisKnob().name() in listenedKnobs:\n        if text == \"\":\n            if node.knob('position').value() == \"left\":\n                node.knob('label').setValue()\n            else:\n                node.knob('label').setValue(position + name)\n        else:\n            if node.knob('position').value() == \"left\":\n                node.knob('label').setValue(text)\n            else:\n                node.knob('label').setValue(position + text)\n                \n    elif nuke.thisKnob().name() == 'font_size':\n        fontSize = node.knob('font_size').value()\n        node.knob('note_font_size').setValue(fontSize)\nexcept:\n    pass"
   tile_color 0x232323ff
   label "<Left>\[4] G2"
   note_font_size 50
   xpos 5082
   ypos -2969
   bdwidth 297
   bdheight 396
   addUserKnob {20 F_VFX l BackdropNode}
   addUserKnob {43 text l Text}
   text "\[4] G2"
   addUserKnob {7 font_size l "Font Size" R 10 100}
   font_size 50
   addUserKnob {4 position l "" -STARTLINE M {Left Center}}
   addUserKnob {26 S01 l " " T " "}
   addUserKnob {22 grow l " <img src=\"F_scalep.png\">" -STARTLINE T "n=nuke.thisNode()\n\ndef grow(node=None,step=50):\n    try:\n        if not node:\n            n=nuke.selectedNode()\n        else:\n            n=node\n            n\['xpos'].setValue(n\['xpos'].getValue()-step)\n            n\['ypos'].setValue(n\['ypos'].getValue()-step)\n            n\['bdwidth'].setValue(n\['bdwidth'].getValue()+step*2)\n            n\['bdheight'].setValue(n\['bdheight'].getValue()+step*2)\n    except:\n        pass\ngrow(n,50)"}
   addUserKnob {22 shrink l " <img src=\"F_scalem.png\">" -STARTLINE T "n=nuke.thisNode()\n\ndef shrink(node=None,step=50):\n    try:\n        if not node:\n            n=nuke.selectedNode()\n        else:\n            n=node\n            n\['xpos'].setValue(n\['xpos'].getValue()+step)\n            n\['ypos'].setValue(n\['ypos'].getValue()+step)\n            n\['bdwidth'].setValue(n\['bdwidth'].getValue()-step*2)\n            n\['bdheight'].setValue(n\['bdheight'].getValue()-step*2)\n    except:\n        pass\nshrink(n,50)"}
   addUserKnob {22 colorandom l " <img src=\"ColorBars.png\">" -STARTLINE T "import colorsys, random\nn=nuke.thisNode()\nR,G,B= colorsys.hsv_to_rgb(random.random(),.1+random.random()*.15,.15+random.random()*.15)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ) )"}
   addUserKnob {22 darkgrey l "<font color=\"#232323\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.0, 0.0, 0.14]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
   addUserKnob {22 lightgrey l "<font color=\"#383838\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.0, 0.0, 0.22]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
   addUserKnob {22 red l "<font color=\"#8c3838\" size=6>■</font>" T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.0, 0.6, 0.55]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n" +STARTLINE}
   addUserKnob {22 orange l "<font color=\"#b28e59\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.1, 0.5, 0.7]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
   addUserKnob {22 yellow l "<font color=\"#ccc766\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.16, 0.5, 0.8]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
   addUserKnob {22 green l "<font color=\"#5d995b\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.33, 0.4, 0.6]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
   addUserKnob {22 cyan l "<font color=\"#72998f\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.46, 0.25, 0.6]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
   addUserKnob {22 blue l "<font color=\"#59687f\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.6, 0.3, 0.5]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
   addUserKnob {22 darkblue l "<font color=\"#63628c\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.67, 0.3, 0.55]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
   addUserKnob {22 magenta l "<font color=\"#927a99\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.8, 0.2, 0.6]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
   addUserKnob {22 pink l "<font color=\"#997a89\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.92, 0.2, 0.6]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
   addUserKnob {26 S02 l " " T " "}
   addUserKnob {26 Ftools l "" +STARTLINE T "<font color=\"#1C1C1C\"> v1.2 - Franklin VFX - 2018"}
  }
  BackdropNode {
   inputs 0
   name BackdropNode8
   knobChanged "try:\n    listenedKnobs = \['text', 'position', 'name']\n    node = nuke.thisNode()\n    name = node.knob('name').value()\n    text = node.knob('text').value()\n    position = node.knob('position').value()\n    position = \"<\" + position + \">\"\n    label = node.knob('label').value()\n    \n    if nuke.thisKnob().name() in listenedKnobs:\n        if text == \"\":\n            if node.knob('position').value() == \"left\":\n                node.knob('label').setValue()\n            else:\n                node.knob('label').setValue(position + name)\n        else:\n            if node.knob('position').value() == \"left\":\n                node.knob('label').setValue(text)\n            else:\n                node.knob('label').setValue(position + text)\n                \n    elif nuke.thisKnob().name() == 'font_size':\n        fontSize = node.knob('font_size').value()\n        node.knob('note_font_size').setValue(fontSize)\nexcept:\n    pass"
   tile_color 0x232323ff
   label "<Left>\[6] M249"
   note_font_size 50
   xpos 4405
   ypos -2967
   bdwidth 297
   bdheight 396
   addUserKnob {20 F_VFX l BackdropNode}
   addUserKnob {43 text l Text}
   text "\[6] M249"
   addUserKnob {7 font_size l "Font Size" R 10 100}
   font_size 50
   addUserKnob {4 position l "" -STARTLINE M {Left Center}}
   addUserKnob {26 S01 l " " T " "}
   addUserKnob {22 grow l " <img src=\"F_scalep.png\">" -STARTLINE T "n=nuke.thisNode()\n\ndef grow(node=None,step=50):\n    try:\n        if not node:\n            n=nuke.selectedNode()\n        else:\n            n=node\n            n\['xpos'].setValue(n\['xpos'].getValue()-step)\n            n\['ypos'].setValue(n\['ypos'].getValue()-step)\n            n\['bdwidth'].setValue(n\['bdwidth'].getValue()+step*2)\n            n\['bdheight'].setValue(n\['bdheight'].getValue()+step*2)\n    except:\n        pass\ngrow(n,50)"}
   addUserKnob {22 shrink l " <img src=\"F_scalem.png\">" -STARTLINE T "n=nuke.thisNode()\n\ndef shrink(node=None,step=50):\n    try:\n        if not node:\n            n=nuke.selectedNode()\n        else:\n            n=node\n            n\['xpos'].setValue(n\['xpos'].getValue()+step)\n            n\['ypos'].setValue(n\['ypos'].getValue()+step)\n            n\['bdwidth'].setValue(n\['bdwidth'].getValue()-step*2)\n            n\['bdheight'].setValue(n\['bdheight'].getValue()-step*2)\n    except:\n        pass\nshrink(n,50)"}
   addUserKnob {22 colorandom l " <img src=\"ColorBars.png\">" -STARTLINE T "import colorsys, random\nn=nuke.thisNode()\nR,G,B= colorsys.hsv_to_rgb(random.random(),.1+random.random()*.15,.15+random.random()*.15)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ) )"}
   addUserKnob {22 darkgrey l "<font color=\"#232323\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.0, 0.0, 0.14]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
   addUserKnob {22 lightgrey l "<font color=\"#383838\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.0, 0.0, 0.22]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
   addUserKnob {22 red l "<font color=\"#8c3838\" size=6>■</font>" T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.0, 0.6, 0.55]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n" +STARTLINE}
   addUserKnob {22 orange l "<font color=\"#b28e59\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.1, 0.5, 0.7]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
   addUserKnob {22 yellow l "<font color=\"#ccc766\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.16, 0.5, 0.8]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
   addUserKnob {22 green l "<font color=\"#5d995b\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.33, 0.4, 0.6]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
   addUserKnob {22 cyan l "<font color=\"#72998f\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.46, 0.25, 0.6]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
   addUserKnob {22 blue l "<font color=\"#59687f\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.6, 0.3, 0.5]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
   addUserKnob {22 darkblue l "<font color=\"#63628c\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.67, 0.3, 0.55]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
   addUserKnob {22 magenta l "<font color=\"#927a99\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.8, 0.2, 0.6]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
   addUserKnob {22 pink l "<font color=\"#997a89\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.92, 0.2, 0.6]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
   addUserKnob {26 S02 l " " T " "}
   addUserKnob {26 Ftools l "" +STARTLINE T "<font color=\"#1C1C1C\"> v1.2 - Franklin VFX - 2018"}
  }
  BackdropNode {
   inputs 0
   name BackdropNode9
   knobChanged "try:\n    listenedKnobs = \['text', 'position', 'name']\n    node = nuke.thisNode()\n    name = node.knob('name').value()\n    text = node.knob('text').value()\n    position = node.knob('position').value()\n    position = \"<\" + position + \">\"\n    label = node.knob('label').value()\n    \n    if nuke.thisKnob().name() in listenedKnobs:\n        if text == \"\":\n            if node.knob('position').value() == \"left\":\n                node.knob('label').setValue()\n            else:\n                node.knob('label').setValue(position + name)\n        else:\n            if node.knob('position').value() == \"left\":\n                node.knob('label').setValue(text)\n            else:\n                node.knob('label').setValue(position + text)\n                \n    elif nuke.thisKnob().name() == 'font_size':\n        fontSize = node.knob('font_size').value()\n        node.knob('note_font_size').setValue(fontSize)\nexcept:\n    pass"
   tile_color 0x232323ff
   label "<Left>\[7] mp5"
   note_font_size 50
   xpos 4058
   ypos -2968
   bdwidth 297
   bdheight 396
   addUserKnob {20 F_VFX l BackdropNode}
   addUserKnob {43 text l Text}
   text "\[7] mp5"
   addUserKnob {7 font_size l "Font Size" R 10 100}
   font_size 50
   addUserKnob {4 position l "" -STARTLINE M {Left Center}}
   addUserKnob {26 S01 l " " T " "}
   addUserKnob {22 grow l " <img src=\"F_scalep.png\">" -STARTLINE T "n=nuke.thisNode()\n\ndef grow(node=None,step=50):\n    try:\n        if not node:\n            n=nuke.selectedNode()\n        else:\n            n=node\n            n\['xpos'].setValue(n\['xpos'].getValue()-step)\n            n\['ypos'].setValue(n\['ypos'].getValue()-step)\n            n\['bdwidth'].setValue(n\['bdwidth'].getValue()+step*2)\n            n\['bdheight'].setValue(n\['bdheight'].getValue()+step*2)\n    except:\n        pass\ngrow(n,50)"}
   addUserKnob {22 shrink l " <img src=\"F_scalem.png\">" -STARTLINE T "n=nuke.thisNode()\n\ndef shrink(node=None,step=50):\n    try:\n        if not node:\n            n=nuke.selectedNode()\n        else:\n            n=node\n            n\['xpos'].setValue(n\['xpos'].getValue()+step)\n            n\['ypos'].setValue(n\['ypos'].getValue()+step)\n            n\['bdwidth'].setValue(n\['bdwidth'].getValue()-step*2)\n            n\['bdheight'].setValue(n\['bdheight'].getValue()-step*2)\n    except:\n        pass\nshrink(n,50)"}
   addUserKnob {22 colorandom l " <img src=\"ColorBars.png\">" -STARTLINE T "import colorsys, random\nn=nuke.thisNode()\nR,G,B= colorsys.hsv_to_rgb(random.random(),.1+random.random()*.15,.15+random.random()*.15)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ) )"}
   addUserKnob {22 darkgrey l "<font color=\"#232323\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.0, 0.0, 0.14]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
   addUserKnob {22 lightgrey l "<font color=\"#383838\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.0, 0.0, 0.22]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
   addUserKnob {22 red l "<font color=\"#8c3838\" size=6>■</font>" T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.0, 0.6, 0.55]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n" +STARTLINE}
   addUserKnob {22 orange l "<font color=\"#b28e59\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.1, 0.5, 0.7]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
   addUserKnob {22 yellow l "<font color=\"#ccc766\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.16, 0.5, 0.8]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
   addUserKnob {22 green l "<font color=\"#5d995b\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.33, 0.4, 0.6]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
   addUserKnob {22 cyan l "<font color=\"#72998f\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.46, 0.25, 0.6]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
   addUserKnob {22 blue l "<font color=\"#59687f\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.6, 0.3, 0.5]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
   addUserKnob {22 darkblue l "<font color=\"#63628c\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.67, 0.3, 0.55]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
   addUserKnob {22 magenta l "<font color=\"#927a99\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.8, 0.2, 0.6]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
   addUserKnob {22 pink l "<font color=\"#997a89\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.92, 0.2, 0.6]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
   addUserKnob {26 S02 l " " T " "}
   addUserKnob {26 Ftools l "" +STARTLINE T "<font color=\"#1C1C1C\"> v1.2 - Franklin VFX - 2018"}
  }
  BackdropNode {
   inputs 0
   name BackdropNode14
   knobChanged "try:\n    listenedKnobs = \['text', 'position', 'name']\n    node = nuke.thisNode()\n    name = node.knob('name').value()\n    text = node.knob('text').value()\n    position = node.knob('position').value()\n    position = \"<\" + position + \">\"\n    label = node.knob('label').value()\n    \n    if nuke.thisKnob().name() in listenedKnobs:\n        if text == \"\":\n            if node.knob('position').value() == \"left\":\n                node.knob('label').setValue()\n            else:\n                node.knob('label').setValue(position + name)\n        else:\n            if node.knob('position').value() == \"left\":\n                node.knob('label').setValue(text)\n            else:\n                node.knob('label').setValue(position + text)\n                \n    elif nuke.thisKnob().name() == 'font_size':\n        fontSize = node.knob('font_size').value()\n        node.knob('note_font_size').setValue(fontSize)\nexcept:\n    pass"
   tile_color 0x232323ff
   label "<Left>\[0] default"
   note_font_size 50
   xpos 6546
   ypos -2958
   bdwidth 297
   bdheight 396
   z_order 2
   addUserKnob {20 F_VFX l BackdropNode}
   addUserKnob {43 text l Text}
   text "\[0] default"
   addUserKnob {7 font_size l "Font Size" R 10 100}
   font_size 50
   addUserKnob {4 position l "" -STARTLINE M {Left Center}}
   addUserKnob {26 S01 l " " T " "}
   addUserKnob {22 grow l " <img src=\"F_scalep.png\">" -STARTLINE T "n=nuke.thisNode()\n\ndef grow(node=None,step=50):\n    try:\n        if not node:\n            n=nuke.selectedNode()\n        else:\n            n=node\n            n\['xpos'].setValue(n\['xpos'].getValue()-step)\n            n\['ypos'].setValue(n\['ypos'].getValue()-step)\n            n\['bdwidth'].setValue(n\['bdwidth'].getValue()+step*2)\n            n\['bdheight'].setValue(n\['bdheight'].getValue()+step*2)\n    except:\n        pass\ngrow(n,50)"}
   addUserKnob {22 shrink l " <img src=\"F_scalem.png\">" -STARTLINE T "n=nuke.thisNode()\n\ndef shrink(node=None,step=50):\n    try:\n        if not node:\n            n=nuke.selectedNode()\n        else:\n            n=node\n            n\['xpos'].setValue(n\['xpos'].getValue()+step)\n            n\['ypos'].setValue(n\['ypos'].getValue()+step)\n            n\['bdwidth'].setValue(n\['bdwidth'].getValue()-step*2)\n            n\['bdheight'].setValue(n\['bdheight'].getValue()-step*2)\n    except:\n        pass\nshrink(n,50)"}
   addUserKnob {22 colorandom l " <img src=\"ColorBars.png\">" -STARTLINE T "import colorsys, random\nn=nuke.thisNode()\nR,G,B= colorsys.hsv_to_rgb(random.random(),.1+random.random()*.15,.15+random.random()*.15)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ) )"}
   addUserKnob {22 darkgrey l "<font color=\"#232323\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.0, 0.0, 0.14]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
   addUserKnob {22 lightgrey l "<font color=\"#383838\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.0, 0.0, 0.22]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
   addUserKnob {22 red l "<font color=\"#8c3838\" size=6>■</font>" T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.0, 0.6, 0.55]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n" +STARTLINE}
   addUserKnob {22 orange l "<font color=\"#b28e59\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.1, 0.5, 0.7]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
   addUserKnob {22 yellow l "<font color=\"#ccc766\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.16, 0.5, 0.8]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
   addUserKnob {22 green l "<font color=\"#5d995b\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.33, 0.4, 0.6]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
   addUserKnob {22 cyan l "<font color=\"#72998f\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.46, 0.25, 0.6]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
   addUserKnob {22 blue l "<font color=\"#59687f\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.6, 0.3, 0.5]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
   addUserKnob {22 darkblue l "<font color=\"#63628c\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.67, 0.3, 0.55]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
   addUserKnob {22 magenta l "<font color=\"#927a99\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.8, 0.2, 0.6]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
   addUserKnob {22 pink l "<font color=\"#997a89\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.92, 0.2, 0.6]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
   addUserKnob {26 S02 l " " T " "}
   addUserKnob {26 Ftools l "" +STARTLINE T "<font color=\"#1C1C1C\"> v1.2 - Franklin VFX - 2018"}
  }
  BackdropNode {
   inputs 0
   name BackdropNode15
   knobChanged "try:\n    listenedKnobs = \['text', 'position', 'name']\n    node = nuke.thisNode()\n    name = node.knob('name').value()\n    text = node.knob('text').value()\n    position = node.knob('position').value()\n    position = \"<\" + position + \">\"\n    label = node.knob('label').value()\n    \n    if nuke.thisKnob().name() in listenedKnobs:\n        if text == \"\":\n            if node.knob('position').value() == \"left\":\n                node.knob('label').setValue()\n            else:\n                node.knob('label').setValue(position + name)\n        else:\n            if node.knob('position').value() == \"left\":\n                node.knob('label').setValue(text)\n            else:\n                node.knob('label').setValue(position + text)\n                \n    elif nuke.thisKnob().name() == 'font_size':\n        fontSize = node.knob('font_size').value()\n        node.knob('note_font_size').setValue(fontSize)\nexcept:\n    pass"
   tile_color 0x232323ff
   label "<Left>\[0] default"
   note_font_size 50
   xpos 7390
   ypos -2952
   bdwidth 297
   bdheight 396
   z_order 2
   addUserKnob {20 F_VFX l BackdropNode}
   addUserKnob {43 text l Text}
   text "\[0] default"
   addUserKnob {7 font_size l "Font Size" R 10 100}
   font_size 50
   addUserKnob {4 position l "" -STARTLINE M {Left Center}}
   addUserKnob {26 S01 l " " T " "}
   addUserKnob {22 grow l " <img src=\"F_scalep.png\">" -STARTLINE T "n=nuke.thisNode()\n\ndef grow(node=None,step=50):\n    try:\n        if not node:\n            n=nuke.selectedNode()\n        else:\n            n=node\n            n\['xpos'].setValue(n\['xpos'].getValue()-step)\n            n\['ypos'].setValue(n\['ypos'].getValue()-step)\n            n\['bdwidth'].setValue(n\['bdwidth'].getValue()+step*2)\n            n\['bdheight'].setValue(n\['bdheight'].getValue()+step*2)\n    except:\n        pass\ngrow(n,50)"}
   addUserKnob {22 shrink l " <img src=\"F_scalem.png\">" -STARTLINE T "n=nuke.thisNode()\n\ndef shrink(node=None,step=50):\n    try:\n        if not node:\n            n=nuke.selectedNode()\n        else:\n            n=node\n            n\['xpos'].setValue(n\['xpos'].getValue()+step)\n            n\['ypos'].setValue(n\['ypos'].getValue()+step)\n            n\['bdwidth'].setValue(n\['bdwidth'].getValue()-step*2)\n            n\['bdheight'].setValue(n\['bdheight'].getValue()-step*2)\n    except:\n        pass\nshrink(n,50)"}
   addUserKnob {22 colorandom l " <img src=\"ColorBars.png\">" -STARTLINE T "import colorsys, random\nn=nuke.thisNode()\nR,G,B= colorsys.hsv_to_rgb(random.random(),.1+random.random()*.15,.15+random.random()*.15)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ) )"}
   addUserKnob {22 darkgrey l "<font color=\"#232323\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.0, 0.0, 0.14]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
   addUserKnob {22 lightgrey l "<font color=\"#383838\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.0, 0.0, 0.22]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
   addUserKnob {22 red l "<font color=\"#8c3838\" size=6>■</font>" T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.0, 0.6, 0.55]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n" +STARTLINE}
   addUserKnob {22 orange l "<font color=\"#b28e59\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.1, 0.5, 0.7]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
   addUserKnob {22 yellow l "<font color=\"#ccc766\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.16, 0.5, 0.8]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
   addUserKnob {22 green l "<font color=\"#5d995b\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.33, 0.4, 0.6]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
   addUserKnob {22 cyan l "<font color=\"#72998f\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.46, 0.25, 0.6]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
   addUserKnob {22 blue l "<font color=\"#59687f\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.6, 0.3, 0.5]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
   addUserKnob {22 darkblue l "<font color=\"#63628c\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.67, 0.3, 0.55]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
   addUserKnob {22 magenta l "<font color=\"#927a99\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.8, 0.2, 0.6]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
   addUserKnob {22 pink l "<font color=\"#997a89\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.92, 0.2, 0.6]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
   addUserKnob {26 S02 l " " T " "}
   addUserKnob {26 Ftools l "" +STARTLINE T "<font color=\"#1C1C1C\"> v1.2 - Franklin VFX - 2018"}
  }
  BackdropNode {
   inputs 0
   name BackdropNode10
   knobChanged "try:\n    listenedKnobs = \['text', 'position', 'name']\n    node = nuke.thisNode()\n    name = node.knob('name').value()\n    text = node.knob('text').value()\n    position = node.knob('position').value()\n    position = \"<\" + position + \">\"\n    label = node.knob('label').value()\n    \n    if nuke.thisKnob().name() in listenedKnobs:\n        if text == \"\":\n            if node.knob('position').value() == \"left\":\n                node.knob('label').setValue()\n            else:\n                node.knob('label').setValue(position + name)\n        else:\n            if node.knob('position').value() == \"left\":\n                node.knob('label').setValue(text)\n            else:\n                node.knob('label').setValue(position + text)\n                \n    elif nuke.thisKnob().name() == 'font_size':\n        fontSize = node.knob('font_size').value()\n        node.knob('note_font_size').setValue(fontSize)\nexcept:\n    pass"
   tile_color 0x232323ff
   label "<Left>\[9] M4"
   note_font_size 50
   xpos 3337
   ypos -2985
   bdwidth 297
   bdheight 396
   z_order 4
   addUserKnob {20 F_VFX l BackdropNode}
   addUserKnob {43 text l Text}
   text "\[9] M4"
   addUserKnob {7 font_size l "Font Size" R 10 100}
   font_size 50
   addUserKnob {4 position l "" -STARTLINE M {Left Center}}
   addUserKnob {26 S01 l " " T " "}
   addUserKnob {22 grow l " <img src=\"F_scalep.png\">" -STARTLINE T "n=nuke.thisNode()\n\ndef grow(node=None,step=50):\n    try:\n        if not node:\n            n=nuke.selectedNode()\n        else:\n            n=node\n            n\['xpos'].setValue(n\['xpos'].getValue()-step)\n            n\['ypos'].setValue(n\['ypos'].getValue()-step)\n            n\['bdwidth'].setValue(n\['bdwidth'].getValue()+step*2)\n            n\['bdheight'].setValue(n\['bdheight'].getValue()+step*2)\n    except:\n        pass\ngrow(n,50)"}
   addUserKnob {22 shrink l " <img src=\"F_scalem.png\">" -STARTLINE T "n=nuke.thisNode()\n\ndef shrink(node=None,step=50):\n    try:\n        if not node:\n            n=nuke.selectedNode()\n        else:\n            n=node\n            n\['xpos'].setValue(n\['xpos'].getValue()+step)\n            n\['ypos'].setValue(n\['ypos'].getValue()+step)\n            n\['bdwidth'].setValue(n\['bdwidth'].getValue()-step*2)\n            n\['bdheight'].setValue(n\['bdheight'].getValue()-step*2)\n    except:\n        pass\nshrink(n,50)"}
   addUserKnob {22 colorandom l " <img src=\"ColorBars.png\">" -STARTLINE T "import colorsys, random\nn=nuke.thisNode()\nR,G,B= colorsys.hsv_to_rgb(random.random(),.1+random.random()*.15,.15+random.random()*.15)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ) )"}
   addUserKnob {22 darkgrey l "<font color=\"#232323\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.0, 0.0, 0.14]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
   addUserKnob {22 lightgrey l "<font color=\"#383838\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.0, 0.0, 0.22]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
   addUserKnob {22 red l "<font color=\"#8c3838\" size=6>■</font>" T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.0, 0.6, 0.55]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n" +STARTLINE}
   addUserKnob {22 orange l "<font color=\"#b28e59\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.1, 0.5, 0.7]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
   addUserKnob {22 yellow l "<font color=\"#ccc766\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.16, 0.5, 0.8]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
   addUserKnob {22 green l "<font color=\"#5d995b\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.33, 0.4, 0.6]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
   addUserKnob {22 cyan l "<font color=\"#72998f\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.46, 0.25, 0.6]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
   addUserKnob {22 blue l "<font color=\"#59687f\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.6, 0.3, 0.5]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
   addUserKnob {22 darkblue l "<font color=\"#63628c\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.67, 0.3, 0.55]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
   addUserKnob {22 magenta l "<font color=\"#927a99\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.8, 0.2, 0.6]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
   addUserKnob {22 pink l "<font color=\"#997a89\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.92, 0.2, 0.6]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
   addUserKnob {26 S02 l " " T " "}
   addUserKnob {26 Ftools l "" +STARTLINE T "<font color=\"#1C1C1C\"> v1.2 - Franklin VFX - 2018"}
  }
  BackdropNode {
   inputs 0
   name BackdropNode11
   knobChanged "try:\n    listenedKnobs = \['text', 'position', 'name']\n    node = nuke.thisNode()\n    name = node.knob('name').value()\n    text = node.knob('text').value()\n    position = node.knob('position').value()\n    position = \"<\" + position + \">\"\n    label = node.knob('label').value()\n    \n    if nuke.thisKnob().name() in listenedKnobs:\n        if text == \"\":\n            if node.knob('position').value() == \"left\":\n                node.knob('label').setValue()\n            else:\n                node.knob('label').setValue(position + name)\n        else:\n            if node.knob('position').value() == \"left\":\n                node.knob('label').setValue(text)\n            else:\n                node.knob('label').setValue(position + text)\n                \n    elif nuke.thisKnob().name() == 'font_size':\n        fontSize = node.knob('font_size').value()\n        node.knob('note_font_size').setValue(fontSize)\nexcept:\n    pass"
   tile_color 0x232323ff
   label "<Left>\[8] M870"
   note_font_size 50
   xpos 3708
   ypos -2974
   bdwidth 297
   bdheight 396
   z_order 4
   addUserKnob {20 F_VFX l BackdropNode}
   addUserKnob {43 text l Text}
   text "\[8] M870"
   addUserKnob {7 font_size l "Font Size" R 10 100}
   font_size 50
   addUserKnob {4 position l "" -STARTLINE M {Left Center}}
   addUserKnob {26 S01 l " " T " "}
   addUserKnob {22 grow l " <img src=\"F_scalep.png\">" -STARTLINE T "n=nuke.thisNode()\n\ndef grow(node=None,step=50):\n    try:\n        if not node:\n            n=nuke.selectedNode()\n        else:\n            n=node\n            n\['xpos'].setValue(n\['xpos'].getValue()-step)\n            n\['ypos'].setValue(n\['ypos'].getValue()-step)\n            n\['bdwidth'].setValue(n\['bdwidth'].getValue()+step*2)\n            n\['bdheight'].setValue(n\['bdheight'].getValue()+step*2)\n    except:\n        pass\ngrow(n,50)"}
   addUserKnob {22 shrink l " <img src=\"F_scalem.png\">" -STARTLINE T "n=nuke.thisNode()\n\ndef shrink(node=None,step=50):\n    try:\n        if not node:\n            n=nuke.selectedNode()\n        else:\n            n=node\n            n\['xpos'].setValue(n\['xpos'].getValue()+step)\n            n\['ypos'].setValue(n\['ypos'].getValue()+step)\n            n\['bdwidth'].setValue(n\['bdwidth'].getValue()-step*2)\n            n\['bdheight'].setValue(n\['bdheight'].getValue()-step*2)\n    except:\n        pass\nshrink(n,50)"}
   addUserKnob {22 colorandom l " <img src=\"ColorBars.png\">" -STARTLINE T "import colorsys, random\nn=nuke.thisNode()\nR,G,B= colorsys.hsv_to_rgb(random.random(),.1+random.random()*.15,.15+random.random()*.15)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ) )"}
   addUserKnob {22 darkgrey l "<font color=\"#232323\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.0, 0.0, 0.14]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
   addUserKnob {22 lightgrey l "<font color=\"#383838\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.0, 0.0, 0.22]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
   addUserKnob {22 red l "<font color=\"#8c3838\" size=6>■</font>" T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.0, 0.6, 0.55]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n" +STARTLINE}
   addUserKnob {22 orange l "<font color=\"#b28e59\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.1, 0.5, 0.7]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
   addUserKnob {22 yellow l "<font color=\"#ccc766\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.16, 0.5, 0.8]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
   addUserKnob {22 green l "<font color=\"#5d995b\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.33, 0.4, 0.6]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
   addUserKnob {22 cyan l "<font color=\"#72998f\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.46, 0.25, 0.6]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
   addUserKnob {22 blue l "<font color=\"#59687f\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.6, 0.3, 0.5]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
   addUserKnob {22 darkblue l "<font color=\"#63628c\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.67, 0.3, 0.55]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
   addUserKnob {22 magenta l "<font color=\"#927a99\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.8, 0.2, 0.6]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
   addUserKnob {22 pink l "<font color=\"#997a89\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.92, 0.2, 0.6]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
   addUserKnob {26 S02 l " " T " "}
   addUserKnob {26 Ftools l "" +STARTLINE T "<font color=\"#1C1C1C\"> v1.2 - Franklin VFX - 2018"}
  }
  BackdropNode {
   inputs 0
   name BackdropNode12
   knobChanged "try:\n    listenedKnobs = \['text', 'position', 'name']\n    node = nuke.thisNode()\n    name = node.knob('name').value()\n    text = node.knob('text').value()\n    position = node.knob('position').value()\n    position = \"<\" + position + \">\"\n    label = node.knob('label').value()\n    \n    if nuke.thisKnob().name() in listenedKnobs:\n        if text == \"\":\n            if node.knob('position').value() == \"left\":\n                node.knob('label').setValue()\n            else:\n                node.knob('label').setValue(position + name)\n        else:\n            if node.knob('position').value() == \"left\":\n                node.knob('label').setValue(text)\n            else:\n                node.knob('label').setValue(position + text)\n                \n    elif nuke.thisKnob().name() == 'font_size':\n        fontSize = node.knob('font_size').value()\n        node.knob('note_font_size').setValue(fontSize)\nexcept:\n    pass"
   tile_color 0x232323ff
   label "<Left>\[5] M16"
   note_font_size 50
   xpos 4732
   ypos -2962
   bdwidth 297
   bdheight 396
   z_order 4
   addUserKnob {20 F_VFX l BackdropNode}
   addUserKnob {43 text l Text}
   text "\[5] M16"
   addUserKnob {7 font_size l "Font Size" R 10 100}
   font_size 50
   addUserKnob {4 position l "" -STARTLINE M {Left Center}}
   addUserKnob {26 S01 l " " T " "}
   addUserKnob {22 grow l " <img src=\"F_scalep.png\">" -STARTLINE T "n=nuke.thisNode()\n\ndef grow(node=None,step=50):\n    try:\n        if not node:\n            n=nuke.selectedNode()\n        else:\n            n=node\n            n\['xpos'].setValue(n\['xpos'].getValue()-step)\n            n\['ypos'].setValue(n\['ypos'].getValue()-step)\n            n\['bdwidth'].setValue(n\['bdwidth'].getValue()+step*2)\n            n\['bdheight'].setValue(n\['bdheight'].getValue()+step*2)\n    except:\n        pass\ngrow(n,50)"}
   addUserKnob {22 shrink l " <img src=\"F_scalem.png\">" -STARTLINE T "n=nuke.thisNode()\n\ndef shrink(node=None,step=50):\n    try:\n        if not node:\n            n=nuke.selectedNode()\n        else:\n            n=node\n            n\['xpos'].setValue(n\['xpos'].getValue()+step)\n            n\['ypos'].setValue(n\['ypos'].getValue()+step)\n            n\['bdwidth'].setValue(n\['bdwidth'].getValue()-step*2)\n            n\['bdheight'].setValue(n\['bdheight'].getValue()-step*2)\n    except:\n        pass\nshrink(n,50)"}
   addUserKnob {22 colorandom l " <img src=\"ColorBars.png\">" -STARTLINE T "import colorsys, random\nn=nuke.thisNode()\nR,G,B= colorsys.hsv_to_rgb(random.random(),.1+random.random()*.15,.15+random.random()*.15)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ) )"}
   addUserKnob {22 darkgrey l "<font color=\"#232323\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.0, 0.0, 0.14]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
   addUserKnob {22 lightgrey l "<font color=\"#383838\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.0, 0.0, 0.22]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
   addUserKnob {22 red l "<font color=\"#8c3838\" size=6>■</font>" T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.0, 0.6, 0.55]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n" +STARTLINE}
   addUserKnob {22 orange l "<font color=\"#b28e59\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.1, 0.5, 0.7]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
   addUserKnob {22 yellow l "<font color=\"#ccc766\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.16, 0.5, 0.8]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
   addUserKnob {22 green l "<font color=\"#5d995b\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.33, 0.4, 0.6]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
   addUserKnob {22 cyan l "<font color=\"#72998f\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.46, 0.25, 0.6]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
   addUserKnob {22 blue l "<font color=\"#59687f\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.6, 0.3, 0.5]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
   addUserKnob {22 darkblue l "<font color=\"#63628c\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.67, 0.3, 0.55]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
   addUserKnob {22 magenta l "<font color=\"#927a99\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.8, 0.2, 0.6]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
   addUserKnob {22 pink l "<font color=\"#997a89\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.92, 0.2, 0.6]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
   addUserKnob {26 S02 l " " T " "}
   addUserKnob {26 Ftools l "" +STARTLINE T "<font color=\"#1C1C1C\"> v1.2 - Franklin VFX - 2018"}
  }
  BackdropNode {
   inputs 0
   name BackdropNode21
   knobChanged "try:\n    listenedKnobs = \['text', 'position', 'name']\n    node = nuke.thisNode()\n    name = node.knob('name').value()\n    text = node.knob('text').value()\n    position = node.knob('position').value()\n    position = \"<\" + position + \">\"\n    label = node.knob('label').value()\n    \n    if nuke.thisKnob().name() in listenedKnobs:\n        if text == \"\":\n            if node.knob('position').value() == \"left\":\n                node.knob('label').setValue()\n            else:\n                node.knob('label').setValue(position + name)\n        else:\n            if node.knob('position').value() == \"left\":\n                node.knob('label').setValue(text)\n            else:\n                node.knob('label').setValue(position + text)\n                \n    elif nuke.thisKnob().name() == 'font_size':\n        fontSize = node.knob('font_size').value()\n        node.knob('note_font_size').setValue(fontSize)\nexcept:\n    pass"
   tile_color 0x232323ff
   label "<Left>\[9] M4"
   note_font_size 50
   xpos 10699
   ypos -2970
   bdwidth 297
   bdheight 396
   z_order 4
   addUserKnob {20 F_VFX l BackdropNode}
   addUserKnob {43 text l Text}
   text "\[9] M4"
   addUserKnob {7 font_size l "Font Size" R 10 100}
   font_size 50
   addUserKnob {4 position l "" -STARTLINE M {Left Center}}
   addUserKnob {26 S01 l " " T " "}
   addUserKnob {22 grow l " <img src=\"F_scalep.png\">" -STARTLINE T "n=nuke.thisNode()\n\ndef grow(node=None,step=50):\n    try:\n        if not node:\n            n=nuke.selectedNode()\n        else:\n            n=node\n            n\['xpos'].setValue(n\['xpos'].getValue()-step)\n            n\['ypos'].setValue(n\['ypos'].getValue()-step)\n            n\['bdwidth'].setValue(n\['bdwidth'].getValue()+step*2)\n            n\['bdheight'].setValue(n\['bdheight'].getValue()+step*2)\n    except:\n        pass\ngrow(n,50)"}
   addUserKnob {22 shrink l " <img src=\"F_scalem.png\">" -STARTLINE T "n=nuke.thisNode()\n\ndef shrink(node=None,step=50):\n    try:\n        if not node:\n            n=nuke.selectedNode()\n        else:\n            n=node\n            n\['xpos'].setValue(n\['xpos'].getValue()+step)\n            n\['ypos'].setValue(n\['ypos'].getValue()+step)\n            n\['bdwidth'].setValue(n\['bdwidth'].getValue()-step*2)\n            n\['bdheight'].setValue(n\['bdheight'].getValue()-step*2)\n    except:\n        pass\nshrink(n,50)"}
   addUserKnob {22 colorandom l " <img src=\"ColorBars.png\">" -STARTLINE T "import colorsys, random\nn=nuke.thisNode()\nR,G,B= colorsys.hsv_to_rgb(random.random(),.1+random.random()*.15,.15+random.random()*.15)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ) )"}
   addUserKnob {22 darkgrey l "<font color=\"#232323\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.0, 0.0, 0.14]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
   addUserKnob {22 lightgrey l "<font color=\"#383838\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.0, 0.0, 0.22]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
   addUserKnob {22 red l "<font color=\"#8c3838\" size=6>■</font>" T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.0, 0.6, 0.55]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n" +STARTLINE}
   addUserKnob {22 orange l "<font color=\"#b28e59\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.1, 0.5, 0.7]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
   addUserKnob {22 yellow l "<font color=\"#ccc766\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.16, 0.5, 0.8]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
   addUserKnob {22 green l "<font color=\"#5d995b\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.33, 0.4, 0.6]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
   addUserKnob {22 cyan l "<font color=\"#72998f\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.46, 0.25, 0.6]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
   addUserKnob {22 blue l "<font color=\"#59687f\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.6, 0.3, 0.5]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
   addUserKnob {22 darkblue l "<font color=\"#63628c\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.67, 0.3, 0.55]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
   addUserKnob {22 magenta l "<font color=\"#927a99\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.8, 0.2, 0.6]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
   addUserKnob {22 pink l "<font color=\"#997a89\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.92, 0.2, 0.6]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
   addUserKnob {26 S02 l " " T " "}
   addUserKnob {26 Ftools l "" +STARTLINE T "<font color=\"#1C1C1C\"> v1.2 - Franklin VFX - 2018"}
  }
  BackdropNode {
   inputs 0
   name BackdropNode22
   knobChanged "try:\n    listenedKnobs = \['text', 'position', 'name']\n    node = nuke.thisNode()\n    name = node.knob('name').value()\n    text = node.knob('text').value()\n    position = node.knob('position').value()\n    position = \"<\" + position + \">\"\n    label = node.knob('label').value()\n    \n    if nuke.thisKnob().name() in listenedKnobs:\n        if text == \"\":\n            if node.knob('position').value() == \"left\":\n                node.knob('label').setValue()\n            else:\n                node.knob('label').setValue(position + name)\n        else:\n            if node.knob('position').value() == \"left\":\n                node.knob('label').setValue(text)\n            else:\n                node.knob('label').setValue(position + text)\n                \n    elif nuke.thisKnob().name() == 'font_size':\n        fontSize = node.knob('font_size').value()\n        node.knob('note_font_size').setValue(fontSize)\nexcept:\n    pass"
   tile_color 0x232323ff
   label "<Left>\[8] M870"
   note_font_size 50
   xpos 10342
   ypos -2973
   bdwidth 297
   bdheight 396
   z_order 4
   addUserKnob {20 F_VFX l BackdropNode}
   addUserKnob {43 text l Text}
   text "\[8] M870"
   addUserKnob {7 font_size l "Font Size" R 10 100}
   font_size 50
   addUserKnob {4 position l "" -STARTLINE M {Left Center}}
   addUserKnob {26 S01 l " " T " "}
   addUserKnob {22 grow l " <img src=\"F_scalep.png\">" -STARTLINE T "n=nuke.thisNode()\n\ndef grow(node=None,step=50):\n    try:\n        if not node:\n            n=nuke.selectedNode()\n        else:\n            n=node\n            n\['xpos'].setValue(n\['xpos'].getValue()-step)\n            n\['ypos'].setValue(n\['ypos'].getValue()-step)\n            n\['bdwidth'].setValue(n\['bdwidth'].getValue()+step*2)\n            n\['bdheight'].setValue(n\['bdheight'].getValue()+step*2)\n    except:\n        pass\ngrow(n,50)"}
   addUserKnob {22 shrink l " <img src=\"F_scalem.png\">" -STARTLINE T "n=nuke.thisNode()\n\ndef shrink(node=None,step=50):\n    try:\n        if not node:\n            n=nuke.selectedNode()\n        else:\n            n=node\n            n\['xpos'].setValue(n\['xpos'].getValue()+step)\n            n\['ypos'].setValue(n\['ypos'].getValue()+step)\n            n\['bdwidth'].setValue(n\['bdwidth'].getValue()-step*2)\n            n\['bdheight'].setValue(n\['bdheight'].getValue()-step*2)\n    except:\n        pass\nshrink(n,50)"}
   addUserKnob {22 colorandom l " <img src=\"ColorBars.png\">" -STARTLINE T "import colorsys, random\nn=nuke.thisNode()\nR,G,B= colorsys.hsv_to_rgb(random.random(),.1+random.random()*.15,.15+random.random()*.15)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ) )"}
   addUserKnob {22 darkgrey l "<font color=\"#232323\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.0, 0.0, 0.14]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
   addUserKnob {22 lightgrey l "<font color=\"#383838\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.0, 0.0, 0.22]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
   addUserKnob {22 red l "<font color=\"#8c3838\" size=6>■</font>" T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.0, 0.6, 0.55]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n" +STARTLINE}
   addUserKnob {22 orange l "<font color=\"#b28e59\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.1, 0.5, 0.7]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
   addUserKnob {22 yellow l "<font color=\"#ccc766\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.16, 0.5, 0.8]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
   addUserKnob {22 green l "<font color=\"#5d995b\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.33, 0.4, 0.6]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
   addUserKnob {22 cyan l "<font color=\"#72998f\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.46, 0.25, 0.6]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
   addUserKnob {22 blue l "<font color=\"#59687f\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.6, 0.3, 0.5]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
   addUserKnob {22 darkblue l "<font color=\"#63628c\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.67, 0.3, 0.55]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
   addUserKnob {22 magenta l "<font color=\"#927a99\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.8, 0.2, 0.6]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
   addUserKnob {22 pink l "<font color=\"#997a89\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.92, 0.2, 0.6]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
   addUserKnob {26 S02 l " " T " "}
   addUserKnob {26 Ftools l "" +STARTLINE T "<font color=\"#1C1C1C\"> v1.2 - Franklin VFX - 2018"}
  }
  BackdropNode {
   inputs 0
   name BackdropNode23
   knobChanged "try:\n    listenedKnobs = \['text', 'position', 'name']\n    node = nuke.thisNode()\n    name = node.knob('name').value()\n    text = node.knob('text').value()\n    position = node.knob('position').value()\n    position = \"<\" + position + \">\"\n    label = node.knob('label').value()\n    \n    if nuke.thisKnob().name() in listenedKnobs:\n        if text == \"\":\n            if node.knob('position').value() == \"left\":\n                node.knob('label').setValue()\n            else:\n                node.knob('label').setValue(position + name)\n        else:\n            if node.knob('position').value() == \"left\":\n                node.knob('label').setValue(text)\n            else:\n                node.knob('label').setValue(position + text)\n                \n    elif nuke.thisKnob().name() == 'font_size':\n        fontSize = node.knob('font_size').value()\n        node.knob('note_font_size').setValue(fontSize)\nexcept:\n    pass"
   tile_color 0x232323ff
   label "<Left>\[5] M16"
   note_font_size 50
   xpos 9238
   ypos -2962
   bdwidth 297
   bdheight 396
   z_order 4
   addUserKnob {20 F_VFX l BackdropNode}
   addUserKnob {43 text l Text}
   text "\[5] M16"
   addUserKnob {7 font_size l "Font Size" R 10 100}
   font_size 50
   addUserKnob {4 position l "" -STARTLINE M {Left Center}}
   addUserKnob {26 S01 l " " T " "}
   addUserKnob {22 grow l " <img src=\"F_scalep.png\">" -STARTLINE T "n=nuke.thisNode()\n\ndef grow(node=None,step=50):\n    try:\n        if not node:\n            n=nuke.selectedNode()\n        else:\n            n=node\n            n\['xpos'].setValue(n\['xpos'].getValue()-step)\n            n\['ypos'].setValue(n\['ypos'].getValue()-step)\n            n\['bdwidth'].setValue(n\['bdwidth'].getValue()+step*2)\n            n\['bdheight'].setValue(n\['bdheight'].getValue()+step*2)\n    except:\n        pass\ngrow(n,50)"}
   addUserKnob {22 shrink l " <img src=\"F_scalem.png\">" -STARTLINE T "n=nuke.thisNode()\n\ndef shrink(node=None,step=50):\n    try:\n        if not node:\n            n=nuke.selectedNode()\n        else:\n            n=node\n            n\['xpos'].setValue(n\['xpos'].getValue()+step)\n            n\['ypos'].setValue(n\['ypos'].getValue()+step)\n            n\['bdwidth'].setValue(n\['bdwidth'].getValue()-step*2)\n            n\['bdheight'].setValue(n\['bdheight'].getValue()-step*2)\n    except:\n        pass\nshrink(n,50)"}
   addUserKnob {22 colorandom l " <img src=\"ColorBars.png\">" -STARTLINE T "import colorsys, random\nn=nuke.thisNode()\nR,G,B= colorsys.hsv_to_rgb(random.random(),.1+random.random()*.15,.15+random.random()*.15)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ) )"}
   addUserKnob {22 darkgrey l "<font color=\"#232323\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.0, 0.0, 0.14]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
   addUserKnob {22 lightgrey l "<font color=\"#383838\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.0, 0.0, 0.22]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
   addUserKnob {22 red l "<font color=\"#8c3838\" size=6>■</font>" T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.0, 0.6, 0.55]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n" +STARTLINE}
   addUserKnob {22 orange l "<font color=\"#b28e59\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.1, 0.5, 0.7]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
   addUserKnob {22 yellow l "<font color=\"#ccc766\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.16, 0.5, 0.8]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
   addUserKnob {22 green l "<font color=\"#5d995b\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.33, 0.4, 0.6]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
   addUserKnob {22 cyan l "<font color=\"#72998f\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.46, 0.25, 0.6]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
   addUserKnob {22 blue l "<font color=\"#59687f\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.6, 0.3, 0.5]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
   addUserKnob {22 darkblue l "<font color=\"#63628c\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.67, 0.3, 0.55]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
   addUserKnob {22 magenta l "<font color=\"#927a99\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.8, 0.2, 0.6]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
   addUserKnob {22 pink l "<font color=\"#997a89\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.92, 0.2, 0.6]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
   addUserKnob {26 S02 l " " T " "}
   addUserKnob {26 Ftools l "" +STARTLINE T "<font color=\"#1C1C1C\"> v1.2 - Franklin VFX - 2018"}
  }
  Read {
   inputs 0
   file_type exr
   file "\[value filepath]Flares/Front/M4_front.%08d.exr"
   format "4096 2160 0 0 4096 2160 1 4K_DCP"
   before black
   last 143
   after black
   origlast 143
   origset true
   on_error black
   version 1
   name Read58
   xpos 10757
   ypos -2869
   postage_stamp false
  }
  Dot {
   name Dot48
   xpos 10791
   ypos -2756
  }
set N10136a20 [stack 0]
  Dot {
   name Dot49
   xpos 10948
   ypos -2756
  }
  FrameHold {
   firstFrame {{"\[if \{\[expression sort]==0\} \{return \[expression ((frame%1)<=0.50)*(1+(((frame)%1)*count))]\} \{return \[expression (((frame%1)>0.50)*(100+(((((frame+0.5)%1))*2))*count))]\}]"}}
   name FrameHold16
   label "assets x\[value count]\nsort: \[value sort]"
   xpos 10914
   ypos -2688
   addUserKnob {20 User}
   addUserKnob {4 sort M {dim bright}}
   sort bright
   addUserKnob {3 count}
   count 43
  }
  Dot {
   name Dot50
   xpos 10948
   ypos -2599
  }
push $N10136a20
  FrameHold {
   firstFrame {{"\[if \{\[expression sort]==0\} \{return \[expression ((frame%1)<=0.50)*(1+(((frame)%1)*count))]\} \{return \[expression (((frame%1)>0.50)*(100+(((((frame+0.5)%1))*2))*count))]\}]"}}
   name FrameHold19
   label "assets x\[value count]\nsort: \[value sort]"
   xpos 10757
   ypos -2689
   addUserKnob {20 User}
   addUserKnob {4 sort M {dim bright}}
   addUserKnob {3 count}
   count 15
  }
  Merge2 {
   inputs 2
   name Merge9
   xpos 10757
   ypos -2603
  }
  Dot {
   name Dot91
   xpos 10791
   ypos -2373
  }
  Read {
   inputs 0
   file_type exr
   file "\[value filepath]Flares/Front/M870_front.########.exr"
   localizationPolicy on
   format "4096 2160 0 0 4096 2160 1 4K_DCP"
   last 24
   origlast 24
   origset true
   on_error black
   version 24
   name Read49
   xpos 10468
   ypos -2873
   postage_stamp false
  }
  FrameHold {
   firstFrame {{1+((frame%1)*(count))}}
   name FrameHold25
   label "assets x\[value count]"
   xpos 10468
   ypos -2676
   addUserKnob {20 User}
   addUserKnob {3 count}
   count 24
  }
  Dot {
   name Dot89
   xpos 10502
   ypos -2373
  }
  Read {
   inputs 0
   file_type exr
   file "\[value filepath]Flares/Front/mp5_front.%08d.exr"
   format "4096 2160 0 0 4096 2160 1 4K_DCP"
   before black
   last 131
   after black
   origlast 131
   origset true
   on_error black
   version 1
   name Read60
   xpos 10027
   ypos -2872
   postage_stamp false
  }
  Dot {
   name Dot51
   xpos 10061
   ypos -2766
  }
set N1017f940 [stack 0]
  Dot {
   name Dot52
   xpos 10218
   ypos -2766
  }
  FrameHold {
   firstFrame {{"\[if \{\[expression sort]==0\} \{return \[expression ((frame%1)<=0.50)*(1+(((frame)%1)*count))]\} \{return \[expression (((frame%1)>0.50)*(100+(((((frame+0.5)%1))*2))*count))]\}]"}}
   name FrameHold15
   label "assets x\[value count]\nsort: \[value sort]"
   xpos 10184
   ypos -2698
   addUserKnob {20 User}
   addUserKnob {4 sort M {dim bright}}
   sort bright
   addUserKnob {3 count}
   count 31
  }
  Dot {
   name Dot53
   xpos 10218
   ypos -2609
  }
push $N1017f940
  FrameHold {
   firstFrame {{"\[if \{\[expression sort]==0\} \{return \[expression ((frame%1)<=0.50)*(1+(((frame)%1)*count))]\} \{return \[expression (((frame%1)>0.50)*(100+(((((frame+0.5)%1))*2))*count))]\}]"}}
   name FrameHold21
   label "assets x\[value count]\nsort: \[value sort]"
   xpos 10027
   ypos -2701
   addUserKnob {20 User}
   addUserKnob {4 sort M {dim bright}}
   addUserKnob {3 count}
   count 24
  }
  Merge2 {
   inputs 2
   name Merge10
   xpos 10027
   ypos -2613
  }
  Dot {
   name Dot90
   xpos 10061
   ypos -2373
  }
  Read {
   inputs 0
   file_type exr
   file "\[value filepath]Flares/Front/M249_front.%08d.exr"
   format "4096 2160 0 0 4096 2160 1 4K_DCP"
   before black
   last 120
   after black
   origlast 120
   origset true
   on_error black
   version 1
   name Read57
   xpos 9640
   ypos -2877
   postage_stamp false
  }
  Dot {
   name Dot42
   xpos 9674
   ypos -2786
  }
set N101b96b0 [stack 0]
  Dot {
   name Dot43
   xpos 9831
   ypos -2786
  }
  FrameHold {
   firstFrame {{"\[if \{\[expression sort]==0\} \{return \[expression ((frame%1)<=0.50)*(1+(((frame)%1)*count))]\} \{return \[expression (((frame%1)>0.50)*(100+(((((frame+0.5)%1))*2))*count))]\}]"}}
   name FrameHold11
   label "assets x\[value count]\nsort: \[value sort]"
   xpos 9797
   ypos -2718
   addUserKnob {20 User}
   addUserKnob {4 sort M {dim bright}}
   sort bright
   addUserKnob {3 count}
   count 20
  }
  Dot {
   name Dot44
   xpos 9831
   ypos -2629
  }
push $N101b96b0
  FrameHold {
   firstFrame {{"\[if \{\[expression sort]==0\} \{return \[expression ((frame%1)<=0.50)*(1+(((frame)%1)*count))]\} \{return \[expression (((frame%1)>0.50)*(100+(((((frame+0.5)%1))*2))*count))]\}]"}}
   name FrameHold12
   label "assets x\[value count]\nsort: \[value sort]"
   xpos 9640
   ypos -2718
   addUserKnob {20 User}
   addUserKnob {4 sort M {dim bright}}
   addUserKnob {3 count}
   count 12
  }
  Merge2 {
   inputs 2
   name Merge7
   xpos 9640
   ypos -2633
  }
  Dot {
   name Dot88
   xpos 9674
   ypos -2373
  }
  Read {
   inputs 0
   file_type exr
   file "\[value filepath]Flares/Front/M16_front.%08d.exr"
   localizationPolicy on
   format "4096 2160 0 0 4096 2160 1 4K_DCP"
   last 26
   origlast 26
   origset true
   on_error black
   version 20
   name Read12
   xpos 9361
   ypos -2876
   postage_stamp false
  }
  FrameHold {
   firstFrame {{1+((frame%1)*(count))}}
   name FrameHold29
   label "assets x\[value count]"
   xpos 9361
   ypos -2659
   addUserKnob {20 User}
   addUserKnob {3 count}
   count 26
  }
  Dot {
   name Dot87
   xpos 9395
   ypos -2373
  }
  Read {
   inputs 0
   file_type exr
   file "\[value filepath]Flares/Front/G2_front.%08d.exr"
   format "4096 2160 0 0 4096 2160 1 4K_DCP"
   before black
   last 113
   after black
   origlast 113
   origset true
   on_error black
   version 1
   name Read32
   xpos 8923
   ypos -2876
   postage_stamp false
  }
  Dot {
   name Dot36
   xpos 8957
   ypos -2787
  }
set N10202a00 [stack 0]
  Dot {
   name Dot37
   xpos 9114
   ypos -2787
  }
  FrameHold {
   firstFrame {{"\[if \{\[expression sort]==0\} \{return \[expression ((frame%1)<=0.50)*(1+(((frame)%1)*count))]\} \{return \[expression (((frame%1)>0.50)*(100+(((((frame+0.5)%1))*2))*count))]\}]"}}
   name FrameHold7
   label "assets x\[value count]\nsort: \[value sort]"
   xpos 9080
   ypos -2718
   addUserKnob {20 User}
   addUserKnob {4 sort M {dim bright}}
   sort bright
   addUserKnob {3 count}
   count 13
  }
  Dot {
   name Dot38
   xpos 9114
   ypos -2630
  }
push $N10202a00
  FrameHold {
   firstFrame {{"\[if \{\[expression sort]==0\} \{return \[expression ((frame%1)<=0.50)*(1+(((frame)%1)*count))]\} \{return \[expression (((frame%1)>0.50)*(100+(((((frame+0.5)%1))*2))*count))]\}]"}}
   name FrameHold8
   label "assets x\[value count]\nsort: \[value sort]"
   xpos 8923
   ypos -2716
   addUserKnob {20 User}
   addUserKnob {4 sort M {dim bright}}
   addUserKnob {3 count}
   count 10
  }
  Merge2 {
   inputs 2
   name Merge5
   xpos 8923
   ypos -2634
  }
  Dot {
   name Dot86
   xpos 8957
   ypos -2373
  }
  Read {
   inputs 0
   file_type exr
   file "\[value filepath]Flares/Front/AR-15_front.%08d.exr"
   format "4096 2160 0 0 4096 2160 1 4K_DCP"
   before black
   last 127
   after black
   origlast 127
   origset true
   on_error black
   version 1
   name Read25
   xpos 8517
   ypos -2867
   postage_stamp false
  }
  Dot {
   name Dot60
   xpos 8551
   ypos -2769
  }
set N1023cac0 [stack 0]
  Dot {
   name Dot61
   xpos 8708
   ypos -2769
  }
  FrameHold {
   firstFrame {{"\[if \{\[expression sort]==0\} \{return \[expression ((frame%1)<=0.50)*(1+(((frame)%1)*count))]\} \{return \[expression (((frame%1)>0.50)*(100+(((((frame+0.5)%1))*2))*count))]\}]"}}
   name FrameHold30
   label "assets x\[value count]\nsort: \[value sort]"
   xpos 8674
   ypos -2700
   addUserKnob {20 User}
   addUserKnob {4 sort M {dim bright}}
   sort bright
   addUserKnob {3 count}
   count 27
  }
  Dot {
   name Dot62
   xpos 8708
   ypos -2612
  }
push $N1023cac0
  FrameHold {
   firstFrame {{"\[if \{\[expression sort]==0\} \{return \[expression ((frame%1)<=0.50)*(1+(((frame)%1)*count))]\} \{return \[expression (((frame%1)>0.50)*(100+(((((frame+0.5)%1))*2))*count))]\}]"}}
   name FrameHold31
   label "assets x\[value count]\nsort: \[value sort]"
   xpos 8517
   ypos -2698
   addUserKnob {20 User}
   addUserKnob {4 sort M {dim bright}}
   addUserKnob {3 count}
   count 16
  }
  Merge2 {
   inputs 2
   name Merge13
   xpos 8517
   ypos -2616
  }
  Dot {
   name Dot85
   xpos 8551
   ypos -2373
  }
  Read {
   inputs 0
   file_type exr
   file "\[value filepath]Flares/Front/AK_front.########.exr"
   localizationPolicy on
   format "4096 2160 0 0 4096 2160 1 4K_DCP"
   last 32
   origlast 32
   origset true
   on_error black
   version 30
   name Read16
   xpos 8235
   ypos -2868
   postage_stamp false
  }
  FrameHold {
   firstFrame {{1+((frame%1)*(count))}}
   name FrameHold33
   label "assets x\[value count]"
   xpos 8235
   ypos -2735
   addUserKnob {20 User}
   addUserKnob {3 count}
   count 32
  }
  Dot {
   name Dot84
   xpos 8269
   ypos -2373
  }
  Read {
   inputs 0
   file_type exr
   file "\[value filepath]Flares/Front/colt45_front.%08d.exr"
   format "4096 2160 0 0 4096 2160 1 4K_DCP"
   before black
   last 115
   after black
   origlast 115
   origset true
   on_error black
   name Read28
   xpos 7811
   ypos -2873
   postage_stamp false
  }
  Dot {
   name Dot28
   xpos 7845
   ypos -2769
  }
set N10285940 [stack 0]
  Dot {
   name Dot32
   xpos 8002
   ypos -2769
  }
  FrameHold {
   firstFrame {{"\[if \{\[expression sort]==0\} \{return \[expression ((frame%1)<=0.50)*(1+(((frame)%1)*count))]\} \{return \[expression (((frame%1)>0.50)*(100+(((((frame+0.5)%1))*2))*count))]\}]"}}
   name FrameHold5
   label "assets x\[value count]\nsort: \[value sort]"
   xpos 7968
   ypos -2697
   addUserKnob {20 User}
   addUserKnob {4 sort M {dim bright}}
   sort bright
   addUserKnob {3 count}
   count 15
  }
  Dot {
   name Dot31
   xpos 8002
   ypos -2611
  }
push $N10285940
  FrameHold {
   firstFrame {{"\[if \{\[expression sort]==0\} \{return \[expression ((frame%1)<=0.50)*(1+(((frame)%1)*count))]\} \{return \[expression (((frame%1)>0.50)*(100+(((((frame+0.5)%1))*2))*count))]\}]"}}
   name FrameHold6
   label "assets x\[value count]\nsort: \[value sort]"
   xpos 7811
   ypos -2698
   addUserKnob {20 User}
   addUserKnob {4 sort M {dim bright}}
   addUserKnob {3 count}
   count 16
  }
  Merge2 {
   inputs 2
   name Merge3
   xpos 7811
   ypos -2615
  }
  Dot {
   name Dot83
   xpos 7845
   ypos -2373
  }
  Roto {
   inputs 0
   output alpha
   curves {{{v x3f99999a}
  {f 0}
  {n
   {layer Root
    {f 2097152}
    {t x45100000 x44a20000}
    {a pt1x 0 pt1y 0 pt2x 0 pt2y 0 pt3x 0 pt3y 0 pt4x 0 pt4y 0 ptex00 0 ptex01 0 ptex02 0 ptex03 0 ptex10 0 ptex11 0 ptex12 0 ptex13 0 ptex20 0 ptex21 0 ptex22 0 ptex23 0 ptex30 0 ptex31 0 ptex32 0 ptex33 0 ptof1x 0 ptof1y 0 ptof2x 0 ptof2y 0 ptof3x 0 ptof3y 0 ptof4x 0 ptof4y 0 pterr 0 ptrefset 0 ptmot x40800000 ptref 0}
    {curvegroup Ellipse1 512 bezier
     {{cc
       {f 8192}
       {p
        {{r
       {{{1 xc232ada0 -}	7}
        {{x41000000 xc232adc0 xb9400000 1 0 1}	1}
        {{x41100000 xc232adc0}	1}}}
      {r
       {{{1 0 -}	8}
        {{x41100000 0}	1}}}}
        {{{1 x44fbb333 -}
       {x40000000}
       {x40400000}
       {x40800000 x45009998 x41facca0 1 x41facca0 1}
       {x40a00000 x4501c4cc -}
       {x40c00000 x4500b4cb -}
       {x40e00000 x45046ccb x42606640 1 x42606640 1}
       {x41000000 x4507b7fd -}
       {x41100000 x45071b30 -}}
      {{1 x444fb9ca -}
       {x40000000}
       {x40400000}
       {x40800000 x4439b9ca xc23799c0 1 xc23799c0 1}
       {x40a00000 x4435e696 -}
       {x40c00000 x44497362 x42813334 1 x42813334 1}
       {x40e00000 x44563363 -}
       {x41000000 x443d202f -}
       {x41100000 x4447a02e -}}}
        {{{1 x42ac4bf0 -}
       {x40000000}
       {x40400000}
       {x40800000}
       {x40c00000}
       {x40e00000 x42ac4be0 -}
       {x41000000}
       {x41100000 x42ac4be0}}
      {{1 0 -}
       {x40000000}
       {x40400000}
       {x40800000}
       {x40c00000}
       {x40e00000}
       {x41000000}
       {x41100000 0}}}
        {{{1 xc2836340 0 1 x414ff600 1}
       {x40000000 xc2641d80 -}
       {x40400000}
       {x40800000 xc1cc8536 -}
       {x40c00000}
       {x40e00000 xc1cc8500 -}
       {x41000000}
       {x41100000 xc1cc8500}}
      {{1 xc25e63c0 0 1 x40f0cd80 1}
       {x40000000 xc24a52a0 -}
       {x40400000}
       {x40800000 xc2055d6c -}
       {x40c00000}
       {x40e00000}
       {x41000000}
       {x41100000 xc2055d6c}}}
        {{{1 x450d0a9a 0 1 xc0b49c00 1}
       {x40000000 x450cce66 -}
       {x40400000 x450dae66 -}
       {x40800000 x450bce66 xc1c99980 1 xc1c99980 1}
       {x40a00000 x450a8800 -}
       {x40c00000 x450c719a x41959980 1 x41959980 1}
       {x40e00000 x450cde66 x41a33200 1 x41a33200 1}
       {x41000000 x450f8666 x42563380 1 0 1}
       {x41100000 x450f8666}}
      {{1 x44663b68 0 1 xc21a2410 1}
       {x40000000 x445dd334 xc1be8340 1 xc1be8340 1}
       {x40400000 x445a5334 -}
       {x40800000 x4463d334 x40a33500 1 x40a33500 1}
       {x40a00000 x44644002 -}
       {x40c00000 x445b5335 -}
       {x40e00000 x4462f99d -}
       {x41000000 x44534003 xc2bcb338 1 0 1}
       {x41100000 x44534003}}}
        {{{1 x425fd880 0 1 xc1312880 1}
       {x40000000 x424251c0 -}
       {x40400000}
       {x40800000 x41cc8535 -}
       {x40c00000}
       {x40e00000 x41cc8500 -}
       {x41000000}
       {x41100000 x41cc8500}}
      {{1 x423d7160 0 1 xc0cd2000 1}
       {x40000000 x422c5960 -}
       {x40400000}
       {x40800000 x42055d6c -}
       {x40c00000}
       {x40e00000}
       {x41000000}
       {x41100000 x42055d6c}}}
        {{{1 0 -}
       {x40000000}
       {x40400000}
       {x40800000}
       {x40c00000}
       {x40e00000}
       {x41000000}
       {x41100000 0}}
      {{1 xc28bc700 -}
       {x40000000}
       {x40400000}
       {x40800000}
       {x40c00000}
       {x40e00000 xc28bc6e8 -}
       {x41000000}
       {x41100000 xc28bc6e8}}}
        {{{1 x4512e0fe 0 1 xc241cc80 1}
       {x40000000 x4510dc32 -}
       {x40400000}
       {x40800000}
       {x40c00000 x450ea0fe -}
       {x40e00000 x45127431 x41f4cc80 1 x41f4cc80 1}
       {x41000000 x45131764 -}
       {x41100000 x45131764}}
      {{1 x44899ccd 0 1 xc1e066a0 1}
       {x40000000 x44874666 -}
       {x40400000}
       {x40800000}
       {x40c00000 x4484b999 -}
       {x40e00000 x4486d998 -}
       {x41000000 x4481f664 xc26a99c0 1 0 1}
       {x41100000 x4481f664}}}
        {{{1 0 -}
       {x40000000}
       {x40400000}
       {x40800000}
       {x40c00000}
       {x40e00000}
       {x41000000}
       {x41100000 0}}
      {{1 x42140ae0 -}
       {x40000000}
       {x40400000}
       {x40800000}
       {x40c00000}
       {x40e00000 x42140b00 -}
       {x41000000}
       {x41100000 x42140b00}}}
        {{{1 x41b47800 -}
       {x40000000}
       {x40400000}
       {x40800000}
       {x40c00000}
       {x40e00000}
       {x41000000}
       {x41100000 x41b47800}}
      {{1 xc204f560 -}
       {x40000000}
       {x40400000}
       {x40800000}
       {x40c00000}
       {x40e00000 xc204f580 -}
       {x41000000}
       {x41100000 xc204f580}}}
        {{{1 x451151b6 -}
       {x40000000}
       {x40400000 x450bf1b6 -}
       {x40800000 x450e71b6 x41ff3340 1 x41ff3340 1}
       {x40a00000 x450fee83 -}
       {x40c00000 x450d61b7 -}
       {x40e00000 x450ef9b7 x41c532c0 1 x41c532c0 1}
       {x41000000 x45107682 x41bafee0 1 0 1}
       {x41100000 x45107682}}
      {{1 x44985573 -}
       {x40000000}
       {x40400000 x44991573 -}
       {x40800000 x4498d573 xc0c00000 1 xc0c00000 1}
       {x40a00000 x4492abd9 xc1fb99a0 1 xc1fb99a0 1}
       {x40c00000 x4490f8a6 -}
       {x40e00000 x449318a6 -}
       {x41000000 x4490f8a5 xc1cc0060 1 0 1}
       {x41100000 x4490f8a5}}}
        {{{1 xc1f93880 -}
       {x40000000}
       {x40400000}
       {x40800000}
       {x40c00000}
       {x40e00000}
       {x41000000}
       {x41100000 xc1f93880}}
      {{1 x42379be0 -}
       {x40000000}
       {x40400000}
       {x40800000}
       {x40c00000}
       {x40e00000 x42379bc0 -}
       {x41000000}
       {x41100000 x42379bc0}}}
        {{{1 x423b1700 -}
       {x40000000}
       {x40400000}
       {x40800000}
       {x40c00000}
       {x40e00000}
       {x41000000}
       {x41100000 x423b1700}}
      {{1 xc208de20 -}
       {x40000000}
       {x40400000}
       {x40800000}
       {x40c00000}
       {x40e00000 xc208de00 -}
       {x41000000}
       {x41100000 xc208de00}}}
        {{{1 x4508c5f8 0 1 x41cbff40 1}
       {x40000000 x4509d5f7 -}
       {x40400000 x450735f7 xc1400300 1 xc1400300 1}
       {x40800000 x4506f5f6 -}
       {x40a00000 x450c6128 -}
       {x40c00000 x450a5c5c -}
       {x40e00000 x450bf45c x41880040 1 x41880040 1}
       {x41000000 x450c7c5d x40880280 1 0 1}
       {x41100000 x450c7c5d}}
      {{1 x44a60814 0 1 x412c0000 1}
       {x40000000 x44a82814 x41ec0000 1 x41ec0000 1}
       {x40400000 x44ad6814 -}
       {x40800000 x44a5e814 xc2a20000 1 xc2a20000 1}
       {x40a00000 x44992814 -}
       {x40c00000 x449adb47 x4174cc80 1 x4174cc80 1}
       {x40e00000 x449cfb46 -}
       {x41000000 x449b11ac xc1b799c0 1 0 1}
       {x41100000 x449b11ac}}}
        {{r
       {{{1 xc1c43600 -}	8}
        {{x41100000 xc1c43600}	1}}}
      {r
       {{{1 x418f8a80 -}	8}
        {{x41100000 x418f8a80}	1}}}}
        {{{1 x41b7c200 0 1 xc063d600 1}
       {x40000000 x41a17f00 xbf9d3800 1 xbf9d3800 1}
       {x40400000 x419e3880 -}
       {x40800000 x41c8c880 -}
       {x40a00000}
       {x40c00000}
       {x40e00000}
       {x41000000}
       {x41100000 x41c8c880}}
      {{1 xc1553580 0 1 x412defe0 1}
       {x40000000 xc04f3000 x41085cc0 1 x41085cc0 1}
       {x40400000 x406e1000 -}
       {x40800000 xc13d4e80 -}
       {x40a00000}
       {x40c00000}
       {x40e00000 xc13d4e00 -}
       {x41000000}
       {x41100000 xc13d4e00}}}
        {{{1 x450463e0 0 1 x42051700 1}
       {x40000000 x4505c6c8 -}
       {x40400000 x450332fa xc2164a00 1 xc2164a00 1}
       {x40800000 x45011478 -}
       {x40a00000 x4506cade -}
       {x40c00000 x4504fc78 -}
       {x40e00000 x450ab944 -}
       {x41000000 x4508b476 xc241cd40 1 0 1}
       {x41100000 x4508b476}}
      {{1 x44ac06c4 0 1 xc02b5400 1}
       {x40000000 x44abcda8 -}
       {x40400000 x44af6f1a -}
       {x40800000 x44a80dc1 xc25048c0 1 xc25048c0 1}
       {x40a00000 x44a26a8e -}
       {x40c00000 x44a59a8f x40a33200 1 x40a33200 1}
       {x40e00000 x44a5d0f5 -}
       {x41000000 x449e2a8f xc2b79990 1 0 1}
       {x41100000 x449e2a8f}}}
        {{{1 xc1fdc300 0 1 x409d5600 1}
       {x40000000 xc1df0480 x3fd90800 1 x3fd90800 1}
       {x40400000 xc1da7f00 -}
       {x40800000 xc20aa2c0 -}
       {x40a00000}
       {x40c00000}
       {x40e00000}
       {x41000000}
       {x41100000 xc20aa2c0}}
      {{1 x41933680 0 1 xc1703040 1}
       {x40000000 x408f1000 xc13c4e80 1 xc13c4e80 1}
       {x40400000 xc0a46000 -}
       {x40800000 x4182b600 -}
       {x40a00000}
       {x40c00000}
       {x40e00000}
       {x41000000}
       {x41100000 x4182b600}}}
        {{{1 x421b7340 -}
       {x40000000}
       {x40400000 x421b7320 -}
       {x40800000}
       {x40a00000}
       {x40c00000}
       {x40e00000 x421b7340 -}
       {x41000000}
       {x41100000 x421b7340}}
      {r
       {{{1 0 -}	8}
        {{x41100000 0}	1}}}}
        {{{1 x44fbe99a 0 1 x42379960 1}
       {x40000000 x44ffbccc -}
       {x40400000 x44fabccd xc20c0000 1 xc20c0000 1}
       {x40800000 x44f6fccc -}
       {x40a00000 x45007ccc -}
       {x40c00000 x44fb3cca -}
       {x40e00000 x45039199 x4274ccc0 1 x4274ccc0 1}
       {x41000000 x450544cb x41233180 1 0 1}
       {x41100000 x450544cb}}
      {{1 x44afd31a 0 1 xc241cce0 1}
       {x40000000 x44abc980 -}
       {x40400000 x44acc980 x41400000 1 x41400000 1}
       {x40800000 x44aec980 -}
       {x40a00000 x44a4ccb3 -}
       {x40c00000 x44a7c64d x41233200 1 x41233200 1}
       {x40e00000 x44a83319 -}
       {x41000000 x44a7597e xc1233440 1 0 1}
       {x41100000 x44a7597e}}}
        {{{1 xc27f4120 -}
       {x40000000}
       {x40400000}
       {x40800000}
       {x40c00000}
       {x40e00000}
       {x41000000}
       {x41100000 xc27f4120}}
      {{1 0 -}
       {x40000000}
       {x40400000}
       {x40800000}
       {x40c00000}
       {x40e00000}
       {x41000000}
       {x41100000 0}}}
        {{{1 x423f3700 -}
       {x40000000}
       {x40400000}
       {x40800000}
       {x40c00000}
       {x40e00000}
       {x41000000}
       {x41100000 x423f3700}}
      {{1 x42057c40 -}
       {x40000000}
       {x40400000}
       {x40800000}
       {x40c00000}
       {x40e00000}
       {x41000000}
       {x41100000 x42057c40}}}
        {{{1 x44e409a9 0 1 x42849990 1}
       {x40000000 x44e9900f -}
       {x40400000}
       {x40800000}
       {x40a00000 x44f1d9aa -}
       {x40c00000 x44eb0cde -}
       {x40e00000 x44f91342 -}
       {x41000000 x44f7600e xc1a33380 1 0 1}
       {x41100000 x44f78cdb}}
      {{1 x44abf3d1 0 1 xc2b28000 1}
       {x40000000 x44a483d1 -}
       {x40400000}
       {x40800000}
       {x40a00000 x44a29a37 -}
       {x40c00000 x44a593d0 x421c6670 1 x421c6670 1}
       {x40e00000 x44ac609e -}
       {x41000000 x44a6a3d1 xc289b338 1 0 1}
       {x41100000 x44ac109d}}}
        {{{1 xc1f7d0c0 -}
       {x40000000}
       {x40400000}
       {x40800000}
       {x40c00000}
       {x40e00000}
       {x41000000}
       {x41100000 xc1f7d0c0}}
      {{1 xc1acff40 -}
       {x40000000}
       {x40400000}
       {x40800000}
       {x40c00000}
       {x40e00000 xc1acff80 -}
       {x41000000}
       {x41100000 xc1acff80}}}
        {{{1 x417e6600 0 1 x4217f6e0 1}
       {x40000000 x4224e8c0 -}
       {x40400000}
       {x40800000}
       {x40c00000}
       {x40e00000}
       {x41000000}
       {x41100000 x4224e8c0}}
      {{1 x42263140 0 1 xc19baf00 1}
       {x40000000 x41e49880 -}
       {x40400000}
       {x40800000}
       {x40c00000}
       {x40e00000}
       {x41000000}
       {x41100000 x41e49880}}}
        {{{1 x44db5432 0 1 xc273c960 1}
       {x40000000 x44d64000 -}
       {x40400000 x44dd4000 x424c0010 1 x424c0010 1}
       {x40800000 x44e30001 x4174ce00 1 x4174ce00 1}
       {x40a00000 x44e3a335 -}
       {x40c00000 x44db9003 -}
       {x40e00000 x44eb1335 -}
       {x41000000 x44e92998 xc1b79ae0 1 0 1}
       {x41100000 x44e92998}}
      {{1 x449f866c 0 1 x40bb2c00 1}
       {x40000000 x44a00334 -}
       {x40400000 x449a8334 xc2240000 1 xc2240000 1}
       {x40800000 x4495c334 -}
       {x40a00000 x4496d334 x41b799a0 1 x41b799a0 1}
       {x40c00000 x449b8001 x422d6670 1 x422d6670 1}
       {x40e00000 x44a1a99b x42343330 1 x42343330 1}
       {x41000000 x44a6c334 x421ab318 1 0 1}
       {x41100000 x44a6c334}}}
        {{{1 xc158b600 0 1 xc2017320 1}
       {x40000000 xc20c7a40 -}
       {x40400000}
       {x40800000}
       {x40c00000}
       {x40e00000}
       {x41000000}
       {x41100000 xc20c7a40}}
      {{1 xc20d9240 0 1 x41849e40 1}
       {x40000000 xc1c2bb00 -}
       {x40400000}
       {x40800000}
       {x40c00000}
       {x40e00000}
       {x41000000}
       {x41100000 xc1c2bb00}}}
        {{{1 x408ac100 0 1 x39400000 1}
       {x40000000 x408ac200 -}
       {x40400000}
       {x40800000}
       {x40c00000}
       {x40e00000}
       {x41000000}
       {x41100000 x408ac200}}
      {{1 x42154f40 0 1 x39400000 1}
       {x40000000 x42154f60 -}
       {x40400000}
       {x40800000}
       {x40c00000}
       {x40e00000 x42154f40 -}
       {x41000000}
       {x41100000 x42154f40}}}
        {{{1 x44d806af 0 1 xc296a068 1}
       {x40000000 x44d1c000 -}
       {x40400000 x44d68000 x424ffff0 1 x424ffff0 1}
       {x40800000 x44debfff x4174cb00 1 x4174cb00 1}
       {x40a00000 x44df6331 -}
       {x40c00000 x44d93997 -}
       {x40e00000 x44e84ffe -}
       {x41000000 x44df632e xc2d63380 1 0 1}
       {x41100000 x44df632e}}
      {{1 x449187ae 0 1 xc15b5c40 1}
       {x40000000 x44902333 xc0c00000 1 xc0c00000 1}
       {x40400000 x448fe333 xc0c00000 1 xc0c00000 1}
       {x40800000 x448c2333 -}
       {x40a00000 x4491a999 x41a332c0 1 x41a332c0 1}
       {x40c00000 x44928332 x41a332c0 1 x41a332c0 1}
       {x40e00000 x449a6000 -}
       {x41000000 x44995000 xc14c0000 1 0 1}
       {x41100000 x44995000}}}
        {{{1 xc016d200 -}
       {x40000000}
       {x40400000}
       {x40800000}
       {x40c00000}
       {x40e00000}
       {x41000000}
       {x41100000 xc016d200}}
      {{1 xc1a24b00 -}
       {x40000000}
       {x40400000}
       {x40800000}
       {x40c00000}
       {x40e00000}
       {x41000000}
       {x41100000 xc1a24b00}}}
        {{{1 0 -}
       {x40000000}
       {x40400000}
       {x40800000}
       {x40c00000}
       {x40e00000}
       {x41000000}
       {x41100000 0}}
      {{1 x4191dac0 -}
       {x40000000}
       {x40400000}
       {x40800000}
       {x40c00000}
       {x40e00000 x4191db00 -}
       {x41000000}
       {x41100000 x4191db00}}}
        {{{1 x44d7979e 0 1 xc1f4cc80 1}
       {x40000000 x44d50ad2 -}
       {x40400000 x44d6cad2 x41e7ffe0 1 x41e7ffe0 1}
       {x40800000 x44dc4ad1 -}
       {x40a00000 x44d8ae05 -}
       {x40c00000}
       {x40e00000 x44e3179f -}
       {x41000000 x44dc8137 xc29e19c0 1 0 1}
       {x41100000 x44dc8137}}
      {{1 x448a4000 0 1 xc27f0000 1}
       {x40000000 x4484f000 -}
       {x40400000 x44853000 -}
       {x40800000 x4483f000 -}
       {x40a00000 x448a1999 -}
       {x40c00000}
       {x40e00000 x448f3331 -}
       {x41000000 x448d4998 xc1b79960 1 0 1}
       {x41100000 x448d4998}}}
        {{{1 0 -}
       {x40000000}
       {x40400000}
       {x40800000}
       {x40c00000}
       {x40e00000}
       {x41000000}
       {x41100000 0}}
      {{1 xc1b65180 -}
       {x40000000}
       {x40400000}
       {x40800000}
       {x40c00000}
       {x40e00000}
       {x41000000}
       {x41100000 xc1b65180}}}
        {{{1 x410f6f80 0 1 xc1a33320 1}
       {x40000000 xc0945400 -}
       {x40400000}
       {x40800000}
       {x40c00000 x41280200 -}
       {x40e00000}
       {x41000000}
       {x41100000 x41280200}}
      {{1 x419bd040 0 1 x418ecce0 1}
       {x40000000 x41fb0380 -}
       {x40400000}
       {x40800000}
       {x40c00000 x41f80000 -}
       {x40e00000}
       {x41000000}
       {x41100000 x41f80000}}}
        {{{1 x44d50776 0 1 x425a3310 1}
       {x40000000 x44d99331 -}
       {x40400000 x44d8532f -}
       {x40800000 x44d9932e -}
       {x40a00000 x44d5f662 -}
       {x40c00000 x44d8effc x419599a0 1 x419599a0 1}
       {x40e00000 x44daa32f x41159940 1 x41159940 1}
       {x41000000 x44db4661 x403e6380 1 0 1}
       {x41100000 x44db4661}}
      {{1 x4482694f 0 1 xc1d6e8c0 1}
       {x40000000 x447e2666 xc1d2c380 1 xc1d2c380 1}
       {x40400000 x4477a666 xc1b00000 1 xc1b00000 1}
       {x40800000 x44732666 -}
       {x40a00000 x44832333 -}
       {x40c00000 x44806000 -}
       {x40e00000 x44872ccd -}
       {x41000000 x44828000 xc2606670 1 0 1}
       {x41100000 x44828000}}}
        {{{1 xc10f7000 0 1 x41a33380 1}
       {x40000000 x40945400 -}
       {x40400000}
       {x40800000}
       {x40c00000 xc122cf80 -}
       {x40e00000}
       {x41000000}
       {x41100000 xc122cf80}}
      {{1 xc19bd040 0 1 xc18ecce0 1}
       {x40000000 xc1fb0380 -}
       {x40400000}
       {x40800000}
       {x40c00000 xc1f05340 x39400000 1 x39400000 1}
       {x40e00000 xc1f05320 -}
       {x41000000}
       {x41100000 xc1f05320}}}
        {{{1 xc124d200 -}
       {x40000000}
       {x40400000}
       {x40800000}
       {x40c00000}
       {x40e00000}
       {x41000000}
       {x41100000 xc124d200}}
      {{1 x41976920 0 1 x38c00000 1}
       {x40000000 x41976940 -}
       {x40400000}
       {x40800000}
       {x40c00000}
       {x40e00000}
       {x41000000}
       {x41100000 x41976940}}}
        {{{1 x44d465c4 0 1 x42a33350 1}
       {x40000000 x44db3292 -}
       {x40400000 x44daf292 -}
       {x40800000 x44de3294 x42133360 1 x42133360 1}
       {x40a00000 x44e425c8 -}
       {x40c00000 x44c95f61 -}
       {x40e00000 x44d68c2d x42b27fe8 1 x42b27fe8 1}
       {x41000000 x44dfaf5e x42820ca4 1 0 1}
       {x41100000 x44dfaf5e}}
      {{1 x44769821 0 1 xc249fff8 1}
       {x40000000 x446ab1bb xc2273330 1 xc2273330 1}
       {x40400000 x4461b1bb xc20c0000 1 xc20c0000 1}
       {x40800000 x445931bb -}
       {x40a00000 x44628b54 -}
       {x40c00000 x44585820 -}
       {x40e00000 x448135a9 -}
       {x41000000 x446e04ec xc2f4ccc8 1 0 1}
       {x41100000 x446e04ec}}}
        {{r
       {{{1 x416ffb00 -}	8}
        {{x41100000 x416ffb00}	1}}}
      {r
       {{{1 xc1dc7460 -}	8}
        {{x41100000 xc1dc7460}	1}}}}
        {{{1 xc1f9abc0 0 1 x412ee040 1}
       {x40000000 xc1bf6100 -}
       {x40400000 xc1c18580 xbf4db000 1 xbf4db000 1}
       {x40800000 xc1e56c40 -}
       {x40a00000 xc1d4cf00 -}
       {x40c00000}
       {x40e00000}
       {x41000000}
       {x41100000 xc1d4cf00}}
      {{1 x41b04ea0 0 1 xc0d874a0 1}
       {x40000000 x417a9a00 xc0b32a40 1 xc0b32a40 1}
       {x40400000 x412d7300 xc0987a00 1 xc0987a00 1}
       {x40800000 x40c44000 -}
       {x40a00000 x419096a0 -}
       {x40c00000}
       {x40e00000}
       {x41000000}
       {x41100000 x419096a0}}}
        {{{1 x44dd586e 0 1 x427ae8a0 1}
       {x40000000 x44e2929c -}
       {x40400000 x44e26169 -}
       {x40800000 x44e5bfff x4119f480 1 x4119f480 1}
       {x40a00000 x44e626a2 -}
       {x40c00000 x44e32d08 -}
       {x40e00000 x44ea66a3 -}
       {x41000000 x44e956a1 xc14c0180 1 0 1}
       {x41100000 x44e956a1}}
      {{1 x4463d24d 0 1 xc21b4780 1}
       {x40000000 x445aac81 xc2008740 1 xc2008740 1}
       {x40400000 x4453c165 xc21d6408 1 xc21d6408 1}
       {x40800000 x44470000 -}
       {x40a00000 x44482210 x41598c00 1 x41598c00 1}
       {x40c00000 x44503544 x421c6670 1 x421c6670 1}
       {x40e00000 x445baede -}
       {x41000000 x444da877 xc2a84cd4 1 0 1}
       {x41100000 x444da877}}}
        {{{1 x41e67780 0 1 xc1216e80 1}
       {x40000000 x41b0a800 -}
       {x40400000 x41b2a2c0 x3f3e0800 1 x3f3e0800 1}
       {x40800000 x41d3c680 -}
       {x40a00000 x41c470c0 -}
       {x40c00000}
       {x40e00000}
       {x41000000}
       {x41100000 x41c470c0}}
      {{1 xc1a2bec0 0 1 x40c7cdc0 1}
       {x40000000 xc1675340 x40a56200 1 x40a56200 1}
       {x40400000 xc1201b80 x408cbfc0 1 x408cbfc0 1}
       {x40800000 xc0b52700 -}
       {x40a00000 xc1857780 -}
       {x40c00000}
       {x40e00000}
       {x41000000}
       {x41100000 xc1857780}}}
        {{{1 xc20cb3c0 0 1 x41347d40 1}
       {x40000000 xc1dd3dc0 -}
       {x40400000 xc1df7440 xbf547000 1 xbf547000 1}
       {x40800000 xc1f35c40 -}
       {x40a00000 xc1f35c00 -}
       {x40c00000}
       {x40e00000}
       {x41000000}
       {x41100000 xc1f35c00}}
      {{1 x4155a580 0 1 xc0df6680 1}
       {x40000000 x40d8b900 xc0b8e900 1 xc0b8e900 1}
       {x40400000 x3fe5e400 -}
       {x40800000 x41142d00 -}
       {x40a00000}
       {x40c00000}
       {x40e00000}
       {x41000000}
       {x41100000 x41142d00}}}
        {{{1 x44e990d5 0 1 x41e5c920 1}
       {x40000000 x44ebf598 -}
       {x40400000 x44ebdf11 -}
       {x40800000 x44f19451 -}
       {x40a00000 x44f09450 -}
       {x40c00000}
       {x40e00000 x44fc7ab7 -}
       {x41000000 x44fa911d -}
       {x41100000 x44fa6451 -}}
      {{1 x44570c56 0 1 xc18e3508 1}
       {x40000000 x4452dc02 xc16b6ae0 1 xc16b6ae0 1}
       {x40400000 x444fb0ff xc18ea800 1 xc18ea800 1}
       {x40800000 x4449f182 xc209fbe8 1 xc209fbe8 1}
       {x40a00000 x443e7182 -}
       {x40c00000}
       {x40e00000 x4436cb1c xc12332c0 1 xc12332c0 1}
       {x41000000 x4435f183 -}
       {x41100000 x44407183 -}}}
        {{{1 x42436b80 0 1 xc17aad00 1}
       {x40000000 x4219a400 -}
       {x40400000 x421b2d20 x3f936c00 1 x3f936c00 1}
       {x40800000 x42290000 -}
       {x40a00000}
       {x40c00000}
       {x40e00000}
       {x41000000 x42290020 x39400000 1 0 1}
       {x41100000 x42290020}}
      {{1 xc1945d80 0 1 x411b2290 1}
       {x40000000 xc1168100 x410068e0 1 x410068e0 1}
       {x40400000 xc01fa500 -}
       {x40800000 xc14dcc80 -}
       {x40a00000}
       {x40c00000}
       {x40e00000}
       {x41000000}
       {x41100000 xc14dcc80}}}}}
      {cc
       {f 8192}
       {p
        {{r
       {{{1 xc232ada0 -}	7}
        {{x41000000 xc232adc0 xb9400000 1 0 1}	1}
        {{x41100000 xc232adc0}	1}}}
      {r
       {{{1 0 -}	8}
        {{x41100000 0}	1}}}}
        {{r
       {{{1 0 -}	8}
        {{x41100000 0}	1}}}
      {r
       {{{1 0 -}	8}
        {{x41100000 0}	1}}}}
        {{r
       {{{1 x42ac4bf0 -}	3}
        {{x40800000 x42ac4c00 -}	5}
        {{x41100000 x42ac4c00}	1}}}
      {r
       {{{1 0 -}	8}
        {{x41100000 0}	1}}}}
        {{{1 xc2836340 0 1 x414ff600 1}
       {x40000000 xc2641d80 -}
       {x40400000}
       {x40800000 xc1cc8536 -}
       {x40c00000}
       {x40e00000 xc1cc8500 -}
       {x41000000}
       {x41100000 xc1cc8500}}
      {{1 xc25e63c0 0 1 x40f0cd80 1}
       {x40000000 xc24a52a0 -}
       {x40400000}
       {x40800000 xc2055d6c -}
       {x40c00000}
       {x40e00000}
       {x41000000}
       {x41100000 xc2055d6c}}}
        {{{1 0 -}
       {x40000000}
       {x40400000}
       {x40800000}
       {x40c00000}
       {x40e00000}
       {x41000000}
       {x41100000 0}}
      {{1 0 -}
       {x40000000}
       {x40400000}
       {x40800000}
       {x40c00000}
       {x40e00000}
       {x41000000}
       {x41100000 0}}}
        {{{1 x425fd880 0 1 xc1312880 1}
       {x40000000 x424251c0 -}
       {x40400000}
       {x40800000 x41cc8535 -}
       {x40c00000}
       {x40e00000 x41cc8500 -}
       {x41000000}
       {x41100000 x41cc8500}}
      {{1 x423d7160 0 1 xc0cd2000 1}
       {x40000000 x422c5960 -}
       {x40400000}
       {x40800000 x42055d6c -}
       {x40c00000}
       {x40e00000}
       {x41000000}
       {x41100000 x42055d6c}}}
        {{{1 0 -}
       {x40000000}
       {x40400000}
       {x40800000}
       {x40c00000}
       {x40e00000}
       {x41000000}
       {x41100000 0}}
      {{1 xc28bc700 -}
       {x40000000}
       {x40400000}
       {x40800000}
       {x40c00000}
       {x40e00000 xc28bc6e8 -}
       {x41000000}
       {x41100000 xc28bc6e8}}}
        {{{1 0 -}
       {x40000000}
       {x40400000}
       {x40800000}
       {x40c00000}
       {x40e00000}
       {x41000000}
       {x41100000 0}}
      {{1 0 -}
       {x40000000}
       {x40400000}
       {x40800000}
       {x40c00000}
       {x40e00000}
       {x41000000}
       {x41100000 0}}}
        {{{1 0 -}
       {x40000000}
       {x40400000}
       {x40800000}
       {x40c00000}
       {x40e00000}
       {x41000000}
       {x41100000 0}}
      {{1 x42140ae0 -}
       {x40000000}
       {x40400000}
       {x40800000}
       {x40c00000}
       {x40e00000 x42140b00 -}
       {x41000000}
       {x41100000 x42140b00}}}
        {{{1 x41b47800 -}
       {x40000000}
       {x40400000}
       {x40800000}
       {x40c00000}
       {x40e00000}
       {x41000000}
       {x41100000 x41b47800}}
      {{1 xc204f560 -}
       {x40000000}
       {x40400000}
       {x40800000}
       {x40c00000}
       {x40e00000 xc204f580 -}
       {x41000000}
       {x41100000 xc204f580}}}
        {{{1 0 -}
       {x40000000}
       {x40400000}
       {x40800000}
       {x40c00000}
       {x40e00000}
       {x41000000}
       {x41100000 0}}
      {{1 0 -}
       {x40000000}
       {x40400000}
       {x40800000}
       {x40c00000}
       {x40e00000}
       {x41000000}
       {x41100000 0}}}
        {{{1 xc1f93880 -}
       {x40000000}
       {x40400000}
       {x40800000}
       {x40c00000}
       {x40e00000}
       {x41000000}
       {x41100000 xc1f93880}}
      {{1 x42379be0 -}
       {x40000000}
       {x40400000}
       {x40800000}
       {x40c00000}
       {x40e00000 x42379bc0 -}
       {x41000000}
       {x41100000 x42379bc0}}}
        {{r
       {{{1 x423b1700 -}	8}
        {{x41100000 x423b1700}	1}}}
      {r
       {{{1 xc208de20 -}	6}
        {{x40e00000 xc208de00 -}	2}
        {{x41100000 xc208de00}	1}}}}
        {{r
       {{{1 0 -}	8}
        {{x41100000 0}	1}}}
      {r
       {{{1 0 -}	8}
        {{x41100000 0}	1}}}}
        {{r
       {{{1 xc1c43600 -}	8}
        {{x41100000 xc1c43600}	1}}}
      {r
       {{{1 x418f8a80 -}	8}
        {{x41100000 x418f8a80}	1}}}}
        {{{1 x41b7c200 0 1 xc063d600 1}
       {x40000000 x41a17f00 xbf9d3800 1 xbf9d3800 1}
       {x40400000 x419e3880 -}
       {x40800000 x41c8c880 -}
       {x40a00000}
       {x40c00000}
       {x40e00000}
       {x41000000}
       {x41100000 x41c8c880}}
      {{1 xc1553580 0 1 x412defe0 1}
       {x40000000 xc04f3000 x41085cc0 1 x41085cc0 1}
       {x40400000 x406e1000 -}
       {x40800000 xc13d4e80 -}
       {x40a00000}
       {x40c00000}
       {x40e00000 xc13d4e00 -}
       {x41000000}
       {x41100000 xc13d4e00}}}
        {{r
       {{{1 0 -}	8}
        {{x41100000 0}	1}}}
      {r
       {{{1 0 -}	8}
        {{x41100000 0}	1}}}}
        {{{1 xc1fdc300 0 1 x409d5600 1}
       {x40000000 xc1df0480 x3fd90800 1 x3fd90800 1}
       {x40400000 xc1da7f00 -}
       {x40800000 xc20aa2c0 -}
       {x40a00000}
       {x40c00000}
       {x40e00000}
       {x41000000}
       {x41100000 xc20aa2c0}}
      {{1 x41933680 0 1 xc1703040 1}
       {x40000000 x408f1000 xc13c4e80 1 xc13c4e80 1}
       {x40400000 xc0a46000 -}
       {x40800000 x4182b600 -}
       {x40a00000}
       {x40c00000}
       {x40e00000}
       {x41000000}
       {x41100000 x4182b600}}}
        {{{1 x421b7340 -}
       {x40000000}
       {x40400000 x421b7320 -}
       {x40800000}
       {x40a00000}
       {x40c00000}
       {x40e00000 x421b7340 -}
       {x41000000}
       {x41100000 x421b7340}}
      {r
       {{{1 0 -}	8}
        {{x41100000 0}	1}}}}
        {{r
       {{{1 0 -}	8}
        {{x41100000 0}	1}}}
      {r
       {{{1 0 -}	8}
        {{x41100000 0}	1}}}}
        {{r
       {{{1 xc27f4120 -}	8}
        {{x41100000 xc27f4120}	1}}}
      {r
       {{{1 0 -}	8}
        {{x41100000 0}	1}}}}
        {{{1 x423f3700 -}
       {x40000000}
       {x40400000}
       {x40800000}
       {x40c00000}
       {x40e00000}
       {x41000000}
       {x41100000 x423f3700}}
      {{1 x42057c40 -}
       {x40000000}
       {x40400000}
       {x40800000}
       {x40c00000}
       {x40e00000}
       {x41000000}
       {x41100000 x42057c40}}}
        {{{1 0 -}
       {x40000000}
       {x40400000}
       {x40800000}
       {x40c00000}
       {x40e00000}
       {x41000000}
       {x41100000 0}}
      {{1 0 -}
       {x40000000}
       {x40400000}
       {x40800000}
       {x40c00000}
       {x40e00000}
       {x41000000}
       {x41100000 0}}}
        {{{1 xc1f7d0c0 -}
       {x40000000}
       {x40400000}
       {x40800000}
       {x40c00000}
       {x40e00000}
       {x41000000}
       {x41100000 xc1f7d0c0}}
      {{1 xc1acff40 -}
       {x40000000}
       {x40400000}
       {x40800000}
       {x40c00000}
       {x40e00000 xc1acff80 -}
       {x41000000}
       {x41100000 xc1acff80}}}
        {{{1 x417e6600 0 1 x4217f6e0 1}
       {x40000000 x4224e8c0 -}
       {x40400000}
       {x40800000}
       {x40c00000}
       {x40e00000}
       {x41000000}
       {x41100000 x4224e8c0}}
      {{1 x42263140 0 1 xc19baf00 1}
       {x40000000 x41e49880 -}
       {x40400000}
       {x40800000}
       {x40c00000}
       {x40e00000}
       {x41000000}
       {x41100000 x41e49880}}}
        {{{1 0 -}
       {x40000000}
       {x40400000}
       {x40800000}
       {x40c00000}
       {x40e00000}
       {x41000000}
       {x41100000 0}}
      {{1 0 -}
       {x40000000}
       {x40400000}
       {x40800000}
       {x40c00000}
       {x40e00000}
       {x41000000}
       {x41100000 0}}}
        {{{1 xc158b600 0 1 xc2017320 1}
       {x40000000 xc20c7a40 -}
       {x40400000}
       {x40800000}
       {x40c00000}
       {x40e00000}
       {x41000000}
       {x41100000 xc20c7a40}}
      {{1 xc20d9240 0 1 x41849e40 1}
       {x40000000 xc1c2bb00 -}
       {x40400000}
       {x40800000}
       {x40c00000}
       {x40e00000}
       {x41000000}
       {x41100000 xc1c2bb00}}}
        {{{1 x408ac100 0 1 x39400000 1}
       {x40000000 x408ac200 -}
       {x40400000}
       {x40800000}
       {x40c00000}
       {x40e00000}
       {x41000000}
       {x41100000 x408ac200}}
      {{1 x42154f40 0 1 x39400000 1}
       {x40000000 x42154f60 -}
       {x40400000}
       {x40800000}
       {x40c00000}
       {x40e00000 x42154f40 -}
       {x41000000}
       {x41100000 x42154f40}}}
        {{{1 0 -}
       {x40000000}
       {x40400000}
       {x40800000}
       {x40c00000}
       {x40e00000}
       {x41000000}
       {x41100000 0}}
      {{1 0 -}
       {x40000000}
       {x40400000}
       {x40800000}
       {x40c00000}
       {x40e00000}
       {x41000000}
       {x41100000 0}}}
        {{{1 xc016d200 -}
       {x40000000}
       {x40400000}
       {x40800000}
       {x40c00000}
       {x40e00000}
       {x41000000}
       {x41100000 xc016d200}}
      {{1 xc1a24b00 -}
       {x40000000}
       {x40400000}
       {x40800000}
       {x40c00000}
       {x40e00000}
       {x41000000}
       {x41100000 xc1a24b00}}}
        {{{1 0 -}
       {x40000000}
       {x40400000}
       {x40800000}
       {x40c00000}
       {x40e00000}
       {x41000000}
       {x41100000 0}}
      {{1 x4191dac0 -}
       {x40000000}
       {x40400000}
       {x40800000}
       {x40c00000}
       {x40e00000 x4191db00 -}
       {x41000000}
       {x41100000 x4191db00}}}
        {{{1 0 -}
       {x40000000}
       {x40400000}
       {x40800000}
       {x40c00000}
       {x40e00000}
       {x41000000}
       {x41100000 0}}
      {{1 0 -}
       {x40000000}
       {x40400000}
       {x40800000}
       {x40c00000}
       {x40e00000}
       {x41000000}
       {x41100000 0}}}
        {{{1 0 -}
       {x40000000}
       {x40400000}
       {x40800000}
       {x40c00000}
       {x40e00000}
       {x41000000}
       {x41100000 0}}
      {{1 xc1b65180 -}
       {x40000000}
       {x40400000}
       {x40800000}
       {x40c00000}
       {x40e00000}
       {x41000000}
       {x41100000 xc1b65180}}}
        {{{1 x410f6f80 0 1 xc1a33320 1}
       {x40000000 xc0945400 -}
       {x40400000}
       {x40800000}
       {x40c00000 x41280200 -}
       {x40e00000}
       {x41000000}
       {x41100000 x41280200}}
      {{1 x419bd040 0 1 x418ecce0 1}
       {x40000000 x41fb0380 -}
       {x40400000}
       {x40800000}
       {x40c00000 x41f80000 -}
       {x40e00000}
       {x41000000}
       {x41100000 x41f80000}}}
        {{{1 0 -}
       {x40000000}
       {x40400000}
       {x40800000}
       {x40c00000}
       {x40e00000}
       {x41000000}
       {x41100000 0}}
      {{1 0 -}
       {x40000000}
       {x40400000}
       {x40800000}
       {x40c00000}
       {x40e00000}
       {x41000000}
       {x41100000 0}}}
        {{{1 xc10f7000 0 1 x41a33380 1}
       {x40000000 x40945400 -}
       {x40400000}
       {x40800000}
       {x40c00000 xc122cf80 -}
       {x40e00000}
       {x41000000}
       {x41100000 xc122cf80}}
      {{1 xc19bd040 0 1 xc18ecce0 1}
       {x40000000 xc1fb0380 -}
       {x40400000}
       {x40800000}
       {x40c00000 xc1f05340 x39400000 1 x39400000 1}
       {x40e00000 xc1f05320 -}
       {x41000000}
       {x41100000 xc1f05320}}}
        {{r
       {{{1 xc124d200 -}	8}
        {{x41100000 xc124d200}	1}}}
      {r
       {{{1 x41976920 0 1 x38c00000 1}	1}
        {{x40000000 x41976940 -}	7}
        {{x41100000 x41976940}	1}}}}
        {{r
       {{{1 0 -}	8}
        {{x41100000 0}	1}}}
      {r
       {{{1 0 -}	8}
        {{x41100000 0}	1}}}}
        {{r
       {{{1 x416ffb00 -}	8}
        {{x41100000 x416ffb00}	1}}}
      {r
       {{{1 xc1dc7460 -}	8}
        {{x41100000 xc1dc7460}	1}}}}
        {{{1 xc1f9abc0 0 1 x412ee040 1}
       {x40000000 xc1bf6100 -}
       {x40400000 xc1c18580 xbf4db000 1 xbf4db000 1}
       {x40800000 xc1e56c40 -}
       {x40a00000 xc1d4cf00 -}
       {x40c00000}
       {x40e00000}
       {x41000000}
       {x41100000 xc1d4cf00}}
      {{1 x41b04ea0 0 1 xc0d874a0 1}
       {x40000000 x417a9a00 xc0b32a40 1 xc0b32a40 1}
       {x40400000 x412d7300 xc0987a00 1 xc0987a00 1}
       {x40800000 x40c44000 -}
       {x40a00000 x419096a0 -}
       {x40c00000}
       {x40e00000}
       {x41000000}
       {x41100000 x419096a0}}}
        {{r
       {{{1 0 -}	8}
        {{x41100000 0}	1}}}
      {r
       {{{1 0 -}	8}
        {{x41100000 0}	1}}}}
        {{{1 x41e67780 0 1 xc1216e80 1}
       {x40000000 x41b0a800 -}
       {x40400000 x41b2a2c0 x3f3e0800 1 x3f3e0800 1}
       {x40800000 x41d3c680 -}
       {x40a00000 x41c470c0 -}
       {x40c00000}
       {x40e00000}
       {x41000000}
       {x41100000 x41c470c0}}
      {{1 xc1a2bec0 0 1 x40c7cdc0 1}
       {x40000000 xc1675340 x40a56200 1 x40a56200 1}
       {x40400000 xc1201b80 x408cbfc0 1 x408cbfc0 1}
       {x40800000 xc0b52700 -}
       {x40a00000 xc1857780 -}
       {x40c00000}
       {x40e00000}
       {x41000000}
       {x41100000 xc1857780}}}
        {{{1 xc20cb3c0 0 1 x41347d40 1}
       {x40000000 xc1dd3dc0 -}
       {x40400000 xc1df7440 xbf547000 1 xbf547000 1}
       {x40800000 xc1f35c40 -}
       {x40a00000 xc1f35c00 -}
       {x40c00000}
       {x40e00000}
       {x41000000}
       {x41100000 xc1f35c00}}
      {{1 x4155a580 0 1 xc0df6680 1}
       {x40000000 x40d8b900 xc0b8e900 1 xc0b8e900 1}
       {x40400000 x3fe5e400 -}
       {x40800000 x41142d00 -}
       {x40a00000}
       {x40c00000}
       {x40e00000}
       {x41000000}
       {x41100000 x41142d00}}}
        {{r
       {{{1 0 -}	8}
        {{x41100000 0}	1}}}
      {r
       {{{1 0 -}	8}
        {{x41100000 0}	1}}}}
        {{{1 x42436b80 0 1 xc17aad00 1}
       {x40000000 x4219a400 -}
       {x40400000 x421b2d20 x3f936c00 1 x3f936c00 1}
       {x40800000 x42290000 -}
       {x40a00000}
       {x40c00000}
       {x40e00000}
       {x41000000 x42290020 x39400000 1 0 1}
       {x41100000 x42290020}}
      {{1 xc1945d80 0 1 x411b2290 1}
       {x40000000 xc1168100 x410068e0 1 x410068e0 1}
       {x40400000 xc01fa500 -}
       {x40800000 xc14dcc80 -}
       {x40a00000}
       {x40c00000}
       {x40e00000}
       {x41000000}
       {x41100000 xc14dcc80}}}}}}
     {tx x40a00000 x44ffe000 x44784000}
     {a osw x41200000 osf 0 str 1 spx x45100000 spy x44a20000 sb 1 ltn x40a00000 ltm x40a00000 tt x40e00000}}}}}}
   toolbox {selectAll {
  { selectAll str 1 ssx 1 ssy 1 sf 1 }
  { createBezier str 1 ssx 1 ssy 1 sf 1 sb 1 tt 4 }
  { createBezierCusped str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { createBSpline str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { createEllipse str 1 ssx 1 ssy 1 sf 1 sb 1 tt 7 }
  { createRectangle str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { createRectangleCusped str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { brush str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { eraser src 2 str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { clone src 1 str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { reveal src 3 str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { dodge src 1 str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { burn src 1 str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { blur src 1 str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { sharpen src 1 str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { smear src 1 str 1 ssx 1 ssy 1 sf 1 sb 1 }
} }
   toolbar_brush_hardness 0.200000003
   toolbar_source_transform_scale {1 1}
   toolbar_source_transform_center {2304 1296}
   colorOverlay {0 0 0 0}
   lifetime_type "all frames"
   lifetime_start 5
   lifetime_end 5
   motionblur_shutter_offset_type centred
   source_black_outside true
   name Roto4
   xpos 7555
   ypos -2817
   addUserKnob {20 button +HIDDEN +INVISIBLE}
   addUserKnob {22 createPowerRelative -STARTLINE T "import aePowerPinFun\naePowerPinFun.createPowerRelative()"}
   addUserKnob {22 createPowerAbsolute -STARTLINE T "import aePowerPinFun\naePowerPinFun.createPowerAbsolute()"}
   addUserKnob {22 createPowerStabilize -STARTLINE T "import aePowerPinFun\naePowerPinFun.createPowerStabilize()"}
   addUserKnob {20 button +HIDDEN +INVISIBLE}
   addUserKnob {22 createPowerRelative -STARTLINE T "import aePowerPinFun\naePowerPinFun.createPowerRelative()"}
   addUserKnob {22 createPowerAbsolute -STARTLINE T "import aePowerPinFun\naePowerPinFun.createPowerAbsolute()"}
   addUserKnob {22 createPowerStabilize -STARTLINE T "import aePowerPinFun\naePowerPinFun.createPowerStabilize()"}
  }
  Blur {
   size 75
   name Blur4
   xpos 7555
   ypos -2779
  }
  Read {
   inputs 0
   file_type exr
   file "\[value filepath]Flares/Front/default_front.%08d.exr"
   localizationPolicy on
   format "4096 2160 0 0 4096 2160 1 4K_DCP"
   last 9
   after black
   origlast 9
   origset true
   version 17
   name Read17
   xpos 7414
   ypos -2854
   postage_stamp false
  }
  Multiply {
   inputs 1+1
   value {{SparksFrontFlash}}
   invert_mask true
   name Multiply64
   xpos 7414
   ypos -2779
  }
  FrameHold {
   firstFrame {{1+((frame%1)*(count))}}
   name FrameHold34
   label "assets x\[value count]"
   xpos 7414
   ypos -2707
   addUserKnob {20 User}
   addUserKnob {3 count}
   count 9
  }
  Saturation {
   saturation 0.8
   name Saturation1
   xpos 7414
   ypos -2619
  }
  Grade {
   whitepoint {1.727726936 1.684559703 1.524384618 1}
   white {0.9260987639 0.9260889292 0.9261653423 0}
   multiply 1.39
   name Grade2
   xpos 7414
   ypos -2593
  }
  Switch {
   inputs 10
   which {{SelectAssetFlash}}
   name Switch4
   xpos 7414
   ypos -2377
  }
push 0
  Switch {
   inputs 2
   which {{floor(((frame>=1)+(frame<2))/2)}}
   name Switch15
   xpos 7414
   ypos -2135
  }
  Transform {
   scale {{ScaleFrontFlash.w} {ScaleFrontFlash.h}}
   center {2048 1080}
   shutteroffset centred
   name Transform46
   label scaling
   xpos 7414
   ypos -1784
  }
  Reformat {
   resize height
   pbb true
   name Reformat2
   xpos 7414
   ypos -1709
  }
push 0
  Switch {
   inputs 2
   which {{ActivateFrontFlash}}
   name Switch7
   xpos 7414
   ypos -1515
  }
  Dot {
   name Dot3
   xpos 7448
   ypos -1077
  }
  Dot {
   name Dot5
   xpos 7927
   ypos -1077
  }
set N10407040 [stack 0]
  Dot {
   name Dot2
   xpos 8127
   ypos -1077
  }
set N1040c100 [stack 0]
  Dot {
   name Dot7
   xpos 8366
   ypos -1077
  }
set N104111c0 [stack 0]
  Dot {
   name Dot9
   xpos 8566
   ypos -1077
  }
set N10416e30 [stack 0]
  Dot {
   name Dot11
   xpos 8810
   ypos -1077
  }
set N1041bc40 [stack 0]
  Dot {
   name Dot13
   xpos 9010
   ypos -1077
  }
set N10420d10 [stack 0]
  Dot {
   name Dot15
   xpos 9249
   ypos -1077
  }
set N10425dd0 [stack 0]
  Dot {
   name Dot17
   xpos 9449
   ypos -1077
  }
set N1042ae90 [stack 0]
  Dot {
   name Dot19
   xpos 9650
   ypos -1077
  }
set N1042ff50 [stack 0]
  Dot {
   name Dot21
   xpos 9850
   ypos -1077
  }
set N10435010 [stack 0]
  Dot {
   name Dot23
   xpos 10089
   ypos -1077
  }
set N1043a030 [stack 0]
  Dot {
   name Dot25
   xpos 10289
   ypos -1077
  }
  Read {
   inputs 0
   file_type exr
   file "\[value filepath]Flares/Side/M4_Side.%08d.exr"
   format "4096 2160 0 0 4096 2160 1 4K_DCP"
   before black
   last 112
   after black
   origlast 112
   origset true
   on_error black
   version 3
   name Read35
   xpos 3362
   ypos -2882
   postage_stamp false
  }
  Dot {
   name Dot45
   xpos 3396
   ypos -2806
  }
set N1049dbf0 [stack 0]
  Dot {
   name Dot46
   xpos 3553
   ypos -2806
  }
  FrameHold {
   firstFrame {{"\[if \{\[expression sort]==0\} \{return \[expression ((frame%1)<=0.50)*(1+(((frame)%1)*count))]\} \{return \[expression (((frame%1)>0.50)*(100+(((((frame+0.5)%1))*2))*count))]\}]"}}
   name FrameHold13
   label "assets x\[value count]\nsort: \[value sort]"
   xpos 3519
   ypos -2738
   addUserKnob {20 User}
   addUserKnob {4 sort M {dim bright}}
   sort bright
   addUserKnob {3 count}
   count 12
  }
  Dot {
   name Dot47
   xpos 3553
   ypos -2649
  }
push $N1049dbf0
  FrameHold {
   firstFrame {{"\[if \{\[expression sort]==0\} \{return \[expression ((frame%1)<=0.50)*(1+(((frame)%1)*count))]\} \{return \[expression (((frame%1)>0.50)*(100+(((((frame+0.5)%1))*2))*count))]\}]"}}
   name FrameHold14
   label "assets x\[value count]\nsort: \[value sort]"
   xpos 3362
   ypos -2738
   addUserKnob {20 User}
   addUserKnob {4 sort M {dim bright}}
   addUserKnob {3 count}
   count 5
  }
  Merge2 {
   inputs 2
   name Merge8
   xpos 3362
   ypos -2653
  }
  Dot {
   name Dot98
   xpos 3396
   ypos -2387
  }
  Read {
   inputs 0
   file_type exr
   file "\[value filepath]Flares/Side/M870_Side.########.exr"
   localizationPolicy on
   format "4096 2160 0 0 4096 2160 1 4K_DCP"
   last 12
   origlast 12
   origset true
   on_error black
   version 18
   name Read50
   xpos 3799
   ypos -2881
   postage_stamp false
  }
  FrameHold {
   firstFrame {{1+((frame%1)*(count))}}
   name FrameHold20
   label "assets x\[value count]"
   xpos 3799
   ypos -2718
   addUserKnob {20 User}
   addUserKnob {3 count}
   count 12
  }
  Dot {
   name Dot97
   xpos 3833
   ypos -2387
  }
  Read {
   inputs 0
   file_type exr
   file "\[value filepath]Flares/Side/mp5_Side.%08d.exr"
   format "4096 2160 0 0 4096 2160 1 4K_DCP"
   before black
   last 119
   after black
   origlast 131
   origset true
   on_error black
   version 2
   name Read59
   xpos 4089
   ypos -2876
   postage_stamp false
  }
  Dot {
   name Dot54
   xpos 4123
   ypos -2797
  }
set N104e6b10 [stack 0]
  Dot {
   name Dot55
   xpos 4280
   ypos -2797
  }
  FrameHold {
   firstFrame {{"\[if \{\[expression sort]==0\} \{return \[expression ((frame%1)<=0.50)*(1+(((frame)%1)*count))]\} \{return \[expression (((frame%1)>0.50)*(100+(((((frame+0.5)%1))*2))*count))]\}]"}}
   name FrameHold27
   label "assets x\[value count]\nsort: \[value sort]"
   xpos 4246
   ypos -2729
   addUserKnob {20 User}
   addUserKnob {4 sort M {dim bright}}
   sort bright
   addUserKnob {3 count}
   count 19
  }
  Dot {
   name Dot56
   xpos 4280
   ypos -2640
  }
push $N104e6b10
  FrameHold {
   firstFrame {{"\[if \{\[expression sort]==0\} \{return \[expression ((frame%1)<=0.50)*(1+(((frame)%1)*count))]\} \{return \[expression (((frame%1)>0.50)*(100+(((((frame+0.5)%1))*2))*count))]\}]"}}
   name FrameHold28
   label "assets x\[value count]\nsort: \[value sort]"
   xpos 4089
   ypos -2732
   addUserKnob {20 User}
   addUserKnob {4 sort M {dim bright}}
   addUserKnob {3 count}
   count 6
  }
  Merge2 {
   inputs 2
   name Merge11
   xpos 4089
   ypos -2644
  }
  Dot {
   name Dot99
   xpos 4123
   ypos -2387
  }
  Read {
   inputs 0
   file_type exr
   file "\[value filepath]Flares/Side/M249_Side.%08d.exr"
   format "4096 2160 0 0 4096 2160 1 4K_DCP"
   before black
   last 121
   after black
   origlast 121
   origset true
   on_error black
   version 1
   name Read56
   xpos 4433
   ypos -2869
   postage_stamp false
  }
  Dot {
   name Dot39
   xpos 4467
   ypos -2783
  }
set N10520c80 [stack 0]
  Dot {
   name Dot40
   xpos 4624
   ypos -2783
  }
  FrameHold {
   firstFrame {{"\[if \{\[expression sort]==0\} \{return \[expression ((frame%1)<=0.50)*(1+(((frame)%1)*count))]\} \{return \[expression (((frame%1)>0.50)*(100+(((((frame+0.5)%1))*2))*count))]\}]"}}
   name FrameHold9
   label "assets x\[value count]\nsort: \[value sort]"
   xpos 4590
   ypos -2715
   addUserKnob {20 User}
   addUserKnob {4 sort M {dim bright}}
   sort bright
   addUserKnob {3 count}
   count 21
  }
  Dot {
   name Dot41
   xpos 4624
   ypos -2626
  }
push $N10520c80
  FrameHold {
   firstFrame {{"\[if \{\[expression sort]==0\} \{return \[expression ((frame%1)<=0.50)*(1+(((frame)%1)*count))]\} \{return \[expression (((frame%1)>0.50)*(100+(((((frame+0.5)%1))*2))*count))]\}]"}}
   name FrameHold10
   label "assets x\[value count]\nsort: \[value sort]"
   xpos 4433
   ypos -2712
   addUserKnob {20 User}
   addUserKnob {4 sort M {dim bright}}
   addUserKnob {3 count}
   count 13
  }
  Merge2 {
   inputs 2
   name Merge6
   xpos 4433
   ypos -2630
  }
  Dot {
   name Dot100
   xpos 4467
   ypos -2387
  }
  Read {
   inputs 0
   file_type exr
   file "\[value filepath]Flares/Side/M16_Side.%08d.exr"
   localizationPolicy on
   format "4096 2160 0 0 4096 2160 1 4K_DCP"
   last 16
   origlast 16
   origset true
   on_error black
   version 20
   name Read2
   xpos 4827
   ypos -2859
   postage_stamp false
  }
  FrameHold {
   firstFrame {{1+((frame%1)*(count))}}
   name FrameHold18
   label "assets x\[value count]"
   xpos 4827
   ypos -2665
   addUserKnob {20 User}
   addUserKnob {3 count}
   count 16
  }
  Dot {
   name Dot95
   xpos 4861
   ypos -2387
  }
  Read {
   inputs 0
   file_type exr
   file "\[value filepath]Flares/Side/G2_Side.########.exr"
   format "4096 2160 0 0 4096 2160 1 4K_DCP"
   last 28
   origlast 28
   origset true
   on_error black
   name Read4
   xpos 5118
   ypos -2861
   postage_stamp false
  }
  Dot {
   name Dot33
   xpos 5152
   ypos -2780
  }
set N10569ba0 [stack 0]
  Dot {
   name Dot34
   xpos 5309
   ypos -2780
  }
  FrameHold {
   firstFrame {{"\[if \{\[expression sort]==0\} \{return \[expression ((frame%1)<=0.50)*(1+(((frame)%1)*count))]\} \{return \[expression (((frame%1)>0.50)*(100+(((((frame+0.5)%1))*2))*count))]\}]"}}
   name FrameHold1
   label "assets x\[value count]\nsort: \[value sort]"
   xpos 5275
   ypos -2711
   addUserKnob {20 User}
   addUserKnob {4 sort M {dim bright}}
   sort bright
   addUserKnob {3 count}
   count 18
  }
  Dot {
   name Dot35
   xpos 5309
   ypos -2623
  }
push $N10569ba0
  FrameHold {
   firstFrame {{"\[if \{\[expression sort]==0\} \{return \[expression ((frame%1)<=0.50)*(1+(((frame)%1)*count))]\} \{return \[expression (((frame%1)>0.50)*(100+(((((frame+0.5)%1))*2))*count))]\}]"}}
   name FrameHold2
   label "assets x\[value count]\nsort: \[value sort]"
   xpos 5118
   ypos -2709
   addUserKnob {20 User}
   addUserKnob {4 sort M {dim bright}}
   addUserKnob {3 count}
   count 7
  }
  Merge2 {
   inputs 2
   name Merge4
   xpos 5118
   ypos -2627
  }
  Dot {
   name Dot96
   xpos 5152
   ypos -2387
  }
  Read {
   inputs 0
   file_type exr
   file "\[value filepath]Flares/Side/AR-15_Side.%08d.exr"
   format "4096 2160 0 0 4096 2160 1 4K_DCP"
   before black
   last 147
   after black
   origlast 147
   origset true
   on_error black
   version 1
   name Read63
   xpos 5477
   ypos -2866
   postage_stamp false
  }
  Dot {
   name Dot57
   xpos 5511
   ypos -2783
  }
set N105a3a90 [stack 0]
  Dot {
   name Dot58
   xpos 5668
   ypos -2783
  }
  FrameHold {
   firstFrame {{"\[if \{\[expression sort]==0\} \{return \[expression ((frame%1)<=0.50)*(1+(((frame)%1)*count))]\} \{return \[expression (((frame%1)>0.50)*(100+(((((frame+0.5)%1))*2))*count))]\}]"}}
   name FrameHold17
   label "assets x\[value count]\nsort: \[value sort]"
   xpos 5634
   ypos -2714
   addUserKnob {20 User}
   addUserKnob {4 sort M {dim bright}}
   sort bright
   addUserKnob {3 count}
   count 47
  }
  Dot {
   name Dot59
   xpos 5668
   ypos -2626
  }
push $N105a3a90
  FrameHold {
   firstFrame {{"\[if \{\[expression sort]==0\} \{return \[expression ((frame%1)<=0.50)*(1+(((frame)%1)*count))]\} \{return \[expression (((frame%1)>0.50)*(100+(((((frame+0.5)%1))*2))*count))]\}]"}}
   name FrameHold26
   label "assets x\[value count]\nsort: \[value sort]"
   xpos 5477
   ypos -2712
   addUserKnob {20 User}
   addUserKnob {4 sort M {dim bright}}
   addUserKnob {3 count}
   count 12
  }
  Merge2 {
   inputs 2
   name Merge12
   xpos 5477
   ypos -2630
  }
  Dot {
   name Dot94
   xpos 5511
   ypos -2387
  }
  Read {
   inputs 0
   file_type exr
   file "\[value filepath]Flares/Side/Ak_Side.########.exr"
   format "4096 2160 0 0 4096 2160 1 4K_DCP"
   last 28
   origlast 28
   origset true
   on_error black
   name Read3
   xpos 5938
   ypos -2857
   postage_stamp false
  }
  FrameHold {
   firstFrame {{1+((frame%1)*(count))}}
   name FrameHold23
   label "assets x\[value count]"
   xpos 5938
   ypos -2714
   addUserKnob {20 User}
   addUserKnob {3 count}
   count 28
  }
  Dot {
   name Dot93
   xpos 5972
   ypos -2387
  }
  Read {
   inputs 0
   file_type exr
   file "\[value filepath]Flares/Side/colt45_Side.########.exr"
   format "4096 2160 0 0 4096 2160 1 4K_DCP"
   last 28
   origlast 28
   origset true
   on_error black
   name Read6
   xpos 6211
   ypos -2859
   postage_stamp false
  }
  Dot {
   name Dot27
   xpos 6245
   ypos -2772
  }
set N105ec9b0 [stack 0]
  Dot {
   name Dot29
   xpos 6402
   ypos -2772
  }
  FrameHold {
   firstFrame {{"\[if \{\[expression sort]==0\} \{return \[expression ((frame%1)<=0.50)*(1+(((frame)%1)*count))]\} \{return \[expression (((frame%1)>0.50)*(100+(((((frame+0.5)%1))*2))*count))]\}]"}}
   name FrameHold3
   label "assets x\[value count]\nsort: \[value sort]"
   xpos 6368
   ypos -2703
   addUserKnob {20 User}
   addUserKnob {4 sort M {dim bright}}
   sort bright
   addUserKnob {3 count}
   count 15
  }
  Dot {
   name Dot30
   xpos 6402
   ypos -2614
  }
push $N105ec9b0
  FrameHold {
   firstFrame {{"\[if \{\[expression sort]==0\} \{return \[expression ((frame%1)<=0.50)*(1+(((frame)%1)*count))]\} \{return \[expression (((frame%1)>0.50)*(100+(((((frame+0.5)%1))*2))*count))]\}]"}}
   name FrameHold4
   label "assets x\[value count]\nsort: \[value sort]"
   xpos 6211
   ypos -2701
   addUserKnob {20 User}
   addUserKnob {4 sort M {dim bright}}
   addUserKnob {3 count}
   count 8
  }
  Merge2 {
   inputs 2
   name Merge2
   xpos 6211
   ypos -2618
  }
  Dot {
   name Dot92
   xpos 6245
   ypos -2387
  }
  Roto {
   inputs 0
   output alpha
   curves {{{v x3f99999a}
  {f 0}
  {n
   {layer Root
    {f 2097152}
    {t x45100000 x44c5c000}
    {a pt1x 0 pt1y 0 pt2x 0 pt2y 0 pt3x 0 pt3y 0 pt4x 0 pt4y 0 ptex00 0 ptex01 0 ptex02 0 ptex03 0 ptex10 0 ptex11 0 ptex12 0 ptex13 0 ptex20 0 ptex21 0 ptex22 0 ptex23 0 ptex30 0 ptex31 0 ptex32 0 ptex33 0 ptof1x 0 ptof1y 0 ptof2x 0 ptof2y 0 ptof3x 0 ptof3y 0 ptof4x 0 ptof4y 0 pterr 0 ptrefset 0 ptmot x40800000 ptref 0}
    {curvegroup Bezier1 512 bezier
     {{cc
       {f 8192}
       {px
        {1 x40000000 x40400000 x40800000 x40a00000 x40c00000 x40e00000 x41000000 x41100000 x41200000 x41300000 x41400000 x41500000 x41600000 x41700000 x41800000}
        {{{x 15
        {0 -}}      0}
      {{x 15
        {xc0800000 -}}      xc0800000}}
        {{{x 2
        {x44258000 -}}
       {x 3
        {x442b0000 -}}
       {x 2
        {x4428e666 -}}
       {x 2
        {x440d9999 -}}
       {x441b4000 x425a6670 1 x425a6670 1}
       {x 4
        {x4428e667 -}}
       {x4422999c -}
       {x441e666a -}}
      {{x 2
        {x448b0000 -}}
       {x44844000 -}
       {x 4
        {x4488c000 -}}
       {x 2
        {x44838000 -}}
       {x4484e667 -}
       {x 4
        {x44835334 -}}
       {x44819334 -}
       {x4481c001 -}}}
        {{{x 15
        {0 -}}      0}
      {{x 15
        {x40800000 -}}      x40800000}}
        {{{x 15
        {xc1000000 -}}      xc1000000}
      {{x 15
        {xc0800000 -}}      xc0800000}}
        {{{x 2
        {x44378000 -}}
       {x443c7fff x41e00000 1 x41e00000 1}
       {x 2
        {x44458000 -}}
       {x 2
        {x4449b333 -}}
       {x 2
        {x44180000 -}}
       {x4424999a x42440008 1 x42440008 1}
       {x44308001 -}
       {x441c3335 -}
       {x44324002 -}
       {x4426599c -}
       {x44276669 -}
       {x44217336 -}}
      {{x 2
        {x4491c000 -}}
       {x448ac000 -}
       {x 2
        {x448e8000 -}}
       {x 2
        {x4493c000 -}}
       {x 2
        {x448e5333 -}}
       {x4490c666 -}
       {x448ed99a -}
       {x44922ccd -}
       {x4491799a -}
       {x44968ccd -}
       {x4492b334 -}
       {x44936667 -}}}
        {{{x 15
        {x41000000 -}}      x41000000}
      {{x 15
        {x40800000 -}}      x40800000}}
        {{{x 15
        {xc1000000 -}}      xc1000000}
      {{x 15
        {0 -}}      0}}
        {{{x445e8000 0 1 xc0400080 1}
       {x445d8000 xc0bfff80 1 xc0bfff80 1}
       {x445b8002 -}
       {x 2
        {x44600001 -}}
       {x44654000 x41499980 1 x41499980 1}
       {x44664ccd -}
       {x44627333 xc238cce0 1 xc238cce0 1}
       {x4436b333 -}
       {x443b999a x416b3340 1 x416b3340 1}
       {x443e0ccd -}
       {x442c3333 -}
       {x4448e665 -}
       {x443a3332 -}
       {x44423ffe -}
       {x44418cca -}}
      {{x44944000 0 1 x42280000 1}
       {x4497c000 -}
       {x44918000 xc2000000 1 xc2000000 1}
       {x 2
        {x448fc000 -}}
       {x44920667 x41a80000 1 x41a80000 1}
       {x44950000 x41919980 1 x41919980 1}
       {x44969333 x42173320 1 x42173320 1}
       {x449ea000 -}
       {x4497f999 xc1066700 1 xc1066700 1}
       {x44979fff -}
       {x449dc000 -}
       {x44985334 -}
       {x44a08ccd -}
       {x44990667 -}
       {x44996001 -}}}
        {{{x 15
        {x41000000 -}}      x41000000}
      {{x 15
        {0 -}}      0}}
        {{{x 15
        {xc0800000 -}}      xc0800000}
      {{x 15
        {0 -}}      0}}
        {{{x44790000 0 1 xc0c000c0 1}
       {x4477ffff -}
       {x447f7ffe -}
       {x447e7ffe xc10fffa0 1 xc10fffa0 1}
       {x447b0001 -}
       {x447ed99c x41280060 1 x41280060 1}
       {x44802002 -}
       {x447a4cd1 xc28eccc8 1 xc28eccc8 1}
       {x444f4005 -}
       {x4456999e x421199a0 1 x421199a0 1}
       {x44617339 -}
       {x4458b33b -}
       {x4467c006 -}
       {x445a199f -}
       {x445df339 -}
       {x4453ccd2 -}}
      {{x44930000 0 1 x42ba0000 1}
       {x449ac000 -}
       {x4493c000 xc21c0000 1 xc21c0000 1}
       {x44910000 -}
       {x44944000 -}
       {x4492d999 -}
       {x44965999 x41a80000 1 x41a80000 1}
       {x44981999 x42280000 1 x42280000 1}
       {x44a5eccc -}
       {x449ddfff xc2306670 1 xc2306670 1}
       {x449ae665 -}
       {x449ebfff -}
       {x449b3fff -}
       {x44a05332 -}
       {x449d2ccb -}
       {x44a1b998 -}}}
        {{{x 15
        {x40800000 -}}      x40800000}
      {{x 15
        {0 -}}      0}}
        {{{x 9
        {xc0800000 -}}
       {x 6
        {xc20cc59e -}}      xc20cc59e}
      {{x 9
        {0 -}}
       {x 6
        {xc01b8e75 -}}      xc01b8e75}}
        {{{x 2
        {x44900000 -}}
       {x44938000 -}
       {x448ec001 xc1c7ffc0 1 xc1c7ffc0 1}
       {x448d4002 -}
       {x448f8669 -}
       {x448e799c xc1b8cce0 1 xc1b8cce0 1}
       {x4489c002 xc2066670 1 xc2066670 1}
       {x44861335 xc1cf3340 1 xc1cf3340 1}
       {x44834668 -}
       {x4485b99b -}
       {x44794001 -}
       {x4480a667 -}
       {x447f8ccc xc1a80020 1 xc1a80020 1}
       {x4476cccc -}
       {x44698000 -}}
      {{x 2
        {x449cc000 -}}
       {x44998000 -}
       {x449c0000 -}
       {x44980000 xc1c8ccc0 1 xc1c8ccc0 1}
       {x4495b99a -}
       {x44982ccd x419ccce0 1 x419ccce0 1}
       {x449aa001 x4238ccd0 1 x4238ccd0 1}
       {x44a3b99a -}
       {x44a00ccd -}
       {x44a41334 x41eb3340 1 x41eb3340 1}
       {x44a76667 -}
       {x44a0ecce -}
       {x44a33334 -}
       {x44a1a001 -}
       {x44a7c001 -}}}
        {{{x 9
        {x400f5c00 -}}
       {x 6
        {x420cc59e -}}      x420cc59e}
      {{x 9
        {0 -}}
       {x 6
        {x401b8e86 -}}      x401b8e86}}
        {{{xc28ac050 0 1 xc228e430 1}
       {xc2c30c60 -}
       {xc29e9ee0 -}
       {x 7
        {xc2b39820 -}}
       {x 5
        {xc202364a -}}      xc202364a}
      {{xc1d7f540 0 1 xc0ee6f80 1}
       {xc1ffb280 -}
       {xc1cf2080 x40b97380 1 x40b97380 1}
       {x 7
        {xc1a2f8c0 -}}
       {x 5
        {xc0391467 -}}      xc0391467}}
        {{{x44a34464 0 1 x42b46840 1}
       {x44aac8bc -}
       {x44a96b92 xc202efc0 1 xc202efc0 1}
       {x44a18001 xc256b920 1 xc256b920 1}
       {x449c0000 -}
       {x449f5334 -}
       {x449b4ccf xc2039990 1 xc2039990 1}
       {x 3
        {x4497199b -}}
       {x44960cce xc1b8ccc0 1 xc1b8ccc0 1}
       {x44915335 xc1dfffe0 1 xc1dfffe0 1}
       {x448f0ccf xc1866660 1 xc1866660 1}
       {x448d2002 -}
       {x448fc002 x41fc0000 1 0 1}      x448fc002}
      {{x44a3cf24 0 1 x417eb140 1}
       {x44a522bb -}
       {x44a043ac -}
       {x44aaffff -}
       {x449a3fff xc2066640 1 xc2066640 1}
       {x4498d999 -}
       {x449deccd x4200ccd0 1 x4200ccd0 1}
       {x 3
        {x44a0e666 -}}
       {x44a35999 x42119990 1 x42119990 1}
       {x44a9ffff -}
       {x449dbfff -}
       {x44a46665 x4254ccc0 1 x4254ccc0 1}
       {x44ab0ccb x4254ccc0 1 0 1}      x44ab0ccb}}
        {{{x425a0980 0 1 x4204b3a0 1}
       {x429940a0 -}
       {x427942e0 -}
       {x 7
        {x428d1c20 -}}
       {x 5
        {x4202364a -}}      x4202364a}
      {{x41a9ae40 0 1 x40bb5900 1}
       {x41c8e7c0 -}
       {x41a2be00 xc091b600 1 xc091b600 1}
       {x 7
        {x41800cc0 -}}
       {x 5
        {x4039147c -}}      x4039147c}}
        {{{x 6
        {x40e14800 -}}
       {x 9
        {xc2137320 -}}      xc2137320}
      {{x 6
        {xc028f600 -}}
       {x 9
        {xbfec7df8 -}}      xbfec7df8}}
        {{{x44af0000 0 1 x43190000 1}
       {x44bbc000 -}
       {x 2
        {x44b70001 -}}
       {x44b24002 xc1b99980 1 xc1b99980 1}
       {x44b13335 xc0b33280 1 xc0b33280 1}
       {x44b0d99d xc1066400 1 xc1066400 1}
       {x 5
        {x44ae0cd1 -}}
       {x449d1338 -}
       {x44a00cd0 x42093310 1 x42093310 1}
       {x44a5a669 x42483328 1 0 1}      x44a5a669}
      {{x44a94000 0 1 x41d80000 1}
       {x44ab8000 -}
       {x44a57fff -}
       {x44a5bffe -}
       {x 2
        {x449c7ffe -}}
       {x449ffffd x41eb3320 1 x41eb3320 1}
       {x 4
        {x44a3d997 -}}
       {x44a83997 x42146660 1 x42146660 1}
       {x44ad1ffd -}
       {x44a48cca -}
       {x44a6a664 x41c999c0 1 0 1}      x44a6a664}}
        {{{x 6
        {xc1800000 -}}
       {x 9
        {x42137320 -}}      x42137320}
      {{x 6
        {x40c00000 -}}
       {x 9
        {x3fec7e1e -}}      x3fec7e1e}}
        {{{x 15
        {xc0000000 -}}      xc0000000}
      {{x 15
        {0 -}}      0}}
        {{{x 3
        {x44cdc000 -}}
       {x44c40001 -}
       {x44c5c001 -}
       {x 2
        {x44c4b334 -}}
       {x 5
        {x44c3799b -}}
       {x 3
        {x44b9acce -}}      x44b9acce}
      {{x 3
        {x44a64000 -}}
       {x44a7c001 -}
       {x 3
        {x44a00002 -}}
       {x 5
        {x44a48ccf -}}
       {x 3
        {x44a3accf -}}      x44a3accf}}
        {{{x 3
        {x3f1d4000 -}}
       {x 12
        {x3f1d4800 -}}      x3f1d4800}
      {{x 15
        {0 -}}      0}}
        {{{x 2
        {xc258acc0 -}}
       {xc26478a0 xc10d8e80 1 xc10d8e80 1}
       {x 12
        {xc2a03df0 -}}      xc2a03df0}
      {{x 2
        {x419cea00 -}}
       {x4135b500 -}
       {x 12
        {x416e5480 -}}      x416e5480}}
        {{{x 2
        {x44d982e0 -}}
       {x44da6453 -}
       {x44d402cb -}
       {x44d9c2cc -}
       {x44d6c933 xc17666c0 1 xc17666c0 1}
       {x 3
        {x44d5e931 -}}
       {x 3
        {x44d74f97 -}}
       {x 3
        {x44cd55fd -}}      x44cd55fd}
      {{x 2
        {x44a2075c -}}
       {x44a47e9a -}
       {x44a43012 -}
       {x44a63012 -}
       {x44a11cdf -}
       {x 3
        {x44a5d679 -}}
       {x 3
        {x44a769ad -}}
       {x 3
        {x44a149ad -}}      x44a149ad}}
        {{{x 2
        {x41f3c280 -}}
       {x420083e0 x409f3f00 1 x409f3f00 1}
       {x 12
        {x423445a0 -}}      x423445a0}
      {{x 2
        {xc1308780 -}}
       {xc0cc6c00 -}
       {x 12
        {xc1061000 -}}      xc1061000}}
        {{{x 15
        {xc20e8880 -}}      xc20e8880}
      {{x 15
        {x414f0700 -}}      x414f0700}}
        {{{x 2
        {x44e62bb0 -}}
       {x 3
        {x44e76bb2 -}}
       {x44e65ee5 -}
       {x 8
        {x44e6b87f -}}
       {x44e81ee5 -}
       {x44e8d218 -}}
      {{x 2
        {x449d6fec -}}
       {x44a0efec -}
       {x 3
        {x449e2fec -}}
       {x 9
        {x449eb652 -}}
       {x44a3431e -}}}
        {{{x 15
        {x42d675c0 -}}      x42d675c0}
      {{x 15
        {xc21bc020 -}}      xc21bc020}}
        {{{x 15
        {0 -}}      0}
      {{x 15
        {0 -}}      0}}
        {{{x 5
        {x4500c000 -}}
       {x 10
        {x4500399a -}}      x4500399a}
      {{x 15
        {x44938000 -}}      x44938000}}
        {{{x 15
        {0 -}}      0}
      {{x 15
        {0 -}}      0}}
        {{{x 15
        {0 -}}      0}
      {{x 15
        {0 -}}      0}}
        {{{x 3
        {x45058000 -}}
       {x 2
        {x45042001 -}}
       {x 10
        {x4503999a -}}      x4503999a}
      {{x 3
        {x44864000 -}}
       {x 12
        {x44868000 -}}      x44868000}}
        {{{x 15
        {0 -}}      0}
      {{x 15
        {0 -}}      0}}
        {{{x424c3840 0 1 x40999300 1}
       {x 4
        {x42590480 -}}
       {x 10
        {x425904a0 -}}      x425904a0}
      {{x424746c0 0 1 xc19415e0 1}
       {x 14
        {x4215ea20 -}}      x4215ea20}}
        {{{x44fecc94 0 1 xc113e280 1}
       {x 2
        {x44fe0766 -}}
       {x 2
        {x45000000 -}}
       {x 3
        {x44fef333 -}}
       {x 4
        {x44fec667 -}}
       {x 3
        {x44fcd99b -}}      x44fcd99b}
      {{x44748354 0 1 x420e9a10 1}
       {x 2
        {x447a746a -}}
       {x 5
        {x44768000 -}}
       {x 4
        {x446ba667 -}}
       {x 3
        {x446ecccd -}}      x446ecccd}}
        {{{xc26fbc60 0 1 xc0b44680 1}
       {x 14
        {xc27ec240 -}}      xc27ec240}
      {{xc269eed0 0 1 x41add6f0 1}
       {x 14
        {xc22ffc80 -}}      xc22ffc80}}
        {{{x408a3c00 0 1 x39400000 1}
       {x 14
        {x408a3d00 -}}      x408a3d00}
      {{x 15
        {0 -}}      0}}
        {{{x44ee8000 0 1 xc1a80000 1}
       {x 3
        {x44ecc000 -}}
       {x44d60000 -}
       {x44d6b333 x409ccc00 1 x409ccc00 1}
       {x44d73998 -}
       {x 2
        {x44d68664 -}}
       {x44d79331 x416b3340 1 x416b3340 1}
       {x44da3331 x41499a00 1 x41499a00 1}
       {x44dab999 -}
       {x 2
        {x44cdf331 -}}
       {x44ce1ffe x40066700 1 0 1}      x44ce1ffe}
      {{x44560000 0 1 x42a20000 1}
       {x 3
        {x44638000 -}}
       {x44518000 -}
       {x44593334 -}
       {x444cf336 -}
       {x 2
        {x4458266a -}}
       {x444f666a -}
       {x4452e66a -}
       {x444c999e -}
       {x 2
        {x444e0004 -}}
       {x444ad99e xc1973320 1 0 1}      x444ad99e}}
        {{{x 15
        {xc1000000 -}}      xc1000000}
      {{x 15
        {0 -}}      0}}
        {{{x 15
        {x41c00000 -}}      x41c00000}
      {{x 15
        {xc0800000 -}}      xc0800000}}
        {{{x44c90000 0 1 x410fff40 1}
       {x 2
        {x44c9bfff -}}
       {x 2
        {x44be7ffd -}}
       {x44bd7330 xc1c999c0 1 xc1c999c0 1}
       {x 3
        {x44b53996 -}}
       {x44bbb32e x421cccb0 1 x421cccb0 1}
       {x 2
        {x44bf0661 -}}
       {x 2
        {x44b72660 -}}
       {x44b80660 -}
       {x44b53993 -}}
      {{x444d8000 0 1 x42ba0000 1}
       {x 2
        {x445d0000 -}}
       {x445c0000 xc1000000 1 xc1000000 1}
       {x 2
        {x44590000 -}}
       {x 3
        {x4450f332 -}}
       {x44547332 x41280000 1 x41280000 1}
       {x 2
        {x44563332 -}}
       {x 2
        {x444fe664 -}}
       {x44488ccb -}
       {x4445bffe -}}}
        {{{x 15
        {xc1c00000 -}}      xc1c00000}
      {{x 15
        {x40800000 -}}      x40800000}}
        {{{x 15
        {0 -}}      0}
      {{x 15
        {0 -}}      0}}
        {{{x44910000 0 1 x41dfffb0 1}
       {x44957fff x424ffff0 1 x424ffff0 1}
       {x449dffff x424c0020 1 x424c0020 1}
       {x44a24001 x420c0010 1 x420c0010 1}
       {x44a6c000 -}
       {x44a69333 -}
       {x 4
        {x44a6c000 -}}
       {x 2
        {x44a93333 -}}
       {x449f0ccc -}
       {x 2
        {x44ab7999 -}}      x44a82664}
      {{x44530000 0 1 xc2a20000 1}
       {x44458000 -}
       {x44510000 -}
       {x44418000 -}
       {x444c8000 x421b3330 1 x421b3330 1}
       {x 5
        {x4454e666 -}}
       {x 2
        {x445c9998 -}}
       {x4444cccb -}
       {x 2
        {x4457b332 -}}      x444e3ffe}}
        {{{x 15
        {0 -}}      0}
      {{x 15
        {0 -}}      0}}
        {{{x42250000 -}
       {x42310000 x41100000 1 x41100000 1}
       {x42750000 -}
       {x42130000 xc1a4cc82 1 xc1a4cc82 1}
       {x 11
        {x41a066fd -}}      x41a066fd}
      {{x40a80000 0 1 xc1d80000 1}
       {xc14c0000 -}
       {xbfa00000 -}
       {xc2030000 -}
       {x 11
        {xc099b824 -}}      xc099b824}}
        {{{x4486d800 0 1 x41e7ffb0 1}
       {x448a97ff x41ffffe0 1 x41ffffe0 1}
       {x448ed7ff x42228010 1 x42228010 1}
       {x4494c000 x41e4ffc0 1 x41e4ffc0 1}
       {x4495fffd -}
       {x4495a664 -}
       {x 3
        {x4499d996 -}}
       {x 3
        {x449ae663 -}}
       {x4491ccca -}
       {x449ff998 -}
       {x449ebffe xc16b3380 1 0 1}      x449ebffe}
      {{x44507000 0 1 xc1d80000 1}
       {x444bf000 -}
       {x4451b000 -}
       {x444c0000 xc1830000 1 xc1830000 1}
       {x44498000 -}
       {x 4
        {x44518ccc -}}
       {x 3
        {x445d7332 -}}
       {x44567334 -}
       {x4464199a -}
       {x4460999a xc1a80000 1 0 1}      x4460999a}}
        {{{xc2250000 -}
       {xc2310000 xc1100000 1 xc1100000 1}
       {xc2750000 -}
       {xc2130000 x41a4cc81 1 x41a4cc81 1}
       {x 11
        {xc1a066fe -}}      xc1a066fe}
      {{xc0a80000 0 1 x41d80000 1}
       {x414c0000 -}
       {x3fa00000 -}
       {x42030000 -}
       {x 11
        {x4099b813 -}}      x4099b813}}
        {{{x 15
        {x40a00000 -}}      x40a00000}
      {{x 15
        {1 -}}      1}}
        {{{x44778000 0 1 x420fffd0 1}
       {x 2
        {x447d7ffe -}}
       {x448f4001 -}
       {x448a4002 -}
       {x448a6cce x40866400 1 x40866400 1}
       {x 3
        {x448f2668 -}}
       {x 3
        {x44906002 -}}
       {x448a999c -}
       {x448ecccf -}
       {x448c0002 xc2066670 1 0 1}      x448c0002}
      {{x444d8000 0 1 x41d80000 1}
       {x 2
        {x44520000 -}}
       {x44620000 -}
       {x444d0000 -}
       {x4455c000 x41499a80 1 x41499a80 1}
       {x 3
        {x4456ccce -}}
       {x 3
        {x44652668 -}}
       {x44630cd0 -}
       {x4469b336 -}
       {x4461a668 xc2413350 1 0 1}      x4461a668}}
        {{{x 15
        {xc1200000 -}}      xc1200000}
      {{x 15
        {xc0000000 -}}      xc0000000}}
        {{{x 15
        {0 -}}      0}
      {{x 15
        {xc0800000 -}}      xc0800000}}
        {{{x445b8000 0 1 x423fffe8 1}
       {x 2
        {x44637fff -}}
       {x44730001 -}
       {x446a0000 -}
       {x44715999 x425a6670 1 x425a6670 1}
       {x4482a667 -}
       {x4481f333 -}
       {x4485cccb -}
       {x 3
        {x4484eccc -}}
       {x 2
        {x44849332 -}}
       {x447efffe xc2739990 1 0 1}      x447efffe}
      {{x44520000 0 1 x424c0000 1}
       {x445a8000 -}
       {x44520000 -}
       {x44610000 -}
       {x44518000 -}
       {x44613ffe x41499a80 1 x41499a80 1}
       {x44624ccc -}
       {x4456bffe -}
       {x44667ffe x4238ccd0 1 x4238ccd0 1}
       {x 5
        {x446dd998 -}}
       {x44657332 xc2499990 1 0 1}      x44657332}}
        {{{x 15
        {0 -}}      0}
      {{x 15
        {x40800000 -}}      x40800000}}
        {{{x 15
        {0 -}}      0}
      {{x 15
        {0 -}}      0}}
        {{{x 2
        {x44318000 -}}
       {x442f7fff -}
       {x444bffff -}
       {x4438ffff -}
       {x4446ffff x42520000 1 x42520000 1}
       {x44533fff -}
       {x44464ccc -}
       {x4461f333 x427c0000 1 x427c0000 1}
       {x44673333 x4180ccd0 1 x4180ccd0 1}
       {x 2
        {x446a0000 -}}
       {x4471b334 -}
       {x446ee666 xc20666a0 1 xc20666a0 1}
       {x445af334 xc2cdccb0 1 0 1}      x445af334}
      {{x 2
        {x44740000 -}}
       {x44548000 -}
       {x44698000 -}
       {x445e8000 -}
       {x446d8ccc -}
       {x4467f332 xc2850000 1 xc2850000 1}
       {x444c4ccc -}
       {x44743332 -}
       {x446c7ffe -}
       {x 2
        {x44721998 -}}
       {x447da665 -}
       {x44780ccc xc2360000 1 xc2360000 1}
       {x4466e665 xc2a04cd4 1 0 1}      x4466e665}}
        {{{x 15
        {0 -}}      0}
      {{x 15
        {0 -}}      0}}
        {{{x 15
        {0 -}}      0}
      {{x 15
        {0 -}}      0}}
        {{{x 2
        {x441e0000 -}}
       {x44158001 -}
       {x442f0000 -}
       {x44227fff -}
       {x 2
        {x44329998 -}}
       {x 2
        {x44249999 -}}
       {x4430d999 x426e0000 1 x426e0000 1}
       {x 2
        {x44425999 -}}
       {x 2
        {x444d3332 -}}
       {x443a4cca xc2e2cce0 1 0 1}      x443a4cca}
      {{x 2
        {x4483c000 -}}
       {x446a0000 -}
       {x447d0000 -}
       {x44700000 -}
       {x 2
        {x447f0ccd -}}
       {x 2
        {x4471c000 -}}
       {x446b7333 -}
       {x 2
        {x44721999 -}}
       {x 2
        {x447c9999 -}}
       {x446f4ccc xc29f999c 1 0 1}      x446f4ccc}}
        {{{x 15
        {0 -}}      0}
      {{x 15
        {0 -}}      0}}}}     idem}
     {tx 1 x4498d400 x44852c00}
     {a osw x41200000 osf 0 str 1 spx x45100000 spy x44c5c000 sb 1 tt x40800000}}}}}}
   toolbox {selectAll {
  { selectAll str 1 ssx 1 ssy 1 sf 1 }
  { createBezier str 1 ssx 1 ssy 1 sf 1 sb 1 tt 4 }
  { createBezierCusped str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { createBSpline str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { createEllipse str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { createRectangle str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { createRectangleCusped str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { brush str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { eraser src 2 str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { clone src 1 str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { reveal src 3 str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { dodge src 1 str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { burn src 1 str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { blur src 1 str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { sharpen src 1 str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { smear src 1 str 1 ssx 1 ssy 1 sf 1 sb 1 }
} }
   toolbar_brush_hardness 0.200000003
   toolbar_source_transform_scale {1 1}
   toolbar_source_transform_center {2304 1582}
   colorOverlay {0 0 0 0}
   lifetime_type "all frames"
   motionblur_shutter_offset_type centred
   source_black_outside true
   name Roto3
   xpos 6580
   ypos -2757
   addUserKnob {20 button +HIDDEN +INVISIBLE}
   addUserKnob {22 createPowerRelative -STARTLINE T "import aePowerPinFun\naePowerPinFun.createPowerRelative()"}
   addUserKnob {22 createPowerAbsolute -STARTLINE T "import aePowerPinFun\naePowerPinFun.createPowerAbsolute()"}
   addUserKnob {22 createPowerStabilize -STARTLINE T "import aePowerPinFun\naePowerPinFun.createPowerStabilize()"}
   addUserKnob {20 button +HIDDEN +INVISIBLE}
   addUserKnob {22 createPowerRelative -STARTLINE T "import aePowerPinFun\naePowerPinFun.createPowerRelative()"}
   addUserKnob {22 createPowerAbsolute -STARTLINE T "import aePowerPinFun\naePowerPinFun.createPowerAbsolute()"}
   addUserKnob {22 createPowerStabilize -STARTLINE T "import aePowerPinFun\naePowerPinFun.createPowerStabilize()"}
  }
  Blur {
   size 75
   name Blur3
   xpos 6580
   ypos -2685
  }
  Read {
   inputs 0
   file_type exr
   file "\[value filepath]Flares/Side/default_side.%08d.exr"
   localizationPolicy on
   format "4096 2160 0 0 4096 2160 1 4K_DCP"
   last 16
   after black
   origlast 16
   origset true
   on_error black
   version 16
   name Read9
   xpos 6738
   ypos -2859
   postage_stamp false
  }
  Multiply {
   inputs 1+1
   value {{SparksSideFlash}}
   invert_mask true
   name Multiply63
   xpos 6738
   ypos -2685
  }
  FrameHold {
   firstFrame {{1+((frame%1)*(count))}}
   name FrameHold24
   label "assets x\[value count]"
   xpos 6738
   ypos -2634
   addUserKnob {20 User}
   addUserKnob {3 count}
   count 16
  }
  Switch {
   inputs 10
   which {{SelectAssetFlash}}
   name Switch5
   xpos 6738
   ypos -2391
  }
push 0
  Switch {
   inputs 2
   which {{floor(((frame>=1)+(frame<2))/2)}}
   name Switch14
   xpos 6738
   ypos -2152
  }
  Transform {
   scale {{ScaleSideFlash.w} {ScaleSideFlash.h}}
   center {2048 1080}
   shutteroffset centred
   name Transform41
   label scaling
   xpos 6738
   ypos -1790
  }
  Reformat {
   resize height
   pbb true
   name Reformat1
   xpos 6738
   ypos -1715
  }
push 0
  Switch {
   inputs 2
   which {{ActivateSideFlash}}
   name Switch3
   xpos 6738
   ypos -1528
  }
  Dot {
   name Dot1
   xpos 6772
   ypos -871
  }
  Dot {
   name Dot6
   xpos 7829
   ypos -871
  }
set N10775480 [stack 0]
  Dot {
   name Dot4
   xpos 8029
   ypos -871
  }
set N1077a570 [stack 0]
  Dot {
   name Dot8
   xpos 8268
   ypos -871
  }
set N1077f610 [stack 0]
  Dot {
   name Dot10
   xpos 8468
   ypos -871
  }
set N107846e0 [stack 0]
  Dot {
   name Dot12
   xpos 8712
   ypos -871
  }
set N107897b0 [stack 0]
  Dot {
   name Dot14
   xpos 8912
   ypos -871
  }
set N1078e880 [stack 0]
  Dot {
   name Dot16
   xpos 9151
   ypos -871
  }
set N10793950 [stack 0]
  Dot {
   name Dot18
   xpos 9351
   ypos -871
  }
set N10798a20 [stack 0]
  Dot {
   name Dot20
   xpos 9552
   ypos -871
  }
set N1079daf0 [stack 0]
  Dot {
   name Dot22
   xpos 9752
   ypos -871
  }
set N107a2bc0 [stack 0]
  Dot {
   name Dot24
   xpos 9991
   ypos -871
  }
set N107a7c90 [stack 0]
  Dot {
   name Dot26
   xpos 10191
   ypos -871
  }
  Group {
   inputs 2
   name gunshot12
   label "shot: \[value shotcount]\non frame: \[value shotstart]\n"
   xpos 10255
   ypos -810
   addUserKnob {20 User}
   addUserKnob {3 shotcount l shot}
   shotcount 12
   addUserKnob {3 shotstart l frame +INVISIBLE}
   shotstart {{"shotcount==0 ? 0 : shot\[value shotcount]-1"}}
  }
   BackdropNode {
    inputs 0
    name BackdropNode3
    knobChanged "try:\n    listenedKnobs = \['text', 'position', 'name']\n    node = nuke.thisNode()\n    name = node.knob('name').value()\n    text = node.knob('text').value()\n    position = node.knob('position').value()\n    position = \"<\" + position + \">\"\n    label = node.knob('label').value()\n    \n    if nuke.thisKnob().name() in listenedKnobs:\n        if text == \"\":\n            if node.knob('position').value() == \"left\":\n                node.knob('label').setValue()\n            else:\n                node.knob('label').setValue(position + name)\n        else:\n            if node.knob('position').value() == \"left\":\n                node.knob('label').setValue(text)\n            else:\n                node.knob('label').setValue(position + text)\n                \n    elif nuke.thisKnob().name() == 'font_size':\n        fontSize = node.knob('font_size').value()\n        node.knob('note_font_size').setValue(fontSize)\nexcept:\n    pass"
    tile_color 0x232323ff
    label "<Left><h2> Gunshot"
    note_font_size 31.5
    xpos -698
    ypos -924
    bdwidth 1057
    bdheight 2343
    addUserKnob {20 F_VFX l BackdropNode}
    addUserKnob {43 text l Text}
    text "<h2> Gunshot"
    addUserKnob {7 font_size l "Font Size" R 10 100}
    font_size 31.5
    addUserKnob {4 position l "" -STARTLINE M {Left Center}}
    addUserKnob {26 S01 l " " T " "}
    addUserKnob {22 grow l " <img src=\"F_scalep.png\">" -STARTLINE T "n=nuke.thisNode()\n\ndef grow(node=None,step=50):\n    try:\n        if not node:\n            n=nuke.selectedNode()\n        else:\n            n=node\n            n\['xpos'].setValue(n\['xpos'].getValue()-step)\n            n\['ypos'].setValue(n\['ypos'].getValue()-step)\n            n\['bdwidth'].setValue(n\['bdwidth'].getValue()+step*2)\n            n\['bdheight'].setValue(n\['bdheight'].getValue()+step*2)\n    except:\n        pass\ngrow(n,50)"}
    addUserKnob {22 shrink l " <img src=\"F_scalem.png\">" -STARTLINE T "n=nuke.thisNode()\n\ndef shrink(node=None,step=50):\n    try:\n        if not node:\n            n=nuke.selectedNode()\n        else:\n            n=node\n            n\['xpos'].setValue(n\['xpos'].getValue()+step)\n            n\['ypos'].setValue(n\['ypos'].getValue()+step)\n            n\['bdwidth'].setValue(n\['bdwidth'].getValue()-step*2)\n            n\['bdheight'].setValue(n\['bdheight'].getValue()-step*2)\n    except:\n        pass\nshrink(n,50)"}
    addUserKnob {22 colorandom l " <img src=\"ColorBars.png\">" -STARTLINE T "import colorsys, random\nn=nuke.thisNode()\nR,G,B= colorsys.hsv_to_rgb(random.random(),.1+random.random()*.15,.15+random.random()*.15)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ) )"}
    addUserKnob {22 darkgrey l "<font color=\"#232323\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.0, 0.0, 0.14]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 lightgrey l "<font color=\"#383838\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.0, 0.0, 0.22]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 red l "<font color=\"#8c3838\" size=6>■</font>" T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.0, 0.6, 0.55]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n" +STARTLINE}
    addUserKnob {22 orange l "<font color=\"#b28e59\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.1, 0.5, 0.7]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 yellow l "<font color=\"#ccc766\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.16, 0.5, 0.8]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 green l "<font color=\"#5d995b\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.33, 0.4, 0.6]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 cyan l "<font color=\"#72998f\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.46, 0.25, 0.6]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 blue l "<font color=\"#59687f\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.6, 0.3, 0.5]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 darkblue l "<font color=\"#63628c\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.67, 0.3, 0.55]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 magenta l "<font color=\"#927a99\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.8, 0.2, 0.6]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 pink l "<font color=\"#997a89\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.92, 0.2, 0.6]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {26 S02 l " " T " "}
    addUserKnob {26 Ftools l "" +STARTLINE T "<font color=\"#1C1C1C\"> v1.2 - Franklin VFX - 2018"}
   }
   BackdropNode {
    inputs 0
    name BackdropNode1
    knobChanged "try:\n    listenedKnobs = \['text', 'position', 'name']\n    node = nuke.thisNode()\n    name = node.knob('name').value()\n    text = node.knob('text').value()\n    position = node.knob('position').value()\n    position = \"<\" + position + \">\"\n    label = node.knob('label').value()\n    \n    if nuke.thisKnob().name() in listenedKnobs:\n        if text == \"\":\n            if node.knob('position').value() == \"left\":\n                node.knob('label').setValue()\n            else:\n                node.knob('label').setValue(position + name)\n        else:\n            if node.knob('position').value() == \"left\":\n                node.knob('label').setValue(text)\n            else:\n                node.knob('label').setValue(position + text)\n                \n    elif nuke.thisKnob().name() == 'font_size':\n        fontSize = node.knob('font_size').value()\n        node.knob('note_font_size').setValue(fontSize)\nexcept:\n    pass"
    tile_color 0x927a99ff
    note_font_size 50
    xpos -460
    ypos -257
    bdwidth 435
    bdheight 786
    z_order 1
    addUserKnob {20 F_VFX l BackdropNode}
    addUserKnob {43 text l Text}
    addUserKnob {7 font_size l "Font Size" R 10 100}
    font_size 50
    addUserKnob {4 position l "" -STARTLINE M {Left Center}}
    addUserKnob {26 S01 l " " T " "}
    addUserKnob {22 grow l " <img src=\"F_scalep.png\">" -STARTLINE T "n=nuke.thisNode()\n\ndef grow(node=None,step=50):\n    try:\n        if not node:\n            n=nuke.selectedNode()\n        else:\n            n=node\n            n\['xpos'].setValue(n\['xpos'].getValue()-step)\n            n\['ypos'].setValue(n\['ypos'].getValue()-step)\n            n\['bdwidth'].setValue(n\['bdwidth'].getValue()+step*2)\n            n\['bdheight'].setValue(n\['bdheight'].getValue()+step*2)\n    except:\n        pass\ngrow(n,50)"}
    addUserKnob {22 shrink l " <img src=\"F_scalem.png\">" -STARTLINE T "n=nuke.thisNode()\n\ndef shrink(node=None,step=50):\n    try:\n        if not node:\n            n=nuke.selectedNode()\n        else:\n            n=node\n            n\['xpos'].setValue(n\['xpos'].getValue()+step)\n            n\['ypos'].setValue(n\['ypos'].getValue()+step)\n            n\['bdwidth'].setValue(n\['bdwidth'].getValue()-step*2)\n            n\['bdheight'].setValue(n\['bdheight'].getValue()-step*2)\n    except:\n        pass\nshrink(n,50)"}
    addUserKnob {22 colorandom l " <img src=\"ColorBars.png\">" -STARTLINE T "import colorsys, random\nn=nuke.thisNode()\nR,G,B= colorsys.hsv_to_rgb(random.random(),.1+random.random()*.15,.15+random.random()*.15)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ) )"}
    addUserKnob {22 darkgrey l "<font color=\"#232323\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.0, 0.0, 0.14]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 lightgrey l "<font color=\"#383838\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.0, 0.0, 0.22]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 red l "<font color=\"#8c3838\" size=6>■</font>" T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.0, 0.6, 0.55]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n" +STARTLINE}
    addUserKnob {22 orange l "<font color=\"#b28e59\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.1, 0.5, 0.7]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 yellow l "<font color=\"#ccc766\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.16, 0.5, 0.8]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 green l "<font color=\"#5d995b\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.33, 0.4, 0.6]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 cyan l "<font color=\"#72998f\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.46, 0.25, 0.6]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 blue l "<font color=\"#59687f\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.6, 0.3, 0.5]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 darkblue l "<font color=\"#63628c\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.67, 0.3, 0.55]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 magenta l "<font color=\"#927a99\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.8, 0.2, 0.6]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 pink l "<font color=\"#997a89\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.92, 0.2, 0.6]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {26 S02 l " " T " "}
    addUserKnob {26 Ftools l "" +STARTLINE T "<font color=\"#1C1C1C\"> v1.2 - Franklin VFX - 2018"}
   }
   Constant {
    inputs 0
    channels rgb
    name Constant4
    xpos -648
    ypos 987
   }
   AdjBBox {
    numpixels {{size_bbox}}
    name AdjBBox4
    xpos -648
    ypos 1120
   }
   Dot {
    name Dot19
    xpos -614
    ypos 1200
   }
   Axis3 {
    inputs 0
    useMatrix true
    matrix {
        {{parent.cCard3D_1.matrix} {parent.cCard3D_1.matrix} {parent.cCard3D_1.matrix} {parent.cCard3D_1.matrix}}
        {{parent.cCard3D_1.matrix} {parent.cCard3D_1.matrix} {parent.cCard3D_1.matrix} {parent.cCard3D_1.matrix}}
        {{parent.cCard3D_1.matrix} {parent.cCard3D_1.matrix} {parent.cCard3D_1.matrix} {parent.cCard3D_1.matrix}}
        {{parent.cCard3D_1.matrix} {parent.cCard3D_1.matrix} {parent.cCard3D_1.matrix} {parent.cCard3D_1.matrix}}
      }
    name Axis3
    xpos -207
    ypos 48
   }
set N107eb050 [stack 0]
push 0
   Input {
    inputs 0
    name Side
    xpos -135
    ypos -1101
   }
   TimeOffset {
    time_offset {{"shotnmbr==0 ? 0 : shot\[value shotnmbr]-1"}}
    time ""
    name CTimeOffset7
    label "shot: \[value shotnmbr]\non frame \[value time_offset]"
    xpos -135
    ypos -852
    addUserKnob {20 User}
    addUserKnob {3 shotnmbr l "shot "}
    shotnmbr {{shotcount}}
    addUserKnob {3 ref}
    ref {{time_offset+1}}
   }
   Group {
    name DecimalTimeOffset1
    tile_color 0xafa35dff
    label "random asset\n(based on brighness)"
    note_font "Bitstream Vera Sans Bold"
    xpos -135
    ypos -689
    addUserKnob {20 User}
    addUserKnob {7 decimal l "time offset (decimal)"}
    decimal {{"floor\n(\n  (\n  (  ((((random((shotcount*823)+(seed*212))-0.5)*  ((1-( abs(brighness_flare-0.5) )*2)+1)  )+0.5)*0.5)  * (1-brighness_flare)  )\n\n  +\n\n  (  (((((random((shotcount*823)+(seed*212))-0.5)*  ((1-( abs(brighness_flare-0.5) )*2)+1)  )+0.5)*0.5)+0.5)  * (brighness_flare)  )\n  )\n  *1000\n)\n\n/1000"}}
    addUserKnob {26 ""}
    addUserKnob {26 _1 l "" +STARTLINE T "Chris Fryer | 2020\nupdated by Yorben Otto | 2024"}
   }
    Input {
     inputs 0
     name Input1
     xpos 426
     ypos -793
    }
    TimeOffset {
     time_offset {{(-floor(parent.decimal))*(DecimalTimeOffset1.decimal<0)}}
     time ""
     name TimeOffset1
     selected true
     xpos 426
     ypos -674
    }
    Dot {
     name Dot6
     selected true
     xpos 460
     ypos -635
    }
set N1082d4a0 [stack 0]
    Dot {
     name Dot5
     selected true
     xpos 350
     ypos -635
    }
    Dot {
     name Dot7
     selected true
     xpos 350
     ypos -365
    }
push $N1082d4a0
    Dot {
     name Dot1
     selected true
     xpos 572
     ypos -635
    }
    TimeBlur {
     divisions 2
     shutter {{(parent.decimal-(floor(parent.decimal)))*2}}
     shutteroffset start
     shuttercustomoffset 0
     name TimeBlur1
     selected true
     xpos 538
     ypos -558
    }
    Dot {
     name Dot2
     selected true
     xpos 572
     ypos -490
    }
push $N1082d4a0
    TimeBlur {
     divisions 2
     shutter {{parent.decimal*2}}
     shutteroffset start
     shuttercustomoffset 0
     name TimeBlur8
     selected true
     xpos 426
     ypos -556
    }
    Switch {
     inputs 2
     which {{parent.decimal<0}}
     name Switch1
     selected true
     xpos 426
     ypos -494
    }
    Multiply {
     value {{parent.TimeBlur8.divisions}}
     name Multiply6
     selected true
     xpos 426
     ypos -436
    }
    Merge2 {
     inputs 2
     operation from
     name Merge6
     selected true
     xpos 426
     ypos -369
    }
set N10870950 [stack 0]
    Output {
     name Output1
     xpos 426
     ypos -221
    }
push $N10870950
push $N10870950
    Viewer {
     inputs 2
     frame_range 1-100
     viewerProcess "sRGB (default)"
     name Viewer1
     xpos 675
     ypos -246
    }
   end_group
   NoTimeBlur {
    name NoTimeBlur6
    xpos -135
    ypos -608
   }
   Dot {
    name Dot21
    xpos -101
    ypos -449
   }
set N1090f790 [stack 0]
   Dot {
    name Dot22
    xpos -245
    ypos -449
   }
   Multiply {
    value {{math_matrix.result_y_flash(parent.CTimeOffset7.ref)}}
    name Angle_reveal_top
    label TOP
    xpos -279
    ypos -371
   }
   Transform {
    scale {{0.05+(0.05*(((parent.DecimalTimeOffset1.decimal-0.5)*2)*ScaleVariationFlash))}}
    center {{root.width/2 x1015 2304} {root.height/2}}
    shutteroffset centred
    name random_size_top
    xpos -279
    ypos -136
   }
   Card3D {
    inputs 3
    rot_order ZYX
    translate {0 0 0}
    rotate {90 0 0}
    shutteroffset centred
    name cCard3D5
    tile_color 0x7b1d1dff
    xpos -279
    ypos 153
    addUserKnob {20 User l parent}
    addUserKnob {22 python_button l "set parent" t "select parent node, and press this button to set the selected node as parent" +INVISIBLE T "n = nuke.selectedNode()\['name'].getValue()\nnuke.thisNode()\['string'].setValue(n)" +STARTLINE}
    addUserKnob {1 string l parent +INVISIBLE}
    string null
    addUserKnob {3 ref l "ref frame"}
    ref 1015
   }
   Transform {
    translate {{"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].translate.x(ref)\}]"} {"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].translate.y(ref)\}]"}}
    rotate {{"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].rotate-\[value parent_gun].rotate(ref)\}]"}}
    scale {{"\[if \{\[value parent_gun]==\"null\"\} \{return 1\} \{return 1+(\[value parent_gun].scale-\[value parent_gun].scale(ref))\}]"}}
    center {{"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].center.x(ref)\}]"} {"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].center.y(ref)\}]"}}
    name GUNMatchMove
    label "\n"
    xpos -279
    ypos 247
    addUserKnob {20 User l parent}
    addUserKnob {3 ref}
    ref {{parent.CTimeOffset7.ref}}
   }
   Transform {
    translate {{"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].translate.x-\[value parent_env].translate.x(ref)\}]"} {"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].translate.y-\[value parent_env].translate.y(ref)\}]"}}
    rotate {{"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].rotate-\[value parent_env].rotate(ref)\}]"}}
    scale {{"\[if \{\[value parent_gun]==\"null\"\} \{return 1\} \{return 1+(\[value parent_env].scale-\[value parent_env].scale(ref))\}]"}}
    center {{"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].center.x(ref)\}]"} {"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].center.y(ref)\}]"}}
    motionblur {{(mode==2)*0.2}}
    shutter {{FlashMB*(0.175*0.3)}}
    shutteroffset centred
    name ENVMatchMove
    xpos -279
    ypos 321
    addUserKnob {20 User l parent}
    addUserKnob {3 ref}
    ref {{parent.CTimeOffset7.ref}}
   }
   Transform {
    translate {{"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return -((root.width/2)-(\[value parent_gun].center.x(1)+\[value parent_gun].translate.x(1)))\}]"} {"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return -((root.height/2)-(\[value parent_gun].center.y(1)+\[value parent_gun].translate.y(1)))\}]"}}
    shutteroffset centred
    name Transform_GUNMatchMove1
    label "alignment correction"
    xpos -279
    ypos 408
    addUserKnob {20 User l parent}
    addUserKnob {22 python_button l "set parent" t "select parent node, and press this button to set the selected node as parent" T "n = nuke.selectedNode()\['name'].getValue()\nnuke.thisNode()\['string'].setValue(n)" +STARTLINE}
    addUserKnob {1 string l parent}
    string Transform_MatchMove10
    addUserKnob {3 ref +INVISIBLE}
    ref {{parent.cCard3D_8.ref}}
   }
   Remove {
    operation keep
    channels rgb
    name Remove10
    xpos -279
    ypos 489
   }
push 0
   Switch {
    inputs 2
    which {{parent.Angle_reveal_top.value!=0}}
    name Switch4
    xpos -279
    ypos 670
   }
   Dot {
    name Dot1
    xpos -245
    ypos 717
   }
push 0
push $N107eb050
push 0
   Input {
    inputs 0
    name Front
    xpos -430
    ypos -1102
    number 1
   }
   TimeOffset {
    time_offset {{"shotnmbr==0 ? 0 : shot\[value shotnmbr]-1"}}
    time ""
    name CTimeOffset8
    xpos -430
    ypos -840
    addUserKnob {20 User}
    addUserKnob {3 shotnmbr l "shot "}
    shotnmbr {{parent.CTimeOffset7.shotnmbr}}
   }
   Group {
    name DecimalTimeOffset
    tile_color 0xafa35dff
    label "random asset\n(based on brighness)"
    note_font "Bitstream Vera Sans Bold"
    xpos -430
    ypos -693
    addUserKnob {20 User}
    addUserKnob {7 decimal l "time offset (decimal)"}
    decimal {{"floor\n(\n  (\n  (  ((((random((shotcount*823)+(seed*212))-0.5)*  ((1-( abs(brighness_flare-0.5) )*2)+1)  )+0.5)*0.5)  * (1-brighness_flare)  )\n\n  +\n\n  (  (((((random((shotcount*823)+(seed*212))-0.5)*  ((1-( abs(brighness_flare-0.5) )*2)+1)  )+0.5)*0.5)+0.5)  * (brighness_flare)  )\n  )\n  *1000\n)\n\n/1000"}}
    addUserKnob {26 ""}
    addUserKnob {26 _1 l "" +STARTLINE T "Chris Fryer | 2020\nupdated by Yorben Otto | 2024"}
   }
    Input {
     inputs 0
     name Input1
     xpos 426
     ypos -793
    }
    TimeOffset {
     time_offset {{(-floor(parent.decimal))*(DecimalTimeOffset.decimal<0)}}
     time ""
     name TimeOffset1
     selected true
     xpos 426
     ypos -674
    }
    Dot {
     name Dot6
     selected true
     xpos 460
     ypos -635
    }
set N109b6920 [stack 0]
    Dot {
     name Dot5
     selected true
     xpos 350
     ypos -635
    }
    Dot {
     name Dot7
     selected true
     xpos 350
     ypos -365
    }
push $N109b6920
    Dot {
     name Dot1
     selected true
     xpos 572
     ypos -635
    }
    TimeBlur {
     divisions 2
     shutter {{(parent.decimal-(floor(parent.decimal)))*2}}
     shutteroffset start
     shuttercustomoffset 0
     name TimeBlur1
     selected true
     xpos 538
     ypos -558
    }
    Dot {
     name Dot2
     selected true
     xpos 572
     ypos -490
    }
push $N109b6920
    TimeBlur {
     divisions 2
     shutter {{parent.decimal*2}}
     shutteroffset start
     shuttercustomoffset 0
     name TimeBlur8
     selected true
     xpos 426
     ypos -556
    }
    Switch {
     inputs 2
     which {{parent.decimal<0}}
     name Switch1
     selected true
     xpos 426
     ypos -494
    }
    Multiply {
     value {{parent.TimeBlur8.divisions}}
     name Multiply6
     selected true
     xpos 426
     ypos -436
    }
    Merge2 {
     inputs 2
     operation from
     name Merge6
     selected true
     xpos 426
     ypos -369
    }
set N109f8a20 [stack 0]
    Output {
     name Output1
     xpos 426
     ypos -221
    }
push $N109f8a20
push $N109f8a20
    Viewer {
     inputs 2
     frame_range 1-100
     viewerProcess "sRGB (default)"
     name Viewer1
     xpos 675
     ypos -246
    }
   end_group
   NoTimeBlur {
    name NoTimeBlur7
    xpos -430
    ypos -617
   }
   Multiply {
    value {{math_matrix.result_x_flash(parent.CTimeOffset7.ref)}}
    name Angle_reveal_front
    label FRONT
    xpos -430
    ypos -375
   }
   Transform {
    scale {{0.05+(0.05*(((parent.DecimalTimeOffset1.decimal-0.5)*2)*ScaleVariationFlash))}}
    center {{root.width/2 x1015 2304} {root.height/2}}
    shutteroffset centred
    name random_size_front
    xpos -430
    ypos -134
   }
   Card3D {
    inputs 3
    rot_order ZYX
    translate {0 0 0}
    rotate {0 90 0}
    shutteroffset centred
    name cCard3D6
    tile_color 0x7b1d1dff
    xpos -430
    ypos 150
    addUserKnob {20 User l parent}
    addUserKnob {22 python_button l "set parent" t "select parent node, and press this button to set the selected node as parent" +INVISIBLE T "n = nuke.selectedNode()\['name'].getValue()\nnuke.thisNode()\['string'].setValue(n)" +STARTLINE}
    addUserKnob {1 string l parent +INVISIBLE}
    string null
    addUserKnob {3 ref l "ref frame"}
    ref 1015
   }
   Transform {
    translate {{"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].translate.x(ref)\}]"} {"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].translate.y(ref)\}]"}}
    rotate {{"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].rotate-\[value parent_gun].rotate(ref)\}]"}}
    scale {{"\[if \{\[value parent_gun]==\"null\"\} \{return 1\} \{return 1+(\[value parent_gun].scale-\[value parent_gun].scale(ref))\}]"}}
    center {{"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].center.x(ref)\}]"} {"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].center.y(ref)\}]"}}
    name GUNMatchMove2
    label "\n"
    xpos -430
    ypos 248
    addUserKnob {20 User l parent}
    addUserKnob {3 ref}
    ref {{parent.CTimeOffset7.ref}}
   }
   Transform {
    translate {{"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].translate.x-\[value parent_env].translate.x(ref)\}]"} {"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].translate.y-\[value parent_env].translate.y(ref)\}]"}}
    rotate {{"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].rotate-\[value parent_env].rotate(ref)\}]"}}
    scale {{"\[if \{\[value parent_gun]==\"null\"\} \{return 1\} \{return 1+(\[value parent_env].scale-\[value parent_env].scale(ref))\}]"}}
    center {{"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].center.x(ref)\}]"} {"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].center.y(ref)\}]"}}
    motionblur {{(mode==2)*0.2}}
    shutter {{FlashMB*(0.175*0.3)}}
    shutteroffset centred
    name ENVMatchMove2
    xpos -430
    ypos 320
    addUserKnob {20 User l parent}
    addUserKnob {3 ref}
    ref {{parent.CTimeOffset7.ref}}
   }
   Transform {
    translate {{"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return -((root.width/2)-(\[value parent_gun].center.x(1)+\[value parent_gun].translate.x(1)))\}]"} {"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return -((root.height/2)-(\[value parent_gun].center.y(1)+\[value parent_gun].translate.y(1)))\}]"}}
    shutteroffset centred
    name Transform_GUNMatchMove2
    label "alignment correction"
    xpos -430
    ypos 407
    addUserKnob {20 User l parent}
    addUserKnob {22 python_button l "set parent" t "select parent node, and press this button to set the selected node as parent" T "n = nuke.selectedNode()\['name'].getValue()\nnuke.thisNode()\['string'].setValue(n)" +STARTLINE}
    addUserKnob {1 string l parent}
    string Transform_MatchMove10
    addUserKnob {3 ref +INVISIBLE}
    ref {{parent.cCard3D_8.ref}}
   }
   Remove {
    operation keep
    channels rgb
    name Remove11
    xpos -430
    ypos 487
   }
push 0
   Switch {
    inputs 2
    which {{parent.Angle_reveal_front.value!=0}}
    name Switch5
    xpos -430
    ypos 675
   }
   Dot {
    name Dot2
    xpos -396
    ypos 749
   }
push $N1090f790
   Multiply {
    value {{math_matrix.result_z_flash(parent.CTimeOffset7.ref)}}
    name Angle_reveal_side
    label SIDE
    xpos -135
    ypos -372
   }
   Transform {
    scale {{0.05+(0.05*(((parent.DecimalTimeOffset1.decimal-0.5)*2)*ScaleVariationFlash))}}
    center {{root.width/2 x1015 2304} {root.height/2}}
    shutteroffset centred
    name random_size_side
    xpos -135
    ypos -136
   }
   Card3D {
    translate {{"\[if \{\[exists  parent.parent.parent.input0]\} \{return \[value \[topnode parent.parent.parent.input0].name].translate.x(ref)\} \{return 0\}]"} {"\[if \{\[exists  parent.parent.parent.input0]\} \{return \[value \[topnode parent.parent.parent.input0].name].translate.y(ref)\} \{return 0\}]"} {"\[if \{\[exists  parent.parent.parent.input0]\} \{return \[value \[topnode parent.parent.parent.input0].name].translate.z(ref)\} \{return -1\}]"}}
    rotate {{"\[if \{\[exists  parent.parent.parent.input0]\} \{return \[value \[topnode parent.parent.parent.input0].name].rotate.x(ref)\} \{return 0\}]"} {"\[if \{\[exists  parent.parent.parent.input0]\} \{return \[value \[topnode parent.parent.parent.input0].name].rotate.y(ref)\} \{return 0\}]"} {"\[if \{\[exists  parent.parent.parent.input0]\} \{return \[value \[topnode parent.parent.parent.input0].name].rotate.z(ref)\} \{return 0\}]"}}
    scaling {{"\[if \{\[exists  parent.parent.parent.input0]\} \{return \[value \[topnode parent.parent.parent.input0].name].scaling.x(ref)\} \{return 1\}]"} {"\[if \{\[exists  parent.parent.parent.input0]\} \{return \[value \[topnode parent.parent.parent.input0].name].scaling.y(ref)\} \{return 1\}]"} {"\[if \{\[exists  parent.parent.parent.input0]\} \{return \[value \[topnode parent.parent.parent.input0].name].scaling.z(ref)\} \{return 1\}]"}}
    uniform_scale {{"\[if \{\[exists  parent.parent.parent.input0]\} \{return (\[value \[topnode parent.parent.parent.input0].name].uniform_scale(ref)*25)\} \{return 25\}]"}}
    shutteroffset centred
    name cCard3D_1
    tile_color 0x7b1d1dff
    label "ref frame: \[value ref]"
    xpos -135
    ypos 147
    addUserKnob {20 User l parent}
    addUserKnob {22 python_button l "set parent" t "select parent node, and press this button to set the selected node as parent" +INVISIBLE T "n = nuke.selectedNode()\['name'].getValue()\nnuke.thisNode()\['string'].setValue(n)" +STARTLINE}
    addUserKnob {1 string l parent +INVISIBLE}
    string null
    addUserKnob {3 id l "id number"}
    id {{parent.CTimeOffset7.shotnmbr}}
    addUserKnob {3 ref l "ref frame"}
    ref {{parent.CTimeOffset7.time_offset}}
   }
   Transform {
    translate {{"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].translate.x(ref)\}]"} {"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].translate.y(ref)\}]"}}
    rotate {{"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].rotate-\[value parent_gun].rotate(ref)\}]"}}
    scale {{"\[if \{\[value parent_gun]==\"null\"\} \{return 1\} \{return 1+(\[value parent_gun].scale-\[value parent_gun].scale(ref))\}]"}}
    center {{"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].center.x(ref)\}]"} {"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].center.y(ref)\}]"}}
    name GUNMatchMove1
    label "\n"
    xpos -135
    ypos 241
    addUserKnob {20 User l parent}
    addUserKnob {3 ref}
    ref {{parent.CTimeOffset7.ref}}
   }
   Transform {
    translate {{"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].translate.x-\[value parent_env].translate.x(ref)\}]"} {"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].translate.y-\[value parent_env].translate.y(ref)\}]"}}
    rotate {{"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].rotate-\[value parent_env].rotate(ref)\}]"}}
    scale {{"\[if \{\[value parent_gun]==\"null\"\} \{return 1\} \{return 1+(\[value parent_env].scale-\[value parent_env].scale(ref))\}]"}}
    center {{"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].center.x(ref)\}]"} {"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].center.y(ref)\}]"}}
    motionblur {{(mode==2)*0.2}}
    shutter {{FlashMB*(0.175*0.3)}}
    shutteroffset centred
    name ENVMatchMove1
    xpos -135
    ypos 317
    addUserKnob {20 User l parent}
    addUserKnob {3 ref}
    ref {{parent.CTimeOffset7.ref}}
   }
   Transform {
    translate {{"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return -((root.width/2)-(\[value parent_gun].center.x(1)+\[value parent_gun].translate.x(1)))\}]"} {"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return -((root.height/2)-(\[value parent_gun].center.y(1)+\[value parent_gun].translate.y(1)))\}]"}}
    shutteroffset centred
    name Transform_GUNMatchMove3
    label "alignment correction"
    xpos -135
    ypos 405
    addUserKnob {20 User l parent}
    addUserKnob {22 python_button l "set parent" t "select parent node, and press this button to set the selected node as parent" T "n = nuke.selectedNode()\['name'].getValue()\nnuke.thisNode()\['string'].setValue(n)" +STARTLINE}
    addUserKnob {1 string l parent}
    string Transform_MatchMove10
    addUserKnob {3 ref +INVISIBLE}
    ref {{parent.cCard3D_8.ref}}
   }
   Remove {
    operation keep
    channels rgb
    name Remove12
    xpos -135
    ypos 489
   }
push 0
   Switch {
    inputs 2
    which {{parent.Angle_reveal_side.value!=0}}
    name Switch6
    xpos -135
    ypos 676
   }
   Merge2 {
    inputs 3+1
    operation max
    name Merge1
    xpos -135
    ypos 745
   }
   Merge2 {
    inputs 2
    operation plus
    bbox intersection
    name Merge6
    xpos -135
    ypos 1196
   }
push 0
   Switch {
    inputs 2
    which {{"shot\[value count]==0?0:(EnableExtraFrames==1?floor(((frame>=shot\[value count])+(frame<=(shot\[value count]+(4*((mode==1)+(mode==2))))))/2):frame==shot\[value count])"}}
    name cSwitch_3
    xpos -135
    ypos 1359
    addUserKnob {20 User}
    addUserKnob {3 count l "shot number"}
    count {{parent.CTimeOffset7.shotnmbr}}
    addUserKnob {6 shot +STARTLINE}
    shot {{frame==(parent.CTimeOffset7.time_offset+1)}}
   }
   Output {
    name Output1
    xpos -135
    ypos 1861
   }
  end_group
push $N104111c0
push $N1077f610
  Group {
   inputs 2
   name gunshot3
   label "shot: \[value shotcount]\non frame: \[value shotstart]\n"
   xpos 8332
   ypos -812
   addUserKnob {20 User}
   addUserKnob {3 shotcount l shot}
   shotcount 3
   addUserKnob {3 shotstart l frame +INVISIBLE}
   shotstart {{"shotcount==0 ? 0 : shot\[value shotcount]-1"}}
  }
   BackdropNode {
    inputs 0
    name BackdropNode3
    knobChanged "try:\n    listenedKnobs = \['text', 'position', 'name']\n    node = nuke.thisNode()\n    name = node.knob('name').value()\n    text = node.knob('text').value()\n    position = node.knob('position').value()\n    position = \"<\" + position + \">\"\n    label = node.knob('label').value()\n    \n    if nuke.thisKnob().name() in listenedKnobs:\n        if text == \"\":\n            if node.knob('position').value() == \"left\":\n                node.knob('label').setValue()\n            else:\n                node.knob('label').setValue(position + name)\n        else:\n            if node.knob('position').value() == \"left\":\n                node.knob('label').setValue(text)\n            else:\n                node.knob('label').setValue(position + text)\n                \n    elif nuke.thisKnob().name() == 'font_size':\n        fontSize = node.knob('font_size').value()\n        node.knob('note_font_size').setValue(fontSize)\nexcept:\n    pass"
    tile_color 0x232323ff
    label "<Left><h2> Gunshot"
    note_font_size 31.5
    xpos -698
    ypos -924
    bdwidth 1057
    bdheight 2343
    addUserKnob {20 F_VFX l BackdropNode}
    addUserKnob {43 text l Text}
    text "<h2> Gunshot"
    addUserKnob {7 font_size l "Font Size" R 10 100}
    font_size 31.5
    addUserKnob {4 position l "" -STARTLINE M {Left Center}}
    addUserKnob {26 S01 l " " T " "}
    addUserKnob {22 grow l " <img src=\"F_scalep.png\">" -STARTLINE T "n=nuke.thisNode()\n\ndef grow(node=None,step=50):\n    try:\n        if not node:\n            n=nuke.selectedNode()\n        else:\n            n=node\n            n\['xpos'].setValue(n\['xpos'].getValue()-step)\n            n\['ypos'].setValue(n\['ypos'].getValue()-step)\n            n\['bdwidth'].setValue(n\['bdwidth'].getValue()+step*2)\n            n\['bdheight'].setValue(n\['bdheight'].getValue()+step*2)\n    except:\n        pass\ngrow(n,50)"}
    addUserKnob {22 shrink l " <img src=\"F_scalem.png\">" -STARTLINE T "n=nuke.thisNode()\n\ndef shrink(node=None,step=50):\n    try:\n        if not node:\n            n=nuke.selectedNode()\n        else:\n            n=node\n            n\['xpos'].setValue(n\['xpos'].getValue()+step)\n            n\['ypos'].setValue(n\['ypos'].getValue()+step)\n            n\['bdwidth'].setValue(n\['bdwidth'].getValue()-step*2)\n            n\['bdheight'].setValue(n\['bdheight'].getValue()-step*2)\n    except:\n        pass\nshrink(n,50)"}
    addUserKnob {22 colorandom l " <img src=\"ColorBars.png\">" -STARTLINE T "import colorsys, random\nn=nuke.thisNode()\nR,G,B= colorsys.hsv_to_rgb(random.random(),.1+random.random()*.15,.15+random.random()*.15)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ) )"}
    addUserKnob {22 darkgrey l "<font color=\"#232323\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.0, 0.0, 0.14]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 lightgrey l "<font color=\"#383838\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.0, 0.0, 0.22]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 red l "<font color=\"#8c3838\" size=6>■</font>" T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.0, 0.6, 0.55]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n" +STARTLINE}
    addUserKnob {22 orange l "<font color=\"#b28e59\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.1, 0.5, 0.7]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 yellow l "<font color=\"#ccc766\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.16, 0.5, 0.8]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 green l "<font color=\"#5d995b\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.33, 0.4, 0.6]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 cyan l "<font color=\"#72998f\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.46, 0.25, 0.6]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 blue l "<font color=\"#59687f\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.6, 0.3, 0.5]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 darkblue l "<font color=\"#63628c\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.67, 0.3, 0.55]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 magenta l "<font color=\"#927a99\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.8, 0.2, 0.6]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 pink l "<font color=\"#997a89\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.92, 0.2, 0.6]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {26 S02 l " " T " "}
    addUserKnob {26 Ftools l "" +STARTLINE T "<font color=\"#1C1C1C\"> v1.2 - Franklin VFX - 2018"}
   }
   BackdropNode {
    inputs 0
    name BackdropNode1
    knobChanged "try:\n    listenedKnobs = \['text', 'position', 'name']\n    node = nuke.thisNode()\n    name = node.knob('name').value()\n    text = node.knob('text').value()\n    position = node.knob('position').value()\n    position = \"<\" + position + \">\"\n    label = node.knob('label').value()\n    \n    if nuke.thisKnob().name() in listenedKnobs:\n        if text == \"\":\n            if node.knob('position').value() == \"left\":\n                node.knob('label').setValue()\n            else:\n                node.knob('label').setValue(position + name)\n        else:\n            if node.knob('position').value() == \"left\":\n                node.knob('label').setValue(text)\n            else:\n                node.knob('label').setValue(position + text)\n                \n    elif nuke.thisKnob().name() == 'font_size':\n        fontSize = node.knob('font_size').value()\n        node.knob('note_font_size').setValue(fontSize)\nexcept:\n    pass"
    tile_color 0x927a99ff
    note_font_size 50
    xpos -460
    ypos -257
    bdwidth 435
    bdheight 786
    z_order 1
    addUserKnob {20 F_VFX l BackdropNode}
    addUserKnob {43 text l Text}
    addUserKnob {7 font_size l "Font Size" R 10 100}
    font_size 50
    addUserKnob {4 position l "" -STARTLINE M {Left Center}}
    addUserKnob {26 S01 l " " T " "}
    addUserKnob {22 grow l " <img src=\"F_scalep.png\">" -STARTLINE T "n=nuke.thisNode()\n\ndef grow(node=None,step=50):\n    try:\n        if not node:\n            n=nuke.selectedNode()\n        else:\n            n=node\n            n\['xpos'].setValue(n\['xpos'].getValue()-step)\n            n\['ypos'].setValue(n\['ypos'].getValue()-step)\n            n\['bdwidth'].setValue(n\['bdwidth'].getValue()+step*2)\n            n\['bdheight'].setValue(n\['bdheight'].getValue()+step*2)\n    except:\n        pass\ngrow(n,50)"}
    addUserKnob {22 shrink l " <img src=\"F_scalem.png\">" -STARTLINE T "n=nuke.thisNode()\n\ndef shrink(node=None,step=50):\n    try:\n        if not node:\n            n=nuke.selectedNode()\n        else:\n            n=node\n            n\['xpos'].setValue(n\['xpos'].getValue()+step)\n            n\['ypos'].setValue(n\['ypos'].getValue()+step)\n            n\['bdwidth'].setValue(n\['bdwidth'].getValue()-step*2)\n            n\['bdheight'].setValue(n\['bdheight'].getValue()-step*2)\n    except:\n        pass\nshrink(n,50)"}
    addUserKnob {22 colorandom l " <img src=\"ColorBars.png\">" -STARTLINE T "import colorsys, random\nn=nuke.thisNode()\nR,G,B= colorsys.hsv_to_rgb(random.random(),.1+random.random()*.15,.15+random.random()*.15)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ) )"}
    addUserKnob {22 darkgrey l "<font color=\"#232323\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.0, 0.0, 0.14]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 lightgrey l "<font color=\"#383838\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.0, 0.0, 0.22]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 red l "<font color=\"#8c3838\" size=6>■</font>" T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.0, 0.6, 0.55]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n" +STARTLINE}
    addUserKnob {22 orange l "<font color=\"#b28e59\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.1, 0.5, 0.7]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 yellow l "<font color=\"#ccc766\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.16, 0.5, 0.8]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 green l "<font color=\"#5d995b\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.33, 0.4, 0.6]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 cyan l "<font color=\"#72998f\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.46, 0.25, 0.6]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 blue l "<font color=\"#59687f\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.6, 0.3, 0.5]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 darkblue l "<font color=\"#63628c\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.67, 0.3, 0.55]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 magenta l "<font color=\"#927a99\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.8, 0.2, 0.6]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 pink l "<font color=\"#997a89\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.92, 0.2, 0.6]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {26 S02 l " " T " "}
    addUserKnob {26 Ftools l "" +STARTLINE T "<font color=\"#1C1C1C\"> v1.2 - Franklin VFX - 2018"}
   }
   Constant {
    inputs 0
    channels rgb
    name Constant4
    xpos -648
    ypos 987
   }
   AdjBBox {
    numpixels {{size_bbox}}
    name AdjBBox4
    xpos -648
    ypos 1120
   }
   Dot {
    name Dot19
    xpos -614
    ypos 1200
   }
   Axis3 {
    inputs 0
    useMatrix true
    matrix {
        {{parent.cCard3D_1.matrix} {parent.cCard3D_1.matrix} {parent.cCard3D_1.matrix} {parent.cCard3D_1.matrix}}
        {{parent.cCard3D_1.matrix} {parent.cCard3D_1.matrix} {parent.cCard3D_1.matrix} {parent.cCard3D_1.matrix}}
        {{parent.cCard3D_1.matrix} {parent.cCard3D_1.matrix} {parent.cCard3D_1.matrix} {parent.cCard3D_1.matrix}}
        {{parent.cCard3D_1.matrix} {parent.cCard3D_1.matrix} {parent.cCard3D_1.matrix} {parent.cCard3D_1.matrix}}
      }
    name Axis3
    xpos -207
    ypos 48
   }
set N10be5e40 [stack 0]
push 0
   Input {
    inputs 0
    name Side
    xpos -135
    ypos -1101
   }
   TimeOffset {
    time_offset {{"shotnmbr==0 ? 0 : shot\[value shotnmbr]-1"}}
    time ""
    name CTimeOffset7
    label "shot: \[value shotnmbr]\non frame \[value time_offset]"
    xpos -135
    ypos -852
    addUserKnob {20 User}
    addUserKnob {3 shotnmbr l "shot "}
    shotnmbr {{shotcount}}
    addUserKnob {3 ref}
    ref {{time_offset+1}}
   }
   Group {
    name DecimalTimeOffset1
    tile_color 0xafa35dff
    label "random asset\n(based on brighness)"
    note_font "Bitstream Vera Sans Bold"
    xpos -135
    ypos -689
    addUserKnob {20 User}
    addUserKnob {7 decimal l "time offset (decimal)"}
    decimal {{"floor\n(\n  (\n  (  ((((random((shotcount*823)+(seed*212))-0.5)*  ((1-( abs(brighness_flare-0.5) )*2)+1)  )+0.5)*0.5)  * (1-brighness_flare)  )\n\n  +\n\n  (  (((((random((shotcount*823)+(seed*212))-0.5)*  ((1-( abs(brighness_flare-0.5) )*2)+1)  )+0.5)*0.5)+0.5)  * (brighness_flare)  )\n  )\n  *1000\n)\n\n/1000"}}
    addUserKnob {26 ""}
    addUserKnob {26 _1 l "" +STARTLINE T "Chris Fryer | 2020\nupdated by Yorben Otto | 2024"}
   }
    Input {
     inputs 0
     name Input1
     xpos 426
     ypos -793
    }
    TimeOffset {
     time_offset {{(-floor(parent.decimal))*(DecimalTimeOffset1.decimal<0)}}
     time ""
     name TimeOffset1
     selected true
     xpos 426
     ypos -674
    }
    Dot {
     name Dot6
     selected true
     xpos 460
     ypos -635
    }
set N10c254e0 [stack 0]
    Dot {
     name Dot5
     selected true
     xpos 350
     ypos -635
    }
    Dot {
     name Dot7
     selected true
     xpos 350
     ypos -365
    }
push $N10c254e0
    Dot {
     name Dot1
     selected true
     xpos 572
     ypos -635
    }
    TimeBlur {
     divisions 2
     shutter {{(parent.decimal-(floor(parent.decimal)))*2}}
     shutteroffset start
     shuttercustomoffset 0
     name TimeBlur1
     selected true
     xpos 538
     ypos -558
    }
    Dot {
     name Dot2
     selected true
     xpos 572
     ypos -490
    }
push $N10c254e0
    TimeBlur {
     divisions 2
     shutter {{parent.decimal*2}}
     shutteroffset start
     shuttercustomoffset 0
     name TimeBlur8
     selected true
     xpos 426
     ypos -556
    }
    Switch {
     inputs 2
     which {{parent.decimal<0}}
     name Switch1
     selected true
     xpos 426
     ypos -494
    }
    Multiply {
     value {{parent.TimeBlur8.divisions}}
     name Multiply6
     selected true
     xpos 426
     ypos -436
    }
    Merge2 {
     inputs 2
     operation from
     name Merge6
     selected true
     xpos 426
     ypos -369
    }
set N10c675b0 [stack 0]
    Output {
     name Output1
     xpos 426
     ypos -221
    }
push $N10c675b0
push $N10c675b0
    Viewer {
     inputs 2
     frame_range 1-100
     viewerProcess "sRGB (default)"
     name Viewer1
     xpos 675
     ypos -246
    }
   end_group
   NoTimeBlur {
    name NoTimeBlur6
    xpos -135
    ypos -608
   }
   Dot {
    name Dot21
    xpos -101
    ypos -449
   }
set N10d06410 [stack 0]
   Dot {
    name Dot22
    xpos -245
    ypos -449
   }
   Multiply {
    value {{math_matrix.result_y_flash(parent.CTimeOffset7.ref)}}
    name Angle_reveal_top
    label TOP
    xpos -279
    ypos -371
   }
   Transform {
    scale {{0.05+(0.05*(((parent.DecimalTimeOffset1.decimal-0.5)*2)*ScaleVariationFlash))}}
    center {{root.width/2 x1015 2304} {root.height/2}}
    shutteroffset centred
    name random_size_top
    xpos -279
    ypos -136
   }
   Card3D {
    inputs 3
    rot_order ZYX
    translate {0 0 0}
    rotate {90 0 0}
    shutteroffset centred
    name cCard3D5
    tile_color 0x7b1d1dff
    xpos -279
    ypos 153
    addUserKnob {20 User l parent}
    addUserKnob {22 python_button l "set parent" t "select parent node, and press this button to set the selected node as parent" +INVISIBLE T "n = nuke.selectedNode()\['name'].getValue()\nnuke.thisNode()\['string'].setValue(n)" +STARTLINE}
    addUserKnob {1 string l parent +INVISIBLE}
    string null
    addUserKnob {3 ref l "ref frame"}
    ref 1015
   }
   Transform {
    translate {{"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].translate.x(ref)\}]"} {"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].translate.y(ref)\}]"}}
    rotate {{"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].rotate-\[value parent_gun].rotate(ref)\}]"}}
    scale {{"\[if \{\[value parent_gun]==\"null\"\} \{return 1\} \{return 1+(\[value parent_gun].scale-\[value parent_gun].scale(ref))\}]"}}
    center {{"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].center.x(ref)\}]"} {"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].center.y(ref)\}]"}}
    name GUNMatchMove
    label "\n"
    xpos -279
    ypos 247
    addUserKnob {20 User l parent}
    addUserKnob {3 ref}
    ref {{parent.CTimeOffset7.ref}}
   }
   Transform {
    translate {{"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].translate.x-\[value parent_env].translate.x(ref)\}]"} {"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].translate.y-\[value parent_env].translate.y(ref)\}]"}}
    rotate {{"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].rotate-\[value parent_env].rotate(ref)\}]"}}
    scale {{"\[if \{\[value parent_gun]==\"null\"\} \{return 1\} \{return 1+(\[value parent_env].scale-\[value parent_env].scale(ref))\}]"}}
    center {{"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].center.x(ref)\}]"} {"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].center.y(ref)\}]"}}
    motionblur {{(mode==2)*0.2}}
    shutter {{FlashMB*(0.175*0.3)}}
    shutteroffset centred
    name ENVMatchMove
    xpos -279
    ypos 321
    addUserKnob {20 User l parent}
    addUserKnob {3 ref}
    ref {{parent.CTimeOffset7.ref}}
   }
   Transform {
    translate {{"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return -((root.width/2)-(\[value parent_gun].center.x(1)+\[value parent_gun].translate.x(1)))\}]"} {"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return -((root.height/2)-(\[value parent_gun].center.y(1)+\[value parent_gun].translate.y(1)))\}]"}}
    shutteroffset centred
    name Transform_GUNMatchMove1
    label "alignment correction"
    xpos -279
    ypos 408
    addUserKnob {20 User l parent}
    addUserKnob {22 python_button l "set parent" t "select parent node, and press this button to set the selected node as parent" T "n = nuke.selectedNode()\['name'].getValue()\nnuke.thisNode()\['string'].setValue(n)" +STARTLINE}
    addUserKnob {1 string l parent}
    string Transform_MatchMove10
    addUserKnob {3 ref +INVISIBLE}
    ref {{parent.cCard3D_8.ref}}
   }
   Remove {
    operation keep
    channels rgb
    name Remove10
    xpos -279
    ypos 489
   }
push 0
   Switch {
    inputs 2
    which {{parent.Angle_reveal_top.value!=0}}
    name Switch4
    xpos -279
    ypos 670
   }
   Dot {
    name Dot1
    xpos -245
    ypos 717
   }
push 0
push $N10be5e40
push 0
   Input {
    inputs 0
    name Front
    xpos -430
    ypos -1102
    number 1
   }
   TimeOffset {
    time_offset {{"shotnmbr==0 ? 0 : shot\[value shotnmbr]-1"}}
    time ""
    name CTimeOffset8
    xpos -430
    ypos -840
    addUserKnob {20 User}
    addUserKnob {3 shotnmbr l "shot "}
    shotnmbr {{parent.CTimeOffset7.shotnmbr}}
   }
   Group {
    name DecimalTimeOffset
    tile_color 0xafa35dff
    label "random asset\n(based on brighness)"
    note_font "Bitstream Vera Sans Bold"
    xpos -430
    ypos -693
    addUserKnob {20 User}
    addUserKnob {7 decimal l "time offset (decimal)"}
    decimal {{"floor\n(\n  (\n  (  ((((random((shotcount*823)+(seed*212))-0.5)*  ((1-( abs(brighness_flare-0.5) )*2)+1)  )+0.5)*0.5)  * (1-brighness_flare)  )\n\n  +\n\n  (  (((((random((shotcount*823)+(seed*212))-0.5)*  ((1-( abs(brighness_flare-0.5) )*2)+1)  )+0.5)*0.5)+0.5)  * (brighness_flare)  )\n  )\n  *1000\n)\n\n/1000"}}
    addUserKnob {26 ""}
    addUserKnob {26 _1 l "" +STARTLINE T "Chris Fryer | 2020\nupdated by Yorben Otto | 2024"}
   }
    Input {
     inputs 0
     name Input1
     xpos 426
     ypos -793
    }
    TimeOffset {
     time_offset {{(-floor(parent.decimal))*(DecimalTimeOffset.decimal<0)}}
     time ""
     name TimeOffset1
     selected true
     xpos 426
     ypos -674
    }
    Dot {
     name Dot6
     selected true
     xpos 460
     ypos -635
    }
set N10dad5b0 [stack 0]
    Dot {
     name Dot5
     selected true
     xpos 350
     ypos -635
    }
    Dot {
     name Dot7
     selected true
     xpos 350
     ypos -365
    }
push $N10dad5b0
    Dot {
     name Dot1
     selected true
     xpos 572
     ypos -635
    }
    TimeBlur {
     divisions 2
     shutter {{(parent.decimal-(floor(parent.decimal)))*2}}
     shutteroffset start
     shuttercustomoffset 0
     name TimeBlur1
     selected true
     xpos 538
     ypos -558
    }
    Dot {
     name Dot2
     selected true
     xpos 572
     ypos -490
    }
push $N10dad5b0
    TimeBlur {
     divisions 2
     shutter {{parent.decimal*2}}
     shutteroffset start
     shuttercustomoffset 0
     name TimeBlur8
     selected true
     xpos 426
     ypos -556
    }
    Switch {
     inputs 2
     which {{parent.decimal<0}}
     name Switch1
     selected true
     xpos 426
     ypos -494
    }
    Multiply {
     value {{parent.TimeBlur8.divisions}}
     name Multiply6
     selected true
     xpos 426
     ypos -436
    }
    Merge2 {
     inputs 2
     operation from
     name Merge6
     selected true
     xpos 426
     ypos -369
    }
set N10def6a0 [stack 0]
    Output {
     name Output1
     xpos 426
     ypos -221
    }
push $N10def6a0
push $N10def6a0
    Viewer {
     inputs 2
     frame_range 1-100
     viewerProcess "sRGB (default)"
     name Viewer1
     xpos 675
     ypos -246
    }
   end_group
   NoTimeBlur {
    name NoTimeBlur7
    xpos -430
    ypos -617
   }
   Multiply {
    value {{math_matrix.result_x_flash(parent.CTimeOffset7.ref)}}
    name Angle_reveal_front
    label FRONT
    xpos -430
    ypos -375
   }
   Transform {
    scale {{0.05+(0.05*(((parent.DecimalTimeOffset1.decimal-0.5)*2)*ScaleVariationFlash))}}
    center {{root.width/2 x1015 2304} {root.height/2}}
    shutteroffset centred
    name random_size_front
    xpos -430
    ypos -134
   }
   Card3D {
    inputs 3
    rot_order ZYX
    translate {0 0 0}
    rotate {0 90 0}
    shutteroffset centred
    name cCard3D6
    tile_color 0x7b1d1dff
    xpos -430
    ypos 150
    addUserKnob {20 User l parent}
    addUserKnob {22 python_button l "set parent" t "select parent node, and press this button to set the selected node as parent" +INVISIBLE T "n = nuke.selectedNode()\['name'].getValue()\nnuke.thisNode()\['string'].setValue(n)" +STARTLINE}
    addUserKnob {1 string l parent +INVISIBLE}
    string null
    addUserKnob {3 ref l "ref frame"}
    ref 1015
   }
   Transform {
    translate {{"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].translate.x(ref)\}]"} {"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].translate.y(ref)\}]"}}
    rotate {{"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].rotate-\[value parent_gun].rotate(ref)\}]"}}
    scale {{"\[if \{\[value parent_gun]==\"null\"\} \{return 1\} \{return 1+(\[value parent_gun].scale-\[value parent_gun].scale(ref))\}]"}}
    center {{"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].center.x(ref)\}]"} {"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].center.y(ref)\}]"}}
    name GUNMatchMove2
    label "\n"
    xpos -430
    ypos 248
    addUserKnob {20 User l parent}
    addUserKnob {3 ref}
    ref {{parent.CTimeOffset7.ref}}
   }
   Transform {
    translate {{"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].translate.x-\[value parent_env].translate.x(ref)\}]"} {"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].translate.y-\[value parent_env].translate.y(ref)\}]"}}
    rotate {{"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].rotate-\[value parent_env].rotate(ref)\}]"}}
    scale {{"\[if \{\[value parent_gun]==\"null\"\} \{return 1\} \{return 1+(\[value parent_env].scale-\[value parent_env].scale(ref))\}]"}}
    center {{"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].center.x(ref)\}]"} {"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].center.y(ref)\}]"}}
    motionblur {{(mode==2)*0.2}}
    shutter {{FlashMB*(0.175*0.3)}}
    shutteroffset centred
    name ENVMatchMove2
    xpos -430
    ypos 320
    addUserKnob {20 User l parent}
    addUserKnob {3 ref}
    ref {{parent.CTimeOffset7.ref}}
   }
   Transform {
    translate {{"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return -((root.width/2)-(\[value parent_gun].center.x(1)+\[value parent_gun].translate.x(1)))\}]"} {"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return -((root.height/2)-(\[value parent_gun].center.y(1)+\[value parent_gun].translate.y(1)))\}]"}}
    shutteroffset centred
    name Transform_GUNMatchMove2
    label "alignment correction"
    xpos -430
    ypos 407
    addUserKnob {20 User l parent}
    addUserKnob {22 python_button l "set parent" t "select parent node, and press this button to set the selected node as parent" T "n = nuke.selectedNode()\['name'].getValue()\nnuke.thisNode()\['string'].setValue(n)" +STARTLINE}
    addUserKnob {1 string l parent}
    string Transform_MatchMove10
    addUserKnob {3 ref +INVISIBLE}
    ref {{parent.cCard3D_8.ref}}
   }
   Remove {
    operation keep
    channels rgb
    name Remove11
    xpos -430
    ypos 487
   }
push 0
   Switch {
    inputs 2
    which {{parent.Angle_reveal_front.value!=0}}
    name Switch5
    xpos -430
    ypos 675
   }
   Dot {
    name Dot2
    xpos -396
    ypos 749
   }
push $N10d06410
   Multiply {
    value {{math_matrix.result_z_flash(parent.CTimeOffset7.ref)}}
    name Angle_reveal_side
    label SIDE
    xpos -135
    ypos -372
   }
   Transform {
    scale {{0.05+(0.05*(((parent.DecimalTimeOffset1.decimal-0.5)*2)*ScaleVariationFlash))}}
    center {{root.width/2 x1015 2304} {root.height/2}}
    shutteroffset centred
    name random_size_side
    xpos -135
    ypos -136
   }
   Card3D {
    translate {{"\[if \{\[exists  parent.parent.parent.input0]\} \{return \[value \[topnode parent.parent.parent.input0].name].translate.x(ref)\} \{return 0\}]"} {"\[if \{\[exists  parent.parent.parent.input0]\} \{return \[value \[topnode parent.parent.parent.input0].name].translate.y(ref)\} \{return 0\}]"} {"\[if \{\[exists  parent.parent.parent.input0]\} \{return \[value \[topnode parent.parent.parent.input0].name].translate.z(ref)\} \{return -1\}]"}}
    rotate {{"\[if \{\[exists  parent.parent.parent.input0]\} \{return \[value \[topnode parent.parent.parent.input0].name].rotate.x(ref)\} \{return 0\}]"} {"\[if \{\[exists  parent.parent.parent.input0]\} \{return \[value \[topnode parent.parent.parent.input0].name].rotate.y(ref)\} \{return 0\}]"} {"\[if \{\[exists  parent.parent.parent.input0]\} \{return \[value \[topnode parent.parent.parent.input0].name].rotate.z(ref)\} \{return 0\}]"}}
    scaling {{"\[if \{\[exists  parent.parent.parent.input0]\} \{return \[value \[topnode parent.parent.parent.input0].name].scaling.x(ref)\} \{return 1\}]"} {"\[if \{\[exists  parent.parent.parent.input0]\} \{return \[value \[topnode parent.parent.parent.input0].name].scaling.y(ref)\} \{return 1\}]"} {"\[if \{\[exists  parent.parent.parent.input0]\} \{return \[value \[topnode parent.parent.parent.input0].name].scaling.z(ref)\} \{return 1\}]"}}
    uniform_scale {{"\[if \{\[exists  parent.parent.parent.input0]\} \{return (\[value \[topnode parent.parent.parent.input0].name].uniform_scale(ref)*25)\} \{return 25\}]"}}
    shutteroffset centred
    name cCard3D_1
    tile_color 0x7b1d1dff
    label "ref frame: \[value ref]"
    xpos -135
    ypos 147
    addUserKnob {20 User l parent}
    addUserKnob {22 python_button l "set parent" t "select parent node, and press this button to set the selected node as parent" +INVISIBLE T "n = nuke.selectedNode()\['name'].getValue()\nnuke.thisNode()\['string'].setValue(n)" +STARTLINE}
    addUserKnob {1 string l parent +INVISIBLE}
    string null
    addUserKnob {3 id l "id number"}
    id {{parent.CTimeOffset7.shotnmbr}}
    addUserKnob {3 ref l "ref frame"}
    ref {{parent.CTimeOffset7.time_offset}}
   }
   Transform {
    translate {{"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].translate.x(ref)\}]"} {"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].translate.y(ref)\}]"}}
    rotate {{"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].rotate-\[value parent_gun].rotate(ref)\}]"}}
    scale {{"\[if \{\[value parent_gun]==\"null\"\} \{return 1\} \{return 1+(\[value parent_gun].scale-\[value parent_gun].scale(ref))\}]"}}
    center {{"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].center.x(ref)\}]"} {"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].center.y(ref)\}]"}}
    name GUNMatchMove1
    label "\n"
    xpos -135
    ypos 241
    addUserKnob {20 User l parent}
    addUserKnob {3 ref}
    ref {{parent.CTimeOffset7.ref}}
   }
   Transform {
    translate {{"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].translate.x-\[value parent_env].translate.x(ref)\}]"} {"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].translate.y-\[value parent_env].translate.y(ref)\}]"}}
    rotate {{"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].rotate-\[value parent_env].rotate(ref)\}]"}}
    scale {{"\[if \{\[value parent_gun]==\"null\"\} \{return 1\} \{return 1+(\[value parent_env].scale-\[value parent_env].scale(ref))\}]"}}
    center {{"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].center.x(ref)\}]"} {"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].center.y(ref)\}]"}}
    motionblur {{(mode==2)*0.2}}
    shutter {{FlashMB*(0.175*0.3)}}
    shutteroffset centred
    name ENVMatchMove1
    xpos -135
    ypos 317
    addUserKnob {20 User l parent}
    addUserKnob {3 ref}
    ref {{parent.CTimeOffset7.ref}}
   }
   Transform {
    translate {{"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return -((root.width/2)-(\[value parent_gun].center.x(1)+\[value parent_gun].translate.x(1)))\}]"} {"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return -((root.height/2)-(\[value parent_gun].center.y(1)+\[value parent_gun].translate.y(1)))\}]"}}
    shutteroffset centred
    name Transform_GUNMatchMove3
    label "alignment correction"
    xpos -135
    ypos 405
    addUserKnob {20 User l parent}
    addUserKnob {22 python_button l "set parent" t "select parent node, and press this button to set the selected node as parent" T "n = nuke.selectedNode()\['name'].getValue()\nnuke.thisNode()\['string'].setValue(n)" +STARTLINE}
    addUserKnob {1 string l parent}
    string Transform_MatchMove10
    addUserKnob {3 ref +INVISIBLE}
    ref {{parent.cCard3D_8.ref}}
   }
   Remove {
    operation keep
    channels rgb
    name Remove12
    xpos -135
    ypos 489
   }
push 0
   Switch {
    inputs 2
    which {{parent.Angle_reveal_side.value!=0}}
    name Switch6
    xpos -135
    ypos 676
   }
   Merge2 {
    inputs 3+1
    operation max
    name Merge1
    xpos -135
    ypos 745
   }
   Merge2 {
    inputs 2
    operation plus
    bbox intersection
    name Merge6
    xpos -135
    ypos 1196
   }
push 0
   Switch {
    inputs 2
    which {{"shot\[value count]==0?0:(EnableExtraFrames==1?floor(((frame>=shot\[value count])+(frame<=(shot\[value count]+(4*((mode==1)+(mode==2))))))/2):frame==shot\[value count])"}}
    name cSwitch_3
    xpos -135
    ypos 1359
    addUserKnob {20 User}
    addUserKnob {3 count l "shot number"}
    count {{parent.CTimeOffset7.shotnmbr}}
    addUserKnob {6 shot +STARTLINE}
    shot {{frame==(parent.CTimeOffset7.time_offset+1)}}
   }
   Output {
    name Output1
    xpos -135
    ypos 1861
   }
  end_group
push $N1042ff50
push $N1079daf0
  Group {
   inputs 2
   name gunshot9
   label "shot: \[value shotcount]\non frame: \[value shotstart]\n"
   xpos 9616
   ypos -812
   addUserKnob {20 User}
   addUserKnob {3 shotcount l shot}
   shotcount 9
   addUserKnob {3 shotstart l frame +INVISIBLE}
   shotstart {{"shotcount==0 ? 0 : shot\[value shotcount]-1"}}
  }
   BackdropNode {
    inputs 0
    name BackdropNode3
    knobChanged "try:\n    listenedKnobs = \['text', 'position', 'name']\n    node = nuke.thisNode()\n    name = node.knob('name').value()\n    text = node.knob('text').value()\n    position = node.knob('position').value()\n    position = \"<\" + position + \">\"\n    label = node.knob('label').value()\n    \n    if nuke.thisKnob().name() in listenedKnobs:\n        if text == \"\":\n            if node.knob('position').value() == \"left\":\n                node.knob('label').setValue()\n            else:\n                node.knob('label').setValue(position + name)\n        else:\n            if node.knob('position').value() == \"left\":\n                node.knob('label').setValue(text)\n            else:\n                node.knob('label').setValue(position + text)\n                \n    elif nuke.thisKnob().name() == 'font_size':\n        fontSize = node.knob('font_size').value()\n        node.knob('note_font_size').setValue(fontSize)\nexcept:\n    pass"
    tile_color 0x232323ff
    label "<Left><h2> Gunshot"
    note_font_size 31.5
    xpos -698
    ypos -924
    bdwidth 1057
    bdheight 2343
    addUserKnob {20 F_VFX l BackdropNode}
    addUserKnob {43 text l Text}
    text "<h2> Gunshot"
    addUserKnob {7 font_size l "Font Size" R 10 100}
    font_size 31.5
    addUserKnob {4 position l "" -STARTLINE M {Left Center}}
    addUserKnob {26 S01 l " " T " "}
    addUserKnob {22 grow l " <img src=\"F_scalep.png\">" -STARTLINE T "n=nuke.thisNode()\n\ndef grow(node=None,step=50):\n    try:\n        if not node:\n            n=nuke.selectedNode()\n        else:\n            n=node\n            n\['xpos'].setValue(n\['xpos'].getValue()-step)\n            n\['ypos'].setValue(n\['ypos'].getValue()-step)\n            n\['bdwidth'].setValue(n\['bdwidth'].getValue()+step*2)\n            n\['bdheight'].setValue(n\['bdheight'].getValue()+step*2)\n    except:\n        pass\ngrow(n,50)"}
    addUserKnob {22 shrink l " <img src=\"F_scalem.png\">" -STARTLINE T "n=nuke.thisNode()\n\ndef shrink(node=None,step=50):\n    try:\n        if not node:\n            n=nuke.selectedNode()\n        else:\n            n=node\n            n\['xpos'].setValue(n\['xpos'].getValue()+step)\n            n\['ypos'].setValue(n\['ypos'].getValue()+step)\n            n\['bdwidth'].setValue(n\['bdwidth'].getValue()-step*2)\n            n\['bdheight'].setValue(n\['bdheight'].getValue()-step*2)\n    except:\n        pass\nshrink(n,50)"}
    addUserKnob {22 colorandom l " <img src=\"ColorBars.png\">" -STARTLINE T "import colorsys, random\nn=nuke.thisNode()\nR,G,B= colorsys.hsv_to_rgb(random.random(),.1+random.random()*.15,.15+random.random()*.15)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ) )"}
    addUserKnob {22 darkgrey l "<font color=\"#232323\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.0, 0.0, 0.14]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 lightgrey l "<font color=\"#383838\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.0, 0.0, 0.22]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 red l "<font color=\"#8c3838\" size=6>■</font>" T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.0, 0.6, 0.55]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n" +STARTLINE}
    addUserKnob {22 orange l "<font color=\"#b28e59\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.1, 0.5, 0.7]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 yellow l "<font color=\"#ccc766\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.16, 0.5, 0.8]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 green l "<font color=\"#5d995b\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.33, 0.4, 0.6]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 cyan l "<font color=\"#72998f\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.46, 0.25, 0.6]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 blue l "<font color=\"#59687f\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.6, 0.3, 0.5]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 darkblue l "<font color=\"#63628c\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.67, 0.3, 0.55]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 magenta l "<font color=\"#927a99\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.8, 0.2, 0.6]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 pink l "<font color=\"#997a89\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.92, 0.2, 0.6]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {26 S02 l " " T " "}
    addUserKnob {26 Ftools l "" +STARTLINE T "<font color=\"#1C1C1C\"> v1.2 - Franklin VFX - 2018"}
   }
   BackdropNode {
    inputs 0
    name BackdropNode1
    knobChanged "try:\n    listenedKnobs = \['text', 'position', 'name']\n    node = nuke.thisNode()\n    name = node.knob('name').value()\n    text = node.knob('text').value()\n    position = node.knob('position').value()\n    position = \"<\" + position + \">\"\n    label = node.knob('label').value()\n    \n    if nuke.thisKnob().name() in listenedKnobs:\n        if text == \"\":\n            if node.knob('position').value() == \"left\":\n                node.knob('label').setValue()\n            else:\n                node.knob('label').setValue(position + name)\n        else:\n            if node.knob('position').value() == \"left\":\n                node.knob('label').setValue(text)\n            else:\n                node.knob('label').setValue(position + text)\n                \n    elif nuke.thisKnob().name() == 'font_size':\n        fontSize = node.knob('font_size').value()\n        node.knob('note_font_size').setValue(fontSize)\nexcept:\n    pass"
    tile_color 0x927a99ff
    note_font_size 50
    xpos -460
    ypos -257
    bdwidth 435
    bdheight 786
    z_order 1
    addUserKnob {20 F_VFX l BackdropNode}
    addUserKnob {43 text l Text}
    addUserKnob {7 font_size l "Font Size" R 10 100}
    font_size 50
    addUserKnob {4 position l "" -STARTLINE M {Left Center}}
    addUserKnob {26 S01 l " " T " "}
    addUserKnob {22 grow l " <img src=\"F_scalep.png\">" -STARTLINE T "n=nuke.thisNode()\n\ndef grow(node=None,step=50):\n    try:\n        if not node:\n            n=nuke.selectedNode()\n        else:\n            n=node\n            n\['xpos'].setValue(n\['xpos'].getValue()-step)\n            n\['ypos'].setValue(n\['ypos'].getValue()-step)\n            n\['bdwidth'].setValue(n\['bdwidth'].getValue()+step*2)\n            n\['bdheight'].setValue(n\['bdheight'].getValue()+step*2)\n    except:\n        pass\ngrow(n,50)"}
    addUserKnob {22 shrink l " <img src=\"F_scalem.png\">" -STARTLINE T "n=nuke.thisNode()\n\ndef shrink(node=None,step=50):\n    try:\n        if not node:\n            n=nuke.selectedNode()\n        else:\n            n=node\n            n\['xpos'].setValue(n\['xpos'].getValue()+step)\n            n\['ypos'].setValue(n\['ypos'].getValue()+step)\n            n\['bdwidth'].setValue(n\['bdwidth'].getValue()-step*2)\n            n\['bdheight'].setValue(n\['bdheight'].getValue()-step*2)\n    except:\n        pass\nshrink(n,50)"}
    addUserKnob {22 colorandom l " <img src=\"ColorBars.png\">" -STARTLINE T "import colorsys, random\nn=nuke.thisNode()\nR,G,B= colorsys.hsv_to_rgb(random.random(),.1+random.random()*.15,.15+random.random()*.15)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ) )"}
    addUserKnob {22 darkgrey l "<font color=\"#232323\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.0, 0.0, 0.14]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 lightgrey l "<font color=\"#383838\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.0, 0.0, 0.22]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 red l "<font color=\"#8c3838\" size=6>■</font>" T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.0, 0.6, 0.55]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n" +STARTLINE}
    addUserKnob {22 orange l "<font color=\"#b28e59\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.1, 0.5, 0.7]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 yellow l "<font color=\"#ccc766\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.16, 0.5, 0.8]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 green l "<font color=\"#5d995b\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.33, 0.4, 0.6]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 cyan l "<font color=\"#72998f\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.46, 0.25, 0.6]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 blue l "<font color=\"#59687f\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.6, 0.3, 0.5]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 darkblue l "<font color=\"#63628c\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.67, 0.3, 0.55]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 magenta l "<font color=\"#927a99\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.8, 0.2, 0.6]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 pink l "<font color=\"#997a89\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.92, 0.2, 0.6]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {26 S02 l " " T " "}
    addUserKnob {26 Ftools l "" +STARTLINE T "<font color=\"#1C1C1C\"> v1.2 - Franklin VFX - 2018"}
   }
   Constant {
    inputs 0
    channels rgb
    name Constant4
    xpos -648
    ypos 987
   }
   AdjBBox {
    numpixels {{size_bbox}}
    name AdjBBox4
    xpos -648
    ypos 1120
   }
   Dot {
    name Dot19
    xpos -614
    ypos 1200
   }
   Axis3 {
    inputs 0
    useMatrix true
    matrix {
        {{parent.cCard3D_1.matrix} {parent.cCard3D_1.matrix} {parent.cCard3D_1.matrix} {parent.cCard3D_1.matrix}}
        {{parent.cCard3D_1.matrix} {parent.cCard3D_1.matrix} {parent.cCard3D_1.matrix} {parent.cCard3D_1.matrix}}
        {{parent.cCard3D_1.matrix} {parent.cCard3D_1.matrix} {parent.cCard3D_1.matrix} {parent.cCard3D_1.matrix}}
        {{parent.cCard3D_1.matrix} {parent.cCard3D_1.matrix} {parent.cCard3D_1.matrix} {parent.cCard3D_1.matrix}}
      }
    name Axis3
    xpos -207
    ypos 48
   }
set N10fdc850 [stack 0]
push 0
   Input {
    inputs 0
    name Side
    xpos -135
    ypos -1101
   }
   TimeOffset {
    time_offset {{"shotnmbr==0 ? 0 : shot\[value shotnmbr]-1"}}
    time ""
    name CTimeOffset7
    label "shot: \[value shotnmbr]\non frame \[value time_offset]"
    xpos -135
    ypos -852
    addUserKnob {20 User}
    addUserKnob {3 shotnmbr l "shot "}
    shotnmbr {{shotcount}}
    addUserKnob {3 ref}
    ref {{time_offset+1}}
   }
   Group {
    name DecimalTimeOffset1
    tile_color 0xafa35dff
    label "random asset\n(based on brighness)"
    note_font "Bitstream Vera Sans Bold"
    xpos -135
    ypos -689
    addUserKnob {20 User}
    addUserKnob {7 decimal l "time offset (decimal)"}
    decimal {{"floor\n(\n  (\n  (  ((((random((shotcount*823)+(seed*212))-0.5)*  ((1-( abs(brighness_flare-0.5) )*2)+1)  )+0.5)*0.5)  * (1-brighness_flare)  )\n\n  +\n\n  (  (((((random((shotcount*823)+(seed*212))-0.5)*  ((1-( abs(brighness_flare-0.5) )*2)+1)  )+0.5)*0.5)+0.5)  * (brighness_flare)  )\n  )\n  *1000\n)\n\n/1000"}}
    addUserKnob {26 ""}
    addUserKnob {26 _1 l "" +STARTLINE T "Chris Fryer | 2020\nupdated by Yorben Otto | 2024"}
   }
    Input {
     inputs 0
     name Input1
     xpos 426
     ypos -793
    }
    TimeOffset {
     time_offset {{(-floor(parent.decimal))*(DecimalTimeOffset1.decimal<0)}}
     time ""
     name TimeOffset1
     selected true
     xpos 426
     ypos -674
    }
    Dot {
     name Dot6
     selected true
     xpos 460
     ypos -635
    }
set N1101bee0 [stack 0]
    Dot {
     name Dot5
     selected true
     xpos 350
     ypos -635
    }
    Dot {
     name Dot7
     selected true
     xpos 350
     ypos -365
    }
push $N1101bee0
    Dot {
     name Dot1
     selected true
     xpos 572
     ypos -635
    }
    TimeBlur {
     divisions 2
     shutter {{(parent.decimal-(floor(parent.decimal)))*2}}
     shutteroffset start
     shuttercustomoffset 0
     name TimeBlur1
     selected true
     xpos 538
     ypos -558
    }
    Dot {
     name Dot2
     selected true
     xpos 572
     ypos -490
    }
push $N1101bee0
    TimeBlur {
     divisions 2
     shutter {{parent.decimal*2}}
     shutteroffset start
     shuttercustomoffset 0
     name TimeBlur8
     selected true
     xpos 426
     ypos -556
    }
    Switch {
     inputs 2
     which {{parent.decimal<0}}
     name Switch1
     selected true
     xpos 426
     ypos -494
    }
    Multiply {
     value {{parent.TimeBlur8.divisions}}
     name Multiply6
     selected true
     xpos 426
     ypos -436
    }
    Merge2 {
     inputs 2
     operation from
     name Merge6
     selected true
     xpos 426
     ypos -369
    }
set N1105dfa0 [stack 0]
    Output {
     name Output1
     xpos 426
     ypos -221
    }
push $N1105dfa0
push $N1105dfa0
    Viewer {
     inputs 2
     frame_range 1-100
     viewerProcess "sRGB (default)"
     name Viewer1
     xpos 675
     ypos -246
    }
   end_group
   NoTimeBlur {
    name NoTimeBlur6
    xpos -135
    ypos -608
   }
   Dot {
    name Dot21
    xpos -101
    ypos -449
   }
set N110fcdf0 [stack 0]
   Dot {
    name Dot22
    xpos -245
    ypos -449
   }
   Multiply {
    value {{math_matrix.result_y_flash(parent.CTimeOffset7.ref)}}
    name Angle_reveal_top
    label TOP
    xpos -279
    ypos -371
   }
   Transform {
    scale {{0.05+(0.05*(((parent.DecimalTimeOffset1.decimal-0.5)*2)*ScaleVariationFlash))}}
    center {{root.width/2 x1015 2304} {root.height/2}}
    shutteroffset centred
    name random_size_top
    xpos -279
    ypos -136
   }
   Card3D {
    inputs 3
    rot_order ZYX
    translate {0 0 0}
    rotate {90 0 0}
    shutteroffset centred
    name cCard3D5
    tile_color 0x7b1d1dff
    xpos -279
    ypos 153
    addUserKnob {20 User l parent}
    addUserKnob {22 python_button l "set parent" t "select parent node, and press this button to set the selected node as parent" +INVISIBLE T "n = nuke.selectedNode()\['name'].getValue()\nnuke.thisNode()\['string'].setValue(n)" +STARTLINE}
    addUserKnob {1 string l parent +INVISIBLE}
    string null
    addUserKnob {3 ref l "ref frame"}
    ref 1015
   }
   Transform {
    translate {{"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].translate.x(ref)\}]"} {"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].translate.y(ref)\}]"}}
    rotate {{"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].rotate-\[value parent_gun].rotate(ref)\}]"}}
    scale {{"\[if \{\[value parent_gun]==\"null\"\} \{return 1\} \{return 1+(\[value parent_gun].scale-\[value parent_gun].scale(ref))\}]"}}
    center {{"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].center.x(ref)\}]"} {"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].center.y(ref)\}]"}}
    name GUNMatchMove
    label "\n"
    xpos -279
    ypos 247
    addUserKnob {20 User l parent}
    addUserKnob {3 ref}
    ref {{parent.CTimeOffset7.ref}}
   }
   Transform {
    translate {{"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].translate.x-\[value parent_env].translate.x(ref)\}]"} {"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].translate.y-\[value parent_env].translate.y(ref)\}]"}}
    rotate {{"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].rotate-\[value parent_env].rotate(ref)\}]"}}
    scale {{"\[if \{\[value parent_gun]==\"null\"\} \{return 1\} \{return 1+(\[value parent_env].scale-\[value parent_env].scale(ref))\}]"}}
    center {{"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].center.x(ref)\}]"} {"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].center.y(ref)\}]"}}
    motionblur {{(mode==2)*0.2}}
    shutter {{FlashMB*(0.175*0.3)}}
    shutteroffset centred
    name ENVMatchMove
    xpos -279
    ypos 321
    addUserKnob {20 User l parent}
    addUserKnob {3 ref}
    ref {{parent.CTimeOffset7.ref}}
   }
   Transform {
    translate {{"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return -((root.width/2)-(\[value parent_gun].center.x(1)+\[value parent_gun].translate.x(1)))\}]"} {"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return -((root.height/2)-(\[value parent_gun].center.y(1)+\[value parent_gun].translate.y(1)))\}]"}}
    shutteroffset centred
    name Transform_GUNMatchMove1
    label "alignment correction"
    xpos -279
    ypos 408
    addUserKnob {20 User l parent}
    addUserKnob {22 python_button l "set parent" t "select parent node, and press this button to set the selected node as parent" T "n = nuke.selectedNode()\['name'].getValue()\nnuke.thisNode()\['string'].setValue(n)" +STARTLINE}
    addUserKnob {1 string l parent}
    string Transform_MatchMove10
    addUserKnob {3 ref +INVISIBLE}
    ref {{parent.cCard3D_8.ref}}
   }
   Remove {
    operation keep
    channels rgb
    name Remove10
    xpos -279
    ypos 489
   }
push 0
   Switch {
    inputs 2
    which {{parent.Angle_reveal_top.value!=0}}
    name Switch4
    xpos -279
    ypos 670
   }
   Dot {
    name Dot1
    xpos -245
    ypos 717
   }
push 0
push $N10fdc850
push 0
   Input {
    inputs 0
    name Front
    xpos -430
    ypos -1102
    number 1
   }
   TimeOffset {
    time_offset {{"shotnmbr==0 ? 0 : shot\[value shotnmbr]-1"}}
    time ""
    name CTimeOffset8
    xpos -430
    ypos -840
    addUserKnob {20 User}
    addUserKnob {3 shotnmbr l "shot "}
    shotnmbr {{parent.CTimeOffset7.shotnmbr}}
   }
   Group {
    name DecimalTimeOffset
    tile_color 0xafa35dff
    label "random asset\n(based on brighness)"
    note_font "Bitstream Vera Sans Bold"
    xpos -430
    ypos -693
    addUserKnob {20 User}
    addUserKnob {7 decimal l "time offset (decimal)"}
    decimal {{"floor\n(\n  (\n  (  ((((random((shotcount*823)+(seed*212))-0.5)*  ((1-( abs(brighness_flare-0.5) )*2)+1)  )+0.5)*0.5)  * (1-brighness_flare)  )\n\n  +\n\n  (  (((((random((shotcount*823)+(seed*212))-0.5)*  ((1-( abs(brighness_flare-0.5) )*2)+1)  )+0.5)*0.5)+0.5)  * (brighness_flare)  )\n  )\n  *1000\n)\n\n/1000"}}
    addUserKnob {26 ""}
    addUserKnob {26 _1 l "" +STARTLINE T "Chris Fryer | 2020\nupdated by Yorben Otto | 2024"}
   }
    Input {
     inputs 0
     name Input1
     xpos 426
     ypos -793
    }
    TimeOffset {
     time_offset {{(-floor(parent.decimal))*(DecimalTimeOffset.decimal<0)}}
     time ""
     name TimeOffset1
     selected true
     xpos 426
     ypos -674
    }
    Dot {
     name Dot6
     selected true
     xpos 460
     ypos -635
    }
set N111a3f60 [stack 0]
    Dot {
     name Dot5
     selected true
     xpos 350
     ypos -635
    }
    Dot {
     name Dot7
     selected true
     xpos 350
     ypos -365
    }
push $N111a3f60
    Dot {
     name Dot1
     selected true
     xpos 572
     ypos -635
    }
    TimeBlur {
     divisions 2
     shutter {{(parent.decimal-(floor(parent.decimal)))*2}}
     shutteroffset start
     shuttercustomoffset 0
     name TimeBlur1
     selected true
     xpos 538
     ypos -558
    }
    Dot {
     name Dot2
     selected true
     xpos 572
     ypos -490
    }
push $N111a3f60
    TimeBlur {
     divisions 2
     shutter {{parent.decimal*2}}
     shutteroffset start
     shuttercustomoffset 0
     name TimeBlur8
     selected true
     xpos 426
     ypos -556
    }
    Switch {
     inputs 2
     which {{parent.decimal<0}}
     name Switch1
     selected true
     xpos 426
     ypos -494
    }
    Multiply {
     value {{parent.TimeBlur8.divisions}}
     name Multiply6
     selected true
     xpos 426
     ypos -436
    }
    Merge2 {
     inputs 2
     operation from
     name Merge6
     selected true
     xpos 426
     ypos -369
    }
set N111e6030 [stack 0]
    Output {
     name Output1
     xpos 426
     ypos -221
    }
push $N111e6030
push $N111e6030
    Viewer {
     inputs 2
     frame_range 1-100
     viewerProcess "sRGB (default)"
     name Viewer1
     xpos 675
     ypos -246
    }
   end_group
   NoTimeBlur {
    name NoTimeBlur7
    xpos -430
    ypos -617
   }
   Multiply {
    value {{math_matrix.result_x_flash(parent.CTimeOffset7.ref)}}
    name Angle_reveal_front
    label FRONT
    xpos -430
    ypos -375
   }
   Transform {
    scale {{0.05+(0.05*(((parent.DecimalTimeOffset1.decimal-0.5)*2)*ScaleVariationFlash))}}
    center {{root.width/2 x1015 2304} {root.height/2}}
    shutteroffset centred
    name random_size_front
    xpos -430
    ypos -134
   }
   Card3D {
    inputs 3
    rot_order ZYX
    translate {0 0 0}
    rotate {0 90 0}
    shutteroffset centred
    name cCard3D6
    tile_color 0x7b1d1dff
    xpos -430
    ypos 150
    addUserKnob {20 User l parent}
    addUserKnob {22 python_button l "set parent" t "select parent node, and press this button to set the selected node as parent" +INVISIBLE T "n = nuke.selectedNode()\['name'].getValue()\nnuke.thisNode()\['string'].setValue(n)" +STARTLINE}
    addUserKnob {1 string l parent +INVISIBLE}
    string null
    addUserKnob {3 ref l "ref frame"}
    ref 1015
   }
   Transform {
    translate {{"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].translate.x(ref)\}]"} {"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].translate.y(ref)\}]"}}
    rotate {{"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].rotate-\[value parent_gun].rotate(ref)\}]"}}
    scale {{"\[if \{\[value parent_gun]==\"null\"\} \{return 1\} \{return 1+(\[value parent_gun].scale-\[value parent_gun].scale(ref))\}]"}}
    center {{"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].center.x(ref)\}]"} {"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].center.y(ref)\}]"}}
    name GUNMatchMove2
    label "\n"
    xpos -430
    ypos 248
    addUserKnob {20 User l parent}
    addUserKnob {3 ref}
    ref {{parent.CTimeOffset7.ref}}
   }
   Transform {
    translate {{"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].translate.x-\[value parent_env].translate.x(ref)\}]"} {"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].translate.y-\[value parent_env].translate.y(ref)\}]"}}
    rotate {{"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].rotate-\[value parent_env].rotate(ref)\}]"}}
    scale {{"\[if \{\[value parent_gun]==\"null\"\} \{return 1\} \{return 1+(\[value parent_env].scale-\[value parent_env].scale(ref))\}]"}}
    center {{"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].center.x(ref)\}]"} {"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].center.y(ref)\}]"}}
    motionblur {{(mode==2)*0.2}}
    shutter {{FlashMB*(0.175*0.3)}}
    shutteroffset centred
    name ENVMatchMove2
    xpos -430
    ypos 320
    addUserKnob {20 User l parent}
    addUserKnob {3 ref}
    ref {{parent.CTimeOffset7.ref}}
   }
   Transform {
    translate {{"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return -((root.width/2)-(\[value parent_gun].center.x(1)+\[value parent_gun].translate.x(1)))\}]"} {"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return -((root.height/2)-(\[value parent_gun].center.y(1)+\[value parent_gun].translate.y(1)))\}]"}}
    shutteroffset centred
    name Transform_GUNMatchMove2
    label "alignment correction"
    xpos -430
    ypos 407
    addUserKnob {20 User l parent}
    addUserKnob {22 python_button l "set parent" t "select parent node, and press this button to set the selected node as parent" T "n = nuke.selectedNode()\['name'].getValue()\nnuke.thisNode()\['string'].setValue(n)" +STARTLINE}
    addUserKnob {1 string l parent}
    string Transform_MatchMove10
    addUserKnob {3 ref +INVISIBLE}
    ref {{parent.cCard3D_8.ref}}
   }
   Remove {
    operation keep
    channels rgb
    name Remove11
    xpos -430
    ypos 487
   }
push 0
   Switch {
    inputs 2
    which {{parent.Angle_reveal_front.value!=0}}
    name Switch5
    xpos -430
    ypos 675
   }
   Dot {
    name Dot2
    xpos -396
    ypos 749
   }
push $N110fcdf0
   Multiply {
    value {{math_matrix.result_z_flash(parent.CTimeOffset7.ref)}}
    name Angle_reveal_side
    label SIDE
    xpos -135
    ypos -372
   }
   Transform {
    scale {{0.05+(0.05*(((parent.DecimalTimeOffset1.decimal-0.5)*2)*ScaleVariationFlash))}}
    center {{root.width/2 x1015 2304} {root.height/2}}
    shutteroffset centred
    name random_size_side
    xpos -135
    ypos -136
   }
   Card3D {
    translate {{"\[if \{\[exists  parent.parent.parent.input0]\} \{return \[value \[topnode parent.parent.parent.input0].name].translate.x(ref)\} \{return 0\}]"} {"\[if \{\[exists  parent.parent.parent.input0]\} \{return \[value \[topnode parent.parent.parent.input0].name].translate.y(ref)\} \{return 0\}]"} {"\[if \{\[exists  parent.parent.parent.input0]\} \{return \[value \[topnode parent.parent.parent.input0].name].translate.z(ref)\} \{return -1\}]"}}
    rotate {{"\[if \{\[exists  parent.parent.parent.input0]\} \{return \[value \[topnode parent.parent.parent.input0].name].rotate.x(ref)\} \{return 0\}]"} {"\[if \{\[exists  parent.parent.parent.input0]\} \{return \[value \[topnode parent.parent.parent.input0].name].rotate.y(ref)\} \{return 0\}]"} {"\[if \{\[exists  parent.parent.parent.input0]\} \{return \[value \[topnode parent.parent.parent.input0].name].rotate.z(ref)\} \{return 0\}]"}}
    scaling {{"\[if \{\[exists  parent.parent.parent.input0]\} \{return \[value \[topnode parent.parent.parent.input0].name].scaling.x(ref)\} \{return 1\}]"} {"\[if \{\[exists  parent.parent.parent.input0]\} \{return \[value \[topnode parent.parent.parent.input0].name].scaling.y(ref)\} \{return 1\}]"} {"\[if \{\[exists  parent.parent.parent.input0]\} \{return \[value \[topnode parent.parent.parent.input0].name].scaling.z(ref)\} \{return 1\}]"}}
    uniform_scale {{"\[if \{\[exists  parent.parent.parent.input0]\} \{return (\[value \[topnode parent.parent.parent.input0].name].uniform_scale(ref)*25)\} \{return 25\}]"}}
    shutteroffset centred
    name cCard3D_1
    tile_color 0x7b1d1dff
    label "ref frame: \[value ref]"
    xpos -135
    ypos 147
    addUserKnob {20 User l parent}
    addUserKnob {22 python_button l "set parent" t "select parent node, and press this button to set the selected node as parent" +INVISIBLE T "n = nuke.selectedNode()\['name'].getValue()\nnuke.thisNode()\['string'].setValue(n)" +STARTLINE}
    addUserKnob {1 string l parent +INVISIBLE}
    string null
    addUserKnob {3 id l "id number"}
    id {{parent.CTimeOffset7.shotnmbr}}
    addUserKnob {3 ref l "ref frame"}
    ref {{parent.CTimeOffset7.time_offset}}
   }
   Transform {
    translate {{"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].translate.x(ref)\}]"} {"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].translate.y(ref)\}]"}}
    rotate {{"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].rotate-\[value parent_gun].rotate(ref)\}]"}}
    scale {{"\[if \{\[value parent_gun]==\"null\"\} \{return 1\} \{return 1+(\[value parent_gun].scale-\[value parent_gun].scale(ref))\}]"}}
    center {{"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].center.x(ref)\}]"} {"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].center.y(ref)\}]"}}
    name GUNMatchMove1
    label "\n"
    xpos -135
    ypos 241
    addUserKnob {20 User l parent}
    addUserKnob {3 ref}
    ref {{parent.CTimeOffset7.ref}}
   }
   Transform {
    translate {{"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].translate.x-\[value parent_env].translate.x(ref)\}]"} {"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].translate.y-\[value parent_env].translate.y(ref)\}]"}}
    rotate {{"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].rotate-\[value parent_env].rotate(ref)\}]"}}
    scale {{"\[if \{\[value parent_gun]==\"null\"\} \{return 1\} \{return 1+(\[value parent_env].scale-\[value parent_env].scale(ref))\}]"}}
    center {{"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].center.x(ref)\}]"} {"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].center.y(ref)\}]"}}
    motionblur {{(mode==2)*0.2}}
    shutter {{FlashMB*(0.175*0.3)}}
    shutteroffset centred
    name ENVMatchMove1
    xpos -135
    ypos 317
    addUserKnob {20 User l parent}
    addUserKnob {3 ref}
    ref {{parent.CTimeOffset7.ref}}
   }
   Transform {
    translate {{"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return -((root.width/2)-(\[value parent_gun].center.x(1)+\[value parent_gun].translate.x(1)))\}]"} {"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return -((root.height/2)-(\[value parent_gun].center.y(1)+\[value parent_gun].translate.y(1)))\}]"}}
    shutteroffset centred
    name Transform_GUNMatchMove3
    label "alignment correction"
    xpos -135
    ypos 405
    addUserKnob {20 User l parent}
    addUserKnob {22 python_button l "set parent" t "select parent node, and press this button to set the selected node as parent" T "n = nuke.selectedNode()\['name'].getValue()\nnuke.thisNode()\['string'].setValue(n)" +STARTLINE}
    addUserKnob {1 string l parent}
    string Transform_MatchMove10
    addUserKnob {3 ref +INVISIBLE}
    ref {{parent.cCard3D_8.ref}}
   }
   Remove {
    operation keep
    channels rgb
    name Remove12
    xpos -135
    ypos 489
   }
push 0
   Switch {
    inputs 2
    which {{parent.Angle_reveal_side.value!=0}}
    name Switch6
    xpos -135
    ypos 676
   }
   Merge2 {
    inputs 3+1
    operation max
    name Merge1
    xpos -135
    ypos 745
   }
   Merge2 {
    inputs 2
    operation plus
    bbox intersection
    name Merge6
    xpos -135
    ypos 1196
   }
push 0
   Switch {
    inputs 2
    which {{"shot\[value count]==0?0:(EnableExtraFrames==1?floor(((frame>=shot\[value count])+(frame<=(shot\[value count]+(4*((mode==1)+(mode==2))))))/2):frame==shot\[value count])"}}
    name cSwitch_3
    xpos -135
    ypos 1359
    addUserKnob {20 User}
    addUserKnob {3 count l "shot number"}
    count {{parent.CTimeOffset7.shotnmbr}}
    addUserKnob {6 shot +STARTLINE}
    shot {{frame==(parent.CTimeOffset7.time_offset+1)}}
   }
   Output {
    name Output1
    xpos -135
    ypos 1861
   }
  end_group
push $N1043a030
push $N107a7c90
  Group {
   inputs 2
   name gunshot11
   label "shot: \[value shotcount]\non frame: \[value shotstart]\n"
   xpos 10055
   ypos -810
   addUserKnob {20 User}
   addUserKnob {3 shotcount l shot}
   shotcount 11
   addUserKnob {3 shotstart l frame +INVISIBLE}
   shotstart {{"shotcount==0 ? 0 : shot\[value shotcount]-1"}}
  }
   BackdropNode {
    inputs 0
    name BackdropNode3
    knobChanged "try:\n    listenedKnobs = \['text', 'position', 'name']\n    node = nuke.thisNode()\n    name = node.knob('name').value()\n    text = node.knob('text').value()\n    position = node.knob('position').value()\n    position = \"<\" + position + \">\"\n    label = node.knob('label').value()\n    \n    if nuke.thisKnob().name() in listenedKnobs:\n        if text == \"\":\n            if node.knob('position').value() == \"left\":\n                node.knob('label').setValue()\n            else:\n                node.knob('label').setValue(position + name)\n        else:\n            if node.knob('position').value() == \"left\":\n                node.knob('label').setValue(text)\n            else:\n                node.knob('label').setValue(position + text)\n                \n    elif nuke.thisKnob().name() == 'font_size':\n        fontSize = node.knob('font_size').value()\n        node.knob('note_font_size').setValue(fontSize)\nexcept:\n    pass"
    tile_color 0x232323ff
    label "<Left><h2> Gunshot"
    note_font_size 31.5
    xpos -698
    ypos -924
    bdwidth 1057
    bdheight 2343
    addUserKnob {20 F_VFX l BackdropNode}
    addUserKnob {43 text l Text}
    text "<h2> Gunshot"
    addUserKnob {7 font_size l "Font Size" R 10 100}
    font_size 31.5
    addUserKnob {4 position l "" -STARTLINE M {Left Center}}
    addUserKnob {26 S01 l " " T " "}
    addUserKnob {22 grow l " <img src=\"F_scalep.png\">" -STARTLINE T "n=nuke.thisNode()\n\ndef grow(node=None,step=50):\n    try:\n        if not node:\n            n=nuke.selectedNode()\n        else:\n            n=node\n            n\['xpos'].setValue(n\['xpos'].getValue()-step)\n            n\['ypos'].setValue(n\['ypos'].getValue()-step)\n            n\['bdwidth'].setValue(n\['bdwidth'].getValue()+step*2)\n            n\['bdheight'].setValue(n\['bdheight'].getValue()+step*2)\n    except:\n        pass\ngrow(n,50)"}
    addUserKnob {22 shrink l " <img src=\"F_scalem.png\">" -STARTLINE T "n=nuke.thisNode()\n\ndef shrink(node=None,step=50):\n    try:\n        if not node:\n            n=nuke.selectedNode()\n        else:\n            n=node\n            n\['xpos'].setValue(n\['xpos'].getValue()+step)\n            n\['ypos'].setValue(n\['ypos'].getValue()+step)\n            n\['bdwidth'].setValue(n\['bdwidth'].getValue()-step*2)\n            n\['bdheight'].setValue(n\['bdheight'].getValue()-step*2)\n    except:\n        pass\nshrink(n,50)"}
    addUserKnob {22 colorandom l " <img src=\"ColorBars.png\">" -STARTLINE T "import colorsys, random\nn=nuke.thisNode()\nR,G,B= colorsys.hsv_to_rgb(random.random(),.1+random.random()*.15,.15+random.random()*.15)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ) )"}
    addUserKnob {22 darkgrey l "<font color=\"#232323\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.0, 0.0, 0.14]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 lightgrey l "<font color=\"#383838\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.0, 0.0, 0.22]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 red l "<font color=\"#8c3838\" size=6>■</font>" T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.0, 0.6, 0.55]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n" +STARTLINE}
    addUserKnob {22 orange l "<font color=\"#b28e59\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.1, 0.5, 0.7]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 yellow l "<font color=\"#ccc766\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.16, 0.5, 0.8]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 green l "<font color=\"#5d995b\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.33, 0.4, 0.6]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 cyan l "<font color=\"#72998f\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.46, 0.25, 0.6]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 blue l "<font color=\"#59687f\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.6, 0.3, 0.5]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 darkblue l "<font color=\"#63628c\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.67, 0.3, 0.55]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 magenta l "<font color=\"#927a99\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.8, 0.2, 0.6]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 pink l "<font color=\"#997a89\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.92, 0.2, 0.6]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {26 S02 l " " T " "}
    addUserKnob {26 Ftools l "" +STARTLINE T "<font color=\"#1C1C1C\"> v1.2 - Franklin VFX - 2018"}
   }
   BackdropNode {
    inputs 0
    name BackdropNode1
    knobChanged "try:\n    listenedKnobs = \['text', 'position', 'name']\n    node = nuke.thisNode()\n    name = node.knob('name').value()\n    text = node.knob('text').value()\n    position = node.knob('position').value()\n    position = \"<\" + position + \">\"\n    label = node.knob('label').value()\n    \n    if nuke.thisKnob().name() in listenedKnobs:\n        if text == \"\":\n            if node.knob('position').value() == \"left\":\n                node.knob('label').setValue()\n            else:\n                node.knob('label').setValue(position + name)\n        else:\n            if node.knob('position').value() == \"left\":\n                node.knob('label').setValue(text)\n            else:\n                node.knob('label').setValue(position + text)\n                \n    elif nuke.thisKnob().name() == 'font_size':\n        fontSize = node.knob('font_size').value()\n        node.knob('note_font_size').setValue(fontSize)\nexcept:\n    pass"
    tile_color 0x927a99ff
    note_font_size 50
    xpos -460
    ypos -257
    bdwidth 435
    bdheight 786
    z_order 1
    addUserKnob {20 F_VFX l BackdropNode}
    addUserKnob {43 text l Text}
    addUserKnob {7 font_size l "Font Size" R 10 100}
    font_size 50
    addUserKnob {4 position l "" -STARTLINE M {Left Center}}
    addUserKnob {26 S01 l " " T " "}
    addUserKnob {22 grow l " <img src=\"F_scalep.png\">" -STARTLINE T "n=nuke.thisNode()\n\ndef grow(node=None,step=50):\n    try:\n        if not node:\n            n=nuke.selectedNode()\n        else:\n            n=node\n            n\['xpos'].setValue(n\['xpos'].getValue()-step)\n            n\['ypos'].setValue(n\['ypos'].getValue()-step)\n            n\['bdwidth'].setValue(n\['bdwidth'].getValue()+step*2)\n            n\['bdheight'].setValue(n\['bdheight'].getValue()+step*2)\n    except:\n        pass\ngrow(n,50)"}
    addUserKnob {22 shrink l " <img src=\"F_scalem.png\">" -STARTLINE T "n=nuke.thisNode()\n\ndef shrink(node=None,step=50):\n    try:\n        if not node:\n            n=nuke.selectedNode()\n        else:\n            n=node\n            n\['xpos'].setValue(n\['xpos'].getValue()+step)\n            n\['ypos'].setValue(n\['ypos'].getValue()+step)\n            n\['bdwidth'].setValue(n\['bdwidth'].getValue()-step*2)\n            n\['bdheight'].setValue(n\['bdheight'].getValue()-step*2)\n    except:\n        pass\nshrink(n,50)"}
    addUserKnob {22 colorandom l " <img src=\"ColorBars.png\">" -STARTLINE T "import colorsys, random\nn=nuke.thisNode()\nR,G,B= colorsys.hsv_to_rgb(random.random(),.1+random.random()*.15,.15+random.random()*.15)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ) )"}
    addUserKnob {22 darkgrey l "<font color=\"#232323\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.0, 0.0, 0.14]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 lightgrey l "<font color=\"#383838\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.0, 0.0, 0.22]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 red l "<font color=\"#8c3838\" size=6>■</font>" T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.0, 0.6, 0.55]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n" +STARTLINE}
    addUserKnob {22 orange l "<font color=\"#b28e59\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.1, 0.5, 0.7]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 yellow l "<font color=\"#ccc766\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.16, 0.5, 0.8]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 green l "<font color=\"#5d995b\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.33, 0.4, 0.6]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 cyan l "<font color=\"#72998f\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.46, 0.25, 0.6]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 blue l "<font color=\"#59687f\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.6, 0.3, 0.5]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 darkblue l "<font color=\"#63628c\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.67, 0.3, 0.55]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 magenta l "<font color=\"#927a99\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.8, 0.2, 0.6]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 pink l "<font color=\"#997a89\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.92, 0.2, 0.6]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {26 S02 l " " T " "}
    addUserKnob {26 Ftools l "" +STARTLINE T "<font color=\"#1C1C1C\"> v1.2 - Franklin VFX - 2018"}
   }
   Constant {
    inputs 0
    channels rgb
    name Constant4
    xpos -648
    ypos 987
   }
   AdjBBox {
    numpixels {{size_bbox}}
    name AdjBBox4
    xpos -648
    ypos 1120
   }
   Dot {
    name Dot19
    xpos -614
    ypos 1200
   }
   Axis3 {
    inputs 0
    useMatrix true
    matrix {
        {{parent.cCard3D_1.matrix} {parent.cCard3D_1.matrix} {parent.cCard3D_1.matrix} {parent.cCard3D_1.matrix}}
        {{parent.cCard3D_1.matrix} {parent.cCard3D_1.matrix} {parent.cCard3D_1.matrix} {parent.cCard3D_1.matrix}}
        {{parent.cCard3D_1.matrix} {parent.cCard3D_1.matrix} {parent.cCard3D_1.matrix} {parent.cCard3D_1.matrix}}
        {{parent.cCard3D_1.matrix} {parent.cCard3D_1.matrix} {parent.cCard3D_1.matrix} {parent.cCard3D_1.matrix}}
      }
    name Axis3
    xpos -207
    ypos 48
   }
set N113d4750 [stack 0]
push 0
   Input {
    inputs 0
    name Side
    xpos -135
    ypos -1101
   }
   TimeOffset {
    time_offset {{"shotnmbr==0 ? 0 : shot\[value shotnmbr]-1"}}
    time ""
    name CTimeOffset7
    label "shot: \[value shotnmbr]\non frame \[value time_offset]"
    xpos -135
    ypos -852
    addUserKnob {20 User}
    addUserKnob {3 shotnmbr l "shot "}
    shotnmbr {{shotcount}}
    addUserKnob {3 ref}
    ref {{time_offset+1}}
   }
   Group {
    name DecimalTimeOffset1
    tile_color 0xafa35dff
    label "random asset\n(based on brighness)"
    note_font "Bitstream Vera Sans Bold"
    xpos -135
    ypos -689
    addUserKnob {20 User}
    addUserKnob {7 decimal l "time offset (decimal)"}
    decimal {{"floor\n(\n  (\n  (  ((((random((shotcount*823)+(seed*212))-0.5)*  ((1-( abs(brighness_flare-0.5) )*2)+1)  )+0.5)*0.5)  * (1-brighness_flare)  )\n\n  +\n\n  (  (((((random((shotcount*823)+(seed*212))-0.5)*  ((1-( abs(brighness_flare-0.5) )*2)+1)  )+0.5)*0.5)+0.5)  * (brighness_flare)  )\n  )\n  *1000\n)\n\n/1000"}}
    addUserKnob {26 ""}
    addUserKnob {26 _1 l "" +STARTLINE T "Chris Fryer | 2020\nupdated by Yorben Otto | 2024"}
   }
    Input {
     inputs 0
     name Input1
     xpos 426
     ypos -793
    }
    TimeOffset {
     time_offset {{(-floor(parent.decimal))*(DecimalTimeOffset1.decimal<0)}}
     time ""
     name TimeOffset1
     selected true
     xpos 426
     ypos -674
    }
    Dot {
     name Dot6
     selected true
     xpos 460
     ypos -635
    }
set N11413db0 [stack 0]
    Dot {
     name Dot5
     selected true
     xpos 350
     ypos -635
    }
    Dot {
     name Dot7
     selected true
     xpos 350
     ypos -365
    }
push $N11413db0
    Dot {
     name Dot1
     selected true
     xpos 572
     ypos -635
    }
    TimeBlur {
     divisions 2
     shutter {{(parent.decimal-(floor(parent.decimal)))*2}}
     shutteroffset start
     shuttercustomoffset 0
     name TimeBlur1
     selected true
     xpos 538
     ypos -558
    }
    Dot {
     name Dot2
     selected true
     xpos 572
     ypos -490
    }
push $N11413db0
    TimeBlur {
     divisions 2
     shutter {{parent.decimal*2}}
     shutteroffset start
     shuttercustomoffset 0
     name TimeBlur8
     selected true
     xpos 426
     ypos -556
    }
    Switch {
     inputs 2
     which {{parent.decimal<0}}
     name Switch1
     selected true
     xpos 426
     ypos -494
    }
    Multiply {
     value {{parent.TimeBlur8.divisions}}
     name Multiply6
     selected true
     xpos 426
     ypos -436
    }
    Merge2 {
     inputs 2
     operation from
     name Merge6
     selected true
     xpos 426
     ypos -369
    }
set N11455e80 [stack 0]
    Output {
     name Output1
     xpos 426
     ypos -221
    }
push $N11455e80
push $N11455e80
    Viewer {
     inputs 2
     frame_range 1-100
     viewerProcess "sRGB (default)"
     name Viewer1
     xpos 675
     ypos -246
    }
   end_group
   NoTimeBlur {
    name NoTimeBlur6
    xpos -135
    ypos -608
   }
   Dot {
    name Dot21
    xpos -101
    ypos -449
   }
set N114f4cc0 [stack 0]
   Dot {
    name Dot22
    xpos -245
    ypos -449
   }
   Multiply {
    value {{math_matrix.result_y_flash(parent.CTimeOffset7.ref)}}
    name Angle_reveal_top
    label TOP
    xpos -279
    ypos -371
   }
   Transform {
    scale {{0.05+(0.05*(((parent.DecimalTimeOffset1.decimal-0.5)*2)*ScaleVariationFlash))}}
    center {{root.width/2 x1015 2304} {root.height/2}}
    shutteroffset centred
    name random_size_top
    xpos -279
    ypos -136
   }
   Card3D {
    inputs 3
    rot_order ZYX
    translate {0 0 0}
    rotate {90 0 0}
    shutteroffset centred
    name cCard3D5
    tile_color 0x7b1d1dff
    xpos -279
    ypos 153
    addUserKnob {20 User l parent}
    addUserKnob {22 python_button l "set parent" t "select parent node, and press this button to set the selected node as parent" +INVISIBLE T "n = nuke.selectedNode()\['name'].getValue()\nnuke.thisNode()\['string'].setValue(n)" +STARTLINE}
    addUserKnob {1 string l parent +INVISIBLE}
    string null
    addUserKnob {3 ref l "ref frame"}
    ref 1015
   }
   Transform {
    translate {{"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].translate.x(ref)\}]"} {"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].translate.y(ref)\}]"}}
    rotate {{"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].rotate-\[value parent_gun].rotate(ref)\}]"}}
    scale {{"\[if \{\[value parent_gun]==\"null\"\} \{return 1\} \{return 1+(\[value parent_gun].scale-\[value parent_gun].scale(ref))\}]"}}
    center {{"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].center.x(ref)\}]"} {"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].center.y(ref)\}]"}}
    name GUNMatchMove
    label "\n"
    xpos -279
    ypos 247
    addUserKnob {20 User l parent}
    addUserKnob {3 ref}
    ref {{parent.CTimeOffset7.ref}}
   }
   Transform {
    translate {{"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].translate.x-\[value parent_env].translate.x(ref)\}]"} {"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].translate.y-\[value parent_env].translate.y(ref)\}]"}}
    rotate {{"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].rotate-\[value parent_env].rotate(ref)\}]"}}
    scale {{"\[if \{\[value parent_gun]==\"null\"\} \{return 1\} \{return 1+(\[value parent_env].scale-\[value parent_env].scale(ref))\}]"}}
    center {{"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].center.x(ref)\}]"} {"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].center.y(ref)\}]"}}
    motionblur {{(mode==2)*0.2}}
    shutter {{FlashMB*(0.175*0.3)}}
    shutteroffset centred
    name ENVMatchMove
    xpos -279
    ypos 321
    addUserKnob {20 User l parent}
    addUserKnob {3 ref}
    ref {{parent.CTimeOffset7.ref}}
   }
   Transform {
    translate {{"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return -((root.width/2)-(\[value parent_gun].center.x(1)+\[value parent_gun].translate.x(1)))\}]"} {"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return -((root.height/2)-(\[value parent_gun].center.y(1)+\[value parent_gun].translate.y(1)))\}]"}}
    shutteroffset centred
    name Transform_GUNMatchMove1
    label "alignment correction"
    xpos -279
    ypos 408
    addUserKnob {20 User l parent}
    addUserKnob {22 python_button l "set parent" t "select parent node, and press this button to set the selected node as parent" T "n = nuke.selectedNode()\['name'].getValue()\nnuke.thisNode()\['string'].setValue(n)" +STARTLINE}
    addUserKnob {1 string l parent}
    string Transform_MatchMove10
    addUserKnob {3 ref +INVISIBLE}
    ref {{parent.cCard3D_8.ref}}
   }
   Remove {
    operation keep
    channels rgb
    name Remove10
    xpos -279
    ypos 489
   }
push 0
   Switch {
    inputs 2
    which {{parent.Angle_reveal_top.value!=0}}
    name Switch4
    xpos -279
    ypos 670
   }
   Dot {
    name Dot1
    xpos -245
    ypos 717
   }
push 0
push $N113d4750
push 0
   Input {
    inputs 0
    name Front
    xpos -430
    ypos -1102
    number 1
   }
   TimeOffset {
    time_offset {{"shotnmbr==0 ? 0 : shot\[value shotnmbr]-1"}}
    time ""
    name CTimeOffset8
    xpos -430
    ypos -840
    addUserKnob {20 User}
    addUserKnob {3 shotnmbr l "shot "}
    shotnmbr {{parent.CTimeOffset7.shotnmbr}}
   }
   Group {
    name DecimalTimeOffset
    tile_color 0xafa35dff
    label "random asset\n(based on brighness)"
    note_font "Bitstream Vera Sans Bold"
    xpos -430
    ypos -693
    addUserKnob {20 User}
    addUserKnob {7 decimal l "time offset (decimal)"}
    decimal {{"floor\n(\n  (\n  (  ((((random((shotcount*823)+(seed*212))-0.5)*  ((1-( abs(brighness_flare-0.5) )*2)+1)  )+0.5)*0.5)  * (1-brighness_flare)  )\n\n  +\n\n  (  (((((random((shotcount*823)+(seed*212))-0.5)*  ((1-( abs(brighness_flare-0.5) )*2)+1)  )+0.5)*0.5)+0.5)  * (brighness_flare)  )\n  )\n  *1000\n)\n\n/1000"}}
    addUserKnob {26 ""}
    addUserKnob {26 _1 l "" +STARTLINE T "Chris Fryer | 2020\nupdated by Yorben Otto | 2024"}
   }
    Input {
     inputs 0
     name Input1
     xpos 426
     ypos -793
    }
    TimeOffset {
     time_offset {{(-floor(parent.decimal))*(DecimalTimeOffset.decimal<0)}}
     time ""
     name TimeOffset1
     selected true
     xpos 426
     ypos -674
    }
    Dot {
     name Dot6
     selected true
     xpos 460
     ypos -635
    }
set N1159be40 [stack 0]
    Dot {
     name Dot5
     selected true
     xpos 350
     ypos -635
    }
    Dot {
     name Dot7
     selected true
     xpos 350
     ypos -365
    }
push $N1159be40
    Dot {
     name Dot1
     selected true
     xpos 572
     ypos -635
    }
    TimeBlur {
     divisions 2
     shutter {{(parent.decimal-(floor(parent.decimal)))*2}}
     shutteroffset start
     shuttercustomoffset 0
     name TimeBlur1
     selected true
     xpos 538
     ypos -558
    }
    Dot {
     name Dot2
     selected true
     xpos 572
     ypos -490
    }
push $N1159be40
    TimeBlur {
     divisions 2
     shutter {{parent.decimal*2}}
     shutteroffset start
     shuttercustomoffset 0
     name TimeBlur8
     selected true
     xpos 426
     ypos -556
    }
    Switch {
     inputs 2
     which {{parent.decimal<0}}
     name Switch1
     selected true
     xpos 426
     ypos -494
    }
    Multiply {
     value {{parent.TimeBlur8.divisions}}
     name Multiply6
     selected true
     xpos 426
     ypos -436
    }
    Merge2 {
     inputs 2
     operation from
     name Merge6
     selected true
     xpos 426
     ypos -369
    }
set N115ddf30 [stack 0]
    Output {
     name Output1
     xpos 426
     ypos -221
    }
push $N115ddf30
push $N115ddf30
    Viewer {
     inputs 2
     frame_range 1-100
     viewerProcess "sRGB (default)"
     name Viewer1
     xpos 675
     ypos -246
    }
   end_group
   NoTimeBlur {
    name NoTimeBlur7
    xpos -430
    ypos -617
   }
   Multiply {
    value {{math_matrix.result_x_flash(parent.CTimeOffset7.ref)}}
    name Angle_reveal_front
    label FRONT
    xpos -430
    ypos -375
   }
   Transform {
    scale {{0.05+(0.05*(((parent.DecimalTimeOffset1.decimal-0.5)*2)*ScaleVariationFlash))}}
    center {{root.width/2 x1015 2304} {root.height/2}}
    shutteroffset centred
    name random_size_front
    xpos -430
    ypos -134
   }
   Card3D {
    inputs 3
    rot_order ZYX
    translate {0 0 0}
    rotate {0 90 0}
    shutteroffset centred
    name cCard3D6
    tile_color 0x7b1d1dff
    xpos -430
    ypos 150
    addUserKnob {20 User l parent}
    addUserKnob {22 python_button l "set parent" t "select parent node, and press this button to set the selected node as parent" +INVISIBLE T "n = nuke.selectedNode()\['name'].getValue()\nnuke.thisNode()\['string'].setValue(n)" +STARTLINE}
    addUserKnob {1 string l parent +INVISIBLE}
    string null
    addUserKnob {3 ref l "ref frame"}
    ref 1015
   }
   Transform {
    translate {{"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].translate.x(ref)\}]"} {"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].translate.y(ref)\}]"}}
    rotate {{"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].rotate-\[value parent_gun].rotate(ref)\}]"}}
    scale {{"\[if \{\[value parent_gun]==\"null\"\} \{return 1\} \{return 1+(\[value parent_gun].scale-\[value parent_gun].scale(ref))\}]"}}
    center {{"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].center.x(ref)\}]"} {"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].center.y(ref)\}]"}}
    name GUNMatchMove2
    label "\n"
    xpos -430
    ypos 248
    addUserKnob {20 User l parent}
    addUserKnob {3 ref}
    ref {{parent.CTimeOffset7.ref}}
   }
   Transform {
    translate {{"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].translate.x-\[value parent_env].translate.x(ref)\}]"} {"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].translate.y-\[value parent_env].translate.y(ref)\}]"}}
    rotate {{"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].rotate-\[value parent_env].rotate(ref)\}]"}}
    scale {{"\[if \{\[value parent_gun]==\"null\"\} \{return 1\} \{return 1+(\[value parent_env].scale-\[value parent_env].scale(ref))\}]"}}
    center {{"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].center.x(ref)\}]"} {"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].center.y(ref)\}]"}}
    motionblur {{(mode==2)*0.2}}
    shutter {{FlashMB*(0.175*0.3)}}
    shutteroffset centred
    name ENVMatchMove2
    xpos -430
    ypos 320
    addUserKnob {20 User l parent}
    addUserKnob {3 ref}
    ref {{parent.CTimeOffset7.ref}}
   }
   Transform {
    translate {{"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return -((root.width/2)-(\[value parent_gun].center.x(1)+\[value parent_gun].translate.x(1)))\}]"} {"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return -((root.height/2)-(\[value parent_gun].center.y(1)+\[value parent_gun].translate.y(1)))\}]"}}
    shutteroffset centred
    name Transform_GUNMatchMove2
    label "alignment correction"
    xpos -430
    ypos 407
    addUserKnob {20 User l parent}
    addUserKnob {22 python_button l "set parent" t "select parent node, and press this button to set the selected node as parent" T "n = nuke.selectedNode()\['name'].getValue()\nnuke.thisNode()\['string'].setValue(n)" +STARTLINE}
    addUserKnob {1 string l parent}
    string Transform_MatchMove10
    addUserKnob {3 ref +INVISIBLE}
    ref {{parent.cCard3D_8.ref}}
   }
   Remove {
    operation keep
    channels rgb
    name Remove11
    xpos -430
    ypos 487
   }
push 0
   Switch {
    inputs 2
    which {{parent.Angle_reveal_front.value!=0}}
    name Switch5
    xpos -430
    ypos 675
   }
   Dot {
    name Dot2
    xpos -396
    ypos 749
   }
push $N114f4cc0
   Multiply {
    value {{math_matrix.result_z_flash(parent.CTimeOffset7.ref)}}
    name Angle_reveal_side
    label SIDE
    xpos -135
    ypos -372
   }
   Transform {
    scale {{0.05+(0.05*(((parent.DecimalTimeOffset1.decimal-0.5)*2)*ScaleVariationFlash))}}
    center {{root.width/2 x1015 2304} {root.height/2}}
    shutteroffset centred
    name random_size_side
    xpos -135
    ypos -136
   }
   Card3D {
    translate {{"\[if \{\[exists  parent.parent.parent.input0]\} \{return \[value \[topnode parent.parent.parent.input0].name].translate.x(ref)\} \{return 0\}]"} {"\[if \{\[exists  parent.parent.parent.input0]\} \{return \[value \[topnode parent.parent.parent.input0].name].translate.y(ref)\} \{return 0\}]"} {"\[if \{\[exists  parent.parent.parent.input0]\} \{return \[value \[topnode parent.parent.parent.input0].name].translate.z(ref)\} \{return -1\}]"}}
    rotate {{"\[if \{\[exists  parent.parent.parent.input0]\} \{return \[value \[topnode parent.parent.parent.input0].name].rotate.x(ref)\} \{return 0\}]"} {"\[if \{\[exists  parent.parent.parent.input0]\} \{return \[value \[topnode parent.parent.parent.input0].name].rotate.y(ref)\} \{return 0\}]"} {"\[if \{\[exists  parent.parent.parent.input0]\} \{return \[value \[topnode parent.parent.parent.input0].name].rotate.z(ref)\} \{return 0\}]"}}
    scaling {{"\[if \{\[exists  parent.parent.parent.input0]\} \{return \[value \[topnode parent.parent.parent.input0].name].scaling.x(ref)\} \{return 1\}]"} {"\[if \{\[exists  parent.parent.parent.input0]\} \{return \[value \[topnode parent.parent.parent.input0].name].scaling.y(ref)\} \{return 1\}]"} {"\[if \{\[exists  parent.parent.parent.input0]\} \{return \[value \[topnode parent.parent.parent.input0].name].scaling.z(ref)\} \{return 1\}]"}}
    uniform_scale {{"\[if \{\[exists  parent.parent.parent.input0]\} \{return (\[value \[topnode parent.parent.parent.input0].name].uniform_scale(ref)*25)\} \{return 25\}]"}}
    shutteroffset centred
    name cCard3D_1
    tile_color 0x7b1d1dff
    label "ref frame: \[value ref]"
    xpos -135
    ypos 147
    addUserKnob {20 User l parent}
    addUserKnob {22 python_button l "set parent" t "select parent node, and press this button to set the selected node as parent" +INVISIBLE T "n = nuke.selectedNode()\['name'].getValue()\nnuke.thisNode()\['string'].setValue(n)" +STARTLINE}
    addUserKnob {1 string l parent +INVISIBLE}
    string null
    addUserKnob {3 id l "id number"}
    id {{parent.CTimeOffset7.shotnmbr}}
    addUserKnob {3 ref l "ref frame"}
    ref {{parent.CTimeOffset7.time_offset}}
   }
   Transform {
    translate {{"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].translate.x(ref)\}]"} {"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].translate.y(ref)\}]"}}
    rotate {{"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].rotate-\[value parent_gun].rotate(ref)\}]"}}
    scale {{"\[if \{\[value parent_gun]==\"null\"\} \{return 1\} \{return 1+(\[value parent_gun].scale-\[value parent_gun].scale(ref))\}]"}}
    center {{"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].center.x(ref)\}]"} {"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].center.y(ref)\}]"}}
    name GUNMatchMove1
    label "\n"
    xpos -135
    ypos 241
    addUserKnob {20 User l parent}
    addUserKnob {3 ref}
    ref {{parent.CTimeOffset7.ref}}
   }
   Transform {
    translate {{"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].translate.x-\[value parent_env].translate.x(ref)\}]"} {"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].translate.y-\[value parent_env].translate.y(ref)\}]"}}
    rotate {{"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].rotate-\[value parent_env].rotate(ref)\}]"}}
    scale {{"\[if \{\[value parent_gun]==\"null\"\} \{return 1\} \{return 1+(\[value parent_env].scale-\[value parent_env].scale(ref))\}]"}}
    center {{"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].center.x(ref)\}]"} {"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].center.y(ref)\}]"}}
    motionblur {{(mode==2)*0.2}}
    shutter {{FlashMB*(0.175*0.3)}}
    shutteroffset centred
    name ENVMatchMove1
    xpos -135
    ypos 317
    addUserKnob {20 User l parent}
    addUserKnob {3 ref}
    ref {{parent.CTimeOffset7.ref}}
   }
   Transform {
    translate {{"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return -((root.width/2)-(\[value parent_gun].center.x(1)+\[value parent_gun].translate.x(1)))\}]"} {"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return -((root.height/2)-(\[value parent_gun].center.y(1)+\[value parent_gun].translate.y(1)))\}]"}}
    shutteroffset centred
    name Transform_GUNMatchMove3
    label "alignment correction"
    xpos -135
    ypos 405
    addUserKnob {20 User l parent}
    addUserKnob {22 python_button l "set parent" t "select parent node, and press this button to set the selected node as parent" T "n = nuke.selectedNode()\['name'].getValue()\nnuke.thisNode()\['string'].setValue(n)" +STARTLINE}
    addUserKnob {1 string l parent}
    string Transform_MatchMove10
    addUserKnob {3 ref +INVISIBLE}
    ref {{parent.cCard3D_8.ref}}
   }
   Remove {
    operation keep
    channels rgb
    name Remove12
    xpos -135
    ypos 489
   }
push 0
   Switch {
    inputs 2
    which {{parent.Angle_reveal_side.value!=0}}
    name Switch6
    xpos -135
    ypos 676
   }
   Merge2 {
    inputs 3+1
    operation max
    name Merge1
    xpos -135
    ypos 745
   }
   Merge2 {
    inputs 2
    operation plus
    bbox intersection
    name Merge6
    xpos -135
    ypos 1196
   }
push 0
   Switch {
    inputs 2
    which {{"shot\[value count]==0?0:(EnableExtraFrames==1?floor(((frame>=shot\[value count])+(frame<=(shot\[value count]+(4*((mode==1)+(mode==2))))))/2):frame==shot\[value count])"}}
    name cSwitch_3
    xpos -135
    ypos 1359
    addUserKnob {20 User}
    addUserKnob {3 count l "shot number"}
    count {{parent.CTimeOffset7.shotnmbr}}
    addUserKnob {6 shot +STARTLINE}
    shot {{frame==(parent.CTimeOffset7.time_offset+1)}}
   }
   Output {
    name Output1
    xpos -135
    ypos 1861
   }
  end_group
push $N10435010
push $N107a2bc0
  Group {
   inputs 2
   name gunshot10
   label "shot: \[value shotcount]\non frame: \[value shotstart]\n"
   xpos 9816
   ypos -809
   addUserKnob {20 User}
   addUserKnob {3 shotcount l shot}
   shotcount 10
   addUserKnob {3 shotstart l frame +INVISIBLE}
   shotstart {{"shotcount==0 ? 0 : shot\[value shotcount]-1"}}
  }
   BackdropNode {
    inputs 0
    name BackdropNode3
    knobChanged "try:\n    listenedKnobs = \['text', 'position', 'name']\n    node = nuke.thisNode()\n    name = node.knob('name').value()\n    text = node.knob('text').value()\n    position = node.knob('position').value()\n    position = \"<\" + position + \">\"\n    label = node.knob('label').value()\n    \n    if nuke.thisKnob().name() in listenedKnobs:\n        if text == \"\":\n            if node.knob('position').value() == \"left\":\n                node.knob('label').setValue()\n            else:\n                node.knob('label').setValue(position + name)\n        else:\n            if node.knob('position').value() == \"left\":\n                node.knob('label').setValue(text)\n            else:\n                node.knob('label').setValue(position + text)\n                \n    elif nuke.thisKnob().name() == 'font_size':\n        fontSize = node.knob('font_size').value()\n        node.knob('note_font_size').setValue(fontSize)\nexcept:\n    pass"
    tile_color 0x232323ff
    label "<Left><h2> Gunshot"
    note_font_size 31.5
    xpos -698
    ypos -924
    bdwidth 1057
    bdheight 2343
    addUserKnob {20 F_VFX l BackdropNode}
    addUserKnob {43 text l Text}
    text "<h2> Gunshot"
    addUserKnob {7 font_size l "Font Size" R 10 100}
    font_size 31.5
    addUserKnob {4 position l "" -STARTLINE M {Left Center}}
    addUserKnob {26 S01 l " " T " "}
    addUserKnob {22 grow l " <img src=\"F_scalep.png\">" -STARTLINE T "n=nuke.thisNode()\n\ndef grow(node=None,step=50):\n    try:\n        if not node:\n            n=nuke.selectedNode()\n        else:\n            n=node\n            n\['xpos'].setValue(n\['xpos'].getValue()-step)\n            n\['ypos'].setValue(n\['ypos'].getValue()-step)\n            n\['bdwidth'].setValue(n\['bdwidth'].getValue()+step*2)\n            n\['bdheight'].setValue(n\['bdheight'].getValue()+step*2)\n    except:\n        pass\ngrow(n,50)"}
    addUserKnob {22 shrink l " <img src=\"F_scalem.png\">" -STARTLINE T "n=nuke.thisNode()\n\ndef shrink(node=None,step=50):\n    try:\n        if not node:\n            n=nuke.selectedNode()\n        else:\n            n=node\n            n\['xpos'].setValue(n\['xpos'].getValue()+step)\n            n\['ypos'].setValue(n\['ypos'].getValue()+step)\n            n\['bdwidth'].setValue(n\['bdwidth'].getValue()-step*2)\n            n\['bdheight'].setValue(n\['bdheight'].getValue()-step*2)\n    except:\n        pass\nshrink(n,50)"}
    addUserKnob {22 colorandom l " <img src=\"ColorBars.png\">" -STARTLINE T "import colorsys, random\nn=nuke.thisNode()\nR,G,B= colorsys.hsv_to_rgb(random.random(),.1+random.random()*.15,.15+random.random()*.15)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ) )"}
    addUserKnob {22 darkgrey l "<font color=\"#232323\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.0, 0.0, 0.14]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 lightgrey l "<font color=\"#383838\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.0, 0.0, 0.22]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 red l "<font color=\"#8c3838\" size=6>■</font>" T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.0, 0.6, 0.55]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n" +STARTLINE}
    addUserKnob {22 orange l "<font color=\"#b28e59\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.1, 0.5, 0.7]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 yellow l "<font color=\"#ccc766\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.16, 0.5, 0.8]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 green l "<font color=\"#5d995b\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.33, 0.4, 0.6]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 cyan l "<font color=\"#72998f\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.46, 0.25, 0.6]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 blue l "<font color=\"#59687f\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.6, 0.3, 0.5]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 darkblue l "<font color=\"#63628c\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.67, 0.3, 0.55]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 magenta l "<font color=\"#927a99\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.8, 0.2, 0.6]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 pink l "<font color=\"#997a89\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.92, 0.2, 0.6]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {26 S02 l " " T " "}
    addUserKnob {26 Ftools l "" +STARTLINE T "<font color=\"#1C1C1C\"> v1.2 - Franklin VFX - 2018"}
   }
   BackdropNode {
    inputs 0
    name BackdropNode1
    knobChanged "try:\n    listenedKnobs = \['text', 'position', 'name']\n    node = nuke.thisNode()\n    name = node.knob('name').value()\n    text = node.knob('text').value()\n    position = node.knob('position').value()\n    position = \"<\" + position + \">\"\n    label = node.knob('label').value()\n    \n    if nuke.thisKnob().name() in listenedKnobs:\n        if text == \"\":\n            if node.knob('position').value() == \"left\":\n                node.knob('label').setValue()\n            else:\n                node.knob('label').setValue(position + name)\n        else:\n            if node.knob('position').value() == \"left\":\n                node.knob('label').setValue(text)\n            else:\n                node.knob('label').setValue(position + text)\n                \n    elif nuke.thisKnob().name() == 'font_size':\n        fontSize = node.knob('font_size').value()\n        node.knob('note_font_size').setValue(fontSize)\nexcept:\n    pass"
    tile_color 0x927a99ff
    note_font_size 50
    xpos -460
    ypos -257
    bdwidth 435
    bdheight 786
    z_order 1
    addUserKnob {20 F_VFX l BackdropNode}
    addUserKnob {43 text l Text}
    addUserKnob {7 font_size l "Font Size" R 10 100}
    font_size 50
    addUserKnob {4 position l "" -STARTLINE M {Left Center}}
    addUserKnob {26 S01 l " " T " "}
    addUserKnob {22 grow l " <img src=\"F_scalep.png\">" -STARTLINE T "n=nuke.thisNode()\n\ndef grow(node=None,step=50):\n    try:\n        if not node:\n            n=nuke.selectedNode()\n        else:\n            n=node\n            n\['xpos'].setValue(n\['xpos'].getValue()-step)\n            n\['ypos'].setValue(n\['ypos'].getValue()-step)\n            n\['bdwidth'].setValue(n\['bdwidth'].getValue()+step*2)\n            n\['bdheight'].setValue(n\['bdheight'].getValue()+step*2)\n    except:\n        pass\ngrow(n,50)"}
    addUserKnob {22 shrink l " <img src=\"F_scalem.png\">" -STARTLINE T "n=nuke.thisNode()\n\ndef shrink(node=None,step=50):\n    try:\n        if not node:\n            n=nuke.selectedNode()\n        else:\n            n=node\n            n\['xpos'].setValue(n\['xpos'].getValue()+step)\n            n\['ypos'].setValue(n\['ypos'].getValue()+step)\n            n\['bdwidth'].setValue(n\['bdwidth'].getValue()-step*2)\n            n\['bdheight'].setValue(n\['bdheight'].getValue()-step*2)\n    except:\n        pass\nshrink(n,50)"}
    addUserKnob {22 colorandom l " <img src=\"ColorBars.png\">" -STARTLINE T "import colorsys, random\nn=nuke.thisNode()\nR,G,B= colorsys.hsv_to_rgb(random.random(),.1+random.random()*.15,.15+random.random()*.15)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ) )"}
    addUserKnob {22 darkgrey l "<font color=\"#232323\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.0, 0.0, 0.14]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 lightgrey l "<font color=\"#383838\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.0, 0.0, 0.22]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 red l "<font color=\"#8c3838\" size=6>■</font>" T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.0, 0.6, 0.55]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n" +STARTLINE}
    addUserKnob {22 orange l "<font color=\"#b28e59\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.1, 0.5, 0.7]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 yellow l "<font color=\"#ccc766\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.16, 0.5, 0.8]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 green l "<font color=\"#5d995b\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.33, 0.4, 0.6]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 cyan l "<font color=\"#72998f\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.46, 0.25, 0.6]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 blue l "<font color=\"#59687f\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.6, 0.3, 0.5]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 darkblue l "<font color=\"#63628c\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.67, 0.3, 0.55]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 magenta l "<font color=\"#927a99\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.8, 0.2, 0.6]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 pink l "<font color=\"#997a89\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.92, 0.2, 0.6]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {26 S02 l " " T " "}
    addUserKnob {26 Ftools l "" +STARTLINE T "<font color=\"#1C1C1C\"> v1.2 - Franklin VFX - 2018"}
   }
   Constant {
    inputs 0
    channels rgb
    name Constant4
    xpos -648
    ypos 987
   }
   AdjBBox {
    numpixels {{size_bbox}}
    name AdjBBox4
    xpos -648
    ypos 1120
   }
   Dot {
    name Dot19
    xpos -614
    ypos 1200
   }
   Axis3 {
    inputs 0
    useMatrix true
    matrix {
        {{parent.cCard3D_1.matrix} {parent.cCard3D_1.matrix} {parent.cCard3D_1.matrix} {parent.cCard3D_1.matrix}}
        {{parent.cCard3D_1.matrix} {parent.cCard3D_1.matrix} {parent.cCard3D_1.matrix} {parent.cCard3D_1.matrix}}
        {{parent.cCard3D_1.matrix} {parent.cCard3D_1.matrix} {parent.cCard3D_1.matrix} {parent.cCard3D_1.matrix}}
        {{parent.cCard3D_1.matrix} {parent.cCard3D_1.matrix} {parent.cCard3D_1.matrix} {parent.cCard3D_1.matrix}}
      }
    name Axis3
    xpos -207
    ypos 48
   }
set N117cb1d0 [stack 0]
push 0
   Input {
    inputs 0
    name Side
    xpos -135
    ypos -1101
   }
   TimeOffset {
    time_offset {{"shotnmbr==0 ? 0 : shot\[value shotnmbr]-1"}}
    time ""
    name CTimeOffset7
    label "shot: \[value shotnmbr]\non frame \[value time_offset]"
    xpos -135
    ypos -852
    addUserKnob {20 User}
    addUserKnob {3 shotnmbr l "shot "}
    shotnmbr {{shotcount}}
    addUserKnob {3 ref}
    ref {{time_offset+1}}
   }
   Group {
    name DecimalTimeOffset1
    tile_color 0xafa35dff
    label "random asset\n(based on brighness)"
    note_font "Bitstream Vera Sans Bold"
    xpos -135
    ypos -689
    addUserKnob {20 User}
    addUserKnob {7 decimal l "time offset (decimal)"}
    decimal {{"floor\n(\n  (\n  (  ((((random((shotcount*823)+(seed*212))-0.5)*  ((1-( abs(brighness_flare-0.5) )*2)+1)  )+0.5)*0.5)  * (1-brighness_flare)  )\n\n  +\n\n  (  (((((random((shotcount*823)+(seed*212))-0.5)*  ((1-( abs(brighness_flare-0.5) )*2)+1)  )+0.5)*0.5)+0.5)  * (brighness_flare)  )\n  )\n  *1000\n)\n\n/1000"}}
    addUserKnob {26 ""}
    addUserKnob {26 _1 l "" +STARTLINE T "Chris Fryer | 2020\nupdated by Yorben Otto | 2024"}
   }
    Input {
     inputs 0
     name Input1
     xpos 426
     ypos -793
    }
    TimeOffset {
     time_offset {{(-floor(parent.decimal))*(DecimalTimeOffset1.decimal<0)}}
     time ""
     name TimeOffset1
     selected true
     xpos 426
     ypos -674
    }
    Dot {
     name Dot6
     selected true
     xpos 460
     ypos -635
    }
set N1180a880 [stack 0]
    Dot {
     name Dot5
     selected true
     xpos 350
     ypos -635
    }
    Dot {
     name Dot7
     selected true
     xpos 350
     ypos -365
    }
push $N1180a880
    Dot {
     name Dot1
     selected true
     xpos 572
     ypos -635
    }
    TimeBlur {
     divisions 2
     shutter {{(parent.decimal-(floor(parent.decimal)))*2}}
     shutteroffset start
     shuttercustomoffset 0
     name TimeBlur1
     selected true
     xpos 538
     ypos -558
    }
    Dot {
     name Dot2
     selected true
     xpos 572
     ypos -490
    }
push $N1180a880
    TimeBlur {
     divisions 2
     shutter {{parent.decimal*2}}
     shutteroffset start
     shuttercustomoffset 0
     name TimeBlur8
     selected true
     xpos 426
     ypos -556
    }
    Switch {
     inputs 2
     which {{parent.decimal<0}}
     name Switch1
     selected true
     xpos 426
     ypos -494
    }
    Multiply {
     value {{parent.TimeBlur8.divisions}}
     name Multiply6
     selected true
     xpos 426
     ypos -436
    }
    Merge2 {
     inputs 2
     operation from
     name Merge6
     selected true
     xpos 426
     ypos -369
    }
set N1184c950 [stack 0]
    Output {
     name Output1
     xpos 426
     ypos -221
    }
push $N1184c950
push $N1184c950
    Viewer {
     inputs 2
     frame_range 1-100
     viewerProcess "sRGB (default)"
     name Viewer1
     xpos 675
     ypos -246
    }
   end_group
   NoTimeBlur {
    name NoTimeBlur6
    xpos -135
    ypos -608
   }
   Dot {
    name Dot21
    xpos -101
    ypos -449
   }
set N118eb7c0 [stack 0]
   Dot {
    name Dot22
    xpos -245
    ypos -449
   }
   Multiply {
    value {{math_matrix.result_y_flash(parent.CTimeOffset7.ref)}}
    name Angle_reveal_top
    label TOP
    xpos -279
    ypos -371
   }
   Transform {
    scale {{0.05+(0.05*(((parent.DecimalTimeOffset1.decimal-0.5)*2)*ScaleVariationFlash))}}
    center {{root.width/2 x1015 2304} {root.height/2}}
    shutteroffset centred
    name random_size_top
    xpos -279
    ypos -136
   }
   Card3D {
    inputs 3
    rot_order ZYX
    translate {0 0 0}
    rotate {90 0 0}
    shutteroffset centred
    name cCard3D5
    tile_color 0x7b1d1dff
    xpos -279
    ypos 153
    addUserKnob {20 User l parent}
    addUserKnob {22 python_button l "set parent" t "select parent node, and press this button to set the selected node as parent" +INVISIBLE T "n = nuke.selectedNode()\['name'].getValue()\nnuke.thisNode()\['string'].setValue(n)" +STARTLINE}
    addUserKnob {1 string l parent +INVISIBLE}
    string null
    addUserKnob {3 ref l "ref frame"}
    ref 1015
   }
   Transform {
    translate {{"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].translate.x(ref)\}]"} {"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].translate.y(ref)\}]"}}
    rotate {{"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].rotate-\[value parent_gun].rotate(ref)\}]"}}
    scale {{"\[if \{\[value parent_gun]==\"null\"\} \{return 1\} \{return 1+(\[value parent_gun].scale-\[value parent_gun].scale(ref))\}]"}}
    center {{"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].center.x(ref)\}]"} {"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].center.y(ref)\}]"}}
    name GUNMatchMove
    label "\n"
    xpos -279
    ypos 247
    addUserKnob {20 User l parent}
    addUserKnob {3 ref}
    ref {{parent.CTimeOffset7.ref}}
   }
   Transform {
    translate {{"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].translate.x-\[value parent_env].translate.x(ref)\}]"} {"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].translate.y-\[value parent_env].translate.y(ref)\}]"}}
    rotate {{"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].rotate-\[value parent_env].rotate(ref)\}]"}}
    scale {{"\[if \{\[value parent_gun]==\"null\"\} \{return 1\} \{return 1+(\[value parent_env].scale-\[value parent_env].scale(ref))\}]"}}
    center {{"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].center.x(ref)\}]"} {"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].center.y(ref)\}]"}}
    motionblur {{(mode==2)*0.2}}
    shutter {{FlashMB*(0.175*0.3)}}
    shutteroffset centred
    name ENVMatchMove
    xpos -279
    ypos 321
    addUserKnob {20 User l parent}
    addUserKnob {3 ref}
    ref {{parent.CTimeOffset7.ref}}
   }
   Transform {
    translate {{"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return -((root.width/2)-(\[value parent_gun].center.x(1)+\[value parent_gun].translate.x(1)))\}]"} {"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return -((root.height/2)-(\[value parent_gun].center.y(1)+\[value parent_gun].translate.y(1)))\}]"}}
    shutteroffset centred
    name Transform_GUNMatchMove1
    label "alignment correction"
    xpos -279
    ypos 408
    addUserKnob {20 User l parent}
    addUserKnob {22 python_button l "set parent" t "select parent node, and press this button to set the selected node as parent" T "n = nuke.selectedNode()\['name'].getValue()\nnuke.thisNode()\['string'].setValue(n)" +STARTLINE}
    addUserKnob {1 string l parent}
    string Transform_MatchMove10
    addUserKnob {3 ref +INVISIBLE}
    ref {{parent.cCard3D_8.ref}}
   }
   Remove {
    operation keep
    channels rgb
    name Remove10
    xpos -279
    ypos 489
   }
push 0
   Switch {
    inputs 2
    which {{parent.Angle_reveal_top.value!=0}}
    name Switch4
    xpos -279
    ypos 670
   }
   Dot {
    name Dot1
    xpos -245
    ypos 717
   }
push 0
push $N117cb1d0
push 0
   Input {
    inputs 0
    name Front
    xpos -430
    ypos -1102
    number 1
   }
   TimeOffset {
    time_offset {{"shotnmbr==0 ? 0 : shot\[value shotnmbr]-1"}}
    time ""
    name CTimeOffset8
    xpos -430
    ypos -840
    addUserKnob {20 User}
    addUserKnob {3 shotnmbr l "shot "}
    shotnmbr {{parent.CTimeOffset7.shotnmbr}}
   }
   Group {
    name DecimalTimeOffset
    tile_color 0xafa35dff
    label "random asset\n(based on brighness)"
    note_font "Bitstream Vera Sans Bold"
    xpos -430
    ypos -693
    addUserKnob {20 User}
    addUserKnob {7 decimal l "time offset (decimal)"}
    decimal {{"floor\n(\n  (\n  (  ((((random((shotcount*823)+(seed*212))-0.5)*  ((1-( abs(brighness_flare-0.5) )*2)+1)  )+0.5)*0.5)  * (1-brighness_flare)  )\n\n  +\n\n  (  (((((random((shotcount*823)+(seed*212))-0.5)*  ((1-( abs(brighness_flare-0.5) )*2)+1)  )+0.5)*0.5)+0.5)  * (brighness_flare)  )\n  )\n  *1000\n)\n\n/1000"}}
    addUserKnob {26 ""}
    addUserKnob {26 _1 l "" +STARTLINE T "Chris Fryer | 2020\nupdated by Yorben Otto | 2024"}
   }
    Input {
     inputs 0
     name Input1
     xpos 426
     ypos -793
    }
    TimeOffset {
     time_offset {{(-floor(parent.decimal))*(DecimalTimeOffset.decimal<0)}}
     time ""
     name TimeOffset1
     selected true
     xpos 426
     ypos -674
    }
    Dot {
     name Dot6
     selected true
     xpos 460
     ypos -635
    }
set N11992960 [stack 0]
    Dot {
     name Dot5
     selected true
     xpos 350
     ypos -635
    }
    Dot {
     name Dot7
     selected true
     xpos 350
     ypos -365
    }
push $N11992960
    Dot {
     name Dot1
     selected true
     xpos 572
     ypos -635
    }
    TimeBlur {
     divisions 2
     shutter {{(parent.decimal-(floor(parent.decimal)))*2}}
     shutteroffset start
     shuttercustomoffset 0
     name TimeBlur1
     selected true
     xpos 538
     ypos -558
    }
    Dot {
     name Dot2
     selected true
     xpos 572
     ypos -490
    }
push $N11992960
    TimeBlur {
     divisions 2
     shutter {{parent.decimal*2}}
     shutteroffset start
     shuttercustomoffset 0
     name TimeBlur8
     selected true
     xpos 426
     ypos -556
    }
    Switch {
     inputs 2
     which {{parent.decimal<0}}
     name Switch1
     selected true
     xpos 426
     ypos -494
    }
    Multiply {
     value {{parent.TimeBlur8.divisions}}
     name Multiply6
     selected true
     xpos 426
     ypos -436
    }
    Merge2 {
     inputs 2
     operation from
     name Merge6
     selected true
     xpos 426
     ypos -369
    }
set N119d4a60 [stack 0]
    Output {
     name Output1
     xpos 426
     ypos -221
    }
push $N119d4a60
push $N119d4a60
    Viewer {
     inputs 2
     frame_range 1-100
     viewerProcess "sRGB (default)"
     name Viewer1
     xpos 675
     ypos -246
    }
   end_group
   NoTimeBlur {
    name NoTimeBlur7
    xpos -430
    ypos -617
   }
   Multiply {
    value {{math_matrix.result_x_flash(parent.CTimeOffset7.ref)}}
    name Angle_reveal_front
    label FRONT
    xpos -430
    ypos -375
   }
   Transform {
    scale {{0.05+(0.05*(((parent.DecimalTimeOffset1.decimal-0.5)*2)*ScaleVariationFlash))}}
    center {{root.width/2 x1015 2304} {root.height/2}}
    shutteroffset centred
    name random_size_front
    xpos -430
    ypos -134
   }
   Card3D {
    inputs 3
    rot_order ZYX
    translate {0 0 0}
    rotate {0 90 0}
    shutteroffset centred
    name cCard3D6
    tile_color 0x7b1d1dff
    xpos -430
    ypos 150
    addUserKnob {20 User l parent}
    addUserKnob {22 python_button l "set parent" t "select parent node, and press this button to set the selected node as parent" +INVISIBLE T "n = nuke.selectedNode()\['name'].getValue()\nnuke.thisNode()\['string'].setValue(n)" +STARTLINE}
    addUserKnob {1 string l parent +INVISIBLE}
    string null
    addUserKnob {3 ref l "ref frame"}
    ref 1015
   }
   Transform {
    translate {{"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].translate.x(ref)\}]"} {"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].translate.y(ref)\}]"}}
    rotate {{"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].rotate-\[value parent_gun].rotate(ref)\}]"}}
    scale {{"\[if \{\[value parent_gun]==\"null\"\} \{return 1\} \{return 1+(\[value parent_gun].scale-\[value parent_gun].scale(ref))\}]"}}
    center {{"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].center.x(ref)\}]"} {"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].center.y(ref)\}]"}}
    name GUNMatchMove2
    label "\n"
    xpos -430
    ypos 248
    addUserKnob {20 User l parent}
    addUserKnob {3 ref}
    ref {{parent.CTimeOffset7.ref}}
   }
   Transform {
    translate {{"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].translate.x-\[value parent_env].translate.x(ref)\}]"} {"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].translate.y-\[value parent_env].translate.y(ref)\}]"}}
    rotate {{"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].rotate-\[value parent_env].rotate(ref)\}]"}}
    scale {{"\[if \{\[value parent_gun]==\"null\"\} \{return 1\} \{return 1+(\[value parent_env].scale-\[value parent_env].scale(ref))\}]"}}
    center {{"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].center.x(ref)\}]"} {"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].center.y(ref)\}]"}}
    motionblur {{(mode==2)*0.2}}
    shutter {{FlashMB*(0.175*0.3)}}
    shutteroffset centred
    name ENVMatchMove2
    xpos -430
    ypos 320
    addUserKnob {20 User l parent}
    addUserKnob {3 ref}
    ref {{parent.CTimeOffset7.ref}}
   }
   Transform {
    translate {{"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return -((root.width/2)-(\[value parent_gun].center.x(1)+\[value parent_gun].translate.x(1)))\}]"} {"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return -((root.height/2)-(\[value parent_gun].center.y(1)+\[value parent_gun].translate.y(1)))\}]"}}
    shutteroffset centred
    name Transform_GUNMatchMove2
    label "alignment correction"
    xpos -430
    ypos 407
    addUserKnob {20 User l parent}
    addUserKnob {22 python_button l "set parent" t "select parent node, and press this button to set the selected node as parent" T "n = nuke.selectedNode()\['name'].getValue()\nnuke.thisNode()\['string'].setValue(n)" +STARTLINE}
    addUserKnob {1 string l parent}
    string Transform_MatchMove10
    addUserKnob {3 ref +INVISIBLE}
    ref {{parent.cCard3D_8.ref}}
   }
   Remove {
    operation keep
    channels rgb
    name Remove11
    xpos -430
    ypos 487
   }
push 0
   Switch {
    inputs 2
    which {{parent.Angle_reveal_front.value!=0}}
    name Switch5
    xpos -430
    ypos 675
   }
   Dot {
    name Dot2
    xpos -396
    ypos 749
   }
push $N118eb7c0
   Multiply {
    value {{math_matrix.result_z_flash(parent.CTimeOffset7.ref)}}
    name Angle_reveal_side
    label SIDE
    xpos -135
    ypos -372
   }
   Transform {
    scale {{0.05+(0.05*(((parent.DecimalTimeOffset1.decimal-0.5)*2)*ScaleVariationFlash))}}
    center {{root.width/2 x1015 2304} {root.height/2}}
    shutteroffset centred
    name random_size_side
    xpos -135
    ypos -136
   }
   Card3D {
    translate {{"\[if \{\[exists  parent.parent.parent.input0]\} \{return \[value \[topnode parent.parent.parent.input0].name].translate.x(ref)\} \{return 0\}]"} {"\[if \{\[exists  parent.parent.parent.input0]\} \{return \[value \[topnode parent.parent.parent.input0].name].translate.y(ref)\} \{return 0\}]"} {"\[if \{\[exists  parent.parent.parent.input0]\} \{return \[value \[topnode parent.parent.parent.input0].name].translate.z(ref)\} \{return -1\}]"}}
    rotate {{"\[if \{\[exists  parent.parent.parent.input0]\} \{return \[value \[topnode parent.parent.parent.input0].name].rotate.x(ref)\} \{return 0\}]"} {"\[if \{\[exists  parent.parent.parent.input0]\} \{return \[value \[topnode parent.parent.parent.input0].name].rotate.y(ref)\} \{return 0\}]"} {"\[if \{\[exists  parent.parent.parent.input0]\} \{return \[value \[topnode parent.parent.parent.input0].name].rotate.z(ref)\} \{return 0\}]"}}
    scaling {{"\[if \{\[exists  parent.parent.parent.input0]\} \{return \[value \[topnode parent.parent.parent.input0].name].scaling.x(ref)\} \{return 1\}]"} {"\[if \{\[exists  parent.parent.parent.input0]\} \{return \[value \[topnode parent.parent.parent.input0].name].scaling.y(ref)\} \{return 1\}]"} {"\[if \{\[exists  parent.parent.parent.input0]\} \{return \[value \[topnode parent.parent.parent.input0].name].scaling.z(ref)\} \{return 1\}]"}}
    uniform_scale {{"\[if \{\[exists  parent.parent.parent.input0]\} \{return (\[value \[topnode parent.parent.parent.input0].name].uniform_scale(ref)*25)\} \{return 25\}]"}}
    shutteroffset centred
    name cCard3D_1
    tile_color 0x7b1d1dff
    label "ref frame: \[value ref]"
    xpos -135
    ypos 147
    addUserKnob {20 User l parent}
    addUserKnob {22 python_button l "set parent" t "select parent node, and press this button to set the selected node as parent" +INVISIBLE T "n = nuke.selectedNode()\['name'].getValue()\nnuke.thisNode()\['string'].setValue(n)" +STARTLINE}
    addUserKnob {1 string l parent +INVISIBLE}
    string null
    addUserKnob {3 id l "id number"}
    id {{parent.CTimeOffset7.shotnmbr}}
    addUserKnob {3 ref l "ref frame"}
    ref {{parent.CTimeOffset7.time_offset}}
   }
   Transform {
    translate {{"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].translate.x(ref)\}]"} {"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].translate.y(ref)\}]"}}
    rotate {{"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].rotate-\[value parent_gun].rotate(ref)\}]"}}
    scale {{"\[if \{\[value parent_gun]==\"null\"\} \{return 1\} \{return 1+(\[value parent_gun].scale-\[value parent_gun].scale(ref))\}]"}}
    center {{"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].center.x(ref)\}]"} {"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].center.y(ref)\}]"}}
    name GUNMatchMove1
    label "\n"
    xpos -135
    ypos 241
    addUserKnob {20 User l parent}
    addUserKnob {3 ref}
    ref {{parent.CTimeOffset7.ref}}
   }
   Transform {
    translate {{"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].translate.x-\[value parent_env].translate.x(ref)\}]"} {"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].translate.y-\[value parent_env].translate.y(ref)\}]"}}
    rotate {{"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].rotate-\[value parent_env].rotate(ref)\}]"}}
    scale {{"\[if \{\[value parent_gun]==\"null\"\} \{return 1\} \{return 1+(\[value parent_env].scale-\[value parent_env].scale(ref))\}]"}}
    center {{"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].center.x(ref)\}]"} {"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].center.y(ref)\}]"}}
    motionblur {{(mode==2)*0.2}}
    shutter {{FlashMB*(0.175*0.3)}}
    shutteroffset centred
    name ENVMatchMove1
    xpos -135
    ypos 317
    addUserKnob {20 User l parent}
    addUserKnob {3 ref}
    ref {{parent.CTimeOffset7.ref}}
   }
   Transform {
    translate {{"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return -((root.width/2)-(\[value parent_gun].center.x(1)+\[value parent_gun].translate.x(1)))\}]"} {"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return -((root.height/2)-(\[value parent_gun].center.y(1)+\[value parent_gun].translate.y(1)))\}]"}}
    shutteroffset centred
    name Transform_GUNMatchMove3
    label "alignment correction"
    xpos -135
    ypos 405
    addUserKnob {20 User l parent}
    addUserKnob {22 python_button l "set parent" t "select parent node, and press this button to set the selected node as parent" T "n = nuke.selectedNode()\['name'].getValue()\nnuke.thisNode()\['string'].setValue(n)" +STARTLINE}
    addUserKnob {1 string l parent}
    string Transform_MatchMove10
    addUserKnob {3 ref +INVISIBLE}
    ref {{parent.cCard3D_8.ref}}
   }
   Remove {
    operation keep
    channels rgb
    name Remove12
    xpos -135
    ypos 489
   }
push 0
   Switch {
    inputs 2
    which {{parent.Angle_reveal_side.value!=0}}
    name Switch6
    xpos -135
    ypos 676
   }
   Merge2 {
    inputs 3+1
    operation max
    name Merge1
    xpos -135
    ypos 745
   }
   Merge2 {
    inputs 2
    operation plus
    bbox intersection
    name Merge6
    xpos -135
    ypos 1196
   }
push 0
   Switch {
    inputs 2
    which {{"shot\[value count]==0?0:(EnableExtraFrames==1?floor(((frame>=shot\[value count])+(frame<=(shot\[value count]+(4*((mode==1)+(mode==2))))))/2):frame==shot\[value count])"}}
    name cSwitch_3
    xpos -135
    ypos 1359
    addUserKnob {20 User}
    addUserKnob {3 count l "shot number"}
    count {{parent.CTimeOffset7.shotnmbr}}
    addUserKnob {6 shot +STARTLINE}
    shot {{frame==(parent.CTimeOffset7.time_offset+1)}}
   }
   Output {
    name Output1
    xpos -135
    ypos 1861
   }
  end_group
push $N10407040
push $N10775480
  Group {
   inputs 2
   name gunshot2
   label "shot: \[value shotcount]\non frame: \[value shotstart]\n"
   selected true
   xpos 7893
   ypos -810
   addUserKnob {20 User}
   addUserKnob {3 shotcount l shot}
   shotcount 1
   addUserKnob {3 shotstart l frame +INVISIBLE}
   shotstart {{"shotcount==0 ? 0 : shot\[value shotcount]-1"}}
  }
   BackdropNode {
    inputs 0
    name BackdropNode3
    knobChanged "try:\n    listenedKnobs = \['text', 'position', 'name']\n    node = nuke.thisNode()\n    name = node.knob('name').value()\n    text = node.knob('text').value()\n    position = node.knob('position').value()\n    position = \"<\" + position + \">\"\n    label = node.knob('label').value()\n    \n    if nuke.thisKnob().name() in listenedKnobs:\n        if text == \"\":\n            if node.knob('position').value() == \"left\":\n                node.knob('label').setValue()\n            else:\n                node.knob('label').setValue(position + name)\n        else:\n            if node.knob('position').value() == \"left\":\n                node.knob('label').setValue(text)\n            else:\n                node.knob('label').setValue(position + text)\n                \n    elif nuke.thisKnob().name() == 'font_size':\n        fontSize = node.knob('font_size').value()\n        node.knob('note_font_size').setValue(fontSize)\nexcept:\n    pass"
    tile_color 0x232323ff
    label "<Left><h2> Gunshot"
    note_font_size 31.5
    xpos -698
    ypos -924
    bdwidth 1057
    bdheight 2343
    addUserKnob {20 F_VFX l BackdropNode}
    addUserKnob {43 text l Text}
    text "<h2> Gunshot"
    addUserKnob {7 font_size l "Font Size" R 10 100}
    font_size 31.5
    addUserKnob {4 position l "" -STARTLINE M {Left Center}}
    addUserKnob {26 S01 l " " T " "}
    addUserKnob {22 grow l " <img src=\"F_scalep.png\">" -STARTLINE T "n=nuke.thisNode()\n\ndef grow(node=None,step=50):\n    try:\n        if not node:\n            n=nuke.selectedNode()\n        else:\n            n=node\n            n\['xpos'].setValue(n\['xpos'].getValue()-step)\n            n\['ypos'].setValue(n\['ypos'].getValue()-step)\n            n\['bdwidth'].setValue(n\['bdwidth'].getValue()+step*2)\n            n\['bdheight'].setValue(n\['bdheight'].getValue()+step*2)\n    except:\n        pass\ngrow(n,50)"}
    addUserKnob {22 shrink l " <img src=\"F_scalem.png\">" -STARTLINE T "n=nuke.thisNode()\n\ndef shrink(node=None,step=50):\n    try:\n        if not node:\n            n=nuke.selectedNode()\n        else:\n            n=node\n            n\['xpos'].setValue(n\['xpos'].getValue()+step)\n            n\['ypos'].setValue(n\['ypos'].getValue()+step)\n            n\['bdwidth'].setValue(n\['bdwidth'].getValue()-step*2)\n            n\['bdheight'].setValue(n\['bdheight'].getValue()-step*2)\n    except:\n        pass\nshrink(n,50)"}
    addUserKnob {22 colorandom l " <img src=\"ColorBars.png\">" -STARTLINE T "import colorsys, random\nn=nuke.thisNode()\nR,G,B= colorsys.hsv_to_rgb(random.random(),.1+random.random()*.15,.15+random.random()*.15)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ) )"}
    addUserKnob {22 darkgrey l "<font color=\"#232323\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.0, 0.0, 0.14]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 lightgrey l "<font color=\"#383838\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.0, 0.0, 0.22]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 red l "<font color=\"#8c3838\" size=6>■</font>" T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.0, 0.6, 0.55]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n" +STARTLINE}
    addUserKnob {22 orange l "<font color=\"#b28e59\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.1, 0.5, 0.7]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 yellow l "<font color=\"#ccc766\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.16, 0.5, 0.8]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 green l "<font color=\"#5d995b\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.33, 0.4, 0.6]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 cyan l "<font color=\"#72998f\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.46, 0.25, 0.6]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 blue l "<font color=\"#59687f\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.6, 0.3, 0.5]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 darkblue l "<font color=\"#63628c\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.67, 0.3, 0.55]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 magenta l "<font color=\"#927a99\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.8, 0.2, 0.6]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 pink l "<font color=\"#997a89\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.92, 0.2, 0.6]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {26 S02 l " " T " "}
    addUserKnob {26 Ftools l "" +STARTLINE T "<font color=\"#1C1C1C\"> v1.2 - Franklin VFX - 2018"}
   }
   BackdropNode {
    inputs 0
    name BackdropNode1
    knobChanged "try:\n    listenedKnobs = \['text', 'position', 'name']\n    node = nuke.thisNode()\n    name = node.knob('name').value()\n    text = node.knob('text').value()\n    position = node.knob('position').value()\n    position = \"<\" + position + \">\"\n    label = node.knob('label').value()\n    \n    if nuke.thisKnob().name() in listenedKnobs:\n        if text == \"\":\n            if node.knob('position').value() == \"left\":\n                node.knob('label').setValue()\n            else:\n                node.knob('label').setValue(position + name)\n        else:\n            if node.knob('position').value() == \"left\":\n                node.knob('label').setValue(text)\n            else:\n                node.knob('label').setValue(position + text)\n                \n    elif nuke.thisKnob().name() == 'font_size':\n        fontSize = node.knob('font_size').value()\n        node.knob('note_font_size').setValue(fontSize)\nexcept:\n    pass"
    tile_color 0x927a99ff
    note_font_size 50
    xpos -460
    ypos -257
    bdwidth 435
    bdheight 786
    z_order 1
    addUserKnob {20 F_VFX l BackdropNode}
    addUserKnob {43 text l Text}
    addUserKnob {7 font_size l "Font Size" R 10 100}
    font_size 50
    addUserKnob {4 position l "" -STARTLINE M {Left Center}}
    addUserKnob {26 S01 l " " T " "}
    addUserKnob {22 grow l " <img src=\"F_scalep.png\">" -STARTLINE T "n=nuke.thisNode()\n\ndef grow(node=None,step=50):\n    try:\n        if not node:\n            n=nuke.selectedNode()\n        else:\n            n=node\n            n\['xpos'].setValue(n\['xpos'].getValue()-step)\n            n\['ypos'].setValue(n\['ypos'].getValue()-step)\n            n\['bdwidth'].setValue(n\['bdwidth'].getValue()+step*2)\n            n\['bdheight'].setValue(n\['bdheight'].getValue()+step*2)\n    except:\n        pass\ngrow(n,50)"}
    addUserKnob {22 shrink l " <img src=\"F_scalem.png\">" -STARTLINE T "n=nuke.thisNode()\n\ndef shrink(node=None,step=50):\n    try:\n        if not node:\n            n=nuke.selectedNode()\n        else:\n            n=node\n            n\['xpos'].setValue(n\['xpos'].getValue()+step)\n            n\['ypos'].setValue(n\['ypos'].getValue()+step)\n            n\['bdwidth'].setValue(n\['bdwidth'].getValue()-step*2)\n            n\['bdheight'].setValue(n\['bdheight'].getValue()-step*2)\n    except:\n        pass\nshrink(n,50)"}
    addUserKnob {22 colorandom l " <img src=\"ColorBars.png\">" -STARTLINE T "import colorsys, random\nn=nuke.thisNode()\nR,G,B= colorsys.hsv_to_rgb(random.random(),.1+random.random()*.15,.15+random.random()*.15)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ) )"}
    addUserKnob {22 darkgrey l "<font color=\"#232323\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.0, 0.0, 0.14]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 lightgrey l "<font color=\"#383838\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.0, 0.0, 0.22]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 red l "<font color=\"#8c3838\" size=6>■</font>" T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.0, 0.6, 0.55]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n" +STARTLINE}
    addUserKnob {22 orange l "<font color=\"#b28e59\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.1, 0.5, 0.7]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 yellow l "<font color=\"#ccc766\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.16, 0.5, 0.8]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 green l "<font color=\"#5d995b\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.33, 0.4, 0.6]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 cyan l "<font color=\"#72998f\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.46, 0.25, 0.6]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 blue l "<font color=\"#59687f\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.6, 0.3, 0.5]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 darkblue l "<font color=\"#63628c\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.67, 0.3, 0.55]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 magenta l "<font color=\"#927a99\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.8, 0.2, 0.6]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 pink l "<font color=\"#997a89\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.92, 0.2, 0.6]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {26 S02 l " " T " "}
    addUserKnob {26 Ftools l "" +STARTLINE T "<font color=\"#1C1C1C\"> v1.2 - Franklin VFX - 2018"}
   }
   Constant {
    inputs 0
    channels rgb
    name Constant4
    xpos -648
    ypos 987
   }
   AdjBBox {
    numpixels {{size_bbox}}
    name AdjBBox4
    xpos -648
    ypos 1120
   }
   Dot {
    name Dot19
    xpos -614
    ypos 1200
   }
   Axis3 {
    inputs 0
    useMatrix true
    matrix {
        {{parent.cCard3D_1.matrix} {parent.cCard3D_1.matrix} {parent.cCard3D_1.matrix} {parent.cCard3D_1.matrix}}
        {{parent.cCard3D_1.matrix} {parent.cCard3D_1.matrix} {parent.cCard3D_1.matrix} {parent.cCard3D_1.matrix}}
        {{parent.cCard3D_1.matrix} {parent.cCard3D_1.matrix} {parent.cCard3D_1.matrix} {parent.cCard3D_1.matrix}}
        {{parent.cCard3D_1.matrix} {parent.cCard3D_1.matrix} {parent.cCard3D_1.matrix} {parent.cCard3D_1.matrix}}
      }
    name Axis3
    xpos -207
    ypos 48
   }
set N11bc2d40 [stack 0]
push 0
   Input {
    inputs 0
    name Side
    xpos -135
    ypos -1101
   }
   TimeOffset {
    time_offset {{"shotnmbr==0 ? 0 : shot\[value shotnmbr]-1"}}
    time ""
    name CTimeOffset7
    label "shot: \[value shotnmbr]\non frame \[value time_offset]"
    xpos -135
    ypos -852
    addUserKnob {20 User}
    addUserKnob {3 shotnmbr l "shot "}
    shotnmbr {{shotcount}}
    addUserKnob {3 ref}
    ref {{time_offset+1}}
   }
   Group {
    name DecimalTimeOffset1
    tile_color 0xafa35dff
    label "random asset\n(based on brighness)"
    note_font "Bitstream Vera Sans Bold"
    xpos -135
    ypos -689
    addUserKnob {20 User}
    addUserKnob {7 decimal l "time offset (decimal)"}
    decimal {{"floor\n(\n  (\n  (  ((((random((shotcount*823)+(seed*212))-0.5)*  ((1-( abs(brighness_flare-0.5) )*2)+1)  )+0.5)*0.5)  * (1-brighness_flare)  )\n\n  +\n\n  (  (((((random((shotcount*823)+(seed*212))-0.5)*  ((1-( abs(brighness_flare-0.5) )*2)+1)  )+0.5)*0.5)+0.5)  * (brighness_flare)  )\n  )\n  *1000\n)\n\n/1000"}}
    addUserKnob {26 ""}
    addUserKnob {26 _1 l "" +STARTLINE T "Chris Fryer | 2020\nupdated by Yorben Otto | 2024"}
   }
    Input {
     inputs 0
     name Input1
     xpos 426
     ypos -793
    }
    TimeOffset {
     time_offset {{(-floor(parent.decimal))*(DecimalTimeOffset1.decimal<0)}}
     time ""
     name TimeOffset1
     selected true
     xpos 426
     ypos -674
    }
    Dot {
     name Dot6
     selected true
     xpos 460
     ypos -635
    }
set N11c023c0 [stack 0]
    Dot {
     name Dot5
     selected true
     xpos 350
     ypos -635
    }
    Dot {
     name Dot7
     selected true
     xpos 350
     ypos -365
    }
push $N11c023c0
    Dot {
     name Dot1
     selected true
     xpos 572
     ypos -635
    }
    TimeBlur {
     divisions 2
     shutter {{(parent.decimal-(floor(parent.decimal)))*2}}
     shutteroffset start
     shuttercustomoffset 0
     name TimeBlur1
     selected true
     xpos 538
     ypos -558
    }
    Dot {
     name Dot2
     selected true
     xpos 572
     ypos -490
    }
push $N11c023c0
    TimeBlur {
     divisions 2
     shutter {{parent.decimal*2}}
     shutteroffset start
     shuttercustomoffset 0
     name TimeBlur8
     selected true
     xpos 426
     ypos -556
    }
    Switch {
     inputs 2
     which {{parent.decimal<0}}
     name Switch1
     selected true
     xpos 426
     ypos -494
    }
    Multiply {
     value {{parent.TimeBlur8.divisions}}
     name Multiply6
     selected true
     xpos 426
     ypos -436
    }
    Merge2 {
     inputs 2
     operation from
     name Merge6
     selected true
     xpos 426
     ypos -369
    }
set N11c444a0 [stack 0]
    Output {
     name Output1
     xpos 426
     ypos -221
    }
push $N11c444a0
push $N11c444a0
    Viewer {
     inputs 2
     frame_range 1-100
     viewerProcess "sRGB (default)"
     name Viewer1
     xpos 675
     ypos -246
    }
   end_group
   NoTimeBlur {
    name NoTimeBlur6
    xpos -135
    ypos -608
   }
   Dot {
    name Dot21
    xpos -101
    ypos -449
   }
set N11ce3330 [stack 0]
   Dot {
    name Dot22
    xpos -245
    ypos -449
   }
   Multiply {
    value {{math_matrix.result_y_flash(parent.CTimeOffset7.ref)}}
    name Angle_reveal_top
    label TOP
    xpos -279
    ypos -371
   }
   Transform {
    scale {{0.05+(0.05*(((parent.DecimalTimeOffset1.decimal-0.5)*2)*ScaleVariationFlash))}}
    center {{root.width/2 x1015 2304} {root.height/2}}
    shutteroffset centred
    name random_size_top
    xpos -279
    ypos -136
   }
   Card3D {
    inputs 3
    rot_order ZYX
    translate {0 0 0}
    rotate {90 0 0}
    shutteroffset centred
    name cCard3D5
    tile_color 0x7b1d1dff
    xpos -279
    ypos 153
    addUserKnob {20 User l parent}
    addUserKnob {22 python_button l "set parent" t "select parent node, and press this button to set the selected node as parent" +INVISIBLE T "n = nuke.selectedNode()\['name'].getValue()\nnuke.thisNode()\['string'].setValue(n)" +STARTLINE}
    addUserKnob {1 string l parent +INVISIBLE}
    string null
    addUserKnob {3 ref l "ref frame"}
    ref 1015
   }
   Transform {
    translate {{"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].translate.x(ref)\}]"} {"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].translate.y(ref)\}]"}}
    rotate {{"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].rotate-\[value parent_gun].rotate(ref)\}]"}}
    scale {{"\[if \{\[value parent_gun]==\"null\"\} \{return 1\} \{return 1+(\[value parent_gun].scale-\[value parent_gun].scale(ref))\}]"}}
    center {{"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].center.x(ref)\}]"} {"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].center.y(ref)\}]"}}
    name GUNMatchMove
    label "\n"
    xpos -279
    ypos 247
    addUserKnob {20 User l parent}
    addUserKnob {3 ref}
    ref {{parent.CTimeOffset7.ref}}
   }
   Transform {
    translate {{"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].translate.x-\[value parent_env].translate.x(ref)\}]"} {"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].translate.y-\[value parent_env].translate.y(ref)\}]"}}
    rotate {{"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].rotate-\[value parent_env].rotate(ref)\}]"}}
    scale {{"\[if \{\[value parent_gun]==\"null\"\} \{return 1\} \{return 1+(\[value parent_env].scale-\[value parent_env].scale(ref))\}]"}}
    center {{"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].center.x(ref)\}]"} {"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].center.y(ref)\}]"}}
    motionblur {{(mode==2)*0.2}}
    shutter {{FlashMB*(0.175*0.3)}}
    shutteroffset centred
    name ENVMatchMove
    xpos -279
    ypos 321
    addUserKnob {20 User l parent}
    addUserKnob {3 ref}
    ref {{parent.CTimeOffset7.ref}}
   }
   Transform {
    translate {{"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return -((root.width/2)-(\[value parent_gun].center.x(1)+\[value parent_gun].translate.x(1)))\}]"} {"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return -((root.height/2)-(\[value parent_gun].center.y(1)+\[value parent_gun].translate.y(1)))\}]"}}
    shutteroffset centred
    name Transform_GUNMatchMove1
    label "alignment correction"
    xpos -279
    ypos 408
    addUserKnob {20 User l parent}
    addUserKnob {22 python_button l "set parent" t "select parent node, and press this button to set the selected node as parent" T "n = nuke.selectedNode()\['name'].getValue()\nnuke.thisNode()\['string'].setValue(n)" +STARTLINE}
    addUserKnob {1 string l parent}
    string Transform_MatchMove10
    addUserKnob {3 ref +INVISIBLE}
    ref {{parent.cCard3D_8.ref}}
   }
   Remove {
    operation keep
    channels rgb
    name Remove10
    xpos -279
    ypos 489
   }
push 0
   Switch {
    inputs 2
    which {{parent.Angle_reveal_top.value!=0}}
    name Switch4
    xpos -279
    ypos 670
   }
   Dot {
    name Dot1
    xpos -245
    ypos 717
   }
push 0
push $N11bc2d40
push 0
   Input {
    inputs 0
    name Front
    xpos -430
    ypos -1102
    number 1
   }
   TimeOffset {
    time_offset {{"shotnmbr==0 ? 0 : shot\[value shotnmbr]-1"}}
    time ""
    name CTimeOffset8
    xpos -430
    ypos -840
    addUserKnob {20 User}
    addUserKnob {3 shotnmbr l "shot "}
    shotnmbr {{parent.CTimeOffset7.shotnmbr}}
   }
   Group {
    name DecimalTimeOffset
    tile_color 0xafa35dff
    label "random asset\n(based on brighness)"
    note_font "Bitstream Vera Sans Bold"
    xpos -430
    ypos -693
    addUserKnob {20 User}
    addUserKnob {7 decimal l "time offset (decimal)"}
    decimal {{"floor\n(\n  (\n  (  ((((random((shotcount*823)+(seed*212))-0.5)*  ((1-( abs(brighness_flare-0.5) )*2)+1)  )+0.5)*0.5)  * (1-brighness_flare)  )\n\n  +\n\n  (  (((((random((shotcount*823)+(seed*212))-0.5)*  ((1-( abs(brighness_flare-0.5) )*2)+1)  )+0.5)*0.5)+0.5)  * (brighness_flare)  )\n  )\n  *1000\n)\n\n/1000"}}
    addUserKnob {26 ""}
    addUserKnob {26 _1 l "" +STARTLINE T "Chris Fryer | 2020\nupdated by Yorben Otto | 2024"}
   }
    Input {
     inputs 0
     name Input1
     xpos 426
     ypos -793
    }
    TimeOffset {
     time_offset {{(-floor(parent.decimal))*(DecimalTimeOffset.decimal<0)}}
     time ""
     name TimeOffset1
     selected true
     xpos 426
     ypos -674
    }
    Dot {
     name Dot6
     selected true
     xpos 460
     ypos -635
    }
set N11d8a4c0 [stack 0]
    Dot {
     name Dot5
     selected true
     xpos 350
     ypos -635
    }
    Dot {
     name Dot7
     selected true
     xpos 350
     ypos -365
    }
push $N11d8a4c0
    Dot {
     name Dot1
     selected true
     xpos 572
     ypos -635
    }
    TimeBlur {
     divisions 2
     shutter {{(parent.decimal-(floor(parent.decimal)))*2}}
     shutteroffset start
     shuttercustomoffset 0
     name TimeBlur1
     selected true
     xpos 538
     ypos -558
    }
    Dot {
     name Dot2
     selected true
     xpos 572
     ypos -490
    }
push $N11d8a4c0
    TimeBlur {
     divisions 2
     shutter {{parent.decimal*2}}
     shutteroffset start
     shuttercustomoffset 0
     name TimeBlur8
     selected true
     xpos 426
     ypos -556
    }
    Switch {
     inputs 2
     which {{parent.decimal<0}}
     name Switch1
     selected true
     xpos 426
     ypos -494
    }
    Multiply {
     value {{parent.TimeBlur8.divisions}}
     name Multiply6
     selected true
     xpos 426
     ypos -436
    }
    Merge2 {
     inputs 2
     operation from
     name Merge6
     selected true
     xpos 426
     ypos -369
    }
set N11dcc5a0 [stack 0]
    Output {
     name Output1
     xpos 426
     ypos -221
    }
push $N11dcc5a0
push $N11dcc5a0
    Viewer {
     inputs 2
     frame_range 1-100
     viewerProcess "sRGB (default)"
     name Viewer1
     xpos 675
     ypos -246
    }
   end_group
   NoTimeBlur {
    name NoTimeBlur7
    xpos -430
    ypos -617
   }
   Multiply {
    value {{math_matrix.result_x_flash(parent.CTimeOffset7.ref)}}
    name Angle_reveal_front
    label FRONT
    xpos -430
    ypos -375
   }
   Transform {
    scale {{0.05+(0.05*(((parent.DecimalTimeOffset1.decimal-0.5)*2)*ScaleVariationFlash))}}
    center {{root.width/2 x1015 2304} {root.height/2}}
    shutteroffset centred
    name random_size_front
    xpos -430
    ypos -134
   }
   Card3D {
    inputs 3
    rot_order ZYX
    translate {0 0 0}
    rotate {0 90 0}
    shutteroffset centred
    name cCard3D6
    tile_color 0x7b1d1dff
    xpos -430
    ypos 150
    addUserKnob {20 User l parent}
    addUserKnob {22 python_button l "set parent" t "select parent node, and press this button to set the selected node as parent" +INVISIBLE T "n = nuke.selectedNode()\['name'].getValue()\nnuke.thisNode()\['string'].setValue(n)" +STARTLINE}
    addUserKnob {1 string l parent +INVISIBLE}
    string null
    addUserKnob {3 ref l "ref frame"}
    ref 1015
   }
   Transform {
    translate {{"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].translate.x(ref)\}]"} {"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].translate.y(ref)\}]"}}
    rotate {{"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].rotate-\[value parent_gun].rotate(ref)\}]"}}
    scale {{"\[if \{\[value parent_gun]==\"null\"\} \{return 1\} \{return 1+(\[value parent_gun].scale-\[value parent_gun].scale(ref))\}]"}}
    center {{"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].center.x(ref)\}]"} {"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].center.y(ref)\}]"}}
    name GUNMatchMove2
    label "\n"
    xpos -430
    ypos 248
    addUserKnob {20 User l parent}
    addUserKnob {3 ref}
    ref {{parent.CTimeOffset7.ref}}
   }
   Transform {
    translate {{"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].translate.x-\[value parent_env].translate.x(ref)\}]"} {"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].translate.y-\[value parent_env].translate.y(ref)\}]"}}
    rotate {{"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].rotate-\[value parent_env].rotate(ref)\}]"}}
    scale {{"\[if \{\[value parent_gun]==\"null\"\} \{return 1\} \{return 1+(\[value parent_env].scale-\[value parent_env].scale(ref))\}]"}}
    center {{"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].center.x(ref)\}]"} {"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].center.y(ref)\}]"}}
    motionblur {{(mode==2)*0.2}}
    shutter {{FlashMB*(0.175*0.3)}}
    shutteroffset centred
    name ENVMatchMove2
    xpos -430
    ypos 320
    addUserKnob {20 User l parent}
    addUserKnob {3 ref}
    ref {{parent.CTimeOffset7.ref}}
   }
   Transform {
    translate {{"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return -((root.width/2)-(\[value parent_gun].center.x(1)+\[value parent_gun].translate.x(1)))\}]"} {"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return -((root.height/2)-(\[value parent_gun].center.y(1)+\[value parent_gun].translate.y(1)))\}]"}}
    shutteroffset centred
    name Transform_GUNMatchMove2
    label "alignment correction"
    xpos -430
    ypos 407
    addUserKnob {20 User l parent}
    addUserKnob {22 python_button l "set parent" t "select parent node, and press this button to set the selected node as parent" T "n = nuke.selectedNode()\['name'].getValue()\nnuke.thisNode()\['string'].setValue(n)" +STARTLINE}
    addUserKnob {1 string l parent}
    string Transform_MatchMove10
    addUserKnob {3 ref +INVISIBLE}
    ref {{parent.cCard3D_8.ref}}
   }
   Remove {
    operation keep
    channels rgb
    name Remove11
    xpos -430
    ypos 487
   }
push 0
   Switch {
    inputs 2
    which {{parent.Angle_reveal_front.value!=0}}
    name Switch5
    xpos -430
    ypos 675
   }
   Dot {
    name Dot2
    xpos -396
    ypos 749
   }
push $N11ce3330
   Multiply {
    value {{math_matrix.result_z_flash(parent.CTimeOffset7.ref)}}
    name Angle_reveal_side
    label SIDE
    xpos -135
    ypos -372
   }
   Transform {
    scale {{0.05+(0.05*(((parent.DecimalTimeOffset1.decimal-0.5)*2)*ScaleVariationFlash))}}
    center {{root.width/2 x1015 2304} {root.height/2}}
    shutteroffset centred
    name random_size_side
    xpos -135
    ypos -136
   }
   Card3D {
    translate {{"\[if \{\[exists  parent.parent.parent.input0]\} \{return \[value \[topnode parent.parent.parent.input0].name].translate.x(ref)\} \{return 0\}]"} {"\[if \{\[exists  parent.parent.parent.input0]\} \{return \[value \[topnode parent.parent.parent.input0].name].translate.y(ref)\} \{return 0\}]"} {"\[if \{\[exists  parent.parent.parent.input0]\} \{return \[value \[topnode parent.parent.parent.input0].name].translate.z(ref)\} \{return -1\}]"}}
    rotate {{"\[if \{\[exists  parent.parent.parent.input0]\} \{return \[value \[topnode parent.parent.parent.input0].name].rotate.x(ref)\} \{return 0\}]"} {"\[if \{\[exists  parent.parent.parent.input0]\} \{return \[value \[topnode parent.parent.parent.input0].name].rotate.y(ref)\} \{return 0\}]"} {"\[if \{\[exists  parent.parent.parent.input0]\} \{return \[value \[topnode parent.parent.parent.input0].name].rotate.z(ref)\} \{return 0\}]"}}
    scaling {{"\[if \{\[exists  parent.parent.parent.input0]\} \{return \[value \[topnode parent.parent.parent.input0].name].scaling.x(ref)\} \{return 1\}]"} {"\[if \{\[exists  parent.parent.parent.input0]\} \{return \[value \[topnode parent.parent.parent.input0].name].scaling.y(ref)\} \{return 1\}]"} {"\[if \{\[exists  parent.parent.parent.input0]\} \{return \[value \[topnode parent.parent.parent.input0].name].scaling.z(ref)\} \{return 1\}]"}}
    uniform_scale {{"\[if \{\[exists  parent.parent.parent.input0]\} \{return (\[value \[topnode parent.parent.parent.input0].name].uniform_scale(ref)*25)\} \{return 25\}]"}}
    shutteroffset centred
    name cCard3D_1
    tile_color 0x7b1d1dff
    label "ref frame: \[value ref]"
    xpos -135
    ypos 148
    addUserKnob {20 User l parent}
    addUserKnob {22 python_button l "set parent" t "select parent node, and press this button to set the selected node as parent" +INVISIBLE T "n = nuke.selectedNode()\['name'].getValue()\nnuke.thisNode()\['string'].setValue(n)" +STARTLINE}
    addUserKnob {1 string l parent +INVISIBLE}
    string null
    addUserKnob {3 id l "id number"}
    id {{parent.CTimeOffset7.shotnmbr}}
    addUserKnob {3 ref l "ref frame"}
    ref {{parent.CTimeOffset7.time_offset}}
   }
   Transform {
    translate {{"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].translate.x(ref)\}]"} {"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].translate.y(ref)\}]"}}
    rotate {{"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].rotate-\[value parent_gun].rotate(ref)\}]"}}
    scale {{"\[if \{\[value parent_gun]==\"null\"\} \{return 1\} \{return 1+(\[value parent_gun].scale-\[value parent_gun].scale(ref))\}]"}}
    center {{"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].center.x(ref)\}]"} {"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].center.y(ref)\}]"}}
    name GUNMatchMove1
    label "\n"
    xpos -135
    ypos 241
    addUserKnob {20 User l parent}
    addUserKnob {3 ref}
    ref {{parent.CTimeOffset7.ref}}
   }
   Transform {
    translate {{"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].translate.x-\[value parent_env].translate.x(ref)\}]"} {"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].translate.y-\[value parent_env].translate.y(ref)\}]"}}
    rotate {{"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].rotate-\[value parent_env].rotate(ref)\}]"}}
    scale {{"\[if \{\[value parent_gun]==\"null\"\} \{return 1\} \{return 1+(\[value parent_env].scale-\[value parent_env].scale(ref))\}]"}}
    center {{"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].center.x(ref)\}]"} {"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].center.y(ref)\}]"}}
    motionblur {{(mode==2)*0.2}}
    shutter {{FlashMB*(0.175*0.3)}}
    shutteroffset centred
    name ENVMatchMove1
    xpos -135
    ypos 317
    addUserKnob {20 User l parent}
    addUserKnob {3 ref}
    ref {{parent.CTimeOffset7.ref}}
   }
   Transform {
    translate {{"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return -((root.width/2)-(\[value parent_gun].center.x(1)+\[value parent_gun].translate.x(1)))\}]"} {"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return -((root.height/2)-(\[value parent_gun].center.y(1)+\[value parent_gun].translate.y(1)))\}]"}}
    shutteroffset centred
    name Transform_GUNMatchMove3
    label "alignment correction"
    xpos -135
    ypos 405
    addUserKnob {20 User l parent}
    addUserKnob {22 python_button l "set parent" t "select parent node, and press this button to set the selected node as parent" T "n = nuke.selectedNode()\['name'].getValue()\nnuke.thisNode()\['string'].setValue(n)" +STARTLINE}
    addUserKnob {1 string l parent}
    string Transform_MatchMove10
    addUserKnob {3 ref +INVISIBLE}
    ref {{parent.cCard3D_8.ref}}
   }
   Remove {
    operation keep
    channels rgb
    name Remove12
    xpos -135
    ypos 489
   }
push 0
   Switch {
    inputs 2
    which {{parent.Angle_reveal_side.value!=0}}
    name Switch6
    xpos -135
    ypos 676
   }
   Merge2 {
    inputs 3+1
    operation max
    name Merge1
    xpos -135
    ypos 745
   }
   Merge2 {
    inputs 2
    operation plus
    bbox intersection
    name Merge6
    xpos -135
    ypos 1196
   }
push 0
   Switch {
    inputs 2
    which {{"shot\[value count]==0?0:(EnableExtraFrames==1?floor(((frame>=shot\[value count])+(frame<=(shot\[value count]+(4*((mode==1)+(mode==2))))))/2):frame==shot\[value count])"}}
    name cSwitch_3
    xpos -135
    ypos 1359
    addUserKnob {20 User}
    addUserKnob {3 count l "shot number"}
    count {{parent.CTimeOffset7.shotnmbr}}
    addUserKnob {6 shot +STARTLINE}
    shot {{frame==(parent.CTimeOffset7.time_offset+1)}}
   }
   Output {
    name Output1
    xpos -135
    ypos 1861
   }
   CheckerBoard2 {
    inputs 0
    boxsize 204
    name CheckerBoard2
    xpos -1099
    ypos 88
   }
   BlackOutside {
    name BlackOutside2
    xpos -1099
    ypos 160
   }
   Transform {
    scale {{0.05+(0.05*(((parent.DecimalTimeOffset1.decimal-0.5)*2)*ScaleVariationFlash))}}
    center {{root.width/2 x1015 2304} {root.height/2}}
    shutteroffset centred
    name random_size_side1
    xpos -1099
    ypos 211
   }
   Card3D {
    translate {{"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return ((((\[value parent_gun].translate.x(ref)+\[value parent_gun].center.x(ref))/(0.5*root.width))-1)*0.5)\}]\n+\n\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return (((((\[value parent_env].translate.x+\[value parent_env].center.x(ref))-\[value parent_env].translate.x(ref))/(0.5*root.width))-1)*0.5)\}]\n\n"} {"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return ((((\[value parent_gun].translate.y(ref)+\[value parent_gun].center.y(ref))/(0.5*root.height))-1)*(0.5*(root.height/root.width)))\}]\n+\n\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return (((((\[value parent_env].translate.y+\[value parent_env].center.y(ref))-\[value parent_env].translate.y(ref))/(0.5*root.height))-1)*(0.5*(root.height/root.width)))\}]\n\n"} -1}
    rotate {{"\[if \{\[exists  parent.parent.parent.input0]\} \{return \[value \[topnode parent.parent.parent.input0].name].rotate.x(ref)\} \{return 0\}]"} {"\[if \{\[exists  parent.parent.parent.input0]\} \{return \[value \[topnode parent.parent.parent.input0].name].rotate.y(ref)\} \{return 0\}]"} {"\[if \{\[exists  parent.parent.parent.input0]\} \{return \[value \[topnode parent.parent.parent.input0].name].rotate.z(ref)\} \{return 0\}]"}}
    scaling {{"\[if \{\[exists  parent.parent.parent.input0]\} \{return \[value \[topnode parent.parent.parent.input0].name].scaling.x(ref)\} \{return 1\}]"} {"\[if \{\[exists  parent.parent.parent.input0]\} \{return \[value \[topnode parent.parent.parent.input0].name].scaling.y(ref)\} \{return 1\}]"} {"\[if \{\[exists  parent.parent.parent.input0]\} \{return \[value \[topnode parent.parent.parent.input0].name].scaling.z(ref)\} \{return 1\}]"}}
    uniform_scale {{"\[if \{\[exists  parent.parent.parent.input0]\} \{return (\[value \[topnode parent.parent.parent.input0].name].uniform_scale(ref)*25)\} \{return 25\}]"}}
    shutteroffset centred
    name Card3D1_grrr
    xpos -1099
    ypos 346
    addUserKnob {20 User}
    addUserKnob {3 ref}
    ref 14
   }
push 0
   Viewer {
    inputs 2
    frame 22
    frame_range 1-171
    input_number 1
    viewerProcess "sRGB (ACES)"
    name Viewer1
    xpos -874
    ypos 141
   }
   Card3D {
    inputs 0
    translate {{"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return ((((\[value parent_gun].translate.x(ref)+\[value parent_gun].center.x(ref))/(0.5*root.width))-1)*0.5)\}]\n+\n\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return ((((\[value parent_env].translate.x-\[value parent_env].translate.x(ref))/(0.5*root.width))-1)*0.5)\}]\n\n"} {"(   ( (\[value parent_gun].translate.y(ref)+\[value parent_gun].center.y(ref))/(0.5*root.height) )  -1  )*(0.5*(root.height/root.width))"} -1}
    rotate {{"\[if \{\[exists  parent.parent.parent.input0]\} \{return \[value \[topnode parent.parent.parent.input0].name].rotate.x(ref)\} \{return 0\}]"} {"\[if \{\[exists  parent.parent.parent.input0]\} \{return \[value \[topnode parent.parent.parent.input0].name].rotate.y(ref)\} \{return 0\}]"} {"\[if \{\[exists  parent.parent.parent.input0]\} \{return \[value \[topnode parent.parent.parent.input0].name].rotate.z(ref)\} \{return 0\}]"}}
    shutteroffset centred
    name Card3D2_ah
    xpos -891
    ypos 278
    addUserKnob {20 User}
    addUserKnob {3 ref}
    ref 15
   }
  end_group
push $N1040c100
push $N1077a570
  Group {
   inputs 2
   name gunshot1
   label "shot: \[value shotcount]\non frame: \[value shotstart]\n"
   xpos 8093
   ypos -810
   addUserKnob {20 User}
   addUserKnob {3 shotcount l shot}
   shotcount 2
   addUserKnob {3 shotstart l frame +INVISIBLE}
   shotstart {{"shotcount==0 ? 0 : shot\[value shotcount]-1"}}
  }
   BackdropNode {
    inputs 0
    name BackdropNode3
    knobChanged "try:\n    listenedKnobs = \['text', 'position', 'name']\n    node = nuke.thisNode()\n    name = node.knob('name').value()\n    text = node.knob('text').value()\n    position = node.knob('position').value()\n    position = \"<\" + position + \">\"\n    label = node.knob('label').value()\n    \n    if nuke.thisKnob().name() in listenedKnobs:\n        if text == \"\":\n            if node.knob('position').value() == \"left\":\n                node.knob('label').setValue()\n            else:\n                node.knob('label').setValue(position + name)\n        else:\n            if node.knob('position').value() == \"left\":\n                node.knob('label').setValue(text)\n            else:\n                node.knob('label').setValue(position + text)\n                \n    elif nuke.thisKnob().name() == 'font_size':\n        fontSize = node.knob('font_size').value()\n        node.knob('note_font_size').setValue(fontSize)\nexcept:\n    pass"
    tile_color 0x232323ff
    label "<Left><h2> Gunshot"
    note_font_size 31.5
    xpos -698
    ypos -924
    bdwidth 1057
    bdheight 2343
    addUserKnob {20 F_VFX l BackdropNode}
    addUserKnob {43 text l Text}
    text "<h2> Gunshot"
    addUserKnob {7 font_size l "Font Size" R 10 100}
    font_size 31.5
    addUserKnob {4 position l "" -STARTLINE M {Left Center}}
    addUserKnob {26 S01 l " " T " "}
    addUserKnob {22 grow l " <img src=\"F_scalep.png\">" -STARTLINE T "n=nuke.thisNode()\n\ndef grow(node=None,step=50):\n    try:\n        if not node:\n            n=nuke.selectedNode()\n        else:\n            n=node\n            n\['xpos'].setValue(n\['xpos'].getValue()-step)\n            n\['ypos'].setValue(n\['ypos'].getValue()-step)\n            n\['bdwidth'].setValue(n\['bdwidth'].getValue()+step*2)\n            n\['bdheight'].setValue(n\['bdheight'].getValue()+step*2)\n    except:\n        pass\ngrow(n,50)"}
    addUserKnob {22 shrink l " <img src=\"F_scalem.png\">" -STARTLINE T "n=nuke.thisNode()\n\ndef shrink(node=None,step=50):\n    try:\n        if not node:\n            n=nuke.selectedNode()\n        else:\n            n=node\n            n\['xpos'].setValue(n\['xpos'].getValue()+step)\n            n\['ypos'].setValue(n\['ypos'].getValue()+step)\n            n\['bdwidth'].setValue(n\['bdwidth'].getValue()-step*2)\n            n\['bdheight'].setValue(n\['bdheight'].getValue()-step*2)\n    except:\n        pass\nshrink(n,50)"}
    addUserKnob {22 colorandom l " <img src=\"ColorBars.png\">" -STARTLINE T "import colorsys, random\nn=nuke.thisNode()\nR,G,B= colorsys.hsv_to_rgb(random.random(),.1+random.random()*.15,.15+random.random()*.15)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ) )"}
    addUserKnob {22 darkgrey l "<font color=\"#232323\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.0, 0.0, 0.14]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 lightgrey l "<font color=\"#383838\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.0, 0.0, 0.22]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 red l "<font color=\"#8c3838\" size=6>■</font>" T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.0, 0.6, 0.55]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n" +STARTLINE}
    addUserKnob {22 orange l "<font color=\"#b28e59\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.1, 0.5, 0.7]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 yellow l "<font color=\"#ccc766\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.16, 0.5, 0.8]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 green l "<font color=\"#5d995b\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.33, 0.4, 0.6]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 cyan l "<font color=\"#72998f\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.46, 0.25, 0.6]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 blue l "<font color=\"#59687f\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.6, 0.3, 0.5]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 darkblue l "<font color=\"#63628c\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.67, 0.3, 0.55]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 magenta l "<font color=\"#927a99\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.8, 0.2, 0.6]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 pink l "<font color=\"#997a89\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.92, 0.2, 0.6]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {26 S02 l " " T " "}
    addUserKnob {26 Ftools l "" +STARTLINE T "<font color=\"#1C1C1C\"> v1.2 - Franklin VFX - 2018"}
   }
   BackdropNode {
    inputs 0
    name BackdropNode1
    knobChanged "try:\n    listenedKnobs = \['text', 'position', 'name']\n    node = nuke.thisNode()\n    name = node.knob('name').value()\n    text = node.knob('text').value()\n    position = node.knob('position').value()\n    position = \"<\" + position + \">\"\n    label = node.knob('label').value()\n    \n    if nuke.thisKnob().name() in listenedKnobs:\n        if text == \"\":\n            if node.knob('position').value() == \"left\":\n                node.knob('label').setValue()\n            else:\n                node.knob('label').setValue(position + name)\n        else:\n            if node.knob('position').value() == \"left\":\n                node.knob('label').setValue(text)\n            else:\n                node.knob('label').setValue(position + text)\n                \n    elif nuke.thisKnob().name() == 'font_size':\n        fontSize = node.knob('font_size').value()\n        node.knob('note_font_size').setValue(fontSize)\nexcept:\n    pass"
    tile_color 0x927a99ff
    note_font_size 50
    xpos -460
    ypos -257
    bdwidth 435
    bdheight 786
    z_order 1
    addUserKnob {20 F_VFX l BackdropNode}
    addUserKnob {43 text l Text}
    addUserKnob {7 font_size l "Font Size" R 10 100}
    font_size 50
    addUserKnob {4 position l "" -STARTLINE M {Left Center}}
    addUserKnob {26 S01 l " " T " "}
    addUserKnob {22 grow l " <img src=\"F_scalep.png\">" -STARTLINE T "n=nuke.thisNode()\n\ndef grow(node=None,step=50):\n    try:\n        if not node:\n            n=nuke.selectedNode()\n        else:\n            n=node\n            n\['xpos'].setValue(n\['xpos'].getValue()-step)\n            n\['ypos'].setValue(n\['ypos'].getValue()-step)\n            n\['bdwidth'].setValue(n\['bdwidth'].getValue()+step*2)\n            n\['bdheight'].setValue(n\['bdheight'].getValue()+step*2)\n    except:\n        pass\ngrow(n,50)"}
    addUserKnob {22 shrink l " <img src=\"F_scalem.png\">" -STARTLINE T "n=nuke.thisNode()\n\ndef shrink(node=None,step=50):\n    try:\n        if not node:\n            n=nuke.selectedNode()\n        else:\n            n=node\n            n\['xpos'].setValue(n\['xpos'].getValue()+step)\n            n\['ypos'].setValue(n\['ypos'].getValue()+step)\n            n\['bdwidth'].setValue(n\['bdwidth'].getValue()-step*2)\n            n\['bdheight'].setValue(n\['bdheight'].getValue()-step*2)\n    except:\n        pass\nshrink(n,50)"}
    addUserKnob {22 colorandom l " <img src=\"ColorBars.png\">" -STARTLINE T "import colorsys, random\nn=nuke.thisNode()\nR,G,B= colorsys.hsv_to_rgb(random.random(),.1+random.random()*.15,.15+random.random()*.15)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ) )"}
    addUserKnob {22 darkgrey l "<font color=\"#232323\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.0, 0.0, 0.14]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 lightgrey l "<font color=\"#383838\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.0, 0.0, 0.22]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 red l "<font color=\"#8c3838\" size=6>■</font>" T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.0, 0.6, 0.55]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n" +STARTLINE}
    addUserKnob {22 orange l "<font color=\"#b28e59\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.1, 0.5, 0.7]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 yellow l "<font color=\"#ccc766\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.16, 0.5, 0.8]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 green l "<font color=\"#5d995b\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.33, 0.4, 0.6]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 cyan l "<font color=\"#72998f\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.46, 0.25, 0.6]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 blue l "<font color=\"#59687f\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.6, 0.3, 0.5]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 darkblue l "<font color=\"#63628c\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.67, 0.3, 0.55]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 magenta l "<font color=\"#927a99\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.8, 0.2, 0.6]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 pink l "<font color=\"#997a89\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.92, 0.2, 0.6]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {26 S02 l " " T " "}
    addUserKnob {26 Ftools l "" +STARTLINE T "<font color=\"#1C1C1C\"> v1.2 - Franklin VFX - 2018"}
   }
   Constant {
    inputs 0
    channels rgb
    name Constant4
    xpos -648
    ypos 987
   }
   AdjBBox {
    numpixels {{size_bbox}}
    name AdjBBox4
    xpos -648
    ypos 1120
   }
   Dot {
    name Dot19
    xpos -614
    ypos 1200
   }
   Axis3 {
    inputs 0
    useMatrix true
    matrix {
        {{parent.cCard3D_1.matrix} {parent.cCard3D_1.matrix} {parent.cCard3D_1.matrix} {parent.cCard3D_1.matrix}}
        {{parent.cCard3D_1.matrix} {parent.cCard3D_1.matrix} {parent.cCard3D_1.matrix} {parent.cCard3D_1.matrix}}
        {{parent.cCard3D_1.matrix} {parent.cCard3D_1.matrix} {parent.cCard3D_1.matrix} {parent.cCard3D_1.matrix}}
        {{parent.cCard3D_1.matrix} {parent.cCard3D_1.matrix} {parent.cCard3D_1.matrix} {parent.cCard3D_1.matrix}}
      }
    name Axis3
    xpos -207
    ypos 48
   }
set N11fb9650 [stack 0]
push 0
   Input {
    inputs 0
    name Side
    xpos -135
    ypos -1101
   }
   TimeOffset {
    time_offset {{"shotnmbr==0 ? 0 : shot\[value shotnmbr]-1"}}
    time ""
    name CTimeOffset7
    label "shot: \[value shotnmbr]\non frame \[value time_offset]"
    xpos -135
    ypos -852
    addUserKnob {20 User}
    addUserKnob {3 shotnmbr l "shot "}
    shotnmbr {{shotcount}}
    addUserKnob {3 ref}
    ref {{time_offset+1}}
   }
   Group {
    name DecimalTimeOffset1
    tile_color 0xafa35dff
    label "random asset\n(based on brighness)"
    note_font "Bitstream Vera Sans Bold"
    xpos -135
    ypos -689
    addUserKnob {20 User}
    addUserKnob {7 decimal l "time offset (decimal)"}
    decimal {{"floor\n(\n  (\n  (  ((((random((shotcount*823)+(seed*212))-0.5)*  ((1-( abs(brighness_flare-0.5) )*2)+1)  )+0.5)*0.5)  * (1-brighness_flare)  )\n\n  +\n\n  (  (((((random((shotcount*823)+(seed*212))-0.5)*  ((1-( abs(brighness_flare-0.5) )*2)+1)  )+0.5)*0.5)+0.5)  * (brighness_flare)  )\n  )\n  *1000\n)\n\n/1000"}}
    addUserKnob {26 ""}
    addUserKnob {26 _1 l "" +STARTLINE T "Chris Fryer | 2020\nupdated by Yorben Otto | 2024"}
   }
    Input {
     inputs 0
     name Input1
     xpos 426
     ypos -793
    }
    TimeOffset {
     time_offset {{(-floor(parent.decimal))*(DecimalTimeOffset1.decimal<0)}}
     time ""
     name TimeOffset1
     selected true
     xpos 426
     ypos -674
    }
    Dot {
     name Dot6
     selected true
     xpos 460
     ypos -635
    }
set N11ff8ce0 [stack 0]
    Dot {
     name Dot5
     selected true
     xpos 350
     ypos -635
    }
    Dot {
     name Dot7
     selected true
     xpos 350
     ypos -365
    }
push $N11ff8ce0
    Dot {
     name Dot1
     selected true
     xpos 572
     ypos -635
    }
    TimeBlur {
     divisions 2
     shutter {{(parent.decimal-(floor(parent.decimal)))*2}}
     shutteroffset start
     shuttercustomoffset 0
     name TimeBlur1
     selected true
     xpos 538
     ypos -558
    }
    Dot {
     name Dot2
     selected true
     xpos 572
     ypos -490
    }
push $N11ff8ce0
    TimeBlur {
     divisions 2
     shutter {{parent.decimal*2}}
     shutteroffset start
     shuttercustomoffset 0
     name TimeBlur8
     selected true
     xpos 426
     ypos -556
    }
    Switch {
     inputs 2
     which {{parent.decimal<0}}
     name Switch1
     selected true
     xpos 426
     ypos -494
    }
    Multiply {
     value {{parent.TimeBlur8.divisions}}
     name Multiply6
     selected true
     xpos 426
     ypos -436
    }
    Merge2 {
     inputs 2
     operation from
     name Merge6
     selected true
     xpos 426
     ypos -369
    }
set N1203adb0 [stack 0]
    Output {
     name Output1
     xpos 426
     ypos -221
    }
push $N1203adb0
push $N1203adb0
    Viewer {
     inputs 2
     frame_range 1-100
     viewerProcess "sRGB (default)"
     name Viewer1
     xpos 675
     ypos -246
    }
   end_group
   NoTimeBlur {
    name NoTimeBlur6
    xpos -135
    ypos -608
   }
   Dot {
    name Dot21
    xpos -101
    ypos -449
   }
set N120d9c20 [stack 0]
   Dot {
    name Dot22
    xpos -245
    ypos -449
   }
   Multiply {
    value {{math_matrix.result_y_flash(parent.CTimeOffset7.ref)}}
    name Angle_reveal_top
    label TOP
    xpos -279
    ypos -371
   }
   Transform {
    scale {{0.05+(0.05*(((parent.DecimalTimeOffset1.decimal-0.5)*2)*ScaleVariationFlash))}}
    center {{root.width/2 x1015 2304} {root.height/2}}
    shutteroffset centred
    name random_size_top
    xpos -279
    ypos -136
   }
   Card3D {
    inputs 3
    rot_order ZYX
    translate {0 0 0}
    rotate {90 0 0}
    shutteroffset centred
    name cCard3D5
    tile_color 0x7b1d1dff
    xpos -279
    ypos 153
    addUserKnob {20 User l parent}
    addUserKnob {22 python_button l "set parent" t "select parent node, and press this button to set the selected node as parent" +INVISIBLE T "n = nuke.selectedNode()\['name'].getValue()\nnuke.thisNode()\['string'].setValue(n)" +STARTLINE}
    addUserKnob {1 string l parent +INVISIBLE}
    string null
    addUserKnob {3 ref l "ref frame"}
    ref 1015
   }
   Transform {
    translate {{"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].translate.x(ref)\}]"} {"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].translate.y(ref)\}]"}}
    rotate {{"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].rotate-\[value parent_gun].rotate(ref)\}]"}}
    scale {{"\[if \{\[value parent_gun]==\"null\"\} \{return 1\} \{return 1+(\[value parent_gun].scale-\[value parent_gun].scale(ref))\}]"}}
    center {{"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].center.x(ref)\}]"} {"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].center.y(ref)\}]"}}
    name GUNMatchMove
    label "\n"
    xpos -279
    ypos 247
    addUserKnob {20 User l parent}
    addUserKnob {3 ref}
    ref {{parent.CTimeOffset7.ref}}
   }
   Transform {
    translate {{"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].translate.x-\[value parent_env].translate.x(ref)\}]"} {"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].translate.y-\[value parent_env].translate.y(ref)\}]"}}
    rotate {{"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].rotate-\[value parent_env].rotate(ref)\}]"}}
    scale {{"\[if \{\[value parent_gun]==\"null\"\} \{return 1\} \{return 1+(\[value parent_env].scale-\[value parent_env].scale(ref))\}]"}}
    center {{"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].center.x(ref)\}]"} {"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].center.y(ref)\}]"}}
    motionblur {{(mode==2)*0.2}}
    shutter {{FlashMB*(0.175*0.3)}}
    shutteroffset centred
    name ENVMatchMove
    xpos -279
    ypos 321
    addUserKnob {20 User l parent}
    addUserKnob {3 ref}
    ref {{parent.CTimeOffset7.ref}}
   }
   Transform {
    translate {{"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return -((root.width/2)-(\[value parent_gun].center.x(1)+\[value parent_gun].translate.x(1)))\}]"} {"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return -((root.height/2)-(\[value parent_gun].center.y(1)+\[value parent_gun].translate.y(1)))\}]"}}
    shutteroffset centred
    name Transform_GUNMatchMove1
    label "alignment correction"
    xpos -279
    ypos 408
    addUserKnob {20 User l parent}
    addUserKnob {22 python_button l "set parent" t "select parent node, and press this button to set the selected node as parent" T "n = nuke.selectedNode()\['name'].getValue()\nnuke.thisNode()\['string'].setValue(n)" +STARTLINE}
    addUserKnob {1 string l parent}
    string Transform_MatchMove10
    addUserKnob {3 ref +INVISIBLE}
    ref {{parent.cCard3D_8.ref}}
   }
   Remove {
    operation keep
    channels rgb
    name Remove10
    xpos -279
    ypos 489
   }
push 0
   Switch {
    inputs 2
    which {{parent.Angle_reveal_top.value!=0}}
    name Switch4
    xpos -279
    ypos 670
   }
   Dot {
    name Dot1
    xpos -245
    ypos 717
   }
push 0
push $N11fb9650
push 0
   Input {
    inputs 0
    name Front
    xpos -430
    ypos -1102
    number 1
   }
   TimeOffset {
    time_offset {{"shotnmbr==0 ? 0 : shot\[value shotnmbr]-1"}}
    time ""
    name CTimeOffset8
    xpos -430
    ypos -840
    addUserKnob {20 User}
    addUserKnob {3 shotnmbr l "shot "}
    shotnmbr {{parent.CTimeOffset7.shotnmbr}}
   }
   Group {
    name DecimalTimeOffset
    tile_color 0xafa35dff
    label "random asset\n(based on brighness)"
    note_font "Bitstream Vera Sans Bold"
    xpos -430
    ypos -693
    addUserKnob {20 User}
    addUserKnob {7 decimal l "time offset (decimal)"}
    decimal {{"floor\n(\n  (\n  (  ((((random((shotcount*823)+(seed*212))-0.5)*  ((1-( abs(brighness_flare-0.5) )*2)+1)  )+0.5)*0.5)  * (1-brighness_flare)  )\n\n  +\n\n  (  (((((random((shotcount*823)+(seed*212))-0.5)*  ((1-( abs(brighness_flare-0.5) )*2)+1)  )+0.5)*0.5)+0.5)  * (brighness_flare)  )\n  )\n  *1000\n)\n\n/1000"}}
    addUserKnob {26 ""}
    addUserKnob {26 _1 l "" +STARTLINE T "Chris Fryer | 2020\nupdated by Yorben Otto | 2024"}
   }
    Input {
     inputs 0
     name Input1
     xpos 426
     ypos -793
    }
    TimeOffset {
     time_offset {{(-floor(parent.decimal))*(DecimalTimeOffset.decimal<0)}}
     time ""
     name TimeOffset1
     selected true
     xpos 426
     ypos -674
    }
    Dot {
     name Dot6
     selected true
     xpos 460
     ypos -635
    }
set N12180dc0 [stack 0]
    Dot {
     name Dot5
     selected true
     xpos 350
     ypos -635
    }
    Dot {
     name Dot7
     selected true
     xpos 350
     ypos -365
    }
push $N12180dc0
    Dot {
     name Dot1
     selected true
     xpos 572
     ypos -635
    }
    TimeBlur {
     divisions 2
     shutter {{(parent.decimal-(floor(parent.decimal)))*2}}
     shutteroffset start
     shuttercustomoffset 0
     name TimeBlur1
     selected true
     xpos 538
     ypos -558
    }
    Dot {
     name Dot2
     selected true
     xpos 572
     ypos -490
    }
push $N12180dc0
    TimeBlur {
     divisions 2
     shutter {{parent.decimal*2}}
     shutteroffset start
     shuttercustomoffset 0
     name TimeBlur8
     selected true
     xpos 426
     ypos -556
    }
    Switch {
     inputs 2
     which {{parent.decimal<0}}
     name Switch1
     selected true
     xpos 426
     ypos -494
    }
    Multiply {
     value {{parent.TimeBlur8.divisions}}
     name Multiply6
     selected true
     xpos 426
     ypos -436
    }
    Merge2 {
     inputs 2
     operation from
     name Merge6
     selected true
     xpos 426
     ypos -369
    }
set N121c2e90 [stack 0]
    Output {
     name Output1
     xpos 426
     ypos -221
    }
push $N121c2e90
push $N121c2e90
    Viewer {
     inputs 2
     frame_range 1-100
     viewerProcess "sRGB (default)"
     name Viewer1
     xpos 675
     ypos -246
    }
   end_group
   NoTimeBlur {
    name NoTimeBlur7
    xpos -430
    ypos -617
   }
   Multiply {
    value {{math_matrix.result_x_flash(parent.CTimeOffset7.ref)}}
    name Angle_reveal_front
    label FRONT
    xpos -430
    ypos -375
   }
   Transform {
    scale {{0.05+(0.05*(((parent.DecimalTimeOffset1.decimal-0.5)*2)*ScaleVariationFlash))}}
    center {{root.width/2 x1015 2304} {root.height/2}}
    shutteroffset centred
    name random_size_front
    xpos -430
    ypos -134
   }
   Card3D {
    inputs 3
    rot_order ZYX
    translate {0 0 0}
    rotate {0 90 0}
    shutteroffset centred
    name cCard3D6
    tile_color 0x7b1d1dff
    xpos -430
    ypos 150
    addUserKnob {20 User l parent}
    addUserKnob {22 python_button l "set parent" t "select parent node, and press this button to set the selected node as parent" +INVISIBLE T "n = nuke.selectedNode()\['name'].getValue()\nnuke.thisNode()\['string'].setValue(n)" +STARTLINE}
    addUserKnob {1 string l parent +INVISIBLE}
    string null
    addUserKnob {3 ref l "ref frame"}
    ref 1015
   }
   Transform {
    translate {{"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].translate.x(ref)\}]"} {"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].translate.y(ref)\}]"}}
    rotate {{"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].rotate-\[value parent_gun].rotate(ref)\}]"}}
    scale {{"\[if \{\[value parent_gun]==\"null\"\} \{return 1\} \{return 1+(\[value parent_gun].scale-\[value parent_gun].scale(ref))\}]"}}
    center {{"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].center.x(ref)\}]"} {"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].center.y(ref)\}]"}}
    name GUNMatchMove2
    label "\n"
    xpos -430
    ypos 248
    addUserKnob {20 User l parent}
    addUserKnob {3 ref}
    ref {{parent.CTimeOffset7.ref}}
   }
   Transform {
    translate {{"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].translate.x-\[value parent_env].translate.x(ref)\}]"} {"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].translate.y-\[value parent_env].translate.y(ref)\}]"}}
    rotate {{"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].rotate-\[value parent_env].rotate(ref)\}]"}}
    scale {{"\[if \{\[value parent_gun]==\"null\"\} \{return 1\} \{return 1+(\[value parent_env].scale-\[value parent_env].scale(ref))\}]"}}
    center {{"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].center.x(ref)\}]"} {"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].center.y(ref)\}]"}}
    motionblur {{(mode==2)*0.2}}
    shutter {{FlashMB*(0.175*0.3)}}
    shutteroffset centred
    name ENVMatchMove2
    xpos -430
    ypos 320
    addUserKnob {20 User l parent}
    addUserKnob {3 ref}
    ref {{parent.CTimeOffset7.ref}}
   }
   Transform {
    translate {{"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return -((root.width/2)-(\[value parent_gun].center.x(1)+\[value parent_gun].translate.x(1)))\}]"} {"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return -((root.height/2)-(\[value parent_gun].center.y(1)+\[value parent_gun].translate.y(1)))\}]"}}
    shutteroffset centred
    name Transform_GUNMatchMove2
    label "alignment correction"
    xpos -430
    ypos 407
    addUserKnob {20 User l parent}
    addUserKnob {22 python_button l "set parent" t "select parent node, and press this button to set the selected node as parent" T "n = nuke.selectedNode()\['name'].getValue()\nnuke.thisNode()\['string'].setValue(n)" +STARTLINE}
    addUserKnob {1 string l parent}
    string Transform_MatchMove10
    addUserKnob {3 ref +INVISIBLE}
    ref {{parent.cCard3D_8.ref}}
   }
   Remove {
    operation keep
    channels rgb
    name Remove11
    xpos -430
    ypos 487
   }
push 0
   Switch {
    inputs 2
    which {{parent.Angle_reveal_front.value!=0}}
    name Switch5
    xpos -430
    ypos 675
   }
   Dot {
    name Dot2
    xpos -396
    ypos 749
   }
push $N120d9c20
   Multiply {
    value {{math_matrix.result_z_flash(parent.CTimeOffset7.ref)}}
    name Angle_reveal_side
    label SIDE
    xpos -135
    ypos -372
   }
   Transform {
    scale {{0.05+(0.05*(((parent.DecimalTimeOffset1.decimal-0.5)*2)*ScaleVariationFlash))}}
    center {{root.width/2 x1015 2304} {root.height/2}}
    shutteroffset centred
    name random_size_side
    xpos -135
    ypos -136
   }
   Card3D {
    translate {{"\[if \{\[exists  parent.parent.parent.input0]\} \{return \[value \[topnode parent.parent.parent.input0].name].translate.x(ref)\} \{return 0\}]"} {"\[if \{\[exists  parent.parent.parent.input0]\} \{return \[value \[topnode parent.parent.parent.input0].name].translate.y(ref)\} \{return 0\}]"} {"\[if \{\[exists  parent.parent.parent.input0]\} \{return \[value \[topnode parent.parent.parent.input0].name].translate.z(ref)\} \{return -1\}]"}}
    rotate {{"\[if \{\[exists  parent.parent.parent.input0]\} \{return \[value \[topnode parent.parent.parent.input0].name].rotate.x(ref)\} \{return 0\}]"} {"\[if \{\[exists  parent.parent.parent.input0]\} \{return \[value \[topnode parent.parent.parent.input0].name].rotate.y(ref)\} \{return 0\}]"} {"\[if \{\[exists  parent.parent.parent.input0]\} \{return \[value \[topnode parent.parent.parent.input0].name].rotate.z(ref)\} \{return 0\}]"}}
    scaling {{"\[if \{\[exists  parent.parent.parent.input0]\} \{return \[value \[topnode parent.parent.parent.input0].name].scaling.x(ref)\} \{return 1\}]"} {"\[if \{\[exists  parent.parent.parent.input0]\} \{return \[value \[topnode parent.parent.parent.input0].name].scaling.y(ref)\} \{return 1\}]"} {"\[if \{\[exists  parent.parent.parent.input0]\} \{return \[value \[topnode parent.parent.parent.input0].name].scaling.z(ref)\} \{return 1\}]"}}
    uniform_scale {{"\[if \{\[exists  parent.parent.parent.input0]\} \{return (\[value \[topnode parent.parent.parent.input0].name].uniform_scale(ref)*25)\} \{return 25\}]"}}
    shutteroffset centred
    name cCard3D_1
    tile_color 0x7b1d1dff
    label "ref frame: \[value ref]"
    xpos -135
    ypos 147
    addUserKnob {20 User l parent}
    addUserKnob {22 python_button l "set parent" t "select parent node, and press this button to set the selected node as parent" +INVISIBLE T "n = nuke.selectedNode()\['name'].getValue()\nnuke.thisNode()\['string'].setValue(n)" +STARTLINE}
    addUserKnob {1 string l parent +INVISIBLE}
    string null
    addUserKnob {3 id l "id number"}
    id {{parent.CTimeOffset7.shotnmbr}}
    addUserKnob {3 ref l "ref frame"}
    ref {{parent.CTimeOffset7.time_offset}}
   }
   Transform {
    translate {{"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].translate.x(ref)\}]"} {"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].translate.y(ref)\}]"}}
    rotate {{"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].rotate-\[value parent_gun].rotate(ref)\}]"}}
    scale {{"\[if \{\[value parent_gun]==\"null\"\} \{return 1\} \{return 1+(\[value parent_gun].scale-\[value parent_gun].scale(ref))\}]"}}
    center {{"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].center.x(ref)\}]"} {"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].center.y(ref)\}]"}}
    name GUNMatchMove1
    label "\n"
    xpos -135
    ypos 241
    addUserKnob {20 User l parent}
    addUserKnob {3 ref}
    ref {{parent.CTimeOffset7.ref}}
   }
   Transform {
    translate {{"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].translate.x-\[value parent_env].translate.x(ref)\}]"} {"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].translate.y-\[value parent_env].translate.y(ref)\}]"}}
    rotate {{"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].rotate-\[value parent_env].rotate(ref)\}]"}}
    scale {{"\[if \{\[value parent_gun]==\"null\"\} \{return 1\} \{return 1+(\[value parent_env].scale-\[value parent_env].scale(ref))\}]"}}
    center {{"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].center.x(ref)\}]"} {"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].center.y(ref)\}]"}}
    motionblur {{(mode==2)*0.2}}
    shutter {{FlashMB*(0.175*0.3)}}
    shutteroffset centred
    name ENVMatchMove1
    xpos -135
    ypos 317
    addUserKnob {20 User l parent}
    addUserKnob {3 ref}
    ref {{parent.CTimeOffset7.ref}}
   }
   Transform {
    translate {{"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return -((root.width/2)-(\[value parent_gun].center.x(1)+\[value parent_gun].translate.x(1)))\}]"} {"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return -((root.height/2)-(\[value parent_gun].center.y(1)+\[value parent_gun].translate.y(1)))\}]"}}
    shutteroffset centred
    name Transform_GUNMatchMove3
    label "alignment correction"
    xpos -135
    ypos 405
    addUserKnob {20 User l parent}
    addUserKnob {22 python_button l "set parent" t "select parent node, and press this button to set the selected node as parent" T "n = nuke.selectedNode()\['name'].getValue()\nnuke.thisNode()\['string'].setValue(n)" +STARTLINE}
    addUserKnob {1 string l parent}
    string Transform_MatchMove10
    addUserKnob {3 ref +INVISIBLE}
    ref {{parent.cCard3D_8.ref}}
   }
   Remove {
    operation keep
    channels rgb
    name Remove12
    xpos -135
    ypos 489
   }
push 0
   Switch {
    inputs 2
    which {{parent.Angle_reveal_side.value!=0}}
    name Switch6
    xpos -135
    ypos 676
   }
   Merge2 {
    inputs 3+1
    operation max
    name Merge1
    xpos -135
    ypos 745
   }
   Merge2 {
    inputs 2
    operation plus
    bbox intersection
    name Merge6
    xpos -135
    ypos 1196
   }
push 0
   Switch {
    inputs 2
    which {{"shot\[value count]==0?0:(EnableExtraFrames==1?floor(((frame>=shot\[value count])+(frame<=(shot\[value count]+(4*((mode==1)+(mode==2))))))/2):frame==shot\[value count])"}}
    name cSwitch_3
    xpos -135
    ypos 1359
    addUserKnob {20 User}
    addUserKnob {3 count l "shot number"}
    count {{parent.CTimeOffset7.shotnmbr}}
    addUserKnob {6 shot +STARTLINE}
    shot {{frame==(parent.CTimeOffset7.time_offset+1)}}
   }
   Output {
    name Output1
    xpos -135
    ypos 1861
   }
  end_group
push $N10416e30
push $N107846e0
  Group {
   inputs 2
   name gunshot4
   label "shot: \[value shotcount]\non frame: \[value shotstart]\n"
   xpos 8532
   ypos -810
   addUserKnob {20 User}
   addUserKnob {3 shotcount l shot}
   shotcount 4
   addUserKnob {3 shotstart l frame +INVISIBLE}
   shotstart {{"shotcount==0 ? 0 : shot\[value shotcount]-1"}}
  }
   BackdropNode {
    inputs 0
    name BackdropNode3
    knobChanged "try:\n    listenedKnobs = \['text', 'position', 'name']\n    node = nuke.thisNode()\n    name = node.knob('name').value()\n    text = node.knob('text').value()\n    position = node.knob('position').value()\n    position = \"<\" + position + \">\"\n    label = node.knob('label').value()\n    \n    if nuke.thisKnob().name() in listenedKnobs:\n        if text == \"\":\n            if node.knob('position').value() == \"left\":\n                node.knob('label').setValue()\n            else:\n                node.knob('label').setValue(position + name)\n        else:\n            if node.knob('position').value() == \"left\":\n                node.knob('label').setValue(text)\n            else:\n                node.knob('label').setValue(position + text)\n                \n    elif nuke.thisKnob().name() == 'font_size':\n        fontSize = node.knob('font_size').value()\n        node.knob('note_font_size').setValue(fontSize)\nexcept:\n    pass"
    tile_color 0x232323ff
    label "<Left><h2> Gunshot"
    note_font_size 31.5
    xpos -698
    ypos -924
    bdwidth 1057
    bdheight 2343
    addUserKnob {20 F_VFX l BackdropNode}
    addUserKnob {43 text l Text}
    text "<h2> Gunshot"
    addUserKnob {7 font_size l "Font Size" R 10 100}
    font_size 31.5
    addUserKnob {4 position l "" -STARTLINE M {Left Center}}
    addUserKnob {26 S01 l " " T " "}
    addUserKnob {22 grow l " <img src=\"F_scalep.png\">" -STARTLINE T "n=nuke.thisNode()\n\ndef grow(node=None,step=50):\n    try:\n        if not node:\n            n=nuke.selectedNode()\n        else:\n            n=node\n            n\['xpos'].setValue(n\['xpos'].getValue()-step)\n            n\['ypos'].setValue(n\['ypos'].getValue()-step)\n            n\['bdwidth'].setValue(n\['bdwidth'].getValue()+step*2)\n            n\['bdheight'].setValue(n\['bdheight'].getValue()+step*2)\n    except:\n        pass\ngrow(n,50)"}
    addUserKnob {22 shrink l " <img src=\"F_scalem.png\">" -STARTLINE T "n=nuke.thisNode()\n\ndef shrink(node=None,step=50):\n    try:\n        if not node:\n            n=nuke.selectedNode()\n        else:\n            n=node\n            n\['xpos'].setValue(n\['xpos'].getValue()+step)\n            n\['ypos'].setValue(n\['ypos'].getValue()+step)\n            n\['bdwidth'].setValue(n\['bdwidth'].getValue()-step*2)\n            n\['bdheight'].setValue(n\['bdheight'].getValue()-step*2)\n    except:\n        pass\nshrink(n,50)"}
    addUserKnob {22 colorandom l " <img src=\"ColorBars.png\">" -STARTLINE T "import colorsys, random\nn=nuke.thisNode()\nR,G,B= colorsys.hsv_to_rgb(random.random(),.1+random.random()*.15,.15+random.random()*.15)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ) )"}
    addUserKnob {22 darkgrey l "<font color=\"#232323\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.0, 0.0, 0.14]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 lightgrey l "<font color=\"#383838\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.0, 0.0, 0.22]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 red l "<font color=\"#8c3838\" size=6>■</font>" T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.0, 0.6, 0.55]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n" +STARTLINE}
    addUserKnob {22 orange l "<font color=\"#b28e59\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.1, 0.5, 0.7]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 yellow l "<font color=\"#ccc766\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.16, 0.5, 0.8]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 green l "<font color=\"#5d995b\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.33, 0.4, 0.6]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 cyan l "<font color=\"#72998f\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.46, 0.25, 0.6]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 blue l "<font color=\"#59687f\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.6, 0.3, 0.5]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 darkblue l "<font color=\"#63628c\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.67, 0.3, 0.55]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 magenta l "<font color=\"#927a99\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.8, 0.2, 0.6]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 pink l "<font color=\"#997a89\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.92, 0.2, 0.6]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {26 S02 l " " T " "}
    addUserKnob {26 Ftools l "" +STARTLINE T "<font color=\"#1C1C1C\"> v1.2 - Franklin VFX - 2018"}
   }
   BackdropNode {
    inputs 0
    name BackdropNode1
    knobChanged "try:\n    listenedKnobs = \['text', 'position', 'name']\n    node = nuke.thisNode()\n    name = node.knob('name').value()\n    text = node.knob('text').value()\n    position = node.knob('position').value()\n    position = \"<\" + position + \">\"\n    label = node.knob('label').value()\n    \n    if nuke.thisKnob().name() in listenedKnobs:\n        if text == \"\":\n            if node.knob('position').value() == \"left\":\n                node.knob('label').setValue()\n            else:\n                node.knob('label').setValue(position + name)\n        else:\n            if node.knob('position').value() == \"left\":\n                node.knob('label').setValue(text)\n            else:\n                node.knob('label').setValue(position + text)\n                \n    elif nuke.thisKnob().name() == 'font_size':\n        fontSize = node.knob('font_size').value()\n        node.knob('note_font_size').setValue(fontSize)\nexcept:\n    pass"
    tile_color 0x927a99ff
    note_font_size 50
    xpos -460
    ypos -257
    bdwidth 435
    bdheight 786
    z_order 1
    addUserKnob {20 F_VFX l BackdropNode}
    addUserKnob {43 text l Text}
    addUserKnob {7 font_size l "Font Size" R 10 100}
    font_size 50
    addUserKnob {4 position l "" -STARTLINE M {Left Center}}
    addUserKnob {26 S01 l " " T " "}
    addUserKnob {22 grow l " <img src=\"F_scalep.png\">" -STARTLINE T "n=nuke.thisNode()\n\ndef grow(node=None,step=50):\n    try:\n        if not node:\n            n=nuke.selectedNode()\n        else:\n            n=node\n            n\['xpos'].setValue(n\['xpos'].getValue()-step)\n            n\['ypos'].setValue(n\['ypos'].getValue()-step)\n            n\['bdwidth'].setValue(n\['bdwidth'].getValue()+step*2)\n            n\['bdheight'].setValue(n\['bdheight'].getValue()+step*2)\n    except:\n        pass\ngrow(n,50)"}
    addUserKnob {22 shrink l " <img src=\"F_scalem.png\">" -STARTLINE T "n=nuke.thisNode()\n\ndef shrink(node=None,step=50):\n    try:\n        if not node:\n            n=nuke.selectedNode()\n        else:\n            n=node\n            n\['xpos'].setValue(n\['xpos'].getValue()+step)\n            n\['ypos'].setValue(n\['ypos'].getValue()+step)\n            n\['bdwidth'].setValue(n\['bdwidth'].getValue()-step*2)\n            n\['bdheight'].setValue(n\['bdheight'].getValue()-step*2)\n    except:\n        pass\nshrink(n,50)"}
    addUserKnob {22 colorandom l " <img src=\"ColorBars.png\">" -STARTLINE T "import colorsys, random\nn=nuke.thisNode()\nR,G,B= colorsys.hsv_to_rgb(random.random(),.1+random.random()*.15,.15+random.random()*.15)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ) )"}
    addUserKnob {22 darkgrey l "<font color=\"#232323\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.0, 0.0, 0.14]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 lightgrey l "<font color=\"#383838\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.0, 0.0, 0.22]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 red l "<font color=\"#8c3838\" size=6>■</font>" T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.0, 0.6, 0.55]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n" +STARTLINE}
    addUserKnob {22 orange l "<font color=\"#b28e59\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.1, 0.5, 0.7]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 yellow l "<font color=\"#ccc766\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.16, 0.5, 0.8]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 green l "<font color=\"#5d995b\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.33, 0.4, 0.6]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 cyan l "<font color=\"#72998f\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.46, 0.25, 0.6]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 blue l "<font color=\"#59687f\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.6, 0.3, 0.5]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 darkblue l "<font color=\"#63628c\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.67, 0.3, 0.55]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 magenta l "<font color=\"#927a99\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.8, 0.2, 0.6]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 pink l "<font color=\"#997a89\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.92, 0.2, 0.6]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {26 S02 l " " T " "}
    addUserKnob {26 Ftools l "" +STARTLINE T "<font color=\"#1C1C1C\"> v1.2 - Franklin VFX - 2018"}
   }
   Constant {
    inputs 0
    channels rgb
    name Constant4
    xpos -648
    ypos 987
   }
   AdjBBox {
    numpixels {{size_bbox}}
    name AdjBBox4
    xpos -648
    ypos 1120
   }
   Dot {
    name Dot19
    xpos -614
    ypos 1200
   }
   Axis3 {
    inputs 0
    useMatrix true
    matrix {
        {{parent.cCard3D_1.matrix} {parent.cCard3D_1.matrix} {parent.cCard3D_1.matrix} {parent.cCard3D_1.matrix}}
        {{parent.cCard3D_1.matrix} {parent.cCard3D_1.matrix} {parent.cCard3D_1.matrix} {parent.cCard3D_1.matrix}}
        {{parent.cCard3D_1.matrix} {parent.cCard3D_1.matrix} {parent.cCard3D_1.matrix} {parent.cCard3D_1.matrix}}
        {{parent.cCard3D_1.matrix} {parent.cCard3D_1.matrix} {parent.cCard3D_1.matrix} {parent.cCard3D_1.matrix}}
      }
    name Axis3
    xpos -207
    ypos 48
   }
set N123b0c30 [stack 0]
push 0
   Input {
    inputs 0
    name Side
    xpos -135
    ypos -1101
   }
   TimeOffset {
    time_offset {{"shotnmbr==0 ? 0 : shot\[value shotnmbr]-1"}}
    time ""
    name CTimeOffset7
    label "shot: \[value shotnmbr]\non frame \[value time_offset]"
    xpos -135
    ypos -852
    addUserKnob {20 User}
    addUserKnob {3 shotnmbr l "shot "}
    shotnmbr {{shotcount}}
    addUserKnob {3 ref}
    ref {{time_offset+1}}
   }
   Group {
    name DecimalTimeOffset1
    tile_color 0xafa35dff
    label "random asset\n(based on brighness)"
    note_font "Bitstream Vera Sans Bold"
    xpos -135
    ypos -689
    addUserKnob {20 User}
    addUserKnob {7 decimal l "time offset (decimal)"}
    decimal {{"floor\n(\n  (\n  (  ((((random((shotcount*823)+(seed*212))-0.5)*  ((1-( abs(brighness_flare-0.5) )*2)+1)  )+0.5)*0.5)  * (1-brighness_flare)  )\n\n  +\n\n  (  (((((random((shotcount*823)+(seed*212))-0.5)*  ((1-( abs(brighness_flare-0.5) )*2)+1)  )+0.5)*0.5)+0.5)  * (brighness_flare)  )\n  )\n  *1000\n)\n\n/1000"}}
    addUserKnob {26 ""}
    addUserKnob {26 _1 l "" +STARTLINE T "Chris Fryer | 2020\nupdated by Yorben Otto | 2024"}
   }
    Input {
     inputs 0
     name Input1
     xpos 426
     ypos -793
    }
    TimeOffset {
     time_offset {{(-floor(parent.decimal))*(DecimalTimeOffset1.decimal<0)}}
     time ""
     name TimeOffset1
     selected true
     xpos 426
     ypos -674
    }
    Dot {
     name Dot6
     selected true
     xpos 460
     ypos -635
    }
set N123f02a0 [stack 0]
    Dot {
     name Dot5
     selected true
     xpos 350
     ypos -635
    }
    Dot {
     name Dot7
     selected true
     xpos 350
     ypos -365
    }
push $N123f02a0
    Dot {
     name Dot1
     selected true
     xpos 572
     ypos -635
    }
    TimeBlur {
     divisions 2
     shutter {{(parent.decimal-(floor(parent.decimal)))*2}}
     shutteroffset start
     shuttercustomoffset 0
     name TimeBlur1
     selected true
     xpos 538
     ypos -558
    }
    Dot {
     name Dot2
     selected true
     xpos 572
     ypos -490
    }
push $N123f02a0
    TimeBlur {
     divisions 2
     shutter {{parent.decimal*2}}
     shutteroffset start
     shuttercustomoffset 0
     name TimeBlur8
     selected true
     xpos 426
     ypos -556
    }
    Switch {
     inputs 2
     which {{parent.decimal<0}}
     name Switch1
     selected true
     xpos 426
     ypos -494
    }
    Multiply {
     value {{parent.TimeBlur8.divisions}}
     name Multiply6
     selected true
     xpos 426
     ypos -436
    }
    Merge2 {
     inputs 2
     operation from
     name Merge6
     selected true
     xpos 426
     ypos -369
    }
set N12432370 [stack 0]
    Output {
     name Output1
     xpos 426
     ypos -221
    }
push $N12432370
push $N12432370
    Viewer {
     inputs 2
     frame_range 1-100
     viewerProcess "sRGB (default)"
     name Viewer1
     xpos 675
     ypos -246
    }
   end_group
   NoTimeBlur {
    name NoTimeBlur6
    xpos -135
    ypos -608
   }
   Dot {
    name Dot21
    xpos -101
    ypos -449
   }
set N124d11b0 [stack 0]
   Dot {
    name Dot22
    xpos -245
    ypos -449
   }
   Multiply {
    value {{math_matrix.result_y_flash(parent.CTimeOffset7.ref)}}
    name Angle_reveal_top
    label TOP
    xpos -279
    ypos -371
   }
   Transform {
    scale {{0.05+(0.05*(((parent.DecimalTimeOffset1.decimal-0.5)*2)*ScaleVariationFlash))}}
    center {{root.width/2 x1015 2304} {root.height/2}}
    shutteroffset centred
    name random_size_top
    xpos -279
    ypos -136
   }
   Card3D {
    inputs 3
    rot_order ZYX
    translate {0 0 0}
    rotate {90 0 0}
    shutteroffset centred
    name cCard3D5
    tile_color 0x7b1d1dff
    xpos -279
    ypos 153
    addUserKnob {20 User l parent}
    addUserKnob {22 python_button l "set parent" t "select parent node, and press this button to set the selected node as parent" +INVISIBLE T "n = nuke.selectedNode()\['name'].getValue()\nnuke.thisNode()\['string'].setValue(n)" +STARTLINE}
    addUserKnob {1 string l parent +INVISIBLE}
    string null
    addUserKnob {3 ref l "ref frame"}
    ref 1015
   }
   Transform {
    translate {{"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].translate.x(ref)\}]"} {"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].translate.y(ref)\}]"}}
    rotate {{"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].rotate-\[value parent_gun].rotate(ref)\}]"}}
    scale {{"\[if \{\[value parent_gun]==\"null\"\} \{return 1\} \{return 1+(\[value parent_gun].scale-\[value parent_gun].scale(ref))\}]"}}
    center {{"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].center.x(ref)\}]"} {"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].center.y(ref)\}]"}}
    name GUNMatchMove
    label "\n"
    xpos -279
    ypos 247
    addUserKnob {20 User l parent}
    addUserKnob {3 ref}
    ref {{parent.CTimeOffset7.ref}}
   }
   Transform {
    translate {{"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].translate.x-\[value parent_env].translate.x(ref)\}]"} {"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].translate.y-\[value parent_env].translate.y(ref)\}]"}}
    rotate {{"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].rotate-\[value parent_env].rotate(ref)\}]"}}
    scale {{"\[if \{\[value parent_gun]==\"null\"\} \{return 1\} \{return 1+(\[value parent_env].scale-\[value parent_env].scale(ref))\}]"}}
    center {{"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].center.x(ref)\}]"} {"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].center.y(ref)\}]"}}
    motionblur {{(mode==2)*0.2}}
    shutter {{FlashMB*(0.175*0.3)}}
    shutteroffset centred
    name ENVMatchMove
    xpos -279
    ypos 321
    addUserKnob {20 User l parent}
    addUserKnob {3 ref}
    ref {{parent.CTimeOffset7.ref}}
   }
   Transform {
    translate {{"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return -((root.width/2)-(\[value parent_gun].center.x(1)+\[value parent_gun].translate.x(1)))\}]"} {"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return -((root.height/2)-(\[value parent_gun].center.y(1)+\[value parent_gun].translate.y(1)))\}]"}}
    shutteroffset centred
    name Transform_GUNMatchMove1
    label "alignment correction"
    xpos -279
    ypos 408
    addUserKnob {20 User l parent}
    addUserKnob {22 python_button l "set parent" t "select parent node, and press this button to set the selected node as parent" T "n = nuke.selectedNode()\['name'].getValue()\nnuke.thisNode()\['string'].setValue(n)" +STARTLINE}
    addUserKnob {1 string l parent}
    string Transform_MatchMove10
    addUserKnob {3 ref +INVISIBLE}
    ref {{parent.cCard3D_8.ref}}
   }
   Remove {
    operation keep
    channels rgb
    name Remove10
    xpos -279
    ypos 489
   }
push 0
   Switch {
    inputs 2
    which {{parent.Angle_reveal_top.value!=0}}
    name Switch4
    xpos -279
    ypos 670
   }
   Dot {
    name Dot1
    xpos -245
    ypos 717
   }
push 0
push $N123b0c30
push 0
   Input {
    inputs 0
    name Front
    xpos -430
    ypos -1102
    number 1
   }
   TimeOffset {
    time_offset {{"shotnmbr==0 ? 0 : shot\[value shotnmbr]-1"}}
    time ""
    name CTimeOffset8
    xpos -430
    ypos -840
    addUserKnob {20 User}
    addUserKnob {3 shotnmbr l "shot "}
    shotnmbr {{parent.CTimeOffset7.shotnmbr}}
   }
   Group {
    name DecimalTimeOffset
    tile_color 0xafa35dff
    label "random asset\n(based on brighness)"
    note_font "Bitstream Vera Sans Bold"
    xpos -430
    ypos -693
    addUserKnob {20 User}
    addUserKnob {7 decimal l "time offset (decimal)"}
    decimal {{"floor\n(\n  (\n  (  ((((random((shotcount*823)+(seed*212))-0.5)*  ((1-( abs(brighness_flare-0.5) )*2)+1)  )+0.5)*0.5)  * (1-brighness_flare)  )\n\n  +\n\n  (  (((((random((shotcount*823)+(seed*212))-0.5)*  ((1-( abs(brighness_flare-0.5) )*2)+1)  )+0.5)*0.5)+0.5)  * (brighness_flare)  )\n  )\n  *1000\n)\n\n/1000"}}
    addUserKnob {26 ""}
    addUserKnob {26 _1 l "" +STARTLINE T "Chris Fryer | 2020\nupdated by Yorben Otto | 2024"}
   }
    Input {
     inputs 0
     name Input1
     xpos 426
     ypos -793
    }
    TimeOffset {
     time_offset {{(-floor(parent.decimal))*(DecimalTimeOffset.decimal<0)}}
     time ""
     name TimeOffset1
     selected true
     xpos 426
     ypos -674
    }
    Dot {
     name Dot6
     selected true
     xpos 460
     ypos -635
    }
set N12578330 [stack 0]
    Dot {
     name Dot5
     selected true
     xpos 350
     ypos -635
    }
    Dot {
     name Dot7
     selected true
     xpos 350
     ypos -365
    }
push $N12578330
    Dot {
     name Dot1
     selected true
     xpos 572
     ypos -635
    }
    TimeBlur {
     divisions 2
     shutter {{(parent.decimal-(floor(parent.decimal)))*2}}
     shutteroffset start
     shuttercustomoffset 0
     name TimeBlur1
     selected true
     xpos 538
     ypos -558
    }
    Dot {
     name Dot2
     selected true
     xpos 572
     ypos -490
    }
push $N12578330
    TimeBlur {
     divisions 2
     shutter {{parent.decimal*2}}
     shutteroffset start
     shuttercustomoffset 0
     name TimeBlur8
     selected true
     xpos 426
     ypos -556
    }
    Switch {
     inputs 2
     which {{parent.decimal<0}}
     name Switch1
     selected true
     xpos 426
     ypos -494
    }
    Multiply {
     value {{parent.TimeBlur8.divisions}}
     name Multiply6
     selected true
     xpos 426
     ypos -436
    }
    Merge2 {
     inputs 2
     operation from
     name Merge6
     selected true
     xpos 426
     ypos -369
    }
set N125ba410 [stack 0]
    Output {
     name Output1
     xpos 426
     ypos -221
    }
push $N125ba410
push $N125ba410
    Viewer {
     inputs 2
     frame_range 1-100
     viewerProcess "sRGB (default)"
     name Viewer1
     xpos 675
     ypos -246
    }
   end_group
   NoTimeBlur {
    name NoTimeBlur7
    xpos -430
    ypos -617
   }
   Multiply {
    value {{math_matrix.result_x_flash(parent.CTimeOffset7.ref)}}
    name Angle_reveal_front
    label FRONT
    xpos -430
    ypos -375
   }
   Transform {
    scale {{0.05+(0.05*(((parent.DecimalTimeOffset1.decimal-0.5)*2)*ScaleVariationFlash))}}
    center {{root.width/2 x1015 2304} {root.height/2}}
    shutteroffset centred
    name random_size_front
    xpos -430
    ypos -134
   }
   Card3D {
    inputs 3
    rot_order ZYX
    translate {0 0 0}
    rotate {0 90 0}
    shutteroffset centred
    name cCard3D6
    tile_color 0x7b1d1dff
    xpos -430
    ypos 150
    addUserKnob {20 User l parent}
    addUserKnob {22 python_button l "set parent" t "select parent node, and press this button to set the selected node as parent" +INVISIBLE T "n = nuke.selectedNode()\['name'].getValue()\nnuke.thisNode()\['string'].setValue(n)" +STARTLINE}
    addUserKnob {1 string l parent +INVISIBLE}
    string null
    addUserKnob {3 ref l "ref frame"}
    ref 1015
   }
   Transform {
    translate {{"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].translate.x(ref)\}]"} {"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].translate.y(ref)\}]"}}
    rotate {{"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].rotate-\[value parent_gun].rotate(ref)\}]"}}
    scale {{"\[if \{\[value parent_gun]==\"null\"\} \{return 1\} \{return 1+(\[value parent_gun].scale-\[value parent_gun].scale(ref))\}]"}}
    center {{"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].center.x(ref)\}]"} {"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].center.y(ref)\}]"}}
    name GUNMatchMove2
    label "\n"
    xpos -430
    ypos 248
    addUserKnob {20 User l parent}
    addUserKnob {3 ref}
    ref {{parent.CTimeOffset7.ref}}
   }
   Transform {
    translate {{"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].translate.x-\[value parent_env].translate.x(ref)\}]"} {"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].translate.y-\[value parent_env].translate.y(ref)\}]"}}
    rotate {{"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].rotate-\[value parent_env].rotate(ref)\}]"}}
    scale {{"\[if \{\[value parent_gun]==\"null\"\} \{return 1\} \{return 1+(\[value parent_env].scale-\[value parent_env].scale(ref))\}]"}}
    center {{"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].center.x(ref)\}]"} {"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].center.y(ref)\}]"}}
    motionblur {{(mode==2)*0.2}}
    shutter {{FlashMB*(0.175*0.3)}}
    shutteroffset centred
    name ENVMatchMove2
    xpos -430
    ypos 320
    addUserKnob {20 User l parent}
    addUserKnob {3 ref}
    ref {{parent.CTimeOffset7.ref}}
   }
   Transform {
    translate {{"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return -((root.width/2)-(\[value parent_gun].center.x(1)+\[value parent_gun].translate.x(1)))\}]"} {"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return -((root.height/2)-(\[value parent_gun].center.y(1)+\[value parent_gun].translate.y(1)))\}]"}}
    shutteroffset centred
    name Transform_GUNMatchMove2
    label "alignment correction"
    xpos -430
    ypos 407
    addUserKnob {20 User l parent}
    addUserKnob {22 python_button l "set parent" t "select parent node, and press this button to set the selected node as parent" T "n = nuke.selectedNode()\['name'].getValue()\nnuke.thisNode()\['string'].setValue(n)" +STARTLINE}
    addUserKnob {1 string l parent}
    string Transform_MatchMove10
    addUserKnob {3 ref +INVISIBLE}
    ref {{parent.cCard3D_8.ref}}
   }
   Remove {
    operation keep
    channels rgb
    name Remove11
    xpos -430
    ypos 487
   }
push 0
   Switch {
    inputs 2
    which {{parent.Angle_reveal_front.value!=0}}
    name Switch5
    xpos -430
    ypos 675
   }
   Dot {
    name Dot2
    xpos -396
    ypos 749
   }
push $N124d11b0
   Multiply {
    value {{math_matrix.result_z_flash(parent.CTimeOffset7.ref)}}
    name Angle_reveal_side
    label SIDE
    xpos -135
    ypos -372
   }
   Transform {
    scale {{0.05+(0.05*(((parent.DecimalTimeOffset1.decimal-0.5)*2)*ScaleVariationFlash))}}
    center {{root.width/2 x1015 2304} {root.height/2}}
    shutteroffset centred
    name random_size_side
    xpos -135
    ypos -136
   }
   Card3D {
    translate {{"\[if \{\[exists  parent.parent.parent.input0]\} \{return \[value \[topnode parent.parent.parent.input0].name].translate.x(ref)\} \{return 0\}]"} {"\[if \{\[exists  parent.parent.parent.input0]\} \{return \[value \[topnode parent.parent.parent.input0].name].translate.y(ref)\} \{return 0\}]"} {"\[if \{\[exists  parent.parent.parent.input0]\} \{return \[value \[topnode parent.parent.parent.input0].name].translate.z(ref)\} \{return -1\}]"}}
    rotate {{"\[if \{\[exists  parent.parent.parent.input0]\} \{return \[value \[topnode parent.parent.parent.input0].name].rotate.x(ref)\} \{return 0\}]"} {"\[if \{\[exists  parent.parent.parent.input0]\} \{return \[value \[topnode parent.parent.parent.input0].name].rotate.y(ref)\} \{return 0\}]"} {"\[if \{\[exists  parent.parent.parent.input0]\} \{return \[value \[topnode parent.parent.parent.input0].name].rotate.z(ref)\} \{return 0\}]"}}
    scaling {{"\[if \{\[exists  parent.parent.parent.input0]\} \{return \[value \[topnode parent.parent.parent.input0].name].scaling.x(ref)\} \{return 1\}]"} {"\[if \{\[exists  parent.parent.parent.input0]\} \{return \[value \[topnode parent.parent.parent.input0].name].scaling.y(ref)\} \{return 1\}]"} {"\[if \{\[exists  parent.parent.parent.input0]\} \{return \[value \[topnode parent.parent.parent.input0].name].scaling.z(ref)\} \{return 1\}]"}}
    uniform_scale {{"\[if \{\[exists  parent.parent.parent.input0]\} \{return (\[value \[topnode parent.parent.parent.input0].name].uniform_scale(ref)*25)\} \{return 25\}]"}}
    shutteroffset centred
    name cCard3D_1
    tile_color 0x7b1d1dff
    label "ref frame: \[value ref]"
    xpos -135
    ypos 147
    addUserKnob {20 User l parent}
    addUserKnob {22 python_button l "set parent" t "select parent node, and press this button to set the selected node as parent" +INVISIBLE T "n = nuke.selectedNode()\['name'].getValue()\nnuke.thisNode()\['string'].setValue(n)" +STARTLINE}
    addUserKnob {1 string l parent +INVISIBLE}
    string null
    addUserKnob {3 id l "id number"}
    id {{parent.CTimeOffset7.shotnmbr}}
    addUserKnob {3 ref l "ref frame"}
    ref {{parent.CTimeOffset7.time_offset}}
   }
   Transform {
    translate {{"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].translate.x(ref)\}]"} {"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].translate.y(ref)\}]"}}
    rotate {{"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].rotate-\[value parent_gun].rotate(ref)\}]"}}
    scale {{"\[if \{\[value parent_gun]==\"null\"\} \{return 1\} \{return 1+(\[value parent_gun].scale-\[value parent_gun].scale(ref))\}]"}}
    center {{"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].center.x(ref)\}]"} {"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].center.y(ref)\}]"}}
    name GUNMatchMove1
    label "\n"
    xpos -135
    ypos 241
    addUserKnob {20 User l parent}
    addUserKnob {3 ref}
    ref {{parent.CTimeOffset7.ref}}
   }
   Transform {
    translate {{"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].translate.x-\[value parent_env].translate.x(ref)\}]"} {"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].translate.y-\[value parent_env].translate.y(ref)\}]"}}
    rotate {{"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].rotate-\[value parent_env].rotate(ref)\}]"}}
    scale {{"\[if \{\[value parent_gun]==\"null\"\} \{return 1\} \{return 1+(\[value parent_env].scale-\[value parent_env].scale(ref))\}]"}}
    center {{"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].center.x(ref)\}]"} {"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].center.y(ref)\}]"}}
    motionblur {{(mode==2)*0.2}}
    shutter {{FlashMB*(0.175*0.3)}}
    shutteroffset centred
    name ENVMatchMove1
    xpos -135
    ypos 317
    addUserKnob {20 User l parent}
    addUserKnob {3 ref}
    ref {{parent.CTimeOffset7.ref}}
   }
   Transform {
    translate {{"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return -((root.width/2)-(\[value parent_gun].center.x(1)+\[value parent_gun].translate.x(1)))\}]"} {"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return -((root.height/2)-(\[value parent_gun].center.y(1)+\[value parent_gun].translate.y(1)))\}]"}}
    shutteroffset centred
    name Transform_GUNMatchMove3
    label "alignment correction"
    xpos -135
    ypos 405
    addUserKnob {20 User l parent}
    addUserKnob {22 python_button l "set parent" t "select parent node, and press this button to set the selected node as parent" T "n = nuke.selectedNode()\['name'].getValue()\nnuke.thisNode()\['string'].setValue(n)" +STARTLINE}
    addUserKnob {1 string l parent}
    string Transform_MatchMove10
    addUserKnob {3 ref +INVISIBLE}
    ref {{parent.cCard3D_8.ref}}
   }
   Remove {
    operation keep
    channels rgb
    name Remove12
    xpos -135
    ypos 489
   }
push 0
   Switch {
    inputs 2
    which {{parent.Angle_reveal_side.value!=0}}
    name Switch6
    xpos -135
    ypos 676
   }
   Merge2 {
    inputs 3+1
    operation max
    name Merge1
    xpos -135
    ypos 745
   }
   Merge2 {
    inputs 2
    operation plus
    bbox intersection
    name Merge6
    xpos -135
    ypos 1196
   }
push 0
   Switch {
    inputs 2
    which {{"shot\[value count]==0?0:(EnableExtraFrames==1?floor(((frame>=shot\[value count])+(frame<=(shot\[value count]+(4*((mode==1)+(mode==2))))))/2):frame==shot\[value count])"}}
    name cSwitch_3
    xpos -135
    ypos 1359
    addUserKnob {20 User}
    addUserKnob {3 count l "shot number"}
    count {{parent.CTimeOffset7.shotnmbr}}
    addUserKnob {6 shot +STARTLINE}
    shot {{frame==(parent.CTimeOffset7.time_offset+1)}}
   }
   Output {
    name Output1
    xpos -135
    ypos 1861
   }
  end_group
push $N1041bc40
push $N107897b0
  Group {
   inputs 2
   name gunshot5
   label "shot: \[value shotcount]\non frame: \[value shotstart]\n"
   xpos 8776
   ypos -810
   addUserKnob {20 User}
   addUserKnob {3 shotcount l shot}
   shotcount 5
   addUserKnob {3 shotstart l frame +INVISIBLE}
   shotstart {{"shotcount==0 ? 0 : shot\[value shotcount]-1"}}
  }
   BackdropNode {
    inputs 0
    name BackdropNode3
    knobChanged "try:\n    listenedKnobs = \['text', 'position', 'name']\n    node = nuke.thisNode()\n    name = node.knob('name').value()\n    text = node.knob('text').value()\n    position = node.knob('position').value()\n    position = \"<\" + position + \">\"\n    label = node.knob('label').value()\n    \n    if nuke.thisKnob().name() in listenedKnobs:\n        if text == \"\":\n            if node.knob('position').value() == \"left\":\n                node.knob('label').setValue()\n            else:\n                node.knob('label').setValue(position + name)\n        else:\n            if node.knob('position').value() == \"left\":\n                node.knob('label').setValue(text)\n            else:\n                node.knob('label').setValue(position + text)\n                \n    elif nuke.thisKnob().name() == 'font_size':\n        fontSize = node.knob('font_size').value()\n        node.knob('note_font_size').setValue(fontSize)\nexcept:\n    pass"
    tile_color 0x232323ff
    label "<Left><h2> Gunshot"
    note_font_size 31.5
    xpos -698
    ypos -924
    bdwidth 1057
    bdheight 2343
    addUserKnob {20 F_VFX l BackdropNode}
    addUserKnob {43 text l Text}
    text "<h2> Gunshot"
    addUserKnob {7 font_size l "Font Size" R 10 100}
    font_size 31.5
    addUserKnob {4 position l "" -STARTLINE M {Left Center}}
    addUserKnob {26 S01 l " " T " "}
    addUserKnob {22 grow l " <img src=\"F_scalep.png\">" -STARTLINE T "n=nuke.thisNode()\n\ndef grow(node=None,step=50):\n    try:\n        if not node:\n            n=nuke.selectedNode()\n        else:\n            n=node\n            n\['xpos'].setValue(n\['xpos'].getValue()-step)\n            n\['ypos'].setValue(n\['ypos'].getValue()-step)\n            n\['bdwidth'].setValue(n\['bdwidth'].getValue()+step*2)\n            n\['bdheight'].setValue(n\['bdheight'].getValue()+step*2)\n    except:\n        pass\ngrow(n,50)"}
    addUserKnob {22 shrink l " <img src=\"F_scalem.png\">" -STARTLINE T "n=nuke.thisNode()\n\ndef shrink(node=None,step=50):\n    try:\n        if not node:\n            n=nuke.selectedNode()\n        else:\n            n=node\n            n\['xpos'].setValue(n\['xpos'].getValue()+step)\n            n\['ypos'].setValue(n\['ypos'].getValue()+step)\n            n\['bdwidth'].setValue(n\['bdwidth'].getValue()-step*2)\n            n\['bdheight'].setValue(n\['bdheight'].getValue()-step*2)\n    except:\n        pass\nshrink(n,50)"}
    addUserKnob {22 colorandom l " <img src=\"ColorBars.png\">" -STARTLINE T "import colorsys, random\nn=nuke.thisNode()\nR,G,B= colorsys.hsv_to_rgb(random.random(),.1+random.random()*.15,.15+random.random()*.15)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ) )"}
    addUserKnob {22 darkgrey l "<font color=\"#232323\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.0, 0.0, 0.14]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 lightgrey l "<font color=\"#383838\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.0, 0.0, 0.22]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 red l "<font color=\"#8c3838\" size=6>■</font>" T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.0, 0.6, 0.55]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n" +STARTLINE}
    addUserKnob {22 orange l "<font color=\"#b28e59\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.1, 0.5, 0.7]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 yellow l "<font color=\"#ccc766\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.16, 0.5, 0.8]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 green l "<font color=\"#5d995b\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.33, 0.4, 0.6]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 cyan l "<font color=\"#72998f\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.46, 0.25, 0.6]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 blue l "<font color=\"#59687f\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.6, 0.3, 0.5]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 darkblue l "<font color=\"#63628c\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.67, 0.3, 0.55]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 magenta l "<font color=\"#927a99\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.8, 0.2, 0.6]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 pink l "<font color=\"#997a89\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.92, 0.2, 0.6]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {26 S02 l " " T " "}
    addUserKnob {26 Ftools l "" +STARTLINE T "<font color=\"#1C1C1C\"> v1.2 - Franklin VFX - 2018"}
   }
   BackdropNode {
    inputs 0
    name BackdropNode1
    knobChanged "try:\n    listenedKnobs = \['text', 'position', 'name']\n    node = nuke.thisNode()\n    name = node.knob('name').value()\n    text = node.knob('text').value()\n    position = node.knob('position').value()\n    position = \"<\" + position + \">\"\n    label = node.knob('label').value()\n    \n    if nuke.thisKnob().name() in listenedKnobs:\n        if text == \"\":\n            if node.knob('position').value() == \"left\":\n                node.knob('label').setValue()\n            else:\n                node.knob('label').setValue(position + name)\n        else:\n            if node.knob('position').value() == \"left\":\n                node.knob('label').setValue(text)\n            else:\n                node.knob('label').setValue(position + text)\n                \n    elif nuke.thisKnob().name() == 'font_size':\n        fontSize = node.knob('font_size').value()\n        node.knob('note_font_size').setValue(fontSize)\nexcept:\n    pass"
    tile_color 0x927a99ff
    note_font_size 50
    xpos -460
    ypos -257
    bdwidth 435
    bdheight 786
    z_order 1
    addUserKnob {20 F_VFX l BackdropNode}
    addUserKnob {43 text l Text}
    addUserKnob {7 font_size l "Font Size" R 10 100}
    font_size 50
    addUserKnob {4 position l "" -STARTLINE M {Left Center}}
    addUserKnob {26 S01 l " " T " "}
    addUserKnob {22 grow l " <img src=\"F_scalep.png\">" -STARTLINE T "n=nuke.thisNode()\n\ndef grow(node=None,step=50):\n    try:\n        if not node:\n            n=nuke.selectedNode()\n        else:\n            n=node\n            n\['xpos'].setValue(n\['xpos'].getValue()-step)\n            n\['ypos'].setValue(n\['ypos'].getValue()-step)\n            n\['bdwidth'].setValue(n\['bdwidth'].getValue()+step*2)\n            n\['bdheight'].setValue(n\['bdheight'].getValue()+step*2)\n    except:\n        pass\ngrow(n,50)"}
    addUserKnob {22 shrink l " <img src=\"F_scalem.png\">" -STARTLINE T "n=nuke.thisNode()\n\ndef shrink(node=None,step=50):\n    try:\n        if not node:\n            n=nuke.selectedNode()\n        else:\n            n=node\n            n\['xpos'].setValue(n\['xpos'].getValue()+step)\n            n\['ypos'].setValue(n\['ypos'].getValue()+step)\n            n\['bdwidth'].setValue(n\['bdwidth'].getValue()-step*2)\n            n\['bdheight'].setValue(n\['bdheight'].getValue()-step*2)\n    except:\n        pass\nshrink(n,50)"}
    addUserKnob {22 colorandom l " <img src=\"ColorBars.png\">" -STARTLINE T "import colorsys, random\nn=nuke.thisNode()\nR,G,B= colorsys.hsv_to_rgb(random.random(),.1+random.random()*.15,.15+random.random()*.15)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ) )"}
    addUserKnob {22 darkgrey l "<font color=\"#232323\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.0, 0.0, 0.14]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 lightgrey l "<font color=\"#383838\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.0, 0.0, 0.22]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 red l "<font color=\"#8c3838\" size=6>■</font>" T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.0, 0.6, 0.55]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n" +STARTLINE}
    addUserKnob {22 orange l "<font color=\"#b28e59\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.1, 0.5, 0.7]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 yellow l "<font color=\"#ccc766\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.16, 0.5, 0.8]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 green l "<font color=\"#5d995b\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.33, 0.4, 0.6]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 cyan l "<font color=\"#72998f\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.46, 0.25, 0.6]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 blue l "<font color=\"#59687f\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.6, 0.3, 0.5]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 darkblue l "<font color=\"#63628c\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.67, 0.3, 0.55]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 magenta l "<font color=\"#927a99\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.8, 0.2, 0.6]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 pink l "<font color=\"#997a89\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.92, 0.2, 0.6]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {26 S02 l " " T " "}
    addUserKnob {26 Ftools l "" +STARTLINE T "<font color=\"#1C1C1C\"> v1.2 - Franklin VFX - 2018"}
   }
   Constant {
    inputs 0
    channels rgb
    name Constant4
    xpos -648
    ypos 987
   }
   AdjBBox {
    numpixels {{size_bbox}}
    name AdjBBox4
    xpos -648
    ypos 1120
   }
   Dot {
    name Dot19
    xpos -614
    ypos 1200
   }
   Axis3 {
    inputs 0
    useMatrix true
    matrix {
        {{parent.cCard3D_1.matrix} {parent.cCard3D_1.matrix} {parent.cCard3D_1.matrix} {parent.cCard3D_1.matrix}}
        {{parent.cCard3D_1.matrix} {parent.cCard3D_1.matrix} {parent.cCard3D_1.matrix} {parent.cCard3D_1.matrix}}
        {{parent.cCard3D_1.matrix} {parent.cCard3D_1.matrix} {parent.cCard3D_1.matrix} {parent.cCard3D_1.matrix}}
        {{parent.cCard3D_1.matrix} {parent.cCard3D_1.matrix} {parent.cCard3D_1.matrix} {parent.cCard3D_1.matrix}}
      }
    name Axis3
    xpos -207
    ypos 48
   }
set N127a78a0 [stack 0]
push 0
   Input {
    inputs 0
    name Side
    xpos -135
    ypos -1101
   }
   TimeOffset {
    time_offset {{"shotnmbr==0 ? 0 : shot\[value shotnmbr]-1"}}
    time ""
    name CTimeOffset7
    label "shot: \[value shotnmbr]\non frame \[value time_offset]"
    xpos -135
    ypos -852
    addUserKnob {20 User}
    addUserKnob {3 shotnmbr l "shot "}
    shotnmbr {{shotcount}}
    addUserKnob {3 ref}
    ref {{time_offset+1}}
   }
   Group {
    name DecimalTimeOffset1
    tile_color 0xafa35dff
    label "random asset\n(based on brighness)"
    note_font "Bitstream Vera Sans Bold"
    xpos -135
    ypos -689
    addUserKnob {20 User}
    addUserKnob {7 decimal l "time offset (decimal)"}
    decimal {{"floor\n(\n  (\n  (  ((((random((shotcount*823)+(seed*212))-0.5)*  ((1-( abs(brighness_flare-0.5) )*2)+1)  )+0.5)*0.5)  * (1-brighness_flare)  )\n\n  +\n\n  (  (((((random((shotcount*823)+(seed*212))-0.5)*  ((1-( abs(brighness_flare-0.5) )*2)+1)  )+0.5)*0.5)+0.5)  * (brighness_flare)  )\n  )\n  *1000\n)\n\n/1000"}}
    addUserKnob {26 ""}
    addUserKnob {26 _1 l "" +STARTLINE T "Chris Fryer | 2020\nupdated by Yorben Otto | 2024"}
   }
    Input {
     inputs 0
     name Input1
     xpos 426
     ypos -793
    }
    TimeOffset {
     time_offset {{(-floor(parent.decimal))*(DecimalTimeOffset1.decimal<0)}}
     time ""
     name TimeOffset1
     selected true
     xpos 426
     ypos -674
    }
    Dot {
     name Dot6
     selected true
     xpos 460
     ypos -635
    }
set N127e6f00 [stack 0]
    Dot {
     name Dot5
     selected true
     xpos 350
     ypos -635
    }
    Dot {
     name Dot7
     selected true
     xpos 350
     ypos -365
    }
push $N127e6f00
    Dot {
     name Dot1
     selected true
     xpos 572
     ypos -635
    }
    TimeBlur {
     divisions 2
     shutter {{(parent.decimal-(floor(parent.decimal)))*2}}
     shutteroffset start
     shuttercustomoffset 0
     name TimeBlur1
     selected true
     xpos 538
     ypos -558
    }
    Dot {
     name Dot2
     selected true
     xpos 572
     ypos -490
    }
push $N127e6f00
    TimeBlur {
     divisions 2
     shutter {{parent.decimal*2}}
     shutteroffset start
     shuttercustomoffset 0
     name TimeBlur8
     selected true
     xpos 426
     ypos -556
    }
    Switch {
     inputs 2
     which {{parent.decimal<0}}
     name Switch1
     selected true
     xpos 426
     ypos -494
    }
    Multiply {
     value {{parent.TimeBlur8.divisions}}
     name Multiply6
     selected true
     xpos 426
     ypos -436
    }
    Merge2 {
     inputs 2
     operation from
     name Merge6
     selected true
     xpos 426
     ypos -369
    }
set N12828fd0 [stack 0]
    Output {
     name Output1
     xpos 426
     ypos -221
    }
push $N12828fd0
push $N12828fd0
    Viewer {
     inputs 2
     frame_range 1-100
     viewerProcess "sRGB (default)"
     name Viewer1
     xpos 675
     ypos -246
    }
   end_group
   NoTimeBlur {
    name NoTimeBlur6
    xpos -135
    ypos -608
   }
   Dot {
    name Dot21
    xpos -101
    ypos -449
   }
set N128c7e40 [stack 0]
   Dot {
    name Dot22
    xpos -245
    ypos -449
   }
   Multiply {
    value {{math_matrix.result_y_flash(parent.CTimeOffset7.ref)}}
    name Angle_reveal_top
    label TOP
    xpos -279
    ypos -371
   }
   Transform {
    scale {{0.05+(0.05*(((parent.DecimalTimeOffset1.decimal-0.5)*2)*ScaleVariationFlash))}}
    center {{root.width/2 x1015 2304} {root.height/2}}
    shutteroffset centred
    name random_size_top
    xpos -279
    ypos -136
   }
   Card3D {
    inputs 3
    rot_order ZYX
    translate {0 0 0}
    rotate {90 0 0}
    shutteroffset centred
    name cCard3D5
    tile_color 0x7b1d1dff
    xpos -279
    ypos 153
    addUserKnob {20 User l parent}
    addUserKnob {22 python_button l "set parent" t "select parent node, and press this button to set the selected node as parent" +INVISIBLE T "n = nuke.selectedNode()\['name'].getValue()\nnuke.thisNode()\['string'].setValue(n)" +STARTLINE}
    addUserKnob {1 string l parent +INVISIBLE}
    string null
    addUserKnob {3 ref l "ref frame"}
    ref 1015
   }
   Transform {
    translate {{"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].translate.x(ref)\}]"} {"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].translate.y(ref)\}]"}}
    rotate {{"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].rotate-\[value parent_gun].rotate(ref)\}]"}}
    scale {{"\[if \{\[value parent_gun]==\"null\"\} \{return 1\} \{return 1+(\[value parent_gun].scale-\[value parent_gun].scale(ref))\}]"}}
    center {{"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].center.x(ref)\}]"} {"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].center.y(ref)\}]"}}
    name GUNMatchMove
    label "\n"
    xpos -279
    ypos 247
    addUserKnob {20 User l parent}
    addUserKnob {3 ref}
    ref {{parent.CTimeOffset7.ref}}
   }
   Transform {
    translate {{"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].translate.x-\[value parent_env].translate.x(ref)\}]"} {"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].translate.y-\[value parent_env].translate.y(ref)\}]"}}
    rotate {{"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].rotate-\[value parent_env].rotate(ref)\}]"}}
    scale {{"\[if \{\[value parent_gun]==\"null\"\} \{return 1\} \{return 1+(\[value parent_env].scale-\[value parent_env].scale(ref))\}]"}}
    center {{"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].center.x(ref)\}]"} {"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].center.y(ref)\}]"}}
    motionblur {{(mode==2)*0.2}}
    shutter {{FlashMB*(0.175*0.3)}}
    shutteroffset centred
    name ENVMatchMove
    xpos -279
    ypos 321
    addUserKnob {20 User l parent}
    addUserKnob {3 ref}
    ref {{parent.CTimeOffset7.ref}}
   }
   Transform {
    translate {{"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return -((root.width/2)-(\[value parent_gun].center.x(1)+\[value parent_gun].translate.x(1)))\}]"} {"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return -((root.height/2)-(\[value parent_gun].center.y(1)+\[value parent_gun].translate.y(1)))\}]"}}
    shutteroffset centred
    name Transform_GUNMatchMove1
    label "alignment correction"
    xpos -279
    ypos 408
    addUserKnob {20 User l parent}
    addUserKnob {22 python_button l "set parent" t "select parent node, and press this button to set the selected node as parent" T "n = nuke.selectedNode()\['name'].getValue()\nnuke.thisNode()\['string'].setValue(n)" +STARTLINE}
    addUserKnob {1 string l parent}
    string Transform_MatchMove10
    addUserKnob {3 ref +INVISIBLE}
    ref {{parent.cCard3D_8.ref}}
   }
   Remove {
    operation keep
    channels rgb
    name Remove10
    xpos -279
    ypos 489
   }
push 0
   Switch {
    inputs 2
    which {{parent.Angle_reveal_top.value!=0}}
    name Switch4
    xpos -279
    ypos 670
   }
   Dot {
    name Dot1
    xpos -245
    ypos 717
   }
push 0
push $N127a78a0
push 0
   Input {
    inputs 0
    name Front
    xpos -430
    ypos -1102
    number 1
   }
   TimeOffset {
    time_offset {{"shotnmbr==0 ? 0 : shot\[value shotnmbr]-1"}}
    time ""
    name CTimeOffset8
    xpos -430
    ypos -840
    addUserKnob {20 User}
    addUserKnob {3 shotnmbr l "shot "}
    shotnmbr {{parent.CTimeOffset7.shotnmbr}}
   }
   Group {
    name DecimalTimeOffset
    tile_color 0xafa35dff
    label "random asset\n(based on brighness)"
    note_font "Bitstream Vera Sans Bold"
    xpos -430
    ypos -693
    addUserKnob {20 User}
    addUserKnob {7 decimal l "time offset (decimal)"}
    decimal {{"floor\n(\n  (\n  (  ((((random((shotcount*823)+(seed*212))-0.5)*  ((1-( abs(brighness_flare-0.5) )*2)+1)  )+0.5)*0.5)  * (1-brighness_flare)  )\n\n  +\n\n  (  (((((random((shotcount*823)+(seed*212))-0.5)*  ((1-( abs(brighness_flare-0.5) )*2)+1)  )+0.5)*0.5)+0.5)  * (brighness_flare)  )\n  )\n  *1000\n)\n\n/1000"}}
    addUserKnob {26 ""}
    addUserKnob {26 _1 l "" +STARTLINE T "Chris Fryer | 2020\nupdated by Yorben Otto | 2024"}
   }
    Input {
     inputs 0
     name Input1
     xpos 426
     ypos -793
    }
    TimeOffset {
     time_offset {{(-floor(parent.decimal))*(DecimalTimeOffset.decimal<0)}}
     time ""
     name TimeOffset1
     selected true
     xpos 426
     ypos -674
    }
    Dot {
     name Dot6
     selected true
     xpos 460
     ypos -635
    }
set N12971030 [stack 0]
    Dot {
     name Dot5
     selected true
     xpos 350
     ypos -635
    }
    Dot {
     name Dot7
     selected true
     xpos 350
     ypos -365
    }
push $N12971030
    Dot {
     name Dot1
     selected true
     xpos 572
     ypos -635
    }
    TimeBlur {
     divisions 2
     shutter {{(parent.decimal-(floor(parent.decimal)))*2}}
     shutteroffset start
     shuttercustomoffset 0
     name TimeBlur1
     selected true
     xpos 538
     ypos -558
    }
    Dot {
     name Dot2
     selected true
     xpos 572
     ypos -490
    }
push $N12971030
    TimeBlur {
     divisions 2
     shutter {{parent.decimal*2}}
     shutteroffset start
     shuttercustomoffset 0
     name TimeBlur8
     selected true
     xpos 426
     ypos -556
    }
    Switch {
     inputs 2
     which {{parent.decimal<0}}
     name Switch1
     selected true
     xpos 426
     ypos -494
    }
    Multiply {
     value {{parent.TimeBlur8.divisions}}
     name Multiply6
     selected true
     xpos 426
     ypos -436
    }
    Merge2 {
     inputs 2
     operation from
     name Merge6
     selected true
     xpos 426
     ypos -369
    }
set N129b3110 [stack 0]
    Output {
     name Output1
     xpos 426
     ypos -221
    }
push $N129b3110
push $N129b3110
    Viewer {
     inputs 2
     frame_range 1-100
     viewerProcess "sRGB (default)"
     name Viewer1
     xpos 675
     ypos -246
    }
   end_group
   NoTimeBlur {
    name NoTimeBlur7
    xpos -430
    ypos -617
   }
   Multiply {
    value {{math_matrix.result_x_flash(parent.CTimeOffset7.ref)}}
    name Angle_reveal_front
    label FRONT
    xpos -430
    ypos -375
   }
   Transform {
    scale {{0.05+(0.05*(((parent.DecimalTimeOffset1.decimal-0.5)*2)*ScaleVariationFlash))}}
    center {{root.width/2 x1015 2304} {root.height/2}}
    shutteroffset centred
    name random_size_front
    xpos -430
    ypos -134
   }
   Card3D {
    inputs 3
    rot_order ZYX
    translate {0 0 0}
    rotate {0 90 0}
    shutteroffset centred
    name cCard3D6
    tile_color 0x7b1d1dff
    xpos -430
    ypos 150
    addUserKnob {20 User l parent}
    addUserKnob {22 python_button l "set parent" t "select parent node, and press this button to set the selected node as parent" +INVISIBLE T "n = nuke.selectedNode()\['name'].getValue()\nnuke.thisNode()\['string'].setValue(n)" +STARTLINE}
    addUserKnob {1 string l parent +INVISIBLE}
    string null
    addUserKnob {3 ref l "ref frame"}
    ref 1015
   }
   Transform {
    translate {{"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].translate.x(ref)\}]"} {"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].translate.y(ref)\}]"}}
    rotate {{"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].rotate-\[value parent_gun].rotate(ref)\}]"}}
    scale {{"\[if \{\[value parent_gun]==\"null\"\} \{return 1\} \{return 1+(\[value parent_gun].scale-\[value parent_gun].scale(ref))\}]"}}
    center {{"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].center.x(ref)\}]"} {"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].center.y(ref)\}]"}}
    name GUNMatchMove2
    label "\n"
    xpos -430
    ypos 248
    addUserKnob {20 User l parent}
    addUserKnob {3 ref}
    ref {{parent.CTimeOffset7.ref}}
   }
   Transform {
    translate {{"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].translate.x-\[value parent_env].translate.x(ref)\}]"} {"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].translate.y-\[value parent_env].translate.y(ref)\}]"}}
    rotate {{"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].rotate-\[value parent_env].rotate(ref)\}]"}}
    scale {{"\[if \{\[value parent_gun]==\"null\"\} \{return 1\} \{return 1+(\[value parent_env].scale-\[value parent_env].scale(ref))\}]"}}
    center {{"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].center.x(ref)\}]"} {"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].center.y(ref)\}]"}}
    motionblur {{(mode==2)*0.2}}
    shutter {{FlashMB*(0.175*0.3)}}
    shutteroffset centred
    name ENVMatchMove2
    xpos -430
    ypos 320
    addUserKnob {20 User l parent}
    addUserKnob {3 ref}
    ref {{parent.CTimeOffset7.ref}}
   }
   Transform {
    translate {{"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return -((root.width/2)-(\[value parent_gun].center.x(1)+\[value parent_gun].translate.x(1)))\}]"} {"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return -((root.height/2)-(\[value parent_gun].center.y(1)+\[value parent_gun].translate.y(1)))\}]"}}
    shutteroffset centred
    name Transform_GUNMatchMove2
    label "alignment correction"
    xpos -430
    ypos 407
    addUserKnob {20 User l parent}
    addUserKnob {22 python_button l "set parent" t "select parent node, and press this button to set the selected node as parent" T "n = nuke.selectedNode()\['name'].getValue()\nnuke.thisNode()\['string'].setValue(n)" +STARTLINE}
    addUserKnob {1 string l parent}
    string Transform_MatchMove10
    addUserKnob {3 ref +INVISIBLE}
    ref {{parent.cCard3D_8.ref}}
   }
   Remove {
    operation keep
    channels rgb
    name Remove11
    xpos -430
    ypos 487
   }
push 0
   Switch {
    inputs 2
    which {{parent.Angle_reveal_front.value!=0}}
    name Switch5
    xpos -430
    ypos 675
   }
   Dot {
    name Dot2
    xpos -396
    ypos 749
   }
push $N128c7e40
   Multiply {
    value {{math_matrix.result_z_flash(parent.CTimeOffset7.ref)}}
    name Angle_reveal_side
    label SIDE
    xpos -135
    ypos -372
   }
   Transform {
    scale {{0.05+(0.05*(((parent.DecimalTimeOffset1.decimal-0.5)*2)*ScaleVariationFlash))}}
    center {{root.width/2 x1015 2304} {root.height/2}}
    shutteroffset centred
    name random_size_side
    xpos -135
    ypos -136
   }
   Card3D {
    translate {{"\[if \{\[exists  parent.parent.parent.input0]\} \{return \[value \[topnode parent.parent.parent.input0].name].translate.x(ref)\} \{return 0\}]"} {"\[if \{\[exists  parent.parent.parent.input0]\} \{return \[value \[topnode parent.parent.parent.input0].name].translate.y(ref)\} \{return 0\}]"} {"\[if \{\[exists  parent.parent.parent.input0]\} \{return \[value \[topnode parent.parent.parent.input0].name].translate.z(ref)\} \{return -1\}]"}}
    rotate {{"\[if \{\[exists  parent.parent.parent.input0]\} \{return \[value \[topnode parent.parent.parent.input0].name].rotate.x(ref)\} \{return 0\}]"} {"\[if \{\[exists  parent.parent.parent.input0]\} \{return \[value \[topnode parent.parent.parent.input0].name].rotate.y(ref)\} \{return 0\}]"} {"\[if \{\[exists  parent.parent.parent.input0]\} \{return \[value \[topnode parent.parent.parent.input0].name].rotate.z(ref)\} \{return 0\}]"}}
    scaling {{"\[if \{\[exists  parent.parent.parent.input0]\} \{return \[value \[topnode parent.parent.parent.input0].name].scaling.x(ref)\} \{return 1\}]"} {"\[if \{\[exists  parent.parent.parent.input0]\} \{return \[value \[topnode parent.parent.parent.input0].name].scaling.y(ref)\} \{return 1\}]"} {"\[if \{\[exists  parent.parent.parent.input0]\} \{return \[value \[topnode parent.parent.parent.input0].name].scaling.z(ref)\} \{return 1\}]"}}
    uniform_scale {{"\[if \{\[exists  parent.parent.parent.input0]\} \{return (\[value \[topnode parent.parent.parent.input0].name].uniform_scale(ref)*25)\} \{return 25\}]"}}
    shutteroffset centred
    name cCard3D_1
    tile_color 0x7b1d1dff
    label "ref frame: \[value ref]"
    xpos -135
    ypos 147
    addUserKnob {20 User l parent}
    addUserKnob {22 python_button l "set parent" t "select parent node, and press this button to set the selected node as parent" +INVISIBLE T "n = nuke.selectedNode()\['name'].getValue()\nnuke.thisNode()\['string'].setValue(n)" +STARTLINE}
    addUserKnob {1 string l parent +INVISIBLE}
    string null
    addUserKnob {3 id l "id number"}
    id {{parent.CTimeOffset7.shotnmbr}}
    addUserKnob {3 ref l "ref frame"}
    ref {{parent.CTimeOffset7.time_offset}}
   }
   Transform {
    translate {{"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].translate.x(ref)\}]"} {"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].translate.y(ref)\}]"}}
    rotate {{"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].rotate-\[value parent_gun].rotate(ref)\}]"}}
    scale {{"\[if \{\[value parent_gun]==\"null\"\} \{return 1\} \{return 1+(\[value parent_gun].scale-\[value parent_gun].scale(ref))\}]"}}
    center {{"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].center.x(ref)\}]"} {"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].center.y(ref)\}]"}}
    name GUNMatchMove1
    label "\n"
    xpos -135
    ypos 241
    addUserKnob {20 User l parent}
    addUserKnob {3 ref}
    ref {{parent.CTimeOffset7.ref}}
   }
   Transform {
    translate {{"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].translate.x-\[value parent_env].translate.x(ref)\}]"} {"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].translate.y-\[value parent_env].translate.y(ref)\}]"}}
    rotate {{"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].rotate-\[value parent_env].rotate(ref)\}]"}}
    scale {{"\[if \{\[value parent_gun]==\"null\"\} \{return 1\} \{return 1+(\[value parent_env].scale-\[value parent_env].scale(ref))\}]"}}
    center {{"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].center.x(ref)\}]"} {"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].center.y(ref)\}]"}}
    motionblur {{(mode==2)*0.2}}
    shutter {{FlashMB*(0.175*0.3)}}
    shutteroffset centred
    name ENVMatchMove1
    xpos -135
    ypos 317
    addUserKnob {20 User l parent}
    addUserKnob {3 ref}
    ref {{parent.CTimeOffset7.ref}}
   }
   Transform {
    translate {{"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return -((root.width/2)-(\[value parent_gun].center.x(1)+\[value parent_gun].translate.x(1)))\}]"} {"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return -((root.height/2)-(\[value parent_gun].center.y(1)+\[value parent_gun].translate.y(1)))\}]"}}
    shutteroffset centred
    name Transform_GUNMatchMove3
    label "alignment correction"
    xpos -135
    ypos 405
    addUserKnob {20 User l parent}
    addUserKnob {22 python_button l "set parent" t "select parent node, and press this button to set the selected node as parent" T "n = nuke.selectedNode()\['name'].getValue()\nnuke.thisNode()\['string'].setValue(n)" +STARTLINE}
    addUserKnob {1 string l parent}
    string Transform_MatchMove10
    addUserKnob {3 ref +INVISIBLE}
    ref {{parent.cCard3D_8.ref}}
   }
   Remove {
    operation keep
    channels rgb
    name Remove12
    xpos -135
    ypos 489
   }
push 0
   Switch {
    inputs 2
    which {{parent.Angle_reveal_side.value!=0}}
    name Switch6
    xpos -135
    ypos 676
   }
   Merge2 {
    inputs 3+1
    operation max
    name Merge1
    xpos -135
    ypos 745
   }
   Merge2 {
    inputs 2
    operation plus
    bbox intersection
    name Merge6
    xpos -135
    ypos 1196
   }
push 0
   Switch {
    inputs 2
    which {{"shot\[value count]==0?0:(EnableExtraFrames==1?floor(((frame>=shot\[value count])+(frame<=(shot\[value count]+(4*((mode==1)+(mode==2))))))/2):frame==shot\[value count])"}}
    name cSwitch_3
    xpos -135
    ypos 1359
    addUserKnob {20 User}
    addUserKnob {3 count l "shot number"}
    count {{parent.CTimeOffset7.shotnmbr}}
    addUserKnob {6 shot +STARTLINE}
    shot {{frame==(parent.CTimeOffset7.time_offset+1)}}
   }
   Output {
    name Output1
    xpos -135
    ypos 1861
   }
  end_group
push $N10420d10
push $N1078e880
  Group {
   inputs 2
   name gunshot6
   label "shot: \[value shotcount]\non frame: \[value shotstart]\n"
   xpos 8976
   ypos -810
   addUserKnob {20 User}
   addUserKnob {3 shotcount l shot}
   shotcount 6
   addUserKnob {3 shotstart l frame +INVISIBLE}
   shotstart {{"shotcount==0 ? 0 : shot\[value shotcount]-1"}}
  }
   BackdropNode {
    inputs 0
    name BackdropNode3
    knobChanged "try:\n    listenedKnobs = \['text', 'position', 'name']\n    node = nuke.thisNode()\n    name = node.knob('name').value()\n    text = node.knob('text').value()\n    position = node.knob('position').value()\n    position = \"<\" + position + \">\"\n    label = node.knob('label').value()\n    \n    if nuke.thisKnob().name() in listenedKnobs:\n        if text == \"\":\n            if node.knob('position').value() == \"left\":\n                node.knob('label').setValue()\n            else:\n                node.knob('label').setValue(position + name)\n        else:\n            if node.knob('position').value() == \"left\":\n                node.knob('label').setValue(text)\n            else:\n                node.knob('label').setValue(position + text)\n                \n    elif nuke.thisKnob().name() == 'font_size':\n        fontSize = node.knob('font_size').value()\n        node.knob('note_font_size').setValue(fontSize)\nexcept:\n    pass"
    tile_color 0x232323ff
    label "<Left><h2> Gunshot"
    note_font_size 31.5
    xpos -698
    ypos -924
    bdwidth 1057
    bdheight 2343
    addUserKnob {20 F_VFX l BackdropNode}
    addUserKnob {43 text l Text}
    text "<h2> Gunshot"
    addUserKnob {7 font_size l "Font Size" R 10 100}
    font_size 31.5
    addUserKnob {4 position l "" -STARTLINE M {Left Center}}
    addUserKnob {26 S01 l " " T " "}
    addUserKnob {22 grow l " <img src=\"F_scalep.png\">" -STARTLINE T "n=nuke.thisNode()\n\ndef grow(node=None,step=50):\n    try:\n        if not node:\n            n=nuke.selectedNode()\n        else:\n            n=node\n            n\['xpos'].setValue(n\['xpos'].getValue()-step)\n            n\['ypos'].setValue(n\['ypos'].getValue()-step)\n            n\['bdwidth'].setValue(n\['bdwidth'].getValue()+step*2)\n            n\['bdheight'].setValue(n\['bdheight'].getValue()+step*2)\n    except:\n        pass\ngrow(n,50)"}
    addUserKnob {22 shrink l " <img src=\"F_scalem.png\">" -STARTLINE T "n=nuke.thisNode()\n\ndef shrink(node=None,step=50):\n    try:\n        if not node:\n            n=nuke.selectedNode()\n        else:\n            n=node\n            n\['xpos'].setValue(n\['xpos'].getValue()+step)\n            n\['ypos'].setValue(n\['ypos'].getValue()+step)\n            n\['bdwidth'].setValue(n\['bdwidth'].getValue()-step*2)\n            n\['bdheight'].setValue(n\['bdheight'].getValue()-step*2)\n    except:\n        pass\nshrink(n,50)"}
    addUserKnob {22 colorandom l " <img src=\"ColorBars.png\">" -STARTLINE T "import colorsys, random\nn=nuke.thisNode()\nR,G,B= colorsys.hsv_to_rgb(random.random(),.1+random.random()*.15,.15+random.random()*.15)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ) )"}
    addUserKnob {22 darkgrey l "<font color=\"#232323\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.0, 0.0, 0.14]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 lightgrey l "<font color=\"#383838\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.0, 0.0, 0.22]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 red l "<font color=\"#8c3838\" size=6>■</font>" T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.0, 0.6, 0.55]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n" +STARTLINE}
    addUserKnob {22 orange l "<font color=\"#b28e59\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.1, 0.5, 0.7]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 yellow l "<font color=\"#ccc766\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.16, 0.5, 0.8]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 green l "<font color=\"#5d995b\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.33, 0.4, 0.6]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 cyan l "<font color=\"#72998f\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.46, 0.25, 0.6]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 blue l "<font color=\"#59687f\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.6, 0.3, 0.5]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 darkblue l "<font color=\"#63628c\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.67, 0.3, 0.55]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 magenta l "<font color=\"#927a99\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.8, 0.2, 0.6]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 pink l "<font color=\"#997a89\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.92, 0.2, 0.6]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {26 S02 l " " T " "}
    addUserKnob {26 Ftools l "" +STARTLINE T "<font color=\"#1C1C1C\"> v1.2 - Franklin VFX - 2018"}
   }
   BackdropNode {
    inputs 0
    name BackdropNode1
    knobChanged "try:\n    listenedKnobs = \['text', 'position', 'name']\n    node = nuke.thisNode()\n    name = node.knob('name').value()\n    text = node.knob('text').value()\n    position = node.knob('position').value()\n    position = \"<\" + position + \">\"\n    label = node.knob('label').value()\n    \n    if nuke.thisKnob().name() in listenedKnobs:\n        if text == \"\":\n            if node.knob('position').value() == \"left\":\n                node.knob('label').setValue()\n            else:\n                node.knob('label').setValue(position + name)\n        else:\n            if node.knob('position').value() == \"left\":\n                node.knob('label').setValue(text)\n            else:\n                node.knob('label').setValue(position + text)\n                \n    elif nuke.thisKnob().name() == 'font_size':\n        fontSize = node.knob('font_size').value()\n        node.knob('note_font_size').setValue(fontSize)\nexcept:\n    pass"
    tile_color 0x927a99ff
    note_font_size 50
    xpos -460
    ypos -257
    bdwidth 435
    bdheight 786
    z_order 1
    addUserKnob {20 F_VFX l BackdropNode}
    addUserKnob {43 text l Text}
    addUserKnob {7 font_size l "Font Size" R 10 100}
    font_size 50
    addUserKnob {4 position l "" -STARTLINE M {Left Center}}
    addUserKnob {26 S01 l " " T " "}
    addUserKnob {22 grow l " <img src=\"F_scalep.png\">" -STARTLINE T "n=nuke.thisNode()\n\ndef grow(node=None,step=50):\n    try:\n        if not node:\n            n=nuke.selectedNode()\n        else:\n            n=node\n            n\['xpos'].setValue(n\['xpos'].getValue()-step)\n            n\['ypos'].setValue(n\['ypos'].getValue()-step)\n            n\['bdwidth'].setValue(n\['bdwidth'].getValue()+step*2)\n            n\['bdheight'].setValue(n\['bdheight'].getValue()+step*2)\n    except:\n        pass\ngrow(n,50)"}
    addUserKnob {22 shrink l " <img src=\"F_scalem.png\">" -STARTLINE T "n=nuke.thisNode()\n\ndef shrink(node=None,step=50):\n    try:\n        if not node:\n            n=nuke.selectedNode()\n        else:\n            n=node\n            n\['xpos'].setValue(n\['xpos'].getValue()+step)\n            n\['ypos'].setValue(n\['ypos'].getValue()+step)\n            n\['bdwidth'].setValue(n\['bdwidth'].getValue()-step*2)\n            n\['bdheight'].setValue(n\['bdheight'].getValue()-step*2)\n    except:\n        pass\nshrink(n,50)"}
    addUserKnob {22 colorandom l " <img src=\"ColorBars.png\">" -STARTLINE T "import colorsys, random\nn=nuke.thisNode()\nR,G,B= colorsys.hsv_to_rgb(random.random(),.1+random.random()*.15,.15+random.random()*.15)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ) )"}
    addUserKnob {22 darkgrey l "<font color=\"#232323\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.0, 0.0, 0.14]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 lightgrey l "<font color=\"#383838\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.0, 0.0, 0.22]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 red l "<font color=\"#8c3838\" size=6>■</font>" T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.0, 0.6, 0.55]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n" +STARTLINE}
    addUserKnob {22 orange l "<font color=\"#b28e59\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.1, 0.5, 0.7]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 yellow l "<font color=\"#ccc766\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.16, 0.5, 0.8]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 green l "<font color=\"#5d995b\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.33, 0.4, 0.6]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 cyan l "<font color=\"#72998f\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.46, 0.25, 0.6]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 blue l "<font color=\"#59687f\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.6, 0.3, 0.5]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 darkblue l "<font color=\"#63628c\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.67, 0.3, 0.55]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 magenta l "<font color=\"#927a99\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.8, 0.2, 0.6]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 pink l "<font color=\"#997a89\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.92, 0.2, 0.6]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {26 S02 l " " T " "}
    addUserKnob {26 Ftools l "" +STARTLINE T "<font color=\"#1C1C1C\"> v1.2 - Franklin VFX - 2018"}
   }
   Constant {
    inputs 0
    channels rgb
    name Constant4
    xpos -648
    ypos 987
   }
   AdjBBox {
    numpixels {{size_bbox}}
    name AdjBBox4
    xpos -648
    ypos 1120
   }
   Dot {
    name Dot19
    xpos -614
    ypos 1200
   }
   Axis3 {
    inputs 0
    useMatrix true
    matrix {
        {{parent.cCard3D_1.matrix} {parent.cCard3D_1.matrix} {parent.cCard3D_1.matrix} {parent.cCard3D_1.matrix}}
        {{parent.cCard3D_1.matrix} {parent.cCard3D_1.matrix} {parent.cCard3D_1.matrix} {parent.cCard3D_1.matrix}}
        {{parent.cCard3D_1.matrix} {parent.cCard3D_1.matrix} {parent.cCard3D_1.matrix} {parent.cCard3D_1.matrix}}
        {{parent.cCard3D_1.matrix} {parent.cCard3D_1.matrix} {parent.cCard3D_1.matrix} {parent.cCard3D_1.matrix}}
      }
    name Axis3
    xpos -207
    ypos 48
   }
set N12ba01b0 [stack 0]
push 0
   Input {
    inputs 0
    name Side
    xpos -135
    ypos -1101
   }
   TimeOffset {
    time_offset {{"shotnmbr==0 ? 0 : shot\[value shotnmbr]-1"}}
    time ""
    name CTimeOffset7
    label "shot: \[value shotnmbr]\non frame \[value time_offset]"
    xpos -135
    ypos -852
    addUserKnob {20 User}
    addUserKnob {3 shotnmbr l "shot "}
    shotnmbr {{shotcount}}
    addUserKnob {3 ref}
    ref {{time_offset+1}}
   }
   Group {
    name DecimalTimeOffset1
    tile_color 0xafa35dff
    label "random asset\n(based on brighness)"
    note_font "Bitstream Vera Sans Bold"
    xpos -135
    ypos -689
    addUserKnob {20 User}
    addUserKnob {7 decimal l "time offset (decimal)"}
    decimal {{"floor\n(\n  (\n  (  ((((random((shotcount*823)+(seed*212))-0.5)*  ((1-( abs(brighness_flare-0.5) )*2)+1)  )+0.5)*0.5)  * (1-brighness_flare)  )\n\n  +\n\n  (  (((((random((shotcount*823)+(seed*212))-0.5)*  ((1-( abs(brighness_flare-0.5) )*2)+1)  )+0.5)*0.5)+0.5)  * (brighness_flare)  )\n  )\n  *1000\n)\n\n/1000"}}
    addUserKnob {26 ""}
    addUserKnob {26 _1 l "" +STARTLINE T "Chris Fryer | 2020\nupdated by Yorben Otto | 2024"}
   }
    Input {
     inputs 0
     name Input1
     xpos 426
     ypos -793
    }
    TimeOffset {
     time_offset {{(-floor(parent.decimal))*(DecimalTimeOffset1.decimal<0)}}
     time ""
     name TimeOffset1
     selected true
     xpos 426
     ypos -674
    }
    Dot {
     name Dot6
     selected true
     xpos 460
     ypos -635
    }
set N12bdf850 [stack 0]
    Dot {
     name Dot5
     selected true
     xpos 350
     ypos -635
    }
    Dot {
     name Dot7
     selected true
     xpos 350
     ypos -365
    }
push $N12bdf850
    Dot {
     name Dot1
     selected true
     xpos 572
     ypos -635
    }
    TimeBlur {
     divisions 2
     shutter {{(parent.decimal-(floor(parent.decimal)))*2}}
     shutteroffset start
     shuttercustomoffset 0
     name TimeBlur1
     selected true
     xpos 538
     ypos -558
    }
    Dot {
     name Dot2
     selected true
     xpos 572
     ypos -490
    }
push $N12bdf850
    TimeBlur {
     divisions 2
     shutter {{parent.decimal*2}}
     shutteroffset start
     shuttercustomoffset 0
     name TimeBlur8
     selected true
     xpos 426
     ypos -556
    }
    Switch {
     inputs 2
     which {{parent.decimal<0}}
     name Switch1
     selected true
     xpos 426
     ypos -494
    }
    Multiply {
     value {{parent.TimeBlur8.divisions}}
     name Multiply6
     selected true
     xpos 426
     ypos -436
    }
    Merge2 {
     inputs 2
     operation from
     name Merge6
     selected true
     xpos 426
     ypos -369
    }
set N12c21920 [stack 0]
    Output {
     name Output1
     xpos 426
     ypos -221
    }
push $N12c21920
push $N12c21920
    Viewer {
     inputs 2
     frame_range 1-100
     viewerProcess "sRGB (default)"
     name Viewer1
     xpos 675
     ypos -246
    }
   end_group
   NoTimeBlur {
    name NoTimeBlur6
    xpos -135
    ypos -608
   }
   Dot {
    name Dot21
    xpos -101
    ypos -449
   }
set N12cc0770 [stack 0]
   Dot {
    name Dot22
    xpos -245
    ypos -449
   }
   Multiply {
    value {{math_matrix.result_y_flash(parent.CTimeOffset7.ref)}}
    name Angle_reveal_top
    label TOP
    xpos -279
    ypos -371
   }
   Transform {
    scale {{0.05+(0.05*(((parent.DecimalTimeOffset1.decimal-0.5)*2)*ScaleVariationFlash))}}
    center {{root.width/2 x1015 2304} {root.height/2}}
    shutteroffset centred
    name random_size_top
    xpos -279
    ypos -136
   }
   Card3D {
    inputs 3
    rot_order ZYX
    translate {0 0 0}
    rotate {90 0 0}
    shutteroffset centred
    name cCard3D5
    tile_color 0x7b1d1dff
    xpos -279
    ypos 153
    addUserKnob {20 User l parent}
    addUserKnob {22 python_button l "set parent" t "select parent node, and press this button to set the selected node as parent" +INVISIBLE T "n = nuke.selectedNode()\['name'].getValue()\nnuke.thisNode()\['string'].setValue(n)" +STARTLINE}
    addUserKnob {1 string l parent +INVISIBLE}
    string null
    addUserKnob {3 ref l "ref frame"}
    ref 1015
   }
   Transform {
    translate {{"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].translate.x(ref)\}]"} {"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].translate.y(ref)\}]"}}
    rotate {{"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].rotate-\[value parent_gun].rotate(ref)\}]"}}
    scale {{"\[if \{\[value parent_gun]==\"null\"\} \{return 1\} \{return 1+(\[value parent_gun].scale-\[value parent_gun].scale(ref))\}]"}}
    center {{"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].center.x(ref)\}]"} {"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].center.y(ref)\}]"}}
    name GUNMatchMove
    label "\n"
    xpos -279
    ypos 247
    addUserKnob {20 User l parent}
    addUserKnob {3 ref}
    ref {{parent.CTimeOffset7.ref}}
   }
   Transform {
    translate {{"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].translate.x-\[value parent_env].translate.x(ref)\}]"} {"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].translate.y-\[value parent_env].translate.y(ref)\}]"}}
    rotate {{"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].rotate-\[value parent_env].rotate(ref)\}]"}}
    scale {{"\[if \{\[value parent_gun]==\"null\"\} \{return 1\} \{return 1+(\[value parent_env].scale-\[value parent_env].scale(ref))\}]"}}
    center {{"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].center.x(ref)\}]"} {"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].center.y(ref)\}]"}}
    motionblur {{(mode==2)*0.2}}
    shutter {{FlashMB*(0.175*0.3)}}
    shutteroffset centred
    name ENVMatchMove
    xpos -279
    ypos 321
    addUserKnob {20 User l parent}
    addUserKnob {3 ref}
    ref {{parent.CTimeOffset7.ref}}
   }
   Transform {
    translate {{"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return -((root.width/2)-(\[value parent_gun].center.x(1)+\[value parent_gun].translate.x(1)))\}]"} {"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return -((root.height/2)-(\[value parent_gun].center.y(1)+\[value parent_gun].translate.y(1)))\}]"}}
    shutteroffset centred
    name Transform_GUNMatchMove1
    label "alignment correction"
    xpos -279
    ypos 408
    addUserKnob {20 User l parent}
    addUserKnob {22 python_button l "set parent" t "select parent node, and press this button to set the selected node as parent" T "n = nuke.selectedNode()\['name'].getValue()\nnuke.thisNode()\['string'].setValue(n)" +STARTLINE}
    addUserKnob {1 string l parent}
    string Transform_MatchMove10
    addUserKnob {3 ref +INVISIBLE}
    ref {{parent.cCard3D_8.ref}}
   }
   Remove {
    operation keep
    channels rgb
    name Remove10
    xpos -279
    ypos 489
   }
push 0
   Switch {
    inputs 2
    which {{parent.Angle_reveal_top.value!=0}}
    name Switch4
    xpos -279
    ypos 670
   }
   Dot {
    name Dot1
    xpos -245
    ypos 717
   }
push 0
push $N12ba01b0
push 0
   Input {
    inputs 0
    name Front
    xpos -430
    ypos -1102
    number 1
   }
   TimeOffset {
    time_offset {{"shotnmbr==0 ? 0 : shot\[value shotnmbr]-1"}}
    time ""
    name CTimeOffset8
    xpos -430
    ypos -840
    addUserKnob {20 User}
    addUserKnob {3 shotnmbr l "shot "}
    shotnmbr {{parent.CTimeOffset7.shotnmbr}}
   }
   Group {
    name DecimalTimeOffset
    tile_color 0xafa35dff
    label "random asset\n(based on brighness)"
    note_font "Bitstream Vera Sans Bold"
    xpos -430
    ypos -693
    addUserKnob {20 User}
    addUserKnob {7 decimal l "time offset (decimal)"}
    decimal {{"floor\n(\n  (\n  (  ((((random((shotcount*823)+(seed*212))-0.5)*  ((1-( abs(brighness_flare-0.5) )*2)+1)  )+0.5)*0.5)  * (1-brighness_flare)  )\n\n  +\n\n  (  (((((random((shotcount*823)+(seed*212))-0.5)*  ((1-( abs(brighness_flare-0.5) )*2)+1)  )+0.5)*0.5)+0.5)  * (brighness_flare)  )\n  )\n  *1000\n)\n\n/1000"}}
    addUserKnob {26 ""}
    addUserKnob {26 _1 l "" +STARTLINE T "Chris Fryer | 2020\nupdated by Yorben Otto | 2024"}
   }
    Input {
     inputs 0
     name Input1
     xpos 426
     ypos -793
    }
    TimeOffset {
     time_offset {{(-floor(parent.decimal))*(DecimalTimeOffset.decimal<0)}}
     time ""
     name TimeOffset1
     selected true
     xpos 426
     ypos -674
    }
    Dot {
     name Dot6
     selected true
     xpos 460
     ypos -635
    }
set N12d67910 [stack 0]
    Dot {
     name Dot5
     selected true
     xpos 350
     ypos -635
    }
    Dot {
     name Dot7
     selected true
     xpos 350
     ypos -365
    }
push $N12d67910
    Dot {
     name Dot1
     selected true
     xpos 572
     ypos -635
    }
    TimeBlur {
     divisions 2
     shutter {{(parent.decimal-(floor(parent.decimal)))*2}}
     shutteroffset start
     shuttercustomoffset 0
     name TimeBlur1
     selected true
     xpos 538
     ypos -558
    }
    Dot {
     name Dot2
     selected true
     xpos 572
     ypos -490
    }
push $N12d67910
    TimeBlur {
     divisions 2
     shutter {{parent.decimal*2}}
     shutteroffset start
     shuttercustomoffset 0
     name TimeBlur8
     selected true
     xpos 426
     ypos -556
    }
    Switch {
     inputs 2
     which {{parent.decimal<0}}
     name Switch1
     selected true
     xpos 426
     ypos -494
    }
    Multiply {
     value {{parent.TimeBlur8.divisions}}
     name Multiply6
     selected true
     xpos 426
     ypos -436
    }
    Merge2 {
     inputs 2
     operation from
     name Merge6
     selected true
     xpos 426
     ypos -369
    }
set N12da99f0 [stack 0]
    Output {
     name Output1
     xpos 426
     ypos -221
    }
push $N12da99f0
push $N12da99f0
    Viewer {
     inputs 2
     frame_range 1-100
     viewerProcess "sRGB (default)"
     name Viewer1
     xpos 675
     ypos -246
    }
   end_group
   NoTimeBlur {
    name NoTimeBlur7
    xpos -430
    ypos -617
   }
   Multiply {
    value {{math_matrix.result_x_flash(parent.CTimeOffset7.ref)}}
    name Angle_reveal_front
    label FRONT
    xpos -430
    ypos -375
   }
   Transform {
    scale {{0.05+(0.05*(((parent.DecimalTimeOffset1.decimal-0.5)*2)*ScaleVariationFlash))}}
    center {{root.width/2 x1015 2304} {root.height/2}}
    shutteroffset centred
    name random_size_front
    xpos -430
    ypos -134
   }
   Card3D {
    inputs 3
    rot_order ZYX
    translate {0 0 0}
    rotate {0 90 0}
    shutteroffset centred
    name cCard3D6
    tile_color 0x7b1d1dff
    xpos -430
    ypos 150
    addUserKnob {20 User l parent}
    addUserKnob {22 python_button l "set parent" t "select parent node, and press this button to set the selected node as parent" +INVISIBLE T "n = nuke.selectedNode()\['name'].getValue()\nnuke.thisNode()\['string'].setValue(n)" +STARTLINE}
    addUserKnob {1 string l parent +INVISIBLE}
    string null
    addUserKnob {3 ref l "ref frame"}
    ref 1015
   }
   Transform {
    translate {{"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].translate.x(ref)\}]"} {"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].translate.y(ref)\}]"}}
    rotate {{"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].rotate-\[value parent_gun].rotate(ref)\}]"}}
    scale {{"\[if \{\[value parent_gun]==\"null\"\} \{return 1\} \{return 1+(\[value parent_gun].scale-\[value parent_gun].scale(ref))\}]"}}
    center {{"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].center.x(ref)\}]"} {"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].center.y(ref)\}]"}}
    name GUNMatchMove2
    label "\n"
    xpos -430
    ypos 248
    addUserKnob {20 User l parent}
    addUserKnob {3 ref}
    ref {{parent.CTimeOffset7.ref}}
   }
   Transform {
    translate {{"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].translate.x-\[value parent_env].translate.x(ref)\}]"} {"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].translate.y-\[value parent_env].translate.y(ref)\}]"}}
    rotate {{"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].rotate-\[value parent_env].rotate(ref)\}]"}}
    scale {{"\[if \{\[value parent_gun]==\"null\"\} \{return 1\} \{return 1+(\[value parent_env].scale-\[value parent_env].scale(ref))\}]"}}
    center {{"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].center.x(ref)\}]"} {"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].center.y(ref)\}]"}}
    motionblur {{(mode==2)*0.2}}
    shutter {{FlashMB*(0.175*0.3)}}
    shutteroffset centred
    name ENVMatchMove2
    xpos -430
    ypos 320
    addUserKnob {20 User l parent}
    addUserKnob {3 ref}
    ref {{parent.CTimeOffset7.ref}}
   }
   Transform {
    translate {{"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return -((root.width/2)-(\[value parent_gun].center.x(1)+\[value parent_gun].translate.x(1)))\}]"} {"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return -((root.height/2)-(\[value parent_gun].center.y(1)+\[value parent_gun].translate.y(1)))\}]"}}
    shutteroffset centred
    name Transform_GUNMatchMove2
    label "alignment correction"
    xpos -430
    ypos 407
    addUserKnob {20 User l parent}
    addUserKnob {22 python_button l "set parent" t "select parent node, and press this button to set the selected node as parent" T "n = nuke.selectedNode()\['name'].getValue()\nnuke.thisNode()\['string'].setValue(n)" +STARTLINE}
    addUserKnob {1 string l parent}
    string Transform_MatchMove10
    addUserKnob {3 ref +INVISIBLE}
    ref {{parent.cCard3D_8.ref}}
   }
   Remove {
    operation keep
    channels rgb
    name Remove11
    xpos -430
    ypos 487
   }
push 0
   Switch {
    inputs 2
    which {{parent.Angle_reveal_front.value!=0}}
    name Switch5
    xpos -430
    ypos 675
   }
   Dot {
    name Dot2
    xpos -396
    ypos 749
   }
push $N12cc0770
   Multiply {
    value {{math_matrix.result_z_flash(parent.CTimeOffset7.ref)}}
    name Angle_reveal_side
    label SIDE
    xpos -135
    ypos -372
   }
   Transform {
    scale {{0.05+(0.05*(((parent.DecimalTimeOffset1.decimal-0.5)*2)*ScaleVariationFlash))}}
    center {{root.width/2 x1015 2304} {root.height/2}}
    shutteroffset centred
    name random_size_side
    xpos -135
    ypos -136
   }
   Card3D {
    translate {{"\[if \{\[exists  parent.parent.parent.input0]\} \{return \[value \[topnode parent.parent.parent.input0].name].translate.x(ref)\} \{return 0\}]"} {"\[if \{\[exists  parent.parent.parent.input0]\} \{return \[value \[topnode parent.parent.parent.input0].name].translate.y(ref)\} \{return 0\}]"} {"\[if \{\[exists  parent.parent.parent.input0]\} \{return \[value \[topnode parent.parent.parent.input0].name].translate.z(ref)\} \{return -1\}]"}}
    rotate {{"\[if \{\[exists  parent.parent.parent.input0]\} \{return \[value \[topnode parent.parent.parent.input0].name].rotate.x(ref)\} \{return 0\}]"} {"\[if \{\[exists  parent.parent.parent.input0]\} \{return \[value \[topnode parent.parent.parent.input0].name].rotate.y(ref)\} \{return 0\}]"} {"\[if \{\[exists  parent.parent.parent.input0]\} \{return \[value \[topnode parent.parent.parent.input0].name].rotate.z(ref)\} \{return 0\}]"}}
    scaling {{"\[if \{\[exists  parent.parent.parent.input0]\} \{return \[value \[topnode parent.parent.parent.input0].name].scaling.x(ref)\} \{return 1\}]"} {"\[if \{\[exists  parent.parent.parent.input0]\} \{return \[value \[topnode parent.parent.parent.input0].name].scaling.y(ref)\} \{return 1\}]"} {"\[if \{\[exists  parent.parent.parent.input0]\} \{return \[value \[topnode parent.parent.parent.input0].name].scaling.z(ref)\} \{return 1\}]"}}
    uniform_scale {{"\[if \{\[exists  parent.parent.parent.input0]\} \{return (\[value \[topnode parent.parent.parent.input0].name].uniform_scale(ref)*25)\} \{return 25\}]"}}
    shutteroffset centred
    name cCard3D_1
    tile_color 0x7b1d1dff
    label "ref frame: \[value ref]"
    xpos -135
    ypos 147
    addUserKnob {20 User l parent}
    addUserKnob {22 python_button l "set parent" t "select parent node, and press this button to set the selected node as parent" +INVISIBLE T "n = nuke.selectedNode()\['name'].getValue()\nnuke.thisNode()\['string'].setValue(n)" +STARTLINE}
    addUserKnob {1 string l parent +INVISIBLE}
    string null
    addUserKnob {3 id l "id number"}
    id {{parent.CTimeOffset7.shotnmbr}}
    addUserKnob {3 ref l "ref frame"}
    ref {{parent.CTimeOffset7.time_offset}}
   }
   Transform {
    translate {{"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].translate.x(ref)\}]"} {"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].translate.y(ref)\}]"}}
    rotate {{"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].rotate-\[value parent_gun].rotate(ref)\}]"}}
    scale {{"\[if \{\[value parent_gun]==\"null\"\} \{return 1\} \{return 1+(\[value parent_gun].scale-\[value parent_gun].scale(ref))\}]"}}
    center {{"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].center.x(ref)\}]"} {"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].center.y(ref)\}]"}}
    name GUNMatchMove1
    label "\n"
    xpos -135
    ypos 241
    addUserKnob {20 User l parent}
    addUserKnob {3 ref}
    ref {{parent.CTimeOffset7.ref}}
   }
   Transform {
    translate {{"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].translate.x-\[value parent_env].translate.x(ref)\}]"} {"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].translate.y-\[value parent_env].translate.y(ref)\}]"}}
    rotate {{"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].rotate-\[value parent_env].rotate(ref)\}]"}}
    scale {{"\[if \{\[value parent_gun]==\"null\"\} \{return 1\} \{return 1+(\[value parent_env].scale-\[value parent_env].scale(ref))\}]"}}
    center {{"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].center.x(ref)\}]"} {"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].center.y(ref)\}]"}}
    motionblur {{(mode==2)*0.2}}
    shutter {{FlashMB*(0.175*0.3)}}
    shutteroffset centred
    name ENVMatchMove1
    xpos -135
    ypos 317
    addUserKnob {20 User l parent}
    addUserKnob {3 ref}
    ref {{parent.CTimeOffset7.ref}}
   }
   Transform {
    translate {{"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return -((root.width/2)-(\[value parent_gun].center.x(1)+\[value parent_gun].translate.x(1)))\}]"} {"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return -((root.height/2)-(\[value parent_gun].center.y(1)+\[value parent_gun].translate.y(1)))\}]"}}
    shutteroffset centred
    name Transform_GUNMatchMove3
    label "alignment correction"
    xpos -135
    ypos 405
    addUserKnob {20 User l parent}
    addUserKnob {22 python_button l "set parent" t "select parent node, and press this button to set the selected node as parent" T "n = nuke.selectedNode()\['name'].getValue()\nnuke.thisNode()\['string'].setValue(n)" +STARTLINE}
    addUserKnob {1 string l parent}
    string Transform_MatchMove10
    addUserKnob {3 ref +INVISIBLE}
    ref {{parent.cCard3D_8.ref}}
   }
   Remove {
    operation keep
    channels rgb
    name Remove12
    xpos -135
    ypos 489
   }
push 0
   Switch {
    inputs 2
    which {{parent.Angle_reveal_side.value!=0}}
    name Switch6
    xpos -135
    ypos 676
   }
   Merge2 {
    inputs 3+1
    operation max
    name Merge1
    xpos -135
    ypos 745
   }
   Merge2 {
    inputs 2
    operation plus
    bbox intersection
    name Merge6
    xpos -135
    ypos 1196
   }
push 0
   Switch {
    inputs 2
    which {{"shot\[value count]==0?0:(EnableExtraFrames==1?floor(((frame>=shot\[value count])+(frame<=(shot\[value count]+(4*((mode==1)+(mode==2))))))/2):frame==shot\[value count])"}}
    name cSwitch_3
    xpos -135
    ypos 1359
    addUserKnob {20 User}
    addUserKnob {3 count l "shot number"}
    count {{parent.CTimeOffset7.shotnmbr}}
    addUserKnob {6 shot +STARTLINE}
    shot {{frame==(parent.CTimeOffset7.time_offset+1)}}
   }
   Output {
    name Output1
    xpos -135
    ypos 1861
   }
  end_group
push 0
push $N10425dd0
push $N10793950
  Group {
   inputs 2
   name gunshot7
   label "shot: \[value shotcount]\non frame: \[value shotstart]\n"
   xpos 9215
   ypos -810
   addUserKnob {20 User}
   addUserKnob {3 shotcount l shot}
   shotcount 7
   addUserKnob {3 shotstart l frame +INVISIBLE}
   shotstart {{"shotcount==0 ? 0 : shot\[value shotcount]-1"}}
  }
   BackdropNode {
    inputs 0
    name BackdropNode3
    knobChanged "try:\n    listenedKnobs = \['text', 'position', 'name']\n    node = nuke.thisNode()\n    name = node.knob('name').value()\n    text = node.knob('text').value()\n    position = node.knob('position').value()\n    position = \"<\" + position + \">\"\n    label = node.knob('label').value()\n    \n    if nuke.thisKnob().name() in listenedKnobs:\n        if text == \"\":\n            if node.knob('position').value() == \"left\":\n                node.knob('label').setValue()\n            else:\n                node.knob('label').setValue(position + name)\n        else:\n            if node.knob('position').value() == \"left\":\n                node.knob('label').setValue(text)\n            else:\n                node.knob('label').setValue(position + text)\n                \n    elif nuke.thisKnob().name() == 'font_size':\n        fontSize = node.knob('font_size').value()\n        node.knob('note_font_size').setValue(fontSize)\nexcept:\n    pass"
    tile_color 0x232323ff
    label "<Left><h2> Gunshot"
    note_font_size 31.5
    xpos -698
    ypos -924
    bdwidth 1057
    bdheight 2343
    addUserKnob {20 F_VFX l BackdropNode}
    addUserKnob {43 text l Text}
    text "<h2> Gunshot"
    addUserKnob {7 font_size l "Font Size" R 10 100}
    font_size 31.5
    addUserKnob {4 position l "" -STARTLINE M {Left Center}}
    addUserKnob {26 S01 l " " T " "}
    addUserKnob {22 grow l " <img src=\"F_scalep.png\">" -STARTLINE T "n=nuke.thisNode()\n\ndef grow(node=None,step=50):\n    try:\n        if not node:\n            n=nuke.selectedNode()\n        else:\n            n=node\n            n\['xpos'].setValue(n\['xpos'].getValue()-step)\n            n\['ypos'].setValue(n\['ypos'].getValue()-step)\n            n\['bdwidth'].setValue(n\['bdwidth'].getValue()+step*2)\n            n\['bdheight'].setValue(n\['bdheight'].getValue()+step*2)\n    except:\n        pass\ngrow(n,50)"}
    addUserKnob {22 shrink l " <img src=\"F_scalem.png\">" -STARTLINE T "n=nuke.thisNode()\n\ndef shrink(node=None,step=50):\n    try:\n        if not node:\n            n=nuke.selectedNode()\n        else:\n            n=node\n            n\['xpos'].setValue(n\['xpos'].getValue()+step)\n            n\['ypos'].setValue(n\['ypos'].getValue()+step)\n            n\['bdwidth'].setValue(n\['bdwidth'].getValue()-step*2)\n            n\['bdheight'].setValue(n\['bdheight'].getValue()-step*2)\n    except:\n        pass\nshrink(n,50)"}
    addUserKnob {22 colorandom l " <img src=\"ColorBars.png\">" -STARTLINE T "import colorsys, random\nn=nuke.thisNode()\nR,G,B= colorsys.hsv_to_rgb(random.random(),.1+random.random()*.15,.15+random.random()*.15)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ) )"}
    addUserKnob {22 darkgrey l "<font color=\"#232323\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.0, 0.0, 0.14]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 lightgrey l "<font color=\"#383838\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.0, 0.0, 0.22]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 red l "<font color=\"#8c3838\" size=6>■</font>" T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.0, 0.6, 0.55]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n" +STARTLINE}
    addUserKnob {22 orange l "<font color=\"#b28e59\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.1, 0.5, 0.7]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 yellow l "<font color=\"#ccc766\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.16, 0.5, 0.8]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 green l "<font color=\"#5d995b\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.33, 0.4, 0.6]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 cyan l "<font color=\"#72998f\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.46, 0.25, 0.6]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 blue l "<font color=\"#59687f\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.6, 0.3, 0.5]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 darkblue l "<font color=\"#63628c\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.67, 0.3, 0.55]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 magenta l "<font color=\"#927a99\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.8, 0.2, 0.6]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 pink l "<font color=\"#997a89\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.92, 0.2, 0.6]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {26 S02 l " " T " "}
    addUserKnob {26 Ftools l "" +STARTLINE T "<font color=\"#1C1C1C\"> v1.2 - Franklin VFX - 2018"}
   }
   BackdropNode {
    inputs 0
    name BackdropNode1
    knobChanged "try:\n    listenedKnobs = \['text', 'position', 'name']\n    node = nuke.thisNode()\n    name = node.knob('name').value()\n    text = node.knob('text').value()\n    position = node.knob('position').value()\n    position = \"<\" + position + \">\"\n    label = node.knob('label').value()\n    \n    if nuke.thisKnob().name() in listenedKnobs:\n        if text == \"\":\n            if node.knob('position').value() == \"left\":\n                node.knob('label').setValue()\n            else:\n                node.knob('label').setValue(position + name)\n        else:\n            if node.knob('position').value() == \"left\":\n                node.knob('label').setValue(text)\n            else:\n                node.knob('label').setValue(position + text)\n                \n    elif nuke.thisKnob().name() == 'font_size':\n        fontSize = node.knob('font_size').value()\n        node.knob('note_font_size').setValue(fontSize)\nexcept:\n    pass"
    tile_color 0x927a99ff
    note_font_size 50
    xpos -460
    ypos -257
    bdwidth 435
    bdheight 786
    z_order 1
    addUserKnob {20 F_VFX l BackdropNode}
    addUserKnob {43 text l Text}
    addUserKnob {7 font_size l "Font Size" R 10 100}
    font_size 50
    addUserKnob {4 position l "" -STARTLINE M {Left Center}}
    addUserKnob {26 S01 l " " T " "}
    addUserKnob {22 grow l " <img src=\"F_scalep.png\">" -STARTLINE T "n=nuke.thisNode()\n\ndef grow(node=None,step=50):\n    try:\n        if not node:\n            n=nuke.selectedNode()\n        else:\n            n=node\n            n\['xpos'].setValue(n\['xpos'].getValue()-step)\n            n\['ypos'].setValue(n\['ypos'].getValue()-step)\n            n\['bdwidth'].setValue(n\['bdwidth'].getValue()+step*2)\n            n\['bdheight'].setValue(n\['bdheight'].getValue()+step*2)\n    except:\n        pass\ngrow(n,50)"}
    addUserKnob {22 shrink l " <img src=\"F_scalem.png\">" -STARTLINE T "n=nuke.thisNode()\n\ndef shrink(node=None,step=50):\n    try:\n        if not node:\n            n=nuke.selectedNode()\n        else:\n            n=node\n            n\['xpos'].setValue(n\['xpos'].getValue()+step)\n            n\['ypos'].setValue(n\['ypos'].getValue()+step)\n            n\['bdwidth'].setValue(n\['bdwidth'].getValue()-step*2)\n            n\['bdheight'].setValue(n\['bdheight'].getValue()-step*2)\n    except:\n        pass\nshrink(n,50)"}
    addUserKnob {22 colorandom l " <img src=\"ColorBars.png\">" -STARTLINE T "import colorsys, random\nn=nuke.thisNode()\nR,G,B= colorsys.hsv_to_rgb(random.random(),.1+random.random()*.15,.15+random.random()*.15)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ) )"}
    addUserKnob {22 darkgrey l "<font color=\"#232323\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.0, 0.0, 0.14]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 lightgrey l "<font color=\"#383838\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.0, 0.0, 0.22]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 red l "<font color=\"#8c3838\" size=6>■</font>" T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.0, 0.6, 0.55]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n" +STARTLINE}
    addUserKnob {22 orange l "<font color=\"#b28e59\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.1, 0.5, 0.7]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 yellow l "<font color=\"#ccc766\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.16, 0.5, 0.8]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 green l "<font color=\"#5d995b\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.33, 0.4, 0.6]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 cyan l "<font color=\"#72998f\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.46, 0.25, 0.6]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 blue l "<font color=\"#59687f\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.6, 0.3, 0.5]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 darkblue l "<font color=\"#63628c\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.67, 0.3, 0.55]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 magenta l "<font color=\"#927a99\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.8, 0.2, 0.6]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 pink l "<font color=\"#997a89\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.92, 0.2, 0.6]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {26 S02 l " " T " "}
    addUserKnob {26 Ftools l "" +STARTLINE T "<font color=\"#1C1C1C\"> v1.2 - Franklin VFX - 2018"}
   }
   Constant {
    inputs 0
    channels rgb
    name Constant4
    xpos -648
    ypos 987
   }
   AdjBBox {
    numpixels {{size_bbox}}
    name AdjBBox4
    xpos -648
    ypos 1120
   }
   Dot {
    name Dot19
    xpos -614
    ypos 1200
   }
   Axis3 {
    inputs 0
    useMatrix true
    matrix {
        {{parent.cCard3D_1.matrix} {parent.cCard3D_1.matrix} {parent.cCard3D_1.matrix} {parent.cCard3D_1.matrix}}
        {{parent.cCard3D_1.matrix} {parent.cCard3D_1.matrix} {parent.cCard3D_1.matrix} {parent.cCard3D_1.matrix}}
        {{parent.cCard3D_1.matrix} {parent.cCard3D_1.matrix} {parent.cCard3D_1.matrix} {parent.cCard3D_1.matrix}}
        {{parent.cCard3D_1.matrix} {parent.cCard3D_1.matrix} {parent.cCard3D_1.matrix} {parent.cCard3D_1.matrix}}
      }
    name Axis3
    xpos -207
    ypos 48
   }
set N12f96ae0 [stack 0]
push 0
   Input {
    inputs 0
    name Side
    xpos -135
    ypos -1101
   }
   TimeOffset {
    time_offset {{"shotnmbr==0 ? 0 : shot\[value shotnmbr]-1"}}
    time ""
    name CTimeOffset7
    label "shot: \[value shotnmbr]\non frame \[value time_offset]"
    xpos -135
    ypos -852
    addUserKnob {20 User}
    addUserKnob {3 shotnmbr l "shot "}
    shotnmbr {{shotcount}}
    addUserKnob {3 ref}
    ref {{time_offset+1}}
   }
   Group {
    name DecimalTimeOffset1
    tile_color 0xafa35dff
    label "random asset\n(based on brighness)"
    note_font "Bitstream Vera Sans Bold"
    xpos -135
    ypos -689
    addUserKnob {20 User}
    addUserKnob {7 decimal l "time offset (decimal)"}
    decimal {{"floor\n(\n  (\n  (  ((((random((shotcount*823)+(seed*212))-0.5)*  ((1-( abs(brighness_flare-0.5) )*2)+1)  )+0.5)*0.5)  * (1-brighness_flare)  )\n\n  +\n\n  (  (((((random((shotcount*823)+(seed*212))-0.5)*  ((1-( abs(brighness_flare-0.5) )*2)+1)  )+0.5)*0.5)+0.5)  * (brighness_flare)  )\n  )\n  *1000\n)\n\n/1000"}}
    addUserKnob {26 ""}
    addUserKnob {26 _1 l "" +STARTLINE T "Chris Fryer | 2020\nupdated by Yorben Otto | 2024"}
   }
    Input {
     inputs 0
     name Input1
     xpos 426
     ypos -793
    }
    TimeOffset {
     time_offset {{(-floor(parent.decimal))*(DecimalTimeOffset1.decimal<0)}}
     time ""
     name TimeOffset1
     selected true
     xpos 426
     ypos -674
    }
    Dot {
     name Dot6
     selected true
     xpos 460
     ypos -635
    }
set N12fd61b0 [stack 0]
    Dot {
     name Dot5
     selected true
     xpos 350
     ypos -635
    }
    Dot {
     name Dot7
     selected true
     xpos 350
     ypos -365
    }
push $N12fd61b0
    Dot {
     name Dot1
     selected true
     xpos 572
     ypos -635
    }
    TimeBlur {
     divisions 2
     shutter {{(parent.decimal-(floor(parent.decimal)))*2}}
     shutteroffset start
     shuttercustomoffset 0
     name TimeBlur1
     selected true
     xpos 538
     ypos -558
    }
    Dot {
     name Dot2
     selected true
     xpos 572
     ypos -490
    }
push $N12fd61b0
    TimeBlur {
     divisions 2
     shutter {{parent.decimal*2}}
     shutteroffset start
     shuttercustomoffset 0
     name TimeBlur8
     selected true
     xpos 426
     ypos -556
    }
    Switch {
     inputs 2
     which {{parent.decimal<0}}
     name Switch1
     selected true
     xpos 426
     ypos -494
    }
    Multiply {
     value {{parent.TimeBlur8.divisions}}
     name Multiply6
     selected true
     xpos 426
     ypos -436
    }
    Merge2 {
     inputs 2
     operation from
     name Merge6
     selected true
     xpos 426
     ypos -369
    }
set N13018290 [stack 0]
    Output {
     name Output1
     xpos 426
     ypos -221
    }
push $N13018290
push $N13018290
    Viewer {
     inputs 2
     frame_range 1-100
     viewerProcess "sRGB (default)"
     name Viewer1
     xpos 675
     ypos -246
    }
   end_group
   NoTimeBlur {
    name NoTimeBlur6
    xpos -135
    ypos -608
   }
   Dot {
    name Dot21
    xpos -101
    ypos -449
   }
set N130b70c0 [stack 0]
   Dot {
    name Dot22
    xpos -245
    ypos -449
   }
   Multiply {
    value {{math_matrix.result_y_flash(parent.CTimeOffset7.ref)}}
    name Angle_reveal_top
    label TOP
    xpos -279
    ypos -371
   }
   Transform {
    scale {{0.05+(0.05*(((parent.DecimalTimeOffset1.decimal-0.5)*2)*ScaleVariationFlash))}}
    center {{root.width/2 x1015 2304} {root.height/2}}
    shutteroffset centred
    name random_size_top
    xpos -279
    ypos -136
   }
   Card3D {
    inputs 3
    rot_order ZYX
    translate {0 0 0}
    rotate {90 0 0}
    shutteroffset centred
    name cCard3D5
    tile_color 0x7b1d1dff
    xpos -279
    ypos 153
    addUserKnob {20 User l parent}
    addUserKnob {22 python_button l "set parent" t "select parent node, and press this button to set the selected node as parent" +INVISIBLE T "n = nuke.selectedNode()\['name'].getValue()\nnuke.thisNode()\['string'].setValue(n)" +STARTLINE}
    addUserKnob {1 string l parent +INVISIBLE}
    string null
    addUserKnob {3 ref l "ref frame"}
    ref 1015
   }
   Transform {
    translate {{"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].translate.x(ref)\}]"} {"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].translate.y(ref)\}]"}}
    rotate {{"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].rotate-\[value parent_gun].rotate(ref)\}]"}}
    scale {{"\[if \{\[value parent_gun]==\"null\"\} \{return 1\} \{return 1+(\[value parent_gun].scale-\[value parent_gun].scale(ref))\}]"}}
    center {{"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].center.x(ref)\}]"} {"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].center.y(ref)\}]"}}
    name GUNMatchMove
    label "\n"
    xpos -279
    ypos 247
    addUserKnob {20 User l parent}
    addUserKnob {3 ref}
    ref {{parent.CTimeOffset7.ref}}
   }
   Transform {
    translate {{"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].translate.x-\[value parent_env].translate.x(ref)\}]"} {"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].translate.y-\[value parent_env].translate.y(ref)\}]"}}
    rotate {{"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].rotate-\[value parent_env].rotate(ref)\}]"}}
    scale {{"\[if \{\[value parent_gun]==\"null\"\} \{return 1\} \{return 1+(\[value parent_env].scale-\[value parent_env].scale(ref))\}]"}}
    center {{"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].center.x(ref)\}]"} {"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].center.y(ref)\}]"}}
    motionblur {{(mode==2)*0.2}}
    shutter {{FlashMB*(0.175*0.3)}}
    shutteroffset centred
    name ENVMatchMove
    xpos -279
    ypos 321
    addUserKnob {20 User l parent}
    addUserKnob {3 ref}
    ref {{parent.CTimeOffset7.ref}}
   }
   Transform {
    translate {{"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return -((root.width/2)-(\[value parent_gun].center.x(1)+\[value parent_gun].translate.x(1)))\}]"} {"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return -((root.height/2)-(\[value parent_gun].center.y(1)+\[value parent_gun].translate.y(1)))\}]"}}
    shutteroffset centred
    name Transform_GUNMatchMove1
    label "alignment correction"
    xpos -279
    ypos 408
    addUserKnob {20 User l parent}
    addUserKnob {22 python_button l "set parent" t "select parent node, and press this button to set the selected node as parent" T "n = nuke.selectedNode()\['name'].getValue()\nnuke.thisNode()\['string'].setValue(n)" +STARTLINE}
    addUserKnob {1 string l parent}
    string Transform_MatchMove10
    addUserKnob {3 ref +INVISIBLE}
    ref {{parent.cCard3D_8.ref}}
   }
   Remove {
    operation keep
    channels rgb
    name Remove10
    xpos -279
    ypos 489
   }
push 0
   Switch {
    inputs 2
    which {{parent.Angle_reveal_top.value!=0}}
    name Switch4
    xpos -279
    ypos 670
   }
   Dot {
    name Dot1
    xpos -245
    ypos 717
   }
push 0
push $N12f96ae0
push 0
   Input {
    inputs 0
    name Front
    xpos -430
    ypos -1102
    number 1
   }
   TimeOffset {
    time_offset {{"shotnmbr==0 ? 0 : shot\[value shotnmbr]-1"}}
    time ""
    name CTimeOffset8
    xpos -430
    ypos -840
    addUserKnob {20 User}
    addUserKnob {3 shotnmbr l "shot "}
    shotnmbr {{parent.CTimeOffset7.shotnmbr}}
   }
   Group {
    name DecimalTimeOffset
    tile_color 0xafa35dff
    label "random asset\n(based on brighness)"
    note_font "Bitstream Vera Sans Bold"
    xpos -430
    ypos -693
    addUserKnob {20 User}
    addUserKnob {7 decimal l "time offset (decimal)"}
    decimal {{"floor\n(\n  (\n  (  ((((random((shotcount*823)+(seed*212))-0.5)*  ((1-( abs(brighness_flare-0.5) )*2)+1)  )+0.5)*0.5)  * (1-brighness_flare)  )\n\n  +\n\n  (  (((((random((shotcount*823)+(seed*212))-0.5)*  ((1-( abs(brighness_flare-0.5) )*2)+1)  )+0.5)*0.5)+0.5)  * (brighness_flare)  )\n  )\n  *1000\n)\n\n/1000"}}
    addUserKnob {26 ""}
    addUserKnob {26 _1 l "" +STARTLINE T "Chris Fryer | 2020\nupdated by Yorben Otto | 2024"}
   }
    Input {
     inputs 0
     name Input1
     xpos 426
     ypos -793
    }
    TimeOffset {
     time_offset {{(-floor(parent.decimal))*(DecimalTimeOffset.decimal<0)}}
     time ""
     name TimeOffset1
     selected true
     xpos 426
     ypos -674
    }
    Dot {
     name Dot6
     selected true
     xpos 460
     ypos -635
    }
set N1315e240 [stack 0]
    Dot {
     name Dot5
     selected true
     xpos 350
     ypos -635
    }
    Dot {
     name Dot7
     selected true
     xpos 350
     ypos -365
    }
push $N1315e240
    Dot {
     name Dot1
     selected true
     xpos 572
     ypos -635
    }
    TimeBlur {
     divisions 2
     shutter {{(parent.decimal-(floor(parent.decimal)))*2}}
     shutteroffset start
     shuttercustomoffset 0
     name TimeBlur1
     selected true
     xpos 538
     ypos -558
    }
    Dot {
     name Dot2
     selected true
     xpos 572
     ypos -490
    }
push $N1315e240
    TimeBlur {
     divisions 2
     shutter {{parent.decimal*2}}
     shutteroffset start
     shuttercustomoffset 0
     name TimeBlur8
     selected true
     xpos 426
     ypos -556
    }
    Switch {
     inputs 2
     which {{parent.decimal<0}}
     name Switch1
     selected true
     xpos 426
     ypos -494
    }
    Multiply {
     value {{parent.TimeBlur8.divisions}}
     name Multiply6
     selected true
     xpos 426
     ypos -436
    }
    Merge2 {
     inputs 2
     operation from
     name Merge6
     selected true
     xpos 426
     ypos -369
    }
set N131a0310 [stack 0]
    Output {
     name Output1
     xpos 426
     ypos -221
    }
push $N131a0310
push $N131a0310
    Viewer {
     inputs 2
     frame_range 1-100
     viewerProcess "sRGB (default)"
     name Viewer1
     xpos 675
     ypos -246
    }
   end_group
   NoTimeBlur {
    name NoTimeBlur7
    xpos -430
    ypos -617
   }
   Multiply {
    value {{math_matrix.result_x_flash(parent.CTimeOffset7.ref)}}
    name Angle_reveal_front
    label FRONT
    xpos -430
    ypos -375
   }
   Transform {
    scale {{0.05+(0.05*(((parent.DecimalTimeOffset1.decimal-0.5)*2)*ScaleVariationFlash))}}
    center {{root.width/2 x1015 2304} {root.height/2}}
    shutteroffset centred
    name random_size_front
    xpos -430
    ypos -134
   }
   Card3D {
    inputs 3
    rot_order ZYX
    translate {0 0 0}
    rotate {0 90 0}
    shutteroffset centred
    name cCard3D6
    tile_color 0x7b1d1dff
    xpos -430
    ypos 150
    addUserKnob {20 User l parent}
    addUserKnob {22 python_button l "set parent" t "select parent node, and press this button to set the selected node as parent" +INVISIBLE T "n = nuke.selectedNode()\['name'].getValue()\nnuke.thisNode()\['string'].setValue(n)" +STARTLINE}
    addUserKnob {1 string l parent +INVISIBLE}
    string null
    addUserKnob {3 ref l "ref frame"}
    ref 1015
   }
   Transform {
    translate {{"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].translate.x(ref)\}]"} {"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].translate.y(ref)\}]"}}
    rotate {{"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].rotate-\[value parent_gun].rotate(ref)\}]"}}
    scale {{"\[if \{\[value parent_gun]==\"null\"\} \{return 1\} \{return 1+(\[value parent_gun].scale-\[value parent_gun].scale(ref))\}]"}}
    center {{"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].center.x(ref)\}]"} {"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].center.y(ref)\}]"}}
    name GUNMatchMove2
    label "\n"
    xpos -430
    ypos 248
    addUserKnob {20 User l parent}
    addUserKnob {3 ref}
    ref {{parent.CTimeOffset7.ref}}
   }
   Transform {
    translate {{"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].translate.x-\[value parent_env].translate.x(ref)\}]"} {"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].translate.y-\[value parent_env].translate.y(ref)\}]"}}
    rotate {{"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].rotate-\[value parent_env].rotate(ref)\}]"}}
    scale {{"\[if \{\[value parent_gun]==\"null\"\} \{return 1\} \{return 1+(\[value parent_env].scale-\[value parent_env].scale(ref))\}]"}}
    center {{"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].center.x(ref)\}]"} {"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].center.y(ref)\}]"}}
    motionblur {{(mode==2)*0.2}}
    shutter {{FlashMB*(0.175*0.3)}}
    shutteroffset centred
    name ENVMatchMove2
    xpos -430
    ypos 320
    addUserKnob {20 User l parent}
    addUserKnob {3 ref}
    ref {{parent.CTimeOffset7.ref}}
   }
   Transform {
    translate {{"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return -((root.width/2)-(\[value parent_gun].center.x(1)+\[value parent_gun].translate.x(1)))\}]"} {"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return -((root.height/2)-(\[value parent_gun].center.y(1)+\[value parent_gun].translate.y(1)))\}]"}}
    shutteroffset centred
    name Transform_GUNMatchMove2
    label "alignment correction"
    xpos -430
    ypos 407
    addUserKnob {20 User l parent}
    addUserKnob {22 python_button l "set parent" t "select parent node, and press this button to set the selected node as parent" T "n = nuke.selectedNode()\['name'].getValue()\nnuke.thisNode()\['string'].setValue(n)" +STARTLINE}
    addUserKnob {1 string l parent}
    string Transform_MatchMove10
    addUserKnob {3 ref +INVISIBLE}
    ref {{parent.cCard3D_8.ref}}
   }
   Remove {
    operation keep
    channels rgb
    name Remove11
    xpos -430
    ypos 487
   }
push 0
   Switch {
    inputs 2
    which {{parent.Angle_reveal_front.value!=0}}
    name Switch5
    xpos -430
    ypos 675
   }
   Dot {
    name Dot2
    xpos -396
    ypos 749
   }
push $N130b70c0
   Multiply {
    value {{math_matrix.result_z_flash(parent.CTimeOffset7.ref)}}
    name Angle_reveal_side
    label SIDE
    xpos -135
    ypos -372
   }
   Transform {
    scale {{0.05+(0.05*(((parent.DecimalTimeOffset1.decimal-0.5)*2)*ScaleVariationFlash))}}
    center {{root.width/2 x1015 2304} {root.height/2}}
    shutteroffset centred
    name random_size_side
    xpos -135
    ypos -136
   }
   Card3D {
    translate {{"\[if \{\[exists  parent.parent.parent.input0]\} \{return \[value \[topnode parent.parent.parent.input0].name].translate.x(ref)\} \{return 0\}]"} {"\[if \{\[exists  parent.parent.parent.input0]\} \{return \[value \[topnode parent.parent.parent.input0].name].translate.y(ref)\} \{return 0\}]"} {"\[if \{\[exists  parent.parent.parent.input0]\} \{return \[value \[topnode parent.parent.parent.input0].name].translate.z(ref)\} \{return -1\}]"}}
    rotate {{"\[if \{\[exists  parent.parent.parent.input0]\} \{return \[value \[topnode parent.parent.parent.input0].name].rotate.x(ref)\} \{return 0\}]"} {"\[if \{\[exists  parent.parent.parent.input0]\} \{return \[value \[topnode parent.parent.parent.input0].name].rotate.y(ref)\} \{return 0\}]"} {"\[if \{\[exists  parent.parent.parent.input0]\} \{return \[value \[topnode parent.parent.parent.input0].name].rotate.z(ref)\} \{return 0\}]"}}
    scaling {{"\[if \{\[exists  parent.parent.parent.input0]\} \{return \[value \[topnode parent.parent.parent.input0].name].scaling.x(ref)\} \{return 1\}]"} {"\[if \{\[exists  parent.parent.parent.input0]\} \{return \[value \[topnode parent.parent.parent.input0].name].scaling.y(ref)\} \{return 1\}]"} {"\[if \{\[exists  parent.parent.parent.input0]\} \{return \[value \[topnode parent.parent.parent.input0].name].scaling.z(ref)\} \{return 1\}]"}}
    uniform_scale {{"\[if \{\[exists  parent.parent.parent.input0]\} \{return (\[value \[topnode parent.parent.parent.input0].name].uniform_scale(ref)*25)\} \{return 25\}]"}}
    shutteroffset centred
    name cCard3D_1
    tile_color 0x7b1d1dff
    label "ref frame: \[value ref]"
    xpos -135
    ypos 147
    addUserKnob {20 User l parent}
    addUserKnob {22 python_button l "set parent" t "select parent node, and press this button to set the selected node as parent" +INVISIBLE T "n = nuke.selectedNode()\['name'].getValue()\nnuke.thisNode()\['string'].setValue(n)" +STARTLINE}
    addUserKnob {1 string l parent +INVISIBLE}
    string null
    addUserKnob {3 id l "id number"}
    id {{parent.CTimeOffset7.shotnmbr}}
    addUserKnob {3 ref l "ref frame"}
    ref {{parent.CTimeOffset7.time_offset}}
   }
   Transform {
    translate {{"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].translate.x(ref)\}]"} {"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].translate.y(ref)\}]"}}
    rotate {{"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].rotate-\[value parent_gun].rotate(ref)\}]"}}
    scale {{"\[if \{\[value parent_gun]==\"null\"\} \{return 1\} \{return 1+(\[value parent_gun].scale-\[value parent_gun].scale(ref))\}]"}}
    center {{"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].center.x(ref)\}]"} {"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].center.y(ref)\}]"}}
    name GUNMatchMove1
    label "\n"
    xpos -135
    ypos 241
    addUserKnob {20 User l parent}
    addUserKnob {3 ref}
    ref {{parent.CTimeOffset7.ref}}
   }
   Transform {
    translate {{"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].translate.x-\[value parent_env].translate.x(ref)\}]"} {"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].translate.y-\[value parent_env].translate.y(ref)\}]"}}
    rotate {{"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].rotate-\[value parent_env].rotate(ref)\}]"}}
    scale {{"\[if \{\[value parent_gun]==\"null\"\} \{return 1\} \{return 1+(\[value parent_env].scale-\[value parent_env].scale(ref))\}]"}}
    center {{"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].center.x(ref)\}]"} {"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].center.y(ref)\}]"}}
    motionblur {{(mode==2)*0.2}}
    shutter {{FlashMB*(0.175*0.3)}}
    shutteroffset centred
    name ENVMatchMove1
    xpos -135
    ypos 317
    addUserKnob {20 User l parent}
    addUserKnob {3 ref}
    ref {{parent.CTimeOffset7.ref}}
   }
   Transform {
    translate {{"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return -((root.width/2)-(\[value parent_gun].center.x(1)+\[value parent_gun].translate.x(1)))\}]"} {"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return -((root.height/2)-(\[value parent_gun].center.y(1)+\[value parent_gun].translate.y(1)))\}]"}}
    shutteroffset centred
    name Transform_GUNMatchMove3
    label "alignment correction"
    xpos -135
    ypos 405
    addUserKnob {20 User l parent}
    addUserKnob {22 python_button l "set parent" t "select parent node, and press this button to set the selected node as parent" T "n = nuke.selectedNode()\['name'].getValue()\nnuke.thisNode()\['string'].setValue(n)" +STARTLINE}
    addUserKnob {1 string l parent}
    string Transform_MatchMove10
    addUserKnob {3 ref +INVISIBLE}
    ref {{parent.cCard3D_8.ref}}
   }
   Remove {
    operation keep
    channels rgb
    name Remove12
    xpos -135
    ypos 489
   }
push 0
   Switch {
    inputs 2
    which {{parent.Angle_reveal_side.value!=0}}
    name Switch6
    xpos -135
    ypos 676
   }
   Merge2 {
    inputs 3+1
    operation max
    name Merge1
    xpos -135
    ypos 745
   }
   Merge2 {
    inputs 2
    operation plus
    bbox intersection
    name Merge6
    xpos -135
    ypos 1196
   }
push 0
   Switch {
    inputs 2
    which {{"shot\[value count]==0?0:(EnableExtraFrames==1?floor(((frame>=shot\[value count])+(frame<=(shot\[value count]+(4*((mode==1)+(mode==2))))))/2):frame==shot\[value count])"}}
    name cSwitch_3
    xpos -135
    ypos 1359
    addUserKnob {20 User}
    addUserKnob {3 count l "shot number"}
    count {{parent.CTimeOffset7.shotnmbr}}
    addUserKnob {6 shot +STARTLINE}
    shot {{frame==(parent.CTimeOffset7.time_offset+1)}}
   }
   Output {
    name Output1
    xpos -135
    ypos 1861
   }
  end_group
push $N1042ae90
push $N10798a20
  Group {
   inputs 2
   name gunshot8
   label "shot: \[value shotcount]\non frame: \[value shotstart]\n"
   xpos 9415
   ypos -810
   addUserKnob {20 User}
   addUserKnob {3 shotcount l shot}
   shotcount 8
   addUserKnob {3 shotstart l frame +INVISIBLE}
   shotstart {{"shotcount==0 ? 0 : shot\[value shotcount]-1"}}
  }
   BackdropNode {
    inputs 0
    name BackdropNode3
    knobChanged "try:\n    listenedKnobs = \['text', 'position', 'name']\n    node = nuke.thisNode()\n    name = node.knob('name').value()\n    text = node.knob('text').value()\n    position = node.knob('position').value()\n    position = \"<\" + position + \">\"\n    label = node.knob('label').value()\n    \n    if nuke.thisKnob().name() in listenedKnobs:\n        if text == \"\":\n            if node.knob('position').value() == \"left\":\n                node.knob('label').setValue()\n            else:\n                node.knob('label').setValue(position + name)\n        else:\n            if node.knob('position').value() == \"left\":\n                node.knob('label').setValue(text)\n            else:\n                node.knob('label').setValue(position + text)\n                \n    elif nuke.thisKnob().name() == 'font_size':\n        fontSize = node.knob('font_size').value()\n        node.knob('note_font_size').setValue(fontSize)\nexcept:\n    pass"
    tile_color 0x232323ff
    label "<Left><h2> Gunshot"
    note_font_size 31.5
    xpos -698
    ypos -924
    bdwidth 1057
    bdheight 2343
    addUserKnob {20 F_VFX l BackdropNode}
    addUserKnob {43 text l Text}
    text "<h2> Gunshot"
    addUserKnob {7 font_size l "Font Size" R 10 100}
    font_size 31.5
    addUserKnob {4 position l "" -STARTLINE M {Left Center}}
    addUserKnob {26 S01 l " " T " "}
    addUserKnob {22 grow l " <img src=\"F_scalep.png\">" -STARTLINE T "n=nuke.thisNode()\n\ndef grow(node=None,step=50):\n    try:\n        if not node:\n            n=nuke.selectedNode()\n        else:\n            n=node\n            n\['xpos'].setValue(n\['xpos'].getValue()-step)\n            n\['ypos'].setValue(n\['ypos'].getValue()-step)\n            n\['bdwidth'].setValue(n\['bdwidth'].getValue()+step*2)\n            n\['bdheight'].setValue(n\['bdheight'].getValue()+step*2)\n    except:\n        pass\ngrow(n,50)"}
    addUserKnob {22 shrink l " <img src=\"F_scalem.png\">" -STARTLINE T "n=nuke.thisNode()\n\ndef shrink(node=None,step=50):\n    try:\n        if not node:\n            n=nuke.selectedNode()\n        else:\n            n=node\n            n\['xpos'].setValue(n\['xpos'].getValue()+step)\n            n\['ypos'].setValue(n\['ypos'].getValue()+step)\n            n\['bdwidth'].setValue(n\['bdwidth'].getValue()-step*2)\n            n\['bdheight'].setValue(n\['bdheight'].getValue()-step*2)\n    except:\n        pass\nshrink(n,50)"}
    addUserKnob {22 colorandom l " <img src=\"ColorBars.png\">" -STARTLINE T "import colorsys, random\nn=nuke.thisNode()\nR,G,B= colorsys.hsv_to_rgb(random.random(),.1+random.random()*.15,.15+random.random()*.15)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ) )"}
    addUserKnob {22 darkgrey l "<font color=\"#232323\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.0, 0.0, 0.14]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 lightgrey l "<font color=\"#383838\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.0, 0.0, 0.22]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 red l "<font color=\"#8c3838\" size=6>■</font>" T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.0, 0.6, 0.55]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n" +STARTLINE}
    addUserKnob {22 orange l "<font color=\"#b28e59\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.1, 0.5, 0.7]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 yellow l "<font color=\"#ccc766\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.16, 0.5, 0.8]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 green l "<font color=\"#5d995b\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.33, 0.4, 0.6]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 cyan l "<font color=\"#72998f\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.46, 0.25, 0.6]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 blue l "<font color=\"#59687f\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.6, 0.3, 0.5]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 darkblue l "<font color=\"#63628c\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.67, 0.3, 0.55]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 magenta l "<font color=\"#927a99\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.8, 0.2, 0.6]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 pink l "<font color=\"#997a89\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.92, 0.2, 0.6]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {26 S02 l " " T " "}
    addUserKnob {26 Ftools l "" +STARTLINE T "<font color=\"#1C1C1C\"> v1.2 - Franklin VFX - 2018"}
   }
   BackdropNode {
    inputs 0
    name BackdropNode1
    knobChanged "try:\n    listenedKnobs = \['text', 'position', 'name']\n    node = nuke.thisNode()\n    name = node.knob('name').value()\n    text = node.knob('text').value()\n    position = node.knob('position').value()\n    position = \"<\" + position + \">\"\n    label = node.knob('label').value()\n    \n    if nuke.thisKnob().name() in listenedKnobs:\n        if text == \"\":\n            if node.knob('position').value() == \"left\":\n                node.knob('label').setValue()\n            else:\n                node.knob('label').setValue(position + name)\n        else:\n            if node.knob('position').value() == \"left\":\n                node.knob('label').setValue(text)\n            else:\n                node.knob('label').setValue(position + text)\n                \n    elif nuke.thisKnob().name() == 'font_size':\n        fontSize = node.knob('font_size').value()\n        node.knob('note_font_size').setValue(fontSize)\nexcept:\n    pass"
    tile_color 0x927a99ff
    note_font_size 50
    xpos -460
    ypos -257
    bdwidth 435
    bdheight 786
    z_order 1
    addUserKnob {20 F_VFX l BackdropNode}
    addUserKnob {43 text l Text}
    addUserKnob {7 font_size l "Font Size" R 10 100}
    font_size 50
    addUserKnob {4 position l "" -STARTLINE M {Left Center}}
    addUserKnob {26 S01 l " " T " "}
    addUserKnob {22 grow l " <img src=\"F_scalep.png\">" -STARTLINE T "n=nuke.thisNode()\n\ndef grow(node=None,step=50):\n    try:\n        if not node:\n            n=nuke.selectedNode()\n        else:\n            n=node\n            n\['xpos'].setValue(n\['xpos'].getValue()-step)\n            n\['ypos'].setValue(n\['ypos'].getValue()-step)\n            n\['bdwidth'].setValue(n\['bdwidth'].getValue()+step*2)\n            n\['bdheight'].setValue(n\['bdheight'].getValue()+step*2)\n    except:\n        pass\ngrow(n,50)"}
    addUserKnob {22 shrink l " <img src=\"F_scalem.png\">" -STARTLINE T "n=nuke.thisNode()\n\ndef shrink(node=None,step=50):\n    try:\n        if not node:\n            n=nuke.selectedNode()\n        else:\n            n=node\n            n\['xpos'].setValue(n\['xpos'].getValue()+step)\n            n\['ypos'].setValue(n\['ypos'].getValue()+step)\n            n\['bdwidth'].setValue(n\['bdwidth'].getValue()-step*2)\n            n\['bdheight'].setValue(n\['bdheight'].getValue()-step*2)\n    except:\n        pass\nshrink(n,50)"}
    addUserKnob {22 colorandom l " <img src=\"ColorBars.png\">" -STARTLINE T "import colorsys, random\nn=nuke.thisNode()\nR,G,B= colorsys.hsv_to_rgb(random.random(),.1+random.random()*.15,.15+random.random()*.15)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ) )"}
    addUserKnob {22 darkgrey l "<font color=\"#232323\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.0, 0.0, 0.14]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 lightgrey l "<font color=\"#383838\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.0, 0.0, 0.22]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 red l "<font color=\"#8c3838\" size=6>■</font>" T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.0, 0.6, 0.55]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n" +STARTLINE}
    addUserKnob {22 orange l "<font color=\"#b28e59\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.1, 0.5, 0.7]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 yellow l "<font color=\"#ccc766\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.16, 0.5, 0.8]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 green l "<font color=\"#5d995b\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.33, 0.4, 0.6]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 cyan l "<font color=\"#72998f\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.46, 0.25, 0.6]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 blue l "<font color=\"#59687f\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.6, 0.3, 0.5]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 darkblue l "<font color=\"#63628c\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.67, 0.3, 0.55]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 magenta l "<font color=\"#927a99\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.8, 0.2, 0.6]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 pink l "<font color=\"#997a89\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.92, 0.2, 0.6]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {26 S02 l " " T " "}
    addUserKnob {26 Ftools l "" +STARTLINE T "<font color=\"#1C1C1C\"> v1.2 - Franklin VFX - 2018"}
   }
   Constant {
    inputs 0
    channels rgb
    name Constant4
    xpos -648
    ypos 987
   }
   AdjBBox {
    numpixels {{size_bbox}}
    name AdjBBox4
    xpos -648
    ypos 1120
   }
   Dot {
    name Dot19
    xpos -614
    ypos 1200
   }
   Axis3 {
    inputs 0
    useMatrix true
    matrix {
        {{parent.cCard3D_1.matrix} {parent.cCard3D_1.matrix} {parent.cCard3D_1.matrix} {parent.cCard3D_1.matrix}}
        {{parent.cCard3D_1.matrix} {parent.cCard3D_1.matrix} {parent.cCard3D_1.matrix} {parent.cCard3D_1.matrix}}
        {{parent.cCard3D_1.matrix} {parent.cCard3D_1.matrix} {parent.cCard3D_1.matrix} {parent.cCard3D_1.matrix}}
        {{parent.cCard3D_1.matrix} {parent.cCard3D_1.matrix} {parent.cCard3D_1.matrix} {parent.cCard3D_1.matrix}}
      }
    name Axis3
    xpos -207
    ypos 48
   }
set N1338d390 [stack 0]
push 0
   Input {
    inputs 0
    name Side
    xpos -135
    ypos -1101
   }
   TimeOffset {
    time_offset {{"shotnmbr==0 ? 0 : shot\[value shotnmbr]-1"}}
    time ""
    name CTimeOffset7
    label "shot: \[value shotnmbr]\non frame \[value time_offset]"
    xpos -135
    ypos -852
    addUserKnob {20 User}
    addUserKnob {3 shotnmbr l "shot "}
    shotnmbr {{shotcount}}
    addUserKnob {3 ref}
    ref {{time_offset+1}}
   }
   Group {
    name DecimalTimeOffset1
    tile_color 0xafa35dff
    label "random asset\n(based on brighness)"
    note_font "Bitstream Vera Sans Bold"
    xpos -135
    ypos -689
    addUserKnob {20 User}
    addUserKnob {7 decimal l "time offset (decimal)"}
    decimal {{"floor\n(\n  (\n  (  ((((random((shotcount*823)+(seed*212))-0.5)*  ((1-( abs(brighness_flare-0.5) )*2)+1)  )+0.5)*0.5)  * (1-brighness_flare)  )\n\n  +\n\n  (  (((((random((shotcount*823)+(seed*212))-0.5)*  ((1-( abs(brighness_flare-0.5) )*2)+1)  )+0.5)*0.5)+0.5)  * (brighness_flare)  )\n  )\n  *1000\n)\n\n/1000"}}
    addUserKnob {26 ""}
    addUserKnob {26 _1 l "" +STARTLINE T "Chris Fryer | 2020\nupdated by Yorben Otto | 2024"}
   }
    Input {
     inputs 0
     name Input1
     xpos 426
     ypos -793
    }
    TimeOffset {
     time_offset {{(-floor(parent.decimal))*(DecimalTimeOffset1.decimal<0)}}
     time ""
     name TimeOffset1
     selected true
     xpos 426
     ypos -674
    }
    Dot {
     name Dot6
     selected true
     xpos 460
     ypos -635
    }
set N133cc9f0 [stack 0]
    Dot {
     name Dot5
     selected true
     xpos 350
     ypos -635
    }
    Dot {
     name Dot7
     selected true
     xpos 350
     ypos -365
    }
push $N133cc9f0
    Dot {
     name Dot1
     selected true
     xpos 572
     ypos -635
    }
    TimeBlur {
     divisions 2
     shutter {{(parent.decimal-(floor(parent.decimal)))*2}}
     shutteroffset start
     shuttercustomoffset 0
     name TimeBlur1
     selected true
     xpos 538
     ypos -558
    }
    Dot {
     name Dot2
     selected true
     xpos 572
     ypos -490
    }
push $N133cc9f0
    TimeBlur {
     divisions 2
     shutter {{parent.decimal*2}}
     shutteroffset start
     shuttercustomoffset 0
     name TimeBlur8
     selected true
     xpos 426
     ypos -556
    }
    Switch {
     inputs 2
     which {{parent.decimal<0}}
     name Switch1
     selected true
     xpos 426
     ypos -494
    }
    Multiply {
     value {{parent.TimeBlur8.divisions}}
     name Multiply6
     selected true
     xpos 426
     ypos -436
    }
    Merge2 {
     inputs 2
     operation from
     name Merge6
     selected true
     xpos 426
     ypos -369
    }
set N1340eac0 [stack 0]
    Output {
     name Output1
     xpos 426
     ypos -221
    }
push $N1340eac0
push $N1340eac0
    Viewer {
     inputs 2
     frame_range 1-100
     viewerProcess "sRGB (default)"
     name Viewer1
     xpos 675
     ypos -246
    }
   end_group
   NoTimeBlur {
    name NoTimeBlur6
    xpos -135
    ypos -608
   }
   Dot {
    name Dot21
    xpos -101
    ypos -449
   }
set N134ad910 [stack 0]
   Dot {
    name Dot22
    xpos -245
    ypos -449
   }
   Multiply {
    value {{math_matrix.result_y_flash(parent.CTimeOffset7.ref)}}
    name Angle_reveal_top
    label TOP
    xpos -279
    ypos -371
   }
   Transform {
    scale {{0.05+(0.05*(((parent.DecimalTimeOffset1.decimal-0.5)*2)*ScaleVariationFlash))}}
    center {{root.width/2 x1015 2304} {root.height/2}}
    shutteroffset centred
    name random_size_top
    xpos -279
    ypos -136
   }
   Card3D {
    inputs 3
    rot_order ZYX
    translate {0 0 0}
    rotate {90 0 0}
    shutteroffset centred
    name cCard3D5
    tile_color 0x7b1d1dff
    xpos -279
    ypos 153
    addUserKnob {20 User l parent}
    addUserKnob {22 python_button l "set parent" t "select parent node, and press this button to set the selected node as parent" +INVISIBLE T "n = nuke.selectedNode()\['name'].getValue()\nnuke.thisNode()\['string'].setValue(n)" +STARTLINE}
    addUserKnob {1 string l parent +INVISIBLE}
    string null
    addUserKnob {3 ref l "ref frame"}
    ref 1015
   }
   Transform {
    translate {{"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].translate.x(ref)\}]"} {"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].translate.y(ref)\}]"}}
    rotate {{"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].rotate-\[value parent_gun].rotate(ref)\}]"}}
    scale {{"\[if \{\[value parent_gun]==\"null\"\} \{return 1\} \{return 1+(\[value parent_gun].scale-\[value parent_gun].scale(ref))\}]"}}
    center {{"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].center.x(ref)\}]"} {"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].center.y(ref)\}]"}}
    name GUNMatchMove
    label "\n"
    xpos -279
    ypos 247
    addUserKnob {20 User l parent}
    addUserKnob {3 ref}
    ref {{parent.CTimeOffset7.ref}}
   }
   Transform {
    translate {{"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].translate.x-\[value parent_env].translate.x(ref)\}]"} {"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].translate.y-\[value parent_env].translate.y(ref)\}]"}}
    rotate {{"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].rotate-\[value parent_env].rotate(ref)\}]"}}
    scale {{"\[if \{\[value parent_gun]==\"null\"\} \{return 1\} \{return 1+(\[value parent_env].scale-\[value parent_env].scale(ref))\}]"}}
    center {{"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].center.x(ref)\}]"} {"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].center.y(ref)\}]"}}
    motionblur {{(mode==2)*0.2}}
    shutter {{FlashMB*(0.175*0.3)}}
    shutteroffset centred
    name ENVMatchMove
    xpos -279
    ypos 321
    addUserKnob {20 User l parent}
    addUserKnob {3 ref}
    ref {{parent.CTimeOffset7.ref}}
   }
   Transform {
    translate {{"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return -((root.width/2)-(\[value parent_gun].center.x(1)+\[value parent_gun].translate.x(1)))\}]"} {"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return -((root.height/2)-(\[value parent_gun].center.y(1)+\[value parent_gun].translate.y(1)))\}]"}}
    shutteroffset centred
    name Transform_GUNMatchMove1
    label "alignment correction"
    xpos -279
    ypos 408
    addUserKnob {20 User l parent}
    addUserKnob {22 python_button l "set parent" t "select parent node, and press this button to set the selected node as parent" T "n = nuke.selectedNode()\['name'].getValue()\nnuke.thisNode()\['string'].setValue(n)" +STARTLINE}
    addUserKnob {1 string l parent}
    string Transform_MatchMove10
    addUserKnob {3 ref +INVISIBLE}
    ref {{parent.cCard3D_8.ref}}
   }
   Remove {
    operation keep
    channels rgb
    name Remove10
    xpos -279
    ypos 489
   }
push 0
   Switch {
    inputs 2
    which {{parent.Angle_reveal_top.value!=0}}
    name Switch4
    xpos -279
    ypos 670
   }
   Dot {
    name Dot1
    xpos -245
    ypos 717
   }
push 0
push $N1338d390
push 0
   Input {
    inputs 0
    name Front
    xpos -430
    ypos -1102
    number 1
   }
   TimeOffset {
    time_offset {{"shotnmbr==0 ? 0 : shot\[value shotnmbr]-1"}}
    time ""
    name CTimeOffset8
    xpos -430
    ypos -840
    addUserKnob {20 User}
    addUserKnob {3 shotnmbr l "shot "}
    shotnmbr {{parent.CTimeOffset7.shotnmbr}}
   }
   Group {
    name DecimalTimeOffset
    tile_color 0xafa35dff
    label "random asset\n(based on brighness)"
    note_font "Bitstream Vera Sans Bold"
    xpos -430
    ypos -693
    addUserKnob {20 User}
    addUserKnob {7 decimal l "time offset (decimal)"}
    decimal {{"floor\n(\n  (\n  (  ((((random((shotcount*823)+(seed*212))-0.5)*  ((1-( abs(brighness_flare-0.5) )*2)+1)  )+0.5)*0.5)  * (1-brighness_flare)  )\n\n  +\n\n  (  (((((random((shotcount*823)+(seed*212))-0.5)*  ((1-( abs(brighness_flare-0.5) )*2)+1)  )+0.5)*0.5)+0.5)  * (brighness_flare)  )\n  )\n  *1000\n)\n\n/1000"}}
    addUserKnob {26 ""}
    addUserKnob {26 _1 l "" +STARTLINE T "Chris Fryer | 2020\nupdated by Yorben Otto | 2024"}
   }
    Input {
     inputs 0
     name Input1
     xpos 426
     ypos -793
    }
    TimeOffset {
     time_offset {{(-floor(parent.decimal))*(DecimalTimeOffset.decimal<0)}}
     time ""
     name TimeOffset1
     selected true
     xpos 426
     ypos -674
    }
    Dot {
     name Dot6
     selected true
     xpos 460
     ypos -635
    }
set N13554a90 [stack 0]
    Dot {
     name Dot5
     selected true
     xpos 350
     ypos -635
    }
    Dot {
     name Dot7
     selected true
     xpos 350
     ypos -365
    }
push $N13554a90
    Dot {
     name Dot1
     selected true
     xpos 572
     ypos -635
    }
    TimeBlur {
     divisions 2
     shutter {{(parent.decimal-(floor(parent.decimal)))*2}}
     shutteroffset start
     shuttercustomoffset 0
     name TimeBlur1
     selected true
     xpos 538
     ypos -558
    }
    Dot {
     name Dot2
     selected true
     xpos 572
     ypos -490
    }
push $N13554a90
    TimeBlur {
     divisions 2
     shutter {{parent.decimal*2}}
     shutteroffset start
     shuttercustomoffset 0
     name TimeBlur8
     selected true
     xpos 426
     ypos -556
    }
    Switch {
     inputs 2
     which {{parent.decimal<0}}
     name Switch1
     selected true
     xpos 426
     ypos -494
    }
    Multiply {
     value {{parent.TimeBlur8.divisions}}
     name Multiply6
     selected true
     xpos 426
     ypos -436
    }
    Merge2 {
     inputs 2
     operation from
     name Merge6
     selected true
     xpos 426
     ypos -369
    }
set N13596b80 [stack 0]
    Output {
     name Output1
     xpos 426
     ypos -221
    }
push $N13596b80
push $N13596b80
    Viewer {
     inputs 2
     frame_range 1-100
     viewerProcess "sRGB (default)"
     name Viewer1
     xpos 675
     ypos -246
    }
   end_group
   NoTimeBlur {
    name NoTimeBlur7
    xpos -430
    ypos -617
   }
   Multiply {
    value {{math_matrix.result_x_flash(parent.CTimeOffset7.ref)}}
    name Angle_reveal_front
    label FRONT
    xpos -430
    ypos -375
   }
   Transform {
    scale {{0.05+(0.05*(((parent.DecimalTimeOffset1.decimal-0.5)*2)*ScaleVariationFlash))}}
    center {{root.width/2 x1015 2304} {root.height/2}}
    shutteroffset centred
    name random_size_front
    xpos -430
    ypos -134
   }
   Card3D {
    inputs 3
    rot_order ZYX
    translate {0 0 0}
    rotate {0 90 0}
    shutteroffset centred
    name cCard3D6
    tile_color 0x7b1d1dff
    xpos -430
    ypos 150
    addUserKnob {20 User l parent}
    addUserKnob {22 python_button l "set parent" t "select parent node, and press this button to set the selected node as parent" +INVISIBLE T "n = nuke.selectedNode()\['name'].getValue()\nnuke.thisNode()\['string'].setValue(n)" +STARTLINE}
    addUserKnob {1 string l parent +INVISIBLE}
    string null
    addUserKnob {3 ref l "ref frame"}
    ref 1015
   }
   Transform {
    translate {{"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].translate.x(ref)\}]"} {"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].translate.y(ref)\}]"}}
    rotate {{"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].rotate-\[value parent_gun].rotate(ref)\}]"}}
    scale {{"\[if \{\[value parent_gun]==\"null\"\} \{return 1\} \{return 1+(\[value parent_gun].scale-\[value parent_gun].scale(ref))\}]"}}
    center {{"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].center.x(ref)\}]"} {"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].center.y(ref)\}]"}}
    name GUNMatchMove2
    label "\n"
    xpos -430
    ypos 248
    addUserKnob {20 User l parent}
    addUserKnob {3 ref}
    ref {{parent.CTimeOffset7.ref}}
   }
   Transform {
    translate {{"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].translate.x-\[value parent_env].translate.x(ref)\}]"} {"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].translate.y-\[value parent_env].translate.y(ref)\}]"}}
    rotate {{"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].rotate-\[value parent_env].rotate(ref)\}]"}}
    scale {{"\[if \{\[value parent_gun]==\"null\"\} \{return 1\} \{return 1+(\[value parent_env].scale-\[value parent_env].scale(ref))\}]"}}
    center {{"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].center.x(ref)\}]"} {"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].center.y(ref)\}]"}}
    motionblur {{(mode==2)*0.2}}
    shutter {{FlashMB*(0.175*0.3)}}
    shutteroffset centred
    name ENVMatchMove2
    xpos -430
    ypos 320
    addUserKnob {20 User l parent}
    addUserKnob {3 ref}
    ref {{parent.CTimeOffset7.ref}}
   }
   Transform {
    translate {{"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return -((root.width/2)-(\[value parent_gun].center.x(1)+\[value parent_gun].translate.x(1)))\}]"} {"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return -((root.height/2)-(\[value parent_gun].center.y(1)+\[value parent_gun].translate.y(1)))\}]"}}
    shutteroffset centred
    name Transform_GUNMatchMove2
    label "alignment correction"
    xpos -430
    ypos 407
    addUserKnob {20 User l parent}
    addUserKnob {22 python_button l "set parent" t "select parent node, and press this button to set the selected node as parent" T "n = nuke.selectedNode()\['name'].getValue()\nnuke.thisNode()\['string'].setValue(n)" +STARTLINE}
    addUserKnob {1 string l parent}
    string Transform_MatchMove10
    addUserKnob {3 ref +INVISIBLE}
    ref {{parent.cCard3D_8.ref}}
   }
   Remove {
    operation keep
    channels rgb
    name Remove11
    xpos -430
    ypos 487
   }
push 0
   Switch {
    inputs 2
    which {{parent.Angle_reveal_front.value!=0}}
    name Switch5
    xpos -430
    ypos 675
   }
   Dot {
    name Dot2
    xpos -396
    ypos 749
   }
push $N134ad910
   Multiply {
    value {{math_matrix.result_z_flash(parent.CTimeOffset7.ref)}}
    name Angle_reveal_side
    label SIDE
    xpos -135
    ypos -372
   }
   Transform {
    scale {{0.05+(0.05*(((parent.DecimalTimeOffset1.decimal-0.5)*2)*ScaleVariationFlash))}}
    center {{root.width/2 x1015 2304} {root.height/2}}
    shutteroffset centred
    name random_size_side
    xpos -135
    ypos -136
   }
   Card3D {
    translate {{"\[if \{\[exists  parent.parent.parent.input0]\} \{return \[value \[topnode parent.parent.parent.input0].name].translate.x(ref)\} \{return 0\}]"} {"\[if \{\[exists  parent.parent.parent.input0]\} \{return \[value \[topnode parent.parent.parent.input0].name].translate.y(ref)\} \{return 0\}]"} {"\[if \{\[exists  parent.parent.parent.input0]\} \{return \[value \[topnode parent.parent.parent.input0].name].translate.z(ref)\} \{return -1\}]"}}
    rotate {{"\[if \{\[exists  parent.parent.parent.input0]\} \{return \[value \[topnode parent.parent.parent.input0].name].rotate.x(ref)\} \{return 0\}]"} {"\[if \{\[exists  parent.parent.parent.input0]\} \{return \[value \[topnode parent.parent.parent.input0].name].rotate.y(ref)\} \{return 0\}]"} {"\[if \{\[exists  parent.parent.parent.input0]\} \{return \[value \[topnode parent.parent.parent.input0].name].rotate.z(ref)\} \{return 0\}]"}}
    scaling {{"\[if \{\[exists  parent.parent.parent.input0]\} \{return \[value \[topnode parent.parent.parent.input0].name].scaling.x(ref)\} \{return 1\}]"} {"\[if \{\[exists  parent.parent.parent.input0]\} \{return \[value \[topnode parent.parent.parent.input0].name].scaling.y(ref)\} \{return 1\}]"} {"\[if \{\[exists  parent.parent.parent.input0]\} \{return \[value \[topnode parent.parent.parent.input0].name].scaling.z(ref)\} \{return 1\}]"}}
    uniform_scale {{"\[if \{\[exists  parent.parent.parent.input0]\} \{return (\[value \[topnode parent.parent.parent.input0].name].uniform_scale(ref)*25)\} \{return 25\}]"}}
    shutteroffset centred
    name cCard3D_1
    tile_color 0x7b1d1dff
    label "ref frame: \[value ref]"
    xpos -135
    ypos 147
    addUserKnob {20 User l parent}
    addUserKnob {22 python_button l "set parent" t "select parent node, and press this button to set the selected node as parent" +INVISIBLE T "n = nuke.selectedNode()\['name'].getValue()\nnuke.thisNode()\['string'].setValue(n)" +STARTLINE}
    addUserKnob {1 string l parent +INVISIBLE}
    string null
    addUserKnob {3 id l "id number"}
    id {{parent.CTimeOffset7.shotnmbr}}
    addUserKnob {3 ref l "ref frame"}
    ref {{parent.CTimeOffset7.time_offset}}
   }
   Transform {
    translate {{"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].translate.x(ref)\}]"} {"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].translate.y(ref)\}]"}}
    rotate {{"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].rotate-\[value parent_gun].rotate(ref)\}]"}}
    scale {{"\[if \{\[value parent_gun]==\"null\"\} \{return 1\} \{return 1+(\[value parent_gun].scale-\[value parent_gun].scale(ref))\}]"}}
    center {{"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].center.x(ref)\}]"} {"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].center.y(ref)\}]"}}
    name GUNMatchMove1
    label "\n"
    xpos -135
    ypos 241
    addUserKnob {20 User l parent}
    addUserKnob {3 ref}
    ref {{parent.CTimeOffset7.ref}}
   }
   Transform {
    translate {{"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].translate.x-\[value parent_env].translate.x(ref)\}]"} {"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].translate.y-\[value parent_env].translate.y(ref)\}]"}}
    rotate {{"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].rotate-\[value parent_env].rotate(ref)\}]"}}
    scale {{"\[if \{\[value parent_gun]==\"null\"\} \{return 1\} \{return 1+(\[value parent_env].scale-\[value parent_env].scale(ref))\}]"}}
    center {{"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].center.x(ref)\}]"} {"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].center.y(ref)\}]"}}
    motionblur {{(mode==2)*0.2}}
    shutter {{FlashMB*(0.175*0.3)}}
    shutteroffset centred
    name ENVMatchMove1
    xpos -135
    ypos 317
    addUserKnob {20 User l parent}
    addUserKnob {3 ref}
    ref {{parent.CTimeOffset7.ref}}
   }
   Transform {
    translate {{"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return -((root.width/2)-(\[value parent_gun].center.x(1)+\[value parent_gun].translate.x(1)))\}]"} {"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return -((root.height/2)-(\[value parent_gun].center.y(1)+\[value parent_gun].translate.y(1)))\}]"}}
    shutteroffset centred
    name Transform_GUNMatchMove3
    label "alignment correction"
    xpos -135
    ypos 405
    addUserKnob {20 User l parent}
    addUserKnob {22 python_button l "set parent" t "select parent node, and press this button to set the selected node as parent" T "n = nuke.selectedNode()\['name'].getValue()\nnuke.thisNode()\['string'].setValue(n)" +STARTLINE}
    addUserKnob {1 string l parent}
    string Transform_MatchMove10
    addUserKnob {3 ref +INVISIBLE}
    ref {{parent.cCard3D_8.ref}}
   }
   Remove {
    operation keep
    channels rgb
    name Remove12
    xpos -135
    ypos 489
   }
push 0
   Switch {
    inputs 2
    which {{parent.Angle_reveal_side.value!=0}}
    name Switch6
    xpos -135
    ypos 676
   }
   Merge2 {
    inputs 3+1
    operation max
    name Merge1
    xpos -135
    ypos 745
   }
   Merge2 {
    inputs 2
    operation plus
    bbox intersection
    name Merge6
    xpos -135
    ypos 1196
   }
push 0
   Switch {
    inputs 2
    which {{"shot\[value count]==0?0:(EnableExtraFrames==1?floor(((frame>=shot\[value count])+(frame<=(shot\[value count]+(4*((mode==1)+(mode==2))))))/2):frame==shot\[value count])"}}
    name cSwitch_3
    xpos -135
    ypos 1359
    addUserKnob {20 User}
    addUserKnob {3 count l "shot number"}
    count {{parent.CTimeOffset7.shotnmbr}}
    addUserKnob {6 shot +STARTLINE}
    shot {{frame==(parent.CTimeOffset7.time_offset+1)}}
   }
   Output {
    name Output1
    xpos -135
    ypos 1861
   }
  end_group
  Merge2 {
   inputs 12+1
   operation plus
   name Merge1
   xpos 7893
   ypos -659
  }
  Output {
   name Output1
   xpos 7893
   ypos 368
  }
 end_group
add_layer {muzzleflash muzzleflash.red muzzleflash.green muzzleflash.blue}
 Shuffle2 {
  fromInput1 {{0} B}
  out1 muzzleflash
  fromInput2 {{0} B}
  mappings "3 rgba.red 0 0 muzzleflash.red 0 0 rgba.green 0 1 muzzleflash.green 0 1 rgba.blue 0 2 muzzleflash.blue 0 2"
  name Shuffle1
  xpos -829
  ypos 656
 }
 Dot {
  name Dot7
  xpos -795
  ypos 804
 }
push $Nff7c8f0
 Transform {
  translate {{"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].translate.x\}]"} {"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].translate.y\}]"}}
  rotate {{"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].rotate\}]"}}
  scale {{"\[if \{\[value parent_gun]==\"null\"\} \{return 1\} \{return \[value parent_gun].scale\}]"}}
  center {{"\[if \{\[value parent_gun]==\"null\"\} \{return root.width/2\} \{return \[value parent_gun].center.x\}]"} {"\[if \{\[value parent_gun]==\"null\"\} \{return root.height/2\} \{return \[value parent_gun].center.y\}]"}}
  name Transform_GUNMatchMove23
  label "(child of \[value string])\n"
  xpos -1246
  ypos 354
  addUserKnob {20 User l parent}
  addUserKnob {22 python_button l "set parent" t "select parent node, and press this button to set the selected node as parent" T "n = nuke.selectedNode()\['name'].getValue()\nnuke.thisNode()\['string'].setValue(n)" +STARTLINE}
  addUserKnob {1 string l parent}
  string Transform_MatchMove10
  addUserKnob {3 ref +INVISIBLE}
  ref {{parent.cCard3D_8.ref}}
 }
 Transform {
  translate {{"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return -((root.width/2)-(\[value parent_gun].center.x(1)+\[value parent_gun].translate.x(1)))\}]"} {"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return -((root.height/2)-(\[value parent_gun].center.y(1)+\[value parent_gun].translate.y(1)))\}]"}}
  name Transform_GUNMatchMove2
  label "alignment correction"
  xpos -1246
  ypos 392
  addUserKnob {20 User l parent}
  addUserKnob {22 python_button l "set parent" t "select parent node, and press this button to set the selected node as parent" T "n = nuke.selectedNode()\['name'].getValue()\nnuke.thisNode()\['string'].setValue(n)" +STARTLINE}
  addUserKnob {1 string l parent}
  string Transform_MatchMove10
  addUserKnob {3 ref +INVISIBLE}
  ref {{parent.cCard3D_8.ref}}
 }
 Remove {
  name Remove1
  xpos -1246
  ypos 490
 }
 Group {
  inputs 0
  name muzzleflash_maker_SMOKE
  xpos -1017
  ypos -182
  disable {{((ActivateFrontSmoke+ActivateSideSmoke)==0)+(mode==0)+(mode==1)}}
  addUserKnob {20 User}
  addUserKnob {26 _2 l "" +STARTLINE T "\n\n"}
  addUserKnob {26 _1 l "" +STARTLINE T "<i>All the settings are in the properties pannel of the main group"}
 }
  BackdropNode {
   inputs 0
   name BackdropNode1
   knobChanged "try:\n    listenedKnobs = \['text', 'position', 'name']\n    node = nuke.thisNode()\n    name = node.knob('name').value()\n    text = node.knob('text').value()\n    position = node.knob('position').value()\n    position = \"<\" + position + \">\"\n    label = node.knob('label').value()\n    \n    if nuke.thisKnob().name() in listenedKnobs:\n        if text == \"\":\n            if node.knob('position').value() == \"left\":\n                node.knob('label').setValue()\n            else:\n                node.knob('label').setValue(position + name)\n        else:\n            if node.knob('position').value() == \"left\":\n                node.knob('label').setValue(text)\n            else:\n                node.knob('label').setValue(position + text)\n                \n    elif nuke.thisKnob().name() == 'font_size':\n        fontSize = node.knob('font_size').value()\n        node.knob('note_font_size').setValue(fontSize)\nexcept:\n    pass"
   tile_color 0x232323ff
   label <Center>SMØKE
   note_font_size 200
   xpos -1163
   ypos -3739
   bdwidth 5777
   bdheight 1755
   addUserKnob {20 F_VFX l BackdropNode}
   addUserKnob {43 text l Text}
   text SMØKE
   addUserKnob {7 font_size l "Font Size" R 10 100}
   font_size 200
   addUserKnob {4 position l "" -STARTLINE M {Left Center}}
   position Center
   addUserKnob {26 S01 l " " T " "}
   addUserKnob {22 grow l " <img src=\"F_scalep.png\">" -STARTLINE T "n=nuke.thisNode()\n\ndef grow(node=None,step=50):\n    try:\n        if not node:\n            n=nuke.selectedNode()\n        else:\n            n=node\n            n\['xpos'].setValue(n\['xpos'].getValue()-step)\n            n\['ypos'].setValue(n\['ypos'].getValue()-step)\n            n\['bdwidth'].setValue(n\['bdwidth'].getValue()+step*2)\n            n\['bdheight'].setValue(n\['bdheight'].getValue()+step*2)\n    except:\n        pass\ngrow(n,50)"}
   addUserKnob {22 shrink l " <img src=\"F_scalem.png\">" -STARTLINE T "n=nuke.thisNode()\n\ndef shrink(node=None,step=50):\n    try:\n        if not node:\n            n=nuke.selectedNode()\n        else:\n            n=node\n            n\['xpos'].setValue(n\['xpos'].getValue()+step)\n            n\['ypos'].setValue(n\['ypos'].getValue()+step)\n            n\['bdwidth'].setValue(n\['bdwidth'].getValue()-step*2)\n            n\['bdheight'].setValue(n\['bdheight'].getValue()-step*2)\n    except:\n        pass\nshrink(n,50)"}
   addUserKnob {22 colorandom l " <img src=\"ColorBars.png\">" -STARTLINE T "import colorsys, random\nn=nuke.thisNode()\nR,G,B= colorsys.hsv_to_rgb(random.random(),.1+random.random()*.15,.15+random.random()*.15)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ) )"}
   addUserKnob {22 darkgrey l "<font color=\"#232323\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.0, 0.0, 0.14]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
   addUserKnob {22 lightgrey l "<font color=\"#383838\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.0, 0.0, 0.22]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
   addUserKnob {22 red l "<font color=\"#8c3838\" size=6>■</font>" T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.0, 0.6, 0.55]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n" +STARTLINE}
   addUserKnob {22 orange l "<font color=\"#b28e59\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.1, 0.5, 0.7]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
   addUserKnob {22 yellow l "<font color=\"#ccc766\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.16, 0.5, 0.8]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
   addUserKnob {22 green l "<font color=\"#5d995b\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.33, 0.4, 0.6]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
   addUserKnob {22 cyan l "<font color=\"#72998f\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.46, 0.25, 0.6]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
   addUserKnob {22 blue l "<font color=\"#59687f\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.6, 0.3, 0.5]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
   addUserKnob {22 darkblue l "<font color=\"#63628c\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.67, 0.3, 0.55]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
   addUserKnob {22 magenta l "<font color=\"#927a99\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.8, 0.2, 0.6]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
   addUserKnob {22 pink l "<font color=\"#997a89\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.92, 0.2, 0.6]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
   addUserKnob {26 S02 l " " T " "}
   addUserKnob {26 Ftools l "" +STARTLINE T "<font color=\"#1C1C1C\"> v1.2 - Franklin VFX - 2018"}
  }
  BackdropNode {
   inputs 0
   name BackdropNode18
   knobChanged "try:\n    listenedKnobs = \['text', 'position', 'name']\n    node = nuke.thisNode()\n    name = node.knob('name').value()\n    text = node.knob('text').value()\n    position = node.knob('position').value()\n    position = \"<\" + position + \">\"\n    label = node.knob('label').value()\n    \n    if nuke.thisKnob().name() in listenedKnobs:\n        if text == \"\":\n            if node.knob('position').value() == \"left\":\n                node.knob('label').setValue()\n            else:\n                node.knob('label').setValue(position + name)\n        else:\n            if node.knob('position').value() == \"left\":\n                node.knob('label').setValue(text)\n            else:\n                node.knob('label').setValue(position + text)\n                \n    elif nuke.thisKnob().name() == 'font_size':\n        fontSize = node.knob('font_size').value()\n        node.knob('note_font_size').setValue(fontSize)\nexcept:\n    pass"
   tile_color 0xb5b5b5ff
   label "<Left>before or after Flare"
   note_font_size 50
   xpos -499
   ypos -1488
   bdwidth 406
   bdheight 401
   addUserKnob {20 F_VFX l BackdropNode}
   addUserKnob {43 text l Text}
   text "before or after Flare"
   addUserKnob {7 font_size l "Font Size" R 10 100}
   font_size 50
   addUserKnob {4 position l "" -STARTLINE M {Left Center}}
   addUserKnob {26 S01 l " " T " "}
   addUserKnob {22 grow l " <img src=\"F_scalep.png\">" -STARTLINE T "n=nuke.thisNode()\n\ndef grow(node=None,step=50):\n    try:\n        if not node:\n            n=nuke.selectedNode()\n        else:\n            n=node\n            n\['xpos'].setValue(n\['xpos'].getValue()-step)\n            n\['ypos'].setValue(n\['ypos'].getValue()-step)\n            n\['bdwidth'].setValue(n\['bdwidth'].getValue()+step*2)\n            n\['bdheight'].setValue(n\['bdheight'].getValue()+step*2)\n    except:\n        pass\ngrow(n,50)"}
   addUserKnob {22 shrink l " <img src=\"F_scalem.png\">" -STARTLINE T "n=nuke.thisNode()\n\ndef shrink(node=None,step=50):\n    try:\n        if not node:\n            n=nuke.selectedNode()\n        else:\n            n=node\n            n\['xpos'].setValue(n\['xpos'].getValue()+step)\n            n\['ypos'].setValue(n\['ypos'].getValue()+step)\n            n\['bdwidth'].setValue(n\['bdwidth'].getValue()-step*2)\n            n\['bdheight'].setValue(n\['bdheight'].getValue()-step*2)\n    except:\n        pass\nshrink(n,50)"}
   addUserKnob {22 colorandom l " <img src=\"ColorBars.png\">" -STARTLINE T "import colorsys, random\nn=nuke.thisNode()\nR,G,B= colorsys.hsv_to_rgb(random.random(),.1+random.random()*.15,.15+random.random()*.15)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ) )"}
   addUserKnob {22 darkgrey l "<font color=\"#232323\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.0, 0.0, 0.14]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
   addUserKnob {22 lightgrey l "<font color=\"#383838\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.0, 0.0, 0.22]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
   addUserKnob {22 red l "<font color=\"#8c3838\" size=6>■</font>" T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.0, 0.6, 0.55]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n" +STARTLINE}
   addUserKnob {22 orange l "<font color=\"#b28e59\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.1, 0.5, 0.7]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
   addUserKnob {22 yellow l "<font color=\"#ccc766\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.16, 0.5, 0.8]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
   addUserKnob {22 green l "<font color=\"#5d995b\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.33, 0.4, 0.6]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
   addUserKnob {22 cyan l "<font color=\"#72998f\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.46, 0.25, 0.6]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
   addUserKnob {22 blue l "<font color=\"#59687f\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.6, 0.3, 0.5]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
   addUserKnob {22 darkblue l "<font color=\"#63628c\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.67, 0.3, 0.55]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
   addUserKnob {22 magenta l "<font color=\"#927a99\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.8, 0.2, 0.6]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
   addUserKnob {22 pink l "<font color=\"#997a89\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.92, 0.2, 0.6]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
   addUserKnob {26 S02 l " " T " "}
   addUserKnob {26 Ftools l "" +STARTLINE T "<font color=\"#1C1C1C\"> v1.2 - Franklin VFX - 2018"}
  }
  BackdropNode {
   inputs 0
   name BackdropNode2
   knobChanged "try:\n    listenedKnobs = \['text', 'position', 'name']\n    node = nuke.thisNode()\n    name = node.knob('name').value()\n    text = node.knob('text').value()\n    position = node.knob('position').value()\n    position = \"<\" + position + \">\"\n    label = node.knob('label').value()\n    \n    if nuke.thisKnob().name() in listenedKnobs:\n        if text == \"\":\n            if node.knob('position').value() == \"left\":\n                node.knob('label').setValue()\n            else:\n                node.knob('label').setValue(position + name)\n        else:\n            if node.knob('position').value() == \"left\":\n                node.knob('label').setValue(text)\n            else:\n                node.knob('label').setValue(position + text)\n                \n    elif nuke.thisKnob().name() == 'font_size':\n        fontSize = node.knob('font_size').value()\n        node.knob('note_font_size').setValue(fontSize)\nexcept:\n    pass"
   tile_color 0x232323ff
   label "<Left>smoke of every shot fired"
   note_font_size 50
   xpos -368
   ypos -845
   bdwidth 1870
   bdheight 719
   addUserKnob {20 F_VFX l BackdropNode}
   addUserKnob {43 text l Text}
   text "smoke of every shot fired"
   addUserKnob {7 font_size l "Font Size" R 10 100}
   font_size 50
   addUserKnob {4 position l "" -STARTLINE M {Left Center}}
   addUserKnob {26 S01 l " " T " "}
   addUserKnob {22 grow l " <img src=\"F_scalep.png\">" -STARTLINE T "n=nuke.thisNode()\n\ndef grow(node=None,step=50):\n    try:\n        if not node:\n            n=nuke.selectedNode()\n        else:\n            n=node\n            n\['xpos'].setValue(n\['xpos'].getValue()-step)\n            n\['ypos'].setValue(n\['ypos'].getValue()-step)\n            n\['bdwidth'].setValue(n\['bdwidth'].getValue()+step*2)\n            n\['bdheight'].setValue(n\['bdheight'].getValue()+step*2)\n    except:\n        pass\ngrow(n,50)"}
   addUserKnob {22 shrink l " <img src=\"F_scalem.png\">" -STARTLINE T "n=nuke.thisNode()\n\ndef shrink(node=None,step=50):\n    try:\n        if not node:\n            n=nuke.selectedNode()\n        else:\n            n=node\n            n\['xpos'].setValue(n\['xpos'].getValue()+step)\n            n\['ypos'].setValue(n\['ypos'].getValue()+step)\n            n\['bdwidth'].setValue(n\['bdwidth'].getValue()-step*2)\n            n\['bdheight'].setValue(n\['bdheight'].getValue()-step*2)\n    except:\n        pass\nshrink(n,50)"}
   addUserKnob {22 colorandom l " <img src=\"ColorBars.png\">" -STARTLINE T "import colorsys, random\nn=nuke.thisNode()\nR,G,B= colorsys.hsv_to_rgb(random.random(),.1+random.random()*.15,.15+random.random()*.15)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ) )"}
   addUserKnob {22 darkgrey l "<font color=\"#232323\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.0, 0.0, 0.14]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
   addUserKnob {22 lightgrey l "<font color=\"#383838\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.0, 0.0, 0.22]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
   addUserKnob {22 red l "<font color=\"#8c3838\" size=6>■</font>" T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.0, 0.6, 0.55]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n" +STARTLINE}
   addUserKnob {22 orange l "<font color=\"#b28e59\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.1, 0.5, 0.7]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
   addUserKnob {22 yellow l "<font color=\"#ccc766\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.16, 0.5, 0.8]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
   addUserKnob {22 green l "<font color=\"#5d995b\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.33, 0.4, 0.6]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
   addUserKnob {22 cyan l "<font color=\"#72998f\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.46, 0.25, 0.6]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
   addUserKnob {22 blue l "<font color=\"#59687f\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.6, 0.3, 0.5]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
   addUserKnob {22 darkblue l "<font color=\"#63628c\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.67, 0.3, 0.55]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
   addUserKnob {22 magenta l "<font color=\"#927a99\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.8, 0.2, 0.6]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
   addUserKnob {22 pink l "<font color=\"#997a89\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.92, 0.2, 0.6]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
   addUserKnob {26 S02 l " " T " "}
   addUserKnob {26 Ftools l "" +STARTLINE T "<font color=\"#1C1C1C\"> v1.2 - Franklin VFX - 2018"}
  }
  BackdropNode {
   inputs 0
   name BackdropNode8
   knobChanged "try:\n    listenedKnobs = \['text', 'position', 'name']\n    node = nuke.thisNode()\n    name = node.knob('name').value()\n    text = node.knob('text').value()\n    position = node.knob('position').value()\n    position = \"<\" + position + \">\"\n    label = node.knob('label').value()\n    \n    if nuke.thisKnob().name() in listenedKnobs:\n        if text == \"\":\n            if node.knob('position').value() == \"left\":\n                node.knob('label').setValue()\n            else:\n                node.knob('label').setValue(position + name)\n        else:\n            if node.knob('position').value() == \"left\":\n                node.knob('label').setValue(text)\n            else:\n                node.knob('label').setValue(position + text)\n                \n    elif nuke.thisKnob().name() == 'font_size':\n        fontSize = node.knob('font_size').value()\n        node.knob('note_font_size').setValue(fontSize)\nexcept:\n    pass"
   tile_color 0x3e4149ff
   label "<Left>LIGHT DIRECTION"
   note_font_size 50
   xpos 1269
   ypos -4375
   bdwidth 424
   bdheight 501
   addUserKnob {20 F_VFX l BackdropNode}
   addUserKnob {43 text l Text}
   text "LIGHT DIRECTION"
   addUserKnob {7 font_size l "Font Size" R 10 100}
   font_size 50
   addUserKnob {4 position l "" -STARTLINE M {Left Center}}
   addUserKnob {26 S01 l " " T " "}
   addUserKnob {22 grow l " <img src=\"F_scalep.png\">" -STARTLINE T "n=nuke.thisNode()\n\ndef grow(node=None,step=50):\n    try:\n        if not node:\n            n=nuke.selectedNode()\n        else:\n            n=node\n            n\['xpos'].setValue(n\['xpos'].getValue()-step)\n            n\['ypos'].setValue(n\['ypos'].getValue()-step)\n            n\['bdwidth'].setValue(n\['bdwidth'].getValue()+step*2)\n            n\['bdheight'].setValue(n\['bdheight'].getValue()+step*2)\n    except:\n        pass\ngrow(n,50)"}
   addUserKnob {22 shrink l " <img src=\"F_scalem.png\">" -STARTLINE T "n=nuke.thisNode()\n\ndef shrink(node=None,step=50):\n    try:\n        if not node:\n            n=nuke.selectedNode()\n        else:\n            n=node\n            n\['xpos'].setValue(n\['xpos'].getValue()+step)\n            n\['ypos'].setValue(n\['ypos'].getValue()+step)\n            n\['bdwidth'].setValue(n\['bdwidth'].getValue()-step*2)\n            n\['bdheight'].setValue(n\['bdheight'].getValue()-step*2)\n    except:\n        pass\nshrink(n,50)"}
   addUserKnob {22 colorandom l " <img src=\"ColorBars.png\">" -STARTLINE T "import colorsys, random\nn=nuke.thisNode()\nR,G,B= colorsys.hsv_to_rgb(random.random(),.1+random.random()*.15,.15+random.random()*.15)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ) )"}
   addUserKnob {22 darkgrey l "<font color=\"#232323\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.0, 0.0, 0.14]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
   addUserKnob {22 lightgrey l "<font color=\"#383838\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.0, 0.0, 0.22]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
   addUserKnob {22 red l "<font color=\"#8c3838\" size=6>■</font>" T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.0, 0.6, 0.55]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n" +STARTLINE}
   addUserKnob {22 orange l "<font color=\"#b28e59\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.1, 0.5, 0.7]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
   addUserKnob {22 yellow l "<font color=\"#ccc766\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.16, 0.5, 0.8]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
   addUserKnob {22 green l "<font color=\"#5d995b\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.33, 0.4, 0.6]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
   addUserKnob {22 cyan l "<font color=\"#72998f\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.46, 0.25, 0.6]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
   addUserKnob {22 blue l "<font color=\"#59687f\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.6, 0.3, 0.5]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
   addUserKnob {22 darkblue l "<font color=\"#63628c\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.67, 0.3, 0.55]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
   addUserKnob {22 magenta l "<font color=\"#927a99\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.8, 0.2, 0.6]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
   addUserKnob {22 pink l "<font color=\"#997a89\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.92, 0.2, 0.6]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
   addUserKnob {26 S02 l " " T " "}
   addUserKnob {26 Ftools l "" +STARTLINE T "<font color=\"#1C1C1C\"> v1.2 - Franklin VFX - 2018"}
  }
  BackdropNode {
   inputs 0
   name BackdropNode10
   knobChanged "try:\n    listenedKnobs = \['text', 'position', 'name']\n    node = nuke.thisNode()\n    name = node.knob('name').value()\n    text = node.knob('text').value()\n    position = node.knob('position').value()\n    position = \"<\" + position + \">\"\n    label = node.knob('label').value()\n    \n    if nuke.thisKnob().name() in listenedKnobs:\n        if text == \"\":\n            if node.knob('position').value() == \"left\":\n                node.knob('label').setValue()\n            else:\n                node.knob('label').setValue(position + name)\n        else:\n            if node.knob('position').value() == \"left\":\n                node.knob('label').setValue(text)\n            else:\n                node.knob('label').setValue(position + text)\n                \n    elif nuke.thisKnob().name() == 'font_size':\n        fontSize = node.knob('font_size').value()\n        node.knob('note_font_size').setValue(fontSize)\nexcept:\n    pass"
   tile_color 0x383838ff
   label <Center>direction
   note_font_size 21
   xpos -384
   ypos -3156
   bdwidth 165
   bdheight 193
   z_order 1
   addUserKnob {20 F_VFX l BackdropNode}
   addUserKnob {43 text l Text}
   text direction
   addUserKnob {7 font_size l "Font Size" R 10 100}
   font_size 21
   addUserKnob {4 position l "" -STARTLINE M {Left Center}}
   position Center
   addUserKnob {26 S01 l " " T " "}
   addUserKnob {22 grow l " <img src=\"F_scalep.png\">" -STARTLINE T "n=nuke.thisNode()\n\ndef grow(node=None,step=50):\n    try:\n        if not node:\n            n=nuke.selectedNode()\n        else:\n            n=node\n            n\['xpos'].setValue(n\['xpos'].getValue()-step)\n            n\['ypos'].setValue(n\['ypos'].getValue()-step)\n            n\['bdwidth'].setValue(n\['bdwidth'].getValue()+step*2)\n            n\['bdheight'].setValue(n\['bdheight'].getValue()+step*2)\n    except:\n        pass\ngrow(n,50)"}
   addUserKnob {22 shrink l " <img src=\"F_scalem.png\">" -STARTLINE T "n=nuke.thisNode()\n\ndef shrink(node=None,step=50):\n    try:\n        if not node:\n            n=nuke.selectedNode()\n        else:\n            n=node\n            n\['xpos'].setValue(n\['xpos'].getValue()+step)\n            n\['ypos'].setValue(n\['ypos'].getValue()+step)\n            n\['bdwidth'].setValue(n\['bdwidth'].getValue()-step*2)\n            n\['bdheight'].setValue(n\['bdheight'].getValue()-step*2)\n    except:\n        pass\nshrink(n,50)"}
   addUserKnob {22 colorandom l " <img src=\"ColorBars.png\">" -STARTLINE T "import colorsys, random\nn=nuke.thisNode()\nR,G,B= colorsys.hsv_to_rgb(random.random(),.1+random.random()*.15,.15+random.random()*.15)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ) )"}
   addUserKnob {22 darkgrey l "<font color=\"#232323\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.0, 0.0, 0.14]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
   addUserKnob {22 lightgrey l "<font color=\"#383838\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.0, 0.0, 0.22]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
   addUserKnob {22 red l "<font color=\"#8c3838\" size=6>■</font>" T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.0, 0.6, 0.55]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n" +STARTLINE}
   addUserKnob {22 orange l "<font color=\"#b28e59\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.1, 0.5, 0.7]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
   addUserKnob {22 yellow l "<font color=\"#ccc766\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.16, 0.5, 0.8]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
   addUserKnob {22 green l "<font color=\"#5d995b\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.33, 0.4, 0.6]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
   addUserKnob {22 cyan l "<font color=\"#72998f\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.46, 0.25, 0.6]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
   addUserKnob {22 blue l "<font color=\"#59687f\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.6, 0.3, 0.5]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
   addUserKnob {22 darkblue l "<font color=\"#63628c\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.67, 0.3, 0.55]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
   addUserKnob {22 magenta l "<font color=\"#927a99\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.8, 0.2, 0.6]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
   addUserKnob {22 pink l "<font color=\"#997a89\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.92, 0.2, 0.6]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
   addUserKnob {26 S02 l " " T " "}
   addUserKnob {26 Ftools l "" +STARTLINE T "<font color=\"#1C1C1C\"> v1.2 - Franklin VFX - 2018"}
  }
  BackdropNode {
   inputs 0
   name BackdropNode11
   knobChanged "try:\n    listenedKnobs = \['text', 'position', 'name']\n    node = nuke.thisNode()\n    name = node.knob('name').value()\n    text = node.knob('text').value()\n    position = node.knob('position').value()\n    position = \"<\" + position + \">\"\n    label = node.knob('label').value()\n    \n    if nuke.thisKnob().name() in listenedKnobs:\n        if text == \"\":\n            if node.knob('position').value() == \"left\":\n                node.knob('label').setValue()\n            else:\n                node.knob('label').setValue(position + name)\n        else:\n            if node.knob('position').value() == \"left\":\n                node.knob('label').setValue(text)\n            else:\n                node.knob('label').setValue(position + text)\n                \n    elif nuke.thisKnob().name() == 'font_size':\n        fontSize = node.knob('font_size').value()\n        node.knob('note_font_size').setValue(fontSize)\nexcept:\n    pass"
   tile_color 0x383838ff
   label <Center>direction
   note_font_size 21
   xpos 1802
   ypos -3124
   bdwidth 165
   bdheight 193
   z_order 1
   addUserKnob {20 F_VFX l BackdropNode}
   addUserKnob {43 text l Text}
   text direction
   addUserKnob {7 font_size l "Font Size" R 10 100}
   font_size 21
   addUserKnob {4 position l "" -STARTLINE M {Left Center}}
   position Center
   addUserKnob {26 S01 l " " T " "}
   addUserKnob {22 grow l " <img src=\"F_scalep.png\">" -STARTLINE T "n=nuke.thisNode()\n\ndef grow(node=None,step=50):\n    try:\n        if not node:\n            n=nuke.selectedNode()\n        else:\n            n=node\n            n\['xpos'].setValue(n\['xpos'].getValue()-step)\n            n\['ypos'].setValue(n\['ypos'].getValue()-step)\n            n\['bdwidth'].setValue(n\['bdwidth'].getValue()+step*2)\n            n\['bdheight'].setValue(n\['bdheight'].getValue()+step*2)\n    except:\n        pass\ngrow(n,50)"}
   addUserKnob {22 shrink l " <img src=\"F_scalem.png\">" -STARTLINE T "n=nuke.thisNode()\n\ndef shrink(node=None,step=50):\n    try:\n        if not node:\n            n=nuke.selectedNode()\n        else:\n            n=node\n            n\['xpos'].setValue(n\['xpos'].getValue()+step)\n            n\['ypos'].setValue(n\['ypos'].getValue()+step)\n            n\['bdwidth'].setValue(n\['bdwidth'].getValue()-step*2)\n            n\['bdheight'].setValue(n\['bdheight'].getValue()-step*2)\n    except:\n        pass\nshrink(n,50)"}
   addUserKnob {22 colorandom l " <img src=\"ColorBars.png\">" -STARTLINE T "import colorsys, random\nn=nuke.thisNode()\nR,G,B= colorsys.hsv_to_rgb(random.random(),.1+random.random()*.15,.15+random.random()*.15)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ) )"}
   addUserKnob {22 darkgrey l "<font color=\"#232323\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.0, 0.0, 0.14]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
   addUserKnob {22 lightgrey l "<font color=\"#383838\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.0, 0.0, 0.22]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
   addUserKnob {22 red l "<font color=\"#8c3838\" size=6>■</font>" T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.0, 0.6, 0.55]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n" +STARTLINE}
   addUserKnob {22 orange l "<font color=\"#b28e59\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.1, 0.5, 0.7]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
   addUserKnob {22 yellow l "<font color=\"#ccc766\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.16, 0.5, 0.8]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
   addUserKnob {22 green l "<font color=\"#5d995b\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.33, 0.4, 0.6]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
   addUserKnob {22 cyan l "<font color=\"#72998f\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.46, 0.25, 0.6]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
   addUserKnob {22 blue l "<font color=\"#59687f\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.6, 0.3, 0.5]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
   addUserKnob {22 darkblue l "<font color=\"#63628c\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.67, 0.3, 0.55]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
   addUserKnob {22 magenta l "<font color=\"#927a99\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.8, 0.2, 0.6]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
   addUserKnob {22 pink l "<font color=\"#997a89\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.92, 0.2, 0.6]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
   addUserKnob {26 S02 l " " T " "}
   addUserKnob {26 Ftools l "" +STARTLINE T "<font color=\"#1C1C1C\"> v1.2 - Franklin VFX - 2018"}
  }
  BackdropNode {
   inputs 0
   name BackdropNode12
   knobChanged "try:\n    listenedKnobs = \['text', 'position', 'name']\n    node = nuke.thisNode()\n    name = node.knob('name').value()\n    text = node.knob('text').value()\n    position = node.knob('position').value()\n    position = \"<\" + position + \">\"\n    label = node.knob('label').value()\n    \n    if nuke.thisKnob().name() in listenedKnobs:\n        if text == \"\":\n            if node.knob('position').value() == \"left\":\n                node.knob('label').setValue()\n            else:\n                node.knob('label').setValue(position + name)\n        else:\n            if node.knob('position').value() == \"left\":\n                node.knob('label').setValue(text)\n            else:\n                node.knob('label').setValue(position + text)\n                \n    elif nuke.thisKnob().name() == 'font_size':\n        fontSize = node.knob('font_size').value()\n        node.knob('note_font_size').setValue(fontSize)\nexcept:\n    pass"
   tile_color 0x383838ff
   label <Center>direction
   note_font_size 21
   xpos 3772
   ypos -3164
   bdwidth 165
   bdheight 193
   z_order 1
   addUserKnob {20 F_VFX l BackdropNode}
   addUserKnob {43 text l Text}
   text direction
   addUserKnob {7 font_size l "Font Size" R 10 100}
   font_size 21
   addUserKnob {4 position l "" -STARTLINE M {Left Center}}
   position Center
   addUserKnob {26 S01 l " " T " "}
   addUserKnob {22 grow l " <img src=\"F_scalep.png\">" -STARTLINE T "n=nuke.thisNode()\n\ndef grow(node=None,step=50):\n    try:\n        if not node:\n            n=nuke.selectedNode()\n        else:\n            n=node\n            n\['xpos'].setValue(n\['xpos'].getValue()-step)\n            n\['ypos'].setValue(n\['ypos'].getValue()-step)\n            n\['bdwidth'].setValue(n\['bdwidth'].getValue()+step*2)\n            n\['bdheight'].setValue(n\['bdheight'].getValue()+step*2)\n    except:\n        pass\ngrow(n,50)"}
   addUserKnob {22 shrink l " <img src=\"F_scalem.png\">" -STARTLINE T "n=nuke.thisNode()\n\ndef shrink(node=None,step=50):\n    try:\n        if not node:\n            n=nuke.selectedNode()\n        else:\n            n=node\n            n\['xpos'].setValue(n\['xpos'].getValue()+step)\n            n\['ypos'].setValue(n\['ypos'].getValue()+step)\n            n\['bdwidth'].setValue(n\['bdwidth'].getValue()-step*2)\n            n\['bdheight'].setValue(n\['bdheight'].getValue()-step*2)\n    except:\n        pass\nshrink(n,50)"}
   addUserKnob {22 colorandom l " <img src=\"ColorBars.png\">" -STARTLINE T "import colorsys, random\nn=nuke.thisNode()\nR,G,B= colorsys.hsv_to_rgb(random.random(),.1+random.random()*.15,.15+random.random()*.15)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ) )"}
   addUserKnob {22 darkgrey l "<font color=\"#232323\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.0, 0.0, 0.14]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
   addUserKnob {22 lightgrey l "<font color=\"#383838\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.0, 0.0, 0.22]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
   addUserKnob {22 red l "<font color=\"#8c3838\" size=6>■</font>" T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.0, 0.6, 0.55]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n" +STARTLINE}
   addUserKnob {22 orange l "<font color=\"#b28e59\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.1, 0.5, 0.7]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
   addUserKnob {22 yellow l "<font color=\"#ccc766\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.16, 0.5, 0.8]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
   addUserKnob {22 green l "<font color=\"#5d995b\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.33, 0.4, 0.6]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
   addUserKnob {22 cyan l "<font color=\"#72998f\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.46, 0.25, 0.6]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
   addUserKnob {22 blue l "<font color=\"#59687f\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.6, 0.3, 0.5]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
   addUserKnob {22 darkblue l "<font color=\"#63628c\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.67, 0.3, 0.55]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
   addUserKnob {22 magenta l "<font color=\"#927a99\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.8, 0.2, 0.6]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
   addUserKnob {22 pink l "<font color=\"#997a89\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.92, 0.2, 0.6]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
   addUserKnob {26 S02 l " " T " "}
   addUserKnob {26 Ftools l "" +STARTLINE T "<font color=\"#1C1C1C\"> v1.2 - Franklin VFX - 2018"}
  }
  Axis3 {
   inputs 0
   rotate {{SmokeLightDirection*110} {SmokeLightDirection*110} {SmokeLightDirection*110}}
   name Axis4
   label "recalculate \nposition matrix"
   xpos 1442
   ypos -4113
  }
  Read {
   inputs 0
   file_type exr
   file "\[value filepath]CG_smoke/Top/gunsmoke_top_14.%08d.exr"
   localizationPolicy on
   first 1300
   last 1398
   origfirst 1300
   origlast 1398
   origset true
   version 28
   colorspace scene_linear
   name Read90
   xpos 4512
   ypos -3451
   postage_stamp false
  }
  TimeClip {
   time ""
   first 1300
   last 1398
   frame_mode "start at"
   frame 1
   origfirst 1300
   origlast 1398
   origset true
   mask_metadata true
   name TimeClip89
   xpos 4512
   ypos -3353
  }
  Read {
   inputs 0
   file_type exr
   file "\[value filepath]CG_smoke/Top/gunsmoke_top_13.%08d.exr"
   localizationPolicy on
   first 1200
   last 1299
   origfirst 1200
   origlast 1299
   origset true
   version 28
   colorspace scene_linear
   name Read78
   xpos 4402
   ypos -3449
   postage_stamp false
  }
  TimeClip {
   time ""
   first 1200
   last 1299
   frame_mode "start at"
   frame 1
   origfirst 1200
   origlast 1299
   origset true
   mask_metadata true
   name TimeClip83
   xpos 4402
   ypos -3353
  }
  Read {
   inputs 0
   file_type exr
   file "\[value filepath]CG_smoke/Top/gunsmoke_top_12.%08d.exr"
   localizationPolicy on
   first 1100
   last 1199
   origfirst 1100
   origlast 1199
   origset true
   version 32
   colorspace scene_linear
   name Read76
   xpos 4292
   ypos -3449
   postage_stamp false
  }
  TimeClip {
   time ""
   first 1100
   last 1199
   frame_mode "start at"
   frame 1
   origfirst 1100
   origlast 1199
   origset true
   mask_metadata true
   name TimeClip82
   xpos 4292
   ypos -3353
  }
  Read {
   inputs 0
   file_type exr
   file "\[value filepath]CG_smoke/Top/gunsmoke_top_11.%08d.exr"
   localizationPolicy on
   first 1000
   last 1099
   origfirst 1000
   origlast 1099
   origset true
   version 30
   colorspace scene_linear
   name Read74
   xpos 4182
   ypos -3449
   postage_stamp false
  }
  TimeClip {
   time ""
   first 1000
   last 1099
   frame_mode "start at"
   frame 1
   origfirst 1000
   origlast 1099
   origset true
   mask_metadata true
   name TimeClip81
   xpos 4182
   ypos -3353
  }
  Read {
   inputs 0
   file_type exr
   file "\[value filepath]CG_smoke/Top/gunsmoke_top_10.%08d.exr"
   localizationPolicy on
   first 900
   last 999
   origfirst 900
   origlast 999
   origset true
   version 30
   colorspace scene_linear
   name Read72
   xpos 4072
   ypos -3449
   postage_stamp false
  }
  TimeClip {
   time ""
   first 900
   last 999
   frame_mode "start at"
   frame 1
   origfirst 900
   origlast 999
   origset true
   mask_metadata true
   name TimeClip80
   xpos 4072
   ypos -3353
  }
  Read {
   inputs 0
   file_type exr
   file "\[value filepath]CG_smoke/Top/gunsmoke_top_09.%08d.exr"
   localizationPolicy on
   first 800
   last 899
   origfirst 800
   origlast 899
   origset true
   version 33
   colorspace scene_linear
   name Read70
   xpos 3962
   ypos -3451
   postage_stamp false
  }
  TimeClip {
   time ""
   first 800
   last 899
   frame_mode "start at"
   frame 1
   origfirst 800
   origlast 899
   origset true
   mask_metadata true
   name TimeClip79
   xpos 3962
   ypos -3353
  }
  Read {
   inputs 0
   file_type exr
   file "\[value filepath]CG_smoke/Top/gunsmoke_top_08.%08d.exr"
   localizationPolicy on
   first 700
   last 799
   origfirst 700
   origlast 799
   origset true
   version 30
   colorspace scene_linear
   name Read68
   xpos 3852
   ypos -3449
   postage_stamp false
  }
  TimeClip {
   time ""
   first 700
   last 799
   frame_mode "start at"
   frame 1
   origfirst 700
   origlast 799
   origset true
   mask_metadata true
   name TimeClip78
   xpos 3852
   ypos -3353
  }
  Read {
   inputs 0
   file_type exr
   file "\[value filepath]CG_smoke/Top/gunsmoke_top_07.%08d.exr"
   localizationPolicy on
   first 600
   last 699
   origfirst 600
   origlast 699
   origset true
   version 30
   colorspace scene_linear
   name Read66
   xpos 3742
   ypos -3449
   postage_stamp false
  }
  TimeClip {
   time ""
   first 600
   last 699
   frame_mode "start at"
   frame 1
   origfirst 600
   origlast 699
   origset true
   mask_metadata true
   name TimeClip77
   xpos 3742
   ypos -3353
  }
  Read {
   inputs 0
   file_type exr
   file "\[value filepath]CG_smoke/Top/gunsmoke_top_06.%08d.exr"
   localizationPolicy on
   first 500
   last 599
   origfirst 500
   origlast 599
   origset true
   version 34
   colorspace scene_linear
   name Read64
   xpos 3632
   ypos -3449
   postage_stamp false
  }
  TimeClip {
   time ""
   first 500
   last 599
   frame_mode "start at"
   frame 1
   origfirst 500
   origlast 599
   origset true
   mask_metadata true
   name TimeClip76
   xpos 3632
   ypos -3353
  }
  Read {
   inputs 0
   file_type exr
   file "\[value filepath]CG_smoke/Top/gunsmoke_top_05.%08d.exr"
   localizationPolicy on
   first 400
   last 499
   origfirst 400
   origlast 499
   origset true
   version 30
   colorspace scene_linear
   name Read62
   xpos 3522
   ypos -3450
   postage_stamp false
  }
  TimeClip {
   time ""
   first 400
   last 499
   frame_mode "start at"
   frame 1
   origfirst 400
   origlast 499
   origset true
   mask_metadata true
   name TimeClip75
   xpos 3522
   ypos -3353
  }
  Read {
   inputs 0
   file_type exr
   file "\[value filepath]CG_smoke/Top/gunsmoke_top_04.%08d.exr"
   localizationPolicy on
   first 300
   last 399
   origfirst 300
   origlast 399
   origset true
   version 32
   colorspace scene_linear
   name Read60
   xpos 3412
   ypos -3449
   postage_stamp false
  }
  TimeClip {
   time ""
   first 300
   last 399
   frame_mode "start at"
   frame 1
   origfirst 300
   origlast 399
   origset true
   mask_metadata true
   name TimeClip74
   xpos 3412
   ypos -3353
  }
  Read {
   inputs 0
   file_type exr
   file "\[value filepath]CG_smoke/Top/gunsmoke_top_03.%08d.exr"
   localizationPolicy on
   first 200
   last 299
   origfirst 200
   origlast 299
   origset true
   version 32
   colorspace scene_linear
   name Read58
   xpos 3302
   ypos -3449
   postage_stamp false
  }
  TimeClip {
   time ""
   first 200
   last 299
   frame_mode "start at"
   frame 1
   origfirst 200
   origlast 299
   origset true
   mask_metadata true
   name TimeClip73
   xpos 3302
   ypos -3353
  }
  Read {
   inputs 0
   file_type exr
   file "\[value filepath]CG_smoke/Top/gunsmoke_top_02.%08d.exr"
   localizationPolicy on
   first 100
   last 199
   origfirst 100
   origlast 199
   origset true
   version 34
   colorspace scene_linear
   name Read56
   xpos 3192
   ypos -3449
   postage_stamp false
  }
  TimeClip {
   time ""
   first 100
   last 199
   frame_mode "start at"
   frame 1
   origfirst 100
   origlast 199
   origset true
   mask_metadata true
   name TimeClip72
   xpos 3192
   ypos -3353
  }
  Read {
   inputs 0
   file_type exr
   file "\[value filepath]CG_smoke/Top/gunsmoke_top_01.%08d.exr"
   localizationPolicy on
   last 99
   origlast 99
   origset true
   version 40
   colorspace scene_linear
   name Read54
   xpos 3082
   ypos -3449
   postage_stamp false
  }
  TimeClip {
   time ""
   last 99
   frame_mode "start at"
   frame 1
   origlast 99
   origset true
   mask_metadata true
   name TimeClip71
   xpos 3082
   ypos -3353
  }
  Switch {
   inputs 14
   which {{floor((frame%1)*13)}}
   name Switch13
   xpos 3815
   ypos -3206
  }
  ColorMatrix {
   matrix {
       {{parent.Axis4.matrix.0(1)} {parent.Axis4.matrix.1(1)} {parent.Axis4.matrix.2(1)}}
       {{parent.Axis4.matrix.4(1)} {parent.Axis4.matrix.5(1)} {parent.Axis4.matrix.6(1)}}
       {{parent.Axis4.matrix.8(1)} {parent.Axis4.matrix.9(1)} {parent.Axis4.matrix.10(1)}}
     }
   name ColorMatrix3
   xpos 3815
   ypos -3082
  }
  Saturation {
   saturation 0
   mode Average
   name Saturation3
   xpos 3815
   ypos -3050
  }
  Clamp {
   channels rgba
   maximum_enable false
   name BlackClamp2
   tile_color 0x37455eff
   xpos 3815
   ypos -3024
  }
  Transform {
   scale {{ScaleSideSmoke.w} {ScaleSideSmoke.h}}
   center {960 540}
   shutteroffset centred
   name Transform40
   xpos 3815
   ypos -2889
  }
  Transform {
   scale {{1+((curve-1)*ScaleAnimationSideSmoke) x1 1 x16 1.405771905 x50 1.507072179 s0}}
   center {960 540}
   shutteroffset centred
   name Transform42
   label "scale animation"
   xpos 3815
   ypos -2828
  }
  Reformat {
   resize height
   pbb true
   name Reformat3
   xpos 3815
   ypos -2760
  }
  Shuffle2 {
   fromInput1 {{0} B}
   fromInput2 {{0} B}
   mappings "4 rgba.blue 0 2 rgba.blue 0 2 black -1 -1 rgba.green 0 1 black -1 -1 rgba.alpha 0 3 black -1 -1 rgba.red 0 0"
   name Shuffle30
   tile_color 0x3f3b9eff
   xpos 3815
   ypos -2634
  }
  Multiply {
   channels {-rgba.red -rgba.green rgba.blue none}
   value {{brightnesSideSmoke}}
   name Multiply58
   xpos 3815
   ypos -2567
  }
push 0
  Switch {
   inputs 2
   which {{ActivateSideSmoke}}
   name Switch7
   xpos 3815
   ypos -2421
  }
  Dot {
   name Dot71
   xpos 3849
   ypos -2031
  }
  Read {
   inputs 0
   file_type exr
   file "\[value filepath]CG_smoke/Side/gunsmoke_side_14.%08d.exr"
   localizationPolicy on
   first 1300
   last 1398
   origfirst 1300
   origlast 1398
   origset true
   version 42
   colorspace scene_linear
   name Read86
   xpos 2610
   ypos -3470
   postage_stamp false
  }
  TimeClip {
   time ""
   first 1300
   last 1398
   frame_mode "start at"
   frame 1
   origfirst 1300
   origlast 1398
   origset true
   mask_metadata true
   name TimeClip87
   xpos 2610
   ypos -3374
  }
  Read {
   inputs 0
   file_type exr
   file "\[value filepath]CG_smoke/Side/gunsmoke_side_13.%08d.exr"
   localizationPolicy on
   first 1200
   last 1299
   origfirst 1200
   origlast 1299
   origset true
   version 46
   colorspace scene_linear
   name Read52
   xpos 2500
   ypos -3470
   postage_stamp false
  }
  TimeClip {
   time ""
   first 1200
   last 1299
   frame_mode "start at"
   frame 1
   origfirst 1200
   origlast 1299
   origset true
   mask_metadata true
   name TimeClip70
   xpos 2500
   ypos -3374
  }
  Read {
   inputs 0
   file_type exr
   file "\[value filepath]CG_smoke/Side/gunsmoke_side_12.%08d.exr"
   localizationPolicy on
   first 1100
   last 1199
   origfirst 1100
   origlast 1199
   origset true
   version 46
   colorspace scene_linear
   name Read50
   xpos 2390
   ypos -3470
   postage_stamp false
  }
  TimeClip {
   time ""
   first 1100
   last 1199
   frame_mode "start at"
   frame 1
   origfirst 1100
   origlast 1199
   origset true
   mask_metadata true
   name TimeClip69
   xpos 2390
   ypos -3374
  }
  Read {
   inputs 0
   file_type exr
   file "\[value filepath]CG_smoke/Side/gunsmoke_side_11.%08d.exr"
   localizationPolicy on
   first 1000
   last 1099
   origfirst 1000
   origlast 1099
   origset true
   version 48
   colorspace scene_linear
   name Read48
   xpos 2280
   ypos -3470
   postage_stamp false
  }
  TimeClip {
   time ""
   first 1000
   last 1099
   frame_mode "start at"
   frame 1
   origfirst 1000
   origlast 1099
   origset true
   mask_metadata true
   name TimeClip68
   xpos 2280
   ypos -3374
  }
  Read {
   inputs 0
   file_type exr
   file "\[value filepath]CG_smoke/Side/gunsmoke_side_10.%08d.exr"
   localizationPolicy on
   first 900
   last 999
   origfirst 900
   origlast 999
   origset true
   version 46
   colorspace scene_linear
   name Read46
   xpos 2170
   ypos -3469
   postage_stamp false
  }
  TimeClip {
   time ""
   first 900
   last 999
   frame_mode "start at"
   frame 1
   origfirst 900
   origlast 999
   origset true
   mask_metadata true
   name TimeClip67
   xpos 2170
   ypos -3374
  }
  Read {
   inputs 0
   file_type exr
   file "\[value filepath]CG_smoke/Side/gunsmoke_side_09.%08d.exr"
   localizationPolicy on
   first 800
   last 899
   origfirst 800
   origlast 899
   origset true
   version 46
   colorspace scene_linear
   name Read44
   xpos 2060
   ypos -3470
   postage_stamp false
  }
  TimeClip {
   time ""
   first 800
   last 899
   frame_mode "start at"
   frame 1
   origfirst 800
   origlast 899
   origset true
   mask_metadata true
   name TimeClip66
   xpos 2060
   ypos -3374
  }
  Read {
   inputs 0
   file_type exr
   file "\[value filepath]CG_smoke/Side/gunsmoke_side_08.%08d.exr"
   localizationPolicy on
   first 700
   last 799
   origfirst 700
   origlast 799
   origset true
   version 46
   colorspace scene_linear
   name Read42
   xpos 1950
   ypos -3471
   postage_stamp false
  }
  TimeClip {
   time ""
   first 700
   last 799
   frame_mode "start at"
   frame 1
   origfirst 700
   origlast 799
   origset true
   mask_metadata true
   name TimeClip65
   xpos 1950
   ypos -3374
  }
  Read {
   inputs 0
   file_type exr
   file "\[value filepath]CG_smoke/Side/gunsmoke_side_07.%08d.exr"
   localizationPolicy on
   first 600
   last 699
   origfirst 600
   origlast 699
   origset true
   version 44
   colorspace scene_linear
   name Read40
   xpos 1840
   ypos -3470
   postage_stamp false
  }
  TimeClip {
   time ""
   first 600
   last 699
   frame_mode "start at"
   frame 1
   origfirst 600
   origlast 699
   origset true
   mask_metadata true
   name TimeClip64
   xpos 1840
   ypos -3374
  }
  Read {
   inputs 0
   file_type exr
   file "\[value filepath]CG_smoke/Side/gunsmoke_side_06.%08d.exr"
   localizationPolicy on
   first 500
   last 599
   origfirst 500
   origlast 599
   origset true
   version 50
   colorspace scene_linear
   name Read38
   xpos 1730
   ypos -3470
   postage_stamp false
  }
  TimeClip {
   time ""
   first 500
   last 599
   frame_mode "start at"
   frame 1
   origfirst 500
   origlast 599
   origset true
   mask_metadata true
   name TimeClip63
   xpos 1730
   ypos -3374
  }
  Read {
   inputs 0
   file_type exr
   file "\[value filepath]CG_smoke/Side/gunsmoke_side_05.%08d.exr"
   localizationPolicy on
   first 400
   last 499
   origfirst 400
   origlast 499
   origset true
   version 56
   colorspace scene_linear
   name Read36
   xpos 1620
   ypos -3470
   postage_stamp false
  }
  TimeClip {
   time ""
   first 400
   last 499
   frame_mode "start at"
   frame 1
   origfirst 400
   origlast 499
   origset true
   mask_metadata true
   name TimeClip62
   xpos 1620
   ypos -3374
  }
  Read {
   inputs 0
   file_type exr
   file "\[value filepath]CG_smoke/Side/gunsmoke_side_04.%08d.exr"
   localizationPolicy on
   first 300
   last 399
   origfirst 300
   origlast 399
   origset true
   version 44
   colorspace scene_linear
   name Read34
   xpos 1510
   ypos -3470
   postage_stamp false
  }
  TimeClip {
   time ""
   first 300
   last 399
   frame_mode "start at"
   frame 1
   origfirst 300
   origlast 399
   origset true
   mask_metadata true
   name TimeClip61
   xpos 1510
   ypos -3374
  }
  Read {
   inputs 0
   file_type exr
   file "\[value filepath]CG_smoke/Side/gunsmoke_side_03.%08d.exr"
   localizationPolicy on
   first 200
   last 299
   origfirst 200
   origlast 299
   origset true
   version 48
   colorspace scene_linear
   name Read32
   xpos 1400
   ypos -3470
   postage_stamp false
  }
  TimeClip {
   time ""
   first 200
   last 299
   frame_mode "start at"
   frame 1
   origfirst 200
   origlast 299
   origset true
   mask_metadata true
   name TimeClip60
   xpos 1400
   ypos -3374
  }
  Read {
   inputs 0
   file_type exr
   file "\[value filepath]CG_smoke/Side/gunsmoke_side_02.%08d.exr"
   localizationPolicy on
   first 100
   last 199
   origfirst 100
   origlast 199
   origset true
   version 47
   colorspace scene_linear
   name Read30
   xpos 1290
   ypos -3470
   postage_stamp false
  }
  TimeClip {
   time ""
   first 100
   last 199
   frame_mode "start at"
   frame 1
   origfirst 100
   origlast 199
   origset true
   mask_metadata true
   name TimeClip59
   xpos 1290
   ypos -3374
  }
  Read {
   inputs 0
   file_type exr
   file "\[value filepath]CG_smoke/Side/gunsmoke_side_01.%08d.exr"
   localizationPolicy on
   last 99
   origlast 99
   origset true
   version 46
   colorspace scene_linear
   name Read28
   xpos 1180
   ypos -3470
   postage_stamp false
  }
  TimeClip {
   time ""
   last 99
   frame_mode "start at"
   frame 1
   origlast 99
   origset true
   mask_metadata true
   name TimeClip58
   xpos 1180
   ypos -3374
  }
  Switch {
   inputs 14
   which {{floor((frame%1)*13)}}
   name Switch12
   xpos 1845
   ypos -3233
  }
  ColorMatrix {
   matrix {
       {{parent.Axis4.matrix.0(1)} {parent.Axis4.matrix.1(1)} {parent.Axis4.matrix.2(1)}}
       {{parent.Axis4.matrix.4(1)} {parent.Axis4.matrix.5(1)} {parent.Axis4.matrix.6(1)}}
       {{parent.Axis4.matrix.8(1)} {parent.Axis4.matrix.9(1)} {parent.Axis4.matrix.10(1)}}
     }
   name ColorMatrix2
   xpos 1845
   ypos -3050
  }
  Saturation {
   saturation 0
   mode Average
   name Saturation2
   xpos 1845
   ypos -3024
  }
  Clamp {
   channels rgba
   maximum_enable false
   name BlackClamp1
   tile_color 0x37455eff
   xpos 1845
   ypos -2998
  }
  Transform {
   scale {{ScaleSideSmoke.w} {ScaleSideSmoke.h}}
   center {960 540}
   shutteroffset centred
   name Transform39
   xpos 1845
   ypos -2832
  }
  Transform {
   scale {{1+((curve-1)*ScaleAnimationSideSmoke) x1 1 x16 1.405771905 x50 1.507072179 s0}}
   center {960 540}
   shutteroffset centred
   name Transform41
   label "scale animation"
   xpos 1845
   ypos -2767
  }
  Reformat {
   resize height
   pbb true
   name Reformat2
   xpos 1845
   ypos -2695
  }
  Shuffle2 {
   fromInput1 {{0} B}
   fromInput2 {{0} B}
   mappings "4 rgba.green 0 1 rgba.green 0 1 black -1 -1 rgba.blue 0 2 black -1 -1 rgba.alpha 0 3 black -1 -1 rgba.red 0 0"
   name Shuffle14
   tile_color 0x479e3bff
   xpos 1845
   ypos -2594
  }
  Multiply {
   channels {-rgba.red rgba.green -rgba.blue none}
   value {{brightnesSideSmoke}}
   name Multiply57
   xpos 1845
   ypos -2543
  }
push 0
  Switch {
   inputs 2
   which {{ActivateSideSmoke}}
   name Switch6
   xpos 1845
   ypos -2427
  }
  Dot {
   name Dot73
   xpos 1879
   ypos -2303
  }
  Read {
   inputs 0
   file_type exr
   file "\[value filepath]CG_smoke/Front/gunsmoke_front_14.%08d.exr"
   localizationPolicy on
   first 1300
   last 1398
   origfirst 1300
   origlast 1398
   origset true
   version 36
   colorspace scene_linear
   name Read88
   xpos 395
   ypos -3483
   postage_stamp false
  }
  TimeClip {
   time ""
   first 1300
   last 1398
   frame_mode "start at"
   frame 1
   origfirst 1300
   origlast 1398
   origset true
   mask_metadata true
   name TimeClip88
   xpos 395
   ypos -3387
  }
  Read {
   inputs 0
   file_type exr
   file "\[value filepath]CG_smoke/Front/gunsmoke_front_01.%08d.exr"
   localizationPolicy on
   last 99
   origlast 99
   origset true
   version 45
   colorspace scene_linear
   name Read6
   xpos 285
   ypos -3483
   postage_stamp false
  }
  TimeClip {
   time ""
   last 99
   frame_mode "start at"
   frame 1
   origlast 99
   origset true
   mask_metadata true
   name TimeClip45
   xpos 285
   ypos -3387
  }
  Read {
   inputs 0
   file_type exr
   file "\[value filepath]CG_smoke/Front/gunsmoke_front_02.%08d.exr"
   localizationPolicy on
   first 100
   last 199
   origfirst 100
   origlast 199
   origset true
   version 42
   colorspace scene_linear
   name Read8
   xpos 175
   ypos -3483
   postage_stamp false
  }
  TimeClip {
   time ""
   first 100
   last 199
   frame_mode "start at"
   frame 1
   origfirst 100
   origlast 199
   origset true
   mask_metadata true
   name TimeClip46
   xpos 175
   ypos -3387
  }
  Read {
   inputs 0
   file_type exr
   file "\[value filepath]CG_smoke/Front/gunsmoke_front_13.%08d.exr"
   localizationPolicy on
   first 1200
   last 1299
   origfirst 1200
   origlast 1299
   origset true
   version 30
   colorspace scene_linear
   name Read26
   xpos 65
   ypos -3483
   postage_stamp false
  }
  TimeClip {
   time ""
   first 1200
   last 1299
   frame_mode "start at"
   frame 1
   origfirst 1200
   origlast 1299
   origset true
   mask_metadata true
   name TimeClip57
   xpos 65
   ypos -3387
  }
  Read {
   inputs 0
   file_type exr
   file "\[value filepath]CG_smoke/Front/gunsmoke_front_12.%08d.exr"
   localizationPolicy on
   first 1100
   last 1199
   origfirst 1100
   origlast 1199
   origset true
   version 28
   colorspace scene_linear
   name Read24
   xpos -45
   ypos -3484
   postage_stamp false
  }
  TimeClip {
   time ""
   first 1100
   last 1199
   frame_mode "start at"
   frame 1
   origfirst 1100
   origlast 1199
   origset true
   mask_metadata true
   name TimeClip56
   xpos -45
   ypos -3387
  }
  Read {
   inputs 0
   file_type exr
   file "\[value filepath]CG_smoke/Front/gunsmoke_front_11.%08d.exr"
   localizationPolicy on
   first 1000
   last 1099
   origfirst 1000
   origlast 1099
   origset true
   version 28
   colorspace scene_linear
   name Read22
   xpos -155
   ypos -3483
   postage_stamp false
  }
  TimeClip {
   time ""
   first 1000
   last 1099
   frame_mode "start at"
   frame 1
   origfirst 1000
   origlast 1099
   origset true
   mask_metadata true
   name TimeClip55
   xpos -155
   ypos -3387
  }
  Read {
   inputs 0
   file_type exr
   file "\[value filepath]CG_smoke/Front/gunsmoke_front_10.%08d.exr"
   localizationPolicy on
   first 900
   last 999
   origfirst 900
   origlast 999
   origset true
   version 32
   colorspace scene_linear
   name Read20
   xpos -265
   ypos -3483
   postage_stamp false
  }
  TimeClip {
   time ""
   first 900
   last 999
   frame_mode "start at"
   frame 1
   origfirst 900
   origlast 999
   origset true
   mask_metadata true
   name TimeClip54
   xpos -265
   ypos -3387
  }
  Read {
   inputs 0
   file_type exr
   file "\[value filepath]CG_smoke/Front/gunsmoke_front_09.%08d.exr"
   localizationPolicy on
   first 800
   last 899
   origfirst 800
   origlast 899
   origset true
   version 32
   colorspace scene_linear
   name Read19
   xpos -375
   ypos -3483
   postage_stamp false
  }
  TimeClip {
   time ""
   first 800
   last 899
   frame_mode "start at"
   frame 1
   origfirst 800
   origlast 899
   origset true
   mask_metadata true
   name TimeClip53
   xpos -375
   ypos -3387
  }
  Read {
   inputs 0
   file_type exr
   file "\[value filepath]CG_smoke/Front/gunsmoke_front_08.%08d.exr"
   localizationPolicy on
   first 700
   last 799
   origfirst 700
   origlast 799
   origset true
   version 34
   name Read18
   xpos -485
   ypos -3483
   postage_stamp false
  }
  TimeClip {
   time ""
   first 700
   last 799
   frame_mode "start at"
   frame 1
   origfirst 700
   origlast 799
   origset true
   mask_metadata true
   name TimeClip52
   xpos -485
   ypos -3387
  }
  Read {
   inputs 0
   file_type exr
   file "\[value filepath]CG_smoke/Front/gunsmoke_front_07.%08d.exr"
   localizationPolicy on
   first 600
   last 699
   origfirst 600
   origlast 699
   origset true
   version 34
   colorspace scene_linear
   name Read16
   xpos -595
   ypos -3483
   postage_stamp false
  }
  TimeClip {
   time ""
   first 600
   last 699
   frame_mode "start at"
   frame 1
   origfirst 600
   origlast 699
   origset true
   mask_metadata true
   name TimeClip51
   xpos -595
   ypos -3387
  }
  Read {
   inputs 0
   file_type exr
   file "\[value filepath]CG_smoke/Front/gunsmoke_front_06.%08d.exr"
   localizationPolicy on
   first 500
   last 599
   origfirst 500
   origlast 599
   origset true
   version 32
   colorspace scene_linear
   name Read14
   xpos -705
   ypos -3483
   postage_stamp false
  }
  TimeClip {
   time ""
   first 500
   last 599
   frame_mode "start at"
   frame 1
   origfirst 500
   origlast 599
   origset true
   mask_metadata true
   name TimeClip50
   xpos -705
   ypos -3387
  }
  Read {
   inputs 0
   file_type exr
   file "\[value filepath]CG_smoke/Front/gunsmoke_front_05.%08d.exr"
   localizationPolicy on
   first 400
   last 499
   origfirst 400
   origlast 499
   origset true
   version 40
   colorspace scene_linear
   name Read12
   xpos -815
   ypos -3483
   postage_stamp false
  }
  TimeClip {
   time ""
   first 400
   last 499
   frame_mode "start at"
   frame 1
   origfirst 400
   origlast 499
   origset true
   mask_metadata true
   name TimeClip49
   xpos -815
   ypos -3387
  }
  Read {
   inputs 0
   file_type exr
   file "\[value filepath]CG_smoke/Front/gunsmoke_front_04.%08d.exr"
   localizationPolicy on
   first 300
   last 399
   origfirst 300
   origlast 399
   origset true
   version 46
   colorspace scene_linear
   name Read11
   xpos -925
   ypos -3483
   postage_stamp false
  }
  TimeClip {
   time ""
   first 300
   last 399
   frame_mode "start at"
   frame 1
   origfirst 300
   origlast 399
   origset true
   mask_metadata true
   name TimeClip48
   xpos -925
   ypos -3387
  }
  Read {
   inputs 0
   file_type exr
   file "\[value filepath]CG_smoke/Front/gunsmoke_front_03.%08d.exr"
   localizationPolicy on
   first 200
   last 299
   origfirst 200
   origlast 299
   origset true
   version 48
   colorspace scene_linear
   name Read10
   xpos -1035
   ypos -3483
   postage_stamp false
  }
  TimeClip {
   time ""
   first 200
   last 299
   frame_mode "start at"
   frame 1
   origfirst 200
   origlast 299
   origset true
   mask_metadata true
   name TimeClip47
   xpos -1035
   ypos -3387
  }
  Switch {
   inputs 14
   which {{floor((frame%1)*13)}}
   name Switch10
   xpos -338
   ypos -3206
  }
  ColorMatrix {
   matrix {
       {{parent.Axis4.matrix.0(1)} {parent.Axis4.matrix.1(1)} {parent.Axis4.matrix.2(1)}}
       {{parent.Axis4.matrix.4(1)} {parent.Axis4.matrix.5(1)} {parent.Axis4.matrix.6(1)}}
       {{parent.Axis4.matrix.8(1)} {parent.Axis4.matrix.9(1)} {parent.Axis4.matrix.10(1)}}
     }
   name ColorMatrix1
   xpos -338
   ypos -3086
  }
  Saturation {
   saturation 0
   mode Average
   name Saturation1
   xpos -338
   ypos -3060
  }
  Clamp {
   channels rgba
   maximum_enable false
   name BlackClamp
   tile_color 0x37455eff
   xpos -338
   ypos -3014
  }
  Transform {
   scale {{ScaleFrontSmoke.w} {ScaleFrontSmoke.h}}
   center {960 540}
   shutteroffset centred
   name Transform22
   xpos -338
   ypos -2930
  }
  Transform {
   scale {{1+((curve-1)*ScaleAnimationFrontSmoke) x1 1 x16 1.405771905 x50 1.507072179 s0}}
   center {960 540}
   shutteroffset centred
   name Transform38
   label "scale animation"
   xpos -338
   ypos -2830
  }
  Reformat {
   resize height
   pbb true
   name Reformat1
   xpos -338
   ypos -2715
  }
  Shuffle2 {
   fromInput1 {{0} B}
   fromInput2 {{0} B}
   mappings "4 rgba.red 0 0 rgba.red 0 0 black -1 -1 rgba.green 0 1 black -1 -1 rgba.blue 0 2 black -1 -1 rgba.alpha 0 3"
   name Shuffle12
   tile_color 0x9e3c63ff
   xpos -338
   ypos -2633
  }
  Multiply {
   channels {rgba.red -rgba.green -rgba.blue none}
   value {{brighnesFrontSmoke}}
   name Multiply56
   xpos -338
   ypos -2557
  }
push 0
  Switch {
   inputs 2
   which {{ActivateFrontSmoke}}
   name Switch9
   xpos -338
   ypos -2416
  }
  Merge2 {
   inputs 2
   operation plus
   name Merge17
   xpos -338
   ypos -2307
  }
  Merge2 {
   inputs 2
   operation plus
   name Merge18
   xpos -338
   ypos -2035
  }
  Multiply {
   channels rgb
   value {{curve x1 1 x6 6.685837269 15.73209286 28.1184845 42.99360657 62.65167618 86.59205627 118.5989609 157.6932526 207.0376129 268.3499146 346.7086487 454.8128052 685.1777954 1183.574829 2584.395264 4748.094238 23418}}
   mix {{curve*FadeSpeedSmoke x1 1 s0 L x86 0 s0}}
   name Multiply61
   label "fade out counter"
   xpos -338
   ypos -1945
  }
  TimeOffset {
   time_offset {{StartOfSmoke}}
   time ""
   name TimeOffset13
   xpos -338
   ypos -1210
  }
  Dot {
   name Dot1
   xpos -304
   ypos -711
  }
set N14271b20 [stack 0]
  Group {
   name gunshot1
   label "shot: \[value shotcount]\non frame: \[value shotstart]\n"
   xpos -338
   ypos -358
   addUserKnob {20 User}
   addUserKnob {3 shotcount l shot}
   shotcount 1
   addUserKnob {3 shotstart l frame +INVISIBLE}
   shotstart {{"shotcount==0 ? 0 : shot\[value shotcount]-1" i}}
  }
   BackdropNode {
    inputs 0
    name BackdropNode19
    knobChanged "try:\n    listenedKnobs = \['text', 'position', 'name']\n    node = nuke.thisNode()\n    name = node.knob('name').value()\n    text = node.knob('text').value()\n    position = node.knob('position').value()\n    position = \"<\" + position + \">\"\n    label = node.knob('label').value()\n    \n    if nuke.thisKnob().name() in listenedKnobs:\n        if text == \"\":\n            if node.knob('position').value() == \"left\":\n                node.knob('label').setValue()\n            else:\n                node.knob('label').setValue(position + name)\n        else:\n            if node.knob('position').value() == \"left\":\n                node.knob('label').setValue(text)\n            else:\n                node.knob('label').setValue(position + text)\n                \n    elif nuke.thisKnob().name() == 'font_size':\n        fontSize = node.knob('font_size').value()\n        node.knob('note_font_size').setValue(fontSize)\nexcept:\n    pass"
    tile_color 0x232323ff
    label "<Left><h2> Gunshot"
    note_font_size 31.5
    xpos -693
    ypos -554
    bdwidth 876
    bdheight 1682
    addUserKnob {20 F_VFX l BackdropNode}
    addUserKnob {43 text l Text}
    text "<h2> Gunshot"
    addUserKnob {7 font_size l "Font Size" R 10 100}
    font_size 31.5
    addUserKnob {4 position l "" -STARTLINE M {Left Center}}
    addUserKnob {26 S01 l " " T " "}
    addUserKnob {22 grow l " <img src=\"F_scalep.png\">" -STARTLINE T "n=nuke.thisNode()\n\ndef grow(node=None,step=50):\n    try:\n        if not node:\n            n=nuke.selectedNode()\n        else:\n            n=node\n            n\['xpos'].setValue(n\['xpos'].getValue()-step)\n            n\['ypos'].setValue(n\['ypos'].getValue()-step)\n            n\['bdwidth'].setValue(n\['bdwidth'].getValue()+step*2)\n            n\['bdheight'].setValue(n\['bdheight'].getValue()+step*2)\n    except:\n        pass\ngrow(n,50)"}
    addUserKnob {22 shrink l " <img src=\"F_scalem.png\">" -STARTLINE T "n=nuke.thisNode()\n\ndef shrink(node=None,step=50):\n    try:\n        if not node:\n            n=nuke.selectedNode()\n        else:\n            n=node\n            n\['xpos'].setValue(n\['xpos'].getValue()+step)\n            n\['ypos'].setValue(n\['ypos'].getValue()+step)\n            n\['bdwidth'].setValue(n\['bdwidth'].getValue()-step*2)\n            n\['bdheight'].setValue(n\['bdheight'].getValue()-step*2)\n    except:\n        pass\nshrink(n,50)"}
    addUserKnob {22 colorandom l " <img src=\"ColorBars.png\">" -STARTLINE T "import colorsys, random\nn=nuke.thisNode()\nR,G,B= colorsys.hsv_to_rgb(random.random(),.1+random.random()*.15,.15+random.random()*.15)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ) )"}
    addUserKnob {22 darkgrey l "<font color=\"#232323\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.0, 0.0, 0.14]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 lightgrey l "<font color=\"#383838\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.0, 0.0, 0.22]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 red l "<font color=\"#8c3838\" size=6>■</font>" T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.0, 0.6, 0.55]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n" +STARTLINE}
    addUserKnob {22 orange l "<font color=\"#b28e59\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.1, 0.5, 0.7]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 yellow l "<font color=\"#ccc766\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.16, 0.5, 0.8]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 green l "<font color=\"#5d995b\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.33, 0.4, 0.6]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 cyan l "<font color=\"#72998f\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.46, 0.25, 0.6]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 blue l "<font color=\"#59687f\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.6, 0.3, 0.5]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 darkblue l "<font color=\"#63628c\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.67, 0.3, 0.55]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 magenta l "<font color=\"#927a99\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.8, 0.2, 0.6]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 pink l "<font color=\"#997a89\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.92, 0.2, 0.6]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {26 S02 l " " T " "}
    addUserKnob {26 Ftools l "" +STARTLINE T "<font color=\"#1C1C1C\"> v1.2 - Franklin VFX - 2018"}
   }
   BackdropNode {
    inputs 0
    name BackdropNode2
    knobChanged "try:\n    listenedKnobs = \['text', 'position', 'name']\n    node = nuke.thisNode()\n    name = node.knob('name').value()\n    text = node.knob('text').value()\n    position = node.knob('position').value()\n    position = \"<\" + position + \">\"\n    label = node.knob('label').value()\n    \n    if nuke.thisKnob().name() in listenedKnobs:\n        if text == \"\":\n            if node.knob('position').value() == \"left\":\n                node.knob('label').setValue()\n            else:\n                node.knob('label').setValue(position + name)\n        else:\n            if node.knob('position').value() == \"left\":\n                node.knob('label').setValue(text)\n            else:\n                node.knob('label').setValue(position + text)\n                \n    elif nuke.thisKnob().name() == 'font_size':\n        fontSize = node.knob('font_size').value()\n        node.knob('note_font_size').setValue(fontSize)\nexcept:\n    pass"
    tile_color 0x927a99ff
    note_font_size 50
    xpos -473
    ypos -221
    bdwidth 435
    bdheight 786
    z_order 1
    addUserKnob {20 F_VFX l BackdropNode}
    addUserKnob {43 text l Text}
    addUserKnob {7 font_size l "Font Size" R 10 100}
    font_size 50
    addUserKnob {4 position l "" -STARTLINE M {Left Center}}
    addUserKnob {26 S01 l " " T " "}
    addUserKnob {22 grow l " <img src=\"F_scalep.png\">" -STARTLINE T "n=nuke.thisNode()\n\ndef grow(node=None,step=50):\n    try:\n        if not node:\n            n=nuke.selectedNode()\n        else:\n            n=node\n            n\['xpos'].setValue(n\['xpos'].getValue()-step)\n            n\['ypos'].setValue(n\['ypos'].getValue()-step)\n            n\['bdwidth'].setValue(n\['bdwidth'].getValue()+step*2)\n            n\['bdheight'].setValue(n\['bdheight'].getValue()+step*2)\n    except:\n        pass\ngrow(n,50)"}
    addUserKnob {22 shrink l " <img src=\"F_scalem.png\">" -STARTLINE T "n=nuke.thisNode()\n\ndef shrink(node=None,step=50):\n    try:\n        if not node:\n            n=nuke.selectedNode()\n        else:\n            n=node\n            n\['xpos'].setValue(n\['xpos'].getValue()+step)\n            n\['ypos'].setValue(n\['ypos'].getValue()+step)\n            n\['bdwidth'].setValue(n\['bdwidth'].getValue()-step*2)\n            n\['bdheight'].setValue(n\['bdheight'].getValue()-step*2)\n    except:\n        pass\nshrink(n,50)"}
    addUserKnob {22 colorandom l " <img src=\"ColorBars.png\">" -STARTLINE T "import colorsys, random\nn=nuke.thisNode()\nR,G,B= colorsys.hsv_to_rgb(random.random(),.1+random.random()*.15,.15+random.random()*.15)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ) )"}
    addUserKnob {22 darkgrey l "<font color=\"#232323\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.0, 0.0, 0.14]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 lightgrey l "<font color=\"#383838\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.0, 0.0, 0.22]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 red l "<font color=\"#8c3838\" size=6>■</font>" T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.0, 0.6, 0.55]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n" +STARTLINE}
    addUserKnob {22 orange l "<font color=\"#b28e59\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.1, 0.5, 0.7]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 yellow l "<font color=\"#ccc766\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.16, 0.5, 0.8]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 green l "<font color=\"#5d995b\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.33, 0.4, 0.6]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 cyan l "<font color=\"#72998f\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.46, 0.25, 0.6]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 blue l "<font color=\"#59687f\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.6, 0.3, 0.5]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 darkblue l "<font color=\"#63628c\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.67, 0.3, 0.55]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 magenta l "<font color=\"#927a99\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.8, 0.2, 0.6]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 pink l "<font color=\"#997a89\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.92, 0.2, 0.6]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {26 S02 l " " T " "}
    addUserKnob {26 Ftools l "" +STARTLINE T "<font color=\"#1C1C1C\"> v1.2 - Franklin VFX - 2018"}
   }
   Constant {
    inputs 0
    channels rgb
    name Constant13
    xpos -643
    ypos 714
   }
   AdjBBox {
    numpixels {{size_bbox}}
    name AdjBBox13
    xpos -643
    ypos 849
   }
   Dot {
    name Dot78
    xpos -609
    ypos 987
   }
   Axis3 {
    inputs 0
    useMatrix true
    matrix {
        {{parent.cCard3D_1.matrix} {parent.cCard3D_1.matrix} {parent.cCard3D_1.matrix} {parent.cCard3D_1.matrix}}
        {{parent.cCard3D_1.matrix} {parent.cCard3D_1.matrix} {parent.cCard3D_1.matrix} {parent.cCard3D_1.matrix}}
        {{parent.cCard3D_1.matrix} {parent.cCard3D_1.matrix} {parent.cCard3D_1.matrix} {parent.cCard3D_1.matrix}}
        {{parent.cCard3D_1.matrix} {parent.cCard3D_1.matrix} {parent.cCard3D_1.matrix} {parent.cCard3D_1.matrix}}
      }
    name Axis14
    xpos -203
    ypos -12
   }
set N142ada90 [stack 0]
push 0
   Input {
    inputs 0
    name Input1
    xpos -130
    ypos -1242
   }
   TimeOffset {
    time_offset {{"shotnmbr==0 ? 0 : shot\[value shotnmbr]-1"}}
    time ""
    name CTimeOffset
    label "shot: \[value shotnmbr]\non frame \[value time_offset]"
    xpos -130
    ypos -927
    addUserKnob {20 User}
    addUserKnob {3 shotnmbr l "shot "}
    shotnmbr {{shotcount}}
    addUserKnob {3 ref}
    ref {{time_offset+1}}
   }
   Group {
    name DecimalTimeOffset13
    tile_color 0xafa35dff
    label "random asset"
    note_font "Bitstream Vera Sans Bold"
    xpos -130
    ypos -844
    addUserKnob {20 User}
    addUserKnob {7 decimal l "time offset (decimal)"}
    decimal {{random(shotcount*seed)}}
    addUserKnob {26 ""}
    addUserKnob {26 _1 l "" +STARTLINE T "Chris Fryer | 2020\nupdated by Yorben Otto | 2024"}
   }
    Input {
     inputs 0
     name Input1
     xpos 426
     ypos -793
    }
    TimeOffset {
     time_offset {{(-floor(parent.decimal))*(DecimalTimeOffset13.decimal<0)}}
     time ""
     name TimeOffset1
     xpos 426
     ypos -675
    }
    Dot {
     name Dot6
     xpos 460
     ypos -635
    }
set N142ecfc0 [stack 0]
    Dot {
     name Dot5
     xpos 350
     ypos -635
    }
    Dot {
     name Dot7
     xpos 350
     ypos -365
    }
push $N142ecfc0
    Dot {
     name Dot1
     xpos 572
     ypos -635
    }
    TimeBlur {
     divisions 2
     shutter {{(parent.decimal-(floor(parent.decimal)))*2}}
     shutteroffset start
     shuttercustomoffset 0
     name TimeBlur1
     xpos 538
     ypos -558
    }
    Dot {
     name Dot2
     xpos 572
     ypos -490
    }
push $N142ecfc0
    TimeBlur {
     divisions 2
     shutter {{parent.decimal*2}}
     shutteroffset start
     shuttercustomoffset 0
     name TimeBlur8
     xpos 426
     ypos -556
    }
    Switch {
     inputs 2
     which {{parent.decimal<0}}
     name Switch1
     xpos 426
     ypos -494
    }
    Multiply {
     value {{parent.TimeBlur8.divisions}}
     name Multiply6
     xpos 426
     ypos -436
    }
    Merge2 {
     inputs 2
     operation from
     name Merge6
     xpos 426
     ypos -369
    }
set N1432efa0 [stack 0]
    Output {
     name Output1
     xpos 426
     ypos -221
    }
push $N1432efa0
push $N1432efa0
    Viewer {
     inputs 2
     frame_range 1-100
     name Viewer1
     xpos 675
     ypos -246
    }
   end_group
   NoTimeBlur {
    name NoTimeBlur13
    xpos -130
    ypos -782
   }
   Dot {
    name Dot79
    xpos -96
    ypos -463
   }
set N143cddd0 [stack 0]
   Dot {
    name Dot81
    xpos -249
    ypos -463
   }
set N143d2e90 [stack 0]
   Shuffle2 {
    fromInput1 {{0} B}
    fromInput2 {{0} B}
    mappings "4 rgba.blue 0 2 rgba.red 0 0 rgba.blue 0 2 rgba.green 0 1 rgba.blue 0 2 rgba.blue 0 2 black -1 -1 rgba.alpha 0 3"
    name Shuffle40
    label TOP
    xpos -283
    ypos -431
   }
   Multiply {
    value {{math_matrix.result_y_smoke(parent.CTimeOffset.ref)}}
    name Angle_reveal_top1
    label TOP
    xpos -283
    ypos -393
   }
   Transform {
    scale {{0.05+(0.05*(((parent.DecimalTimeOffset13.decimal-0.5)*2)*ScaleVariationSmoke))}}
    center {{root.width/2 x1015 2304} {root.height/2}}
    shutteroffset centred
    name Transform44
    xpos -283
    ypos -74
   }
   Card3D {
    inputs 3
    rot_order ZYX
    translate {0 0 0}
    rotate {90 0 0}
    shutteroffset centred
    name cCard3D25
    tile_color 0x7b1d1dff
    xpos -283
    ypos 89
    addUserKnob {20 User l parent}
    addUserKnob {22 python_button l "set parent" t "select parent node, and press this button to set the selected node as parent" +INVISIBLE T "n = nuke.selectedNode()\['name'].getValue()\nnuke.thisNode()\['string'].setValue(n)" +STARTLINE}
    addUserKnob {1 string l parent +INVISIBLE}
    string null
    addUserKnob {3 ref l "ref frame"}
    ref 1015
   }
   Transform {
    translate {{"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].translate.x(ref)\}]"} {"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].translate.y(ref)\}]"}}
    rotate {{"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].rotate-\[value parent_gun].rotate(ref)\}]"}}
    scale {{"\[if \{\[value parent_gun]==\"null\"\} \{return 1\} \{return 1+(\[value parent_gun].scale-\[value parent_gun].scale(ref))\}]"}}
    center {{"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].center.x(ref)\}]"} {"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].center.y(ref)\}]"}}
    name Transform_GUNMatchMove37
    xpos -283
    ypos 201
    addUserKnob {20 User l parent}
    addUserKnob {3 ref}
    ref {{parent.CTimeOffset.ref}}
   }
   NoTimeBlur {
    name NoTimeBlur3
    xpos -283
    ypos 259
   }
   Transform {
    translate {{"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].translate.x-\[value parent_env].translate.x(ref)\}]"} {"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].translate.y-\[value parent_env].translate.y(ref)\}]"}}
    rotate {{"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].rotate-\[value parent_env].rotate(ref)\}]"}}
    scale {{"\[if \{\[value parent_gun]==\"null\"\} \{return 1\} \{return 1+(\[value parent_env].scale-\[value parent_env].scale(ref))\}]"}}
    center {{"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].center.x(ref)\}]"} {"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].center.y(ref)\}]"}}
    motionblur 0.2
    shutter {{SmokeMB*0.5}}
    shutteroffset centred
    name Transform_ENVMatchMove37
    label "\n"
    xpos -283
    ypos 333
    addUserKnob {20 User l parent}
    addUserKnob {3 ref}
    ref {{parent.CTimeOffset.ref}}
   }
   Transform {
    translate {{"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return -((root.width/2)-(\[value parent_gun].center.x(1)+\[value parent_gun].translate.x(1)))\}]"} {"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return -((root.height/2)-(\[value parent_gun].center.y(1)+\[value parent_gun].translate.y(1)))\}]"}}
    name Transform_GUNMatchMove6
    label "alignment correction"
    xpos -283
    ypos 422
    addUserKnob {20 User l parent}
    addUserKnob {22 python_button l "set parent" t "select parent node, and press this button to set the selected node as parent" T "n = nuke.selectedNode()\['name'].getValue()\nnuke.thisNode()\['string'].setValue(n)" +STARTLINE}
    addUserKnob {1 string l parent}
    string Transform_MatchMove10
    addUserKnob {3 ref +INVISIBLE}
    ref {{parent.cCard3D_8.ref}}
   }
   Shuffle2 {
    fromInput1 {{0} B}
    fromInput2 {{0} B}
    mappings "4 rgba.red 0 0 rgba.red 0 0 rgba.green 0 1 rgba.green 0 1 rgba.blue 0 2 rgba.blue 0 2 rgba.blue 0 2 rgba.alpha 0 3"
    name Shuffle2
    xpos -283
    ypos 473
   }
   Remove {
    operation keep
    channels rgba
    name Remove1
    xpos -283
    ypos 512
   }
push 0
   Switch {
    inputs 2
    which {{parent.Angle_reveal_top1.value>0.001}}
    name Switch1
    xpos -283
    ypos 660
   }
   Dot {
    name Dot82
    xpos -249
    ypos 705
   }
push 0
push $N142ada90
push 0
push $N143d2e90
   Dot {
    name Dot80
    xpos -402
    ypos -463
   }
   Shuffle2 {
    fromInput1 {{0} B}
    fromInput2 {{0} B}
    mappings "4 rgba.red 0 0 rgba.red 0 0 rgba.red 0 0 rgba.green 0 1 rgba.red 0 0 rgba.blue 0 2 black -1 -1 rgba.alpha 0 3"
    name Shuffle41
    label FRONT
    xpos -436
    ypos -431
   }
   Multiply {
    value {{math_matrix.result_x_smoke(parent.CTimeOffset.ref)}}
    name Angle_reveal_front1
    label FRONT
    xpos -436
    ypos -393
   }
   Transform {
    scale {{0.05+(0.05*(((parent.DecimalTimeOffset13.decimal-0.5)*2)*ScaleVariationSmoke))}}
    center {{root.width/2 x1015 2304} {root.height/2}}
    shutteroffset centred
    name Transform45
    xpos -436
    ypos -73
   }
   Card3D {
    inputs 3
    rot_order ZYX
    translate {0 0 0}
    rotate {0 90 0}
    shutteroffset centred
    name cCard3D26
    tile_color 0x7b1d1dff
    xpos -436
    ypos 93
    addUserKnob {20 User l parent}
    addUserKnob {22 python_button l "set parent" t "select parent node, and press this button to set the selected node as parent" +INVISIBLE T "n = nuke.selectedNode()\['name'].getValue()\nnuke.thisNode()\['string'].setValue(n)" +STARTLINE}
    addUserKnob {1 string l parent +INVISIBLE}
    string null
    addUserKnob {3 ref l "ref frame"}
    ref 1015
   }
   Transform {
    translate {{"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].translate.x(ref)\}]"} {"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].translate.y(ref)\}]"}}
    rotate {{"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].rotate-\[value parent_gun].rotate(ref)\}]"}}
    scale {{"\[if \{\[value parent_gun]==\"null\"\} \{return 1\} \{return 1+(\[value parent_gun].scale-\[value parent_gun].scale(ref))\}]"}}
    center {{"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].center.x(ref)\}]"} {"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].center.y(ref)\}]"}}
    name Transform_GUNMatchMove38
    label "\n"
    xpos -436
    ypos 203
    addUserKnob {20 User l parent}
    addUserKnob {3 ref}
    ref {{parent.CTimeOffset.ref}}
   }
   NoTimeBlur {
    name NoTimeBlur2
    xpos -436
    ypos 259
   }
   Transform {
    translate {{"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].translate.x-\[value parent_env].translate.x(ref)\}]"} {"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].translate.y-\[value parent_env].translate.y(ref)\}]"}}
    rotate {{"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].rotate-\[value parent_env].rotate(ref)\}]"}}
    scale {{"\[if \{\[value parent_gun]==\"null\"\} \{return 1\} \{return 1+(\[value parent_env].scale-\[value parent_env].scale(ref))\}]"}}
    center {{"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].center.x(ref)\}]"} {"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].center.y(ref)\}]"}}
    motionblur 0.2
    shutter {{SmokeMB*0.5}}
    shutteroffset centred
    name Transform_ENVMatchMove38
    xpos -436
    ypos 332
    addUserKnob {20 User l parent}
    addUserKnob {3 ref}
    ref {{parent.CTimeOffset.ref}}
   }
   Transform {
    translate {{"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return -((root.width/2)-(\[value parent_gun].center.x(1)+\[value parent_gun].translate.x(1)))\}]"} {"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return -((root.height/2)-(\[value parent_gun].center.y(1)+\[value parent_gun].translate.y(1)))\}]"}}
    name Transform_GUNMatchMove7
    label "alignment correction"
    xpos -436
    ypos 421
    addUserKnob {20 User l parent}
    addUserKnob {22 python_button l "set parent" t "select parent node, and press this button to set the selected node as parent" T "n = nuke.selectedNode()\['name'].getValue()\nnuke.thisNode()\['string'].setValue(n)" +STARTLINE}
    addUserKnob {1 string l parent}
    string Transform_MatchMove10
    addUserKnob {3 ref +INVISIBLE}
    ref {{parent.cCard3D_8.ref}}
   }
   Shuffle2 {
    fromInput1 {{0} B}
    fromInput2 {{0} B}
    mappings "4 rgba.red 0 0 rgba.red 0 0 rgba.green 0 1 rgba.green 0 1 rgba.blue 0 2 rgba.blue 0 2 rgba.blue 0 2 rgba.alpha 0 3"
    name Shuffle3
    xpos -436
    ypos 472
   }
   Remove {
    operation keep
    channels rgba
    name Remove2
    xpos -436
    ypos 511
   }
push 0
   Switch {
    inputs 2
    which {{parent.Angle_reveal_front1.value>0.001}}
    name Switch2
    xpos -436
    ypos 660
   }
   Dot {
    name Dot83
    xpos -402
    ypos 735
   }
push $N143cddd0
   Shuffle2 {
    fromInput1 {{0} B}
    fromInput2 {{0} B}
    mappings "4 rgba.green 0 1 rgba.red 0 0 rgba.green 0 1 rgba.green 0 1 rgba.green 0 1 rgba.blue 0 2 black -1 -1 rgba.alpha 0 3"
    name Shuffle42
    label SIDE
    xpos -130
    ypos -425
   }
   Multiply {
    value {{math_matrix.result_z_smoke(parent.CTimeOffset.ref)}}
    name Angle_reveal_side1
    label SIDE
    xpos -130
    ypos -387
   }
   Transform {
    scale {{0.05+(0.05*(((parent.DecimalTimeOffset13.decimal-0.5)*2)*ScaleVariationSmoke))}}
    center {{root.width/2 x1015 2304} {root.height/2}}
    shutteroffset centred
    name Transform46
    xpos -130
    ypos -77
   }
   Card3D {
    translate {{"\[if \{\[exists  parent.parent.parent.input0]\} \{return \[value \[topnode parent.parent.parent.input0].name].translate.x(ref)\} \{return 0\}]"} {"\[if \{\[exists  parent.parent.parent.input0]\} \{return \[value \[topnode parent.parent.parent.input0].name].translate.y(ref)\} \{return 0\}]"} {"\[if \{\[exists  parent.parent.parent.input0]\} \{return \[value \[topnode parent.parent.parent.input0].name].translate.z(ref)\} \{return -1\}]"}}
    rotate {{"\[if \{\[exists  parent.parent.parent.input0]\} \{return \[value \[topnode parent.parent.parent.input0].name].rotate.x(ref)\} \{return 0\}]"} {"\[if \{\[exists  parent.parent.parent.input0]\} \{return \[value \[topnode parent.parent.parent.input0].name].rotate.y(ref)\} \{return 0\}]"} {"\[if \{\[exists  parent.parent.parent.input0]\} \{return \[value \[topnode parent.parent.parent.input0].name].rotate.z(ref)\} \{return 0\}]"}}
    scaling {{"\[if \{\[exists  parent.parent.parent.input0]\} \{return \[value \[topnode parent.parent.parent.input0].name].scaling.x(ref)\} \{return 1\}]"} {"\[if \{\[exists  parent.parent.parent.input0]\} \{return \[value \[topnode parent.parent.parent.input0].name].scaling.y(ref)\} \{return 1\}]"} {"\[if \{\[exists  parent.parent.parent.input0]\} \{return \[value \[topnode parent.parent.parent.input0].name].scaling.z(ref)\} \{return 1\}]"}}
    uniform_scale {{"\[if \{\[exists  parent.parent.parent.input0]\} \{return (\[value \[topnode parent.parent.parent.input0].name].uniform_scale(ref)*25)\} \{return 25\}]"}}
    shutteroffset centred
    name cCard3D_1
    tile_color 0x7b1d1dff
    label "ref frame: \[value ref]"
    selected true
    xpos -130
    ypos 80
    addUserKnob {20 User l parent}
    addUserKnob {22 python_button l "set parent" t "select parent node, and press this button to set the selected node as parent" +INVISIBLE T "n = nuke.selectedNode()\['name'].getValue()\nnuke.thisNode()\['string'].setValue(n)" +STARTLINE}
    addUserKnob {1 string l parent +INVISIBLE}
    string null
    addUserKnob {3 id l "id number"}
    id {{parent.CTimeOffset.shotnmbr}}
    addUserKnob {3 ref l "ref frame"}
    ref {{parent.CTimeOffset.ref}}
   }
   Transform {
    translate {{"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].translate.x(ref)\}]"} {"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].translate.y(ref)\}]"}}
    rotate {{"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].rotate-\[value parent_gun].rotate(ref)\}]"}}
    scale {{"\[if \{\[value parent_gun]==\"null\"\} \{return 1\} \{return 1+(\[value parent_gun].scale-\[value parent_gun].scale(ref))\}]"}}
    center {{"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].center.x(ref)\}]"} {"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].center.y(ref)\}]"}}
    name Transform_GUNMatchMove39
    label "\n"
    xpos -130
    ypos 201
    addUserKnob {20 User l parent}
    addUserKnob {3 ref}
    ref {{parent.CTimeOffset.ref}}
   }
   NoTimeBlur {
    name NoTimeBlur4
    xpos -130
    ypos 258
   }
   Transform {
    translate {{"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].translate.x-\[value parent_env].translate.x(ref)\}]"} {"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].translate.y-\[value parent_env].translate.y(ref)\}]"}}
    rotate {{"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].rotate-\[value parent_env].rotate(ref)\}]"}}
    scale {{"\[if \{\[value parent_gun]==\"null\"\} \{return 1\} \{return 1+(\[value parent_env].scale-\[value parent_env].scale(ref))\}]"}}
    center {{"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].center.x(ref)\}]"} {"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].center.y(ref)\}]"}}
    motionblur 0.2
    shutter {{SmokeMB*0.5}}
    shutteroffset centred
    name Transform_ENVMatchMove39
    xpos -130
    ypos 336
    addUserKnob {20 User l parent}
    addUserKnob {3 ref}
    ref {{parent.CTimeOffset.ref}}
   }
   Transform {
    translate {{"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return -((root.width/2)-(\[value parent_gun].center.x(1)+\[value parent_gun].translate.x(1)))\}]"} {"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return -((root.height/2)-(\[value parent_gun].center.y(1)+\[value parent_gun].translate.y(1)))\}]"}}
    name Transform_GUNMatchMove5
    label "alignment correction"
    xpos -130
    ypos 417
    addUserKnob {20 User l parent}
    addUserKnob {22 python_button l "set parent" t "select parent node, and press this button to set the selected node as parent" T "n = nuke.selectedNode()\['name'].getValue()\nnuke.thisNode()\['string'].setValue(n)" +STARTLINE}
    addUserKnob {1 string l parent}
    string Transform_MatchMove10
    addUserKnob {3 ref +INVISIBLE}
    ref {{parent.cCard3D_8.ref}}
   }
   Shuffle2 {
    fromInput1 {{0} B}
    fromInput2 {{0} B}
    mappings "4 rgba.red 0 0 rgba.red 0 0 rgba.green 0 1 rgba.green 0 1 rgba.blue 0 2 rgba.blue 0 2 rgba.blue 0 2 rgba.alpha 0 3"
    name Shuffle1
    xpos -130
    ypos 465
   }
   Remove {
    operation keep
    channels rgba
    name Remove39
    xpos -130
    ypos 504
   }
push 0
   Switch {
    inputs 2
    which {{parent.Angle_reveal_side1.value>0.001}}
    name Switch3
    xpos -130
    ypos 658
   }
   Merge2 {
    inputs 3+1
    operation max
    name Merge28
    xpos -130
    ypos 731
   }
   Merge2 {
    inputs 2
    operation plus
    bbox intersection
    name Merge29
    xpos -130
    ypos 983
   }
push 0
   Switch {
    inputs 2
    which {{"shot\[value count]==0?0:frame>=shot\[value count]"}}
    name cSwitch_13
    xpos -130
    ypos 1065
    addUserKnob {20 User}
    addUserKnob {3 count}
    count {{parent.CTimeOffset.shotnmbr}}
   }
   Output {
    name Output1
    xpos -130
    ypos 1323
   }
  end_group
push $N14271b20
  Dot {
   name Dot2
   xpos -160
   ypos -711
  }
set N145bae90 [stack 0]
  Group {
   name gunshot2
   label "shot: \[value shotcount]\non frame: \[value shotstart]\n"
   xpos -194
   ypos -357
   addUserKnob {20 User}
   addUserKnob {3 shotcount l shot}
   shotcount 2
   addUserKnob {3 shotstart l frame +INVISIBLE}
   shotstart {{"shotcount==0 ? 0 : shot\[value shotcount]-1" i}}
  }
   BackdropNode {
    inputs 0
    name BackdropNode19
    knobChanged "try:\n    listenedKnobs = \['text', 'position', 'name']\n    node = nuke.thisNode()\n    name = node.knob('name').value()\n    text = node.knob('text').value()\n    position = node.knob('position').value()\n    position = \"<\" + position + \">\"\n    label = node.knob('label').value()\n    \n    if nuke.thisKnob().name() in listenedKnobs:\n        if text == \"\":\n            if node.knob('position').value() == \"left\":\n                node.knob('label').setValue()\n            else:\n                node.knob('label').setValue(position + name)\n        else:\n            if node.knob('position').value() == \"left\":\n                node.knob('label').setValue(text)\n            else:\n                node.knob('label').setValue(position + text)\n                \n    elif nuke.thisKnob().name() == 'font_size':\n        fontSize = node.knob('font_size').value()\n        node.knob('note_font_size').setValue(fontSize)\nexcept:\n    pass"
    tile_color 0x232323ff
    label "<Left><h2> Gunshot"
    note_font_size 31.5
    xpos -693
    ypos -554
    bdwidth 876
    bdheight 1682
    addUserKnob {20 F_VFX l BackdropNode}
    addUserKnob {43 text l Text}
    text "<h2> Gunshot"
    addUserKnob {7 font_size l "Font Size" R 10 100}
    font_size 31.5
    addUserKnob {4 position l "" -STARTLINE M {Left Center}}
    addUserKnob {26 S01 l " " T " "}
    addUserKnob {22 grow l " <img src=\"F_scalep.png\">" -STARTLINE T "n=nuke.thisNode()\n\ndef grow(node=None,step=50):\n    try:\n        if not node:\n            n=nuke.selectedNode()\n        else:\n            n=node\n            n\['xpos'].setValue(n\['xpos'].getValue()-step)\n            n\['ypos'].setValue(n\['ypos'].getValue()-step)\n            n\['bdwidth'].setValue(n\['bdwidth'].getValue()+step*2)\n            n\['bdheight'].setValue(n\['bdheight'].getValue()+step*2)\n    except:\n        pass\ngrow(n,50)"}
    addUserKnob {22 shrink l " <img src=\"F_scalem.png\">" -STARTLINE T "n=nuke.thisNode()\n\ndef shrink(node=None,step=50):\n    try:\n        if not node:\n            n=nuke.selectedNode()\n        else:\n            n=node\n            n\['xpos'].setValue(n\['xpos'].getValue()+step)\n            n\['ypos'].setValue(n\['ypos'].getValue()+step)\n            n\['bdwidth'].setValue(n\['bdwidth'].getValue()-step*2)\n            n\['bdheight'].setValue(n\['bdheight'].getValue()-step*2)\n    except:\n        pass\nshrink(n,50)"}
    addUserKnob {22 colorandom l " <img src=\"ColorBars.png\">" -STARTLINE T "import colorsys, random\nn=nuke.thisNode()\nR,G,B= colorsys.hsv_to_rgb(random.random(),.1+random.random()*.15,.15+random.random()*.15)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ) )"}
    addUserKnob {22 darkgrey l "<font color=\"#232323\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.0, 0.0, 0.14]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 lightgrey l "<font color=\"#383838\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.0, 0.0, 0.22]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 red l "<font color=\"#8c3838\" size=6>■</font>" T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.0, 0.6, 0.55]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n" +STARTLINE}
    addUserKnob {22 orange l "<font color=\"#b28e59\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.1, 0.5, 0.7]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 yellow l "<font color=\"#ccc766\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.16, 0.5, 0.8]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 green l "<font color=\"#5d995b\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.33, 0.4, 0.6]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 cyan l "<font color=\"#72998f\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.46, 0.25, 0.6]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 blue l "<font color=\"#59687f\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.6, 0.3, 0.5]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 darkblue l "<font color=\"#63628c\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.67, 0.3, 0.55]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 magenta l "<font color=\"#927a99\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.8, 0.2, 0.6]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 pink l "<font color=\"#997a89\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.92, 0.2, 0.6]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {26 S02 l " " T " "}
    addUserKnob {26 Ftools l "" +STARTLINE T "<font color=\"#1C1C1C\"> v1.2 - Franklin VFX - 2018"}
   }
   BackdropNode {
    inputs 0
    name BackdropNode2
    knobChanged "try:\n    listenedKnobs = \['text', 'position', 'name']\n    node = nuke.thisNode()\n    name = node.knob('name').value()\n    text = node.knob('text').value()\n    position = node.knob('position').value()\n    position = \"<\" + position + \">\"\n    label = node.knob('label').value()\n    \n    if nuke.thisKnob().name() in listenedKnobs:\n        if text == \"\":\n            if node.knob('position').value() == \"left\":\n                node.knob('label').setValue()\n            else:\n                node.knob('label').setValue(position + name)\n        else:\n            if node.knob('position').value() == \"left\":\n                node.knob('label').setValue(text)\n            else:\n                node.knob('label').setValue(position + text)\n                \n    elif nuke.thisKnob().name() == 'font_size':\n        fontSize = node.knob('font_size').value()\n        node.knob('note_font_size').setValue(fontSize)\nexcept:\n    pass"
    tile_color 0x927a99ff
    note_font_size 50
    xpos -473
    ypos -221
    bdwidth 435
    bdheight 786
    z_order 1
    addUserKnob {20 F_VFX l BackdropNode}
    addUserKnob {43 text l Text}
    addUserKnob {7 font_size l "Font Size" R 10 100}
    font_size 50
    addUserKnob {4 position l "" -STARTLINE M {Left Center}}
    addUserKnob {26 S01 l " " T " "}
    addUserKnob {22 grow l " <img src=\"F_scalep.png\">" -STARTLINE T "n=nuke.thisNode()\n\ndef grow(node=None,step=50):\n    try:\n        if not node:\n            n=nuke.selectedNode()\n        else:\n            n=node\n            n\['xpos'].setValue(n\['xpos'].getValue()-step)\n            n\['ypos'].setValue(n\['ypos'].getValue()-step)\n            n\['bdwidth'].setValue(n\['bdwidth'].getValue()+step*2)\n            n\['bdheight'].setValue(n\['bdheight'].getValue()+step*2)\n    except:\n        pass\ngrow(n,50)"}
    addUserKnob {22 shrink l " <img src=\"F_scalem.png\">" -STARTLINE T "n=nuke.thisNode()\n\ndef shrink(node=None,step=50):\n    try:\n        if not node:\n            n=nuke.selectedNode()\n        else:\n            n=node\n            n\['xpos'].setValue(n\['xpos'].getValue()+step)\n            n\['ypos'].setValue(n\['ypos'].getValue()+step)\n            n\['bdwidth'].setValue(n\['bdwidth'].getValue()-step*2)\n            n\['bdheight'].setValue(n\['bdheight'].getValue()-step*2)\n    except:\n        pass\nshrink(n,50)"}
    addUserKnob {22 colorandom l " <img src=\"ColorBars.png\">" -STARTLINE T "import colorsys, random\nn=nuke.thisNode()\nR,G,B= colorsys.hsv_to_rgb(random.random(),.1+random.random()*.15,.15+random.random()*.15)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ) )"}
    addUserKnob {22 darkgrey l "<font color=\"#232323\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.0, 0.0, 0.14]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 lightgrey l "<font color=\"#383838\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.0, 0.0, 0.22]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 red l "<font color=\"#8c3838\" size=6>■</font>" T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.0, 0.6, 0.55]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n" +STARTLINE}
    addUserKnob {22 orange l "<font color=\"#b28e59\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.1, 0.5, 0.7]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 yellow l "<font color=\"#ccc766\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.16, 0.5, 0.8]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 green l "<font color=\"#5d995b\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.33, 0.4, 0.6]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 cyan l "<font color=\"#72998f\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.46, 0.25, 0.6]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 blue l "<font color=\"#59687f\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.6, 0.3, 0.5]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 darkblue l "<font color=\"#63628c\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.67, 0.3, 0.55]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 magenta l "<font color=\"#927a99\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.8, 0.2, 0.6]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 pink l "<font color=\"#997a89\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.92, 0.2, 0.6]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {26 S02 l " " T " "}
    addUserKnob {26 Ftools l "" +STARTLINE T "<font color=\"#1C1C1C\"> v1.2 - Franklin VFX - 2018"}
   }
   Constant {
    inputs 0
    channels rgb
    name Constant13
    xpos -643
    ypos 714
   }
   AdjBBox {
    numpixels {{size_bbox}}
    name AdjBBox13
    xpos -643
    ypos 849
   }
   Dot {
    name Dot78
    xpos -609
    ypos 987
   }
   Axis3 {
    inputs 0
    useMatrix true
    matrix {
        {{parent.cCard3D_1.matrix} {parent.cCard3D_1.matrix} {parent.cCard3D_1.matrix} {parent.cCard3D_1.matrix}}
        {{parent.cCard3D_1.matrix} {parent.cCard3D_1.matrix} {parent.cCard3D_1.matrix} {parent.cCard3D_1.matrix}}
        {{parent.cCard3D_1.matrix} {parent.cCard3D_1.matrix} {parent.cCard3D_1.matrix} {parent.cCard3D_1.matrix}}
        {{parent.cCard3D_1.matrix} {parent.cCard3D_1.matrix} {parent.cCard3D_1.matrix} {parent.cCard3D_1.matrix}}
      }
    name Axis14
    xpos -203
    ypos -12
   }
set N145f68e0 [stack 0]
push 0
   Input {
    inputs 0
    name Input1
    xpos -130
    ypos -1242
   }
   TimeOffset {
    time_offset {{"shotnmbr==0 ? 0 : shot\[value shotnmbr]-1"}}
    time ""
    name CTimeOffset
    label "shot: \[value shotnmbr]\non frame \[value time_offset]"
    xpos -130
    ypos -927
    addUserKnob {20 User}
    addUserKnob {3 shotnmbr l "shot "}
    shotnmbr {{shotcount}}
    addUserKnob {3 ref}
    ref {{time_offset+1}}
   }
   Group {
    name DecimalTimeOffset13
    tile_color 0xafa35dff
    label "random asset"
    note_font "Bitstream Vera Sans Bold"
    xpos -130
    ypos -844
    addUserKnob {20 User}
    addUserKnob {7 decimal l "time offset (decimal)"}
    decimal {{random(shotcount*seed)}}
    addUserKnob {26 ""}
    addUserKnob {26 _1 l "" +STARTLINE T "Chris Fryer | 2020\nupdated by Yorben Otto | 2024"}
   }
    Input {
     inputs 0
     name Input1
     xpos 426
     ypos -793
    }
    TimeOffset {
     time_offset {{(-floor(parent.decimal))*(DecimalTimeOffset13.decimal<0)}}
     time ""
     name TimeOffset1
     xpos 426
     ypos -675
    }
    Dot {
     name Dot6
     xpos 460
     ypos -635
    }
set N14637ab0 [stack 0]
    Dot {
     name Dot5
     xpos 350
     ypos -635
    }
    Dot {
     name Dot7
     xpos 350
     ypos -365
    }
push $N14637ab0
    Dot {
     name Dot1
     xpos 572
     ypos -635
    }
    TimeBlur {
     divisions 2
     shutter {{(parent.decimal-(floor(parent.decimal)))*2}}
     shutteroffset start
     shuttercustomoffset 0
     name TimeBlur1
     xpos 538
     ypos -558
    }
    Dot {
     name Dot2
     xpos 572
     ypos -490
    }
push $N14637ab0
    TimeBlur {
     divisions 2
     shutter {{parent.decimal*2}}
     shutteroffset start
     shuttercustomoffset 0
     name TimeBlur8
     xpos 426
     ypos -556
    }
    Switch {
     inputs 2
     which {{parent.decimal<0}}
     name Switch1
     xpos 426
     ypos -494
    }
    Multiply {
     value {{parent.TimeBlur8.divisions}}
     name Multiply6
     xpos 426
     ypos -436
    }
    Merge2 {
     inputs 2
     operation from
     name Merge6
     xpos 426
     ypos -369
    }
set N14679a80 [stack 0]
    Output {
     name Output1
     xpos 426
     ypos -221
    }
push $N14679a80
push $N14679a80
    Viewer {
     inputs 2
     frame_range 1-100
     name Viewer1
     xpos 675
     ypos -246
    }
   end_group
   NoTimeBlur {
    name NoTimeBlur13
    xpos -130
    ypos -782
   }
   Dot {
    name Dot79
    xpos -96
    ypos -463
   }
set N14718870 [stack 0]
   Dot {
    name Dot81
    xpos -249
    ypos -463
   }
set N1471d930 [stack 0]
   Shuffle2 {
    fromInput1 {{0} B}
    fromInput2 {{0} B}
    mappings "4 rgba.blue 0 2 rgba.red 0 0 rgba.blue 0 2 rgba.green 0 1 rgba.blue 0 2 rgba.blue 0 2 black -1 -1 rgba.alpha 0 3"
    name Shuffle40
    label TOP
    xpos -283
    ypos -431
   }
   Multiply {
    value {{math_matrix.result_y_smoke(parent.CTimeOffset.ref)}}
    name Angle_reveal_top1
    label TOP
    xpos -283
    ypos -393
   }
   Transform {
    scale {{0.05+(0.05*(((parent.DecimalTimeOffset13.decimal-0.5)*2)*ScaleVariationSmoke))}}
    center {{root.width/2 x1015 2304} {root.height/2}}
    shutteroffset centred
    name Transform44
    xpos -283
    ypos -74
   }
   Card3D {
    inputs 3
    rot_order ZYX
    translate {0 0 0}
    rotate {90 0 0}
    shutteroffset centred
    name cCard3D25
    tile_color 0x7b1d1dff
    xpos -283
    ypos 89
    addUserKnob {20 User l parent}
    addUserKnob {22 python_button l "set parent" t "select parent node, and press this button to set the selected node as parent" +INVISIBLE T "n = nuke.selectedNode()\['name'].getValue()\nnuke.thisNode()\['string'].setValue(n)" +STARTLINE}
    addUserKnob {1 string l parent +INVISIBLE}
    string null
    addUserKnob {3 ref l "ref frame"}
    ref 1015
   }
   Transform {
    translate {{"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].translate.x(ref)\}]"} {"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].translate.y(ref)\}]"}}
    rotate {{"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].rotate-\[value parent_gun].rotate(ref)\}]"}}
    scale {{"\[if \{\[value parent_gun]==\"null\"\} \{return 1\} \{return 1+(\[value parent_gun].scale-\[value parent_gun].scale(ref))\}]"}}
    center {{"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].center.x(ref)\}]"} {"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].center.y(ref)\}]"}}
    name Transform_GUNMatchMove37
    xpos -283
    ypos 201
    addUserKnob {20 User l parent}
    addUserKnob {3 ref}
    ref {{parent.CTimeOffset.ref}}
   }
   NoTimeBlur {
    name NoTimeBlur3
    xpos -283
    ypos 259
   }
   Transform {
    translate {{"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].translate.x-\[value parent_env].translate.x(ref)\}]"} {"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].translate.y-\[value parent_env].translate.y(ref)\}]"}}
    rotate {{"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].rotate-\[value parent_env].rotate(ref)\}]"}}
    scale {{"\[if \{\[value parent_gun]==\"null\"\} \{return 1\} \{return 1+(\[value parent_env].scale-\[value parent_env].scale(ref))\}]"}}
    center {{"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].center.x(ref)\}]"} {"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].center.y(ref)\}]"}}
    motionblur 0.2
    shutter {{SmokeMB*0.5}}
    shutteroffset centred
    name Transform_ENVMatchMove37
    label "\n"
    xpos -283
    ypos 333
    addUserKnob {20 User l parent}
    addUserKnob {3 ref}
    ref {{parent.CTimeOffset.ref}}
   }
   Transform {
    translate {{"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return -((root.width/2)-(\[value parent_gun].center.x(1)+\[value parent_gun].translate.x(1)))\}]"} {"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return -((root.height/2)-(\[value parent_gun].center.y(1)+\[value parent_gun].translate.y(1)))\}]"}}
    name Transform_GUNMatchMove6
    label "alignment correction"
    xpos -283
    ypos 422
    addUserKnob {20 User l parent}
    addUserKnob {22 python_button l "set parent" t "select parent node, and press this button to set the selected node as parent" T "n = nuke.selectedNode()\['name'].getValue()\nnuke.thisNode()\['string'].setValue(n)" +STARTLINE}
    addUserKnob {1 string l parent}
    string Transform_MatchMove10
    addUserKnob {3 ref +INVISIBLE}
    ref {{parent.cCard3D_8.ref}}
   }
   Shuffle2 {
    fromInput1 {{0} B}
    fromInput2 {{0} B}
    mappings "4 rgba.red 0 0 rgba.red 0 0 rgba.green 0 1 rgba.green 0 1 rgba.blue 0 2 rgba.blue 0 2 rgba.blue 0 2 rgba.alpha 0 3"
    name Shuffle2
    xpos -283
    ypos 473
   }
   Remove {
    operation keep
    channels rgba
    name Remove1
    xpos -283
    ypos 512
   }
push 0
   Switch {
    inputs 2
    which {{parent.Angle_reveal_top1.value>0.001}}
    name Switch1
    xpos -283
    ypos 660
   }
   Dot {
    name Dot82
    xpos -249
    ypos 705
   }
push 0
push $N145f68e0
push 0
push $N1471d930
   Dot {
    name Dot80
    xpos -402
    ypos -463
   }
   Shuffle2 {
    fromInput1 {{0} B}
    fromInput2 {{0} B}
    mappings "4 rgba.red 0 0 rgba.red 0 0 rgba.red 0 0 rgba.green 0 1 rgba.red 0 0 rgba.blue 0 2 black -1 -1 rgba.alpha 0 3"
    name Shuffle41
    label FRONT
    xpos -436
    ypos -431
   }
   Multiply {
    value {{math_matrix.result_x_smoke(parent.CTimeOffset.ref)}}
    name Angle_reveal_front1
    label FRONT
    xpos -436
    ypos -393
   }
   Transform {
    scale {{0.05+(0.05*(((parent.DecimalTimeOffset13.decimal-0.5)*2)*ScaleVariationSmoke))}}
    center {{root.width/2 x1015 2304} {root.height/2}}
    shutteroffset centred
    name Transform45
    xpos -436
    ypos -73
   }
   Card3D {
    inputs 3
    rot_order ZYX
    translate {0 0 0}
    rotate {0 90 0}
    shutteroffset centred
    name cCard3D26
    tile_color 0x7b1d1dff
    xpos -436
    ypos 93
    addUserKnob {20 User l parent}
    addUserKnob {22 python_button l "set parent" t "select parent node, and press this button to set the selected node as parent" +INVISIBLE T "n = nuke.selectedNode()\['name'].getValue()\nnuke.thisNode()\['string'].setValue(n)" +STARTLINE}
    addUserKnob {1 string l parent +INVISIBLE}
    string null
    addUserKnob {3 ref l "ref frame"}
    ref 1015
   }
   Transform {
    translate {{"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].translate.x(ref)\}]"} {"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].translate.y(ref)\}]"}}
    rotate {{"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].rotate-\[value parent_gun].rotate(ref)\}]"}}
    scale {{"\[if \{\[value parent_gun]==\"null\"\} \{return 1\} \{return 1+(\[value parent_gun].scale-\[value parent_gun].scale(ref))\}]"}}
    center {{"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].center.x(ref)\}]"} {"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].center.y(ref)\}]"}}
    name Transform_GUNMatchMove38
    label "\n"
    xpos -436
    ypos 203
    addUserKnob {20 User l parent}
    addUserKnob {3 ref}
    ref {{parent.CTimeOffset.ref}}
   }
   NoTimeBlur {
    name NoTimeBlur2
    xpos -436
    ypos 259
   }
   Transform {
    translate {{"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].translate.x-\[value parent_env].translate.x(ref)\}]"} {"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].translate.y-\[value parent_env].translate.y(ref)\}]"}}
    rotate {{"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].rotate-\[value parent_env].rotate(ref)\}]"}}
    scale {{"\[if \{\[value parent_gun]==\"null\"\} \{return 1\} \{return 1+(\[value parent_env].scale-\[value parent_env].scale(ref))\}]"}}
    center {{"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].center.x(ref)\}]"} {"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].center.y(ref)\}]"}}
    motionblur 0.2
    shutter {{SmokeMB*0.5}}
    shutteroffset centred
    name Transform_ENVMatchMove38
    xpos -436
    ypos 332
    addUserKnob {20 User l parent}
    addUserKnob {3 ref}
    ref {{parent.CTimeOffset.ref}}
   }
   Transform {
    translate {{"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return -((root.width/2)-(\[value parent_gun].center.x(1)+\[value parent_gun].translate.x(1)))\}]"} {"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return -((root.height/2)-(\[value parent_gun].center.y(1)+\[value parent_gun].translate.y(1)))\}]"}}
    name Transform_GUNMatchMove7
    label "alignment correction"
    xpos -436
    ypos 421
    addUserKnob {20 User l parent}
    addUserKnob {22 python_button l "set parent" t "select parent node, and press this button to set the selected node as parent" T "n = nuke.selectedNode()\['name'].getValue()\nnuke.thisNode()\['string'].setValue(n)" +STARTLINE}
    addUserKnob {1 string l parent}
    string Transform_MatchMove10
    addUserKnob {3 ref +INVISIBLE}
    ref {{parent.cCard3D_8.ref}}
   }
   Shuffle2 {
    fromInput1 {{0} B}
    fromInput2 {{0} B}
    mappings "4 rgba.red 0 0 rgba.red 0 0 rgba.green 0 1 rgba.green 0 1 rgba.blue 0 2 rgba.blue 0 2 rgba.blue 0 2 rgba.alpha 0 3"
    name Shuffle3
    xpos -436
    ypos 472
   }
   Remove {
    operation keep
    channels rgba
    name Remove2
    xpos -436
    ypos 511
   }
push 0
   Switch {
    inputs 2
    which {{parent.Angle_reveal_front1.value>0.001}}
    name Switch2
    xpos -436
    ypos 660
   }
   Dot {
    name Dot83
    xpos -402
    ypos 735
   }
push $N14718870
   Shuffle2 {
    fromInput1 {{0} B}
    fromInput2 {{0} B}
    mappings "4 rgba.green 0 1 rgba.red 0 0 rgba.green 0 1 rgba.green 0 1 rgba.green 0 1 rgba.blue 0 2 black -1 -1 rgba.alpha 0 3"
    name Shuffle42
    label SIDE
    xpos -130
    ypos -425
   }
   Multiply {
    value {{math_matrix.result_z_smoke(parent.CTimeOffset.ref)}}
    name Angle_reveal_side1
    label SIDE
    xpos -130
    ypos -387
   }
   Transform {
    scale {{0.05+(0.05*(((parent.DecimalTimeOffset13.decimal-0.5)*2)*ScaleVariationSmoke))}}
    center {{root.width/2 x1015 2304} {root.height/2}}
    shutteroffset centred
    name Transform46
    xpos -130
    ypos -77
   }
   Card3D {
    translate {{"\[if \{\[exists  parent.parent.parent.input0]\} \{return \[value \[topnode parent.parent.parent.input0].name].translate.x(ref)\} \{return 0\}]"} {"\[if \{\[exists  parent.parent.parent.input0]\} \{return \[value \[topnode parent.parent.parent.input0].name].translate.y(ref)\} \{return 0\}]"} {"\[if \{\[exists  parent.parent.parent.input0]\} \{return \[value \[topnode parent.parent.parent.input0].name].translate.z(ref)\} \{return -1\}]"}}
    rotate {{"\[if \{\[exists  parent.parent.parent.input0]\} \{return \[value \[topnode parent.parent.parent.input0].name].rotate.x(ref)\} \{return 0\}]"} {"\[if \{\[exists  parent.parent.parent.input0]\} \{return \[value \[topnode parent.parent.parent.input0].name].rotate.y(ref)\} \{return 0\}]"} {"\[if \{\[exists  parent.parent.parent.input0]\} \{return \[value \[topnode parent.parent.parent.input0].name].rotate.z(ref)\} \{return 0\}]"}}
    scaling {{"\[if \{\[exists  parent.parent.parent.input0]\} \{return \[value \[topnode parent.parent.parent.input0].name].scaling.x(ref)\} \{return 1\}]"} {"\[if \{\[exists  parent.parent.parent.input0]\} \{return \[value \[topnode parent.parent.parent.input0].name].scaling.y(ref)\} \{return 1\}]"} {"\[if \{\[exists  parent.parent.parent.input0]\} \{return \[value \[topnode parent.parent.parent.input0].name].scaling.z(ref)\} \{return 1\}]"}}
    uniform_scale {{"\[if \{\[exists  parent.parent.parent.input0]\} \{return (\[value \[topnode parent.parent.parent.input0].name].uniform_scale(ref)*25)\} \{return 25\}]"}}
    shutteroffset centred
    name cCard3D_1
    tile_color 0x7b1d1dff
    label "ref frame: \[value ref]"
    selected true
    xpos -130
    ypos 80
    addUserKnob {20 User l parent}
    addUserKnob {22 python_button l "set parent" t "select parent node, and press this button to set the selected node as parent" +INVISIBLE T "n = nuke.selectedNode()\['name'].getValue()\nnuke.thisNode()\['string'].setValue(n)" +STARTLINE}
    addUserKnob {1 string l parent +INVISIBLE}
    string null
    addUserKnob {3 id l "id number"}
    id {{parent.CTimeOffset.shotnmbr}}
    addUserKnob {3 ref l "ref frame"}
    ref {{parent.CTimeOffset.ref}}
   }
   Transform {
    translate {{"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].translate.x(ref)\}]"} {"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].translate.y(ref)\}]"}}
    rotate {{"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].rotate-\[value parent_gun].rotate(ref)\}]"}}
    scale {{"\[if \{\[value parent_gun]==\"null\"\} \{return 1\} \{return 1+(\[value parent_gun].scale-\[value parent_gun].scale(ref))\}]"}}
    center {{"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].center.x(ref)\}]"} {"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].center.y(ref)\}]"}}
    name Transform_GUNMatchMove39
    label "\n"
    xpos -130
    ypos 201
    addUserKnob {20 User l parent}
    addUserKnob {3 ref}
    ref {{parent.CTimeOffset.ref}}
   }
   NoTimeBlur {
    name NoTimeBlur4
    xpos -130
    ypos 258
   }
   Transform {
    translate {{"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].translate.x-\[value parent_env].translate.x(ref)\}]"} {"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].translate.y-\[value parent_env].translate.y(ref)\}]"}}
    rotate {{"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].rotate-\[value parent_env].rotate(ref)\}]"}}
    scale {{"\[if \{\[value parent_gun]==\"null\"\} \{return 1\} \{return 1+(\[value parent_env].scale-\[value parent_env].scale(ref))\}]"}}
    center {{"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].center.x(ref)\}]"} {"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].center.y(ref)\}]"}}
    motionblur 0.2
    shutter {{SmokeMB*0.5}}
    shutteroffset centred
    name Transform_ENVMatchMove39
    xpos -130
    ypos 336
    addUserKnob {20 User l parent}
    addUserKnob {3 ref}
    ref {{parent.CTimeOffset.ref}}
   }
   Transform {
    translate {{"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return -((root.width/2)-(\[value parent_gun].center.x(1)+\[value parent_gun].translate.x(1)))\}]"} {"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return -((root.height/2)-(\[value parent_gun].center.y(1)+\[value parent_gun].translate.y(1)))\}]"}}
    name Transform_GUNMatchMove5
    label "alignment correction"
    xpos -130
    ypos 417
    addUserKnob {20 User l parent}
    addUserKnob {22 python_button l "set parent" t "select parent node, and press this button to set the selected node as parent" T "n = nuke.selectedNode()\['name'].getValue()\nnuke.thisNode()\['string'].setValue(n)" +STARTLINE}
    addUserKnob {1 string l parent}
    string Transform_MatchMove10
    addUserKnob {3 ref +INVISIBLE}
    ref {{parent.cCard3D_8.ref}}
   }
   Shuffle2 {
    fromInput1 {{0} B}
    fromInput2 {{0} B}
    mappings "4 rgba.red 0 0 rgba.red 0 0 rgba.green 0 1 rgba.green 0 1 rgba.blue 0 2 rgba.blue 0 2 rgba.blue 0 2 rgba.alpha 0 3"
    name Shuffle1
    xpos -130
    ypos 465
   }
   Remove {
    operation keep
    channels rgba
    name Remove39
    xpos -130
    ypos 504
   }
push 0
   Switch {
    inputs 2
    which {{parent.Angle_reveal_side1.value>0.001}}
    name Switch3
    xpos -130
    ypos 658
   }
   Merge2 {
    inputs 3+1
    operation max
    name Merge28
    xpos -130
    ypos 731
   }
   Merge2 {
    inputs 2
    operation plus
    bbox intersection
    name Merge29
    xpos -130
    ypos 983
   }
push 0
   Switch {
    inputs 2
    which {{"shot\[value count]==0?0:frame>=shot\[value count]"}}
    name cSwitch_13
    xpos -130
    ypos 1065
    addUserKnob {20 User}
    addUserKnob {3 count}
    count {{parent.CTimeOffset.shotnmbr}}
   }
   Output {
    name Output1
    xpos -130
    ypos 1323
   }
  end_group
push $N145bae90
  Dot {
   name Dot3
   xpos -6
   ypos -711
  }
set N14905940 [stack 0]
  Group {
   name gunshot3
   label "shot: \[value shotcount]\non frame: \[value shotstart]\n"
   xpos -40
   ypos -357
   addUserKnob {20 User}
   addUserKnob {3 shotcount l shot}
   shotcount 3
   addUserKnob {3 shotstart l frame +INVISIBLE}
   shotstart {{"shotcount==0 ? 0 : shot\[value shotcount]-1" i}}
  }
   BackdropNode {
    inputs 0
    name BackdropNode19
    knobChanged "try:\n    listenedKnobs = \['text', 'position', 'name']\n    node = nuke.thisNode()\n    name = node.knob('name').value()\n    text = node.knob('text').value()\n    position = node.knob('position').value()\n    position = \"<\" + position + \">\"\n    label = node.knob('label').value()\n    \n    if nuke.thisKnob().name() in listenedKnobs:\n        if text == \"\":\n            if node.knob('position').value() == \"left\":\n                node.knob('label').setValue()\n            else:\n                node.knob('label').setValue(position + name)\n        else:\n            if node.knob('position').value() == \"left\":\n                node.knob('label').setValue(text)\n            else:\n                node.knob('label').setValue(position + text)\n                \n    elif nuke.thisKnob().name() == 'font_size':\n        fontSize = node.knob('font_size').value()\n        node.knob('note_font_size').setValue(fontSize)\nexcept:\n    pass"
    tile_color 0x232323ff
    label "<Left><h2> Gunshot"
    note_font_size 31.5
    xpos -693
    ypos -554
    bdwidth 876
    bdheight 1682
    addUserKnob {20 F_VFX l BackdropNode}
    addUserKnob {43 text l Text}
    text "<h2> Gunshot"
    addUserKnob {7 font_size l "Font Size" R 10 100}
    font_size 31.5
    addUserKnob {4 position l "" -STARTLINE M {Left Center}}
    addUserKnob {26 S01 l " " T " "}
    addUserKnob {22 grow l " <img src=\"F_scalep.png\">" -STARTLINE T "n=nuke.thisNode()\n\ndef grow(node=None,step=50):\n    try:\n        if not node:\n            n=nuke.selectedNode()\n        else:\n            n=node\n            n\['xpos'].setValue(n\['xpos'].getValue()-step)\n            n\['ypos'].setValue(n\['ypos'].getValue()-step)\n            n\['bdwidth'].setValue(n\['bdwidth'].getValue()+step*2)\n            n\['bdheight'].setValue(n\['bdheight'].getValue()+step*2)\n    except:\n        pass\ngrow(n,50)"}
    addUserKnob {22 shrink l " <img src=\"F_scalem.png\">" -STARTLINE T "n=nuke.thisNode()\n\ndef shrink(node=None,step=50):\n    try:\n        if not node:\n            n=nuke.selectedNode()\n        else:\n            n=node\n            n\['xpos'].setValue(n\['xpos'].getValue()+step)\n            n\['ypos'].setValue(n\['ypos'].getValue()+step)\n            n\['bdwidth'].setValue(n\['bdwidth'].getValue()-step*2)\n            n\['bdheight'].setValue(n\['bdheight'].getValue()-step*2)\n    except:\n        pass\nshrink(n,50)"}
    addUserKnob {22 colorandom l " <img src=\"ColorBars.png\">" -STARTLINE T "import colorsys, random\nn=nuke.thisNode()\nR,G,B= colorsys.hsv_to_rgb(random.random(),.1+random.random()*.15,.15+random.random()*.15)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ) )"}
    addUserKnob {22 darkgrey l "<font color=\"#232323\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.0, 0.0, 0.14]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 lightgrey l "<font color=\"#383838\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.0, 0.0, 0.22]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 red l "<font color=\"#8c3838\" size=6>■</font>" T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.0, 0.6, 0.55]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n" +STARTLINE}
    addUserKnob {22 orange l "<font color=\"#b28e59\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.1, 0.5, 0.7]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 yellow l "<font color=\"#ccc766\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.16, 0.5, 0.8]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 green l "<font color=\"#5d995b\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.33, 0.4, 0.6]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 cyan l "<font color=\"#72998f\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.46, 0.25, 0.6]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 blue l "<font color=\"#59687f\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.6, 0.3, 0.5]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 darkblue l "<font color=\"#63628c\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.67, 0.3, 0.55]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 magenta l "<font color=\"#927a99\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.8, 0.2, 0.6]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 pink l "<font color=\"#997a89\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.92, 0.2, 0.6]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {26 S02 l " " T " "}
    addUserKnob {26 Ftools l "" +STARTLINE T "<font color=\"#1C1C1C\"> v1.2 - Franklin VFX - 2018"}
   }
   BackdropNode {
    inputs 0
    name BackdropNode2
    knobChanged "try:\n    listenedKnobs = \['text', 'position', 'name']\n    node = nuke.thisNode()\n    name = node.knob('name').value()\n    text = node.knob('text').value()\n    position = node.knob('position').value()\n    position = \"<\" + position + \">\"\n    label = node.knob('label').value()\n    \n    if nuke.thisKnob().name() in listenedKnobs:\n        if text == \"\":\n            if node.knob('position').value() == \"left\":\n                node.knob('label').setValue()\n            else:\n                node.knob('label').setValue(position + name)\n        else:\n            if node.knob('position').value() == \"left\":\n                node.knob('label').setValue(text)\n            else:\n                node.knob('label').setValue(position + text)\n                \n    elif nuke.thisKnob().name() == 'font_size':\n        fontSize = node.knob('font_size').value()\n        node.knob('note_font_size').setValue(fontSize)\nexcept:\n    pass"
    tile_color 0x927a99ff
    note_font_size 50
    xpos -473
    ypos -221
    bdwidth 435
    bdheight 786
    z_order 1
    addUserKnob {20 F_VFX l BackdropNode}
    addUserKnob {43 text l Text}
    addUserKnob {7 font_size l "Font Size" R 10 100}
    font_size 50
    addUserKnob {4 position l "" -STARTLINE M {Left Center}}
    addUserKnob {26 S01 l " " T " "}
    addUserKnob {22 grow l " <img src=\"F_scalep.png\">" -STARTLINE T "n=nuke.thisNode()\n\ndef grow(node=None,step=50):\n    try:\n        if not node:\n            n=nuke.selectedNode()\n        else:\n            n=node\n            n\['xpos'].setValue(n\['xpos'].getValue()-step)\n            n\['ypos'].setValue(n\['ypos'].getValue()-step)\n            n\['bdwidth'].setValue(n\['bdwidth'].getValue()+step*2)\n            n\['bdheight'].setValue(n\['bdheight'].getValue()+step*2)\n    except:\n        pass\ngrow(n,50)"}
    addUserKnob {22 shrink l " <img src=\"F_scalem.png\">" -STARTLINE T "n=nuke.thisNode()\n\ndef shrink(node=None,step=50):\n    try:\n        if not node:\n            n=nuke.selectedNode()\n        else:\n            n=node\n            n\['xpos'].setValue(n\['xpos'].getValue()+step)\n            n\['ypos'].setValue(n\['ypos'].getValue()+step)\n            n\['bdwidth'].setValue(n\['bdwidth'].getValue()-step*2)\n            n\['bdheight'].setValue(n\['bdheight'].getValue()-step*2)\n    except:\n        pass\nshrink(n,50)"}
    addUserKnob {22 colorandom l " <img src=\"ColorBars.png\">" -STARTLINE T "import colorsys, random\nn=nuke.thisNode()\nR,G,B= colorsys.hsv_to_rgb(random.random(),.1+random.random()*.15,.15+random.random()*.15)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ) )"}
    addUserKnob {22 darkgrey l "<font color=\"#232323\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.0, 0.0, 0.14]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 lightgrey l "<font color=\"#383838\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.0, 0.0, 0.22]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 red l "<font color=\"#8c3838\" size=6>■</font>" T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.0, 0.6, 0.55]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n" +STARTLINE}
    addUserKnob {22 orange l "<font color=\"#b28e59\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.1, 0.5, 0.7]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 yellow l "<font color=\"#ccc766\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.16, 0.5, 0.8]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 green l "<font color=\"#5d995b\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.33, 0.4, 0.6]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 cyan l "<font color=\"#72998f\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.46, 0.25, 0.6]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 blue l "<font color=\"#59687f\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.6, 0.3, 0.5]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 darkblue l "<font color=\"#63628c\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.67, 0.3, 0.55]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 magenta l "<font color=\"#927a99\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.8, 0.2, 0.6]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 pink l "<font color=\"#997a89\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.92, 0.2, 0.6]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {26 S02 l " " T " "}
    addUserKnob {26 Ftools l "" +STARTLINE T "<font color=\"#1C1C1C\"> v1.2 - Franklin VFX - 2018"}
   }
   Constant {
    inputs 0
    channels rgb
    name Constant13
    xpos -643
    ypos 714
   }
   AdjBBox {
    numpixels {{size_bbox}}
    name AdjBBox13
    xpos -643
    ypos 849
   }
   Dot {
    name Dot78
    xpos -609
    ypos 987
   }
   Axis3 {
    inputs 0
    useMatrix true
    matrix {
        {{parent.cCard3D_1.matrix} {parent.cCard3D_1.matrix} {parent.cCard3D_1.matrix} {parent.cCard3D_1.matrix}}
        {{parent.cCard3D_1.matrix} {parent.cCard3D_1.matrix} {parent.cCard3D_1.matrix} {parent.cCard3D_1.matrix}}
        {{parent.cCard3D_1.matrix} {parent.cCard3D_1.matrix} {parent.cCard3D_1.matrix} {parent.cCard3D_1.matrix}}
        {{parent.cCard3D_1.matrix} {parent.cCard3D_1.matrix} {parent.cCard3D_1.matrix} {parent.cCard3D_1.matrix}}
      }
    name Axis14
    xpos -203
    ypos -12
   }
set N149413b0 [stack 0]
push 0
   Input {
    inputs 0
    name Input1
    xpos -130
    ypos -1242
   }
   TimeOffset {
    time_offset {{"shotnmbr==0 ? 0 : shot\[value shotnmbr]-1"}}
    time ""
    name CTimeOffset
    label "shot: \[value shotnmbr]\non frame \[value time_offset]"
    xpos -130
    ypos -927
    addUserKnob {20 User}
    addUserKnob {3 shotnmbr l "shot "}
    shotnmbr {{shotcount}}
    addUserKnob {3 ref}
    ref {{time_offset+1}}
   }
   Group {
    name DecimalTimeOffset13
    tile_color 0xafa35dff
    label "random asset"
    note_font "Bitstream Vera Sans Bold"
    xpos -130
    ypos -844
    addUserKnob {20 User}
    addUserKnob {7 decimal l "time offset (decimal)"}
    decimal {{random(shotcount*seed)}}
    addUserKnob {26 ""}
    addUserKnob {26 _1 l "" +STARTLINE T "Chris Fryer | 2020\nupdated by Yorben Otto | 2024"}
   }
    Input {
     inputs 0
     name Input1
     xpos 426
     ypos -793
    }
    TimeOffset {
     time_offset {{(-floor(parent.decimal))*(DecimalTimeOffset13.decimal<0)}}
     time ""
     name TimeOffset1
     xpos 426
     ypos -675
    }
    Dot {
     name Dot6
     xpos 460
     ypos -635
    }
set N149808e0 [stack 0]
    Dot {
     name Dot5
     xpos 350
     ypos -635
    }
    Dot {
     name Dot7
     xpos 350
     ypos -365
    }
push $N149808e0
    Dot {
     name Dot1
     xpos 572
     ypos -635
    }
    TimeBlur {
     divisions 2
     shutter {{(parent.decimal-(floor(parent.decimal)))*2}}
     shutteroffset start
     shuttercustomoffset 0
     name TimeBlur1
     xpos 538
     ypos -558
    }
    Dot {
     name Dot2
     xpos 572
     ypos -490
    }
push $N149808e0
    TimeBlur {
     divisions 2
     shutter {{parent.decimal*2}}
     shutteroffset start
     shuttercustomoffset 0
     name TimeBlur8
     xpos 426
     ypos -556
    }
    Switch {
     inputs 2
     which {{parent.decimal<0}}
     name Switch1
     xpos 426
     ypos -494
    }
    Multiply {
     value {{parent.TimeBlur8.divisions}}
     name Multiply6
     xpos 426
     ypos -436
    }
    Merge2 {
     inputs 2
     operation from
     name Merge6
     xpos 426
     ypos -369
    }
set N149c28d0 [stack 0]
    Output {
     name Output1
     xpos 426
     ypos -221
    }
push $N149c28d0
push $N149c28d0
    Viewer {
     inputs 2
     frame_range 1-100
     name Viewer1
     xpos 675
     ypos -246
    }
   end_group
   NoTimeBlur {
    name NoTimeBlur13
    xpos -130
    ypos -782
   }
   Dot {
    name Dot79
    xpos -96
    ypos -463
   }
set N14a616f0 [stack 0]
   Dot {
    name Dot81
    xpos -249
    ypos -463
   }
set N14a667b0 [stack 0]
   Shuffle2 {
    fromInput1 {{0} B}
    fromInput2 {{0} B}
    mappings "4 rgba.blue 0 2 rgba.red 0 0 rgba.blue 0 2 rgba.green 0 1 rgba.blue 0 2 rgba.blue 0 2 black -1 -1 rgba.alpha 0 3"
    name Shuffle40
    label TOP
    xpos -283
    ypos -431
   }
   Multiply {
    value {{math_matrix.result_y_smoke(parent.CTimeOffset.ref)}}
    name Angle_reveal_top1
    label TOP
    xpos -283
    ypos -393
   }
   Transform {
    scale {{0.05+(0.05*(((parent.DecimalTimeOffset13.decimal-0.5)*2)*ScaleVariationSmoke))}}
    center {{root.width/2 x1015 2304} {root.height/2}}
    shutteroffset centred
    name Transform44
    xpos -283
    ypos -74
   }
   Card3D {
    inputs 3
    rot_order ZYX
    translate {0 0 0}
    rotate {90 0 0}
    shutteroffset centred
    name cCard3D25
    tile_color 0x7b1d1dff
    xpos -283
    ypos 89
    addUserKnob {20 User l parent}
    addUserKnob {22 python_button l "set parent" t "select parent node, and press this button to set the selected node as parent" +INVISIBLE T "n = nuke.selectedNode()\['name'].getValue()\nnuke.thisNode()\['string'].setValue(n)" +STARTLINE}
    addUserKnob {1 string l parent +INVISIBLE}
    string null
    addUserKnob {3 ref l "ref frame"}
    ref 1015
   }
   Transform {
    translate {{"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].translate.x(ref)\}]"} {"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].translate.y(ref)\}]"}}
    rotate {{"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].rotate-\[value parent_gun].rotate(ref)\}]"}}
    scale {{"\[if \{\[value parent_gun]==\"null\"\} \{return 1\} \{return 1+(\[value parent_gun].scale-\[value parent_gun].scale(ref))\}]"}}
    center {{"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].center.x(ref)\}]"} {"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].center.y(ref)\}]"}}
    name Transform_GUNMatchMove37
    xpos -283
    ypos 201
    addUserKnob {20 User l parent}
    addUserKnob {3 ref}
    ref {{parent.CTimeOffset.ref}}
   }
   NoTimeBlur {
    name NoTimeBlur3
    xpos -283
    ypos 259
   }
   Transform {
    translate {{"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].translate.x-\[value parent_env].translate.x(ref)\}]"} {"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].translate.y-\[value parent_env].translate.y(ref)\}]"}}
    rotate {{"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].rotate-\[value parent_env].rotate(ref)\}]"}}
    scale {{"\[if \{\[value parent_gun]==\"null\"\} \{return 1\} \{return 1+(\[value parent_env].scale-\[value parent_env].scale(ref))\}]"}}
    center {{"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].center.x(ref)\}]"} {"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].center.y(ref)\}]"}}
    motionblur 0.2
    shutter {{SmokeMB*0.5}}
    shutteroffset centred
    name Transform_ENVMatchMove37
    label "\n"
    xpos -283
    ypos 333
    addUserKnob {20 User l parent}
    addUserKnob {3 ref}
    ref {{parent.CTimeOffset.ref}}
   }
   Transform {
    translate {{"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return -((root.width/2)-(\[value parent_gun].center.x(1)+\[value parent_gun].translate.x(1)))\}]"} {"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return -((root.height/2)-(\[value parent_gun].center.y(1)+\[value parent_gun].translate.y(1)))\}]"}}
    name Transform_GUNMatchMove6
    label "alignment correction"
    xpos -283
    ypos 422
    addUserKnob {20 User l parent}
    addUserKnob {22 python_button l "set parent" t "select parent node, and press this button to set the selected node as parent" T "n = nuke.selectedNode()\['name'].getValue()\nnuke.thisNode()\['string'].setValue(n)" +STARTLINE}
    addUserKnob {1 string l parent}
    string Transform_MatchMove10
    addUserKnob {3 ref +INVISIBLE}
    ref {{parent.cCard3D_8.ref}}
   }
   Shuffle2 {
    fromInput1 {{0} B}
    fromInput2 {{0} B}
    mappings "4 rgba.red 0 0 rgba.red 0 0 rgba.green 0 1 rgba.green 0 1 rgba.blue 0 2 rgba.blue 0 2 rgba.blue 0 2 rgba.alpha 0 3"
    name Shuffle2
    xpos -283
    ypos 473
   }
   Remove {
    operation keep
    channels rgba
    name Remove1
    xpos -283
    ypos 512
   }
push 0
   Switch {
    inputs 2
    which {{parent.Angle_reveal_top1.value>0.001}}
    name Switch1
    xpos -283
    ypos 660
   }
   Dot {
    name Dot82
    xpos -249
    ypos 705
   }
push 0
push $N149413b0
push 0
push $N14a667b0
   Dot {
    name Dot80
    xpos -402
    ypos -463
   }
   Shuffle2 {
    fromInput1 {{0} B}
    fromInput2 {{0} B}
    mappings "4 rgba.red 0 0 rgba.red 0 0 rgba.red 0 0 rgba.green 0 1 rgba.red 0 0 rgba.blue 0 2 black -1 -1 rgba.alpha 0 3"
    name Shuffle41
    label FRONT
    xpos -436
    ypos -431
   }
   Multiply {
    value {{math_matrix.result_x_smoke(parent.CTimeOffset.ref)}}
    name Angle_reveal_front1
    label FRONT
    xpos -436
    ypos -393
   }
   Transform {
    scale {{0.05+(0.05*(((parent.DecimalTimeOffset13.decimal-0.5)*2)*ScaleVariationSmoke))}}
    center {{root.width/2 x1015 2304} {root.height/2}}
    shutteroffset centred
    name Transform45
    xpos -436
    ypos -73
   }
   Card3D {
    inputs 3
    rot_order ZYX
    translate {0 0 0}
    rotate {0 90 0}
    shutteroffset centred
    name cCard3D26
    tile_color 0x7b1d1dff
    xpos -436
    ypos 93
    addUserKnob {20 User l parent}
    addUserKnob {22 python_button l "set parent" t "select parent node, and press this button to set the selected node as parent" +INVISIBLE T "n = nuke.selectedNode()\['name'].getValue()\nnuke.thisNode()\['string'].setValue(n)" +STARTLINE}
    addUserKnob {1 string l parent +INVISIBLE}
    string null
    addUserKnob {3 ref l "ref frame"}
    ref 1015
   }
   Transform {
    translate {{"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].translate.x(ref)\}]"} {"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].translate.y(ref)\}]"}}
    rotate {{"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].rotate-\[value parent_gun].rotate(ref)\}]"}}
    scale {{"\[if \{\[value parent_gun]==\"null\"\} \{return 1\} \{return 1+(\[value parent_gun].scale-\[value parent_gun].scale(ref))\}]"}}
    center {{"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].center.x(ref)\}]"} {"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].center.y(ref)\}]"}}
    name Transform_GUNMatchMove38
    label "\n"
    xpos -436
    ypos 203
    addUserKnob {20 User l parent}
    addUserKnob {3 ref}
    ref {{parent.CTimeOffset.ref}}
   }
   NoTimeBlur {
    name NoTimeBlur2
    xpos -436
    ypos 259
   }
   Transform {
    translate {{"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].translate.x-\[value parent_env].translate.x(ref)\}]"} {"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].translate.y-\[value parent_env].translate.y(ref)\}]"}}
    rotate {{"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].rotate-\[value parent_env].rotate(ref)\}]"}}
    scale {{"\[if \{\[value parent_gun]==\"null\"\} \{return 1\} \{return 1+(\[value parent_env].scale-\[value parent_env].scale(ref))\}]"}}
    center {{"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].center.x(ref)\}]"} {"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].center.y(ref)\}]"}}
    motionblur 0.2
    shutter {{SmokeMB*0.5}}
    shutteroffset centred
    name Transform_ENVMatchMove38
    xpos -436
    ypos 332
    addUserKnob {20 User l parent}
    addUserKnob {3 ref}
    ref {{parent.CTimeOffset.ref}}
   }
   Transform {
    translate {{"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return -((root.width/2)-(\[value parent_gun].center.x(1)+\[value parent_gun].translate.x(1)))\}]"} {"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return -((root.height/2)-(\[value parent_gun].center.y(1)+\[value parent_gun].translate.y(1)))\}]"}}
    name Transform_GUNMatchMove7
    label "alignment correction"
    xpos -436
    ypos 421
    addUserKnob {20 User l parent}
    addUserKnob {22 python_button l "set parent" t "select parent node, and press this button to set the selected node as parent" T "n = nuke.selectedNode()\['name'].getValue()\nnuke.thisNode()\['string'].setValue(n)" +STARTLINE}
    addUserKnob {1 string l parent}
    string Transform_MatchMove10
    addUserKnob {3 ref +INVISIBLE}
    ref {{parent.cCard3D_8.ref}}
   }
   Shuffle2 {
    fromInput1 {{0} B}
    fromInput2 {{0} B}
    mappings "4 rgba.red 0 0 rgba.red 0 0 rgba.green 0 1 rgba.green 0 1 rgba.blue 0 2 rgba.blue 0 2 rgba.blue 0 2 rgba.alpha 0 3"
    name Shuffle3
    xpos -436
    ypos 472
   }
   Remove {
    operation keep
    channels rgba
    name Remove2
    xpos -436
    ypos 511
   }
push 0
   Switch {
    inputs 2
    which {{parent.Angle_reveal_front1.value>0.001}}
    name Switch2
    xpos -436
    ypos 660
   }
   Dot {
    name Dot83
    xpos -402
    ypos 735
   }
push $N14a616f0
   Shuffle2 {
    fromInput1 {{0} B}
    fromInput2 {{0} B}
    mappings "4 rgba.green 0 1 rgba.red 0 0 rgba.green 0 1 rgba.green 0 1 rgba.green 0 1 rgba.blue 0 2 black -1 -1 rgba.alpha 0 3"
    name Shuffle42
    label SIDE
    xpos -130
    ypos -425
   }
   Multiply {
    value {{math_matrix.result_z_smoke(parent.CTimeOffset.ref)}}
    name Angle_reveal_side1
    label SIDE
    xpos -130
    ypos -387
   }
   Transform {
    scale {{0.05+(0.05*(((parent.DecimalTimeOffset13.decimal-0.5)*2)*ScaleVariationSmoke))}}
    center {{root.width/2 x1015 2304} {root.height/2}}
    shutteroffset centred
    name Transform46
    xpos -130
    ypos -77
   }
   Card3D {
    translate {{"\[if \{\[exists  parent.parent.parent.input0]\} \{return \[value \[topnode parent.parent.parent.input0].name].translate.x(ref)\} \{return 0\}]"} {"\[if \{\[exists  parent.parent.parent.input0]\} \{return \[value \[topnode parent.parent.parent.input0].name].translate.y(ref)\} \{return 0\}]"} {"\[if \{\[exists  parent.parent.parent.input0]\} \{return \[value \[topnode parent.parent.parent.input0].name].translate.z(ref)\} \{return -1\}]"}}
    rotate {{"\[if \{\[exists  parent.parent.parent.input0]\} \{return \[value \[topnode parent.parent.parent.input0].name].rotate.x(ref)\} \{return 0\}]"} {"\[if \{\[exists  parent.parent.parent.input0]\} \{return \[value \[topnode parent.parent.parent.input0].name].rotate.y(ref)\} \{return 0\}]"} {"\[if \{\[exists  parent.parent.parent.input0]\} \{return \[value \[topnode parent.parent.parent.input0].name].rotate.z(ref)\} \{return 0\}]"}}
    scaling {{"\[if \{\[exists  parent.parent.parent.input0]\} \{return \[value \[topnode parent.parent.parent.input0].name].scaling.x(ref)\} \{return 1\}]"} {"\[if \{\[exists  parent.parent.parent.input0]\} \{return \[value \[topnode parent.parent.parent.input0].name].scaling.y(ref)\} \{return 1\}]"} {"\[if \{\[exists  parent.parent.parent.input0]\} \{return \[value \[topnode parent.parent.parent.input0].name].scaling.z(ref)\} \{return 1\}]"}}
    uniform_scale {{"\[if \{\[exists  parent.parent.parent.input0]\} \{return (\[value \[topnode parent.parent.parent.input0].name].uniform_scale(ref)*25)\} \{return 25\}]"}}
    shutteroffset centred
    name cCard3D_1
    tile_color 0x7b1d1dff
    label "ref frame: \[value ref]"
    selected true
    xpos -130
    ypos 80
    addUserKnob {20 User l parent}
    addUserKnob {22 python_button l "set parent" t "select parent node, and press this button to set the selected node as parent" +INVISIBLE T "n = nuke.selectedNode()\['name'].getValue()\nnuke.thisNode()\['string'].setValue(n)" +STARTLINE}
    addUserKnob {1 string l parent +INVISIBLE}
    string null
    addUserKnob {3 id l "id number"}
    id {{parent.CTimeOffset.shotnmbr}}
    addUserKnob {3 ref l "ref frame"}
    ref {{parent.CTimeOffset.ref}}
   }
   Transform {
    translate {{"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].translate.x(ref)\}]"} {"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].translate.y(ref)\}]"}}
    rotate {{"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].rotate-\[value parent_gun].rotate(ref)\}]"}}
    scale {{"\[if \{\[value parent_gun]==\"null\"\} \{return 1\} \{return 1+(\[value parent_gun].scale-\[value parent_gun].scale(ref))\}]"}}
    center {{"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].center.x(ref)\}]"} {"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].center.y(ref)\}]"}}
    name Transform_GUNMatchMove39
    label "\n"
    xpos -130
    ypos 201
    addUserKnob {20 User l parent}
    addUserKnob {3 ref}
    ref {{parent.CTimeOffset.ref}}
   }
   NoTimeBlur {
    name NoTimeBlur4
    xpos -130
    ypos 258
   }
   Transform {
    translate {{"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].translate.x-\[value parent_env].translate.x(ref)\}]"} {"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].translate.y-\[value parent_env].translate.y(ref)\}]"}}
    rotate {{"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].rotate-\[value parent_env].rotate(ref)\}]"}}
    scale {{"\[if \{\[value parent_gun]==\"null\"\} \{return 1\} \{return 1+(\[value parent_env].scale-\[value parent_env].scale(ref))\}]"}}
    center {{"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].center.x(ref)\}]"} {"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].center.y(ref)\}]"}}
    motionblur 0.2
    shutter {{SmokeMB*0.5}}
    shutteroffset centred
    name Transform_ENVMatchMove39
    xpos -130
    ypos 336
    addUserKnob {20 User l parent}
    addUserKnob {3 ref}
    ref {{parent.CTimeOffset.ref}}
   }
   Transform {
    translate {{"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return -((root.width/2)-(\[value parent_gun].center.x(1)+\[value parent_gun].translate.x(1)))\}]"} {"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return -((root.height/2)-(\[value parent_gun].center.y(1)+\[value parent_gun].translate.y(1)))\}]"}}
    name Transform_GUNMatchMove5
    label "alignment correction"
    xpos -130
    ypos 417
    addUserKnob {20 User l parent}
    addUserKnob {22 python_button l "set parent" t "select parent node, and press this button to set the selected node as parent" T "n = nuke.selectedNode()\['name'].getValue()\nnuke.thisNode()\['string'].setValue(n)" +STARTLINE}
    addUserKnob {1 string l parent}
    string Transform_MatchMove10
    addUserKnob {3 ref +INVISIBLE}
    ref {{parent.cCard3D_8.ref}}
   }
   Shuffle2 {
    fromInput1 {{0} B}
    fromInput2 {{0} B}
    mappings "4 rgba.red 0 0 rgba.red 0 0 rgba.green 0 1 rgba.green 0 1 rgba.blue 0 2 rgba.blue 0 2 rgba.blue 0 2 rgba.alpha 0 3"
    name Shuffle1
    xpos -130
    ypos 465
   }
   Remove {
    operation keep
    channels rgba
    name Remove39
    xpos -130
    ypos 504
   }
push 0
   Switch {
    inputs 2
    which {{parent.Angle_reveal_side1.value>0.001}}
    name Switch3
    xpos -130
    ypos 658
   }
   Merge2 {
    inputs 3+1
    operation max
    name Merge28
    xpos -130
    ypos 731
   }
   Merge2 {
    inputs 2
    operation plus
    bbox intersection
    name Merge29
    xpos -130
    ypos 983
   }
push 0
   Switch {
    inputs 2
    which {{"shot\[value count]==0?0:frame>=shot\[value count]"}}
    name cSwitch_13
    xpos -130
    ypos 1065
    addUserKnob {20 User}
    addUserKnob {3 count}
    count {{parent.CTimeOffset.shotnmbr}}
   }
   Output {
    name Output1
    xpos -130
    ypos 1323
   }
  end_group
push $N14905940
  Dot {
   name Dot4
   xpos 146
   ypos -711
  }
set N14c4e7e0 [stack 0]
  Group {
   name gunshot4
   label "shot: \[value shotcount]\non frame: \[value shotstart]\n"
   xpos 112
   ypos -357
   addUserKnob {20 User}
   addUserKnob {3 shotcount l shot}
   shotcount 4
   addUserKnob {3 shotstart l frame +INVISIBLE}
   shotstart {{"shotcount==0 ? 0 : shot\[value shotcount]-1" i}}
  }
   BackdropNode {
    inputs 0
    name BackdropNode19
    knobChanged "try:\n    listenedKnobs = \['text', 'position', 'name']\n    node = nuke.thisNode()\n    name = node.knob('name').value()\n    text = node.knob('text').value()\n    position = node.knob('position').value()\n    position = \"<\" + position + \">\"\n    label = node.knob('label').value()\n    \n    if nuke.thisKnob().name() in listenedKnobs:\n        if text == \"\":\n            if node.knob('position').value() == \"left\":\n                node.knob('label').setValue()\n            else:\n                node.knob('label').setValue(position + name)\n        else:\n            if node.knob('position').value() == \"left\":\n                node.knob('label').setValue(text)\n            else:\n                node.knob('label').setValue(position + text)\n                \n    elif nuke.thisKnob().name() == 'font_size':\n        fontSize = node.knob('font_size').value()\n        node.knob('note_font_size').setValue(fontSize)\nexcept:\n    pass"
    tile_color 0x232323ff
    label "<Left><h2> Gunshot"
    note_font_size 31.5
    xpos -693
    ypos -554
    bdwidth 876
    bdheight 1682
    addUserKnob {20 F_VFX l BackdropNode}
    addUserKnob {43 text l Text}
    text "<h2> Gunshot"
    addUserKnob {7 font_size l "Font Size" R 10 100}
    font_size 31.5
    addUserKnob {4 position l "" -STARTLINE M {Left Center}}
    addUserKnob {26 S01 l " " T " "}
    addUserKnob {22 grow l " <img src=\"F_scalep.png\">" -STARTLINE T "n=nuke.thisNode()\n\ndef grow(node=None,step=50):\n    try:\n        if not node:\n            n=nuke.selectedNode()\n        else:\n            n=node\n            n\['xpos'].setValue(n\['xpos'].getValue()-step)\n            n\['ypos'].setValue(n\['ypos'].getValue()-step)\n            n\['bdwidth'].setValue(n\['bdwidth'].getValue()+step*2)\n            n\['bdheight'].setValue(n\['bdheight'].getValue()+step*2)\n    except:\n        pass\ngrow(n,50)"}
    addUserKnob {22 shrink l " <img src=\"F_scalem.png\">" -STARTLINE T "n=nuke.thisNode()\n\ndef shrink(node=None,step=50):\n    try:\n        if not node:\n            n=nuke.selectedNode()\n        else:\n            n=node\n            n\['xpos'].setValue(n\['xpos'].getValue()+step)\n            n\['ypos'].setValue(n\['ypos'].getValue()+step)\n            n\['bdwidth'].setValue(n\['bdwidth'].getValue()-step*2)\n            n\['bdheight'].setValue(n\['bdheight'].getValue()-step*2)\n    except:\n        pass\nshrink(n,50)"}
    addUserKnob {22 colorandom l " <img src=\"ColorBars.png\">" -STARTLINE T "import colorsys, random\nn=nuke.thisNode()\nR,G,B= colorsys.hsv_to_rgb(random.random(),.1+random.random()*.15,.15+random.random()*.15)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ) )"}
    addUserKnob {22 darkgrey l "<font color=\"#232323\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.0, 0.0, 0.14]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 lightgrey l "<font color=\"#383838\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.0, 0.0, 0.22]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 red l "<font color=\"#8c3838\" size=6>■</font>" T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.0, 0.6, 0.55]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n" +STARTLINE}
    addUserKnob {22 orange l "<font color=\"#b28e59\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.1, 0.5, 0.7]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 yellow l "<font color=\"#ccc766\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.16, 0.5, 0.8]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 green l "<font color=\"#5d995b\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.33, 0.4, 0.6]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 cyan l "<font color=\"#72998f\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.46, 0.25, 0.6]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 blue l "<font color=\"#59687f\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.6, 0.3, 0.5]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 darkblue l "<font color=\"#63628c\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.67, 0.3, 0.55]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 magenta l "<font color=\"#927a99\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.8, 0.2, 0.6]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 pink l "<font color=\"#997a89\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.92, 0.2, 0.6]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {26 S02 l " " T " "}
    addUserKnob {26 Ftools l "" +STARTLINE T "<font color=\"#1C1C1C\"> v1.2 - Franklin VFX - 2018"}
   }
   BackdropNode {
    inputs 0
    name BackdropNode2
    knobChanged "try:\n    listenedKnobs = \['text', 'position', 'name']\n    node = nuke.thisNode()\n    name = node.knob('name').value()\n    text = node.knob('text').value()\n    position = node.knob('position').value()\n    position = \"<\" + position + \">\"\n    label = node.knob('label').value()\n    \n    if nuke.thisKnob().name() in listenedKnobs:\n        if text == \"\":\n            if node.knob('position').value() == \"left\":\n                node.knob('label').setValue()\n            else:\n                node.knob('label').setValue(position + name)\n        else:\n            if node.knob('position').value() == \"left\":\n                node.knob('label').setValue(text)\n            else:\n                node.knob('label').setValue(position + text)\n                \n    elif nuke.thisKnob().name() == 'font_size':\n        fontSize = node.knob('font_size').value()\n        node.knob('note_font_size').setValue(fontSize)\nexcept:\n    pass"
    tile_color 0x927a99ff
    note_font_size 50
    xpos -473
    ypos -221
    bdwidth 435
    bdheight 786
    z_order 1
    addUserKnob {20 F_VFX l BackdropNode}
    addUserKnob {43 text l Text}
    addUserKnob {7 font_size l "Font Size" R 10 100}
    font_size 50
    addUserKnob {4 position l "" -STARTLINE M {Left Center}}
    addUserKnob {26 S01 l " " T " "}
    addUserKnob {22 grow l " <img src=\"F_scalep.png\">" -STARTLINE T "n=nuke.thisNode()\n\ndef grow(node=None,step=50):\n    try:\n        if not node:\n            n=nuke.selectedNode()\n        else:\n            n=node\n            n\['xpos'].setValue(n\['xpos'].getValue()-step)\n            n\['ypos'].setValue(n\['ypos'].getValue()-step)\n            n\['bdwidth'].setValue(n\['bdwidth'].getValue()+step*2)\n            n\['bdheight'].setValue(n\['bdheight'].getValue()+step*2)\n    except:\n        pass\ngrow(n,50)"}
    addUserKnob {22 shrink l " <img src=\"F_scalem.png\">" -STARTLINE T "n=nuke.thisNode()\n\ndef shrink(node=None,step=50):\n    try:\n        if not node:\n            n=nuke.selectedNode()\n        else:\n            n=node\n            n\['xpos'].setValue(n\['xpos'].getValue()+step)\n            n\['ypos'].setValue(n\['ypos'].getValue()+step)\n            n\['bdwidth'].setValue(n\['bdwidth'].getValue()-step*2)\n            n\['bdheight'].setValue(n\['bdheight'].getValue()-step*2)\n    except:\n        pass\nshrink(n,50)"}
    addUserKnob {22 colorandom l " <img src=\"ColorBars.png\">" -STARTLINE T "import colorsys, random\nn=nuke.thisNode()\nR,G,B= colorsys.hsv_to_rgb(random.random(),.1+random.random()*.15,.15+random.random()*.15)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ) )"}
    addUserKnob {22 darkgrey l "<font color=\"#232323\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.0, 0.0, 0.14]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 lightgrey l "<font color=\"#383838\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.0, 0.0, 0.22]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 red l "<font color=\"#8c3838\" size=6>■</font>" T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.0, 0.6, 0.55]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n" +STARTLINE}
    addUserKnob {22 orange l "<font color=\"#b28e59\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.1, 0.5, 0.7]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 yellow l "<font color=\"#ccc766\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.16, 0.5, 0.8]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 green l "<font color=\"#5d995b\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.33, 0.4, 0.6]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 cyan l "<font color=\"#72998f\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.46, 0.25, 0.6]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 blue l "<font color=\"#59687f\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.6, 0.3, 0.5]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 darkblue l "<font color=\"#63628c\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.67, 0.3, 0.55]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 magenta l "<font color=\"#927a99\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.8, 0.2, 0.6]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 pink l "<font color=\"#997a89\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.92, 0.2, 0.6]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {26 S02 l " " T " "}
    addUserKnob {26 Ftools l "" +STARTLINE T "<font color=\"#1C1C1C\"> v1.2 - Franklin VFX - 2018"}
   }
   Constant {
    inputs 0
    channels rgb
    name Constant13
    xpos -643
    ypos 714
   }
   AdjBBox {
    numpixels {{size_bbox}}
    name AdjBBox13
    xpos -643
    ypos 849
   }
   Dot {
    name Dot78
    xpos -609
    ypos 987
   }
   Axis3 {
    inputs 0
    useMatrix true
    matrix {
        {{parent.cCard3D_1.matrix} {parent.cCard3D_1.matrix} {parent.cCard3D_1.matrix} {parent.cCard3D_1.matrix}}
        {{parent.cCard3D_1.matrix} {parent.cCard3D_1.matrix} {parent.cCard3D_1.matrix} {parent.cCard3D_1.matrix}}
        {{parent.cCard3D_1.matrix} {parent.cCard3D_1.matrix} {parent.cCard3D_1.matrix} {parent.cCard3D_1.matrix}}
        {{parent.cCard3D_1.matrix} {parent.cCard3D_1.matrix} {parent.cCard3D_1.matrix} {parent.cCard3D_1.matrix}}
      }
    name Axis14
    xpos -203
    ypos -12
   }
set N14c8a230 [stack 0]
push 0
   Input {
    inputs 0
    name Input1
    xpos -130
    ypos -1242
   }
   TimeOffset {
    time_offset {{"shotnmbr==0 ? 0 : shot\[value shotnmbr]-1"}}
    time ""
    name CTimeOffset
    label "shot: \[value shotnmbr]\non frame \[value time_offset]"
    xpos -130
    ypos -927
    addUserKnob {20 User}
    addUserKnob {3 shotnmbr l "shot "}
    shotnmbr {{shotcount}}
    addUserKnob {3 ref}
    ref {{time_offset+1}}
   }
   Group {
    name DecimalTimeOffset13
    tile_color 0xafa35dff
    label "random asset"
    note_font "Bitstream Vera Sans Bold"
    xpos -130
    ypos -844
    addUserKnob {20 User}
    addUserKnob {7 decimal l "time offset (decimal)"}
    decimal {{random(shotcount*seed)}}
    addUserKnob {26 ""}
    addUserKnob {26 _1 l "" +STARTLINE T "Chris Fryer | 2020\nupdated by Yorben Otto | 2024"}
   }
    Input {
     inputs 0
     name Input1
     xpos 426
     ypos -793
    }
    TimeOffset {
     time_offset {{(-floor(parent.decimal))*(DecimalTimeOffset13.decimal<0)}}
     time ""
     name TimeOffset1
     xpos 426
     ypos -675
    }
    Dot {
     name Dot6
     xpos 460
     ypos -635
    }
set N14cc9760 [stack 0]
    Dot {
     name Dot5
     xpos 350
     ypos -635
    }
    Dot {
     name Dot7
     xpos 350
     ypos -365
    }
push $N14cc9760
    Dot {
     name Dot1
     xpos 572
     ypos -635
    }
    TimeBlur {
     divisions 2
     shutter {{(parent.decimal-(floor(parent.decimal)))*2}}
     shutteroffset start
     shuttercustomoffset 0
     name TimeBlur1
     xpos 538
     ypos -558
    }
    Dot {
     name Dot2
     xpos 572
     ypos -490
    }
push $N14cc9760
    TimeBlur {
     divisions 2
     shutter {{parent.decimal*2}}
     shutteroffset start
     shuttercustomoffset 0
     name TimeBlur8
     xpos 426
     ypos -556
    }
    Switch {
     inputs 2
     which {{parent.decimal<0}}
     name Switch1
     xpos 426
     ypos -494
    }
    Multiply {
     value {{parent.TimeBlur8.divisions}}
     name Multiply6
     xpos 426
     ypos -436
    }
    Merge2 {
     inputs 2
     operation from
     name Merge6
     xpos 426
     ypos -369
    }
set N14d0b730 [stack 0]
    Output {
     name Output1
     xpos 426
     ypos -221
    }
push $N14d0b730
push $N14d0b730
    Viewer {
     inputs 2
     frame_range 1-100
     name Viewer1
     xpos 675
     ypos -246
    }
   end_group
   NoTimeBlur {
    name NoTimeBlur13
    xpos -130
    ypos -782
   }
   Dot {
    name Dot79
    xpos -96
    ypos -463
   }
set N14daa560 [stack 0]
   Dot {
    name Dot81
    xpos -249
    ypos -463
   }
set N14daf620 [stack 0]
   Shuffle2 {
    fromInput1 {{0} B}
    fromInput2 {{0} B}
    mappings "4 rgba.blue 0 2 rgba.red 0 0 rgba.blue 0 2 rgba.green 0 1 rgba.blue 0 2 rgba.blue 0 2 black -1 -1 rgba.alpha 0 3"
    name Shuffle40
    label TOP
    xpos -283
    ypos -431
   }
   Multiply {
    value {{math_matrix.result_y_smoke(parent.CTimeOffset.ref)}}
    name Angle_reveal_top1
    label TOP
    xpos -283
    ypos -393
   }
   Transform {
    scale {{0.05+(0.05*(((parent.DecimalTimeOffset13.decimal-0.5)*2)*ScaleVariationSmoke))}}
    center {{root.width/2 x1015 2304} {root.height/2}}
    shutteroffset centred
    name Transform44
    xpos -283
    ypos -74
   }
   Card3D {
    inputs 3
    rot_order ZYX
    translate {0 0 0}
    rotate {90 0 0}
    shutteroffset centred
    name cCard3D25
    tile_color 0x7b1d1dff
    xpos -283
    ypos 89
    addUserKnob {20 User l parent}
    addUserKnob {22 python_button l "set parent" t "select parent node, and press this button to set the selected node as parent" +INVISIBLE T "n = nuke.selectedNode()\['name'].getValue()\nnuke.thisNode()\['string'].setValue(n)" +STARTLINE}
    addUserKnob {1 string l parent +INVISIBLE}
    string null
    addUserKnob {3 ref l "ref frame"}
    ref 1015
   }
   Transform {
    translate {{"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].translate.x(ref)\}]"} {"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].translate.y(ref)\}]"}}
    rotate {{"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].rotate-\[value parent_gun].rotate(ref)\}]"}}
    scale {{"\[if \{\[value parent_gun]==\"null\"\} \{return 1\} \{return 1+(\[value parent_gun].scale-\[value parent_gun].scale(ref))\}]"}}
    center {{"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].center.x(ref)\}]"} {"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].center.y(ref)\}]"}}
    name Transform_GUNMatchMove37
    xpos -283
    ypos 201
    addUserKnob {20 User l parent}
    addUserKnob {3 ref}
    ref {{parent.CTimeOffset.ref}}
   }
   NoTimeBlur {
    name NoTimeBlur3
    xpos -283
    ypos 259
   }
   Transform {
    translate {{"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].translate.x-\[value parent_env].translate.x(ref)\}]"} {"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].translate.y-\[value parent_env].translate.y(ref)\}]"}}
    rotate {{"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].rotate-\[value parent_env].rotate(ref)\}]"}}
    scale {{"\[if \{\[value parent_gun]==\"null\"\} \{return 1\} \{return 1+(\[value parent_env].scale-\[value parent_env].scale(ref))\}]"}}
    center {{"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].center.x(ref)\}]"} {"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].center.y(ref)\}]"}}
    motionblur 0.2
    shutter {{SmokeMB*0.5}}
    shutteroffset centred
    name Transform_ENVMatchMove37
    label "\n"
    xpos -283
    ypos 333
    addUserKnob {20 User l parent}
    addUserKnob {3 ref}
    ref {{parent.CTimeOffset.ref}}
   }
   Transform {
    translate {{"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return -((root.width/2)-(\[value parent_gun].center.x(1)+\[value parent_gun].translate.x(1)))\}]"} {"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return -((root.height/2)-(\[value parent_gun].center.y(1)+\[value parent_gun].translate.y(1)))\}]"}}
    name Transform_GUNMatchMove6
    label "alignment correction"
    xpos -283
    ypos 422
    addUserKnob {20 User l parent}
    addUserKnob {22 python_button l "set parent" t "select parent node, and press this button to set the selected node as parent" T "n = nuke.selectedNode()\['name'].getValue()\nnuke.thisNode()\['string'].setValue(n)" +STARTLINE}
    addUserKnob {1 string l parent}
    string Transform_MatchMove10
    addUserKnob {3 ref +INVISIBLE}
    ref {{parent.cCard3D_8.ref}}
   }
   Shuffle2 {
    fromInput1 {{0} B}
    fromInput2 {{0} B}
    mappings "4 rgba.red 0 0 rgba.red 0 0 rgba.green 0 1 rgba.green 0 1 rgba.blue 0 2 rgba.blue 0 2 rgba.blue 0 2 rgba.alpha 0 3"
    name Shuffle2
    xpos -283
    ypos 473
   }
   Remove {
    operation keep
    channels rgba
    name Remove1
    xpos -283
    ypos 512
   }
push 0
   Switch {
    inputs 2
    which {{parent.Angle_reveal_top1.value>0.001}}
    name Switch1
    xpos -283
    ypos 660
   }
   Dot {
    name Dot82
    xpos -249
    ypos 705
   }
push 0
push $N14c8a230
push 0
push $N14daf620
   Dot {
    name Dot80
    xpos -402
    ypos -463
   }
   Shuffle2 {
    fromInput1 {{0} B}
    fromInput2 {{0} B}
    mappings "4 rgba.red 0 0 rgba.red 0 0 rgba.red 0 0 rgba.green 0 1 rgba.red 0 0 rgba.blue 0 2 black -1 -1 rgba.alpha 0 3"
    name Shuffle41
    label FRONT
    xpos -436
    ypos -431
   }
   Multiply {
    value {{math_matrix.result_x_smoke(parent.CTimeOffset.ref)}}
    name Angle_reveal_front1
    label FRONT
    xpos -436
    ypos -393
   }
   Transform {
    scale {{0.05+(0.05*(((parent.DecimalTimeOffset13.decimal-0.5)*2)*ScaleVariationSmoke))}}
    center {{root.width/2 x1015 2304} {root.height/2}}
    shutteroffset centred
    name Transform45
    xpos -436
    ypos -73
   }
   Card3D {
    inputs 3
    rot_order ZYX
    translate {0 0 0}
    rotate {0 90 0}
    shutteroffset centred
    name cCard3D26
    tile_color 0x7b1d1dff
    xpos -436
    ypos 93
    addUserKnob {20 User l parent}
    addUserKnob {22 python_button l "set parent" t "select parent node, and press this button to set the selected node as parent" +INVISIBLE T "n = nuke.selectedNode()\['name'].getValue()\nnuke.thisNode()\['string'].setValue(n)" +STARTLINE}
    addUserKnob {1 string l parent +INVISIBLE}
    string null
    addUserKnob {3 ref l "ref frame"}
    ref 1015
   }
   Transform {
    translate {{"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].translate.x(ref)\}]"} {"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].translate.y(ref)\}]"}}
    rotate {{"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].rotate-\[value parent_gun].rotate(ref)\}]"}}
    scale {{"\[if \{\[value parent_gun]==\"null\"\} \{return 1\} \{return 1+(\[value parent_gun].scale-\[value parent_gun].scale(ref))\}]"}}
    center {{"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].center.x(ref)\}]"} {"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].center.y(ref)\}]"}}
    name Transform_GUNMatchMove38
    label "\n"
    xpos -436
    ypos 203
    addUserKnob {20 User l parent}
    addUserKnob {3 ref}
    ref {{parent.CTimeOffset.ref}}
   }
   NoTimeBlur {
    name NoTimeBlur2
    xpos -436
    ypos 259
   }
   Transform {
    translate {{"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].translate.x-\[value parent_env].translate.x(ref)\}]"} {"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].translate.y-\[value parent_env].translate.y(ref)\}]"}}
    rotate {{"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].rotate-\[value parent_env].rotate(ref)\}]"}}
    scale {{"\[if \{\[value parent_gun]==\"null\"\} \{return 1\} \{return 1+(\[value parent_env].scale-\[value parent_env].scale(ref))\}]"}}
    center {{"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].center.x(ref)\}]"} {"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].center.y(ref)\}]"}}
    motionblur 0.2
    shutter {{SmokeMB*0.5}}
    shutteroffset centred
    name Transform_ENVMatchMove38
    xpos -436
    ypos 332
    addUserKnob {20 User l parent}
    addUserKnob {3 ref}
    ref {{parent.CTimeOffset.ref}}
   }
   Transform {
    translate {{"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return -((root.width/2)-(\[value parent_gun].center.x(1)+\[value parent_gun].translate.x(1)))\}]"} {"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return -((root.height/2)-(\[value parent_gun].center.y(1)+\[value parent_gun].translate.y(1)))\}]"}}
    name Transform_GUNMatchMove7
    label "alignment correction"
    xpos -436
    ypos 421
    addUserKnob {20 User l parent}
    addUserKnob {22 python_button l "set parent" t "select parent node, and press this button to set the selected node as parent" T "n = nuke.selectedNode()\['name'].getValue()\nnuke.thisNode()\['string'].setValue(n)" +STARTLINE}
    addUserKnob {1 string l parent}
    string Transform_MatchMove10
    addUserKnob {3 ref +INVISIBLE}
    ref {{parent.cCard3D_8.ref}}
   }
   Shuffle2 {
    fromInput1 {{0} B}
    fromInput2 {{0} B}
    mappings "4 rgba.red 0 0 rgba.red 0 0 rgba.green 0 1 rgba.green 0 1 rgba.blue 0 2 rgba.blue 0 2 rgba.blue 0 2 rgba.alpha 0 3"
    name Shuffle3
    xpos -436
    ypos 472
   }
   Remove {
    operation keep
    channels rgba
    name Remove2
    xpos -436
    ypos 511
   }
push 0
   Switch {
    inputs 2
    which {{parent.Angle_reveal_front1.value>0.001}}
    name Switch2
    xpos -436
    ypos 660
   }
   Dot {
    name Dot83
    xpos -402
    ypos 735
   }
push $N14daa560
   Shuffle2 {
    fromInput1 {{0} B}
    fromInput2 {{0} B}
    mappings "4 rgba.green 0 1 rgba.red 0 0 rgba.green 0 1 rgba.green 0 1 rgba.green 0 1 rgba.blue 0 2 black -1 -1 rgba.alpha 0 3"
    name Shuffle42
    label SIDE
    xpos -130
    ypos -425
   }
   Multiply {
    value {{math_matrix.result_z_smoke(parent.CTimeOffset.ref)}}
    name Angle_reveal_side1
    label SIDE
    xpos -130
    ypos -387
   }
   Transform {
    scale {{0.05+(0.05*(((parent.DecimalTimeOffset13.decimal-0.5)*2)*ScaleVariationSmoke))}}
    center {{root.width/2 x1015 2304} {root.height/2}}
    shutteroffset centred
    name Transform46
    xpos -130
    ypos -77
   }
   Card3D {
    translate {{"\[if \{\[exists  parent.parent.parent.input0]\} \{return \[value \[topnode parent.parent.parent.input0].name].translate.x(ref)\} \{return 0\}]"} {"\[if \{\[exists  parent.parent.parent.input0]\} \{return \[value \[topnode parent.parent.parent.input0].name].translate.y(ref)\} \{return 0\}]"} {"\[if \{\[exists  parent.parent.parent.input0]\} \{return \[value \[topnode parent.parent.parent.input0].name].translate.z(ref)\} \{return -1\}]"}}
    rotate {{"\[if \{\[exists  parent.parent.parent.input0]\} \{return \[value \[topnode parent.parent.parent.input0].name].rotate.x(ref)\} \{return 0\}]"} {"\[if \{\[exists  parent.parent.parent.input0]\} \{return \[value \[topnode parent.parent.parent.input0].name].rotate.y(ref)\} \{return 0\}]"} {"\[if \{\[exists  parent.parent.parent.input0]\} \{return \[value \[topnode parent.parent.parent.input0].name].rotate.z(ref)\} \{return 0\}]"}}
    scaling {{"\[if \{\[exists  parent.parent.parent.input0]\} \{return \[value \[topnode parent.parent.parent.input0].name].scaling.x(ref)\} \{return 1\}]"} {"\[if \{\[exists  parent.parent.parent.input0]\} \{return \[value \[topnode parent.parent.parent.input0].name].scaling.y(ref)\} \{return 1\}]"} {"\[if \{\[exists  parent.parent.parent.input0]\} \{return \[value \[topnode parent.parent.parent.input0].name].scaling.z(ref)\} \{return 1\}]"}}
    uniform_scale {{"\[if \{\[exists  parent.parent.parent.input0]\} \{return (\[value \[topnode parent.parent.parent.input0].name].uniform_scale(ref)*25)\} \{return 25\}]"}}
    shutteroffset centred
    name cCard3D_1
    tile_color 0x7b1d1dff
    label "ref frame: \[value ref]"
    selected true
    xpos -130
    ypos 80
    addUserKnob {20 User l parent}
    addUserKnob {22 python_button l "set parent" t "select parent node, and press this button to set the selected node as parent" +INVISIBLE T "n = nuke.selectedNode()\['name'].getValue()\nnuke.thisNode()\['string'].setValue(n)" +STARTLINE}
    addUserKnob {1 string l parent +INVISIBLE}
    string null
    addUserKnob {3 id l "id number"}
    id {{parent.CTimeOffset.shotnmbr}}
    addUserKnob {3 ref l "ref frame"}
    ref {{parent.CTimeOffset.ref}}
   }
   Transform {
    translate {{"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].translate.x(ref)\}]"} {"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].translate.y(ref)\}]"}}
    rotate {{"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].rotate-\[value parent_gun].rotate(ref)\}]"}}
    scale {{"\[if \{\[value parent_gun]==\"null\"\} \{return 1\} \{return 1+(\[value parent_gun].scale-\[value parent_gun].scale(ref))\}]"}}
    center {{"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].center.x(ref)\}]"} {"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].center.y(ref)\}]"}}
    name Transform_GUNMatchMove39
    label "\n"
    xpos -130
    ypos 201
    addUserKnob {20 User l parent}
    addUserKnob {3 ref}
    ref {{parent.CTimeOffset.ref}}
   }
   NoTimeBlur {
    name NoTimeBlur4
    xpos -130
    ypos 258
   }
   Transform {
    translate {{"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].translate.x-\[value parent_env].translate.x(ref)\}]"} {"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].translate.y-\[value parent_env].translate.y(ref)\}]"}}
    rotate {{"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].rotate-\[value parent_env].rotate(ref)\}]"}}
    scale {{"\[if \{\[value parent_gun]==\"null\"\} \{return 1\} \{return 1+(\[value parent_env].scale-\[value parent_env].scale(ref))\}]"}}
    center {{"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].center.x(ref)\}]"} {"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].center.y(ref)\}]"}}
    motionblur 0.2
    shutter {{SmokeMB*0.5}}
    shutteroffset centred
    name Transform_ENVMatchMove39
    xpos -130
    ypos 336
    addUserKnob {20 User l parent}
    addUserKnob {3 ref}
    ref {{parent.CTimeOffset.ref}}
   }
   Transform {
    translate {{"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return -((root.width/2)-(\[value parent_gun].center.x(1)+\[value parent_gun].translate.x(1)))\}]"} {"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return -((root.height/2)-(\[value parent_gun].center.y(1)+\[value parent_gun].translate.y(1)))\}]"}}
    name Transform_GUNMatchMove5
    label "alignment correction"
    xpos -130
    ypos 417
    addUserKnob {20 User l parent}
    addUserKnob {22 python_button l "set parent" t "select parent node, and press this button to set the selected node as parent" T "n = nuke.selectedNode()\['name'].getValue()\nnuke.thisNode()\['string'].setValue(n)" +STARTLINE}
    addUserKnob {1 string l parent}
    string Transform_MatchMove10
    addUserKnob {3 ref +INVISIBLE}
    ref {{parent.cCard3D_8.ref}}
   }
   Shuffle2 {
    fromInput1 {{0} B}
    fromInput2 {{0} B}
    mappings "4 rgba.red 0 0 rgba.red 0 0 rgba.green 0 1 rgba.green 0 1 rgba.blue 0 2 rgba.blue 0 2 rgba.blue 0 2 rgba.alpha 0 3"
    name Shuffle1
    xpos -130
    ypos 465
   }
   Remove {
    operation keep
    channels rgba
    name Remove39
    xpos -130
    ypos 504
   }
push 0
   Switch {
    inputs 2
    which {{parent.Angle_reveal_side1.value>0.001}}
    name Switch3
    xpos -130
    ypos 658
   }
   Merge2 {
    inputs 3+1
    operation max
    name Merge28
    xpos -130
    ypos 731
   }
   Merge2 {
    inputs 2
    operation plus
    bbox intersection
    name Merge29
    xpos -130
    ypos 983
   }
push 0
   Switch {
    inputs 2
    which {{"shot\[value count]==0?0:frame>=shot\[value count]"}}
    name cSwitch_13
    xpos -130
    ypos 1065
    addUserKnob {20 User}
    addUserKnob {3 count}
    count {{parent.CTimeOffset.shotnmbr}}
   }
   Output {
    name Output1
    xpos -130
    ypos 1323
   }
  end_group
push $N14c4e7e0
  Dot {
   name Dot5
   xpos 309
   ypos -711
  }
set N14f97e70 [stack 0]
  Group {
   name gunshot5
   label "shot: \[value shotcount]\non frame: \[value shotstart]\n"
   xpos 275
   ypos -357
   addUserKnob {20 User}
   addUserKnob {3 shotcount l shot}
   shotcount 5
   addUserKnob {3 shotstart l frame +INVISIBLE}
   shotstart {{"shotcount==0 ? 0 : shot\[value shotcount]-1" i}}
  }
   BackdropNode {
    inputs 0
    name BackdropNode19
    knobChanged "try:\n    listenedKnobs = \['text', 'position', 'name']\n    node = nuke.thisNode()\n    name = node.knob('name').value()\n    text = node.knob('text').value()\n    position = node.knob('position').value()\n    position = \"<\" + position + \">\"\n    label = node.knob('label').value()\n    \n    if nuke.thisKnob().name() in listenedKnobs:\n        if text == \"\":\n            if node.knob('position').value() == \"left\":\n                node.knob('label').setValue()\n            else:\n                node.knob('label').setValue(position + name)\n        else:\n            if node.knob('position').value() == \"left\":\n                node.knob('label').setValue(text)\n            else:\n                node.knob('label').setValue(position + text)\n                \n    elif nuke.thisKnob().name() == 'font_size':\n        fontSize = node.knob('font_size').value()\n        node.knob('note_font_size').setValue(fontSize)\nexcept:\n    pass"
    tile_color 0x232323ff
    label "<Left><h2> Gunshot"
    note_font_size 31.5
    xpos -693
    ypos -554
    bdwidth 876
    bdheight 1682
    addUserKnob {20 F_VFX l BackdropNode}
    addUserKnob {43 text l Text}
    text "<h2> Gunshot"
    addUserKnob {7 font_size l "Font Size" R 10 100}
    font_size 31.5
    addUserKnob {4 position l "" -STARTLINE M {Left Center}}
    addUserKnob {26 S01 l " " T " "}
    addUserKnob {22 grow l " <img src=\"F_scalep.png\">" -STARTLINE T "n=nuke.thisNode()\n\ndef grow(node=None,step=50):\n    try:\n        if not node:\n            n=nuke.selectedNode()\n        else:\n            n=node\n            n\['xpos'].setValue(n\['xpos'].getValue()-step)\n            n\['ypos'].setValue(n\['ypos'].getValue()-step)\n            n\['bdwidth'].setValue(n\['bdwidth'].getValue()+step*2)\n            n\['bdheight'].setValue(n\['bdheight'].getValue()+step*2)\n    except:\n        pass\ngrow(n,50)"}
    addUserKnob {22 shrink l " <img src=\"F_scalem.png\">" -STARTLINE T "n=nuke.thisNode()\n\ndef shrink(node=None,step=50):\n    try:\n        if not node:\n            n=nuke.selectedNode()\n        else:\n            n=node\n            n\['xpos'].setValue(n\['xpos'].getValue()+step)\n            n\['ypos'].setValue(n\['ypos'].getValue()+step)\n            n\['bdwidth'].setValue(n\['bdwidth'].getValue()-step*2)\n            n\['bdheight'].setValue(n\['bdheight'].getValue()-step*2)\n    except:\n        pass\nshrink(n,50)"}
    addUserKnob {22 colorandom l " <img src=\"ColorBars.png\">" -STARTLINE T "import colorsys, random\nn=nuke.thisNode()\nR,G,B= colorsys.hsv_to_rgb(random.random(),.1+random.random()*.15,.15+random.random()*.15)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ) )"}
    addUserKnob {22 darkgrey l "<font color=\"#232323\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.0, 0.0, 0.14]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 lightgrey l "<font color=\"#383838\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.0, 0.0, 0.22]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 red l "<font color=\"#8c3838\" size=6>■</font>" T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.0, 0.6, 0.55]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n" +STARTLINE}
    addUserKnob {22 orange l "<font color=\"#b28e59\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.1, 0.5, 0.7]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 yellow l "<font color=\"#ccc766\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.16, 0.5, 0.8]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 green l "<font color=\"#5d995b\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.33, 0.4, 0.6]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 cyan l "<font color=\"#72998f\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.46, 0.25, 0.6]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 blue l "<font color=\"#59687f\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.6, 0.3, 0.5]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 darkblue l "<font color=\"#63628c\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.67, 0.3, 0.55]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 magenta l "<font color=\"#927a99\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.8, 0.2, 0.6]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 pink l "<font color=\"#997a89\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.92, 0.2, 0.6]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {26 S02 l " " T " "}
    addUserKnob {26 Ftools l "" +STARTLINE T "<font color=\"#1C1C1C\"> v1.2 - Franklin VFX - 2018"}
   }
   BackdropNode {
    inputs 0
    name BackdropNode2
    knobChanged "try:\n    listenedKnobs = \['text', 'position', 'name']\n    node = nuke.thisNode()\n    name = node.knob('name').value()\n    text = node.knob('text').value()\n    position = node.knob('position').value()\n    position = \"<\" + position + \">\"\n    label = node.knob('label').value()\n    \n    if nuke.thisKnob().name() in listenedKnobs:\n        if text == \"\":\n            if node.knob('position').value() == \"left\":\n                node.knob('label').setValue()\n            else:\n                node.knob('label').setValue(position + name)\n        else:\n            if node.knob('position').value() == \"left\":\n                node.knob('label').setValue(text)\n            else:\n                node.knob('label').setValue(position + text)\n                \n    elif nuke.thisKnob().name() == 'font_size':\n        fontSize = node.knob('font_size').value()\n        node.knob('note_font_size').setValue(fontSize)\nexcept:\n    pass"
    tile_color 0x927a99ff
    note_font_size 50
    xpos -473
    ypos -221
    bdwidth 435
    bdheight 786
    z_order 1
    addUserKnob {20 F_VFX l BackdropNode}
    addUserKnob {43 text l Text}
    addUserKnob {7 font_size l "Font Size" R 10 100}
    font_size 50
    addUserKnob {4 position l "" -STARTLINE M {Left Center}}
    addUserKnob {26 S01 l " " T " "}
    addUserKnob {22 grow l " <img src=\"F_scalep.png\">" -STARTLINE T "n=nuke.thisNode()\n\ndef grow(node=None,step=50):\n    try:\n        if not node:\n            n=nuke.selectedNode()\n        else:\n            n=node\n            n\['xpos'].setValue(n\['xpos'].getValue()-step)\n            n\['ypos'].setValue(n\['ypos'].getValue()-step)\n            n\['bdwidth'].setValue(n\['bdwidth'].getValue()+step*2)\n            n\['bdheight'].setValue(n\['bdheight'].getValue()+step*2)\n    except:\n        pass\ngrow(n,50)"}
    addUserKnob {22 shrink l " <img src=\"F_scalem.png\">" -STARTLINE T "n=nuke.thisNode()\n\ndef shrink(node=None,step=50):\n    try:\n        if not node:\n            n=nuke.selectedNode()\n        else:\n            n=node\n            n\['xpos'].setValue(n\['xpos'].getValue()+step)\n            n\['ypos'].setValue(n\['ypos'].getValue()+step)\n            n\['bdwidth'].setValue(n\['bdwidth'].getValue()-step*2)\n            n\['bdheight'].setValue(n\['bdheight'].getValue()-step*2)\n    except:\n        pass\nshrink(n,50)"}
    addUserKnob {22 colorandom l " <img src=\"ColorBars.png\">" -STARTLINE T "import colorsys, random\nn=nuke.thisNode()\nR,G,B= colorsys.hsv_to_rgb(random.random(),.1+random.random()*.15,.15+random.random()*.15)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ) )"}
    addUserKnob {22 darkgrey l "<font color=\"#232323\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.0, 0.0, 0.14]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 lightgrey l "<font color=\"#383838\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.0, 0.0, 0.22]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 red l "<font color=\"#8c3838\" size=6>■</font>" T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.0, 0.6, 0.55]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n" +STARTLINE}
    addUserKnob {22 orange l "<font color=\"#b28e59\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.1, 0.5, 0.7]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 yellow l "<font color=\"#ccc766\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.16, 0.5, 0.8]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 green l "<font color=\"#5d995b\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.33, 0.4, 0.6]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 cyan l "<font color=\"#72998f\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.46, 0.25, 0.6]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 blue l "<font color=\"#59687f\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.6, 0.3, 0.5]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 darkblue l "<font color=\"#63628c\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.67, 0.3, 0.55]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 magenta l "<font color=\"#927a99\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.8, 0.2, 0.6]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 pink l "<font color=\"#997a89\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.92, 0.2, 0.6]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {26 S02 l " " T " "}
    addUserKnob {26 Ftools l "" +STARTLINE T "<font color=\"#1C1C1C\"> v1.2 - Franklin VFX - 2018"}
   }
   Constant {
    inputs 0
    channels rgb
    name Constant13
    xpos -643
    ypos 714
   }
   AdjBBox {
    numpixels {{size_bbox}}
    name AdjBBox13
    xpos -643
    ypos 849
   }
   Dot {
    name Dot78
    xpos -609
    ypos 987
   }
   Axis3 {
    inputs 0
    useMatrix true
    matrix {
        {{parent.cCard3D_1.matrix} {parent.cCard3D_1.matrix} {parent.cCard3D_1.matrix} {parent.cCard3D_1.matrix}}
        {{parent.cCard3D_1.matrix} {parent.cCard3D_1.matrix} {parent.cCard3D_1.matrix} {parent.cCard3D_1.matrix}}
        {{parent.cCard3D_1.matrix} {parent.cCard3D_1.matrix} {parent.cCard3D_1.matrix} {parent.cCard3D_1.matrix}}
        {{parent.cCard3D_1.matrix} {parent.cCard3D_1.matrix} {parent.cCard3D_1.matrix} {parent.cCard3D_1.matrix}}
      }
    name Axis14
    xpos -203
    ypos -12
   }
set N14fd38b0 [stack 0]
push 0
   Input {
    inputs 0
    name Input1
    xpos -130
    ypos -1242
   }
   TimeOffset {
    time_offset {{"shotnmbr==0 ? 0 : shot\[value shotnmbr]-1"}}
    time ""
    name CTimeOffset
    label "shot: \[value shotnmbr]\non frame \[value time_offset]"
    xpos -130
    ypos -927
    addUserKnob {20 User}
    addUserKnob {3 shotnmbr l "shot "}
    shotnmbr {{shotcount}}
    addUserKnob {3 ref}
    ref {{time_offset+1}}
   }
   Group {
    name DecimalTimeOffset13
    tile_color 0xafa35dff
    label "random asset"
    note_font "Bitstream Vera Sans Bold"
    xpos -130
    ypos -844
    addUserKnob {20 User}
    addUserKnob {7 decimal l "time offset (decimal)"}
    decimal {{random(shotcount*seed)}}
    addUserKnob {26 ""}
    addUserKnob {26 _1 l "" +STARTLINE T "Chris Fryer | 2020\nupdated by Yorben Otto | 2024"}
   }
    Input {
     inputs 0
     name Input1
     xpos 426
     ypos -793
    }
    TimeOffset {
     time_offset {{(-floor(parent.decimal))*(DecimalTimeOffset13.decimal<0)}}
     time ""
     name TimeOffset1
     xpos 426
     ypos -675
    }
    Dot {
     name Dot6
     xpos 460
     ypos -635
    }
set N15012e00 [stack 0]
    Dot {
     name Dot5
     xpos 350
     ypos -635
    }
    Dot {
     name Dot7
     xpos 350
     ypos -365
    }
push $N15012e00
    Dot {
     name Dot1
     xpos 572
     ypos -635
    }
    TimeBlur {
     divisions 2
     shutter {{(parent.decimal-(floor(parent.decimal)))*2}}
     shutteroffset start
     shuttercustomoffset 0
     name TimeBlur1
     xpos 538
     ypos -558
    }
    Dot {
     name Dot2
     xpos 572
     ypos -490
    }
push $N15012e00
    TimeBlur {
     divisions 2
     shutter {{parent.decimal*2}}
     shutteroffset start
     shuttercustomoffset 0
     name TimeBlur8
     xpos 426
     ypos -556
    }
    Switch {
     inputs 2
     which {{parent.decimal<0}}
     name Switch1
     xpos 426
     ypos -494
    }
    Multiply {
     value {{parent.TimeBlur8.divisions}}
     name Multiply6
     xpos 426
     ypos -436
    }
    Merge2 {
     inputs 2
     operation from
     name Merge6
     xpos 426
     ypos -369
    }
set N15054dd0 [stack 0]
    Output {
     name Output1
     xpos 426
     ypos -221
    }
push $N15054dd0
push $N15054dd0
    Viewer {
     inputs 2
     frame_range 1-100
     name Viewer1
     xpos 675
     ypos -246
    }
   end_group
   NoTimeBlur {
    name NoTimeBlur13
    xpos -130
    ypos -782
   }
   Dot {
    name Dot79
    xpos -96
    ypos -463
   }
set N150f3c10 [stack 0]
   Dot {
    name Dot81
    xpos -249
    ypos -463
   }
set N150f8cd0 [stack 0]
   Shuffle2 {
    fromInput1 {{0} B}
    fromInput2 {{0} B}
    mappings "4 rgba.blue 0 2 rgba.red 0 0 rgba.blue 0 2 rgba.green 0 1 rgba.blue 0 2 rgba.blue 0 2 black -1 -1 rgba.alpha 0 3"
    name Shuffle40
    label TOP
    xpos -283
    ypos -431
   }
   Multiply {
    value {{math_matrix.result_y_smoke(parent.CTimeOffset.ref)}}
    name Angle_reveal_top1
    label TOP
    xpos -283
    ypos -393
   }
   Transform {
    scale {{0.05+(0.05*(((parent.DecimalTimeOffset13.decimal-0.5)*2)*ScaleVariationSmoke))}}
    center {{root.width/2 x1015 2304} {root.height/2}}
    shutteroffset centred
    name Transform44
    xpos -283
    ypos -74
   }
   Card3D {
    inputs 3
    rot_order ZYX
    translate {0 0 0}
    rotate {90 0 0}
    shutteroffset centred
    name cCard3D25
    tile_color 0x7b1d1dff
    xpos -283
    ypos 89
    addUserKnob {20 User l parent}
    addUserKnob {22 python_button l "set parent" t "select parent node, and press this button to set the selected node as parent" +INVISIBLE T "n = nuke.selectedNode()\['name'].getValue()\nnuke.thisNode()\['string'].setValue(n)" +STARTLINE}
    addUserKnob {1 string l parent +INVISIBLE}
    string null
    addUserKnob {3 ref l "ref frame"}
    ref 1015
   }
   Transform {
    translate {{"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].translate.x(ref)\}]"} {"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].translate.y(ref)\}]"}}
    rotate {{"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].rotate-\[value parent_gun].rotate(ref)\}]"}}
    scale {{"\[if \{\[value parent_gun]==\"null\"\} \{return 1\} \{return 1+(\[value parent_gun].scale-\[value parent_gun].scale(ref))\}]"}}
    center {{"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].center.x(ref)\}]"} {"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].center.y(ref)\}]"}}
    name Transform_GUNMatchMove37
    xpos -283
    ypos 201
    addUserKnob {20 User l parent}
    addUserKnob {3 ref}
    ref {{parent.CTimeOffset.ref}}
   }
   NoTimeBlur {
    name NoTimeBlur3
    xpos -283
    ypos 259
   }
   Transform {
    translate {{"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].translate.x-\[value parent_env].translate.x(ref)\}]"} {"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].translate.y-\[value parent_env].translate.y(ref)\}]"}}
    rotate {{"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].rotate-\[value parent_env].rotate(ref)\}]"}}
    scale {{"\[if \{\[value parent_gun]==\"null\"\} \{return 1\} \{return 1+(\[value parent_env].scale-\[value parent_env].scale(ref))\}]"}}
    center {{"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].center.x(ref)\}]"} {"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].center.y(ref)\}]"}}
    motionblur 0.2
    shutter {{SmokeMB*0.5}}
    shutteroffset centred
    name Transform_ENVMatchMove37
    label "\n"
    xpos -283
    ypos 333
    addUserKnob {20 User l parent}
    addUserKnob {3 ref}
    ref {{parent.CTimeOffset.ref}}
   }
   Transform {
    translate {{"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return -((root.width/2)-(\[value parent_gun].center.x(1)+\[value parent_gun].translate.x(1)))\}]"} {"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return -((root.height/2)-(\[value parent_gun].center.y(1)+\[value parent_gun].translate.y(1)))\}]"}}
    name Transform_GUNMatchMove6
    label "alignment correction"
    xpos -283
    ypos 422
    addUserKnob {20 User l parent}
    addUserKnob {22 python_button l "set parent" t "select parent node, and press this button to set the selected node as parent" T "n = nuke.selectedNode()\['name'].getValue()\nnuke.thisNode()\['string'].setValue(n)" +STARTLINE}
    addUserKnob {1 string l parent}
    string Transform_MatchMove10
    addUserKnob {3 ref +INVISIBLE}
    ref {{parent.cCard3D_8.ref}}
   }
   Shuffle2 {
    fromInput1 {{0} B}
    fromInput2 {{0} B}
    mappings "4 rgba.red 0 0 rgba.red 0 0 rgba.green 0 1 rgba.green 0 1 rgba.blue 0 2 rgba.blue 0 2 rgba.blue 0 2 rgba.alpha 0 3"
    name Shuffle2
    xpos -283
    ypos 473
   }
   Remove {
    operation keep
    channels rgba
    name Remove1
    xpos -283
    ypos 512
   }
push 0
   Switch {
    inputs 2
    which {{parent.Angle_reveal_top1.value>0.001}}
    name Switch1
    xpos -283
    ypos 660
   }
   Dot {
    name Dot82
    xpos -249
    ypos 705
   }
push 0
push $N14fd38b0
push 0
push $N150f8cd0
   Dot {
    name Dot80
    xpos -402
    ypos -463
   }
   Shuffle2 {
    fromInput1 {{0} B}
    fromInput2 {{0} B}
    mappings "4 rgba.red 0 0 rgba.red 0 0 rgba.red 0 0 rgba.green 0 1 rgba.red 0 0 rgba.blue 0 2 black -1 -1 rgba.alpha 0 3"
    name Shuffle41
    label FRONT
    xpos -436
    ypos -431
   }
   Multiply {
    value {{math_matrix.result_x_smoke(parent.CTimeOffset.ref)}}
    name Angle_reveal_front1
    label FRONT
    xpos -436
    ypos -393
   }
   Transform {
    scale {{0.05+(0.05*(((parent.DecimalTimeOffset13.decimal-0.5)*2)*ScaleVariationSmoke))}}
    center {{root.width/2 x1015 2304} {root.height/2}}
    shutteroffset centred
    name Transform45
    xpos -436
    ypos -73
   }
   Card3D {
    inputs 3
    rot_order ZYX
    translate {0 0 0}
    rotate {0 90 0}
    shutteroffset centred
    name cCard3D26
    tile_color 0x7b1d1dff
    xpos -436
    ypos 93
    addUserKnob {20 User l parent}
    addUserKnob {22 python_button l "set parent" t "select parent node, and press this button to set the selected node as parent" +INVISIBLE T "n = nuke.selectedNode()\['name'].getValue()\nnuke.thisNode()\['string'].setValue(n)" +STARTLINE}
    addUserKnob {1 string l parent +INVISIBLE}
    string null
    addUserKnob {3 ref l "ref frame"}
    ref 1015
   }
   Transform {
    translate {{"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].translate.x(ref)\}]"} {"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].translate.y(ref)\}]"}}
    rotate {{"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].rotate-\[value parent_gun].rotate(ref)\}]"}}
    scale {{"\[if \{\[value parent_gun]==\"null\"\} \{return 1\} \{return 1+(\[value parent_gun].scale-\[value parent_gun].scale(ref))\}]"}}
    center {{"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].center.x(ref)\}]"} {"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].center.y(ref)\}]"}}
    name Transform_GUNMatchMove38
    label "\n"
    xpos -436
    ypos 203
    addUserKnob {20 User l parent}
    addUserKnob {3 ref}
    ref {{parent.CTimeOffset.ref}}
   }
   NoTimeBlur {
    name NoTimeBlur2
    xpos -436
    ypos 259
   }
   Transform {
    translate {{"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].translate.x-\[value parent_env].translate.x(ref)\}]"} {"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].translate.y-\[value parent_env].translate.y(ref)\}]"}}
    rotate {{"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].rotate-\[value parent_env].rotate(ref)\}]"}}
    scale {{"\[if \{\[value parent_gun]==\"null\"\} \{return 1\} \{return 1+(\[value parent_env].scale-\[value parent_env].scale(ref))\}]"}}
    center {{"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].center.x(ref)\}]"} {"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].center.y(ref)\}]"}}
    motionblur 0.2
    shutter {{SmokeMB*0.5}}
    shutteroffset centred
    name Transform_ENVMatchMove38
    xpos -436
    ypos 332
    addUserKnob {20 User l parent}
    addUserKnob {3 ref}
    ref {{parent.CTimeOffset.ref}}
   }
   Transform {
    translate {{"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return -((root.width/2)-(\[value parent_gun].center.x(1)+\[value parent_gun].translate.x(1)))\}]"} {"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return -((root.height/2)-(\[value parent_gun].center.y(1)+\[value parent_gun].translate.y(1)))\}]"}}
    name Transform_GUNMatchMove7
    label "alignment correction"
    xpos -436
    ypos 421
    addUserKnob {20 User l parent}
    addUserKnob {22 python_button l "set parent" t "select parent node, and press this button to set the selected node as parent" T "n = nuke.selectedNode()\['name'].getValue()\nnuke.thisNode()\['string'].setValue(n)" +STARTLINE}
    addUserKnob {1 string l parent}
    string Transform_MatchMove10
    addUserKnob {3 ref +INVISIBLE}
    ref {{parent.cCard3D_8.ref}}
   }
   Shuffle2 {
    fromInput1 {{0} B}
    fromInput2 {{0} B}
    mappings "4 rgba.red 0 0 rgba.red 0 0 rgba.green 0 1 rgba.green 0 1 rgba.blue 0 2 rgba.blue 0 2 rgba.blue 0 2 rgba.alpha 0 3"
    name Shuffle3
    xpos -436
    ypos 472
   }
   Remove {
    operation keep
    channels rgba
    name Remove2
    xpos -436
    ypos 511
   }
push 0
   Switch {
    inputs 2
    which {{parent.Angle_reveal_front1.value>0.001}}
    name Switch2
    xpos -436
    ypos 660
   }
   Dot {
    name Dot83
    xpos -402
    ypos 735
   }
push $N150f3c10
   Shuffle2 {
    fromInput1 {{0} B}
    fromInput2 {{0} B}
    mappings "4 rgba.green 0 1 rgba.red 0 0 rgba.green 0 1 rgba.green 0 1 rgba.green 0 1 rgba.blue 0 2 black -1 -1 rgba.alpha 0 3"
    name Shuffle42
    label SIDE
    xpos -130
    ypos -425
   }
   Multiply {
    value {{math_matrix.result_z_smoke(parent.CTimeOffset.ref)}}
    name Angle_reveal_side1
    label SIDE
    xpos -130
    ypos -387
   }
   Transform {
    scale {{0.05+(0.05*(((parent.DecimalTimeOffset13.decimal-0.5)*2)*ScaleVariationSmoke))}}
    center {{root.width/2 x1015 2304} {root.height/2}}
    shutteroffset centred
    name Transform46
    xpos -130
    ypos -77
   }
   Card3D {
    translate {{"\[if \{\[exists  parent.parent.parent.input0]\} \{return \[value \[topnode parent.parent.parent.input0].name].translate.x(ref)\} \{return 0\}]"} {"\[if \{\[exists  parent.parent.parent.input0]\} \{return \[value \[topnode parent.parent.parent.input0].name].translate.y(ref)\} \{return 0\}]"} {"\[if \{\[exists  parent.parent.parent.input0]\} \{return \[value \[topnode parent.parent.parent.input0].name].translate.z(ref)\} \{return -1\}]"}}
    rotate {{"\[if \{\[exists  parent.parent.parent.input0]\} \{return \[value \[topnode parent.parent.parent.input0].name].rotate.x(ref)\} \{return 0\}]"} {"\[if \{\[exists  parent.parent.parent.input0]\} \{return \[value \[topnode parent.parent.parent.input0].name].rotate.y(ref)\} \{return 0\}]"} {"\[if \{\[exists  parent.parent.parent.input0]\} \{return \[value \[topnode parent.parent.parent.input0].name].rotate.z(ref)\} \{return 0\}]"}}
    scaling {{"\[if \{\[exists  parent.parent.parent.input0]\} \{return \[value \[topnode parent.parent.parent.input0].name].scaling.x(ref)\} \{return 1\}]"} {"\[if \{\[exists  parent.parent.parent.input0]\} \{return \[value \[topnode parent.parent.parent.input0].name].scaling.y(ref)\} \{return 1\}]"} {"\[if \{\[exists  parent.parent.parent.input0]\} \{return \[value \[topnode parent.parent.parent.input0].name].scaling.z(ref)\} \{return 1\}]"}}
    uniform_scale {{"\[if \{\[exists  parent.parent.parent.input0]\} \{return (\[value \[topnode parent.parent.parent.input0].name].uniform_scale(ref)*25)\} \{return 25\}]"}}
    shutteroffset centred
    name cCard3D_1
    tile_color 0x7b1d1dff
    label "ref frame: \[value ref]"
    selected true
    xpos -130
    ypos 80
    addUserKnob {20 User l parent}
    addUserKnob {22 python_button l "set parent" t "select parent node, and press this button to set the selected node as parent" +INVISIBLE T "n = nuke.selectedNode()\['name'].getValue()\nnuke.thisNode()\['string'].setValue(n)" +STARTLINE}
    addUserKnob {1 string l parent +INVISIBLE}
    string null
    addUserKnob {3 id l "id number"}
    id {{parent.CTimeOffset.shotnmbr}}
    addUserKnob {3 ref l "ref frame"}
    ref {{parent.CTimeOffset.ref}}
   }
   Transform {
    translate {{"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].translate.x(ref)\}]"} {"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].translate.y(ref)\}]"}}
    rotate {{"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].rotate-\[value parent_gun].rotate(ref)\}]"}}
    scale {{"\[if \{\[value parent_gun]==\"null\"\} \{return 1\} \{return 1+(\[value parent_gun].scale-\[value parent_gun].scale(ref))\}]"}}
    center {{"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].center.x(ref)\}]"} {"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].center.y(ref)\}]"}}
    name Transform_GUNMatchMove39
    label "\n"
    xpos -130
    ypos 201
    addUserKnob {20 User l parent}
    addUserKnob {3 ref}
    ref {{parent.CTimeOffset.ref}}
   }
   NoTimeBlur {
    name NoTimeBlur4
    xpos -130
    ypos 258
   }
   Transform {
    translate {{"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].translate.x-\[value parent_env].translate.x(ref)\}]"} {"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].translate.y-\[value parent_env].translate.y(ref)\}]"}}
    rotate {{"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].rotate-\[value parent_env].rotate(ref)\}]"}}
    scale {{"\[if \{\[value parent_gun]==\"null\"\} \{return 1\} \{return 1+(\[value parent_env].scale-\[value parent_env].scale(ref))\}]"}}
    center {{"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].center.x(ref)\}]"} {"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].center.y(ref)\}]"}}
    motionblur 0.2
    shutter {{SmokeMB*0.5}}
    shutteroffset centred
    name Transform_ENVMatchMove39
    xpos -130
    ypos 336
    addUserKnob {20 User l parent}
    addUserKnob {3 ref}
    ref {{parent.CTimeOffset.ref}}
   }
   Transform {
    translate {{"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return -((root.width/2)-(\[value parent_gun].center.x(1)+\[value parent_gun].translate.x(1)))\}]"} {"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return -((root.height/2)-(\[value parent_gun].center.y(1)+\[value parent_gun].translate.y(1)))\}]"}}
    name Transform_GUNMatchMove5
    label "alignment correction"
    xpos -130
    ypos 417
    addUserKnob {20 User l parent}
    addUserKnob {22 python_button l "set parent" t "select parent node, and press this button to set the selected node as parent" T "n = nuke.selectedNode()\['name'].getValue()\nnuke.thisNode()\['string'].setValue(n)" +STARTLINE}
    addUserKnob {1 string l parent}
    string Transform_MatchMove10
    addUserKnob {3 ref +INVISIBLE}
    ref {{parent.cCard3D_8.ref}}
   }
   Shuffle2 {
    fromInput1 {{0} B}
    fromInput2 {{0} B}
    mappings "4 rgba.red 0 0 rgba.red 0 0 rgba.green 0 1 rgba.green 0 1 rgba.blue 0 2 rgba.blue 0 2 rgba.blue 0 2 rgba.alpha 0 3"
    name Shuffle1
    xpos -130
    ypos 465
   }
   Remove {
    operation keep
    channels rgba
    name Remove39
    xpos -130
    ypos 504
   }
push 0
   Switch {
    inputs 2
    which {{parent.Angle_reveal_side1.value>0.001}}
    name Switch3
    xpos -130
    ypos 658
   }
   Merge2 {
    inputs 3+1
    operation max
    name Merge28
    xpos -130
    ypos 731
   }
   Merge2 {
    inputs 2
    operation plus
    bbox intersection
    name Merge29
    xpos -130
    ypos 983
   }
push 0
   Switch {
    inputs 2
    which {{"shot\[value count]==0?0:frame>=shot\[value count]"}}
    name cSwitch_13
    xpos -130
    ypos 1065
    addUserKnob {20 User}
    addUserKnob {3 count}
    count {{parent.CTimeOffset.shotnmbr}}
   }
   Output {
    name Output1
    xpos -130
    ypos 1323
   }
  end_group
push $N14f97e70
  Dot {
   name Dot6
   xpos 453
   ypos -711
  }
set N152e0d00 [stack 0]
  Group {
   name gunshot6
   label "shot: \[value shotcount]\non frame: \[value shotstart]\n"
   xpos 419
   ypos -357
   addUserKnob {20 User}
   addUserKnob {3 shotcount l shot}
   shotcount 6
   addUserKnob {3 shotstart l frame +INVISIBLE}
   shotstart {{"shotcount==0 ? 0 : shot\[value shotcount]-1" i}}
  }
   BackdropNode {
    inputs 0
    name BackdropNode19
    knobChanged "try:\n    listenedKnobs = \['text', 'position', 'name']\n    node = nuke.thisNode()\n    name = node.knob('name').value()\n    text = node.knob('text').value()\n    position = node.knob('position').value()\n    position = \"<\" + position + \">\"\n    label = node.knob('label').value()\n    \n    if nuke.thisKnob().name() in listenedKnobs:\n        if text == \"\":\n            if node.knob('position').value() == \"left\":\n                node.knob('label').setValue()\n            else:\n                node.knob('label').setValue(position + name)\n        else:\n            if node.knob('position').value() == \"left\":\n                node.knob('label').setValue(text)\n            else:\n                node.knob('label').setValue(position + text)\n                \n    elif nuke.thisKnob().name() == 'font_size':\n        fontSize = node.knob('font_size').value()\n        node.knob('note_font_size').setValue(fontSize)\nexcept:\n    pass"
    tile_color 0x232323ff
    label "<Left><h2> Gunshot"
    note_font_size 31.5
    xpos -693
    ypos -554
    bdwidth 876
    bdheight 1682
    addUserKnob {20 F_VFX l BackdropNode}
    addUserKnob {43 text l Text}
    text "<h2> Gunshot"
    addUserKnob {7 font_size l "Font Size" R 10 100}
    font_size 31.5
    addUserKnob {4 position l "" -STARTLINE M {Left Center}}
    addUserKnob {26 S01 l " " T " "}
    addUserKnob {22 grow l " <img src=\"F_scalep.png\">" -STARTLINE T "n=nuke.thisNode()\n\ndef grow(node=None,step=50):\n    try:\n        if not node:\n            n=nuke.selectedNode()\n        else:\n            n=node\n            n\['xpos'].setValue(n\['xpos'].getValue()-step)\n            n\['ypos'].setValue(n\['ypos'].getValue()-step)\n            n\['bdwidth'].setValue(n\['bdwidth'].getValue()+step*2)\n            n\['bdheight'].setValue(n\['bdheight'].getValue()+step*2)\n    except:\n        pass\ngrow(n,50)"}
    addUserKnob {22 shrink l " <img src=\"F_scalem.png\">" -STARTLINE T "n=nuke.thisNode()\n\ndef shrink(node=None,step=50):\n    try:\n        if not node:\n            n=nuke.selectedNode()\n        else:\n            n=node\n            n\['xpos'].setValue(n\['xpos'].getValue()+step)\n            n\['ypos'].setValue(n\['ypos'].getValue()+step)\n            n\['bdwidth'].setValue(n\['bdwidth'].getValue()-step*2)\n            n\['bdheight'].setValue(n\['bdheight'].getValue()-step*2)\n    except:\n        pass\nshrink(n,50)"}
    addUserKnob {22 colorandom l " <img src=\"ColorBars.png\">" -STARTLINE T "import colorsys, random\nn=nuke.thisNode()\nR,G,B= colorsys.hsv_to_rgb(random.random(),.1+random.random()*.15,.15+random.random()*.15)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ) )"}
    addUserKnob {22 darkgrey l "<font color=\"#232323\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.0, 0.0, 0.14]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 lightgrey l "<font color=\"#383838\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.0, 0.0, 0.22]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 red l "<font color=\"#8c3838\" size=6>■</font>" T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.0, 0.6, 0.55]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n" +STARTLINE}
    addUserKnob {22 orange l "<font color=\"#b28e59\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.1, 0.5, 0.7]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 yellow l "<font color=\"#ccc766\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.16, 0.5, 0.8]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 green l "<font color=\"#5d995b\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.33, 0.4, 0.6]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 cyan l "<font color=\"#72998f\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.46, 0.25, 0.6]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 blue l "<font color=\"#59687f\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.6, 0.3, 0.5]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 darkblue l "<font color=\"#63628c\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.67, 0.3, 0.55]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 magenta l "<font color=\"#927a99\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.8, 0.2, 0.6]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 pink l "<font color=\"#997a89\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.92, 0.2, 0.6]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {26 S02 l " " T " "}
    addUserKnob {26 Ftools l "" +STARTLINE T "<font color=\"#1C1C1C\"> v1.2 - Franklin VFX - 2018"}
   }
   BackdropNode {
    inputs 0
    name BackdropNode2
    knobChanged "try:\n    listenedKnobs = \['text', 'position', 'name']\n    node = nuke.thisNode()\n    name = node.knob('name').value()\n    text = node.knob('text').value()\n    position = node.knob('position').value()\n    position = \"<\" + position + \">\"\n    label = node.knob('label').value()\n    \n    if nuke.thisKnob().name() in listenedKnobs:\n        if text == \"\":\n            if node.knob('position').value() == \"left\":\n                node.knob('label').setValue()\n            else:\n                node.knob('label').setValue(position + name)\n        else:\n            if node.knob('position').value() == \"left\":\n                node.knob('label').setValue(text)\n            else:\n                node.knob('label').setValue(position + text)\n                \n    elif nuke.thisKnob().name() == 'font_size':\n        fontSize = node.knob('font_size').value()\n        node.knob('note_font_size').setValue(fontSize)\nexcept:\n    pass"
    tile_color 0x927a99ff
    note_font_size 50
    xpos -473
    ypos -221
    bdwidth 435
    bdheight 786
    z_order 1
    addUserKnob {20 F_VFX l BackdropNode}
    addUserKnob {43 text l Text}
    addUserKnob {7 font_size l "Font Size" R 10 100}
    font_size 50
    addUserKnob {4 position l "" -STARTLINE M {Left Center}}
    addUserKnob {26 S01 l " " T " "}
    addUserKnob {22 grow l " <img src=\"F_scalep.png\">" -STARTLINE T "n=nuke.thisNode()\n\ndef grow(node=None,step=50):\n    try:\n        if not node:\n            n=nuke.selectedNode()\n        else:\n            n=node\n            n\['xpos'].setValue(n\['xpos'].getValue()-step)\n            n\['ypos'].setValue(n\['ypos'].getValue()-step)\n            n\['bdwidth'].setValue(n\['bdwidth'].getValue()+step*2)\n            n\['bdheight'].setValue(n\['bdheight'].getValue()+step*2)\n    except:\n        pass\ngrow(n,50)"}
    addUserKnob {22 shrink l " <img src=\"F_scalem.png\">" -STARTLINE T "n=nuke.thisNode()\n\ndef shrink(node=None,step=50):\n    try:\n        if not node:\n            n=nuke.selectedNode()\n        else:\n            n=node\n            n\['xpos'].setValue(n\['xpos'].getValue()+step)\n            n\['ypos'].setValue(n\['ypos'].getValue()+step)\n            n\['bdwidth'].setValue(n\['bdwidth'].getValue()-step*2)\n            n\['bdheight'].setValue(n\['bdheight'].getValue()-step*2)\n    except:\n        pass\nshrink(n,50)"}
    addUserKnob {22 colorandom l " <img src=\"ColorBars.png\">" -STARTLINE T "import colorsys, random\nn=nuke.thisNode()\nR,G,B= colorsys.hsv_to_rgb(random.random(),.1+random.random()*.15,.15+random.random()*.15)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ) )"}
    addUserKnob {22 darkgrey l "<font color=\"#232323\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.0, 0.0, 0.14]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 lightgrey l "<font color=\"#383838\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.0, 0.0, 0.22]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 red l "<font color=\"#8c3838\" size=6>■</font>" T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.0, 0.6, 0.55]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n" +STARTLINE}
    addUserKnob {22 orange l "<font color=\"#b28e59\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.1, 0.5, 0.7]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 yellow l "<font color=\"#ccc766\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.16, 0.5, 0.8]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 green l "<font color=\"#5d995b\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.33, 0.4, 0.6]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 cyan l "<font color=\"#72998f\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.46, 0.25, 0.6]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 blue l "<font color=\"#59687f\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.6, 0.3, 0.5]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 darkblue l "<font color=\"#63628c\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.67, 0.3, 0.55]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 magenta l "<font color=\"#927a99\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.8, 0.2, 0.6]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 pink l "<font color=\"#997a89\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.92, 0.2, 0.6]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {26 S02 l " " T " "}
    addUserKnob {26 Ftools l "" +STARTLINE T "<font color=\"#1C1C1C\"> v1.2 - Franklin VFX - 2018"}
   }
   Constant {
    inputs 0
    channels rgb
    name Constant13
    xpos -643
    ypos 714
   }
   AdjBBox {
    numpixels {{size_bbox}}
    name AdjBBox13
    xpos -643
    ypos 849
   }
   Dot {
    name Dot78
    xpos -609
    ypos 987
   }
   Axis3 {
    inputs 0
    useMatrix true
    matrix {
        {{parent.cCard3D_1.matrix} {parent.cCard3D_1.matrix} {parent.cCard3D_1.matrix} {parent.cCard3D_1.matrix}}
        {{parent.cCard3D_1.matrix} {parent.cCard3D_1.matrix} {parent.cCard3D_1.matrix} {parent.cCard3D_1.matrix}}
        {{parent.cCard3D_1.matrix} {parent.cCard3D_1.matrix} {parent.cCard3D_1.matrix} {parent.cCard3D_1.matrix}}
        {{parent.cCard3D_1.matrix} {parent.cCard3D_1.matrix} {parent.cCard3D_1.matrix} {parent.cCard3D_1.matrix}}
      }
    name Axis14
    xpos -203
    ypos -12
   }
set N1531c750 [stack 0]
push 0
   Input {
    inputs 0
    name Input1
    xpos -130
    ypos -1242
   }
   TimeOffset {
    time_offset {{"shotnmbr==0 ? 0 : shot\[value shotnmbr]-1"}}
    time ""
    name CTimeOffset
    label "shot: \[value shotnmbr]\non frame \[value time_offset]"
    xpos -130
    ypos -927
    addUserKnob {20 User}
    addUserKnob {3 shotnmbr l "shot "}
    shotnmbr {{shotcount}}
    addUserKnob {3 ref}
    ref {{time_offset+1}}
   }
   Group {
    name DecimalTimeOffset13
    tile_color 0xafa35dff
    label "random asset"
    note_font "Bitstream Vera Sans Bold"
    xpos -130
    ypos -844
    addUserKnob {20 User}
    addUserKnob {7 decimal l "time offset (decimal)"}
    decimal {{random(shotcount*seed)}}
    addUserKnob {26 ""}
    addUserKnob {26 _1 l "" +STARTLINE T "Chris Fryer | 2020\nupdated by Yorben Otto | 2024"}
   }
    Input {
     inputs 0
     name Input1
     xpos 426
     ypos -793
    }
    TimeOffset {
     time_offset {{(-floor(parent.decimal))*(DecimalTimeOffset13.decimal<0)}}
     time ""
     name TimeOffset1
     xpos 426
     ypos -675
    }
    Dot {
     name Dot6
     xpos 460
     ypos -635
    }
set N1535bc70 [stack 0]
    Dot {
     name Dot5
     xpos 350
     ypos -635
    }
    Dot {
     name Dot7
     xpos 350
     ypos -365
    }
push $N1535bc70
    Dot {
     name Dot1
     xpos 572
     ypos -635
    }
    TimeBlur {
     divisions 2
     shutter {{(parent.decimal-(floor(parent.decimal)))*2}}
     shutteroffset start
     shuttercustomoffset 0
     name TimeBlur1
     xpos 538
     ypos -558
    }
    Dot {
     name Dot2
     xpos 572
     ypos -490
    }
push $N1535bc70
    TimeBlur {
     divisions 2
     shutter {{parent.decimal*2}}
     shutteroffset start
     shuttercustomoffset 0
     name TimeBlur8
     xpos 426
     ypos -556
    }
    Switch {
     inputs 2
     which {{parent.decimal<0}}
     name Switch1
     xpos 426
     ypos -494
    }
    Multiply {
     value {{parent.TimeBlur8.divisions}}
     name Multiply6
     xpos 426
     ypos -436
    }
    Merge2 {
     inputs 2
     operation from
     name Merge6
     xpos 426
     ypos -369
    }
set N1539dc40 [stack 0]
    Output {
     name Output1
     xpos 426
     ypos -221
    }
push $N1539dc40
push $N1539dc40
    Viewer {
     inputs 2
     frame_range 1-100
     name Viewer1
     xpos 675
     ypos -246
    }
   end_group
   NoTimeBlur {
    name NoTimeBlur13
    xpos -130
    ypos -782
   }
   Dot {
    name Dot79
    xpos -96
    ypos -463
   }
set N1543ca50 [stack 0]
   Dot {
    name Dot81
    xpos -249
    ypos -463
   }
set N15441b10 [stack 0]
   Shuffle2 {
    fromInput1 {{0} B}
    fromInput2 {{0} B}
    mappings "4 rgba.blue 0 2 rgba.red 0 0 rgba.blue 0 2 rgba.green 0 1 rgba.blue 0 2 rgba.blue 0 2 black -1 -1 rgba.alpha 0 3"
    name Shuffle40
    label TOP
    xpos -283
    ypos -431
   }
   Multiply {
    value {{math_matrix.result_y_smoke(parent.CTimeOffset.ref)}}
    name Angle_reveal_top1
    label TOP
    xpos -283
    ypos -393
   }
   Transform {
    scale {{0.05+(0.05*(((parent.DecimalTimeOffset13.decimal-0.5)*2)*ScaleVariationSmoke))}}
    center {{root.width/2 x1015 2304} {root.height/2}}
    shutteroffset centred
    name Transform44
    xpos -283
    ypos -74
   }
   Card3D {
    inputs 3
    rot_order ZYX
    translate {0 0 0}
    rotate {90 0 0}
    shutteroffset centred
    name cCard3D25
    tile_color 0x7b1d1dff
    xpos -283
    ypos 89
    addUserKnob {20 User l parent}
    addUserKnob {22 python_button l "set parent" t "select parent node, and press this button to set the selected node as parent" +INVISIBLE T "n = nuke.selectedNode()\['name'].getValue()\nnuke.thisNode()\['string'].setValue(n)" +STARTLINE}
    addUserKnob {1 string l parent +INVISIBLE}
    string null
    addUserKnob {3 ref l "ref frame"}
    ref 1015
   }
   Transform {
    translate {{"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].translate.x(ref)\}]"} {"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].translate.y(ref)\}]"}}
    rotate {{"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].rotate-\[value parent_gun].rotate(ref)\}]"}}
    scale {{"\[if \{\[value parent_gun]==\"null\"\} \{return 1\} \{return 1+(\[value parent_gun].scale-\[value parent_gun].scale(ref))\}]"}}
    center {{"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].center.x(ref)\}]"} {"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].center.y(ref)\}]"}}
    name Transform_GUNMatchMove37
    xpos -283
    ypos 201
    addUserKnob {20 User l parent}
    addUserKnob {3 ref}
    ref {{parent.CTimeOffset.ref}}
   }
   NoTimeBlur {
    name NoTimeBlur3
    xpos -283
    ypos 259
   }
   Transform {
    translate {{"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].translate.x-\[value parent_env].translate.x(ref)\}]"} {"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].translate.y-\[value parent_env].translate.y(ref)\}]"}}
    rotate {{"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].rotate-\[value parent_env].rotate(ref)\}]"}}
    scale {{"\[if \{\[value parent_gun]==\"null\"\} \{return 1\} \{return 1+(\[value parent_env].scale-\[value parent_env].scale(ref))\}]"}}
    center {{"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].center.x(ref)\}]"} {"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].center.y(ref)\}]"}}
    motionblur 0.2
    shutter {{SmokeMB*0.5}}
    shutteroffset centred
    name Transform_ENVMatchMove37
    label "\n"
    xpos -283
    ypos 333
    addUserKnob {20 User l parent}
    addUserKnob {3 ref}
    ref {{parent.CTimeOffset.ref}}
   }
   Transform {
    translate {{"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return -((root.width/2)-(\[value parent_gun].center.x(1)+\[value parent_gun].translate.x(1)))\}]"} {"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return -((root.height/2)-(\[value parent_gun].center.y(1)+\[value parent_gun].translate.y(1)))\}]"}}
    name Transform_GUNMatchMove6
    label "alignment correction"
    xpos -283
    ypos 422
    addUserKnob {20 User l parent}
    addUserKnob {22 python_button l "set parent" t "select parent node, and press this button to set the selected node as parent" T "n = nuke.selectedNode()\['name'].getValue()\nnuke.thisNode()\['string'].setValue(n)" +STARTLINE}
    addUserKnob {1 string l parent}
    string Transform_MatchMove10
    addUserKnob {3 ref +INVISIBLE}
    ref {{parent.cCard3D_8.ref}}
   }
   Shuffle2 {
    fromInput1 {{0} B}
    fromInput2 {{0} B}
    mappings "4 rgba.red 0 0 rgba.red 0 0 rgba.green 0 1 rgba.green 0 1 rgba.blue 0 2 rgba.blue 0 2 rgba.blue 0 2 rgba.alpha 0 3"
    name Shuffle2
    xpos -283
    ypos 473
   }
   Remove {
    operation keep
    channels rgba
    name Remove1
    xpos -283
    ypos 512
   }
push 0
   Switch {
    inputs 2
    which {{parent.Angle_reveal_top1.value>0.001}}
    name Switch1
    xpos -283
    ypos 660
   }
   Dot {
    name Dot82
    xpos -249
    ypos 705
   }
push 0
push $N1531c750
push 0
push $N15441b10
   Dot {
    name Dot80
    xpos -402
    ypos -463
   }
   Shuffle2 {
    fromInput1 {{0} B}
    fromInput2 {{0} B}
    mappings "4 rgba.red 0 0 rgba.red 0 0 rgba.red 0 0 rgba.green 0 1 rgba.red 0 0 rgba.blue 0 2 black -1 -1 rgba.alpha 0 3"
    name Shuffle41
    label FRONT
    xpos -436
    ypos -431
   }
   Multiply {
    value {{math_matrix.result_x_smoke(parent.CTimeOffset.ref)}}
    name Angle_reveal_front1
    label FRONT
    xpos -436
    ypos -393
   }
   Transform {
    scale {{0.05+(0.05*(((parent.DecimalTimeOffset13.decimal-0.5)*2)*ScaleVariationSmoke))}}
    center {{root.width/2 x1015 2304} {root.height/2}}
    shutteroffset centred
    name Transform45
    xpos -436
    ypos -73
   }
   Card3D {
    inputs 3
    rot_order ZYX
    translate {0 0 0}
    rotate {0 90 0}
    shutteroffset centred
    name cCard3D26
    tile_color 0x7b1d1dff
    xpos -436
    ypos 93
    addUserKnob {20 User l parent}
    addUserKnob {22 python_button l "set parent" t "select parent node, and press this button to set the selected node as parent" +INVISIBLE T "n = nuke.selectedNode()\['name'].getValue()\nnuke.thisNode()\['string'].setValue(n)" +STARTLINE}
    addUserKnob {1 string l parent +INVISIBLE}
    string null
    addUserKnob {3 ref l "ref frame"}
    ref 1015
   }
   Transform {
    translate {{"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].translate.x(ref)\}]"} {"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].translate.y(ref)\}]"}}
    rotate {{"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].rotate-\[value parent_gun].rotate(ref)\}]"}}
    scale {{"\[if \{\[value parent_gun]==\"null\"\} \{return 1\} \{return 1+(\[value parent_gun].scale-\[value parent_gun].scale(ref))\}]"}}
    center {{"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].center.x(ref)\}]"} {"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].center.y(ref)\}]"}}
    name Transform_GUNMatchMove38
    label "\n"
    xpos -436
    ypos 203
    addUserKnob {20 User l parent}
    addUserKnob {3 ref}
    ref {{parent.CTimeOffset.ref}}
   }
   NoTimeBlur {
    name NoTimeBlur2
    xpos -436
    ypos 259
   }
   Transform {
    translate {{"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].translate.x-\[value parent_env].translate.x(ref)\}]"} {"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].translate.y-\[value parent_env].translate.y(ref)\}]"}}
    rotate {{"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].rotate-\[value parent_env].rotate(ref)\}]"}}
    scale {{"\[if \{\[value parent_gun]==\"null\"\} \{return 1\} \{return 1+(\[value parent_env].scale-\[value parent_env].scale(ref))\}]"}}
    center {{"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].center.x(ref)\}]"} {"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].center.y(ref)\}]"}}
    motionblur 0.2
    shutter {{SmokeMB*0.5}}
    shutteroffset centred
    name Transform_ENVMatchMove38
    xpos -436
    ypos 332
    addUserKnob {20 User l parent}
    addUserKnob {3 ref}
    ref {{parent.CTimeOffset.ref}}
   }
   Transform {
    translate {{"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return -((root.width/2)-(\[value parent_gun].center.x(1)+\[value parent_gun].translate.x(1)))\}]"} {"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return -((root.height/2)-(\[value parent_gun].center.y(1)+\[value parent_gun].translate.y(1)))\}]"}}
    name Transform_GUNMatchMove7
    label "alignment correction"
    xpos -436
    ypos 421
    addUserKnob {20 User l parent}
    addUserKnob {22 python_button l "set parent" t "select parent node, and press this button to set the selected node as parent" T "n = nuke.selectedNode()\['name'].getValue()\nnuke.thisNode()\['string'].setValue(n)" +STARTLINE}
    addUserKnob {1 string l parent}
    string Transform_MatchMove10
    addUserKnob {3 ref +INVISIBLE}
    ref {{parent.cCard3D_8.ref}}
   }
   Shuffle2 {
    fromInput1 {{0} B}
    fromInput2 {{0} B}
    mappings "4 rgba.red 0 0 rgba.red 0 0 rgba.green 0 1 rgba.green 0 1 rgba.blue 0 2 rgba.blue 0 2 rgba.blue 0 2 rgba.alpha 0 3"
    name Shuffle3
    xpos -436
    ypos 472
   }
   Remove {
    operation keep
    channels rgba
    name Remove2
    xpos -436
    ypos 511
   }
push 0
   Switch {
    inputs 2
    which {{parent.Angle_reveal_front1.value>0.001}}
    name Switch2
    xpos -436
    ypos 660
   }
   Dot {
    name Dot83
    xpos -402
    ypos 735
   }
push $N1543ca50
   Shuffle2 {
    fromInput1 {{0} B}
    fromInput2 {{0} B}
    mappings "4 rgba.green 0 1 rgba.red 0 0 rgba.green 0 1 rgba.green 0 1 rgba.green 0 1 rgba.blue 0 2 black -1 -1 rgba.alpha 0 3"
    name Shuffle42
    label SIDE
    xpos -130
    ypos -425
   }
   Multiply {
    value {{math_matrix.result_z_smoke(parent.CTimeOffset.ref)}}
    name Angle_reveal_side1
    label SIDE
    xpos -130
    ypos -387
   }
   Transform {
    scale {{0.05+(0.05*(((parent.DecimalTimeOffset13.decimal-0.5)*2)*ScaleVariationSmoke))}}
    center {{root.width/2 x1015 2304} {root.height/2}}
    shutteroffset centred
    name Transform46
    xpos -130
    ypos -77
   }
   Card3D {
    translate {{"\[if \{\[exists  parent.parent.parent.input0]\} \{return \[value \[topnode parent.parent.parent.input0].name].translate.x(ref)\} \{return 0\}]"} {"\[if \{\[exists  parent.parent.parent.input0]\} \{return \[value \[topnode parent.parent.parent.input0].name].translate.y(ref)\} \{return 0\}]"} {"\[if \{\[exists  parent.parent.parent.input0]\} \{return \[value \[topnode parent.parent.parent.input0].name].translate.z(ref)\} \{return -1\}]"}}
    rotate {{"\[if \{\[exists  parent.parent.parent.input0]\} \{return \[value \[topnode parent.parent.parent.input0].name].rotate.x(ref)\} \{return 0\}]"} {"\[if \{\[exists  parent.parent.parent.input0]\} \{return \[value \[topnode parent.parent.parent.input0].name].rotate.y(ref)\} \{return 0\}]"} {"\[if \{\[exists  parent.parent.parent.input0]\} \{return \[value \[topnode parent.parent.parent.input0].name].rotate.z(ref)\} \{return 0\}]"}}
    scaling {{"\[if \{\[exists  parent.parent.parent.input0]\} \{return \[value \[topnode parent.parent.parent.input0].name].scaling.x(ref)\} \{return 1\}]"} {"\[if \{\[exists  parent.parent.parent.input0]\} \{return \[value \[topnode parent.parent.parent.input0].name].scaling.y(ref)\} \{return 1\}]"} {"\[if \{\[exists  parent.parent.parent.input0]\} \{return \[value \[topnode parent.parent.parent.input0].name].scaling.z(ref)\} \{return 1\}]"}}
    uniform_scale {{"\[if \{\[exists  parent.parent.parent.input0]\} \{return (\[value \[topnode parent.parent.parent.input0].name].uniform_scale(ref)*25)\} \{return 25\}]"}}
    shutteroffset centred
    name cCard3D_1
    tile_color 0x7b1d1dff
    label "ref frame: \[value ref]"
    selected true
    xpos -130
    ypos 80
    addUserKnob {20 User l parent}
    addUserKnob {22 python_button l "set parent" t "select parent node, and press this button to set the selected node as parent" +INVISIBLE T "n = nuke.selectedNode()\['name'].getValue()\nnuke.thisNode()\['string'].setValue(n)" +STARTLINE}
    addUserKnob {1 string l parent +INVISIBLE}
    string null
    addUserKnob {3 id l "id number"}
    id {{parent.CTimeOffset.shotnmbr}}
    addUserKnob {3 ref l "ref frame"}
    ref {{parent.CTimeOffset.ref}}
   }
   Transform {
    translate {{"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].translate.x(ref)\}]"} {"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].translate.y(ref)\}]"}}
    rotate {{"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].rotate-\[value parent_gun].rotate(ref)\}]"}}
    scale {{"\[if \{\[value parent_gun]==\"null\"\} \{return 1\} \{return 1+(\[value parent_gun].scale-\[value parent_gun].scale(ref))\}]"}}
    center {{"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].center.x(ref)\}]"} {"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].center.y(ref)\}]"}}
    name Transform_GUNMatchMove39
    label "\n"
    xpos -130
    ypos 201
    addUserKnob {20 User l parent}
    addUserKnob {3 ref}
    ref {{parent.CTimeOffset.ref}}
   }
   NoTimeBlur {
    name NoTimeBlur4
    xpos -130
    ypos 258
   }
   Transform {
    translate {{"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].translate.x-\[value parent_env].translate.x(ref)\}]"} {"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].translate.y-\[value parent_env].translate.y(ref)\}]"}}
    rotate {{"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].rotate-\[value parent_env].rotate(ref)\}]"}}
    scale {{"\[if \{\[value parent_gun]==\"null\"\} \{return 1\} \{return 1+(\[value parent_env].scale-\[value parent_env].scale(ref))\}]"}}
    center {{"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].center.x(ref)\}]"} {"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].center.y(ref)\}]"}}
    motionblur 0.2
    shutter {{SmokeMB*0.5}}
    shutteroffset centred
    name Transform_ENVMatchMove39
    xpos -130
    ypos 336
    addUserKnob {20 User l parent}
    addUserKnob {3 ref}
    ref {{parent.CTimeOffset.ref}}
   }
   Transform {
    translate {{"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return -((root.width/2)-(\[value parent_gun].center.x(1)+\[value parent_gun].translate.x(1)))\}]"} {"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return -((root.height/2)-(\[value parent_gun].center.y(1)+\[value parent_gun].translate.y(1)))\}]"}}
    name Transform_GUNMatchMove5
    label "alignment correction"
    xpos -130
    ypos 417
    addUserKnob {20 User l parent}
    addUserKnob {22 python_button l "set parent" t "select parent node, and press this button to set the selected node as parent" T "n = nuke.selectedNode()\['name'].getValue()\nnuke.thisNode()\['string'].setValue(n)" +STARTLINE}
    addUserKnob {1 string l parent}
    string Transform_MatchMove10
    addUserKnob {3 ref +INVISIBLE}
    ref {{parent.cCard3D_8.ref}}
   }
   Shuffle2 {
    fromInput1 {{0} B}
    fromInput2 {{0} B}
    mappings "4 rgba.red 0 0 rgba.red 0 0 rgba.green 0 1 rgba.green 0 1 rgba.blue 0 2 rgba.blue 0 2 rgba.blue 0 2 rgba.alpha 0 3"
    name Shuffle1
    xpos -130
    ypos 465
   }
   Remove {
    operation keep
    channels rgba
    name Remove39
    xpos -130
    ypos 504
   }
push 0
   Switch {
    inputs 2
    which {{parent.Angle_reveal_side1.value>0.001}}
    name Switch3
    xpos -130
    ypos 658
   }
   Merge2 {
    inputs 3+1
    operation max
    name Merge28
    xpos -130
    ypos 731
   }
   Merge2 {
    inputs 2
    operation plus
    bbox intersection
    name Merge29
    xpos -130
    ypos 983
   }
push 0
   Switch {
    inputs 2
    which {{"shot\[value count]==0?0:frame>=shot\[value count]"}}
    name cSwitch_13
    xpos -130
    ypos 1065
    addUserKnob {20 User}
    addUserKnob {3 count}
    count {{parent.CTimeOffset.shotnmbr}}
   }
   Output {
    name Output1
    xpos -130
    ypos 1323
   }
  end_group
push $N152e0d00
  Dot {
   name Dot7
   xpos 607
   ypos -711
  }
set N15629b30 [stack 0]
  Group {
   name gunshot7
   label "shot: \[value shotcount]\non frame: \[value shotstart]\n"
   xpos 573
   ypos -357
   addUserKnob {20 User}
   addUserKnob {3 shotcount l shot}
   shotcount 7
   addUserKnob {3 shotstart l frame +INVISIBLE}
   shotstart {{"shotcount==0 ? 0 : shot\[value shotcount]-1" i}}
  }
   BackdropNode {
    inputs 0
    name BackdropNode19
    knobChanged "try:\n    listenedKnobs = \['text', 'position', 'name']\n    node = nuke.thisNode()\n    name = node.knob('name').value()\n    text = node.knob('text').value()\n    position = node.knob('position').value()\n    position = \"<\" + position + \">\"\n    label = node.knob('label').value()\n    \n    if nuke.thisKnob().name() in listenedKnobs:\n        if text == \"\":\n            if node.knob('position').value() == \"left\":\n                node.knob('label').setValue()\n            else:\n                node.knob('label').setValue(position + name)\n        else:\n            if node.knob('position').value() == \"left\":\n                node.knob('label').setValue(text)\n            else:\n                node.knob('label').setValue(position + text)\n                \n    elif nuke.thisKnob().name() == 'font_size':\n        fontSize = node.knob('font_size').value()\n        node.knob('note_font_size').setValue(fontSize)\nexcept:\n    pass"
    tile_color 0x232323ff
    label "<Left><h2> Gunshot"
    note_font_size 31.5
    xpos -693
    ypos -554
    bdwidth 876
    bdheight 1682
    addUserKnob {20 F_VFX l BackdropNode}
    addUserKnob {43 text l Text}
    text "<h2> Gunshot"
    addUserKnob {7 font_size l "Font Size" R 10 100}
    font_size 31.5
    addUserKnob {4 position l "" -STARTLINE M {Left Center}}
    addUserKnob {26 S01 l " " T " "}
    addUserKnob {22 grow l " <img src=\"F_scalep.png\">" -STARTLINE T "n=nuke.thisNode()\n\ndef grow(node=None,step=50):\n    try:\n        if not node:\n            n=nuke.selectedNode()\n        else:\n            n=node\n            n\['xpos'].setValue(n\['xpos'].getValue()-step)\n            n\['ypos'].setValue(n\['ypos'].getValue()-step)\n            n\['bdwidth'].setValue(n\['bdwidth'].getValue()+step*2)\n            n\['bdheight'].setValue(n\['bdheight'].getValue()+step*2)\n    except:\n        pass\ngrow(n,50)"}
    addUserKnob {22 shrink l " <img src=\"F_scalem.png\">" -STARTLINE T "n=nuke.thisNode()\n\ndef shrink(node=None,step=50):\n    try:\n        if not node:\n            n=nuke.selectedNode()\n        else:\n            n=node\n            n\['xpos'].setValue(n\['xpos'].getValue()+step)\n            n\['ypos'].setValue(n\['ypos'].getValue()+step)\n            n\['bdwidth'].setValue(n\['bdwidth'].getValue()-step*2)\n            n\['bdheight'].setValue(n\['bdheight'].getValue()-step*2)\n    except:\n        pass\nshrink(n,50)"}
    addUserKnob {22 colorandom l " <img src=\"ColorBars.png\">" -STARTLINE T "import colorsys, random\nn=nuke.thisNode()\nR,G,B= colorsys.hsv_to_rgb(random.random(),.1+random.random()*.15,.15+random.random()*.15)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ) )"}
    addUserKnob {22 darkgrey l "<font color=\"#232323\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.0, 0.0, 0.14]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 lightgrey l "<font color=\"#383838\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.0, 0.0, 0.22]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 red l "<font color=\"#8c3838\" size=6>■</font>" T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.0, 0.6, 0.55]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n" +STARTLINE}
    addUserKnob {22 orange l "<font color=\"#b28e59\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.1, 0.5, 0.7]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 yellow l "<font color=\"#ccc766\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.16, 0.5, 0.8]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 green l "<font color=\"#5d995b\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.33, 0.4, 0.6]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 cyan l "<font color=\"#72998f\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.46, 0.25, 0.6]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 blue l "<font color=\"#59687f\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.6, 0.3, 0.5]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 darkblue l "<font color=\"#63628c\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.67, 0.3, 0.55]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 magenta l "<font color=\"#927a99\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.8, 0.2, 0.6]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 pink l "<font color=\"#997a89\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.92, 0.2, 0.6]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {26 S02 l " " T " "}
    addUserKnob {26 Ftools l "" +STARTLINE T "<font color=\"#1C1C1C\"> v1.2 - Franklin VFX - 2018"}
   }
   BackdropNode {
    inputs 0
    name BackdropNode2
    knobChanged "try:\n    listenedKnobs = \['text', 'position', 'name']\n    node = nuke.thisNode()\n    name = node.knob('name').value()\n    text = node.knob('text').value()\n    position = node.knob('position').value()\n    position = \"<\" + position + \">\"\n    label = node.knob('label').value()\n    \n    if nuke.thisKnob().name() in listenedKnobs:\n        if text == \"\":\n            if node.knob('position').value() == \"left\":\n                node.knob('label').setValue()\n            else:\n                node.knob('label').setValue(position + name)\n        else:\n            if node.knob('position').value() == \"left\":\n                node.knob('label').setValue(text)\n            else:\n                node.knob('label').setValue(position + text)\n                \n    elif nuke.thisKnob().name() == 'font_size':\n        fontSize = node.knob('font_size').value()\n        node.knob('note_font_size').setValue(fontSize)\nexcept:\n    pass"
    tile_color 0x927a99ff
    note_font_size 50
    xpos -473
    ypos -221
    bdwidth 435
    bdheight 786
    z_order 1
    addUserKnob {20 F_VFX l BackdropNode}
    addUserKnob {43 text l Text}
    addUserKnob {7 font_size l "Font Size" R 10 100}
    font_size 50
    addUserKnob {4 position l "" -STARTLINE M {Left Center}}
    addUserKnob {26 S01 l " " T " "}
    addUserKnob {22 grow l " <img src=\"F_scalep.png\">" -STARTLINE T "n=nuke.thisNode()\n\ndef grow(node=None,step=50):\n    try:\n        if not node:\n            n=nuke.selectedNode()\n        else:\n            n=node\n            n\['xpos'].setValue(n\['xpos'].getValue()-step)\n            n\['ypos'].setValue(n\['ypos'].getValue()-step)\n            n\['bdwidth'].setValue(n\['bdwidth'].getValue()+step*2)\n            n\['bdheight'].setValue(n\['bdheight'].getValue()+step*2)\n    except:\n        pass\ngrow(n,50)"}
    addUserKnob {22 shrink l " <img src=\"F_scalem.png\">" -STARTLINE T "n=nuke.thisNode()\n\ndef shrink(node=None,step=50):\n    try:\n        if not node:\n            n=nuke.selectedNode()\n        else:\n            n=node\n            n\['xpos'].setValue(n\['xpos'].getValue()+step)\n            n\['ypos'].setValue(n\['ypos'].getValue()+step)\n            n\['bdwidth'].setValue(n\['bdwidth'].getValue()-step*2)\n            n\['bdheight'].setValue(n\['bdheight'].getValue()-step*2)\n    except:\n        pass\nshrink(n,50)"}
    addUserKnob {22 colorandom l " <img src=\"ColorBars.png\">" -STARTLINE T "import colorsys, random\nn=nuke.thisNode()\nR,G,B= colorsys.hsv_to_rgb(random.random(),.1+random.random()*.15,.15+random.random()*.15)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ) )"}
    addUserKnob {22 darkgrey l "<font color=\"#232323\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.0, 0.0, 0.14]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 lightgrey l "<font color=\"#383838\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.0, 0.0, 0.22]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 red l "<font color=\"#8c3838\" size=6>■</font>" T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.0, 0.6, 0.55]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n" +STARTLINE}
    addUserKnob {22 orange l "<font color=\"#b28e59\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.1, 0.5, 0.7]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 yellow l "<font color=\"#ccc766\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.16, 0.5, 0.8]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 green l "<font color=\"#5d995b\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.33, 0.4, 0.6]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 cyan l "<font color=\"#72998f\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.46, 0.25, 0.6]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 blue l "<font color=\"#59687f\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.6, 0.3, 0.5]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 darkblue l "<font color=\"#63628c\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.67, 0.3, 0.55]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 magenta l "<font color=\"#927a99\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.8, 0.2, 0.6]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 pink l "<font color=\"#997a89\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.92, 0.2, 0.6]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {26 S02 l " " T " "}
    addUserKnob {26 Ftools l "" +STARTLINE T "<font color=\"#1C1C1C\"> v1.2 - Franklin VFX - 2018"}
   }
   Constant {
    inputs 0
    channels rgb
    name Constant13
    xpos -643
    ypos 714
   }
   AdjBBox {
    numpixels {{size_bbox}}
    name AdjBBox13
    xpos -643
    ypos 849
   }
   Dot {
    name Dot78
    xpos -609
    ypos 987
   }
   Axis3 {
    inputs 0
    useMatrix true
    matrix {
        {{parent.cCard3D_1.matrix} {parent.cCard3D_1.matrix} {parent.cCard3D_1.matrix} {parent.cCard3D_1.matrix}}
        {{parent.cCard3D_1.matrix} {parent.cCard3D_1.matrix} {parent.cCard3D_1.matrix} {parent.cCard3D_1.matrix}}
        {{parent.cCard3D_1.matrix} {parent.cCard3D_1.matrix} {parent.cCard3D_1.matrix} {parent.cCard3D_1.matrix}}
        {{parent.cCard3D_1.matrix} {parent.cCard3D_1.matrix} {parent.cCard3D_1.matrix} {parent.cCard3D_1.matrix}}
      }
    name Axis14
    xpos -203
    ypos -12
   }
set N15665570 [stack 0]
push 0
   Input {
    inputs 0
    name Input1
    xpos -130
    ypos -1242
   }
   TimeOffset {
    time_offset {{"shotnmbr==0 ? 0 : shot\[value shotnmbr]-1"}}
    time ""
    name CTimeOffset
    label "shot: \[value shotnmbr]\non frame \[value time_offset]"
    xpos -130
    ypos -927
    addUserKnob {20 User}
    addUserKnob {3 shotnmbr l "shot "}
    shotnmbr {{shotcount}}
    addUserKnob {3 ref}
    ref {{time_offset+1}}
   }
   Group {
    name DecimalTimeOffset13
    tile_color 0xafa35dff
    label "random asset"
    note_font "Bitstream Vera Sans Bold"
    xpos -130
    ypos -844
    addUserKnob {20 User}
    addUserKnob {7 decimal l "time offset (decimal)"}
    decimal {{random(shotcount*seed)}}
    addUserKnob {26 ""}
    addUserKnob {26 _1 l "" +STARTLINE T "Chris Fryer | 2020\nupdated by Yorben Otto | 2024"}
   }
    Input {
     inputs 0
     name Input1
     xpos 426
     ypos -793
    }
    TimeOffset {
     time_offset {{(-floor(parent.decimal))*(DecimalTimeOffset13.decimal<0)}}
     time ""
     name TimeOffset1
     xpos 426
     ypos -675
    }
    Dot {
     name Dot6
     xpos 460
     ypos -635
    }
set N156a4ab0 [stack 0]
    Dot {
     name Dot5
     xpos 350
     ypos -635
    }
    Dot {
     name Dot7
     xpos 350
     ypos -365
    }
push $N156a4ab0
    Dot {
     name Dot1
     xpos 572
     ypos -635
    }
    TimeBlur {
     divisions 2
     shutter {{(parent.decimal-(floor(parent.decimal)))*2}}
     shutteroffset start
     shuttercustomoffset 0
     name TimeBlur1
     xpos 538
     ypos -558
    }
    Dot {
     name Dot2
     xpos 572
     ypos -490
    }
push $N156a4ab0
    TimeBlur {
     divisions 2
     shutter {{parent.decimal*2}}
     shutteroffset start
     shuttercustomoffset 0
     name TimeBlur8
     xpos 426
     ypos -556
    }
    Switch {
     inputs 2
     which {{parent.decimal<0}}
     name Switch1
     xpos 426
     ypos -494
    }
    Multiply {
     value {{parent.TimeBlur8.divisions}}
     name Multiply6
     xpos 426
     ypos -436
    }
    Merge2 {
     inputs 2
     operation from
     name Merge6
     xpos 426
     ypos -369
    }
set N156e6a80 [stack 0]
    Output {
     name Output1
     xpos 426
     ypos -221
    }
push $N156e6a80
push $N156e6a80
    Viewer {
     inputs 2
     frame_range 1-100
     name Viewer1
     xpos 675
     ypos -246
    }
   end_group
   NoTimeBlur {
    name NoTimeBlur13
    xpos -130
    ypos -782
   }
   Dot {
    name Dot79
    xpos -96
    ypos -463
   }
set N15785890 [stack 0]
   Dot {
    name Dot81
    xpos -249
    ypos -463
   }
set N1578a950 [stack 0]
   Shuffle2 {
    fromInput1 {{0} B}
    fromInput2 {{0} B}
    mappings "4 rgba.blue 0 2 rgba.red 0 0 rgba.blue 0 2 rgba.green 0 1 rgba.blue 0 2 rgba.blue 0 2 black -1 -1 rgba.alpha 0 3"
    name Shuffle40
    label TOP
    xpos -283
    ypos -431
   }
   Multiply {
    value {{math_matrix.result_y_smoke(parent.CTimeOffset.ref)}}
    name Angle_reveal_top1
    label TOP
    xpos -283
    ypos -393
   }
   Transform {
    scale {{0.05+(0.05*(((parent.DecimalTimeOffset13.decimal-0.5)*2)*ScaleVariationSmoke))}}
    center {{root.width/2 x1015 2304} {root.height/2}}
    shutteroffset centred
    name Transform44
    xpos -283
    ypos -74
   }
   Card3D {
    inputs 3
    rot_order ZYX
    translate {0 0 0}
    rotate {90 0 0}
    shutteroffset centred
    name cCard3D25
    tile_color 0x7b1d1dff
    xpos -283
    ypos 89
    addUserKnob {20 User l parent}
    addUserKnob {22 python_button l "set parent" t "select parent node, and press this button to set the selected node as parent" +INVISIBLE T "n = nuke.selectedNode()\['name'].getValue()\nnuke.thisNode()\['string'].setValue(n)" +STARTLINE}
    addUserKnob {1 string l parent +INVISIBLE}
    string null
    addUserKnob {3 ref l "ref frame"}
    ref 1015
   }
   Transform {
    translate {{"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].translate.x(ref)\}]"} {"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].translate.y(ref)\}]"}}
    rotate {{"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].rotate-\[value parent_gun].rotate(ref)\}]"}}
    scale {{"\[if \{\[value parent_gun]==\"null\"\} \{return 1\} \{return 1+(\[value parent_gun].scale-\[value parent_gun].scale(ref))\}]"}}
    center {{"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].center.x(ref)\}]"} {"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].center.y(ref)\}]"}}
    name Transform_GUNMatchMove37
    xpos -283
    ypos 201
    addUserKnob {20 User l parent}
    addUserKnob {3 ref}
    ref {{parent.CTimeOffset.ref}}
   }
   NoTimeBlur {
    name NoTimeBlur3
    xpos -283
    ypos 259
   }
   Transform {
    translate {{"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].translate.x-\[value parent_env].translate.x(ref)\}]"} {"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].translate.y-\[value parent_env].translate.y(ref)\}]"}}
    rotate {{"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].rotate-\[value parent_env].rotate(ref)\}]"}}
    scale {{"\[if \{\[value parent_gun]==\"null\"\} \{return 1\} \{return 1+(\[value parent_env].scale-\[value parent_env].scale(ref))\}]"}}
    center {{"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].center.x(ref)\}]"} {"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].center.y(ref)\}]"}}
    motionblur 0.2
    shutter {{SmokeMB*0.5}}
    shutteroffset centred
    name Transform_ENVMatchMove37
    label "\n"
    xpos -283
    ypos 333
    addUserKnob {20 User l parent}
    addUserKnob {3 ref}
    ref {{parent.CTimeOffset.ref}}
   }
   Transform {
    translate {{"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return -((root.width/2)-(\[value parent_gun].center.x(1)+\[value parent_gun].translate.x(1)))\}]"} {"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return -((root.height/2)-(\[value parent_gun].center.y(1)+\[value parent_gun].translate.y(1)))\}]"}}
    name Transform_GUNMatchMove6
    label "alignment correction"
    xpos -283
    ypos 422
    addUserKnob {20 User l parent}
    addUserKnob {22 python_button l "set parent" t "select parent node, and press this button to set the selected node as parent" T "n = nuke.selectedNode()\['name'].getValue()\nnuke.thisNode()\['string'].setValue(n)" +STARTLINE}
    addUserKnob {1 string l parent}
    string Transform_MatchMove10
    addUserKnob {3 ref +INVISIBLE}
    ref {{parent.cCard3D_8.ref}}
   }
   Shuffle2 {
    fromInput1 {{0} B}
    fromInput2 {{0} B}
    mappings "4 rgba.red 0 0 rgba.red 0 0 rgba.green 0 1 rgba.green 0 1 rgba.blue 0 2 rgba.blue 0 2 rgba.blue 0 2 rgba.alpha 0 3"
    name Shuffle2
    xpos -283
    ypos 473
   }
   Remove {
    operation keep
    channels rgba
    name Remove1
    xpos -283
    ypos 512
   }
push 0
   Switch {
    inputs 2
    which {{parent.Angle_reveal_top1.value>0.001}}
    name Switch1
    xpos -283
    ypos 660
   }
   Dot {
    name Dot82
    xpos -249
    ypos 705
   }
push 0
push $N15665570
push 0
push $N1578a950
   Dot {
    name Dot80
    xpos -402
    ypos -463
   }
   Shuffle2 {
    fromInput1 {{0} B}
    fromInput2 {{0} B}
    mappings "4 rgba.red 0 0 rgba.red 0 0 rgba.red 0 0 rgba.green 0 1 rgba.red 0 0 rgba.blue 0 2 black -1 -1 rgba.alpha 0 3"
    name Shuffle41
    label FRONT
    xpos -436
    ypos -431
   }
   Multiply {
    value {{math_matrix.result_x_smoke(parent.CTimeOffset.ref)}}
    name Angle_reveal_front1
    label FRONT
    xpos -436
    ypos -393
   }
   Transform {
    scale {{0.05+(0.05*(((parent.DecimalTimeOffset13.decimal-0.5)*2)*ScaleVariationSmoke))}}
    center {{root.width/2 x1015 2304} {root.height/2}}
    shutteroffset centred
    name Transform45
    xpos -436
    ypos -73
   }
   Card3D {
    inputs 3
    rot_order ZYX
    translate {0 0 0}
    rotate {0 90 0}
    shutteroffset centred
    name cCard3D26
    tile_color 0x7b1d1dff
    xpos -436
    ypos 93
    addUserKnob {20 User l parent}
    addUserKnob {22 python_button l "set parent" t "select parent node, and press this button to set the selected node as parent" +INVISIBLE T "n = nuke.selectedNode()\['name'].getValue()\nnuke.thisNode()\['string'].setValue(n)" +STARTLINE}
    addUserKnob {1 string l parent +INVISIBLE}
    string null
    addUserKnob {3 ref l "ref frame"}
    ref 1015
   }
   Transform {
    translate {{"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].translate.x(ref)\}]"} {"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].translate.y(ref)\}]"}}
    rotate {{"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].rotate-\[value parent_gun].rotate(ref)\}]"}}
    scale {{"\[if \{\[value parent_gun]==\"null\"\} \{return 1\} \{return 1+(\[value parent_gun].scale-\[value parent_gun].scale(ref))\}]"}}
    center {{"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].center.x(ref)\}]"} {"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].center.y(ref)\}]"}}
    name Transform_GUNMatchMove38
    label "\n"
    xpos -436
    ypos 203
    addUserKnob {20 User l parent}
    addUserKnob {3 ref}
    ref {{parent.CTimeOffset.ref}}
   }
   NoTimeBlur {
    name NoTimeBlur2
    xpos -436
    ypos 259
   }
   Transform {
    translate {{"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].translate.x-\[value parent_env].translate.x(ref)\}]"} {"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].translate.y-\[value parent_env].translate.y(ref)\}]"}}
    rotate {{"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].rotate-\[value parent_env].rotate(ref)\}]"}}
    scale {{"\[if \{\[value parent_gun]==\"null\"\} \{return 1\} \{return 1+(\[value parent_env].scale-\[value parent_env].scale(ref))\}]"}}
    center {{"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].center.x(ref)\}]"} {"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].center.y(ref)\}]"}}
    motionblur 0.2
    shutter {{SmokeMB*0.5}}
    shutteroffset centred
    name Transform_ENVMatchMove38
    xpos -436
    ypos 332
    addUserKnob {20 User l parent}
    addUserKnob {3 ref}
    ref {{parent.CTimeOffset.ref}}
   }
   Transform {
    translate {{"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return -((root.width/2)-(\[value parent_gun].center.x(1)+\[value parent_gun].translate.x(1)))\}]"} {"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return -((root.height/2)-(\[value parent_gun].center.y(1)+\[value parent_gun].translate.y(1)))\}]"}}
    name Transform_GUNMatchMove7
    label "alignment correction"
    xpos -436
    ypos 421
    addUserKnob {20 User l parent}
    addUserKnob {22 python_button l "set parent" t "select parent node, and press this button to set the selected node as parent" T "n = nuke.selectedNode()\['name'].getValue()\nnuke.thisNode()\['string'].setValue(n)" +STARTLINE}
    addUserKnob {1 string l parent}
    string Transform_MatchMove10
    addUserKnob {3 ref +INVISIBLE}
    ref {{parent.cCard3D_8.ref}}
   }
   Shuffle2 {
    fromInput1 {{0} B}
    fromInput2 {{0} B}
    mappings "4 rgba.red 0 0 rgba.red 0 0 rgba.green 0 1 rgba.green 0 1 rgba.blue 0 2 rgba.blue 0 2 rgba.blue 0 2 rgba.alpha 0 3"
    name Shuffle3
    xpos -436
    ypos 472
   }
   Remove {
    operation keep
    channels rgba
    name Remove2
    xpos -436
    ypos 511
   }
push 0
   Switch {
    inputs 2
    which {{parent.Angle_reveal_front1.value>0.001}}
    name Switch2
    xpos -436
    ypos 660
   }
   Dot {
    name Dot83
    xpos -402
    ypos 735
   }
push $N15785890
   Shuffle2 {
    fromInput1 {{0} B}
    fromInput2 {{0} B}
    mappings "4 rgba.green 0 1 rgba.red 0 0 rgba.green 0 1 rgba.green 0 1 rgba.green 0 1 rgba.blue 0 2 black -1 -1 rgba.alpha 0 3"
    name Shuffle42
    label SIDE
    xpos -130
    ypos -425
   }
   Multiply {
    value {{math_matrix.result_z_smoke(parent.CTimeOffset.ref)}}
    name Angle_reveal_side1
    label SIDE
    xpos -130
    ypos -387
   }
   Transform {
    scale {{0.05+(0.05*(((parent.DecimalTimeOffset13.decimal-0.5)*2)*ScaleVariationSmoke))}}
    center {{root.width/2 x1015 2304} {root.height/2}}
    shutteroffset centred
    name Transform46
    xpos -130
    ypos -77
   }
   Card3D {
    translate {{"\[if \{\[exists  parent.parent.parent.input0]\} \{return \[value \[topnode parent.parent.parent.input0].name].translate.x(ref)\} \{return 0\}]"} {"\[if \{\[exists  parent.parent.parent.input0]\} \{return \[value \[topnode parent.parent.parent.input0].name].translate.y(ref)\} \{return 0\}]"} {"\[if \{\[exists  parent.parent.parent.input0]\} \{return \[value \[topnode parent.parent.parent.input0].name].translate.z(ref)\} \{return -1\}]"}}
    rotate {{"\[if \{\[exists  parent.parent.parent.input0]\} \{return \[value \[topnode parent.parent.parent.input0].name].rotate.x(ref)\} \{return 0\}]"} {"\[if \{\[exists  parent.parent.parent.input0]\} \{return \[value \[topnode parent.parent.parent.input0].name].rotate.y(ref)\} \{return 0\}]"} {"\[if \{\[exists  parent.parent.parent.input0]\} \{return \[value \[topnode parent.parent.parent.input0].name].rotate.z(ref)\} \{return 0\}]"}}
    scaling {{"\[if \{\[exists  parent.parent.parent.input0]\} \{return \[value \[topnode parent.parent.parent.input0].name].scaling.x(ref)\} \{return 1\}]"} {"\[if \{\[exists  parent.parent.parent.input0]\} \{return \[value \[topnode parent.parent.parent.input0].name].scaling.y(ref)\} \{return 1\}]"} {"\[if \{\[exists  parent.parent.parent.input0]\} \{return \[value \[topnode parent.parent.parent.input0].name].scaling.z(ref)\} \{return 1\}]"}}
    uniform_scale {{"\[if \{\[exists  parent.parent.parent.input0]\} \{return (\[value \[topnode parent.parent.parent.input0].name].uniform_scale(ref)*25)\} \{return 25\}]"}}
    shutteroffset centred
    name cCard3D_1
    tile_color 0x7b1d1dff
    label "ref frame: \[value ref]"
    selected true
    xpos -130
    ypos 80
    addUserKnob {20 User l parent}
    addUserKnob {22 python_button l "set parent" t "select parent node, and press this button to set the selected node as parent" +INVISIBLE T "n = nuke.selectedNode()\['name'].getValue()\nnuke.thisNode()\['string'].setValue(n)" +STARTLINE}
    addUserKnob {1 string l parent +INVISIBLE}
    string null
    addUserKnob {3 id l "id number"}
    id {{parent.CTimeOffset.shotnmbr}}
    addUserKnob {3 ref l "ref frame"}
    ref {{parent.CTimeOffset.ref}}
   }
   Transform {
    translate {{"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].translate.x(ref)\}]"} {"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].translate.y(ref)\}]"}}
    rotate {{"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].rotate-\[value parent_gun].rotate(ref)\}]"}}
    scale {{"\[if \{\[value parent_gun]==\"null\"\} \{return 1\} \{return 1+(\[value parent_gun].scale-\[value parent_gun].scale(ref))\}]"}}
    center {{"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].center.x(ref)\}]"} {"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].center.y(ref)\}]"}}
    name Transform_GUNMatchMove39
    label "\n"
    xpos -130
    ypos 201
    addUserKnob {20 User l parent}
    addUserKnob {3 ref}
    ref {{parent.CTimeOffset.ref}}
   }
   NoTimeBlur {
    name NoTimeBlur4
    xpos -130
    ypos 258
   }
   Transform {
    translate {{"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].translate.x-\[value parent_env].translate.x(ref)\}]"} {"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].translate.y-\[value parent_env].translate.y(ref)\}]"}}
    rotate {{"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].rotate-\[value parent_env].rotate(ref)\}]"}}
    scale {{"\[if \{\[value parent_gun]==\"null\"\} \{return 1\} \{return 1+(\[value parent_env].scale-\[value parent_env].scale(ref))\}]"}}
    center {{"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].center.x(ref)\}]"} {"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].center.y(ref)\}]"}}
    motionblur 0.2
    shutter {{SmokeMB*0.5}}
    shutteroffset centred
    name Transform_ENVMatchMove39
    xpos -130
    ypos 336
    addUserKnob {20 User l parent}
    addUserKnob {3 ref}
    ref {{parent.CTimeOffset.ref}}
   }
   Transform {
    translate {{"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return -((root.width/2)-(\[value parent_gun].center.x(1)+\[value parent_gun].translate.x(1)))\}]"} {"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return -((root.height/2)-(\[value parent_gun].center.y(1)+\[value parent_gun].translate.y(1)))\}]"}}
    name Transform_GUNMatchMove5
    label "alignment correction"
    xpos -130
    ypos 417
    addUserKnob {20 User l parent}
    addUserKnob {22 python_button l "set parent" t "select parent node, and press this button to set the selected node as parent" T "n = nuke.selectedNode()\['name'].getValue()\nnuke.thisNode()\['string'].setValue(n)" +STARTLINE}
    addUserKnob {1 string l parent}
    string Transform_MatchMove10
    addUserKnob {3 ref +INVISIBLE}
    ref {{parent.cCard3D_8.ref}}
   }
   Shuffle2 {
    fromInput1 {{0} B}
    fromInput2 {{0} B}
    mappings "4 rgba.red 0 0 rgba.red 0 0 rgba.green 0 1 rgba.green 0 1 rgba.blue 0 2 rgba.blue 0 2 rgba.blue 0 2 rgba.alpha 0 3"
    name Shuffle1
    xpos -130
    ypos 465
   }
   Remove {
    operation keep
    channels rgba
    name Remove39
    xpos -130
    ypos 504
   }
push 0
   Switch {
    inputs 2
    which {{parent.Angle_reveal_side1.value>0.001}}
    name Switch3
    xpos -130
    ypos 658
   }
   Merge2 {
    inputs 3+1
    operation max
    name Merge28
    xpos -130
    ypos 731
   }
   Merge2 {
    inputs 2
    operation plus
    bbox intersection
    name Merge29
    xpos -130
    ypos 983
   }
push 0
   Switch {
    inputs 2
    which {{"shot\[value count]==0?0:frame>=shot\[value count]"}}
    name cSwitch_13
    xpos -130
    ypos 1065
    addUserKnob {20 User}
    addUserKnob {3 count}
    count {{parent.CTimeOffset.shotnmbr}}
   }
   Output {
    name Output1
    xpos -130
    ypos 1323
   }
  end_group
push $N15629b30
  Dot {
   name Dot8
   xpos 759
   ypos -711
  }
set N159728f0 [stack 0]
  Group {
   name gunshot8
   label "shot: \[value shotcount]\non frame: \[value shotstart]\n"
   xpos 725
   ypos -357
   addUserKnob {20 User}
   addUserKnob {3 shotcount l shot}
   shotcount 8
   addUserKnob {3 shotstart l frame +INVISIBLE}
   shotstart {{"shotcount==0 ? 0 : shot\[value shotcount]-1" i}}
  }
   BackdropNode {
    inputs 0
    name BackdropNode19
    knobChanged "try:\n    listenedKnobs = \['text', 'position', 'name']\n    node = nuke.thisNode()\n    name = node.knob('name').value()\n    text = node.knob('text').value()\n    position = node.knob('position').value()\n    position = \"<\" + position + \">\"\n    label = node.knob('label').value()\n    \n    if nuke.thisKnob().name() in listenedKnobs:\n        if text == \"\":\n            if node.knob('position').value() == \"left\":\n                node.knob('label').setValue()\n            else:\n                node.knob('label').setValue(position + name)\n        else:\n            if node.knob('position').value() == \"left\":\n                node.knob('label').setValue(text)\n            else:\n                node.knob('label').setValue(position + text)\n                \n    elif nuke.thisKnob().name() == 'font_size':\n        fontSize = node.knob('font_size').value()\n        node.knob('note_font_size').setValue(fontSize)\nexcept:\n    pass"
    tile_color 0x232323ff
    label "<Left><h2> Gunshot"
    note_font_size 31.5
    xpos -693
    ypos -554
    bdwidth 876
    bdheight 1682
    addUserKnob {20 F_VFX l BackdropNode}
    addUserKnob {43 text l Text}
    text "<h2> Gunshot"
    addUserKnob {7 font_size l "Font Size" R 10 100}
    font_size 31.5
    addUserKnob {4 position l "" -STARTLINE M {Left Center}}
    addUserKnob {26 S01 l " " T " "}
    addUserKnob {22 grow l " <img src=\"F_scalep.png\">" -STARTLINE T "n=nuke.thisNode()\n\ndef grow(node=None,step=50):\n    try:\n        if not node:\n            n=nuke.selectedNode()\n        else:\n            n=node\n            n\['xpos'].setValue(n\['xpos'].getValue()-step)\n            n\['ypos'].setValue(n\['ypos'].getValue()-step)\n            n\['bdwidth'].setValue(n\['bdwidth'].getValue()+step*2)\n            n\['bdheight'].setValue(n\['bdheight'].getValue()+step*2)\n    except:\n        pass\ngrow(n,50)"}
    addUserKnob {22 shrink l " <img src=\"F_scalem.png\">" -STARTLINE T "n=nuke.thisNode()\n\ndef shrink(node=None,step=50):\n    try:\n        if not node:\n            n=nuke.selectedNode()\n        else:\n            n=node\n            n\['xpos'].setValue(n\['xpos'].getValue()+step)\n            n\['ypos'].setValue(n\['ypos'].getValue()+step)\n            n\['bdwidth'].setValue(n\['bdwidth'].getValue()-step*2)\n            n\['bdheight'].setValue(n\['bdheight'].getValue()-step*2)\n    except:\n        pass\nshrink(n,50)"}
    addUserKnob {22 colorandom l " <img src=\"ColorBars.png\">" -STARTLINE T "import colorsys, random\nn=nuke.thisNode()\nR,G,B= colorsys.hsv_to_rgb(random.random(),.1+random.random()*.15,.15+random.random()*.15)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ) )"}
    addUserKnob {22 darkgrey l "<font color=\"#232323\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.0, 0.0, 0.14]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 lightgrey l "<font color=\"#383838\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.0, 0.0, 0.22]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 red l "<font color=\"#8c3838\" size=6>■</font>" T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.0, 0.6, 0.55]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n" +STARTLINE}
    addUserKnob {22 orange l "<font color=\"#b28e59\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.1, 0.5, 0.7]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 yellow l "<font color=\"#ccc766\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.16, 0.5, 0.8]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 green l "<font color=\"#5d995b\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.33, 0.4, 0.6]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 cyan l "<font color=\"#72998f\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.46, 0.25, 0.6]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 blue l "<font color=\"#59687f\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.6, 0.3, 0.5]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 darkblue l "<font color=\"#63628c\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.67, 0.3, 0.55]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 magenta l "<font color=\"#927a99\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.8, 0.2, 0.6]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 pink l "<font color=\"#997a89\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.92, 0.2, 0.6]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {26 S02 l " " T " "}
    addUserKnob {26 Ftools l "" +STARTLINE T "<font color=\"#1C1C1C\"> v1.2 - Franklin VFX - 2018"}
   }
   BackdropNode {
    inputs 0
    name BackdropNode2
    knobChanged "try:\n    listenedKnobs = \['text', 'position', 'name']\n    node = nuke.thisNode()\n    name = node.knob('name').value()\n    text = node.knob('text').value()\n    position = node.knob('position').value()\n    position = \"<\" + position + \">\"\n    label = node.knob('label').value()\n    \n    if nuke.thisKnob().name() in listenedKnobs:\n        if text == \"\":\n            if node.knob('position').value() == \"left\":\n                node.knob('label').setValue()\n            else:\n                node.knob('label').setValue(position + name)\n        else:\n            if node.knob('position').value() == \"left\":\n                node.knob('label').setValue(text)\n            else:\n                node.knob('label').setValue(position + text)\n                \n    elif nuke.thisKnob().name() == 'font_size':\n        fontSize = node.knob('font_size').value()\n        node.knob('note_font_size').setValue(fontSize)\nexcept:\n    pass"
    tile_color 0x927a99ff
    note_font_size 50
    xpos -473
    ypos -221
    bdwidth 435
    bdheight 786
    z_order 1
    addUserKnob {20 F_VFX l BackdropNode}
    addUserKnob {43 text l Text}
    addUserKnob {7 font_size l "Font Size" R 10 100}
    font_size 50
    addUserKnob {4 position l "" -STARTLINE M {Left Center}}
    addUserKnob {26 S01 l " " T " "}
    addUserKnob {22 grow l " <img src=\"F_scalep.png\">" -STARTLINE T "n=nuke.thisNode()\n\ndef grow(node=None,step=50):\n    try:\n        if not node:\n            n=nuke.selectedNode()\n        else:\n            n=node\n            n\['xpos'].setValue(n\['xpos'].getValue()-step)\n            n\['ypos'].setValue(n\['ypos'].getValue()-step)\n            n\['bdwidth'].setValue(n\['bdwidth'].getValue()+step*2)\n            n\['bdheight'].setValue(n\['bdheight'].getValue()+step*2)\n    except:\n        pass\ngrow(n,50)"}
    addUserKnob {22 shrink l " <img src=\"F_scalem.png\">" -STARTLINE T "n=nuke.thisNode()\n\ndef shrink(node=None,step=50):\n    try:\n        if not node:\n            n=nuke.selectedNode()\n        else:\n            n=node\n            n\['xpos'].setValue(n\['xpos'].getValue()+step)\n            n\['ypos'].setValue(n\['ypos'].getValue()+step)\n            n\['bdwidth'].setValue(n\['bdwidth'].getValue()-step*2)\n            n\['bdheight'].setValue(n\['bdheight'].getValue()-step*2)\n    except:\n        pass\nshrink(n,50)"}
    addUserKnob {22 colorandom l " <img src=\"ColorBars.png\">" -STARTLINE T "import colorsys, random\nn=nuke.thisNode()\nR,G,B= colorsys.hsv_to_rgb(random.random(),.1+random.random()*.15,.15+random.random()*.15)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ) )"}
    addUserKnob {22 darkgrey l "<font color=\"#232323\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.0, 0.0, 0.14]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 lightgrey l "<font color=\"#383838\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.0, 0.0, 0.22]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 red l "<font color=\"#8c3838\" size=6>■</font>" T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.0, 0.6, 0.55]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n" +STARTLINE}
    addUserKnob {22 orange l "<font color=\"#b28e59\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.1, 0.5, 0.7]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 yellow l "<font color=\"#ccc766\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.16, 0.5, 0.8]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 green l "<font color=\"#5d995b\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.33, 0.4, 0.6]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 cyan l "<font color=\"#72998f\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.46, 0.25, 0.6]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 blue l "<font color=\"#59687f\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.6, 0.3, 0.5]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 darkblue l "<font color=\"#63628c\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.67, 0.3, 0.55]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 magenta l "<font color=\"#927a99\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.8, 0.2, 0.6]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 pink l "<font color=\"#997a89\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.92, 0.2, 0.6]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {26 S02 l " " T " "}
    addUserKnob {26 Ftools l "" +STARTLINE T "<font color=\"#1C1C1C\"> v1.2 - Franklin VFX - 2018"}
   }
   Constant {
    inputs 0
    channels rgb
    name Constant13
    xpos -643
    ypos 714
   }
   AdjBBox {
    numpixels {{size_bbox}}
    name AdjBBox13
    xpos -643
    ypos 849
   }
   Dot {
    name Dot78
    xpos -609
    ypos 987
   }
   Axis3 {
    inputs 0
    useMatrix true
    matrix {
        {{parent.cCard3D_1.matrix} {parent.cCard3D_1.matrix} {parent.cCard3D_1.matrix} {parent.cCard3D_1.matrix}}
        {{parent.cCard3D_1.matrix} {parent.cCard3D_1.matrix} {parent.cCard3D_1.matrix} {parent.cCard3D_1.matrix}}
        {{parent.cCard3D_1.matrix} {parent.cCard3D_1.matrix} {parent.cCard3D_1.matrix} {parent.cCard3D_1.matrix}}
        {{parent.cCard3D_1.matrix} {parent.cCard3D_1.matrix} {parent.cCard3D_1.matrix} {parent.cCard3D_1.matrix}}
      }
    name Axis14
    xpos -203
    ypos -12
   }
set N159ae3a0 [stack 0]
push 0
   Input {
    inputs 0
    name Input1
    xpos -130
    ypos -1242
   }
   TimeOffset {
    time_offset {{"shotnmbr==0 ? 0 : shot\[value shotnmbr]-1"}}
    time ""
    name CTimeOffset
    label "shot: \[value shotnmbr]\non frame \[value time_offset]"
    xpos -130
    ypos -927
    addUserKnob {20 User}
    addUserKnob {3 shotnmbr l "shot "}
    shotnmbr {{shotcount}}
    addUserKnob {3 ref}
    ref {{time_offset+1}}
   }
   Group {
    name DecimalTimeOffset13
    tile_color 0xafa35dff
    label "random asset"
    note_font "Bitstream Vera Sans Bold"
    xpos -130
    ypos -844
    addUserKnob {20 User}
    addUserKnob {7 decimal l "time offset (decimal)"}
    decimal {{random(shotcount*seed)}}
    addUserKnob {26 ""}
    addUserKnob {26 _1 l "" +STARTLINE T "Chris Fryer | 2020\nupdated by Yorben Otto | 2024"}
   }
    Input {
     inputs 0
     name Input1
     xpos 426
     ypos -793
    }
    TimeOffset {
     time_offset {{(-floor(parent.decimal))*(DecimalTimeOffset13.decimal<0)}}
     time ""
     name TimeOffset1
     xpos 426
     ypos -675
    }
    Dot {
     name Dot6
     xpos 460
     ypos -635
    }
set N159ed8e0 [stack 0]
    Dot {
     name Dot5
     xpos 350
     ypos -635
    }
    Dot {
     name Dot7
     xpos 350
     ypos -365
    }
push $N159ed8e0
    Dot {
     name Dot1
     xpos 572
     ypos -635
    }
    TimeBlur {
     divisions 2
     shutter {{(parent.decimal-(floor(parent.decimal)))*2}}
     shutteroffset start
     shuttercustomoffset 0
     name TimeBlur1
     xpos 538
     ypos -558
    }
    Dot {
     name Dot2
     xpos 572
     ypos -490
    }
push $N159ed8e0
    TimeBlur {
     divisions 2
     shutter {{parent.decimal*2}}
     shutteroffset start
     shuttercustomoffset 0
     name TimeBlur8
     xpos 426
     ypos -556
    }
    Switch {
     inputs 2
     which {{parent.decimal<0}}
     name Switch1
     xpos 426
     ypos -494
    }
    Multiply {
     value {{parent.TimeBlur8.divisions}}
     name Multiply6
     xpos 426
     ypos -436
    }
    Merge2 {
     inputs 2
     operation from
     name Merge6
     xpos 426
     ypos -369
    }
set N15a338e0 [stack 0]
    Output {
     name Output1
     xpos 426
     ypos -221
    }
push $N15a338e0
push $N15a338e0
    Viewer {
     inputs 2
     frame_range 1-100
     name Viewer1
     xpos 675
     ypos -246
    }
   end_group
   NoTimeBlur {
    name NoTimeBlur13
    xpos -130
    ypos -782
   }
   Dot {
    name Dot79
    xpos -96
    ypos -463
   }
set N15ad2720 [stack 0]
   Dot {
    name Dot81
    xpos -249
    ypos -463
   }
set N15ad77e0 [stack 0]
   Shuffle2 {
    fromInput1 {{0} B}
    fromInput2 {{0} B}
    mappings "4 rgba.blue 0 2 rgba.red 0 0 rgba.blue 0 2 rgba.green 0 1 rgba.blue 0 2 rgba.blue 0 2 black -1 -1 rgba.alpha 0 3"
    name Shuffle40
    label TOP
    xpos -283
    ypos -431
   }
   Multiply {
    value {{math_matrix.result_y_smoke(parent.CTimeOffset.ref)}}
    name Angle_reveal_top1
    label TOP
    xpos -283
    ypos -393
   }
   Transform {
    scale {{0.05+(0.05*(((parent.DecimalTimeOffset13.decimal-0.5)*2)*ScaleVariationSmoke))}}
    center {{root.width/2 x1015 2304} {root.height/2}}
    shutteroffset centred
    name Transform44
    xpos -283
    ypos -74
   }
   Card3D {
    inputs 3
    rot_order ZYX
    translate {0 0 0}
    rotate {90 0 0}
    shutteroffset centred
    name cCard3D25
    tile_color 0x7b1d1dff
    xpos -283
    ypos 89
    addUserKnob {20 User l parent}
    addUserKnob {22 python_button l "set parent" t "select parent node, and press this button to set the selected node as parent" +INVISIBLE T "n = nuke.selectedNode()\['name'].getValue()\nnuke.thisNode()\['string'].setValue(n)" +STARTLINE}
    addUserKnob {1 string l parent +INVISIBLE}
    string null
    addUserKnob {3 ref l "ref frame"}
    ref 1015
   }
   Transform {
    translate {{"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].translate.x(ref)\}]"} {"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].translate.y(ref)\}]"}}
    rotate {{"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].rotate-\[value parent_gun].rotate(ref)\}]"}}
    scale {{"\[if \{\[value parent_gun]==\"null\"\} \{return 1\} \{return 1+(\[value parent_gun].scale-\[value parent_gun].scale(ref))\}]"}}
    center {{"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].center.x(ref)\}]"} {"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].center.y(ref)\}]"}}
    name Transform_GUNMatchMove37
    xpos -283
    ypos 201
    addUserKnob {20 User l parent}
    addUserKnob {3 ref}
    ref {{parent.CTimeOffset.ref}}
   }
   NoTimeBlur {
    name NoTimeBlur3
    xpos -283
    ypos 259
   }
   Transform {
    translate {{"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].translate.x-\[value parent_env].translate.x(ref)\}]"} {"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].translate.y-\[value parent_env].translate.y(ref)\}]"}}
    rotate {{"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].rotate-\[value parent_env].rotate(ref)\}]"}}
    scale {{"\[if \{\[value parent_gun]==\"null\"\} \{return 1\} \{return 1+(\[value parent_env].scale-\[value parent_env].scale(ref))\}]"}}
    center {{"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].center.x(ref)\}]"} {"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].center.y(ref)\}]"}}
    motionblur 0.2
    shutter {{SmokeMB*0.5}}
    shutteroffset centred
    name Transform_ENVMatchMove37
    label "\n"
    xpos -283
    ypos 333
    addUserKnob {20 User l parent}
    addUserKnob {3 ref}
    ref {{parent.CTimeOffset.ref}}
   }
   Transform {
    translate {{"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return -((root.width/2)-(\[value parent_gun].center.x(1)+\[value parent_gun].translate.x(1)))\}]"} {"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return -((root.height/2)-(\[value parent_gun].center.y(1)+\[value parent_gun].translate.y(1)))\}]"}}
    name Transform_GUNMatchMove6
    label "alignment correction"
    xpos -283
    ypos 422
    addUserKnob {20 User l parent}
    addUserKnob {22 python_button l "set parent" t "select parent node, and press this button to set the selected node as parent" T "n = nuke.selectedNode()\['name'].getValue()\nnuke.thisNode()\['string'].setValue(n)" +STARTLINE}
    addUserKnob {1 string l parent}
    string Transform_MatchMove10
    addUserKnob {3 ref +INVISIBLE}
    ref {{parent.cCard3D_8.ref}}
   }
   Shuffle2 {
    fromInput1 {{0} B}
    fromInput2 {{0} B}
    mappings "4 rgba.red 0 0 rgba.red 0 0 rgba.green 0 1 rgba.green 0 1 rgba.blue 0 2 rgba.blue 0 2 rgba.blue 0 2 rgba.alpha 0 3"
    name Shuffle2
    xpos -283
    ypos 473
   }
   Remove {
    operation keep
    channels rgba
    name Remove1
    xpos -283
    ypos 512
   }
push 0
   Switch {
    inputs 2
    which {{parent.Angle_reveal_top1.value>0.001}}
    name Switch1
    xpos -283
    ypos 660
   }
   Dot {
    name Dot82
    xpos -249
    ypos 705
   }
push 0
push $N159ae3a0
push 0
push $N15ad77e0
   Dot {
    name Dot80
    xpos -402
    ypos -463
   }
   Shuffle2 {
    fromInput1 {{0} B}
    fromInput2 {{0} B}
    mappings "4 rgba.red 0 0 rgba.red 0 0 rgba.red 0 0 rgba.green 0 1 rgba.red 0 0 rgba.blue 0 2 black -1 -1 rgba.alpha 0 3"
    name Shuffle41
    label FRONT
    xpos -436
    ypos -431
   }
   Multiply {
    value {{math_matrix.result_x_smoke(parent.CTimeOffset.ref)}}
    name Angle_reveal_front1
    label FRONT
    xpos -436
    ypos -393
   }
   Transform {
    scale {{0.05+(0.05*(((parent.DecimalTimeOffset13.decimal-0.5)*2)*ScaleVariationSmoke))}}
    center {{root.width/2 x1015 2304} {root.height/2}}
    shutteroffset centred
    name Transform45
    xpos -436
    ypos -73
   }
   Card3D {
    inputs 3
    rot_order ZYX
    translate {0 0 0}
    rotate {0 90 0}
    shutteroffset centred
    name cCard3D26
    tile_color 0x7b1d1dff
    xpos -436
    ypos 93
    addUserKnob {20 User l parent}
    addUserKnob {22 python_button l "set parent" t "select parent node, and press this button to set the selected node as parent" +INVISIBLE T "n = nuke.selectedNode()\['name'].getValue()\nnuke.thisNode()\['string'].setValue(n)" +STARTLINE}
    addUserKnob {1 string l parent +INVISIBLE}
    string null
    addUserKnob {3 ref l "ref frame"}
    ref 1015
   }
   Transform {
    translate {{"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].translate.x(ref)\}]"} {"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].translate.y(ref)\}]"}}
    rotate {{"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].rotate-\[value parent_gun].rotate(ref)\}]"}}
    scale {{"\[if \{\[value parent_gun]==\"null\"\} \{return 1\} \{return 1+(\[value parent_gun].scale-\[value parent_gun].scale(ref))\}]"}}
    center {{"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].center.x(ref)\}]"} {"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].center.y(ref)\}]"}}
    name Transform_GUNMatchMove38
    label "\n"
    xpos -436
    ypos 203
    addUserKnob {20 User l parent}
    addUserKnob {3 ref}
    ref {{parent.CTimeOffset.ref}}
   }
   NoTimeBlur {
    name NoTimeBlur2
    xpos -436
    ypos 259
   }
   Transform {
    translate {{"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].translate.x-\[value parent_env].translate.x(ref)\}]"} {"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].translate.y-\[value parent_env].translate.y(ref)\}]"}}
    rotate {{"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].rotate-\[value parent_env].rotate(ref)\}]"}}
    scale {{"\[if \{\[value parent_gun]==\"null\"\} \{return 1\} \{return 1+(\[value parent_env].scale-\[value parent_env].scale(ref))\}]"}}
    center {{"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].center.x(ref)\}]"} {"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].center.y(ref)\}]"}}
    motionblur 0.2
    shutter {{SmokeMB*0.5}}
    shutteroffset centred
    name Transform_ENVMatchMove38
    xpos -436
    ypos 332
    addUserKnob {20 User l parent}
    addUserKnob {3 ref}
    ref {{parent.CTimeOffset.ref}}
   }
   Transform {
    translate {{"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return -((root.width/2)-(\[value parent_gun].center.x(1)+\[value parent_gun].translate.x(1)))\}]"} {"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return -((root.height/2)-(\[value parent_gun].center.y(1)+\[value parent_gun].translate.y(1)))\}]"}}
    name Transform_GUNMatchMove7
    label "alignment correction"
    xpos -436
    ypos 421
    addUserKnob {20 User l parent}
    addUserKnob {22 python_button l "set parent" t "select parent node, and press this button to set the selected node as parent" T "n = nuke.selectedNode()\['name'].getValue()\nnuke.thisNode()\['string'].setValue(n)" +STARTLINE}
    addUserKnob {1 string l parent}
    string Transform_MatchMove10
    addUserKnob {3 ref +INVISIBLE}
    ref {{parent.cCard3D_8.ref}}
   }
   Shuffle2 {
    fromInput1 {{0} B}
    fromInput2 {{0} B}
    mappings "4 rgba.red 0 0 rgba.red 0 0 rgba.green 0 1 rgba.green 0 1 rgba.blue 0 2 rgba.blue 0 2 rgba.blue 0 2 rgba.alpha 0 3"
    name Shuffle3
    xpos -436
    ypos 472
   }
   Remove {
    operation keep
    channels rgba
    name Remove2
    xpos -436
    ypos 511
   }
push 0
   Switch {
    inputs 2
    which {{parent.Angle_reveal_front1.value>0.001}}
    name Switch2
    xpos -436
    ypos 660
   }
   Dot {
    name Dot83
    xpos -402
    ypos 735
   }
push $N15ad2720
   Shuffle2 {
    fromInput1 {{0} B}
    fromInput2 {{0} B}
    mappings "4 rgba.green 0 1 rgba.red 0 0 rgba.green 0 1 rgba.green 0 1 rgba.green 0 1 rgba.blue 0 2 black -1 -1 rgba.alpha 0 3"
    name Shuffle42
    label SIDE
    xpos -130
    ypos -425
   }
   Multiply {
    value {{math_matrix.result_z_smoke(parent.CTimeOffset.ref)}}
    name Angle_reveal_side1
    label SIDE
    xpos -130
    ypos -387
   }
   Transform {
    scale {{0.05+(0.05*(((parent.DecimalTimeOffset13.decimal-0.5)*2)*ScaleVariationSmoke))}}
    center {{root.width/2 x1015 2304} {root.height/2}}
    shutteroffset centred
    name Transform46
    xpos -130
    ypos -77
   }
   Card3D {
    translate {{"\[if \{\[exists  parent.parent.parent.input0]\} \{return \[value \[topnode parent.parent.parent.input0].name].translate.x(ref)\} \{return 0\}]"} {"\[if \{\[exists  parent.parent.parent.input0]\} \{return \[value \[topnode parent.parent.parent.input0].name].translate.y(ref)\} \{return 0\}]"} {"\[if \{\[exists  parent.parent.parent.input0]\} \{return \[value \[topnode parent.parent.parent.input0].name].translate.z(ref)\} \{return -1\}]"}}
    rotate {{"\[if \{\[exists  parent.parent.parent.input0]\} \{return \[value \[topnode parent.parent.parent.input0].name].rotate.x(ref)\} \{return 0\}]"} {"\[if \{\[exists  parent.parent.parent.input0]\} \{return \[value \[topnode parent.parent.parent.input0].name].rotate.y(ref)\} \{return 0\}]"} {"\[if \{\[exists  parent.parent.parent.input0]\} \{return \[value \[topnode parent.parent.parent.input0].name].rotate.z(ref)\} \{return 0\}]"}}
    scaling {{"\[if \{\[exists  parent.parent.parent.input0]\} \{return \[value \[topnode parent.parent.parent.input0].name].scaling.x(ref)\} \{return 1\}]"} {"\[if \{\[exists  parent.parent.parent.input0]\} \{return \[value \[topnode parent.parent.parent.input0].name].scaling.y(ref)\} \{return 1\}]"} {"\[if \{\[exists  parent.parent.parent.input0]\} \{return \[value \[topnode parent.parent.parent.input0].name].scaling.z(ref)\} \{return 1\}]"}}
    uniform_scale {{"\[if \{\[exists  parent.parent.parent.input0]\} \{return (\[value \[topnode parent.parent.parent.input0].name].uniform_scale(ref)*25)\} \{return 25\}]"}}
    shutteroffset centred
    name cCard3D_1
    tile_color 0x7b1d1dff
    label "ref frame: \[value ref]"
    selected true
    xpos -130
    ypos 80
    addUserKnob {20 User l parent}
    addUserKnob {22 python_button l "set parent" t "select parent node, and press this button to set the selected node as parent" +INVISIBLE T "n = nuke.selectedNode()\['name'].getValue()\nnuke.thisNode()\['string'].setValue(n)" +STARTLINE}
    addUserKnob {1 string l parent +INVISIBLE}
    string null
    addUserKnob {3 id l "id number"}
    id {{parent.CTimeOffset.shotnmbr}}
    addUserKnob {3 ref l "ref frame"}
    ref {{parent.CTimeOffset.ref}}
   }
   Transform {
    translate {{"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].translate.x(ref)\}]"} {"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].translate.y(ref)\}]"}}
    rotate {{"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].rotate-\[value parent_gun].rotate(ref)\}]"}}
    scale {{"\[if \{\[value parent_gun]==\"null\"\} \{return 1\} \{return 1+(\[value parent_gun].scale-\[value parent_gun].scale(ref))\}]"}}
    center {{"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].center.x(ref)\}]"} {"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].center.y(ref)\}]"}}
    name Transform_GUNMatchMove39
    label "\n"
    xpos -130
    ypos 201
    addUserKnob {20 User l parent}
    addUserKnob {3 ref}
    ref {{parent.CTimeOffset.ref}}
   }
   NoTimeBlur {
    name NoTimeBlur4
    xpos -130
    ypos 258
   }
   Transform {
    translate {{"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].translate.x-\[value parent_env].translate.x(ref)\}]"} {"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].translate.y-\[value parent_env].translate.y(ref)\}]"}}
    rotate {{"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].rotate-\[value parent_env].rotate(ref)\}]"}}
    scale {{"\[if \{\[value parent_gun]==\"null\"\} \{return 1\} \{return 1+(\[value parent_env].scale-\[value parent_env].scale(ref))\}]"}}
    center {{"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].center.x(ref)\}]"} {"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].center.y(ref)\}]"}}
    motionblur 0.2
    shutter {{SmokeMB*0.5}}
    shutteroffset centred
    name Transform_ENVMatchMove39
    xpos -130
    ypos 336
    addUserKnob {20 User l parent}
    addUserKnob {3 ref}
    ref {{parent.CTimeOffset.ref}}
   }
   Transform {
    translate {{"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return -((root.width/2)-(\[value parent_gun].center.x(1)+\[value parent_gun].translate.x(1)))\}]"} {"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return -((root.height/2)-(\[value parent_gun].center.y(1)+\[value parent_gun].translate.y(1)))\}]"}}
    name Transform_GUNMatchMove5
    label "alignment correction"
    xpos -130
    ypos 417
    addUserKnob {20 User l parent}
    addUserKnob {22 python_button l "set parent" t "select parent node, and press this button to set the selected node as parent" T "n = nuke.selectedNode()\['name'].getValue()\nnuke.thisNode()\['string'].setValue(n)" +STARTLINE}
    addUserKnob {1 string l parent}
    string Transform_MatchMove10
    addUserKnob {3 ref +INVISIBLE}
    ref {{parent.cCard3D_8.ref}}
   }
   Shuffle2 {
    fromInput1 {{0} B}
    fromInput2 {{0} B}
    mappings "4 rgba.red 0 0 rgba.red 0 0 rgba.green 0 1 rgba.green 0 1 rgba.blue 0 2 rgba.blue 0 2 rgba.blue 0 2 rgba.alpha 0 3"
    name Shuffle1
    xpos -130
    ypos 465
   }
   Remove {
    operation keep
    channels rgba
    name Remove39
    xpos -130
    ypos 504
   }
push 0
   Switch {
    inputs 2
    which {{parent.Angle_reveal_side1.value>0.001}}
    name Switch3
    xpos -130
    ypos 658
   }
   Merge2 {
    inputs 3+1
    operation max
    name Merge28
    xpos -130
    ypos 731
   }
   Merge2 {
    inputs 2
    operation plus
    bbox intersection
    name Merge29
    xpos -130
    ypos 983
   }
push 0
   Switch {
    inputs 2
    which {{"shot\[value count]==0?0:frame>=shot\[value count]"}}
    name cSwitch_13
    xpos -130
    ypos 1065
    addUserKnob {20 User}
    addUserKnob {3 count}
    count {{parent.CTimeOffset.shotnmbr}}
   }
   Output {
    name Output1
    xpos -130
    ypos 1323
   }
  end_group
push $N159728f0
  Dot {
   name Dot9
   xpos 906
   ypos -711
  }
set N15cbf820 [stack 0]
  Group {
   name gunshot9
   label "shot: \[value shotcount]\non frame: \[value shotstart]\n"
   xpos 872
   ypos -357
   addUserKnob {20 User}
   addUserKnob {3 shotcount l shot}
   shotcount 9
   addUserKnob {3 shotstart l frame +INVISIBLE}
   shotstart {{"shotcount==0 ? 0 : shot\[value shotcount]-1" i}}
  }
   BackdropNode {
    inputs 0
    name BackdropNode19
    knobChanged "try:\n    listenedKnobs = \['text', 'position', 'name']\n    node = nuke.thisNode()\n    name = node.knob('name').value()\n    text = node.knob('text').value()\n    position = node.knob('position').value()\n    position = \"<\" + position + \">\"\n    label = node.knob('label').value()\n    \n    if nuke.thisKnob().name() in listenedKnobs:\n        if text == \"\":\n            if node.knob('position').value() == \"left\":\n                node.knob('label').setValue()\n            else:\n                node.knob('label').setValue(position + name)\n        else:\n            if node.knob('position').value() == \"left\":\n                node.knob('label').setValue(text)\n            else:\n                node.knob('label').setValue(position + text)\n                \n    elif nuke.thisKnob().name() == 'font_size':\n        fontSize = node.knob('font_size').value()\n        node.knob('note_font_size').setValue(fontSize)\nexcept:\n    pass"
    tile_color 0x232323ff
    label "<Left><h2> Gunshot"
    note_font_size 31.5
    xpos -693
    ypos -554
    bdwidth 876
    bdheight 1682
    addUserKnob {20 F_VFX l BackdropNode}
    addUserKnob {43 text l Text}
    text "<h2> Gunshot"
    addUserKnob {7 font_size l "Font Size" R 10 100}
    font_size 31.5
    addUserKnob {4 position l "" -STARTLINE M {Left Center}}
    addUserKnob {26 S01 l " " T " "}
    addUserKnob {22 grow l " <img src=\"F_scalep.png\">" -STARTLINE T "n=nuke.thisNode()\n\ndef grow(node=None,step=50):\n    try:\n        if not node:\n            n=nuke.selectedNode()\n        else:\n            n=node\n            n\['xpos'].setValue(n\['xpos'].getValue()-step)\n            n\['ypos'].setValue(n\['ypos'].getValue()-step)\n            n\['bdwidth'].setValue(n\['bdwidth'].getValue()+step*2)\n            n\['bdheight'].setValue(n\['bdheight'].getValue()+step*2)\n    except:\n        pass\ngrow(n,50)"}
    addUserKnob {22 shrink l " <img src=\"F_scalem.png\">" -STARTLINE T "n=nuke.thisNode()\n\ndef shrink(node=None,step=50):\n    try:\n        if not node:\n            n=nuke.selectedNode()\n        else:\n            n=node\n            n\['xpos'].setValue(n\['xpos'].getValue()+step)\n            n\['ypos'].setValue(n\['ypos'].getValue()+step)\n            n\['bdwidth'].setValue(n\['bdwidth'].getValue()-step*2)\n            n\['bdheight'].setValue(n\['bdheight'].getValue()-step*2)\n    except:\n        pass\nshrink(n,50)"}
    addUserKnob {22 colorandom l " <img src=\"ColorBars.png\">" -STARTLINE T "import colorsys, random\nn=nuke.thisNode()\nR,G,B= colorsys.hsv_to_rgb(random.random(),.1+random.random()*.15,.15+random.random()*.15)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ) )"}
    addUserKnob {22 darkgrey l "<font color=\"#232323\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.0, 0.0, 0.14]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 lightgrey l "<font color=\"#383838\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.0, 0.0, 0.22]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 red l "<font color=\"#8c3838\" size=6>■</font>" T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.0, 0.6, 0.55]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n" +STARTLINE}
    addUserKnob {22 orange l "<font color=\"#b28e59\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.1, 0.5, 0.7]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 yellow l "<font color=\"#ccc766\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.16, 0.5, 0.8]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 green l "<font color=\"#5d995b\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.33, 0.4, 0.6]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 cyan l "<font color=\"#72998f\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.46, 0.25, 0.6]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 blue l "<font color=\"#59687f\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.6, 0.3, 0.5]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 darkblue l "<font color=\"#63628c\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.67, 0.3, 0.55]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 magenta l "<font color=\"#927a99\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.8, 0.2, 0.6]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 pink l "<font color=\"#997a89\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.92, 0.2, 0.6]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {26 S02 l " " T " "}
    addUserKnob {26 Ftools l "" +STARTLINE T "<font color=\"#1C1C1C\"> v1.2 - Franklin VFX - 2018"}
   }
   BackdropNode {
    inputs 0
    name BackdropNode2
    knobChanged "try:\n    listenedKnobs = \['text', 'position', 'name']\n    node = nuke.thisNode()\n    name = node.knob('name').value()\n    text = node.knob('text').value()\n    position = node.knob('position').value()\n    position = \"<\" + position + \">\"\n    label = node.knob('label').value()\n    \n    if nuke.thisKnob().name() in listenedKnobs:\n        if text == \"\":\n            if node.knob('position').value() == \"left\":\n                node.knob('label').setValue()\n            else:\n                node.knob('label').setValue(position + name)\n        else:\n            if node.knob('position').value() == \"left\":\n                node.knob('label').setValue(text)\n            else:\n                node.knob('label').setValue(position + text)\n                \n    elif nuke.thisKnob().name() == 'font_size':\n        fontSize = node.knob('font_size').value()\n        node.knob('note_font_size').setValue(fontSize)\nexcept:\n    pass"
    tile_color 0x927a99ff
    note_font_size 50
    xpos -473
    ypos -221
    bdwidth 435
    bdheight 786
    z_order 1
    addUserKnob {20 F_VFX l BackdropNode}
    addUserKnob {43 text l Text}
    addUserKnob {7 font_size l "Font Size" R 10 100}
    font_size 50
    addUserKnob {4 position l "" -STARTLINE M {Left Center}}
    addUserKnob {26 S01 l " " T " "}
    addUserKnob {22 grow l " <img src=\"F_scalep.png\">" -STARTLINE T "n=nuke.thisNode()\n\ndef grow(node=None,step=50):\n    try:\n        if not node:\n            n=nuke.selectedNode()\n        else:\n            n=node\n            n\['xpos'].setValue(n\['xpos'].getValue()-step)\n            n\['ypos'].setValue(n\['ypos'].getValue()-step)\n            n\['bdwidth'].setValue(n\['bdwidth'].getValue()+step*2)\n            n\['bdheight'].setValue(n\['bdheight'].getValue()+step*2)\n    except:\n        pass\ngrow(n,50)"}
    addUserKnob {22 shrink l " <img src=\"F_scalem.png\">" -STARTLINE T "n=nuke.thisNode()\n\ndef shrink(node=None,step=50):\n    try:\n        if not node:\n            n=nuke.selectedNode()\n        else:\n            n=node\n            n\['xpos'].setValue(n\['xpos'].getValue()+step)\n            n\['ypos'].setValue(n\['ypos'].getValue()+step)\n            n\['bdwidth'].setValue(n\['bdwidth'].getValue()-step*2)\n            n\['bdheight'].setValue(n\['bdheight'].getValue()-step*2)\n    except:\n        pass\nshrink(n,50)"}
    addUserKnob {22 colorandom l " <img src=\"ColorBars.png\">" -STARTLINE T "import colorsys, random\nn=nuke.thisNode()\nR,G,B= colorsys.hsv_to_rgb(random.random(),.1+random.random()*.15,.15+random.random()*.15)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ) )"}
    addUserKnob {22 darkgrey l "<font color=\"#232323\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.0, 0.0, 0.14]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 lightgrey l "<font color=\"#383838\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.0, 0.0, 0.22]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 red l "<font color=\"#8c3838\" size=6>■</font>" T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.0, 0.6, 0.55]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n" +STARTLINE}
    addUserKnob {22 orange l "<font color=\"#b28e59\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.1, 0.5, 0.7]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 yellow l "<font color=\"#ccc766\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.16, 0.5, 0.8]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 green l "<font color=\"#5d995b\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.33, 0.4, 0.6]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 cyan l "<font color=\"#72998f\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.46, 0.25, 0.6]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 blue l "<font color=\"#59687f\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.6, 0.3, 0.5]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 darkblue l "<font color=\"#63628c\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.67, 0.3, 0.55]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 magenta l "<font color=\"#927a99\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.8, 0.2, 0.6]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 pink l "<font color=\"#997a89\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.92, 0.2, 0.6]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {26 S02 l " " T " "}
    addUserKnob {26 Ftools l "" +STARTLINE T "<font color=\"#1C1C1C\"> v1.2 - Franklin VFX - 2018"}
   }
   Constant {
    inputs 0
    channels rgb
    name Constant13
    xpos -643
    ypos 714
   }
   AdjBBox {
    numpixels {{size_bbox}}
    name AdjBBox13
    xpos -643
    ypos 849
   }
   Dot {
    name Dot78
    xpos -609
    ypos 987
   }
   Axis3 {
    inputs 0
    useMatrix true
    matrix {
        {{parent.cCard3D_1.matrix} {parent.cCard3D_1.matrix} {parent.cCard3D_1.matrix} {parent.cCard3D_1.matrix}}
        {{parent.cCard3D_1.matrix} {parent.cCard3D_1.matrix} {parent.cCard3D_1.matrix} {parent.cCard3D_1.matrix}}
        {{parent.cCard3D_1.matrix} {parent.cCard3D_1.matrix} {parent.cCard3D_1.matrix} {parent.cCard3D_1.matrix}}
        {{parent.cCard3D_1.matrix} {parent.cCard3D_1.matrix} {parent.cCard3D_1.matrix} {parent.cCard3D_1.matrix}}
      }
    name Axis14
    xpos -203
    ypos -12
   }
set N15d01280 [stack 0]
push 0
   Input {
    inputs 0
    name Input1
    xpos -130
    ypos -1242
   }
   TimeOffset {
    time_offset {{"shotnmbr==0 ? 0 : shot\[value shotnmbr]-1"}}
    time ""
    name CTimeOffset
    label "shot: \[value shotnmbr]\non frame \[value time_offset]"
    xpos -130
    ypos -927
    addUserKnob {20 User}
    addUserKnob {3 shotnmbr l "shot "}
    shotnmbr {{shotcount}}
    addUserKnob {3 ref}
    ref {{time_offset+1}}
   }
   Group {
    name DecimalTimeOffset13
    tile_color 0xafa35dff
    label "random asset"
    note_font "Bitstream Vera Sans Bold"
    xpos -130
    ypos -844
    addUserKnob {20 User}
    addUserKnob {7 decimal l "time offset (decimal)"}
    decimal {{random(shotcount*seed)}}
    addUserKnob {26 ""}
    addUserKnob {26 _1 l "" +STARTLINE T "Chris Fryer | 2020\nupdated by Yorben Otto | 2024"}
   }
    Input {
     inputs 0
     name Input1
     xpos 426
     ypos -793
    }
    TimeOffset {
     time_offset {{(-floor(parent.decimal))*(DecimalTimeOffset13.decimal<0)}}
     time ""
     name TimeOffset1
     xpos 426
     ypos -675
    }
    Dot {
     name Dot6
     xpos 460
     ypos -635
    }
set N15d407b0 [stack 0]
    Dot {
     name Dot5
     xpos 350
     ypos -635
    }
    Dot {
     name Dot7
     xpos 350
     ypos -365
    }
push $N15d407b0
    Dot {
     name Dot1
     xpos 572
     ypos -635
    }
    TimeBlur {
     divisions 2
     shutter {{(parent.decimal-(floor(parent.decimal)))*2}}
     shutteroffset start
     shuttercustomoffset 0
     name TimeBlur1
     xpos 538
     ypos -558
    }
    Dot {
     name Dot2
     xpos 572
     ypos -490
    }
push $N15d407b0
    TimeBlur {
     divisions 2
     shutter {{parent.decimal*2}}
     shutteroffset start
     shuttercustomoffset 0
     name TimeBlur8
     xpos 426
     ypos -556
    }
    Switch {
     inputs 2
     which {{parent.decimal<0}}
     name Switch1
     xpos 426
     ypos -494
    }
    Multiply {
     value {{parent.TimeBlur8.divisions}}
     name Multiply6
     xpos 426
     ypos -436
    }
    Merge2 {
     inputs 2
     operation from
     name Merge6
     xpos 426
     ypos -369
    }
set N15d82780 [stack 0]
    Output {
     name Output1
     xpos 426
     ypos -221
    }
push $N15d82780
push $N15d82780
    Viewer {
     inputs 2
     frame_range 1-100
     name Viewer1
     xpos 675
     ypos -246
    }
   end_group
   NoTimeBlur {
    name NoTimeBlur13
    xpos -130
    ypos -782
   }
   Dot {
    name Dot79
    xpos -96
    ypos -463
   }
set N15e215c0 [stack 0]
   Dot {
    name Dot81
    xpos -249
    ypos -463
   }
set N15e26680 [stack 0]
   Shuffle2 {
    fromInput1 {{0} B}
    fromInput2 {{0} B}
    mappings "4 rgba.blue 0 2 rgba.red 0 0 rgba.blue 0 2 rgba.green 0 1 rgba.blue 0 2 rgba.blue 0 2 black -1 -1 rgba.alpha 0 3"
    name Shuffle40
    label TOP
    xpos -283
    ypos -431
   }
   Multiply {
    value {{math_matrix.result_y_smoke(parent.CTimeOffset.ref)}}
    name Angle_reveal_top1
    label TOP
    xpos -283
    ypos -393
   }
   Transform {
    scale {{0.05+(0.05*(((parent.DecimalTimeOffset13.decimal-0.5)*2)*ScaleVariationSmoke))}}
    center {{root.width/2 x1015 2304} {root.height/2}}
    shutteroffset centred
    name Transform44
    xpos -283
    ypos -74
   }
   Card3D {
    inputs 3
    rot_order ZYX
    translate {0 0 0}
    rotate {90 0 0}
    shutteroffset centred
    name cCard3D25
    tile_color 0x7b1d1dff
    xpos -283
    ypos 89
    addUserKnob {20 User l parent}
    addUserKnob {22 python_button l "set parent" t "select parent node, and press this button to set the selected node as parent" +INVISIBLE T "n = nuke.selectedNode()\['name'].getValue()\nnuke.thisNode()\['string'].setValue(n)" +STARTLINE}
    addUserKnob {1 string l parent +INVISIBLE}
    string null
    addUserKnob {3 ref l "ref frame"}
    ref 1015
   }
   Transform {
    translate {{"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].translate.x(ref)\}]"} {"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].translate.y(ref)\}]"}}
    rotate {{"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].rotate-\[value parent_gun].rotate(ref)\}]"}}
    scale {{"\[if \{\[value parent_gun]==\"null\"\} \{return 1\} \{return 1+(\[value parent_gun].scale-\[value parent_gun].scale(ref))\}]"}}
    center {{"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].center.x(ref)\}]"} {"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].center.y(ref)\}]"}}
    name Transform_GUNMatchMove37
    xpos -283
    ypos 201
    addUserKnob {20 User l parent}
    addUserKnob {3 ref}
    ref {{parent.CTimeOffset.ref}}
   }
   NoTimeBlur {
    name NoTimeBlur3
    xpos -283
    ypos 259
   }
   Transform {
    translate {{"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].translate.x-\[value parent_env].translate.x(ref)\}]"} {"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].translate.y-\[value parent_env].translate.y(ref)\}]"}}
    rotate {{"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].rotate-\[value parent_env].rotate(ref)\}]"}}
    scale {{"\[if \{\[value parent_gun]==\"null\"\} \{return 1\} \{return 1+(\[value parent_env].scale-\[value parent_env].scale(ref))\}]"}}
    center {{"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].center.x(ref)\}]"} {"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].center.y(ref)\}]"}}
    motionblur 0.2
    shutter {{SmokeMB*0.5}}
    shutteroffset centred
    name Transform_ENVMatchMove37
    label "\n"
    xpos -283
    ypos 333
    addUserKnob {20 User l parent}
    addUserKnob {3 ref}
    ref {{parent.CTimeOffset.ref}}
   }
   Transform {
    translate {{"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return -((root.width/2)-(\[value parent_gun].center.x(1)+\[value parent_gun].translate.x(1)))\}]"} {"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return -((root.height/2)-(\[value parent_gun].center.y(1)+\[value parent_gun].translate.y(1)))\}]"}}
    name Transform_GUNMatchMove6
    label "alignment correction"
    xpos -283
    ypos 422
    addUserKnob {20 User l parent}
    addUserKnob {22 python_button l "set parent" t "select parent node, and press this button to set the selected node as parent" T "n = nuke.selectedNode()\['name'].getValue()\nnuke.thisNode()\['string'].setValue(n)" +STARTLINE}
    addUserKnob {1 string l parent}
    string Transform_MatchMove10
    addUserKnob {3 ref +INVISIBLE}
    ref {{parent.cCard3D_8.ref}}
   }
   Shuffle2 {
    fromInput1 {{0} B}
    fromInput2 {{0} B}
    mappings "4 rgba.red 0 0 rgba.red 0 0 rgba.green 0 1 rgba.green 0 1 rgba.blue 0 2 rgba.blue 0 2 rgba.blue 0 2 rgba.alpha 0 3"
    name Shuffle2
    xpos -283
    ypos 473
   }
   Remove {
    operation keep
    channels rgba
    name Remove1
    xpos -283
    ypos 512
   }
push 0
   Switch {
    inputs 2
    which {{parent.Angle_reveal_top1.value>0.001}}
    name Switch1
    xpos -283
    ypos 660
   }
   Dot {
    name Dot82
    xpos -249
    ypos 705
   }
push 0
push $N15d01280
push 0
push $N15e26680
   Dot {
    name Dot80
    xpos -402
    ypos -463
   }
   Shuffle2 {
    fromInput1 {{0} B}
    fromInput2 {{0} B}
    mappings "4 rgba.red 0 0 rgba.red 0 0 rgba.red 0 0 rgba.green 0 1 rgba.red 0 0 rgba.blue 0 2 black -1 -1 rgba.alpha 0 3"
    name Shuffle41
    label FRONT
    xpos -436
    ypos -431
   }
   Multiply {
    value {{math_matrix.result_x_smoke(parent.CTimeOffset.ref)}}
    name Angle_reveal_front1
    label FRONT
    xpos -436
    ypos -393
   }
   Transform {
    scale {{0.05+(0.05*(((parent.DecimalTimeOffset13.decimal-0.5)*2)*ScaleVariationSmoke))}}
    center {{root.width/2 x1015 2304} {root.height/2}}
    shutteroffset centred
    name Transform45
    xpos -436
    ypos -73
   }
   Card3D {
    inputs 3
    rot_order ZYX
    translate {0 0 0}
    rotate {0 90 0}
    shutteroffset centred
    name cCard3D26
    tile_color 0x7b1d1dff
    xpos -436
    ypos 93
    addUserKnob {20 User l parent}
    addUserKnob {22 python_button l "set parent" t "select parent node, and press this button to set the selected node as parent" +INVISIBLE T "n = nuke.selectedNode()\['name'].getValue()\nnuke.thisNode()\['string'].setValue(n)" +STARTLINE}
    addUserKnob {1 string l parent +INVISIBLE}
    string null
    addUserKnob {3 ref l "ref frame"}
    ref 1015
   }
   Transform {
    translate {{"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].translate.x(ref)\}]"} {"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].translate.y(ref)\}]"}}
    rotate {{"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].rotate-\[value parent_gun].rotate(ref)\}]"}}
    scale {{"\[if \{\[value parent_gun]==\"null\"\} \{return 1\} \{return 1+(\[value parent_gun].scale-\[value parent_gun].scale(ref))\}]"}}
    center {{"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].center.x(ref)\}]"} {"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].center.y(ref)\}]"}}
    name Transform_GUNMatchMove38
    label "\n"
    xpos -436
    ypos 203
    addUserKnob {20 User l parent}
    addUserKnob {3 ref}
    ref {{parent.CTimeOffset.ref}}
   }
   NoTimeBlur {
    name NoTimeBlur2
    xpos -436
    ypos 259
   }
   Transform {
    translate {{"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].translate.x-\[value parent_env].translate.x(ref)\}]"} {"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].translate.y-\[value parent_env].translate.y(ref)\}]"}}
    rotate {{"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].rotate-\[value parent_env].rotate(ref)\}]"}}
    scale {{"\[if \{\[value parent_gun]==\"null\"\} \{return 1\} \{return 1+(\[value parent_env].scale-\[value parent_env].scale(ref))\}]"}}
    center {{"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].center.x(ref)\}]"} {"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].center.y(ref)\}]"}}
    motionblur 0.2
    shutter {{SmokeMB*0.5}}
    shutteroffset centred
    name Transform_ENVMatchMove38
    xpos -436
    ypos 332
    addUserKnob {20 User l parent}
    addUserKnob {3 ref}
    ref {{parent.CTimeOffset.ref}}
   }
   Transform {
    translate {{"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return -((root.width/2)-(\[value parent_gun].center.x(1)+\[value parent_gun].translate.x(1)))\}]"} {"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return -((root.height/2)-(\[value parent_gun].center.y(1)+\[value parent_gun].translate.y(1)))\}]"}}
    name Transform_GUNMatchMove7
    label "alignment correction"
    xpos -436
    ypos 421
    addUserKnob {20 User l parent}
    addUserKnob {22 python_button l "set parent" t "select parent node, and press this button to set the selected node as parent" T "n = nuke.selectedNode()\['name'].getValue()\nnuke.thisNode()\['string'].setValue(n)" +STARTLINE}
    addUserKnob {1 string l parent}
    string Transform_MatchMove10
    addUserKnob {3 ref +INVISIBLE}
    ref {{parent.cCard3D_8.ref}}
   }
   Shuffle2 {
    fromInput1 {{0} B}
    fromInput2 {{0} B}
    mappings "4 rgba.red 0 0 rgba.red 0 0 rgba.green 0 1 rgba.green 0 1 rgba.blue 0 2 rgba.blue 0 2 rgba.blue 0 2 rgba.alpha 0 3"
    name Shuffle3
    xpos -436
    ypos 472
   }
   Remove {
    operation keep
    channels rgba
    name Remove2
    xpos -436
    ypos 511
   }
push 0
   Switch {
    inputs 2
    which {{parent.Angle_reveal_front1.value>0.001}}
    name Switch2
    xpos -436
    ypos 660
   }
   Dot {
    name Dot83
    xpos -402
    ypos 735
   }
push $N15e215c0
   Shuffle2 {
    fromInput1 {{0} B}
    fromInput2 {{0} B}
    mappings "4 rgba.green 0 1 rgba.red 0 0 rgba.green 0 1 rgba.green 0 1 rgba.green 0 1 rgba.blue 0 2 black -1 -1 rgba.alpha 0 3"
    name Shuffle42
    label SIDE
    xpos -130
    ypos -425
   }
   Multiply {
    value {{math_matrix.result_z_smoke(parent.CTimeOffset.ref)}}
    name Angle_reveal_side1
    label SIDE
    xpos -130
    ypos -387
   }
   Transform {
    scale {{0.05+(0.05*(((parent.DecimalTimeOffset13.decimal-0.5)*2)*ScaleVariationSmoke))}}
    center {{root.width/2 x1015 2304} {root.height/2}}
    shutteroffset centred
    name Transform46
    xpos -130
    ypos -77
   }
   Card3D {
    translate {{"\[if \{\[exists  parent.parent.parent.input0]\} \{return \[value \[topnode parent.parent.parent.input0].name].translate.x(ref)\} \{return 0\}]"} {"\[if \{\[exists  parent.parent.parent.input0]\} \{return \[value \[topnode parent.parent.parent.input0].name].translate.y(ref)\} \{return 0\}]"} {"\[if \{\[exists  parent.parent.parent.input0]\} \{return \[value \[topnode parent.parent.parent.input0].name].translate.z(ref)\} \{return -1\}]"}}
    rotate {{"\[if \{\[exists  parent.parent.parent.input0]\} \{return \[value \[topnode parent.parent.parent.input0].name].rotate.x(ref)\} \{return 0\}]"} {"\[if \{\[exists  parent.parent.parent.input0]\} \{return \[value \[topnode parent.parent.parent.input0].name].rotate.y(ref)\} \{return 0\}]"} {"\[if \{\[exists  parent.parent.parent.input0]\} \{return \[value \[topnode parent.parent.parent.input0].name].rotate.z(ref)\} \{return 0\}]"}}
    scaling {{"\[if \{\[exists  parent.parent.parent.input0]\} \{return \[value \[topnode parent.parent.parent.input0].name].scaling.x(ref)\} \{return 1\}]"} {"\[if \{\[exists  parent.parent.parent.input0]\} \{return \[value \[topnode parent.parent.parent.input0].name].scaling.y(ref)\} \{return 1\}]"} {"\[if \{\[exists  parent.parent.parent.input0]\} \{return \[value \[topnode parent.parent.parent.input0].name].scaling.z(ref)\} \{return 1\}]"}}
    uniform_scale {{"\[if \{\[exists  parent.parent.parent.input0]\} \{return (\[value \[topnode parent.parent.parent.input0].name].uniform_scale(ref)*25)\} \{return 25\}]"}}
    shutteroffset centred
    name cCard3D_1
    tile_color 0x7b1d1dff
    label "ref frame: \[value ref]"
    selected true
    xpos -130
    ypos 80
    addUserKnob {20 User l parent}
    addUserKnob {22 python_button l "set parent" t "select parent node, and press this button to set the selected node as parent" +INVISIBLE T "n = nuke.selectedNode()\['name'].getValue()\nnuke.thisNode()\['string'].setValue(n)" +STARTLINE}
    addUserKnob {1 string l parent +INVISIBLE}
    string null
    addUserKnob {3 id l "id number"}
    id {{parent.CTimeOffset.shotnmbr}}
    addUserKnob {3 ref l "ref frame"}
    ref {{parent.CTimeOffset.ref}}
   }
   Transform {
    translate {{"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].translate.x(ref)\}]"} {"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].translate.y(ref)\}]"}}
    rotate {{"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].rotate-\[value parent_gun].rotate(ref)\}]"}}
    scale {{"\[if \{\[value parent_gun]==\"null\"\} \{return 1\} \{return 1+(\[value parent_gun].scale-\[value parent_gun].scale(ref))\}]"}}
    center {{"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].center.x(ref)\}]"} {"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].center.y(ref)\}]"}}
    name Transform_GUNMatchMove39
    label "\n"
    xpos -130
    ypos 201
    addUserKnob {20 User l parent}
    addUserKnob {3 ref}
    ref {{parent.CTimeOffset.ref}}
   }
   NoTimeBlur {
    name NoTimeBlur4
    xpos -130
    ypos 258
   }
   Transform {
    translate {{"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].translate.x-\[value parent_env].translate.x(ref)\}]"} {"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].translate.y-\[value parent_env].translate.y(ref)\}]"}}
    rotate {{"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].rotate-\[value parent_env].rotate(ref)\}]"}}
    scale {{"\[if \{\[value parent_gun]==\"null\"\} \{return 1\} \{return 1+(\[value parent_env].scale-\[value parent_env].scale(ref))\}]"}}
    center {{"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].center.x(ref)\}]"} {"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].center.y(ref)\}]"}}
    motionblur 0.2
    shutter {{SmokeMB*0.5}}
    shutteroffset centred
    name Transform_ENVMatchMove39
    xpos -130
    ypos 336
    addUserKnob {20 User l parent}
    addUserKnob {3 ref}
    ref {{parent.CTimeOffset.ref}}
   }
   Transform {
    translate {{"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return -((root.width/2)-(\[value parent_gun].center.x(1)+\[value parent_gun].translate.x(1)))\}]"} {"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return -((root.height/2)-(\[value parent_gun].center.y(1)+\[value parent_gun].translate.y(1)))\}]"}}
    name Transform_GUNMatchMove5
    label "alignment correction"
    xpos -130
    ypos 417
    addUserKnob {20 User l parent}
    addUserKnob {22 python_button l "set parent" t "select parent node, and press this button to set the selected node as parent" T "n = nuke.selectedNode()\['name'].getValue()\nnuke.thisNode()\['string'].setValue(n)" +STARTLINE}
    addUserKnob {1 string l parent}
    string Transform_MatchMove10
    addUserKnob {3 ref +INVISIBLE}
    ref {{parent.cCard3D_8.ref}}
   }
   Shuffle2 {
    fromInput1 {{0} B}
    fromInput2 {{0} B}
    mappings "4 rgba.red 0 0 rgba.red 0 0 rgba.green 0 1 rgba.green 0 1 rgba.blue 0 2 rgba.blue 0 2 rgba.blue 0 2 rgba.alpha 0 3"
    name Shuffle1
    xpos -130
    ypos 465
   }
   Remove {
    operation keep
    channels rgba
    name Remove39
    xpos -130
    ypos 504
   }
push 0
   Switch {
    inputs 2
    which {{parent.Angle_reveal_side1.value>0.001}}
    name Switch3
    xpos -130
    ypos 658
   }
   Merge2 {
    inputs 3+1
    operation max
    name Merge28
    xpos -130
    ypos 731
   }
   Merge2 {
    inputs 2
    operation plus
    bbox intersection
    name Merge29
    xpos -130
    ypos 983
   }
push 0
   Switch {
    inputs 2
    which {{"shot\[value count]==0?0:frame>=shot\[value count]"}}
    name cSwitch_13
    xpos -130
    ypos 1065
    addUserKnob {20 User}
    addUserKnob {3 count}
    count {{parent.CTimeOffset.shotnmbr}}
   }
   Output {
    name Output1
    xpos -130
    ypos 1323
   }
  end_group
push $N15cbf820
  Dot {
   name Dot10
   xpos 1050
   ypos -711
  }
set N1600e6f0 [stack 0]
  Group {
   name gunshot10
   label "shot: \[value shotcount]\non frame: \[value shotstart]\n"
   xpos 1016
   ypos -357
   addUserKnob {20 User}
   addUserKnob {3 shotcount l shot}
   shotcount 10
   addUserKnob {3 shotstart l frame +INVISIBLE}
   shotstart {{"shotcount==0 ? 0 : shot\[value shotcount]-1" i}}
  }
   BackdropNode {
    inputs 0
    name BackdropNode19
    knobChanged "try:\n    listenedKnobs = \['text', 'position', 'name']\n    node = nuke.thisNode()\n    name = node.knob('name').value()\n    text = node.knob('text').value()\n    position = node.knob('position').value()\n    position = \"<\" + position + \">\"\n    label = node.knob('label').value()\n    \n    if nuke.thisKnob().name() in listenedKnobs:\n        if text == \"\":\n            if node.knob('position').value() == \"left\":\n                node.knob('label').setValue()\n            else:\n                node.knob('label').setValue(position + name)\n        else:\n            if node.knob('position').value() == \"left\":\n                node.knob('label').setValue(text)\n            else:\n                node.knob('label').setValue(position + text)\n                \n    elif nuke.thisKnob().name() == 'font_size':\n        fontSize = node.knob('font_size').value()\n        node.knob('note_font_size').setValue(fontSize)\nexcept:\n    pass"
    tile_color 0x232323ff
    label "<Left><h2> Gunshot"
    note_font_size 31.5
    xpos -693
    ypos -554
    bdwidth 876
    bdheight 1682
    addUserKnob {20 F_VFX l BackdropNode}
    addUserKnob {43 text l Text}
    text "<h2> Gunshot"
    addUserKnob {7 font_size l "Font Size" R 10 100}
    font_size 31.5
    addUserKnob {4 position l "" -STARTLINE M {Left Center}}
    addUserKnob {26 S01 l " " T " "}
    addUserKnob {22 grow l " <img src=\"F_scalep.png\">" -STARTLINE T "n=nuke.thisNode()\n\ndef grow(node=None,step=50):\n    try:\n        if not node:\n            n=nuke.selectedNode()\n        else:\n            n=node\n            n\['xpos'].setValue(n\['xpos'].getValue()-step)\n            n\['ypos'].setValue(n\['ypos'].getValue()-step)\n            n\['bdwidth'].setValue(n\['bdwidth'].getValue()+step*2)\n            n\['bdheight'].setValue(n\['bdheight'].getValue()+step*2)\n    except:\n        pass\ngrow(n,50)"}
    addUserKnob {22 shrink l " <img src=\"F_scalem.png\">" -STARTLINE T "n=nuke.thisNode()\n\ndef shrink(node=None,step=50):\n    try:\n        if not node:\n            n=nuke.selectedNode()\n        else:\n            n=node\n            n\['xpos'].setValue(n\['xpos'].getValue()+step)\n            n\['ypos'].setValue(n\['ypos'].getValue()+step)\n            n\['bdwidth'].setValue(n\['bdwidth'].getValue()-step*2)\n            n\['bdheight'].setValue(n\['bdheight'].getValue()-step*2)\n    except:\n        pass\nshrink(n,50)"}
    addUserKnob {22 colorandom l " <img src=\"ColorBars.png\">" -STARTLINE T "import colorsys, random\nn=nuke.thisNode()\nR,G,B= colorsys.hsv_to_rgb(random.random(),.1+random.random()*.15,.15+random.random()*.15)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ) )"}
    addUserKnob {22 darkgrey l "<font color=\"#232323\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.0, 0.0, 0.14]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 lightgrey l "<font color=\"#383838\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.0, 0.0, 0.22]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 red l "<font color=\"#8c3838\" size=6>■</font>" T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.0, 0.6, 0.55]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n" +STARTLINE}
    addUserKnob {22 orange l "<font color=\"#b28e59\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.1, 0.5, 0.7]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 yellow l "<font color=\"#ccc766\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.16, 0.5, 0.8]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 green l "<font color=\"#5d995b\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.33, 0.4, 0.6]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 cyan l "<font color=\"#72998f\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.46, 0.25, 0.6]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 blue l "<font color=\"#59687f\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.6, 0.3, 0.5]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 darkblue l "<font color=\"#63628c\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.67, 0.3, 0.55]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 magenta l "<font color=\"#927a99\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.8, 0.2, 0.6]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 pink l "<font color=\"#997a89\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.92, 0.2, 0.6]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {26 S02 l " " T " "}
    addUserKnob {26 Ftools l "" +STARTLINE T "<font color=\"#1C1C1C\"> v1.2 - Franklin VFX - 2018"}
   }
   BackdropNode {
    inputs 0
    name BackdropNode2
    knobChanged "try:\n    listenedKnobs = \['text', 'position', 'name']\n    node = nuke.thisNode()\n    name = node.knob('name').value()\n    text = node.knob('text').value()\n    position = node.knob('position').value()\n    position = \"<\" + position + \">\"\n    label = node.knob('label').value()\n    \n    if nuke.thisKnob().name() in listenedKnobs:\n        if text == \"\":\n            if node.knob('position').value() == \"left\":\n                node.knob('label').setValue()\n            else:\n                node.knob('label').setValue(position + name)\n        else:\n            if node.knob('position').value() == \"left\":\n                node.knob('label').setValue(text)\n            else:\n                node.knob('label').setValue(position + text)\n                \n    elif nuke.thisKnob().name() == 'font_size':\n        fontSize = node.knob('font_size').value()\n        node.knob('note_font_size').setValue(fontSize)\nexcept:\n    pass"
    tile_color 0x927a99ff
    note_font_size 50
    xpos -473
    ypos -221
    bdwidth 435
    bdheight 786
    z_order 1
    addUserKnob {20 F_VFX l BackdropNode}
    addUserKnob {43 text l Text}
    addUserKnob {7 font_size l "Font Size" R 10 100}
    font_size 50
    addUserKnob {4 position l "" -STARTLINE M {Left Center}}
    addUserKnob {26 S01 l " " T " "}
    addUserKnob {22 grow l " <img src=\"F_scalep.png\">" -STARTLINE T "n=nuke.thisNode()\n\ndef grow(node=None,step=50):\n    try:\n        if not node:\n            n=nuke.selectedNode()\n        else:\n            n=node\n            n\['xpos'].setValue(n\['xpos'].getValue()-step)\n            n\['ypos'].setValue(n\['ypos'].getValue()-step)\n            n\['bdwidth'].setValue(n\['bdwidth'].getValue()+step*2)\n            n\['bdheight'].setValue(n\['bdheight'].getValue()+step*2)\n    except:\n        pass\ngrow(n,50)"}
    addUserKnob {22 shrink l " <img src=\"F_scalem.png\">" -STARTLINE T "n=nuke.thisNode()\n\ndef shrink(node=None,step=50):\n    try:\n        if not node:\n            n=nuke.selectedNode()\n        else:\n            n=node\n            n\['xpos'].setValue(n\['xpos'].getValue()+step)\n            n\['ypos'].setValue(n\['ypos'].getValue()+step)\n            n\['bdwidth'].setValue(n\['bdwidth'].getValue()-step*2)\n            n\['bdheight'].setValue(n\['bdheight'].getValue()-step*2)\n    except:\n        pass\nshrink(n,50)"}
    addUserKnob {22 colorandom l " <img src=\"ColorBars.png\">" -STARTLINE T "import colorsys, random\nn=nuke.thisNode()\nR,G,B= colorsys.hsv_to_rgb(random.random(),.1+random.random()*.15,.15+random.random()*.15)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ) )"}
    addUserKnob {22 darkgrey l "<font color=\"#232323\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.0, 0.0, 0.14]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 lightgrey l "<font color=\"#383838\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.0, 0.0, 0.22]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 red l "<font color=\"#8c3838\" size=6>■</font>" T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.0, 0.6, 0.55]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n" +STARTLINE}
    addUserKnob {22 orange l "<font color=\"#b28e59\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.1, 0.5, 0.7]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 yellow l "<font color=\"#ccc766\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.16, 0.5, 0.8]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 green l "<font color=\"#5d995b\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.33, 0.4, 0.6]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 cyan l "<font color=\"#72998f\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.46, 0.25, 0.6]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 blue l "<font color=\"#59687f\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.6, 0.3, 0.5]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 darkblue l "<font color=\"#63628c\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.67, 0.3, 0.55]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 magenta l "<font color=\"#927a99\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.8, 0.2, 0.6]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 pink l "<font color=\"#997a89\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.92, 0.2, 0.6]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {26 S02 l " " T " "}
    addUserKnob {26 Ftools l "" +STARTLINE T "<font color=\"#1C1C1C\"> v1.2 - Franklin VFX - 2018"}
   }
   Constant {
    inputs 0
    channels rgb
    name Constant13
    xpos -643
    ypos 714
   }
   AdjBBox {
    numpixels {{size_bbox}}
    name AdjBBox13
    xpos -643
    ypos 849
   }
   Dot {
    name Dot78
    xpos -609
    ypos 987
   }
   Axis3 {
    inputs 0
    useMatrix true
    matrix {
        {{parent.cCard3D_1.matrix} {parent.cCard3D_1.matrix} {parent.cCard3D_1.matrix} {parent.cCard3D_1.matrix}}
        {{parent.cCard3D_1.matrix} {parent.cCard3D_1.matrix} {parent.cCard3D_1.matrix} {parent.cCard3D_1.matrix}}
        {{parent.cCard3D_1.matrix} {parent.cCard3D_1.matrix} {parent.cCard3D_1.matrix} {parent.cCard3D_1.matrix}}
        {{parent.cCard3D_1.matrix} {parent.cCard3D_1.matrix} {parent.cCard3D_1.matrix} {parent.cCard3D_1.matrix}}
      }
    name Axis14
    xpos -203
    ypos -12
   }
set N1604a140 [stack 0]
push 0
   Input {
    inputs 0
    name Input1
    xpos -130
    ypos -1242
   }
   TimeOffset {
    time_offset {{"shotnmbr==0 ? 0 : shot\[value shotnmbr]-1"}}
    time ""
    name CTimeOffset
    label "shot: \[value shotnmbr]\non frame \[value time_offset]"
    xpos -130
    ypos -927
    addUserKnob {20 User}
    addUserKnob {3 shotnmbr l "shot "}
    shotnmbr {{shotcount}}
    addUserKnob {3 ref}
    ref {{time_offset+1}}
   }
   Group {
    name DecimalTimeOffset13
    tile_color 0xafa35dff
    label "random asset"
    note_font "Bitstream Vera Sans Bold"
    xpos -130
    ypos -844
    addUserKnob {20 User}
    addUserKnob {7 decimal l "time offset (decimal)"}
    decimal {{random(shotcount*seed)}}
    addUserKnob {26 ""}
    addUserKnob {26 _1 l "" +STARTLINE T "Chris Fryer | 2020\nupdated by Yorben Otto | 2024"}
   }
    Input {
     inputs 0
     name Input1
     xpos 426
     ypos -793
    }
    TimeOffset {
     time_offset {{(-floor(parent.decimal))*(DecimalTimeOffset13.decimal<0)}}
     time ""
     name TimeOffset1
     xpos 426
     ypos -675
    }
    Dot {
     name Dot6
     xpos 460
     ypos -635
    }
set N16089730 [stack 0]
    Dot {
     name Dot5
     xpos 350
     ypos -635
    }
    Dot {
     name Dot7
     xpos 350
     ypos -365
    }
push $N16089730
    Dot {
     name Dot1
     xpos 572
     ypos -635
    }
    TimeBlur {
     divisions 2
     shutter {{(parent.decimal-(floor(parent.decimal)))*2}}
     shutteroffset start
     shuttercustomoffset 0
     name TimeBlur1
     xpos 538
     ypos -558
    }
    Dot {
     name Dot2
     xpos 572
     ypos -490
    }
push $N16089730
    TimeBlur {
     divisions 2
     shutter {{parent.decimal*2}}
     shutteroffset start
     shuttercustomoffset 0
     name TimeBlur8
     xpos 426
     ypos -556
    }
    Switch {
     inputs 2
     which {{parent.decimal<0}}
     name Switch1
     xpos 426
     ypos -494
    }
    Multiply {
     value {{parent.TimeBlur8.divisions}}
     name Multiply6
     xpos 426
     ypos -436
    }
    Merge2 {
     inputs 2
     operation from
     name Merge6
     xpos 426
     ypos -369
    }
set N160cb710 [stack 0]
    Output {
     name Output1
     xpos 426
     ypos -221
    }
push $N160cb710
push $N160cb710
    Viewer {
     inputs 2
     frame_range 1-100
     name Viewer1
     xpos 675
     ypos -246
    }
   end_group
   NoTimeBlur {
    name NoTimeBlur13
    xpos -130
    ypos -782
   }
   Dot {
    name Dot79
    xpos -96
    ypos -463
   }
set N1616a520 [stack 0]
   Dot {
    name Dot81
    xpos -249
    ypos -463
   }
set N1616f550 [stack 0]
   Shuffle2 {
    fromInput1 {{0} B}
    fromInput2 {{0} B}
    mappings "4 rgba.blue 0 2 rgba.red 0 0 rgba.blue 0 2 rgba.green 0 1 rgba.blue 0 2 rgba.blue 0 2 black -1 -1 rgba.alpha 0 3"
    name Shuffle40
    label TOP
    xpos -283
    ypos -431
   }
   Multiply {
    value {{math_matrix.result_y_smoke(parent.CTimeOffset.ref)}}
    name Angle_reveal_top1
    label TOP
    xpos -283
    ypos -393
   }
   Transform {
    scale {{0.05+(0.05*(((parent.DecimalTimeOffset13.decimal-0.5)*2)*ScaleVariationSmoke))}}
    center {{root.width/2 x1015 2304} {root.height/2}}
    shutteroffset centred
    name Transform44
    xpos -283
    ypos -74
   }
   Card3D {
    inputs 3
    rot_order ZYX
    translate {0 0 0}
    rotate {90 0 0}
    shutteroffset centred
    name cCard3D25
    tile_color 0x7b1d1dff
    xpos -283
    ypos 89
    addUserKnob {20 User l parent}
    addUserKnob {22 python_button l "set parent" t "select parent node, and press this button to set the selected node as parent" +INVISIBLE T "n = nuke.selectedNode()\['name'].getValue()\nnuke.thisNode()\['string'].setValue(n)" +STARTLINE}
    addUserKnob {1 string l parent +INVISIBLE}
    string null
    addUserKnob {3 ref l "ref frame"}
    ref 1015
   }
   Transform {
    translate {{"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].translate.x(ref)\}]"} {"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].translate.y(ref)\}]"}}
    rotate {{"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].rotate-\[value parent_gun].rotate(ref)\}]"}}
    scale {{"\[if \{\[value parent_gun]==\"null\"\} \{return 1\} \{return 1+(\[value parent_gun].scale-\[value parent_gun].scale(ref))\}]"}}
    center {{"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].center.x(ref)\}]"} {"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].center.y(ref)\}]"}}
    name Transform_GUNMatchMove37
    xpos -283
    ypos 201
    addUserKnob {20 User l parent}
    addUserKnob {3 ref}
    ref {{parent.CTimeOffset.ref}}
   }
   NoTimeBlur {
    name NoTimeBlur3
    xpos -283
    ypos 259
   }
   Transform {
    translate {{"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].translate.x-\[value parent_env].translate.x(ref)\}]"} {"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].translate.y-\[value parent_env].translate.y(ref)\}]"}}
    rotate {{"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].rotate-\[value parent_env].rotate(ref)\}]"}}
    scale {{"\[if \{\[value parent_gun]==\"null\"\} \{return 1\} \{return 1+(\[value parent_env].scale-\[value parent_env].scale(ref))\}]"}}
    center {{"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].center.x(ref)\}]"} {"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].center.y(ref)\}]"}}
    motionblur 0.2
    shutter {{SmokeMB*0.5}}
    shutteroffset centred
    name Transform_ENVMatchMove37
    label "\n"
    xpos -283
    ypos 333
    addUserKnob {20 User l parent}
    addUserKnob {3 ref}
    ref {{parent.CTimeOffset.ref}}
   }
   Transform {
    translate {{"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return -((root.width/2)-(\[value parent_gun].center.x(1)+\[value parent_gun].translate.x(1)))\}]"} {"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return -((root.height/2)-(\[value parent_gun].center.y(1)+\[value parent_gun].translate.y(1)))\}]"}}
    name Transform_GUNMatchMove6
    label "alignment correction"
    xpos -283
    ypos 422
    addUserKnob {20 User l parent}
    addUserKnob {22 python_button l "set parent" t "select parent node, and press this button to set the selected node as parent" T "n = nuke.selectedNode()\['name'].getValue()\nnuke.thisNode()\['string'].setValue(n)" +STARTLINE}
    addUserKnob {1 string l parent}
    string Transform_MatchMove10
    addUserKnob {3 ref +INVISIBLE}
    ref {{parent.cCard3D_8.ref}}
   }
   Shuffle2 {
    fromInput1 {{0} B}
    fromInput2 {{0} B}
    mappings "4 rgba.red 0 0 rgba.red 0 0 rgba.green 0 1 rgba.green 0 1 rgba.blue 0 2 rgba.blue 0 2 rgba.blue 0 2 rgba.alpha 0 3"
    name Shuffle2
    xpos -283
    ypos 473
   }
   Remove {
    operation keep
    channels rgba
    name Remove1
    xpos -283
    ypos 512
   }
push 0
   Switch {
    inputs 2
    which {{parent.Angle_reveal_top1.value>0.001}}
    name Switch1
    xpos -283
    ypos 660
   }
   Dot {
    name Dot82
    xpos -249
    ypos 705
   }
push 0
push $N1604a140
push 0
push $N1616f550
   Dot {
    name Dot80
    xpos -402
    ypos -463
   }
   Shuffle2 {
    fromInput1 {{0} B}
    fromInput2 {{0} B}
    mappings "4 rgba.red 0 0 rgba.red 0 0 rgba.red 0 0 rgba.green 0 1 rgba.red 0 0 rgba.blue 0 2 black -1 -1 rgba.alpha 0 3"
    name Shuffle41
    label FRONT
    xpos -436
    ypos -431
   }
   Multiply {
    value {{math_matrix.result_x_smoke(parent.CTimeOffset.ref)}}
    name Angle_reveal_front1
    label FRONT
    xpos -436
    ypos -393
   }
   Transform {
    scale {{0.05+(0.05*(((parent.DecimalTimeOffset13.decimal-0.5)*2)*ScaleVariationSmoke))}}
    center {{root.width/2 x1015 2304} {root.height/2}}
    shutteroffset centred
    name Transform45
    xpos -436
    ypos -73
   }
   Card3D {
    inputs 3
    rot_order ZYX
    translate {0 0 0}
    rotate {0 90 0}
    shutteroffset centred
    name cCard3D26
    tile_color 0x7b1d1dff
    xpos -436
    ypos 93
    addUserKnob {20 User l parent}
    addUserKnob {22 python_button l "set parent" t "select parent node, and press this button to set the selected node as parent" +INVISIBLE T "n = nuke.selectedNode()\['name'].getValue()\nnuke.thisNode()\['string'].setValue(n)" +STARTLINE}
    addUserKnob {1 string l parent +INVISIBLE}
    string null
    addUserKnob {3 ref l "ref frame"}
    ref 1015
   }
   Transform {
    translate {{"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].translate.x(ref)\}]"} {"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].translate.y(ref)\}]"}}
    rotate {{"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].rotate-\[value parent_gun].rotate(ref)\}]"}}
    scale {{"\[if \{\[value parent_gun]==\"null\"\} \{return 1\} \{return 1+(\[value parent_gun].scale-\[value parent_gun].scale(ref))\}]"}}
    center {{"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].center.x(ref)\}]"} {"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].center.y(ref)\}]"}}
    name Transform_GUNMatchMove38
    label "\n"
    xpos -436
    ypos 203
    addUserKnob {20 User l parent}
    addUserKnob {3 ref}
    ref {{parent.CTimeOffset.ref}}
   }
   NoTimeBlur {
    name NoTimeBlur2
    xpos -436
    ypos 259
   }
   Transform {
    translate {{"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].translate.x-\[value parent_env].translate.x(ref)\}]"} {"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].translate.y-\[value parent_env].translate.y(ref)\}]"}}
    rotate {{"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].rotate-\[value parent_env].rotate(ref)\}]"}}
    scale {{"\[if \{\[value parent_gun]==\"null\"\} \{return 1\} \{return 1+(\[value parent_env].scale-\[value parent_env].scale(ref))\}]"}}
    center {{"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].center.x(ref)\}]"} {"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].center.y(ref)\}]"}}
    motionblur 0.2
    shutter {{SmokeMB*0.5}}
    shutteroffset centred
    name Transform_ENVMatchMove38
    xpos -436
    ypos 332
    addUserKnob {20 User l parent}
    addUserKnob {3 ref}
    ref {{parent.CTimeOffset.ref}}
   }
   Transform {
    translate {{"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return -((root.width/2)-(\[value parent_gun].center.x(1)+\[value parent_gun].translate.x(1)))\}]"} {"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return -((root.height/2)-(\[value parent_gun].center.y(1)+\[value parent_gun].translate.y(1)))\}]"}}
    name Transform_GUNMatchMove7
    label "alignment correction"
    xpos -436
    ypos 421
    addUserKnob {20 User l parent}
    addUserKnob {22 python_button l "set parent" t "select parent node, and press this button to set the selected node as parent" T "n = nuke.selectedNode()\['name'].getValue()\nnuke.thisNode()\['string'].setValue(n)" +STARTLINE}
    addUserKnob {1 string l parent}
    string Transform_MatchMove10
    addUserKnob {3 ref +INVISIBLE}
    ref {{parent.cCard3D_8.ref}}
   }
   Shuffle2 {
    fromInput1 {{0} B}
    fromInput2 {{0} B}
    mappings "4 rgba.red 0 0 rgba.red 0 0 rgba.green 0 1 rgba.green 0 1 rgba.blue 0 2 rgba.blue 0 2 rgba.blue 0 2 rgba.alpha 0 3"
    name Shuffle3
    xpos -436
    ypos 472
   }
   Remove {
    operation keep
    channels rgba
    name Remove2
    xpos -436
    ypos 511
   }
push 0
   Switch {
    inputs 2
    which {{parent.Angle_reveal_front1.value>0.001}}
    name Switch2
    xpos -436
    ypos 660
   }
   Dot {
    name Dot83
    xpos -402
    ypos 735
   }
push $N1616a520
   Shuffle2 {
    fromInput1 {{0} B}
    fromInput2 {{0} B}
    mappings "4 rgba.green 0 1 rgba.red 0 0 rgba.green 0 1 rgba.green 0 1 rgba.green 0 1 rgba.blue 0 2 black -1 -1 rgba.alpha 0 3"
    name Shuffle42
    label SIDE
    xpos -130
    ypos -425
   }
   Multiply {
    value {{math_matrix.result_z_smoke(parent.CTimeOffset.ref)}}
    name Angle_reveal_side1
    label SIDE
    xpos -130
    ypos -387
   }
   Transform {
    scale {{0.05+(0.05*(((parent.DecimalTimeOffset13.decimal-0.5)*2)*ScaleVariationSmoke))}}
    center {{root.width/2 x1015 2304} {root.height/2}}
    shutteroffset centred
    name Transform46
    xpos -130
    ypos -77
   }
   Card3D {
    translate {{"\[if \{\[exists  parent.parent.parent.input0]\} \{return \[value \[topnode parent.parent.parent.input0].name].translate.x(ref)\} \{return 0\}]"} {"\[if \{\[exists  parent.parent.parent.input0]\} \{return \[value \[topnode parent.parent.parent.input0].name].translate.y(ref)\} \{return 0\}]"} {"\[if \{\[exists  parent.parent.parent.input0]\} \{return \[value \[topnode parent.parent.parent.input0].name].translate.z(ref)\} \{return -1\}]"}}
    rotate {{"\[if \{\[exists  parent.parent.parent.input0]\} \{return \[value \[topnode parent.parent.parent.input0].name].rotate.x(ref)\} \{return 0\}]"} {"\[if \{\[exists  parent.parent.parent.input0]\} \{return \[value \[topnode parent.parent.parent.input0].name].rotate.y(ref)\} \{return 0\}]"} {"\[if \{\[exists  parent.parent.parent.input0]\} \{return \[value \[topnode parent.parent.parent.input0].name].rotate.z(ref)\} \{return 0\}]"}}
    scaling {{"\[if \{\[exists  parent.parent.parent.input0]\} \{return \[value \[topnode parent.parent.parent.input0].name].scaling.x(ref)\} \{return 1\}]"} {"\[if \{\[exists  parent.parent.parent.input0]\} \{return \[value \[topnode parent.parent.parent.input0].name].scaling.y(ref)\} \{return 1\}]"} {"\[if \{\[exists  parent.parent.parent.input0]\} \{return \[value \[topnode parent.parent.parent.input0].name].scaling.z(ref)\} \{return 1\}]"}}
    uniform_scale {{"\[if \{\[exists  parent.parent.parent.input0]\} \{return (\[value \[topnode parent.parent.parent.input0].name].uniform_scale(ref)*25)\} \{return 25\}]"}}
    shutteroffset centred
    name cCard3D_1
    tile_color 0x7b1d1dff
    label "ref frame: \[value ref]"
    selected true
    xpos -130
    ypos 80
    addUserKnob {20 User l parent}
    addUserKnob {22 python_button l "set parent" t "select parent node, and press this button to set the selected node as parent" +INVISIBLE T "n = nuke.selectedNode()\['name'].getValue()\nnuke.thisNode()\['string'].setValue(n)" +STARTLINE}
    addUserKnob {1 string l parent +INVISIBLE}
    string null
    addUserKnob {3 id l "id number"}
    id {{parent.CTimeOffset.shotnmbr}}
    addUserKnob {3 ref l "ref frame"}
    ref {{parent.CTimeOffset.ref}}
   }
   Transform {
    translate {{"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].translate.x(ref)\}]"} {"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].translate.y(ref)\}]"}}
    rotate {{"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].rotate-\[value parent_gun].rotate(ref)\}]"}}
    scale {{"\[if \{\[value parent_gun]==\"null\"\} \{return 1\} \{return 1+(\[value parent_gun].scale-\[value parent_gun].scale(ref))\}]"}}
    center {{"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].center.x(ref)\}]"} {"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].center.y(ref)\}]"}}
    name Transform_GUNMatchMove39
    label "\n"
    xpos -130
    ypos 201
    addUserKnob {20 User l parent}
    addUserKnob {3 ref}
    ref {{parent.CTimeOffset.ref}}
   }
   NoTimeBlur {
    name NoTimeBlur4
    xpos -130
    ypos 258
   }
   Transform {
    translate {{"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].translate.x-\[value parent_env].translate.x(ref)\}]"} {"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].translate.y-\[value parent_env].translate.y(ref)\}]"}}
    rotate {{"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].rotate-\[value parent_env].rotate(ref)\}]"}}
    scale {{"\[if \{\[value parent_gun]==\"null\"\} \{return 1\} \{return 1+(\[value parent_env].scale-\[value parent_env].scale(ref))\}]"}}
    center {{"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].center.x(ref)\}]"} {"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].center.y(ref)\}]"}}
    motionblur 0.2
    shutter {{SmokeMB*0.5}}
    shutteroffset centred
    name Transform_ENVMatchMove39
    xpos -130
    ypos 336
    addUserKnob {20 User l parent}
    addUserKnob {3 ref}
    ref {{parent.CTimeOffset.ref}}
   }
   Transform {
    translate {{"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return -((root.width/2)-(\[value parent_gun].center.x(1)+\[value parent_gun].translate.x(1)))\}]"} {"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return -((root.height/2)-(\[value parent_gun].center.y(1)+\[value parent_gun].translate.y(1)))\}]"}}
    name Transform_GUNMatchMove5
    label "alignment correction"
    xpos -130
    ypos 417
    addUserKnob {20 User l parent}
    addUserKnob {22 python_button l "set parent" t "select parent node, and press this button to set the selected node as parent" T "n = nuke.selectedNode()\['name'].getValue()\nnuke.thisNode()\['string'].setValue(n)" +STARTLINE}
    addUserKnob {1 string l parent}
    string Transform_MatchMove10
    addUserKnob {3 ref +INVISIBLE}
    ref {{parent.cCard3D_8.ref}}
   }
   Shuffle2 {
    fromInput1 {{0} B}
    fromInput2 {{0} B}
    mappings "4 rgba.red 0 0 rgba.red 0 0 rgba.green 0 1 rgba.green 0 1 rgba.blue 0 2 rgba.blue 0 2 rgba.blue 0 2 rgba.alpha 0 3"
    name Shuffle1
    xpos -130
    ypos 465
   }
   Remove {
    operation keep
    channels rgba
    name Remove39
    xpos -130
    ypos 504
   }
push 0
   Switch {
    inputs 2
    which {{parent.Angle_reveal_side1.value>0.001}}
    name Switch3
    xpos -130
    ypos 658
   }
   Merge2 {
    inputs 3+1
    operation max
    name Merge28
    xpos -130
    ypos 731
   }
   Merge2 {
    inputs 2
    operation plus
    bbox intersection
    name Merge29
    xpos -130
    ypos 983
   }
push 0
   Switch {
    inputs 2
    which {{"shot\[value count]==0?0:frame>=shot\[value count]"}}
    name cSwitch_13
    xpos -130
    ypos 1065
    addUserKnob {20 User}
    addUserKnob {3 count}
    count {{parent.CTimeOffset.shotnmbr}}
   }
   Output {
    name Output1
    xpos -130
    ypos 1323
   }
  end_group
push 0
push $N1600e6f0
  Dot {
   name Dot11
   xpos 1204
   ypos -711
  }
set N16357620 [stack 0]
  Group {
   name gunshot11
   label "shot: \[value shotcount]\non frame: \[value shotstart]\n"
   xpos 1170
   ypos -357
   addUserKnob {20 User}
   addUserKnob {3 shotcount l shot}
   shotcount 11
   addUserKnob {3 shotstart l frame +INVISIBLE}
   shotstart {{"shotcount==0 ? 0 : shot\[value shotcount]-1" i}}
  }
   BackdropNode {
    inputs 0
    name BackdropNode19
    knobChanged "try:\n    listenedKnobs = \['text', 'position', 'name']\n    node = nuke.thisNode()\n    name = node.knob('name').value()\n    text = node.knob('text').value()\n    position = node.knob('position').value()\n    position = \"<\" + position + \">\"\n    label = node.knob('label').value()\n    \n    if nuke.thisKnob().name() in listenedKnobs:\n        if text == \"\":\n            if node.knob('position').value() == \"left\":\n                node.knob('label').setValue()\n            else:\n                node.knob('label').setValue(position + name)\n        else:\n            if node.knob('position').value() == \"left\":\n                node.knob('label').setValue(text)\n            else:\n                node.knob('label').setValue(position + text)\n                \n    elif nuke.thisKnob().name() == 'font_size':\n        fontSize = node.knob('font_size').value()\n        node.knob('note_font_size').setValue(fontSize)\nexcept:\n    pass"
    tile_color 0x232323ff
    label "<Left><h2> Gunshot"
    note_font_size 31.5
    xpos -693
    ypos -554
    bdwidth 876
    bdheight 1682
    addUserKnob {20 F_VFX l BackdropNode}
    addUserKnob {43 text l Text}
    text "<h2> Gunshot"
    addUserKnob {7 font_size l "Font Size" R 10 100}
    font_size 31.5
    addUserKnob {4 position l "" -STARTLINE M {Left Center}}
    addUserKnob {26 S01 l " " T " "}
    addUserKnob {22 grow l " <img src=\"F_scalep.png\">" -STARTLINE T "n=nuke.thisNode()\n\ndef grow(node=None,step=50):\n    try:\n        if not node:\n            n=nuke.selectedNode()\n        else:\n            n=node\n            n\['xpos'].setValue(n\['xpos'].getValue()-step)\n            n\['ypos'].setValue(n\['ypos'].getValue()-step)\n            n\['bdwidth'].setValue(n\['bdwidth'].getValue()+step*2)\n            n\['bdheight'].setValue(n\['bdheight'].getValue()+step*2)\n    except:\n        pass\ngrow(n,50)"}
    addUserKnob {22 shrink l " <img src=\"F_scalem.png\">" -STARTLINE T "n=nuke.thisNode()\n\ndef shrink(node=None,step=50):\n    try:\n        if not node:\n            n=nuke.selectedNode()\n        else:\n            n=node\n            n\['xpos'].setValue(n\['xpos'].getValue()+step)\n            n\['ypos'].setValue(n\['ypos'].getValue()+step)\n            n\['bdwidth'].setValue(n\['bdwidth'].getValue()-step*2)\n            n\['bdheight'].setValue(n\['bdheight'].getValue()-step*2)\n    except:\n        pass\nshrink(n,50)"}
    addUserKnob {22 colorandom l " <img src=\"ColorBars.png\">" -STARTLINE T "import colorsys, random\nn=nuke.thisNode()\nR,G,B= colorsys.hsv_to_rgb(random.random(),.1+random.random()*.15,.15+random.random()*.15)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ) )"}
    addUserKnob {22 darkgrey l "<font color=\"#232323\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.0, 0.0, 0.14]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 lightgrey l "<font color=\"#383838\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.0, 0.0, 0.22]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 red l "<font color=\"#8c3838\" size=6>■</font>" T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.0, 0.6, 0.55]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n" +STARTLINE}
    addUserKnob {22 orange l "<font color=\"#b28e59\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.1, 0.5, 0.7]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 yellow l "<font color=\"#ccc766\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.16, 0.5, 0.8]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 green l "<font color=\"#5d995b\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.33, 0.4, 0.6]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 cyan l "<font color=\"#72998f\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.46, 0.25, 0.6]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 blue l "<font color=\"#59687f\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.6, 0.3, 0.5]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 darkblue l "<font color=\"#63628c\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.67, 0.3, 0.55]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 magenta l "<font color=\"#927a99\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.8, 0.2, 0.6]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 pink l "<font color=\"#997a89\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.92, 0.2, 0.6]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {26 S02 l " " T " "}
    addUserKnob {26 Ftools l "" +STARTLINE T "<font color=\"#1C1C1C\"> v1.2 - Franklin VFX - 2018"}
   }
   BackdropNode {
    inputs 0
    name BackdropNode2
    knobChanged "try:\n    listenedKnobs = \['text', 'position', 'name']\n    node = nuke.thisNode()\n    name = node.knob('name').value()\n    text = node.knob('text').value()\n    position = node.knob('position').value()\n    position = \"<\" + position + \">\"\n    label = node.knob('label').value()\n    \n    if nuke.thisKnob().name() in listenedKnobs:\n        if text == \"\":\n            if node.knob('position').value() == \"left\":\n                node.knob('label').setValue()\n            else:\n                node.knob('label').setValue(position + name)\n        else:\n            if node.knob('position').value() == \"left\":\n                node.knob('label').setValue(text)\n            else:\n                node.knob('label').setValue(position + text)\n                \n    elif nuke.thisKnob().name() == 'font_size':\n        fontSize = node.knob('font_size').value()\n        node.knob('note_font_size').setValue(fontSize)\nexcept:\n    pass"
    tile_color 0x927a99ff
    note_font_size 50
    xpos -473
    ypos -221
    bdwidth 435
    bdheight 786
    z_order 1
    addUserKnob {20 F_VFX l BackdropNode}
    addUserKnob {43 text l Text}
    addUserKnob {7 font_size l "Font Size" R 10 100}
    font_size 50
    addUserKnob {4 position l "" -STARTLINE M {Left Center}}
    addUserKnob {26 S01 l " " T " "}
    addUserKnob {22 grow l " <img src=\"F_scalep.png\">" -STARTLINE T "n=nuke.thisNode()\n\ndef grow(node=None,step=50):\n    try:\n        if not node:\n            n=nuke.selectedNode()\n        else:\n            n=node\n            n\['xpos'].setValue(n\['xpos'].getValue()-step)\n            n\['ypos'].setValue(n\['ypos'].getValue()-step)\n            n\['bdwidth'].setValue(n\['bdwidth'].getValue()+step*2)\n            n\['bdheight'].setValue(n\['bdheight'].getValue()+step*2)\n    except:\n        pass\ngrow(n,50)"}
    addUserKnob {22 shrink l " <img src=\"F_scalem.png\">" -STARTLINE T "n=nuke.thisNode()\n\ndef shrink(node=None,step=50):\n    try:\n        if not node:\n            n=nuke.selectedNode()\n        else:\n            n=node\n            n\['xpos'].setValue(n\['xpos'].getValue()+step)\n            n\['ypos'].setValue(n\['ypos'].getValue()+step)\n            n\['bdwidth'].setValue(n\['bdwidth'].getValue()-step*2)\n            n\['bdheight'].setValue(n\['bdheight'].getValue()-step*2)\n    except:\n        pass\nshrink(n,50)"}
    addUserKnob {22 colorandom l " <img src=\"ColorBars.png\">" -STARTLINE T "import colorsys, random\nn=nuke.thisNode()\nR,G,B= colorsys.hsv_to_rgb(random.random(),.1+random.random()*.15,.15+random.random()*.15)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ) )"}
    addUserKnob {22 darkgrey l "<font color=\"#232323\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.0, 0.0, 0.14]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 lightgrey l "<font color=\"#383838\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.0, 0.0, 0.22]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 red l "<font color=\"#8c3838\" size=6>■</font>" T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.0, 0.6, 0.55]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n" +STARTLINE}
    addUserKnob {22 orange l "<font color=\"#b28e59\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.1, 0.5, 0.7]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 yellow l "<font color=\"#ccc766\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.16, 0.5, 0.8]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 green l "<font color=\"#5d995b\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.33, 0.4, 0.6]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 cyan l "<font color=\"#72998f\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.46, 0.25, 0.6]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 blue l "<font color=\"#59687f\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.6, 0.3, 0.5]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 darkblue l "<font color=\"#63628c\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.67, 0.3, 0.55]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 magenta l "<font color=\"#927a99\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.8, 0.2, 0.6]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 pink l "<font color=\"#997a89\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.92, 0.2, 0.6]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {26 S02 l " " T " "}
    addUserKnob {26 Ftools l "" +STARTLINE T "<font color=\"#1C1C1C\"> v1.2 - Franklin VFX - 2018"}
   }
   Constant {
    inputs 0
    channels rgb
    name Constant13
    xpos -643
    ypos 714
   }
   AdjBBox {
    numpixels {{size_bbox}}
    name AdjBBox13
    xpos -643
    ypos 849
   }
   Dot {
    name Dot78
    xpos -609
    ypos 987
   }
   Axis3 {
    inputs 0
    useMatrix true
    matrix {
        {{parent.cCard3D_1.matrix} {parent.cCard3D_1.matrix} {parent.cCard3D_1.matrix} {parent.cCard3D_1.matrix}}
        {{parent.cCard3D_1.matrix} {parent.cCard3D_1.matrix} {parent.cCard3D_1.matrix} {parent.cCard3D_1.matrix}}
        {{parent.cCard3D_1.matrix} {parent.cCard3D_1.matrix} {parent.cCard3D_1.matrix} {parent.cCard3D_1.matrix}}
        {{parent.cCard3D_1.matrix} {parent.cCard3D_1.matrix} {parent.cCard3D_1.matrix} {parent.cCard3D_1.matrix}}
      }
    name Axis14
    xpos -203
    ypos -12
   }
set N16393060 [stack 0]
push 0
   Input {
    inputs 0
    name Input1
    xpos -130
    ypos -1242
   }
   TimeOffset {
    time_offset {{"shotnmbr==0 ? 0 : shot\[value shotnmbr]-1"}}
    time ""
    name CTimeOffset
    label "shot: \[value shotnmbr]\non frame \[value time_offset]"
    xpos -130
    ypos -927
    addUserKnob {20 User}
    addUserKnob {3 shotnmbr l "shot "}
    shotnmbr {{shotcount}}
    addUserKnob {3 ref}
    ref {{time_offset+1}}
   }
   Group {
    name DecimalTimeOffset13
    tile_color 0xafa35dff
    label "random asset"
    note_font "Bitstream Vera Sans Bold"
    xpos -130
    ypos -844
    addUserKnob {20 User}
    addUserKnob {7 decimal l "time offset (decimal)"}
    decimal {{random(shotcount*seed)}}
    addUserKnob {26 ""}
    addUserKnob {26 _1 l "" +STARTLINE T "Chris Fryer | 2020\nupdated by Yorben Otto | 2024"}
   }
    Input {
     inputs 0
     name Input1
     xpos 426
     ypos -793
    }
    TimeOffset {
     time_offset {{(-floor(parent.decimal))*(DecimalTimeOffset13.decimal<0)}}
     time ""
     name TimeOffset1
     xpos 426
     ypos -675
    }
    Dot {
     name Dot6
     xpos 460
     ypos -635
    }
set N163d25c0 [stack 0]
    Dot {
     name Dot5
     xpos 350
     ypos -635
    }
    Dot {
     name Dot7
     xpos 350
     ypos -365
    }
push $N163d25c0
    Dot {
     name Dot1
     xpos 572
     ypos -635
    }
    TimeBlur {
     divisions 2
     shutter {{(parent.decimal-(floor(parent.decimal)))*2}}
     shutteroffset start
     shuttercustomoffset 0
     name TimeBlur1
     xpos 538
     ypos -558
    }
    Dot {
     name Dot2
     xpos 572
     ypos -490
    }
push $N163d25c0
    TimeBlur {
     divisions 2
     shutter {{parent.decimal*2}}
     shutteroffset start
     shuttercustomoffset 0
     name TimeBlur8
     xpos 426
     ypos -556
    }
    Switch {
     inputs 2
     which {{parent.decimal<0}}
     name Switch1
     xpos 426
     ypos -494
    }
    Multiply {
     value {{parent.TimeBlur8.divisions}}
     name Multiply6
     xpos 426
     ypos -436
    }
    Merge2 {
     inputs 2
     operation from
     name Merge6
     xpos 426
     ypos -369
    }
set N164145a0 [stack 0]
    Output {
     name Output1
     xpos 426
     ypos -221
    }
push $N164145a0
push $N164145a0
    Viewer {
     inputs 2
     frame_range 1-100
     name Viewer1
     xpos 675
     ypos -246
    }
   end_group
   NoTimeBlur {
    name NoTimeBlur13
    xpos -130
    ypos -782
   }
   Dot {
    name Dot79
    xpos -96
    ypos -463
   }
set N164b33b0 [stack 0]
   Dot {
    name Dot81
    xpos -249
    ypos -463
   }
set N164b8470 [stack 0]
   Shuffle2 {
    fromInput1 {{0} B}
    fromInput2 {{0} B}
    mappings "4 rgba.blue 0 2 rgba.red 0 0 rgba.blue 0 2 rgba.green 0 1 rgba.blue 0 2 rgba.blue 0 2 black -1 -1 rgba.alpha 0 3"
    name Shuffle40
    label TOP
    xpos -283
    ypos -431
   }
   Multiply {
    value {{math_matrix.result_y_smoke(parent.CTimeOffset.ref)}}
    name Angle_reveal_top1
    label TOP
    xpos -283
    ypos -393
   }
   Transform {
    scale {{0.05+(0.05*(((parent.DecimalTimeOffset13.decimal-0.5)*2)*ScaleVariationSmoke))}}
    center {{root.width/2 x1015 2304} {root.height/2}}
    shutteroffset centred
    name Transform44
    xpos -283
    ypos -74
   }
   Card3D {
    inputs 3
    rot_order ZYX
    translate {0 0 0}
    rotate {90 0 0}
    shutteroffset centred
    name cCard3D25
    tile_color 0x7b1d1dff
    xpos -283
    ypos 89
    addUserKnob {20 User l parent}
    addUserKnob {22 python_button l "set parent" t "select parent node, and press this button to set the selected node as parent" +INVISIBLE T "n = nuke.selectedNode()\['name'].getValue()\nnuke.thisNode()\['string'].setValue(n)" +STARTLINE}
    addUserKnob {1 string l parent +INVISIBLE}
    string null
    addUserKnob {3 ref l "ref frame"}
    ref 1015
   }
   Transform {
    translate {{"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].translate.x(ref)\}]"} {"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].translate.y(ref)\}]"}}
    rotate {{"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].rotate-\[value parent_gun].rotate(ref)\}]"}}
    scale {{"\[if \{\[value parent_gun]==\"null\"\} \{return 1\} \{return 1+(\[value parent_gun].scale-\[value parent_gun].scale(ref))\}]"}}
    center {{"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].center.x(ref)\}]"} {"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].center.y(ref)\}]"}}
    name Transform_GUNMatchMove37
    xpos -283
    ypos 201
    addUserKnob {20 User l parent}
    addUserKnob {3 ref}
    ref {{parent.CTimeOffset.ref}}
   }
   NoTimeBlur {
    name NoTimeBlur3
    xpos -283
    ypos 259
   }
   Transform {
    translate {{"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].translate.x-\[value parent_env].translate.x(ref)\}]"} {"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].translate.y-\[value parent_env].translate.y(ref)\}]"}}
    rotate {{"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].rotate-\[value parent_env].rotate(ref)\}]"}}
    scale {{"\[if \{\[value parent_gun]==\"null\"\} \{return 1\} \{return 1+(\[value parent_env].scale-\[value parent_env].scale(ref))\}]"}}
    center {{"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].center.x(ref)\}]"} {"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].center.y(ref)\}]"}}
    motionblur 0.2
    shutter {{SmokeMB*0.5}}
    shutteroffset centred
    name Transform_ENVMatchMove37
    label "\n"
    xpos -283
    ypos 333
    addUserKnob {20 User l parent}
    addUserKnob {3 ref}
    ref {{parent.CTimeOffset.ref}}
   }
   Transform {
    translate {{"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return -((root.width/2)-(\[value parent_gun].center.x(1)+\[value parent_gun].translate.x(1)))\}]"} {"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return -((root.height/2)-(\[value parent_gun].center.y(1)+\[value parent_gun].translate.y(1)))\}]"}}
    name Transform_GUNMatchMove6
    label "alignment correction"
    xpos -283
    ypos 422
    addUserKnob {20 User l parent}
    addUserKnob {22 python_button l "set parent" t "select parent node, and press this button to set the selected node as parent" T "n = nuke.selectedNode()\['name'].getValue()\nnuke.thisNode()\['string'].setValue(n)" +STARTLINE}
    addUserKnob {1 string l parent}
    string Transform_MatchMove10
    addUserKnob {3 ref +INVISIBLE}
    ref {{parent.cCard3D_8.ref}}
   }
   Shuffle2 {
    fromInput1 {{0} B}
    fromInput2 {{0} B}
    mappings "4 rgba.red 0 0 rgba.red 0 0 rgba.green 0 1 rgba.green 0 1 rgba.blue 0 2 rgba.blue 0 2 rgba.blue 0 2 rgba.alpha 0 3"
    name Shuffle2
    xpos -283
    ypos 473
   }
   Remove {
    operation keep
    channels rgba
    name Remove1
    xpos -283
    ypos 512
   }
push 0
   Switch {
    inputs 2
    which {{parent.Angle_reveal_top1.value>0.001}}
    name Switch1
    xpos -283
    ypos 660
   }
   Dot {
    name Dot82
    xpos -249
    ypos 705
   }
push 0
push $N16393060
push 0
push $N164b8470
   Dot {
    name Dot80
    xpos -402
    ypos -463
   }
   Shuffle2 {
    fromInput1 {{0} B}
    fromInput2 {{0} B}
    mappings "4 rgba.red 0 0 rgba.red 0 0 rgba.red 0 0 rgba.green 0 1 rgba.red 0 0 rgba.blue 0 2 black -1 -1 rgba.alpha 0 3"
    name Shuffle41
    label FRONT
    xpos -436
    ypos -431
   }
   Multiply {
    value {{math_matrix.result_x_smoke(parent.CTimeOffset.ref)}}
    name Angle_reveal_front1
    label FRONT
    xpos -436
    ypos -393
   }
   Transform {
    scale {{0.05+(0.05*(((parent.DecimalTimeOffset13.decimal-0.5)*2)*ScaleVariationSmoke))}}
    center {{root.width/2 x1015 2304} {root.height/2}}
    shutteroffset centred
    name Transform45
    xpos -436
    ypos -73
   }
   Card3D {
    inputs 3
    rot_order ZYX
    translate {0 0 0}
    rotate {0 90 0}
    shutteroffset centred
    name cCard3D26
    tile_color 0x7b1d1dff
    xpos -436
    ypos 93
    addUserKnob {20 User l parent}
    addUserKnob {22 python_button l "set parent" t "select parent node, and press this button to set the selected node as parent" +INVISIBLE T "n = nuke.selectedNode()\['name'].getValue()\nnuke.thisNode()\['string'].setValue(n)" +STARTLINE}
    addUserKnob {1 string l parent +INVISIBLE}
    string null
    addUserKnob {3 ref l "ref frame"}
    ref 1015
   }
   Transform {
    translate {{"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].translate.x(ref)\}]"} {"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].translate.y(ref)\}]"}}
    rotate {{"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].rotate-\[value parent_gun].rotate(ref)\}]"}}
    scale {{"\[if \{\[value parent_gun]==\"null\"\} \{return 1\} \{return 1+(\[value parent_gun].scale-\[value parent_gun].scale(ref))\}]"}}
    center {{"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].center.x(ref)\}]"} {"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].center.y(ref)\}]"}}
    name Transform_GUNMatchMove38
    label "\n"
    xpos -436
    ypos 203
    addUserKnob {20 User l parent}
    addUserKnob {3 ref}
    ref {{parent.CTimeOffset.ref}}
   }
   NoTimeBlur {
    name NoTimeBlur2
    xpos -436
    ypos 259
   }
   Transform {
    translate {{"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].translate.x-\[value parent_env].translate.x(ref)\}]"} {"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].translate.y-\[value parent_env].translate.y(ref)\}]"}}
    rotate {{"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].rotate-\[value parent_env].rotate(ref)\}]"}}
    scale {{"\[if \{\[value parent_gun]==\"null\"\} \{return 1\} \{return 1+(\[value parent_env].scale-\[value parent_env].scale(ref))\}]"}}
    center {{"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].center.x(ref)\}]"} {"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].center.y(ref)\}]"}}
    motionblur 0.2
    shutter {{SmokeMB*0.5}}
    shutteroffset centred
    name Transform_ENVMatchMove38
    xpos -436
    ypos 332
    addUserKnob {20 User l parent}
    addUserKnob {3 ref}
    ref {{parent.CTimeOffset.ref}}
   }
   Transform {
    translate {{"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return -((root.width/2)-(\[value parent_gun].center.x(1)+\[value parent_gun].translate.x(1)))\}]"} {"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return -((root.height/2)-(\[value parent_gun].center.y(1)+\[value parent_gun].translate.y(1)))\}]"}}
    name Transform_GUNMatchMove7
    label "alignment correction"
    xpos -436
    ypos 421
    addUserKnob {20 User l parent}
    addUserKnob {22 python_button l "set parent" t "select parent node, and press this button to set the selected node as parent" T "n = nuke.selectedNode()\['name'].getValue()\nnuke.thisNode()\['string'].setValue(n)" +STARTLINE}
    addUserKnob {1 string l parent}
    string Transform_MatchMove10
    addUserKnob {3 ref +INVISIBLE}
    ref {{parent.cCard3D_8.ref}}
   }
   Shuffle2 {
    fromInput1 {{0} B}
    fromInput2 {{0} B}
    mappings "4 rgba.red 0 0 rgba.red 0 0 rgba.green 0 1 rgba.green 0 1 rgba.blue 0 2 rgba.blue 0 2 rgba.blue 0 2 rgba.alpha 0 3"
    name Shuffle3
    xpos -436
    ypos 472
   }
   Remove {
    operation keep
    channels rgba
    name Remove2
    xpos -436
    ypos 511
   }
push 0
   Switch {
    inputs 2
    which {{parent.Angle_reveal_front1.value>0.001}}
    name Switch2
    xpos -436
    ypos 660
   }
   Dot {
    name Dot83
    xpos -402
    ypos 735
   }
push $N164b33b0
   Shuffle2 {
    fromInput1 {{0} B}
    fromInput2 {{0} B}
    mappings "4 rgba.green 0 1 rgba.red 0 0 rgba.green 0 1 rgba.green 0 1 rgba.green 0 1 rgba.blue 0 2 black -1 -1 rgba.alpha 0 3"
    name Shuffle42
    label SIDE
    xpos -130
    ypos -425
   }
   Multiply {
    value {{math_matrix.result_z_smoke(parent.CTimeOffset.ref)}}
    name Angle_reveal_side1
    label SIDE
    xpos -130
    ypos -387
   }
   Transform {
    scale {{0.05+(0.05*(((parent.DecimalTimeOffset13.decimal-0.5)*2)*ScaleVariationSmoke))}}
    center {{root.width/2 x1015 2304} {root.height/2}}
    shutteroffset centred
    name Transform46
    xpos -130
    ypos -77
   }
   Card3D {
    translate {{"\[if \{\[exists  parent.parent.parent.input0]\} \{return \[value \[topnode parent.parent.parent.input0].name].translate.x(ref)\} \{return 0\}]"} {"\[if \{\[exists  parent.parent.parent.input0]\} \{return \[value \[topnode parent.parent.parent.input0].name].translate.y(ref)\} \{return 0\}]"} {"\[if \{\[exists  parent.parent.parent.input0]\} \{return \[value \[topnode parent.parent.parent.input0].name].translate.z(ref)\} \{return -1\}]"}}
    rotate {{"\[if \{\[exists  parent.parent.parent.input0]\} \{return \[value \[topnode parent.parent.parent.input0].name].rotate.x(ref)\} \{return 0\}]"} {"\[if \{\[exists  parent.parent.parent.input0]\} \{return \[value \[topnode parent.parent.parent.input0].name].rotate.y(ref)\} \{return 0\}]"} {"\[if \{\[exists  parent.parent.parent.input0]\} \{return \[value \[topnode parent.parent.parent.input0].name].rotate.z(ref)\} \{return 0\}]"}}
    scaling {{"\[if \{\[exists  parent.parent.parent.input0]\} \{return \[value \[topnode parent.parent.parent.input0].name].scaling.x(ref)\} \{return 1\}]"} {"\[if \{\[exists  parent.parent.parent.input0]\} \{return \[value \[topnode parent.parent.parent.input0].name].scaling.y(ref)\} \{return 1\}]"} {"\[if \{\[exists  parent.parent.parent.input0]\} \{return \[value \[topnode parent.parent.parent.input0].name].scaling.z(ref)\} \{return 1\}]"}}
    uniform_scale {{"\[if \{\[exists  parent.parent.parent.input0]\} \{return (\[value \[topnode parent.parent.parent.input0].name].uniform_scale(ref)*25)\} \{return 25\}]"}}
    shutteroffset centred
    name cCard3D_1
    tile_color 0x7b1d1dff
    label "ref frame: \[value ref]"
    selected true
    xpos -130
    ypos 80
    addUserKnob {20 User l parent}
    addUserKnob {22 python_button l "set parent" t "select parent node, and press this button to set the selected node as parent" +INVISIBLE T "n = nuke.selectedNode()\['name'].getValue()\nnuke.thisNode()\['string'].setValue(n)" +STARTLINE}
    addUserKnob {1 string l parent +INVISIBLE}
    string null
    addUserKnob {3 id l "id number"}
    id {{parent.CTimeOffset.shotnmbr}}
    addUserKnob {3 ref l "ref frame"}
    ref {{parent.CTimeOffset.ref}}
   }
   Transform {
    translate {{"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].translate.x(ref)\}]"} {"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].translate.y(ref)\}]"}}
    rotate {{"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].rotate-\[value parent_gun].rotate(ref)\}]"}}
    scale {{"\[if \{\[value parent_gun]==\"null\"\} \{return 1\} \{return 1+(\[value parent_gun].scale-\[value parent_gun].scale(ref))\}]"}}
    center {{"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].center.x(ref)\}]"} {"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].center.y(ref)\}]"}}
    name Transform_GUNMatchMove39
    label "\n"
    xpos -130
    ypos 201
    addUserKnob {20 User l parent}
    addUserKnob {3 ref}
    ref {{parent.CTimeOffset.ref}}
   }
   NoTimeBlur {
    name NoTimeBlur4
    xpos -130
    ypos 258
   }
   Transform {
    translate {{"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].translate.x-\[value parent_env].translate.x(ref)\}]"} {"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].translate.y-\[value parent_env].translate.y(ref)\}]"}}
    rotate {{"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].rotate-\[value parent_env].rotate(ref)\}]"}}
    scale {{"\[if \{\[value parent_gun]==\"null\"\} \{return 1\} \{return 1+(\[value parent_env].scale-\[value parent_env].scale(ref))\}]"}}
    center {{"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].center.x(ref)\}]"} {"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].center.y(ref)\}]"}}
    motionblur 0.2
    shutter {{SmokeMB*0.5}}
    shutteroffset centred
    name Transform_ENVMatchMove39
    xpos -130
    ypos 336
    addUserKnob {20 User l parent}
    addUserKnob {3 ref}
    ref {{parent.CTimeOffset.ref}}
   }
   Transform {
    translate {{"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return -((root.width/2)-(\[value parent_gun].center.x(1)+\[value parent_gun].translate.x(1)))\}]"} {"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return -((root.height/2)-(\[value parent_gun].center.y(1)+\[value parent_gun].translate.y(1)))\}]"}}
    name Transform_GUNMatchMove5
    label "alignment correction"
    xpos -130
    ypos 417
    addUserKnob {20 User l parent}
    addUserKnob {22 python_button l "set parent" t "select parent node, and press this button to set the selected node as parent" T "n = nuke.selectedNode()\['name'].getValue()\nnuke.thisNode()\['string'].setValue(n)" +STARTLINE}
    addUserKnob {1 string l parent}
    string Transform_MatchMove10
    addUserKnob {3 ref +INVISIBLE}
    ref {{parent.cCard3D_8.ref}}
   }
   Shuffle2 {
    fromInput1 {{0} B}
    fromInput2 {{0} B}
    mappings "4 rgba.red 0 0 rgba.red 0 0 rgba.green 0 1 rgba.green 0 1 rgba.blue 0 2 rgba.blue 0 2 rgba.blue 0 2 rgba.alpha 0 3"
    name Shuffle1
    xpos -130
    ypos 465
   }
   Remove {
    operation keep
    channels rgba
    name Remove39
    xpos -130
    ypos 504
   }
push 0
   Switch {
    inputs 2
    which {{parent.Angle_reveal_side1.value>0.001}}
    name Switch3
    xpos -130
    ypos 658
   }
   Merge2 {
    inputs 3+1
    operation max
    name Merge28
    xpos -130
    ypos 731
   }
   Merge2 {
    inputs 2
    operation plus
    bbox intersection
    name Merge29
    xpos -130
    ypos 983
   }
push 0
   Switch {
    inputs 2
    which {{"shot\[value count]==0?0:frame>=shot\[value count]"}}
    name cSwitch_13
    xpos -130
    ypos 1065
    addUserKnob {20 User}
    addUserKnob {3 count}
    count {{parent.CTimeOffset.shotnmbr}}
   }
   Output {
    name Output1
    xpos -130
    ypos 1323
   }
  end_group
push $N16357620
  Dot {
   name Dot12
   xpos 1356
   ypos -711
  }
  Group {
   name gunshot12
   label "shot: \[value shotcount]\non frame: \[value shotstart]\n"
   xpos 1322
   ypos -357
   addUserKnob {20 User}
   addUserKnob {3 shotcount l shot}
   shotcount 12
   addUserKnob {3 shotstart l frame +INVISIBLE}
   shotstart {{"shotcount==0 ? 0 : shot\[value shotcount]-1" i}}
  }
   BackdropNode {
    inputs 0
    name BackdropNode19
    knobChanged "try:\n    listenedKnobs = \['text', 'position', 'name']\n    node = nuke.thisNode()\n    name = node.knob('name').value()\n    text = node.knob('text').value()\n    position = node.knob('position').value()\n    position = \"<\" + position + \">\"\n    label = node.knob('label').value()\n    \n    if nuke.thisKnob().name() in listenedKnobs:\n        if text == \"\":\n            if node.knob('position').value() == \"left\":\n                node.knob('label').setValue()\n            else:\n                node.knob('label').setValue(position + name)\n        else:\n            if node.knob('position').value() == \"left\":\n                node.knob('label').setValue(text)\n            else:\n                node.knob('label').setValue(position + text)\n                \n    elif nuke.thisKnob().name() == 'font_size':\n        fontSize = node.knob('font_size').value()\n        node.knob('note_font_size').setValue(fontSize)\nexcept:\n    pass"
    tile_color 0x232323ff
    label "<Left><h2> Gunshot"
    note_font_size 31.5
    xpos -693
    ypos -554
    bdwidth 876
    bdheight 1682
    addUserKnob {20 F_VFX l BackdropNode}
    addUserKnob {43 text l Text}
    text "<h2> Gunshot"
    addUserKnob {7 font_size l "Font Size" R 10 100}
    font_size 31.5
    addUserKnob {4 position l "" -STARTLINE M {Left Center}}
    addUserKnob {26 S01 l " " T " "}
    addUserKnob {22 grow l " <img src=\"F_scalep.png\">" -STARTLINE T "n=nuke.thisNode()\n\ndef grow(node=None,step=50):\n    try:\n        if not node:\n            n=nuke.selectedNode()\n        else:\n            n=node\n            n\['xpos'].setValue(n\['xpos'].getValue()-step)\n            n\['ypos'].setValue(n\['ypos'].getValue()-step)\n            n\['bdwidth'].setValue(n\['bdwidth'].getValue()+step*2)\n            n\['bdheight'].setValue(n\['bdheight'].getValue()+step*2)\n    except:\n        pass\ngrow(n,50)"}
    addUserKnob {22 shrink l " <img src=\"F_scalem.png\">" -STARTLINE T "n=nuke.thisNode()\n\ndef shrink(node=None,step=50):\n    try:\n        if not node:\n            n=nuke.selectedNode()\n        else:\n            n=node\n            n\['xpos'].setValue(n\['xpos'].getValue()+step)\n            n\['ypos'].setValue(n\['ypos'].getValue()+step)\n            n\['bdwidth'].setValue(n\['bdwidth'].getValue()-step*2)\n            n\['bdheight'].setValue(n\['bdheight'].getValue()-step*2)\n    except:\n        pass\nshrink(n,50)"}
    addUserKnob {22 colorandom l " <img src=\"ColorBars.png\">" -STARTLINE T "import colorsys, random\nn=nuke.thisNode()\nR,G,B= colorsys.hsv_to_rgb(random.random(),.1+random.random()*.15,.15+random.random()*.15)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ) )"}
    addUserKnob {22 darkgrey l "<font color=\"#232323\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.0, 0.0, 0.14]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 lightgrey l "<font color=\"#383838\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.0, 0.0, 0.22]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 red l "<font color=\"#8c3838\" size=6>■</font>" T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.0, 0.6, 0.55]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n" +STARTLINE}
    addUserKnob {22 orange l "<font color=\"#b28e59\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.1, 0.5, 0.7]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 yellow l "<font color=\"#ccc766\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.16, 0.5, 0.8]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 green l "<font color=\"#5d995b\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.33, 0.4, 0.6]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 cyan l "<font color=\"#72998f\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.46, 0.25, 0.6]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 blue l "<font color=\"#59687f\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.6, 0.3, 0.5]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 darkblue l "<font color=\"#63628c\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.67, 0.3, 0.55]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 magenta l "<font color=\"#927a99\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.8, 0.2, 0.6]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 pink l "<font color=\"#997a89\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.92, 0.2, 0.6]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {26 S02 l " " T " "}
    addUserKnob {26 Ftools l "" +STARTLINE T "<font color=\"#1C1C1C\"> v1.2 - Franklin VFX - 2018"}
   }
   BackdropNode {
    inputs 0
    name BackdropNode2
    knobChanged "try:\n    listenedKnobs = \['text', 'position', 'name']\n    node = nuke.thisNode()\n    name = node.knob('name').value()\n    text = node.knob('text').value()\n    position = node.knob('position').value()\n    position = \"<\" + position + \">\"\n    label = node.knob('label').value()\n    \n    if nuke.thisKnob().name() in listenedKnobs:\n        if text == \"\":\n            if node.knob('position').value() == \"left\":\n                node.knob('label').setValue()\n            else:\n                node.knob('label').setValue(position + name)\n        else:\n            if node.knob('position').value() == \"left\":\n                node.knob('label').setValue(text)\n            else:\n                node.knob('label').setValue(position + text)\n                \n    elif nuke.thisKnob().name() == 'font_size':\n        fontSize = node.knob('font_size').value()\n        node.knob('note_font_size').setValue(fontSize)\nexcept:\n    pass"
    tile_color 0x927a99ff
    note_font_size 50
    xpos -473
    ypos -221
    bdwidth 435
    bdheight 786
    z_order 1
    addUserKnob {20 F_VFX l BackdropNode}
    addUserKnob {43 text l Text}
    addUserKnob {7 font_size l "Font Size" R 10 100}
    font_size 50
    addUserKnob {4 position l "" -STARTLINE M {Left Center}}
    addUserKnob {26 S01 l " " T " "}
    addUserKnob {22 grow l " <img src=\"F_scalep.png\">" -STARTLINE T "n=nuke.thisNode()\n\ndef grow(node=None,step=50):\n    try:\n        if not node:\n            n=nuke.selectedNode()\n        else:\n            n=node\n            n\['xpos'].setValue(n\['xpos'].getValue()-step)\n            n\['ypos'].setValue(n\['ypos'].getValue()-step)\n            n\['bdwidth'].setValue(n\['bdwidth'].getValue()+step*2)\n            n\['bdheight'].setValue(n\['bdheight'].getValue()+step*2)\n    except:\n        pass\ngrow(n,50)"}
    addUserKnob {22 shrink l " <img src=\"F_scalem.png\">" -STARTLINE T "n=nuke.thisNode()\n\ndef shrink(node=None,step=50):\n    try:\n        if not node:\n            n=nuke.selectedNode()\n        else:\n            n=node\n            n\['xpos'].setValue(n\['xpos'].getValue()+step)\n            n\['ypos'].setValue(n\['ypos'].getValue()+step)\n            n\['bdwidth'].setValue(n\['bdwidth'].getValue()-step*2)\n            n\['bdheight'].setValue(n\['bdheight'].getValue()-step*2)\n    except:\n        pass\nshrink(n,50)"}
    addUserKnob {22 colorandom l " <img src=\"ColorBars.png\">" -STARTLINE T "import colorsys, random\nn=nuke.thisNode()\nR,G,B= colorsys.hsv_to_rgb(random.random(),.1+random.random()*.15,.15+random.random()*.15)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ) )"}
    addUserKnob {22 darkgrey l "<font color=\"#232323\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.0, 0.0, 0.14]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 lightgrey l "<font color=\"#383838\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.0, 0.0, 0.22]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 red l "<font color=\"#8c3838\" size=6>■</font>" T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.0, 0.6, 0.55]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n" +STARTLINE}
    addUserKnob {22 orange l "<font color=\"#b28e59\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.1, 0.5, 0.7]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 yellow l "<font color=\"#ccc766\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.16, 0.5, 0.8]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 green l "<font color=\"#5d995b\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.33, 0.4, 0.6]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 cyan l "<font color=\"#72998f\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.46, 0.25, 0.6]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 blue l "<font color=\"#59687f\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.6, 0.3, 0.5]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 darkblue l "<font color=\"#63628c\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.67, 0.3, 0.55]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 magenta l "<font color=\"#927a99\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.8, 0.2, 0.6]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 pink l "<font color=\"#997a89\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.92, 0.2, 0.6]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {26 S02 l " " T " "}
    addUserKnob {26 Ftools l "" +STARTLINE T "<font color=\"#1C1C1C\"> v1.2 - Franklin VFX - 2018"}
   }
   Constant {
    inputs 0
    channels rgb
    name Constant13
    xpos -643
    ypos 714
   }
   AdjBBox {
    numpixels {{size_bbox}}
    name AdjBBox13
    xpos -643
    ypos 849
   }
   Dot {
    name Dot78
    xpos -609
    ypos 987
   }
   Axis3 {
    inputs 0
    useMatrix true
    matrix {
        {{parent.cCard3D_1.matrix} {parent.cCard3D_1.matrix} {parent.cCard3D_1.matrix} {parent.cCard3D_1.matrix}}
        {{parent.cCard3D_1.matrix} {parent.cCard3D_1.matrix} {parent.cCard3D_1.matrix} {parent.cCard3D_1.matrix}}
        {{parent.cCard3D_1.matrix} {parent.cCard3D_1.matrix} {parent.cCard3D_1.matrix} {parent.cCard3D_1.matrix}}
        {{parent.cCard3D_1.matrix} {parent.cCard3D_1.matrix} {parent.cCard3D_1.matrix} {parent.cCard3D_1.matrix}}
      }
    name Axis14
    xpos -203
    ypos -12
   }
set N166dbe80 [stack 0]
push 0
   Input {
    inputs 0
    name Input1
    xpos -130
    ypos -1242
   }
   TimeOffset {
    time_offset {{"shotnmbr==0 ? 0 : shot\[value shotnmbr]-1"}}
    time ""
    name CTimeOffset
    label "shot: \[value shotnmbr]\non frame \[value time_offset]"
    xpos -130
    ypos -927
    addUserKnob {20 User}
    addUserKnob {3 shotnmbr l "shot "}
    shotnmbr {{shotcount}}
    addUserKnob {3 ref}
    ref {{time_offset+1}}
   }
   Group {
    name DecimalTimeOffset13
    tile_color 0xafa35dff
    label "random asset"
    note_font "Bitstream Vera Sans Bold"
    xpos -130
    ypos -844
    addUserKnob {20 User}
    addUserKnob {7 decimal l "time offset (decimal)"}
    decimal {{random(shotcount*seed)}}
    addUserKnob {26 ""}
    addUserKnob {26 _1 l "" +STARTLINE T "Chris Fryer | 2020\nupdated by Yorben Otto | 2024"}
   }
    Input {
     inputs 0
     name Input1
     xpos 426
     ypos -793
    }
    TimeOffset {
     time_offset {{(-floor(parent.decimal))*(DecimalTimeOffset13.decimal<0)}}
     time ""
     name TimeOffset1
     xpos 426
     ypos -675
    }
    Dot {
     name Dot6
     xpos 460
     ypos -635
    }
set N1671d410 [stack 0]
    Dot {
     name Dot5
     xpos 350
     ypos -635
    }
    Dot {
     name Dot7
     xpos 350
     ypos -365
    }
push $N1671d410
    Dot {
     name Dot1
     xpos 572
     ypos -635
    }
    TimeBlur {
     divisions 2
     shutter {{(parent.decimal-(floor(parent.decimal)))*2}}
     shutteroffset start
     shuttercustomoffset 0
     name TimeBlur1
     xpos 538
     ypos -558
    }
    Dot {
     name Dot2
     xpos 572
     ypos -490
    }
push $N1671d410
    TimeBlur {
     divisions 2
     shutter {{parent.decimal*2}}
     shutteroffset start
     shuttercustomoffset 0
     name TimeBlur8
     xpos 426
     ypos -556
    }
    Switch {
     inputs 2
     which {{parent.decimal<0}}
     name Switch1
     xpos 426
     ypos -494
    }
    Multiply {
     value {{parent.TimeBlur8.divisions}}
     name Multiply6
     xpos 426
     ypos -436
    }
    Merge2 {
     inputs 2
     operation from
     name Merge6
     xpos 426
     ypos -369
    }
set N1675f3e0 [stack 0]
    Output {
     name Output1
     xpos 426
     ypos -221
    }
push $N1675f3e0
push $N1675f3e0
    Viewer {
     inputs 2
     frame_range 1-100
     name Viewer1
     xpos 675
     ypos -246
    }
   end_group
   NoTimeBlur {
    name NoTimeBlur13
    xpos -130
    ypos -782
   }
   Dot {
    name Dot79
    xpos -96
    ypos -463
   }
set N167fe200 [stack 0]
   Dot {
    name Dot81
    xpos -249
    ypos -463
   }
set N16803230 [stack 0]
   Shuffle2 {
    fromInput1 {{0} B}
    fromInput2 {{0} B}
    mappings "4 rgba.blue 0 2 rgba.red 0 0 rgba.blue 0 2 rgba.green 0 1 rgba.blue 0 2 rgba.blue 0 2 black -1 -1 rgba.alpha 0 3"
    name Shuffle40
    label TOP
    xpos -283
    ypos -431
   }
   Multiply {
    value {{math_matrix.result_y_smoke(parent.CTimeOffset.ref)}}
    name Angle_reveal_top1
    label TOP
    xpos -283
    ypos -393
   }
   Transform {
    scale {{0.05+(0.05*(((parent.DecimalTimeOffset13.decimal-0.5)*2)*ScaleVariationSmoke))}}
    center {{root.width/2 x1015 2304} {root.height/2}}
    shutteroffset centred
    name Transform44
    xpos -283
    ypos -74
   }
   Card3D {
    inputs 3
    rot_order ZYX
    translate {0 0 0}
    rotate {90 0 0}
    shutteroffset centred
    name cCard3D25
    tile_color 0x7b1d1dff
    xpos -283
    ypos 89
    addUserKnob {20 User l parent}
    addUserKnob {22 python_button l "set parent" t "select parent node, and press this button to set the selected node as parent" +INVISIBLE T "n = nuke.selectedNode()\['name'].getValue()\nnuke.thisNode()\['string'].setValue(n)" +STARTLINE}
    addUserKnob {1 string l parent +INVISIBLE}
    string null
    addUserKnob {3 ref l "ref frame"}
    ref 1015
   }
   Transform {
    translate {{"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].translate.x(ref)\}]"} {"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].translate.y(ref)\}]"}}
    rotate {{"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].rotate-\[value parent_gun].rotate(ref)\}]"}}
    scale {{"\[if \{\[value parent_gun]==\"null\"\} \{return 1\} \{return 1+(\[value parent_gun].scale-\[value parent_gun].scale(ref))\}]"}}
    center {{"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].center.x(ref)\}]"} {"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].center.y(ref)\}]"}}
    name Transform_GUNMatchMove37
    xpos -283
    ypos 201
    addUserKnob {20 User l parent}
    addUserKnob {3 ref}
    ref {{parent.CTimeOffset.ref}}
   }
   NoTimeBlur {
    name NoTimeBlur3
    xpos -283
    ypos 259
   }
   Transform {
    translate {{"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].translate.x-\[value parent_env].translate.x(ref)\}]"} {"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].translate.y-\[value parent_env].translate.y(ref)\}]"}}
    rotate {{"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].rotate-\[value parent_env].rotate(ref)\}]"}}
    scale {{"\[if \{\[value parent_gun]==\"null\"\} \{return 1\} \{return 1+(\[value parent_env].scale-\[value parent_env].scale(ref))\}]"}}
    center {{"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].center.x(ref)\}]"} {"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].center.y(ref)\}]"}}
    motionblur 0.2
    shutter {{SmokeMB*0.5}}
    shutteroffset centred
    name Transform_ENVMatchMove37
    label "\n"
    xpos -283
    ypos 333
    addUserKnob {20 User l parent}
    addUserKnob {3 ref}
    ref {{parent.CTimeOffset.ref}}
   }
   Transform {
    translate {{"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return -((root.width/2)-(\[value parent_gun].center.x(1)+\[value parent_gun].translate.x(1)))\}]"} {"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return -((root.height/2)-(\[value parent_gun].center.y(1)+\[value parent_gun].translate.y(1)))\}]"}}
    name Transform_GUNMatchMove6
    label "alignment correction"
    xpos -283
    ypos 422
    addUserKnob {20 User l parent}
    addUserKnob {22 python_button l "set parent" t "select parent node, and press this button to set the selected node as parent" T "n = nuke.selectedNode()\['name'].getValue()\nnuke.thisNode()\['string'].setValue(n)" +STARTLINE}
    addUserKnob {1 string l parent}
    string Transform_MatchMove10
    addUserKnob {3 ref +INVISIBLE}
    ref {{parent.cCard3D_8.ref}}
   }
   Shuffle2 {
    fromInput1 {{0} B}
    fromInput2 {{0} B}
    mappings "4 rgba.red 0 0 rgba.red 0 0 rgba.green 0 1 rgba.green 0 1 rgba.blue 0 2 rgba.blue 0 2 rgba.blue 0 2 rgba.alpha 0 3"
    name Shuffle2
    xpos -283
    ypos 473
   }
   Remove {
    operation keep
    channels rgba
    name Remove1
    xpos -283
    ypos 512
   }
push 0
   Switch {
    inputs 2
    which {{parent.Angle_reveal_top1.value>0.001}}
    name Switch1
    xpos -283
    ypos 660
   }
   Dot {
    name Dot82
    xpos -249
    ypos 705
   }
push 0
push $N166dbe80
push 0
push $N16803230
   Dot {
    name Dot80
    xpos -402
    ypos -463
   }
   Shuffle2 {
    fromInput1 {{0} B}
    fromInput2 {{0} B}
    mappings "4 rgba.red 0 0 rgba.red 0 0 rgba.red 0 0 rgba.green 0 1 rgba.red 0 0 rgba.blue 0 2 black -1 -1 rgba.alpha 0 3"
    name Shuffle41
    label FRONT
    xpos -436
    ypos -431
   }
   Multiply {
    value {{math_matrix.result_x_smoke(parent.CTimeOffset.ref)}}
    name Angle_reveal_front1
    label FRONT
    xpos -436
    ypos -393
   }
   Transform {
    scale {{0.05+(0.05*(((parent.DecimalTimeOffset13.decimal-0.5)*2)*ScaleVariationSmoke))}}
    center {{root.width/2 x1015 2304} {root.height/2}}
    shutteroffset centred
    name Transform45
    xpos -436
    ypos -73
   }
   Card3D {
    inputs 3
    rot_order ZYX
    translate {0 0 0}
    rotate {0 90 0}
    shutteroffset centred
    name cCard3D26
    tile_color 0x7b1d1dff
    xpos -436
    ypos 93
    addUserKnob {20 User l parent}
    addUserKnob {22 python_button l "set parent" t "select parent node, and press this button to set the selected node as parent" +INVISIBLE T "n = nuke.selectedNode()\['name'].getValue()\nnuke.thisNode()\['string'].setValue(n)" +STARTLINE}
    addUserKnob {1 string l parent +INVISIBLE}
    string null
    addUserKnob {3 ref l "ref frame"}
    ref 1015
   }
   Transform {
    translate {{"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].translate.x(ref)\}]"} {"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].translate.y(ref)\}]"}}
    rotate {{"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].rotate-\[value parent_gun].rotate(ref)\}]"}}
    scale {{"\[if \{\[value parent_gun]==\"null\"\} \{return 1\} \{return 1+(\[value parent_gun].scale-\[value parent_gun].scale(ref))\}]"}}
    center {{"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].center.x(ref)\}]"} {"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].center.y(ref)\}]"}}
    name Transform_GUNMatchMove38
    label "\n"
    xpos -436
    ypos 203
    addUserKnob {20 User l parent}
    addUserKnob {3 ref}
    ref {{parent.CTimeOffset.ref}}
   }
   NoTimeBlur {
    name NoTimeBlur2
    xpos -436
    ypos 259
   }
   Transform {
    translate {{"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].translate.x-\[value parent_env].translate.x(ref)\}]"} {"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].translate.y-\[value parent_env].translate.y(ref)\}]"}}
    rotate {{"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].rotate-\[value parent_env].rotate(ref)\}]"}}
    scale {{"\[if \{\[value parent_gun]==\"null\"\} \{return 1\} \{return 1+(\[value parent_env].scale-\[value parent_env].scale(ref))\}]"}}
    center {{"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].center.x(ref)\}]"} {"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].center.y(ref)\}]"}}
    motionblur 0.2
    shutter {{SmokeMB*0.5}}
    shutteroffset centred
    name Transform_ENVMatchMove38
    xpos -436
    ypos 332
    addUserKnob {20 User l parent}
    addUserKnob {3 ref}
    ref {{parent.CTimeOffset.ref}}
   }
   Transform {
    translate {{"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return -((root.width/2)-(\[value parent_gun].center.x(1)+\[value parent_gun].translate.x(1)))\}]"} {"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return -((root.height/2)-(\[value parent_gun].center.y(1)+\[value parent_gun].translate.y(1)))\}]"}}
    name Transform_GUNMatchMove7
    label "alignment correction"
    xpos -436
    ypos 421
    addUserKnob {20 User l parent}
    addUserKnob {22 python_button l "set parent" t "select parent node, and press this button to set the selected node as parent" T "n = nuke.selectedNode()\['name'].getValue()\nnuke.thisNode()\['string'].setValue(n)" +STARTLINE}
    addUserKnob {1 string l parent}
    string Transform_MatchMove10
    addUserKnob {3 ref +INVISIBLE}
    ref {{parent.cCard3D_8.ref}}
   }
   Shuffle2 {
    fromInput1 {{0} B}
    fromInput2 {{0} B}
    mappings "4 rgba.red 0 0 rgba.red 0 0 rgba.green 0 1 rgba.green 0 1 rgba.blue 0 2 rgba.blue 0 2 rgba.blue 0 2 rgba.alpha 0 3"
    name Shuffle3
    xpos -436
    ypos 472
   }
   Remove {
    operation keep
    channels rgba
    name Remove2
    xpos -436
    ypos 511
   }
push 0
   Switch {
    inputs 2
    which {{parent.Angle_reveal_front1.value>0.001}}
    name Switch2
    xpos -436
    ypos 660
   }
   Dot {
    name Dot83
    xpos -402
    ypos 735
   }
push $N167fe200
   Shuffle2 {
    fromInput1 {{0} B}
    fromInput2 {{0} B}
    mappings "4 rgba.green 0 1 rgba.red 0 0 rgba.green 0 1 rgba.green 0 1 rgba.green 0 1 rgba.blue 0 2 black -1 -1 rgba.alpha 0 3"
    name Shuffle42
    label SIDE
    xpos -130
    ypos -425
   }
   Multiply {
    value {{math_matrix.result_z_smoke(parent.CTimeOffset.ref)}}
    name Angle_reveal_side1
    label SIDE
    xpos -130
    ypos -387
   }
   Transform {
    scale {{0.05+(0.05*(((parent.DecimalTimeOffset13.decimal-0.5)*2)*ScaleVariationSmoke))}}
    center {{root.width/2 x1015 2304} {root.height/2}}
    shutteroffset centred
    name Transform46
    xpos -130
    ypos -77
   }
   Card3D {
    translate {{"\[if \{\[exists  parent.parent.parent.input0]\} \{return \[value \[topnode parent.parent.parent.input0].name].translate.x(ref)\} \{return 0\}]"} {"\[if \{\[exists  parent.parent.parent.input0]\} \{return \[value \[topnode parent.parent.parent.input0].name].translate.y(ref)\} \{return 0\}]"} {"\[if \{\[exists  parent.parent.parent.input0]\} \{return \[value \[topnode parent.parent.parent.input0].name].translate.z(ref)\} \{return -1\}]"}}
    rotate {{"\[if \{\[exists  parent.parent.parent.input0]\} \{return \[value \[topnode parent.parent.parent.input0].name].rotate.x(ref)\} \{return 0\}]"} {"\[if \{\[exists  parent.parent.parent.input0]\} \{return \[value \[topnode parent.parent.parent.input0].name].rotate.y(ref)\} \{return 0\}]"} {"\[if \{\[exists  parent.parent.parent.input0]\} \{return \[value \[topnode parent.parent.parent.input0].name].rotate.z(ref)\} \{return 0\}]"}}
    scaling {{"\[if \{\[exists  parent.parent.parent.input0]\} \{return \[value \[topnode parent.parent.parent.input0].name].scaling.x(ref)\} \{return 1\}]"} {"\[if \{\[exists  parent.parent.parent.input0]\} \{return \[value \[topnode parent.parent.parent.input0].name].scaling.y(ref)\} \{return 1\}]"} {"\[if \{\[exists  parent.parent.parent.input0]\} \{return \[value \[topnode parent.parent.parent.input0].name].scaling.z(ref)\} \{return 1\}]"}}
    uniform_scale {{"\[if \{\[exists  parent.parent.parent.input0]\} \{return (\[value \[topnode parent.parent.parent.input0].name].uniform_scale(ref)*25)\} \{return 25\}]"}}
    shutteroffset centred
    name cCard3D_1
    tile_color 0x7b1d1dff
    label "ref frame: \[value ref]"
    selected true
    xpos -130
    ypos 80
    addUserKnob {20 User l parent}
    addUserKnob {22 python_button l "set parent" t "select parent node, and press this button to set the selected node as parent" +INVISIBLE T "n = nuke.selectedNode()\['name'].getValue()\nnuke.thisNode()\['string'].setValue(n)" +STARTLINE}
    addUserKnob {1 string l parent +INVISIBLE}
    string null
    addUserKnob {3 id l "id number"}
    id {{parent.CTimeOffset.shotnmbr}}
    addUserKnob {3 ref l "ref frame"}
    ref {{parent.CTimeOffset.ref}}
   }
   Transform {
    translate {{"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].translate.x(ref)\}]"} {"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].translate.y(ref)\}]"}}
    rotate {{"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].rotate-\[value parent_gun].rotate(ref)\}]"}}
    scale {{"\[if \{\[value parent_gun]==\"null\"\} \{return 1\} \{return 1+(\[value parent_gun].scale-\[value parent_gun].scale(ref))\}]"}}
    center {{"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].center.x(ref)\}]"} {"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].center.y(ref)\}]"}}
    name Transform_GUNMatchMove39
    label "\n"
    xpos -130
    ypos 201
    addUserKnob {20 User l parent}
    addUserKnob {3 ref}
    ref {{parent.CTimeOffset.ref}}
   }
   NoTimeBlur {
    name NoTimeBlur4
    xpos -130
    ypos 258
   }
   Transform {
    translate {{"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].translate.x-\[value parent_env].translate.x(ref)\}]"} {"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].translate.y-\[value parent_env].translate.y(ref)\}]"}}
    rotate {{"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].rotate-\[value parent_env].rotate(ref)\}]"}}
    scale {{"\[if \{\[value parent_gun]==\"null\"\} \{return 1\} \{return 1+(\[value parent_env].scale-\[value parent_env].scale(ref))\}]"}}
    center {{"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].center.x(ref)\}]"} {"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].center.y(ref)\}]"}}
    motionblur 0.2
    shutter {{SmokeMB*0.5}}
    shutteroffset centred
    name Transform_ENVMatchMove39
    xpos -130
    ypos 336
    addUserKnob {20 User l parent}
    addUserKnob {3 ref}
    ref {{parent.CTimeOffset.ref}}
   }
   Transform {
    translate {{"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return -((root.width/2)-(\[value parent_gun].center.x(1)+\[value parent_gun].translate.x(1)))\}]"} {"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return -((root.height/2)-(\[value parent_gun].center.y(1)+\[value parent_gun].translate.y(1)))\}]"}}
    name Transform_GUNMatchMove5
    label "alignment correction"
    xpos -130
    ypos 417
    addUserKnob {20 User l parent}
    addUserKnob {22 python_button l "set parent" t "select parent node, and press this button to set the selected node as parent" T "n = nuke.selectedNode()\['name'].getValue()\nnuke.thisNode()\['string'].setValue(n)" +STARTLINE}
    addUserKnob {1 string l parent}
    string Transform_MatchMove10
    addUserKnob {3 ref +INVISIBLE}
    ref {{parent.cCard3D_8.ref}}
   }
   Shuffle2 {
    fromInput1 {{0} B}
    fromInput2 {{0} B}
    mappings "4 rgba.red 0 0 rgba.red 0 0 rgba.green 0 1 rgba.green 0 1 rgba.blue 0 2 rgba.blue 0 2 rgba.blue 0 2 rgba.alpha 0 3"
    name Shuffle1
    xpos -130
    ypos 465
   }
   Remove {
    operation keep
    channels rgba
    name Remove39
    xpos -130
    ypos 504
   }
push 0
   Switch {
    inputs 2
    which {{parent.Angle_reveal_side1.value>0.001}}
    name Switch3
    xpos -130
    ypos 658
   }
   Merge2 {
    inputs 3+1
    operation max
    name Merge28
    xpos -130
    ypos 731
   }
   Merge2 {
    inputs 2
    operation plus
    bbox intersection
    name Merge29
    xpos -130
    ypos 983
   }
push 0
   Switch {
    inputs 2
    which {{"shot\[value count]==0?0:frame>=shot\[value count]"}}
    name cSwitch_13
    xpos -130
    ypos 1065
    addUserKnob {20 User}
    addUserKnob {3 count}
    count {{parent.CTimeOffset.shotnmbr}}
   }
   Output {
    name Output1
    xpos -130
    ypos 1323
   }
  end_group
  Merge2 {
   inputs 12+1
   name Merge1
   xpos -338
   ypos -197
  }
  Output {
   name Output1
   xpos -338
   ypos 720
  }
 end_group
 Merge2 {
  inputs 2
  operation plus
  bbox B
  name Merge1
  xpos -1017
  ypos 496
 }
add_layer {smoke smoke.red smoke.green smoke.blue smoke.alpha}
 Shuffle2 {
  fromInput1 {{0} B}
  out1 smoke
  fromInput2 {{0} B}
  mappings "4 rgba.red 0 0 smoke.red 0 0 rgba.green 0 1 smoke.green 0 1 rgba.blue 0 2 smoke.blue 0 2 rgba.alpha 0 3 smoke.alpha 0 3"
  name Shuffle2
  xpos -1017
  ypos 655
 }
 Merge2 {
  inputs 2
  operation plus
  also_merge muzzleflash
  name Merge3
  xpos -1017
  ypos 800
 }
 Switch {
  inputs 2
  which {{(mode==0)}}
  name Switch1
  xpos -1017
  ypos 1010
 }
 Output {
  name Output1
  xpos -1017
  ypos 1249
 }
 NoOp {
  inputs 0
  name math_matrix
  xpos -495
  ypos 307
  addUserKnob {20 User}
  addUserKnob {18 Nx l "" +STARTLINE +INVISIBLE}
  Nx {-1 0 0}
  addUserKnob {6 Nx_panelDropped l "panel dropped state" -STARTLINE +HIDDEN}
  addUserKnob {6 color_rgb_panelDropped l "panel dropped state" -STARTLINE +HIDDEN}
  addUserKnob {18 Ny l "" +STARTLINE +INVISIBLE}
  Ny {0 1 0}
  addUserKnob {6 Ny_panelDropped l "panel dropped state" -STARTLINE +HIDDEN}
  addUserKnob {6 color_rgb_1_panelDropped l "panel dropped state" -STARTLINE +HIDDEN}
  addUserKnob {6 color_rgb_2_panelDropped l "panel dropped state" -STARTLINE +HIDDEN}
  addUserKnob {18 Nz l "" +STARTLINE +INVISIBLE}
  Nz {0 0 1}
  addUserKnob {6 Nz_panelDropped l "panel dropped state" -STARTLINE +HIDDEN}
  addUserKnob {26 _1 l "" +STARTLINE +INVISIBLE T "\n\n"}
  addUserKnob {13 red l "" +STARTLINE}
  red {{"\[if \{\[exists  parent.input0]\} \{return \[value \[topnode parent.input0].name].matrix.0\} \{return 1\}]"} {"\[if \{\[exists  parent.input0]\} \{return \[value \[topnode parent.input0].name].matrix.1\} \{return 0\}]"} {"\[if \{\[exists  parent.input0]\} \{return \[value \[topnode parent.input0].name].matrix.2\} \{return 0\}]"}}
  addUserKnob {13 green l "" +STARTLINE}
  green {{"\[if \{\[exists  parent.input0]\} \{return \[value \[topnode parent.input0].name].matrix.4\} \{return 0\}]"} {"\[if \{\[exists  parent.input0]\} \{return \[value \[topnode parent.input0].name].matrix.5\} \{return 1\}]"} {"\[if \{\[exists  parent.input0]\} \{return \[value \[topnode parent.input0].name].matrix.6\} \{return 0\}]"}}
  addUserKnob {13 blue l "" +STARTLINE}
  blue {{"\[if \{\[exists  parent.input0]\} \{return \[value \[topnode parent.input0].name].matrix.8\} \{return 0\}]"} {"\[if \{\[exists  parent.input0]\} \{return \[value \[topnode parent.input0].name].matrix.9\} \{return 0\}]"} {"\[if \{\[exists  parent.input0]\} \{return \[value \[topnode parent.input0].name].matrix.10\} \{return 1\}]"}}
  addUserKnob {26 _2 l "" +STARTLINE T "\n\n"}
  addUserKnob {18 Tx l "" +STARTLINE +INVISIBLE}
  Tx {{"((Nx.r * red.x) + (Nx.g * red.y) + (Nx.b * red.z))"} {"((Nx.r * green.x) + (Nx.g * green.y) + (Nx.b * green.z))"} {"((Nx.r * blue.x) + (Nx.g * blue.y) + (Nx.b * blue.z))"}}
  addUserKnob {6 Tx_panelDropped l "panel dropped state" -STARTLINE +HIDDEN}
  addUserKnob {18 Ty l "" +STARTLINE +INVISIBLE}
  Ty {{"((Ny.r * red.x) + (Ny.g * red.y) + (Ny.b * red.z))"} {"((Ny.r * green.x) + (Ny.g * green.y) + (Ny.b * green.z))"} {"((Ny.r * blue.x) + (Ny.g * blue.y) + (Ny.b * blue.z))"}}
  addUserKnob {6 Ty_panelDropped l "panel dropped state" -STARTLINE +HIDDEN}
  addUserKnob {18 Tz l "" +STARTLINE +INVISIBLE}
  Tz {{"((Nz.r * red.x) + (Nz.g * red.y) + (Nz.b * red.z))"} {"((Nz.r * green.x) + (Nz.g * green.y) + (Nz.b * green.z))"} {"((Nz.r * blue.x) + (Nz.g * blue.y) + (Nz.b * blue.z))"}}
  addUserKnob {6 Tz_panelDropped l "panel dropped state" -STARTLINE +HIDDEN}
  addUserKnob {26 _3 l "" +STARTLINE +INVISIBLE T "\n\n"}
  addUserKnob {26 _6 l "" +STARTLINE T <b>flash}
  addUserKnob {7 gamma_flash l gamma}
  gamma_flash 1
  addUserKnob {7 max_value_flash l "max value"}
  max_value_flash 0.35
  addUserKnob {7 min_value_flash l "min value"}
  min_value_flash 0.3
  addUserKnob {26 _7 l "" +STARTLINE T "\n\n"}
  addUserKnob {26 _8 l "" +STARTLINE T <b>smoke}
  addUserKnob {7 gamma_smoke l gamma}
  gamma_smoke 2
  addUserKnob {7 max_value_smoke l "max value"}
  max_value_smoke 0.9
  addUserKnob {7 min_value_smoke l double}
  min_value_smoke 0.3
  addUserKnob {26 _5 l "" +STARTLINE T "\n\n"}
  addUserKnob {26 _4 l "" +STARTLINE T <h2>output}
  addUserKnob {26 _9 l "" +STARTLINE T <b>flash}
  addUserKnob {7 result_x_flash l "result x"}
  result_x_flash {{"(1-((1-(        ((clamp(  (abs(Tx.b/(sqrt((Tx.r*Tx.r)+(Tx.g*Tx.g)+(Tx.b*Tx.b)))))  , (min_value_flash)  ,  (max_value_flash)  ))   -   (min_value_flash))     *      (1/((max_value_flash)-(min_value_flash)))       ))**gamma_flash))**gamma_flash"}}
  addUserKnob {7 result_y_flash l "result y"}
  result_y_flash {{"(1-((1-(        ((clamp(  (abs(Ty.b/(sqrt((Ty.r*Ty.r)+(Ty.g*Ty.g)+(Ty.b*Ty.b)))))  , (min_value_flash)  ,  (max_value_flash)  ))   -   (min_value_flash))     *      (1/((max_value_flash)-(min_value_flash)))       ))**gamma_flash))**gamma_flash"}}
  addUserKnob {7 result_z_flash l "result z"}
  result_z_flash {{"(1-((1-(        ((clamp(  (abs(Tz.b/(sqrt((Tz.r*Tz.r)+(Tz.g*Tz.g)+(Tz.b*Tz.b)))))  , (min_value_flash)  ,  (max_value_flash)  ))   -   (min_value_flash))     *      (1/((max_value_flash)-(min_value_flash)))       ))**gamma_flash))**gamma_flash"}}
  addUserKnob {26 _10 l "" +STARTLINE T "\n"}
  addUserKnob {26 _11 l "" +STARTLINE T <b>smoke}
  addUserKnob {7 result_x_smoke l "result x"}
  result_x_smoke {{"(1-((1-(        ((clamp(  (abs(Tx.b/(sqrt((Tx.r*Tx.r)+(Tx.g*Tx.g)+(Tx.b*Tx.b)))))  , (min_value_smoke)  ,  (max_value_smoke)  ))   -   (min_value_smoke))     *      (1/((max_value_smoke)-(min_value_smoke)))       ))**gamma_smoke))**gamma_smoke\n"}}
  addUserKnob {7 result_y_smoke l "result y"}
  result_y_smoke {{"(1-((1-(        ((clamp(  (abs(Ty.b/(sqrt((Ty.r*Ty.r)+(Ty.g*Ty.g)+(Ty.b*Ty.b)))))  , (min_value_smoke)  ,  (max_value_smoke)  ))   -   (min_value_smoke))     *      (1/((max_value_smoke)-(min_value_smoke)))       ))**gamma_smoke))**gamma_smoke\n"}}
  addUserKnob {7 result_z_smoke l "result z"}
  result_z_smoke {{"((1-((1-(        ((clamp(  (abs(Tz.b/(sqrt((Tz.r*Tz.r)+(Tz.g*Tz.g)+(Tz.b*Tz.b)))))  , (min_value_smoke)  ,  (max_value_smoke)  ))   -   (min_value_smoke))     *      (1/((max_value_smoke)-(min_value_smoke)))       ))**gamma_smoke))**gamma_smoke)\n"}}
 }
end_group
Dot {
 name Dot73
 selected true
 xpos -1033
 ypos -267
}
set N16d51860 [stack 0]
Dot {
 name Dot74
 selected true
 xpos -858
 ypos -267
}
Shuffle2 {
 fromInput1 {{0} B}
 in1 muzzleflash
 fromInput2 {{0} B}
 mappings "4 muzzleflash.red 0 0 rgba.red 0 0 muzzleflash.green 0 1 rgba.green 0 1 muzzleflash.blue 0 2 rgba.blue 0 2 black -1 -1 rgba.alpha 0 3"
 name Shuffle10
 selected true
 xpos -892
 ypos -227
}
Remove {
 operation keep
 channels rgb
 name Remove4
 selected true
 xpos -892
 ypos -201
}
Dot {
 name Dot75
 selected true
 xpos -858
 ypos -23
}
push $N16d51860
Shuffle2 {
 fromInput1 {{0} B}
 in1 {smoke.red smoke.green smoke.blue -smoke.alpha}
 fromInput2 {{0} B}
 mappings "4 smoke.red 0 0 rgba.red 0 0 smoke.green 0 1 rgba.green 0 1 smoke.blue 0 2 rgba.blue 0 2 black -1 -1 rgba.alpha 0 3"
 name Shuffle11
 selected true
 xpos -1067
 ypos -229
}
Remove {
 operation keep
 channels rgb
 name Remove5
 selected true
 xpos -1067
 ypos -203
}
Merge2 {
 inputs 2
 operation plus
 name Merge16
 selected true
 xpos -1067
 ypos -27
}
push $cut_paste_input
Transform {
 translate {{"(((((((sin(((frame*((pi * 2)/(a_wavelength_translate.x/2))/2) + a_offset_translate.x))+1)/2)) * (a_maxValue_translate.x - a_minValue_translate.x)) + a_minValue_translate.x) - a_baseline_translate.x) * a_mixValue_translate.x) + a_baseline_translate.x"} 0}
 center {1024 778}
 shutteroffset centred
 name Transform3
 knobChanged "\nn = nuke.thisNode()\nk = nuke.thisKnob()\n\ntry:\n    knob_name = k.name().split(\"_\")\[-1]\n    if k.name().startswith(\"a_\"):\n        tab_knob = True\n    else:\n        tab_knob = False\nexcept:\n    tab_knob = False\n    \nif tab_knob:\n    try:\n        knob_index = n\[\"a_knobIndex_%s\" %knob_name].value()\n        orig_val = n\[\"a_origVal_%s\" %knob_name].value()    \n        \n        if k.name() == (\"a_basechoice_\" + knob_name):\n            if n\['a_minValue_' + knob_name].visible():\n                min_val = n\['a_minValue_' + knob_name].value()\n                max_val = n\['a_maxValue_' + knob_name].value()\n            else:\n                min_val = n\['a_startValue_' + knob_name].value()\n                max_val = n\['a_endValue_' + knob_name].value()\n        \n            eq = ((max_val - min_val) / 2) + min_val\n                \n            b = n\['a_baseline_' + knob_name]\n            \n            if b.isAnimated():\n                b.clearAnimated()\n            \n            if k.value() == \"Equilibrium\":\n                b.setValue(eq)\n            elif k.value() in \[\"Min value\",\"Start value\"]:\n                b.setValue(min_val)\n            elif k.value() in \[\"Max value\",\"End value\"]:\n                b.setValue(max_val) \n            elif k.value() == \"Orig value/curve\":\n                b.fromScript(orig_val)  \n            else:\n                pass\n        \n        elif k.name() == (\"a_opchoice_\" + knob_name):\n            knob_parts = knob_name.split(\".\")\n            main_knob_name = \".\".join(knob_parts\[:-1])\n            if k.value() == \"Add\":\n                if knob_index > -1:\n                    n\[main_knob_name].setExpression(n\['a_exprTextAdd_' + knob_name].value(),knob_index)\n                else:\n                    n\[knob_name].setExpression(n\['a_exprTextAdd_' + knob_name].value())\n                b = n\['a_baseline_' + knob_name]\n                if b.isAnimated():\n                    b.clearAnimated()\n                b.fromScript(orig_val)\n                n\['a_basechoice_' + knob_name].setValue('Orig value/curve')\n                n\['a_basechoice_' + knob_name].setEnabled(False)\n                b.setEnabled(False)\n            else:\n                if knob_index > -1:\n                    n\[main_knob_name].setExpression(n\['a_exprTextMult_' + knob_name].value(),knob_index)\n                else:\n                    n\[knob_name].setExpression(n\['a_exprTextMult_' + knob_name].value())\n                n\['a_basechoice_' + knob_name].setEnabled(True)\n                n\['a_baseline_' + knob_name].setEnabled(True)\n                \n        elif k.name() in \[\"a_minValue_\" + knob_name, \"a_maxValue_\" + knob_name,\"a_startValue_\" + knob_name, \"a_endValue_\" + knob_name]:\n        \n            if n\['a_basechoice_' + knob_name].value() == \"Equilibrium\":\n            \n                b = n\['a_baseline_' + knob_name]\n                if n\['a_minValue_' + knob_name].visible():\n                    min_val = n\['a_minValue_' + knob_name].value()\n                    max_val = n\['a_maxValue_' + knob_name].value()\n                else:\n                    min_val = n\['a_startValue_' + knob_name].value()\n                    max_val = n\['a_endValue_' + knob_name].value()        \n                eq = ((max_val - min_val) / 2) + min_val\n                b.setValue(eq)\n    except:\n        pass\n        "
 selected true
 xpos -516
 ypos -832
 addUserKnob {20 anim_tab_translate.x l "translate.x anim"}
 addUserKnob {26 a_easeType_display_translate.x l "Animation type:" +HIDDEN T Linear}
 addUserKnob {3 a_startFrame_translate.x l "Start Frame:" +HIDDEN}
 a_startFrame_translate.x 1
 addUserKnob {3 a_endFrame_translate.x l "End Frame:" +HIDDEN}
 a_endFrame_translate.x 50
 addUserKnob {7 a_startValue_translate.x l "Start Value:" +HIDDEN}
 addUserKnob {7 a_endValue_translate.x l "End Value:" +HIDDEN}
 a_endValue_translate.x 10
 addUserKnob {26 a_easeType_translate.x l "Ease type:" +HIDDEN T Linear}
 addUserKnob {26 a_waveType_display_translate.x l "Animation type:" T "<h3><font color='yellow'>WAVE </font><font color='white'>Sine</font></h3>"}
 addUserKnob {7 a_minValue_translate.x l "Min Value:" R -1500 1000}
 a_minValue_translate.x -1000
 addUserKnob {7 a_maxValue_translate.x l "Max Value:" R -1000 1500}
 a_maxValue_translate.x 1000
 addUserKnob {7 a_wavelength_translate.x l Wavelength: R 11.25 75}
 a_wavelength_translate.x 15
 addUserKnob {7 a_offset_translate.x l Offset: R -10 10}
 addUserKnob {7 a_bcutoff_translate.x l "Blip cutoff:" +HIDDEN}
 a_bcutoff_translate.x 0.95
 addUserKnob {26 a_waveType_translate.x l "Wave type:" +HIDDEN T Sine}
 addUserKnob {26 a_divider1_translate.x l "" +STARTLINE}
 addUserKnob {4 a_opchoice_translate.x l "" t "\nAnimate the mix to turn the curve on and off.\n\nMix back: mix back to the baseline value\n(1 = curve, 0 = baseline)\n\nAdd: add the animation to the original curve.\n(1 = combined, 0 = original curve)" +STARTLINE M {"Mix back" Add}}
 addUserKnob {7 a_baseline_translate.x l Baseline: t "The value/curve to mix back to"}
 addUserKnob {4 a_basechoice_translate.x l "" t "Easy presets for the baseline value" -STARTLINE M {Equilibrium "Min value" "Max value" "Orig value/curve"}}
 addUserKnob {26 a_origVal_translate.x l "Original value" +HIDDEN T 0}
 addUserKnob {3 a_knobIndex_translate.x l "Knob index" +HIDDEN}
 addUserKnob {7 a_mixValue_translate.x l Mix: t "Animate this value to turn the curve on and off"}
 a_mixValue_translate.x 1
 addUserKnob {26 a_divider2_translate.x l "" +STARTLINE}
 addUserKnob {22 a_edit_translate.x l EDIT t "Open the interface again to edit the wave type and other options." -STARTLINE T AnimationMaker.showWindow('translate',0)}
 addUserKnob {22 a_remove_translate.x l REMOVE t "Remove this tab and all its knobs, and create an expression using the current values." -STARTLINE T AnimationMaker.remove_tab('Transform3','anim_tab_translate.x','translate',0)}
 addUserKnob {22 a_restore_translate.x l RESTORE t "Remove this tab and all its knobs and restore the original value/curve." -STARTLINE T "AnimationMaker.remove_tab('Transform3','anim_tab_translate.x','translate',0,'0 0')"}
 addUserKnob {26 a_animType_translate.x l "Anim type:" +HIDDEN T wave}
 addUserKnob {26 a_exprTextAdd_translate.x l "Add expression:" +HIDDEN T "a_baseline_translate.x + ((((((sin(((frame*((pi * 2)/(a_wavelength_translate.x/2))/2) + a_offset_translate.x))+1)/2)) * (a_maxValue_translate.x - a_minValue_translate.x)) + a_minValue_translate.x) * a_mixValue_translate.x)"}
 addUserKnob {26 a_exprTextMult_translate.x l "Mult expression:" +HIDDEN T "(((((((sin(((frame*((pi * 2)/(a_wavelength_translate.x/2))/2) + a_offset_translate.x))+1)/2)) * (a_maxValue_translate.x - a_minValue_translate.x)) + a_minValue_translate.x) - a_baseline_translate.x) * a_mixValue_translate.x) + a_baseline_translate.x"}
}
Transform {
 inputs 0
 translate {{curve x5 0 x13 2088 x23 540 x30 662 x35 -742 x45 -280} {curve x5 0 x13 1835 x23 378 x30 -592 x35 546 x45 -654}}
 center {1024 778}
 shutteroffset centred
 name Transform2
 selected true
 xpos -809
 ypos -822
}
