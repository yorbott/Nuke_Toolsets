BackdropNode {
 inputs 0
 name BackdropNode1
 knobChanged "try:\n    listenedKnobs = \['text', 'position', 'name']\n    node = nuke.thisNode()\n    name = node.knob('name').value()\n    text = node.knob('text').value()\n    position = node.knob('position').value()\n    position = \"<\" + position + \">\"\n    label = node.knob('label').value()\n    \n    if nuke.thisKnob().name() in listenedKnobs:\n        if text == \"\":\n            if node.knob('position').value() == \"left\":\n                node.knob('label').setValue()\n            else:\n                node.knob('label').setValue(position + name)\n        else:\n            if node.knob('position').value() == \"left\":\n                node.knob('label').setValue(text)\n            else:\n                node.knob('label').setValue(position + text)\n                \n    elif nuke.thisKnob().name() == 'font_size':\n        fontSize = node.knob('font_size').value()\n        node.knob('note_font_size').setValue(fontSize)\nexcept:\n    pass"
 tile_color 0x5e5e5eff
 label "<Left>Muzzleflash "
 note_font_size 50
 selected true
 xpos 346
 ypos -2912
 bdwidth 1320
 bdheight 2039
 z_order -1
 addUserKnob {20 F_VFX l BackdropNode}
 addUserKnob {43 text l Text}
 text "Muzzleflash "
 addUserKnob {7 font_size l "Font Size" R 10 100}
 font_size 50
 addUserKnob {4 position l "" -STARTLINE M {Left Center}}
 addUserKnob {26 S01 l " " T " "}
 addUserKnob {22 grow l " <img src=\"F_scalep.png\">" -STARTLINE T "n=nuke.thisNode()\n\ndef grow(node=None,step=50):\n    try:\n        if not node:\n            n=nuke.selectedNode()\n        else:\n            n=node\n            n\['xpos'].setValue(n\['xpos'].getValue()-step)\n            n\['ypos'].setValue(n\['ypos'].getValue()-step)\n            n\['bdwidth'].setValue(n\['bdwidth'].getValue()+step*2)\n            n\['bdheight'].setValue(n\['bdheight'].getValue()+step*2)\n    except:\n        pass\ngrow(n,50)"}
 addUserKnob {22 shrink l " <img src=\"F_scalem.png\">" -STARTLINE T "n=nuke.thisNode()\n\ndef shrink(node=None,step=50):\n    try:\n        if not node:\n            n=nuke.selectedNode()\n        else:\n            n=node\n            n\['xpos'].setValue(n\['xpos'].getValue()+step)\n            n\['ypos'].setValue(n\['ypos'].getValue()+step)\n            n\['bdwidth'].setValue(n\['bdwidth'].getValue()-step*2)\n            n\['bdheight'].setValue(n\['bdheight'].getValue()-step*2)\n    except:\n        pass\nshrink(n,50)"}
 addUserKnob {22 colorandom l " <img src=\"ColorBars.png\">" -STARTLINE T "import colorsys, random\nn=nuke.thisNode()\nR,G,B= colorsys.hsv_to_rgb(random.random(),.1+random.random()*.15,.15+random.random()*.15)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ) )"}
 addUserKnob {22 darkgrey l "<font color=\"#232323\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.0, 0.0, 0.14]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
 addUserKnob {22 lightgrey l "<font color=\"#383838\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.0, 0.0, 0.22]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
 addUserKnob {22 red l "<font color=\"#8c3838\" size=6>■</font>" T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.0, 0.6, 0.55]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n" +STARTLINE}
 addUserKnob {22 orange l "<font color=\"#b28e59\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.1, 0.5, 0.7]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
 addUserKnob {22 yellow l "<font color=\"#ccc766\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.16, 0.5, 0.8]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
 addUserKnob {22 green l "<font color=\"#5d995b\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.33, 0.4, 0.6]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
 addUserKnob {22 cyan l "<font color=\"#72998f\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.46, 0.25, 0.6]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
 addUserKnob {22 blue l "<font color=\"#59687f\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.6, 0.3, 0.5]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
 addUserKnob {22 darkblue l "<font color=\"#63628c\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.67, 0.3, 0.55]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
 addUserKnob {22 magenta l "<font color=\"#927a99\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.8, 0.2, 0.6]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
 addUserKnob {22 pink l "<font color=\"#997a89\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.92, 0.2, 0.6]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
 addUserKnob {26 S02 l " " T " "}
 addUserKnob {26 Ftools l "" +STARTLINE T "<font color=\"#1C1C1C\"> v1.2 - Franklin VFX - 2018"}
}
BackdropNode {
 inputs 0
 name BackdropNode2
 knobChanged "try:\n    listenedKnobs = \['text', 'position', 'name']\n    node = nuke.thisNode()\n    name = node.knob('name').value()\n    text = node.knob('text').value()\n    position = node.knob('position').value()\n    position = \"<\" + position + \">\"\n    label = node.knob('label').value()\n    \n    if nuke.thisKnob().name() in listenedKnobs:\n        if text == \"\":\n            if node.knob('position').value() == \"left\":\n                node.knob('label').setValue()\n            else:\n                node.knob('label').setValue(position + name)\n        else:\n            if node.knob('position').value() == \"left\":\n                node.knob('label').setValue(text)\n            else:\n                node.knob('label').setValue(position + text)\n                \n    elif nuke.thisKnob().name() == 'font_size':\n        fontSize = node.knob('font_size').value()\n        node.knob('note_font_size').setValue(fontSize)\nexcept:\n    pass"
 tile_color 0x232323ff
 label <Center>Card3D
 note_font_size 50
 selected true
 xpos 530
 ypos -2775
 bdwidth 255
 bdheight 271
 addUserKnob {20 F_VFX l BackdropNode}
 addUserKnob {43 text l Text}
 text Card3D
 addUserKnob {7 font_size l "Font Size" R 10 100}
 font_size 50
 addUserKnob {4 position l "" -STARTLINE M {Left Center}}
 position Center
 addUserKnob {26 S01 l " " T " "}
 addUserKnob {22 grow l " <img src=\"F_scalep.png\">" -STARTLINE T "n=nuke.thisNode()\n\ndef grow(node=None,step=50):\n    try:\n        if not node:\n            n=nuke.selectedNode()\n        else:\n            n=node\n            n\['xpos'].setValue(n\['xpos'].getValue()-step)\n            n\['ypos'].setValue(n\['ypos'].getValue()-step)\n            n\['bdwidth'].setValue(n\['bdwidth'].getValue()+step*2)\n            n\['bdheight'].setValue(n\['bdheight'].getValue()+step*2)\n    except:\n        pass\ngrow(n,50)"}
 addUserKnob {22 shrink l " <img src=\"F_scalem.png\">" -STARTLINE T "n=nuke.thisNode()\n\ndef shrink(node=None,step=50):\n    try:\n        if not node:\n            n=nuke.selectedNode()\n        else:\n            n=node\n            n\['xpos'].setValue(n\['xpos'].getValue()+step)\n            n\['ypos'].setValue(n\['ypos'].getValue()+step)\n            n\['bdwidth'].setValue(n\['bdwidth'].getValue()-step*2)\n            n\['bdheight'].setValue(n\['bdheight'].getValue()-step*2)\n    except:\n        pass\nshrink(n,50)"}
 addUserKnob {22 colorandom l " <img src=\"ColorBars.png\">" -STARTLINE T "import colorsys, random\nn=nuke.thisNode()\nR,G,B= colorsys.hsv_to_rgb(random.random(),.1+random.random()*.15,.15+random.random()*.15)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ) )"}
 addUserKnob {22 darkgrey l "<font color=\"#232323\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.0, 0.0, 0.14]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
 addUserKnob {22 lightgrey l "<font color=\"#383838\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.0, 0.0, 0.22]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
 addUserKnob {22 red l "<font color=\"#8c3838\" size=6>■</font>" T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.0, 0.6, 0.55]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n" +STARTLINE}
 addUserKnob {22 orange l "<font color=\"#b28e59\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.1, 0.5, 0.7]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
 addUserKnob {22 yellow l "<font color=\"#ccc766\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.16, 0.5, 0.8]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
 addUserKnob {22 green l "<font color=\"#5d995b\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.33, 0.4, 0.6]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
 addUserKnob {22 cyan l "<font color=\"#72998f\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.46, 0.25, 0.6]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
 addUserKnob {22 blue l "<font color=\"#59687f\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.6, 0.3, 0.5]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
 addUserKnob {22 darkblue l "<font color=\"#63628c\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.67, 0.3, 0.55]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
 addUserKnob {22 magenta l "<font color=\"#927a99\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.8, 0.2, 0.6]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
 addUserKnob {22 pink l "<font color=\"#997a89\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.92, 0.2, 0.6]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
 addUserKnob {26 S02 l " " T " "}
 addUserKnob {26 Ftools l "" +STARTLINE T "<font color=\"#1C1C1C\"> v1.2 - Franklin VFX - 2018"}
}
BackdropNode {
 inputs 0
 name BackdropNode3
 knobChanged "try:\n    listenedKnobs = \['text', 'position', 'name']\n    node = nuke.thisNode()\n    name = node.knob('name').value()\n    text = node.knob('text').value()\n    position = node.knob('position').value()\n    position = \"<\" + position + \">\"\n    label = node.knob('label').value()\n    \n    if nuke.thisKnob().name() in listenedKnobs:\n        if text == \"\":\n            if node.knob('position').value() == \"left\":\n                node.knob('label').setValue()\n            else:\n                node.knob('label').setValue(position + name)\n        else:\n            if node.knob('position').value() == \"left\":\n                node.knob('label').setValue(text)\n            else:\n                node.knob('label').setValue(position + text)\n                \n    elif nuke.thisKnob().name() == 'font_size':\n        fontSize = node.knob('font_size').value()\n        node.knob('note_font_size').setValue(fontSize)\nexcept:\n    pass"
 tile_color 0x383838ff
 label "<Left>color & effects"
 note_font_size 50
 selected true
 xpos 470
 ypos -2263
 bdwidth 915
 bdheight 1275
 addUserKnob {20 F_VFX l BackdropNode}
 addUserKnob {43 text l Text}
 text "color & effects"
 addUserKnob {7 font_size l "Font Size" R 10 100}
 font_size 50
 addUserKnob {4 position l "" -STARTLINE M {Left Center}}
 addUserKnob {26 S01 l " " T " "}
 addUserKnob {22 grow l " <img src=\"F_scalep.png\">" -STARTLINE T "n=nuke.thisNode()\n\ndef grow(node=None,step=50):\n    try:\n        if not node:\n            n=nuke.selectedNode()\n        else:\n            n=node\n            n\['xpos'].setValue(n\['xpos'].getValue()-step)\n            n\['ypos'].setValue(n\['ypos'].getValue()-step)\n            n\['bdwidth'].setValue(n\['bdwidth'].getValue()+step*2)\n            n\['bdheight'].setValue(n\['bdheight'].getValue()+step*2)\n    except:\n        pass\ngrow(n,50)"}
 addUserKnob {22 shrink l " <img src=\"F_scalem.png\">" -STARTLINE T "n=nuke.thisNode()\n\ndef shrink(node=None,step=50):\n    try:\n        if not node:\n            n=nuke.selectedNode()\n        else:\n            n=node\n            n\['xpos'].setValue(n\['xpos'].getValue()+step)\n            n\['ypos'].setValue(n\['ypos'].getValue()+step)\n            n\['bdwidth'].setValue(n\['bdwidth'].getValue()-step*2)\n            n\['bdheight'].setValue(n\['bdheight'].getValue()-step*2)\n    except:\n        pass\nshrink(n,50)"}
 addUserKnob {22 colorandom l " <img src=\"ColorBars.png\">" -STARTLINE T "import colorsys, random\nn=nuke.thisNode()\nR,G,B= colorsys.hsv_to_rgb(random.random(),.1+random.random()*.15,.15+random.random()*.15)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ) )"}
 addUserKnob {22 darkgrey l "<font color=\"#232323\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.0, 0.0, 0.14]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
 addUserKnob {22 lightgrey l "<font color=\"#383838\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.0, 0.0, 0.22]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
 addUserKnob {22 red l "<font color=\"#8c3838\" size=6>■</font>" T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.0, 0.6, 0.55]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n" +STARTLINE}
 addUserKnob {22 orange l "<font color=\"#b28e59\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.1, 0.5, 0.7]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
 addUserKnob {22 yellow l "<font color=\"#ccc766\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.16, 0.5, 0.8]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
 addUserKnob {22 green l "<font color=\"#5d995b\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.33, 0.4, 0.6]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
 addUserKnob {22 cyan l "<font color=\"#72998f\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.46, 0.25, 0.6]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
 addUserKnob {22 blue l "<font color=\"#59687f\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.6, 0.3, 0.5]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
 addUserKnob {22 darkblue l "<font color=\"#63628c\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.67, 0.3, 0.55]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
 addUserKnob {22 magenta l "<font color=\"#927a99\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.8, 0.2, 0.6]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
 addUserKnob {22 pink l "<font color=\"#997a89\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.92, 0.2, 0.6]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
 addUserKnob {26 S02 l " " T " "}
 addUserKnob {26 Ftools l "" +STARTLINE T "<font color=\"#1C1C1C\"> v1.2 - Franklin VFX - 2018"}
}
BackdropNode {
 inputs 0
 name BackdropNode4
 knobChanged "try:\n    listenedKnobs = \['text', 'position', 'name']\n    node = nuke.thisNode()\n    name = node.knob('name').value()\n    text = node.knob('text').value()\n    position = node.knob('position').value()\n    position = \"<\" + position + \">\"\n    label = node.knob('label').value()\n    \n    if nuke.thisKnob().name() in listenedKnobs:\n        if text == \"\":\n            if node.knob('position').value() == \"left\":\n                node.knob('label').setValue()\n            else:\n                node.knob('label').setValue(position + name)\n        else:\n            if node.knob('position').value() == \"left\":\n                node.knob('label').setValue(text)\n            else:\n                node.knob('label').setValue(position + text)\n                \n    elif nuke.thisKnob().name() == 'font_size':\n        fontSize = node.knob('font_size').value()\n        node.knob('note_font_size').setValue(fontSize)\nexcept:\n    pass"
 tile_color 0x232323ff
 label <Center>ENV
 note_font_size 50
 selected true
 xpos 1077
 ypos -2773
 bdwidth 255
 bdheight 271
 addUserKnob {20 F_VFX l BackdropNode}
 addUserKnob {43 text l Text}
 text ENV
 addUserKnob {7 font_size l "Font Size" R 10 100}
 font_size 50
 addUserKnob {4 position l "" -STARTLINE M {Left Center}}
 position Center
 addUserKnob {26 S01 l " " T " "}
 addUserKnob {22 grow l " <img src=\"F_scalep.png\">" -STARTLINE T "n=nuke.thisNode()\n\ndef grow(node=None,step=50):\n    try:\n        if not node:\n            n=nuke.selectedNode()\n        else:\n            n=node\n            n\['xpos'].setValue(n\['xpos'].getValue()-step)\n            n\['ypos'].setValue(n\['ypos'].getValue()-step)\n            n\['bdwidth'].setValue(n\['bdwidth'].getValue()+step*2)\n            n\['bdheight'].setValue(n\['bdheight'].getValue()+step*2)\n    except:\n        pass\ngrow(n,50)"}
 addUserKnob {22 shrink l " <img src=\"F_scalem.png\">" -STARTLINE T "n=nuke.thisNode()\n\ndef shrink(node=None,step=50):\n    try:\n        if not node:\n            n=nuke.selectedNode()\n        else:\n            n=node\n            n\['xpos'].setValue(n\['xpos'].getValue()+step)\n            n\['ypos'].setValue(n\['ypos'].getValue()+step)\n            n\['bdwidth'].setValue(n\['bdwidth'].getValue()-step*2)\n            n\['bdheight'].setValue(n\['bdheight'].getValue()-step*2)\n    except:\n        pass\nshrink(n,50)"}
 addUserKnob {22 colorandom l " <img src=\"ColorBars.png\">" -STARTLINE T "import colorsys, random\nn=nuke.thisNode()\nR,G,B= colorsys.hsv_to_rgb(random.random(),.1+random.random()*.15,.15+random.random()*.15)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ) )"}
 addUserKnob {22 darkgrey l "<font color=\"#232323\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.0, 0.0, 0.14]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
 addUserKnob {22 lightgrey l "<font color=\"#383838\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.0, 0.0, 0.22]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
 addUserKnob {22 red l "<font color=\"#8c3838\" size=6>■</font>" T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.0, 0.6, 0.55]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n" +STARTLINE}
 addUserKnob {22 orange l "<font color=\"#b28e59\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.1, 0.5, 0.7]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
 addUserKnob {22 yellow l "<font color=\"#ccc766\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.16, 0.5, 0.8]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
 addUserKnob {22 green l "<font color=\"#5d995b\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.33, 0.4, 0.6]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
 addUserKnob {22 cyan l "<font color=\"#72998f\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.46, 0.25, 0.6]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
 addUserKnob {22 blue l "<font color=\"#59687f\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.6, 0.3, 0.5]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
 addUserKnob {22 darkblue l "<font color=\"#63628c\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.67, 0.3, 0.55]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
 addUserKnob {22 magenta l "<font color=\"#927a99\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.8, 0.2, 0.6]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
 addUserKnob {22 pink l "<font color=\"#997a89\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.92, 0.2, 0.6]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
 addUserKnob {26 S02 l " " T " "}
 addUserKnob {26 Ftools l "" +STARTLINE T "<font color=\"#1C1C1C\"> v1.2 - Franklin VFX - 2018"}
}
BackdropNode {
 inputs 0
 name BackdropNode5
 knobChanged "try:\n    listenedKnobs = \['text', 'position', 'name']\n    node = nuke.thisNode()\n    name = node.knob('name').value()\n    text = node.knob('text').value()\n    position = node.knob('position').value()\n    position = \"<\" + position + \">\"\n    label = node.knob('label').value()\n    \n    if nuke.thisKnob().name() in listenedKnobs:\n        if text == \"\":\n            if node.knob('position').value() == \"left\":\n                node.knob('label').setValue()\n            else:\n                node.knob('label').setValue(position + name)\n        else:\n            if node.knob('position').value() == \"left\":\n                node.knob('label').setValue(text)\n            else:\n                node.knob('label').setValue(position + text)\n                \n    elif nuke.thisKnob().name() == 'font_size':\n        fontSize = node.knob('font_size').value()\n        node.knob('note_font_size').setValue(fontSize)\nexcept:\n    pass"
 tile_color 0x232323ff
 label <Center>GUN
 note_font_size 50
 selected true
 xpos 805
 ypos -2773
 bdwidth 255
 bdheight 271
 addUserKnob {20 F_VFX l BackdropNode}
 addUserKnob {43 text l Text}
 text GUN
 addUserKnob {7 font_size l "Font Size" R 10 100}
 font_size 50
 addUserKnob {4 position l "" -STARTLINE M {Left Center}}
 position Center
 addUserKnob {26 S01 l " " T " "}
 addUserKnob {22 grow l " <img src=\"F_scalep.png\">" -STARTLINE T "n=nuke.thisNode()\n\ndef grow(node=None,step=50):\n    try:\n        if not node:\n            n=nuke.selectedNode()\n        else:\n            n=node\n            n\['xpos'].setValue(n\['xpos'].getValue()-step)\n            n\['ypos'].setValue(n\['ypos'].getValue()-step)\n            n\['bdwidth'].setValue(n\['bdwidth'].getValue()+step*2)\n            n\['bdheight'].setValue(n\['bdheight'].getValue()+step*2)\n    except:\n        pass\ngrow(n,50)"}
 addUserKnob {22 shrink l " <img src=\"F_scalem.png\">" -STARTLINE T "n=nuke.thisNode()\n\ndef shrink(node=None,step=50):\n    try:\n        if not node:\n            n=nuke.selectedNode()\n        else:\n            n=node\n            n\['xpos'].setValue(n\['xpos'].getValue()+step)\n            n\['ypos'].setValue(n\['ypos'].getValue()+step)\n            n\['bdwidth'].setValue(n\['bdwidth'].getValue()-step*2)\n            n\['bdheight'].setValue(n\['bdheight'].getValue()-step*2)\n    except:\n        pass\nshrink(n,50)"}
 addUserKnob {22 colorandom l " <img src=\"ColorBars.png\">" -STARTLINE T "import colorsys, random\nn=nuke.thisNode()\nR,G,B= colorsys.hsv_to_rgb(random.random(),.1+random.random()*.15,.15+random.random()*.15)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ) )"}
 addUserKnob {22 darkgrey l "<font color=\"#232323\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.0, 0.0, 0.14]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
 addUserKnob {22 lightgrey l "<font color=\"#383838\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.0, 0.0, 0.22]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
 addUserKnob {22 red l "<font color=\"#8c3838\" size=6>■</font>" T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.0, 0.6, 0.55]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n" +STARTLINE}
 addUserKnob {22 orange l "<font color=\"#b28e59\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.1, 0.5, 0.7]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
 addUserKnob {22 yellow l "<font color=\"#ccc766\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.16, 0.5, 0.8]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
 addUserKnob {22 green l "<font color=\"#5d995b\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.33, 0.4, 0.6]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
 addUserKnob {22 cyan l "<font color=\"#72998f\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.46, 0.25, 0.6]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
 addUserKnob {22 blue l "<font color=\"#59687f\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.6, 0.3, 0.5]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
 addUserKnob {22 darkblue l "<font color=\"#63628c\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.67, 0.3, 0.55]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
 addUserKnob {22 magenta l "<font color=\"#927a99\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.8, 0.2, 0.6]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
 addUserKnob {22 pink l "<font color=\"#997a89\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.92, 0.2, 0.6]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
 addUserKnob {26 S02 l " " T " "}
 addUserKnob {26 Ftools l "" +STARTLINE T "<font color=\"#1C1C1C\"> v1.2 - Franklin VFX - 2018"}
}
BackdropNode {
 inputs 0
 name BackdropNode6
 knobChanged "try:\n    listenedKnobs = \['text', 'position', 'name']\n    node = nuke.thisNode()\n    name = node.knob('name').value()\n    text = node.knob('text').value()\n    position = node.knob('position').value()\n    position = \"<\" + position + \">\"\n    label = node.knob('label').value()\n    \n    if nuke.thisKnob().name() in listenedKnobs:\n        if text == \"\":\n            if node.knob('position').value() == \"left\":\n                node.knob('label').setValue()\n            else:\n                node.knob('label').setValue(position + name)\n        else:\n            if node.knob('position').value() == \"left\":\n                node.knob('label').setValue(text)\n            else:\n                node.knob('label').setValue(position + text)\n                \n    elif nuke.thisKnob().name() == 'font_size':\n        fontSize = node.knob('font_size').value()\n        node.knob('note_font_size').setValue(fontSize)\nexcept:\n    pass"
 tile_color 0xb28e59ff
 label <Center>FLASH
 note_font_size 50
 selected true
 xpos 507
 ypos -2150
 bdwidth 280
 bdheight 774
 z_order 1
 addUserKnob {20 F_VFX l BackdropNode}
 addUserKnob {43 text l Text}
 text FLASH
 addUserKnob {7 font_size l "Font Size" R 10 100}
 font_size 50
 addUserKnob {4 position l "" -STARTLINE M {Left Center}}
 position Center
 addUserKnob {26 S01 l " " T " "}
 addUserKnob {22 grow l " <img src=\"F_scalep.png\">" -STARTLINE T "n=nuke.thisNode()\n\ndef grow(node=None,step=50):\n    try:\n        if not node:\n            n=nuke.selectedNode()\n        else:\n            n=node\n            n\['xpos'].setValue(n\['xpos'].getValue()-step)\n            n\['ypos'].setValue(n\['ypos'].getValue()-step)\n            n\['bdwidth'].setValue(n\['bdwidth'].getValue()+step*2)\n            n\['bdheight'].setValue(n\['bdheight'].getValue()+step*2)\n    except:\n        pass\ngrow(n,50)"}
 addUserKnob {22 shrink l " <img src=\"F_scalem.png\">" -STARTLINE T "n=nuke.thisNode()\n\ndef shrink(node=None,step=50):\n    try:\n        if not node:\n            n=nuke.selectedNode()\n        else:\n            n=node\n            n\['xpos'].setValue(n\['xpos'].getValue()+step)\n            n\['ypos'].setValue(n\['ypos'].getValue()+step)\n            n\['bdwidth'].setValue(n\['bdwidth'].getValue()-step*2)\n            n\['bdheight'].setValue(n\['bdheight'].getValue()-step*2)\n    except:\n        pass\nshrink(n,50)"}
 addUserKnob {22 colorandom l " <img src=\"ColorBars.png\">" -STARTLINE T "import colorsys, random\nn=nuke.thisNode()\nR,G,B= colorsys.hsv_to_rgb(random.random(),.1+random.random()*.15,.15+random.random()*.15)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ) )"}
 addUserKnob {22 darkgrey l "<font color=\"#232323\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.0, 0.0, 0.14]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
 addUserKnob {22 lightgrey l "<font color=\"#383838\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.0, 0.0, 0.22]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
 addUserKnob {22 red l "<font color=\"#8c3838\" size=6>■</font>" T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.0, 0.6, 0.55]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n" +STARTLINE}
 addUserKnob {22 orange l "<font color=\"#b28e59\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.1, 0.5, 0.7]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
 addUserKnob {22 yellow l "<font color=\"#ccc766\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.16, 0.5, 0.8]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
 addUserKnob {22 green l "<font color=\"#5d995b\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.33, 0.4, 0.6]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
 addUserKnob {22 cyan l "<font color=\"#72998f\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.46, 0.25, 0.6]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
 addUserKnob {22 blue l "<font color=\"#59687f\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.6, 0.3, 0.5]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
 addUserKnob {22 darkblue l "<font color=\"#63628c\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.67, 0.3, 0.55]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
 addUserKnob {22 magenta l "<font color=\"#927a99\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.8, 0.2, 0.6]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
 addUserKnob {22 pink l "<font color=\"#997a89\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.92, 0.2, 0.6]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
 addUserKnob {26 S02 l " " T " "}
 addUserKnob {26 Ftools l "" +STARTLINE T "<font color=\"#1C1C1C\"> v1.2 - Franklin VFX - 2018"}
}
BackdropNode {
 inputs 0
 name BackdropNode7
 knobChanged "try:\n    listenedKnobs = \['text', 'position', 'name']\n    node = nuke.thisNode()\n    name = node.knob('name').value()\n    text = node.knob('text').value()\n    position = node.knob('position').value()\n    position = \"<\" + position + \">\"\n    label = node.knob('label').value()\n    \n    if nuke.thisKnob().name() in listenedKnobs:\n        if text == \"\":\n            if node.knob('position').value() == \"left\":\n                node.knob('label').setValue()\n            else:\n                node.knob('label').setValue(position + name)\n        else:\n            if node.knob('position').value() == \"left\":\n                node.knob('label').setValue(text)\n            else:\n                node.knob('label').setValue(position + text)\n                \n    elif nuke.thisKnob().name() == 'font_size':\n        fontSize = node.knob('font_size').value()\n        node.knob('note_font_size').setValue(fontSize)\nexcept:\n    pass"
 tile_color 0x72998fff
 label <Center>SMOKE
 note_font_size 50
 selected true
 xpos 1064
 ypos -2136
 bdwidth 280
 bdheight 774
 z_order 1
 addUserKnob {20 F_VFX l BackdropNode}
 addUserKnob {43 text l Text}
 text SMOKE
 addUserKnob {7 font_size l "Font Size" R 10 100}
 font_size 50
 addUserKnob {4 position l "" -STARTLINE M {Left Center}}
 position Center
 addUserKnob {26 S01 l " " T " "}
 addUserKnob {22 grow l " <img src=\"F_scalep.png\">" -STARTLINE T "n=nuke.thisNode()\n\ndef grow(node=None,step=50):\n    try:\n        if not node:\n            n=nuke.selectedNode()\n        else:\n            n=node\n            n\['xpos'].setValue(n\['xpos'].getValue()-step)\n            n\['ypos'].setValue(n\['ypos'].getValue()-step)\n            n\['bdwidth'].setValue(n\['bdwidth'].getValue()+step*2)\n            n\['bdheight'].setValue(n\['bdheight'].getValue()+step*2)\n    except:\n        pass\ngrow(n,50)"}
 addUserKnob {22 shrink l " <img src=\"F_scalem.png\">" -STARTLINE T "n=nuke.thisNode()\n\ndef shrink(node=None,step=50):\n    try:\n        if not node:\n            n=nuke.selectedNode()\n        else:\n            n=node\n            n\['xpos'].setValue(n\['xpos'].getValue()+step)\n            n\['ypos'].setValue(n\['ypos'].getValue()+step)\n            n\['bdwidth'].setValue(n\['bdwidth'].getValue()-step*2)\n            n\['bdheight'].setValue(n\['bdheight'].getValue()-step*2)\n    except:\n        pass\nshrink(n,50)"}
 addUserKnob {22 colorandom l " <img src=\"ColorBars.png\">" -STARTLINE T "import colorsys, random\nn=nuke.thisNode()\nR,G,B= colorsys.hsv_to_rgb(random.random(),.1+random.random()*.15,.15+random.random()*.15)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ) )"}
 addUserKnob {22 darkgrey l "<font color=\"#232323\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.0, 0.0, 0.14]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
 addUserKnob {22 lightgrey l "<font color=\"#383838\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.0, 0.0, 0.22]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
 addUserKnob {22 red l "<font color=\"#8c3838\" size=6>■</font>" T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.0, 0.6, 0.55]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n" +STARTLINE}
 addUserKnob {22 orange l "<font color=\"#b28e59\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.1, 0.5, 0.7]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
 addUserKnob {22 yellow l "<font color=\"#ccc766\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.16, 0.5, 0.8]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
 addUserKnob {22 green l "<font color=\"#5d995b\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.33, 0.4, 0.6]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
 addUserKnob {22 cyan l "<font color=\"#72998f\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.46, 0.25, 0.6]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
 addUserKnob {22 blue l "<font color=\"#59687f\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.6, 0.3, 0.5]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
 addUserKnob {22 darkblue l "<font color=\"#63628c\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.67, 0.3, 0.55]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
 addUserKnob {22 magenta l "<font color=\"#927a99\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.8, 0.2, 0.6]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
 addUserKnob {22 pink l "<font color=\"#997a89\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.92, 0.2, 0.6]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
 addUserKnob {26 S02 l " " T " "}
 addUserKnob {26 Ftools l "" +STARTLINE T "<font color=\"#1C1C1C\"> v1.2 - Franklin VFX - 2018"}
}
Card3D {
 inputs 0
 name Card3D1
 selected true
 xpos 605
 ypos -2592
}
Group {
 name muzzleflash1
 tile_color 0x3f3f3fff
 note_font_color 0xff7e21ff
 selected true
 xpos 605
 ypos -2418
 addUserKnob {20 settings}
 addUserKnob {26 _43 l "" +STARTLINE T "<h1>MUZZLE "}
 addUserKnob {26 _44 l "" -STARTLINE T "<h1><p style=\"color: Orange\">FX"}
 addUserKnob {26 show_mode l "" +STARTLINE T "&nbsp;&nbsp;&nbsp;&nbsp;<b>mode:</b> align <font color=\"green\"> (fast) </font>"}
 addUserKnob {22 py_01 l align +INVISIBLE T "node = nuke.thisNode()\n\n#knobs that are in this mode\nmode_align_list = \['line_01', 'EnableRefGuns', 'ShowRefGuns', 'ShowRefMuzzleFlash', 'SelectRefGun', '_9', '_40', 'line_02', '_32','group', '_34', 'line_05'] \nmode_muzzle_list = \['line_01', 'line_02', '_9', '_40', '_6', '_31', 'line_03', '_34', 'size_bbox', 'seed', 'randomize', '_47', '_48', 'group_manual_seed', 'python_button_8']\nmode_smoke_list = \['line_01', 'line_03', '_9', '_40', '_5', '_22', 'line_04', '_34', 'size_bbox', 'seed', 'randomize', '_47', '_48', 'group_manual_seed', 'python_button_8']\n\n\n\n\nvisible_list = mode_align_list\ndisable_list = \[]\ninvisible_list = mode_muzzle_list + mode_smoke_list\n\n\nfor knob in node.knobs():\n\n\tfor invisible in invisible_list:\n\t\tif invisible == knob:\n\t\t\tnode\[knob].setVisible(False)\n\t\t\tnode\[knob].setEnabled(True)\n\n\tfor visible in visible_list:\n\t\tif visible == knob:\n\t\t\tnode\[knob].setVisible(True)\n\t\t\tnode\[knob].setEnabled(True)\n\n\tfor disable in disable_list:\n\t\tif disable == knob:\n\t\t\tnode\[knob].setEnabled(False)\n\nnode.knob('show_mode').setValue('&nbsp;&nbsp;&nbsp;&nbsp;<b>mode:</b> align <font color=\"green\"> (fast) </font>')\nnode.knob('mode').setValue(1)" +STARTLINE}
 addUserKnob {22 py_02 l muzzle -STARTLINE +INVISIBLE T "node = nuke.thisNode()\n\n#knobs that are in this mode\nmode_align_list = \['line_01', 'EnableRefGuns', 'ShowRefGuns', 'ShowRefMuzzleFlash', 'SelectRefGun', '_9', '_40', 'line_02', '_32','group', '_34', 'line_05'] \nmode_muzzle_list = \['line_01', 'line_02', '_9', '_40', '_6', '_31', 'line_03', '_34', 'size_bbox', 'seed', 'randomize', '_47', '_48', 'group_manual_seed', 'python_button_8']\nmode_smoke_list = \['line_01', 'line_03', '_9', '_40', '_5', '_22', 'line_04', '_34', 'size_bbox', 'seed', 'randomize', '_47', '_48', 'group_manual_seed', 'python_button_8']\n\n\n\n\nvisible_list = mode_muzzle_list\ndisable_list = \[]\ninvisible_list = mode_align_list + mode_smoke_list\n\n\nfor knob in node.knobs():\n\n\tfor invisible in invisible_list:\n\t\tif invisible == knob:\n\t\t\tnode\[knob].setVisible(False)\n\t\t\tnode\[knob].setEnabled(True)\n\n\tfor visible in visible_list:\n\t\tif visible == knob:\n\t\t\tnode\[knob].setVisible(True)\n\t\t\tnode\[knob].setEnabled(True)\n\n\tfor disable in disable_list:\n\t\tif disable == knob:\n\t\t\tnode\[knob].setEnabled(False)\n\nnode.knob('show_mode').setValue('&nbsp;&nbsp;&nbsp;&nbsp;<b>mode:</b> muzzle only <font color=\"green\"> (fast) </font>')\nnode.knob('mode').setValue(2)"}
 addUserKnob {22 py_03 l smoke -STARTLINE +INVISIBLE T "node = nuke.thisNode()\n\n#knobs that are in this mode\nmode_align_list = \['line_01', 'EnableRefGuns', 'ShowRefGuns', 'ShowRefMuzzleFlash', 'SelectRefGun', '_9', '_40', 'line_02', '_32','group', '_34', 'line_05'] \nmode_muzzle_list = \['line_01', 'line_02', '_9', '_40', '_6', '_31', 'line_03', '_34', 'size_bbox', 'seed', 'randomize', '_47', '_48', 'group_manual_seed', 'python_button_8']\nmode_smoke_list = \['line_01', 'line_03', '_9', '_40', '_5', '_22', 'line_04', '_34', 'size_bbox', 'seed', 'randomize', '_47', '_48', 'group_manual_seed', 'python_button_8']\n\n\n\n\nvisible_list = mode_smoke_list\ndisable_list = \[]\ninvisible_list = mode_align_list + mode_muzzle_list\n\n\nfor knob in node.knobs():\n\n\tfor invisible in invisible_list:\n\t\tif invisible == knob:\n\t\t\tnode\[knob].setVisible(False)\n\t\t\tnode\[knob].setEnabled(True)\n\n\tfor visible in visible_list:\n\t\tif visible == knob:\n\t\t\tnode\[knob].setVisible(True)\n\t\t\tnode\[knob].setEnabled(True)\n\n\tfor disable in disable_list:\n\t\tif disable == knob:\n\t\t\tnode\[knob].setEnabled(False)\n\nnode.knob('show_mode').setValue('&nbsp;&nbsp;&nbsp;&nbsp;<b>mode:</b> smoke only <font color=\"yellow\"> (slow) </font>')\nnode.knob('mode').setValue(3)"}
 addUserKnob {22 py_04 l combined -STARTLINE +INVISIBLE T "node = nuke.thisNode()\n\n#knobs that are in this mode\nmode_align_list = \['line_01', 'EnableRefGuns', 'ShowRefGuns', 'ShowRefMuzzleFlash', 'SelectRefGun', '_9', '_40', 'line_02', '_32','group', '_34', 'line_05'] \nmode_muzzle_list = \['line_01', 'line_02', '_9', '_40', '_6', '_31', 'line_03', '_34', 'size_bbox', 'seed', 'randomize', '_47', '_48', 'group_manual_seed', 'python_button_8']\nmode_smoke_list = \['line_01', 'line_03', '_9', '_40', '_5', '_22', 'line_04', '_34', 'size_bbox', 'seed', 'randomize', '_47', '_48', 'group_manual_seed', 'python_button_8']\n\n\n\n\nvisible_list = mode_muzzle_list + mode_smoke_list\ndisable_list = \[]\ninvisible_list = mode_align_list\n\n\nfor knob in node.knobs():\n\n\tfor invisible in invisible_list:\n\t\tif invisible == knob:\n\t\t\tnode\[knob].setVisible(False)\n\t\t\tnode\[knob].setEnabled(True)\n\n\tfor visible in visible_list:\n\t\tif visible == knob:\n\t\t\tnode\[knob].setVisible(True)\n\t\t\tnode\[knob].setEnabled(True)\n\n\tfor disable in disable_list:\n\t\tif disable == knob:\n\t\t\tnode\[knob].setEnabled(False)\n\n\nnode.knob('show_mode').setValue('&nbsp;&nbsp;&nbsp;&nbsp;<b>mode:</b> combined <font color=\"red\"> (slowest) </font>')\nnode.knob('mode').setValue(4)"}
 addUserKnob {35 menu l "" t "change mode of node.\n<b>align =</b> \nhere you add the tracking data, and match the perspective of the weapon by animating/adjusting the Card3D.\n<b>muzzle only =</b>\ngenerates a muzzelflash on specified frames. you can change the look of the flash here.\n<b>smoke only =</b>\ngenerates a smoke puff on specified frames. you can change the look of the smoke puff here.\n<b>combined =</b>\ngenerates a muzzleflash and smoke on specified frames." +STARTLINE M {change/align "python nuke.thisNode().knob('py_01').execute()" "change/muzzle only" "python nuke.thisNode().knob('py_02').execute()" "change/smoke only" "python nuke.thisNode().knob('py_03').execute()" change/combined "python nuke.thisNode().knob('py_04').execute()" ""}}
 addUserKnob {26 _45 l "" +STARTLINE T "\n"}
 addUserKnob {6 count l "" +STARTLINE +STARTLINE}
 count {{curve}}
 addUserKnob {22 single_fire_button l "single fire!" t "creates one keyframe that generates a muzzleflash." -STARTLINE T "node = nuke.thisNode()\n\n\nif not node\['count'].isKey(nuke.frame()):\n\tnode\['count'].setAnimated(0)\n\tnode\['count'].setValue(0)\n\n\n\nnode.knob('auto_load').execute()"}
 addUserKnob {22 reset_button l reset t "deletes all keyframes." -STARTLINE T "node = nuke.thisNode()\n\nfor curve in node\['count'].animations():\n    curve.clear()\n\nnode.knob('auto_load').execute()\nnode.knob('auto_load').execute()\n"}
 addUserKnob {26 _46 l "" +STARTLINE T "\n\n"}
 addUserKnob {22 automatic_fire_button l "automatic fire!" t "creates multiple keyframes based on the amount of shots, and the frequency. specified here below." T "node = nuke.thisNode()\nnumber = int(node\['count'].getValue())\namount = int(node\['amount_of_shots'].getValue())\nf = int(nuke.frame())\nhz = int(node\['hz'].getValue())\nnode\['count'].setAnimated(0)\n\nfor shot in range(amount):\n  #number = number + 1\n  node\['count'].setValueAt(0, f)\n  f = f + hz\n\n\nnode.knob('auto_load').execute()" +STARTLINE}
 addUserKnob {3 amount_of_shots l shoots}
 amount_of_shots 5
 addUserKnob {26 _30 l "" -STARTLINE T shots}
 addUserKnob {3 hz l every -STARTLINE}
 hz 2
 addUserKnob {26 _27 l "" -STARTLINE T frames}
 addUserKnob {26 _50 l "" +STARTLINE T "\n"}
 addUserKnob {26 line_01 l "" +STARTLINE}
 addUserKnob {26 _9 l "" +STARTLINE T <b><h2>Settings}
 addUserKnob {20 _40 l "" +STARTLINE n 1}
 _40 0
 addUserKnob {3 mode +DISABLED +HIDDEN}
 mode 1
 addUserKnob {26 _49 l "" +STARTLINE T "\n"}
 addUserKnob {6 ShowRefGuns l "show reference gun options" +STARTLINE}
 addUserKnob {6 ShowRefMuzzleFlash l "show muzzleflash" +STARTLINE}
 addUserKnob {6 EnableRefGuns l "reference gun" t "you can dissable the checkerboard from the \"align\" mode; for a better visibility of your own drawn shapes from the \"align\" input of this node." +STARTLINE}
 EnableRefGuns true
 addUserKnob {3 SelectRefGun l "" -STARTLINE}
 SelectRefGun 2
 addUserKnob {14 size_bbox l overscan +HIDDEN R 0 100}
 addUserKnob {3 seed t "this will change the seed of the random picked muzzleflash & smoke assets." +HIDDEN}
 seed 1
 addUserKnob {22 randomize -STARTLINE +HIDDEN T "import random\nnode = nuke.thisNode()\n\nrandomnmbr = random.randint(0,10000)\n\nnode\['seed'].setValue(randomnmbr)"}
 addUserKnob {26 _47 l "" +STARTLINE +HIDDEN T "\n"}
 addUserKnob {26 _48 l "" +STARTLINE +HIDDEN T "manual seed tweak"}
 addUserKnob {20 group_manual_seed l "" +STARTLINE +HIDDEN n 1}
 group_manual_seed 0
 addUserKnob {4 mseed l choose t "select the timing of the flash you want to change. dont forget to press \"reload\" when selecting a new muzzleflash!\n\ncurrently wont work on the smoke" +DISABLED M {0}}
 addUserKnob {22 python_button_11 l load -STARTLINE +INVISIBLE T "#pulldown menu will adjust to amount of shots\nnode = nuke.thisNode()\n\nnmbr = int(node\['mseed'].getValue()) + 1\nkeep_knob = \"seed_offset_\"+str(nmbr)\n\namount_of_shots = \[]\nuser_knobs = False\nshots = False\nnull_shots = ('0',)\n\n#check the shot values\nfor knob in node.knobs():\n\n    #checks how many shots are not on frame 0, and based its counting on that\n    if \"shot_\" in knob:\n        shot_timing = int(node.knob(knob).getValue())\n\n        if shot_timing > 0:\n            shot_nmbr = knob.replace('shot_', '')\n            amount_of_shots.append(shot_nmbr)\n            shots = True\n\n\n#set the offset knobs based on the shot values.\nfor knob in node.knobs():\n\n    if \"seed_offset_\" in knob:\n        if knob != keep_knob:\n            node\[knob].setVisible(False)\n            node\[knob].setEnabled(True)\n\n        elif knob == keep_knob:\n            node\[knob].setVisible(True)\n            node\[knob].setEnabled(True)\n\n            if shots == False:\n                node\[knob].setEnabled(False)\n\n\n\nfor knob in node.knobs():\n    if \"auto_load\" in knob:\n        node.knob(knob).execute()"}
 addUserKnob {22 auto_load l reload -STARTLINE T "#pulldown menu will adjust to amount of shots\nnode = nuke.thisNode()\n\nnmbr = int(node\['mseed'].getValue()) + 1\nkeep_knob = \"seed_offset_\"+str(nmbr)\n\nlist_of_shots = \[]\nuser_knobs = False\nshots = False\nnull_shots = ('0',)\n\n#check the shot values\nfor knob in node.knobs():\n\n    #make sure only the user knobs are fedged\n    #if knob == \"User\":\n    #    user_knobs = True\n    #if user_knobs == True:\n\n    #checks how many shots are not on frame 0, and based its counting on that\n    if \"shot_\" in knob:\n        shot_timing = int(node.knob(knob).getValue())\n\n        if shot_timing > 0:\n            shot_nmbr = int(node\[knob].getValue())\n            list_of_shots.append(shot_nmbr)\n            shots = True\n\n\n#set the offset knobs based on the shot values.\nfor knob in node.knobs():\n\n    #make sure only the user knobs are fedged\n    #if knob == \"User\":\n    #    user_knobs = True\n    #if user_knobs == True:\n\n    if \"seed_offset_\" in knob:\n        if knob != keep_knob:\n            node\[knob].setVisible(False)\n            node\[knob].setEnabled(True)\n            node\['mseed'].setEnabled(True)\n\n        elif knob == keep_knob:\n            node\[knob].setVisible(True)\n            node\[knob].setEnabled(True)\n            node\['mseed'].setEnabled(True)\n            if shots == False:\n                node\[knob].setEnabled(False)\n\n\nif shots == False:\n    node.knob('mseed').setValues(null_shots)\n    #check the shot values\n    for knob in node.knobs():\n        if \"seed_offset_\" in knob:\n            node\[knob].setValue(0)\n    node\['mseed'].setEnabled(False)\n\nelse:\n    t = tuple(list_of_shots)\n    node.knob('mseed').setValues(t)"}
 addUserKnob {3 seed_offset_0 l offset +HIDDEN}
 addUserKnob {3 seed_offset_1 l offset t "manually change the seed of 1 perticular muzzleflash. " +DISABLED}
 addUserKnob {3 seed_offset_2 l offset +HIDDEN}
 addUserKnob {3 seed_offset_3 l offset +HIDDEN}
 addUserKnob {3 seed_offset_4 l offset +HIDDEN}
 addUserKnob {3 seed_offset_5 l offset +HIDDEN}
 addUserKnob {3 seed_offset_6 l offset +HIDDEN}
 addUserKnob {3 seed_offset_7 l offset +HIDDEN}
 addUserKnob {3 seed_offset_8 l offset +HIDDEN}
 addUserKnob {3 seed_offset_9 l offset +HIDDEN}
 addUserKnob {3 seed_offset_10 l offset +HIDDEN}
 addUserKnob {3 seed_offset_11 l offset +HIDDEN}
 addUserKnob {3 seed_offset_12 l offset +HIDDEN}
 addUserKnob {3 seed_offset_13 l offset +HIDDEN}
 addUserKnob {3 seed_offset_14 l offset +HIDDEN}
 addUserKnob {3 seed_offset_15 l offset +HIDDEN}
 addUserKnob {3 seed_offset_16 l offset +HIDDEN}
 addUserKnob {3 seed_offset_17 l offset +HIDDEN}
 addUserKnob {3 seed_offset_18 l offset +HIDDEN}
 addUserKnob {3 seed_offset_19 l offset +HIDDEN}
 addUserKnob {3 seed_offset_20 l offset +HIDDEN}
 addUserKnob {3 seed_offset_21 l offset +HIDDEN}
 addUserKnob {3 seed_offset_22 l offset +HIDDEN}
 addUserKnob {3 seed_offset_23 l offset +HIDDEN}
 addUserKnob {3 seed_offset_24 l offset +HIDDEN}
 addUserKnob {20 endGroup_4 l endGroup n -1}
 addUserKnob {26 _4 l "" +STARTLINE T "\n"}
 addUserKnob {22 python_button_8 l "localize assets" t "THIS WILL FREEZE YOUR COMP FOR A WHILE. Be aware! " +HIDDEN T "g = nuke.thisNode()\ng.begin()\nsmoke = nuke.toNode('muzzleflash_maker_SMOKE')\nmuzzle = nuke.toNode('muzzleflash_maker_FLASH')\n\nsmoke.begin()\nfor s in nuke.allNodes():\n    classTypes = \['Read']\n    for n in classTypes:\n        if n in s.Class():\n            s\['localizationPolicy'].setValue('on')\n            s\['updateLocalization'].execute()\nsmoke.end()\n\nmuzzle.begin()\nfor s in nuke.allNodes():\n    classTypes = \['Read']\n    for n in classTypes:\n        if n in s.Class():\n            s\['localizationPolicy'].setValue('on')\n            s\['updateLocalization'].execute()\nmuzzle.end()\n\n\n" +STARTLINE}
 addUserKnob {20 endGroup_3 l endGroup n -1}
 addUserKnob {26 line_02 l "" +STARTLINE}
 addUserKnob {26 _6 l "" +STARTLINE +HIDDEN T <b><h2>Flash}
 addUserKnob {20 _31 l "" +STARTLINE +HIDDEN n 1}
 _31 0
 addUserKnob {68 SelectAssetFlash l assets t "select the asset you want to use" M {default pistol/Colt45 rifle/AK rifle/AR-15 rifle/G2 rifle/M16 rifle/M249 smg/mp5 shotgun/M870 rifle/M4 "" "" "" "" "" "" "" ""}}
 addUserKnob {7 brighness_flare l brighness t "some assets have really bright/large and really dim/small muzzleflashes. you can adjust the balance of this variation here.\n<i>0 is dim and 1 is bright.</i>"}
 brighness_flare 0.5
 addUserKnob {7 ScaleVariationFlash l "scale variation" t "you can control the scale variation here. \n<i>0 is uniformly scaled and 1 is random scaling</i>"}
 ScaleVariationFlash 0.2
 addUserKnob {7 FlashMB l motionblur t "amount of motion blur. 1 is default and 0 is nothing. you can increase behond 1 to exaggerate the motion blur" R 0 2}
 FlashMB 1
 addUserKnob {26 _36 l "" +STARTLINE T "\n\n"}
 addUserKnob {26 _23 l "" +STARTLINE T "<b>front&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;"}
 addUserKnob {6 ActivateFrontFlash l "" -STARTLINE}
 ActivateFrontFlash true
 addUserKnob {26 _28 l "" +STARTLINE T "<h6>scale&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;"}
 addUserKnob {14 ScaleFrontFlash l "" -STARTLINE R 0 100}
 ScaleFrontFlash 1
 addUserKnob {26 _35 l "" +STARTLINE +INVISIBLE T "<h6>sparks&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;"}
 addUserKnob {7 SparksFrontFlash l "" -STARTLINE +INVISIBLE}
 addUserKnob {26 _24 l "" +STARTLINE T "\n"}
 addUserKnob {26 _25 l "" +STARTLINE T "<b>side & top &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;"}
 addUserKnob {6 ActivateSideFlash l "" -STARTLINE}
 ActivateSideFlash true
 addUserKnob {26 _29 l "" +STARTLINE T "<h6>scale&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;"}
 addUserKnob {14 ScaleSideFlash l "" -STARTLINE R 0 100}
 ScaleSideFlash 1
 addUserKnob {26 _38 l "" +STARTLINE +INVISIBLE T "<h6>sparks&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;"}
 addUserKnob {7 SparksSideFlash l "" -STARTLINE +INVISIBLE}
 addUserKnob {26 _26 l "" +STARTLINE T "\n"}
 addUserKnob {20 endGroup_2 l endGroup n -1}
 addUserKnob {26 line_03 l "" +STARTLINE +HIDDEN}
 addUserKnob {26 _5 l "" +STARTLINE +HIDDEN T <B><h2>Smoke}
 addUserKnob {20 _22 l "" +STARTLINE +HIDDEN n 1}
 _22 0
 addUserKnob {4 StartOfSmoke l "smoke starting" M {"at flash" "after flash" ""}}
 addUserKnob {7 SmokeLightDirection l "light direction" R -1 1}
 addUserKnob {7 FadeSpeedSmoke l "fade out speed" t "change speed in which the smoke will disintegrate."}
 addUserKnob {7 ScaleVariationSmoke l "scale variation" t "you can control the scale variation here. \n<i>0 is uniformly scaled and 1 is random scaling</i>"}
 ScaleVariationSmoke 0.1
 addUserKnob {7 SmokeMB l motionblur t "amount of motion blur. 1 is default and 0 is nothing. you can increase behond 1 to exaggerate the motion blur" R 0 2}
 SmokeMB 1
 addUserKnob {26 _21 l "" +STARTLINE T "\n"}
 addUserKnob {26 _13 l "" +STARTLINE T "<b>front&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;"}
 addUserKnob {6 ActivateFrontSmoke l "" -STARTLINE}
 ActivateFrontSmoke true
 addUserKnob {26 _14 l "" +STARTLINE T "<h6>scale&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;"}
 addUserKnob {14 ScaleFrontSmoke l "" -STARTLINE R 0 100}
 ScaleFrontSmoke 1
 addUserKnob {26 _42 l "" +STARTLINE T "<h6>brightness&nbsp;&nbsp;"}
 addUserKnob {7 brighnesFrontSmoke l "" -STARTLINE}
 brighnesFrontSmoke 1
 addUserKnob {26 _37 l "" +STARTLINE T "<h6>animation&nbsp;&nbsp;&nbsp;"}
 addUserKnob {7 ScaleAnimationFrontSmoke l "" -STARTLINE}
 ScaleAnimationFrontSmoke 1
 addUserKnob {26 _15 l "" +STARTLINE T "\n"}
 addUserKnob {26 _16 l "" +STARTLINE T "<b>side & top &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;"}
 addUserKnob {6 ActivateSideSmoke l "" -STARTLINE}
 ActivateSideSmoke true
 addUserKnob {26 _17 l "" +STARTLINE T "<h6>scale&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;"}
 addUserKnob {14 ScaleSideSmoke l "" -STARTLINE R 0 100}
 ScaleSideSmoke 1
 addUserKnob {26 _41 l "" +STARTLINE T "<h6>brightness&nbsp;&nbsp;"}
 addUserKnob {7 brightnesSideSmoke l "" -STARTLINE}
 brightnesSideSmoke 1
 addUserKnob {26 _39 l "" +STARTLINE T "<h6>animation&nbsp;&nbsp;&nbsp;"}
 addUserKnob {7 ScaleAnimationSideSmoke l "" -STARTLINE}
 ScaleAnimationSideSmoke 1
 addUserKnob {26 _18 l "" +STARTLINE T "\n"}
 addUserKnob {26 _19 l "" +STARTLINE +INVISIBLE T "<b>top&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;"}
 addUserKnob {6 ActivateTopSmoke l "" -STARTLINE +INVISIBLE}
 ActivateTopSmoke true
 addUserKnob {26 _20 l "" +STARTLINE +INVISIBLE T "<h6>scale&nbsp;&nbsp;&nbsp;"}
 addUserKnob {14 ScaleTopSmoke l "" -STARTLINE +INVISIBLE R 0 100}
 ScaleTopSmoke 1
 addUserKnob {26 _7 l "" +STARTLINE +INVISIBLE T "\n"}
 addUserKnob {20 endGroup_1 l endGroup n -1}
 addUserKnob {26 line_04 l "" +STARTLINE +HIDDEN}
 addUserKnob {26 _32 l "" +STARTLINE T "<b><h2>Parent linking"}
 addUserKnob {20 group l "" +STARTLINE n 1}
 group 0
 addUserKnob {26 _8 l "" +STARTLINE T "\n"}
 addUserKnob {26 _2 l "" +STARTLINE T "<b>Link GUN matchmove"}
 addUserKnob {22 python_button_1 l "set parent" t "select parent node, and press this button to set the selected node as parent" T "#set currrent node\nnode = nuke.thisNode()\n\n#set parent\nnode.end()\nn = nuke.selectedNode()\['name'].getValue()\nnode.begin()\nnode\['parent_gun'].setValue(n)\n\n#disable problem\nnode\['warning_parenting_gun'].setVisible(False)" +STARTLINE}
 addUserKnob {22 python_button_3 l reset -STARTLINE T "#set currrent node\nnode = nuke.thisNode()\n#reset parent\nnode.end()\nn = \"null\"\nnode.begin()\nnode\['parent_gun'].setValue(n)\n\n#enable problem\nnode\['warning_parenting_gun'].setVisible(True)"}
 addUserKnob {1 parent_gun l parent +DISABLED}
 parent_gun null
 addUserKnob {26 ""}
 addUserKnob {26 _1 l "" +STARTLINE T "\n"}
 addUserKnob {26 _3 l "" +STARTLINE T "<b>Link ENV matchmove"}
 addUserKnob {22 python_button_2 l "set parent" t "select parent node, and press this button to set the selected node as parent" T "#set currrent node\nnode = nuke.thisNode()\n\n#set parent\nnode.end()\nn = nuke.selectedNode()\['name'].getValue()\nnode.begin()\nnode\['parent_env'].setValue(n)\n\n#disable problem\nnode\['warning_parenting_env'].setVisible(False)" +STARTLINE}
 addUserKnob {22 python_button_5 l reset -STARTLINE T "#set currrent node\nnode = nuke.thisNode()\n#reset parent\nnode.end()\nn = \"null\"\nnode.begin()\nnode\['parent_env'].setValue(n)\n\n#enable problem\nnode\['warning_parenting_env'].setVisible(True)"}
 addUserKnob {1 parent_env l parent +DISABLED}
 parent_env null
 addUserKnob {20 endGroup n -1}
 addUserKnob {26 line_05 l "" +STARTLINE}
 addUserKnob {26 warning_parenting_gun l "" t "you can find this in the \"align\" mode, under the name \"Parent linking\"" +STARTLINE T "<p style=\"color:rgba(255, 255, 0, 0.75);\"> \n<b><span>&#9888;</span>warning:</b> <i>this node still needs a gun parent</i>\n</p>"}
 addUserKnob {26 warning_parenting_env l "" t "you can find this in the \"align\" mode, under the name \"Parent linking\"." +STARTLINE T "<p style=\"color:rgba(255, 255, 0, 0.75);\"> \n<b><span>&#9888;</span>warning:</b> <i> this node still needs a env parent</i>\n</p>"}
 addUserKnob {26 _34 l "" +STARTLINE T "\n\n\n"}
 addUserKnob {26 _33 l "" +STARTLINE T "\n\n\n<i>made by Yorben - v2.4 (BETA)"}
 addUserKnob {20 expression}
 addUserKnob {26 _10 l "" +STARTLINE T <b>Firing}
 addUserKnob {6 firing l "" t "you can use this to link to the \"dissable knob\" of nodes you want to <b>dissable</b> when there is a muzzleflash." +STARTLINE +STARTLINE}
 firing {{"shot_1(1) == floor(frame) ||\nshot_2(1)== floor(frame) ||\nshot_3(1) == floor(frame) ||\nshot_4(1) == floor(frame) ||\nshot_5(1) == floor(frame) ||\nshot_6(1) == floor(frame) ||\nshot_7(1) == floor(frame) ||\nshot_8(1) == floor(frame) ||\nshot_9(1) == floor(frame) ||\nshot_10(1) == floor(frame) ||\nshot_11(1) == floor(frame) ||\nshot_12(1) == floor(frame) ||\nshot_13(1) == floor(frame) ||\nshot_14(1)== floor(frame) ||\nshot_15(1) == floor(frame) ||\nshot_16(1) == floor(frame) ||\nshot_17(1) == floor(frame) ||\nshot_18(1) == floor(frame) ||\nshot_19(1) == floor(frame) ||\nshot_20(1) == floor(frame) ||\nshot_21(1) == floor(frame) ||\nshot_22(1) == floor(frame) ||\nshot_23(1) == floor(frame) ||\nshot_24(1) == floor(frame) \n? 1:0"}}
 addUserKnob {26 _11 l "" +STARTLINE T "\n"}
 addUserKnob {26 _12 l "" +STARTLINE T "<b>Not firing"}
 addUserKnob {6 notfiring l "" t "you can use this to link to the \"dissable knob\" of nodes you want to <b>enable</b> when there is a muzzleflash." +STARTLINE +STARTLINE}
 notfiring {{1-firing}}
 addUserKnob {2 filepath +INVISIBLE}
 filepath /Volumes/Server03_F/08_USER_TEMP_FOLDERS/YORBEN/Muzzleflash/NEW/custom_assets/
 addUserKnob {6 EnableExtraFrames l "extra frames" +INVISIBLE +STARTLINE}
 addUserKnob {22 python_button_4 l "reveal frames" +INVISIBLE T "node = nuke.thisNode()\n\nfor i in range(1,24):\n    name = 'shot' + str(i)\n    node\[name].setVisible(True)" +STARTLINE}
 addUserKnob {22 python_button_9 l "hide frames" -STARTLINE +INVISIBLE T "node = nuke.thisNode()\n\nfor i in range(1,25):\n    name = 'shot_' + str(i)\n    node\[name].setVisible(False)"}
 addUserKnob {3 shot_1 l "" +STARTLINE +INVISIBLE}
 shot_1 {{"\[python -execlocal try:\\n\\ \\ \\ SelectedKey\\ =\\ nuke.thisNode().knob('count').animation(0).keys()\\\[0\\].x\\nexcept:\\n\\ \\ \\ SelectedKey\\ =\\ 0\\n\\nret\\ =\\ SelectedKey]"}}
 addUserKnob {3 shot_2 l "" +STARTLINE +INVISIBLE}
 shot_2 {{"\[python -execlocal try:\\n\\ \\ \\ SelectedKey\\ =\\ nuke.thisNode().knob('count').animation(0).keys()\\\[1\\].x\\nexcept:\\n\\ \\ \\ SelectedKey\\ =\\ 0\\n\\nret\\ =\\ SelectedKey]"}}
 addUserKnob {3 shot_3 l "" +STARTLINE +INVISIBLE}
 shot_3 {{"\[python -execlocal try:\\n\\ \\ \\ SelectedKey\\ =\\ nuke.thisNode().knob('count').animation(0).keys()\\\[2\\].x\\nexcept:\\n\\ \\ \\ SelectedKey\\ =\\ 0\\n\\nret\\ =\\ SelectedKey]"}}
 addUserKnob {3 shot_4 l "" +STARTLINE +INVISIBLE}
 shot_4 {{"\[python -execlocal try:\\n\\ \\ \\ SelectedKey\\ =\\ nuke.thisNode().knob('count').animation(0).keys()\\\[3\\].x\\nexcept:\\n\\ \\ \\ SelectedKey\\ =\\ 0\\n\\nret\\ =\\ SelectedKey]"}}
 addUserKnob {3 shot_5 l "" +STARTLINE +INVISIBLE}
 shot_5 {{"\[python -execlocal try:\\n\\ \\ \\ SelectedKey\\ =\\ nuke.thisNode().knob('count').animation(0).keys()\\\[4\\].x\\nexcept:\\n\\ \\ \\ SelectedKey\\ =\\ 0\\n\\nret\\ =\\ SelectedKey]"}}
 addUserKnob {3 shot_6 l "" +STARTLINE +INVISIBLE}
 shot_6 {{"\[python -execlocal try:\\n\\ \\ \\ SelectedKey\\ =\\ nuke.thisNode().knob('count').animation(0).keys()\\\[5\\].x\\nexcept:\\n\\ \\ \\ SelectedKey\\ =\\ 0\\n\\nret\\ =\\ SelectedKey]"}}
 addUserKnob {3 shot_7 l "" +STARTLINE +INVISIBLE}
 shot_7 {{"\[python -execlocal try:\\n\\ \\ \\ SelectedKey\\ =\\ nuke.thisNode().knob('count').animation(0).keys()\\\[6\\].x\\nexcept:\\n\\ \\ \\ SelectedKey\\ =\\ 0\\n\\nret\\ =\\ SelectedKey]"}}
 addUserKnob {3 shot_8 l "" +STARTLINE +INVISIBLE}
 shot_8 {{"\[python -execlocal try:\\n\\ \\ \\ SelectedKey\\ =\\ nuke.thisNode().knob('count').animation(0).keys()\\\[7\\].x\\nexcept:\\n\\ \\ \\ SelectedKey\\ =\\ 0\\n\\nret\\ =\\ SelectedKey]"}}
 addUserKnob {3 shot_9 l "" +STARTLINE +INVISIBLE}
 shot_9 {{"\[python -execlocal try:\\n\\ \\ \\ SelectedKey\\ =\\ nuke.thisNode().knob('count').animation(0).keys()\\\[8\\].x\\nexcept:\\n\\ \\ \\ SelectedKey\\ =\\ 0\\n\\nret\\ =\\ SelectedKey]"}}
 addUserKnob {3 shot_10 l "" +STARTLINE +INVISIBLE}
 shot_10 {{"\[python -execlocal try:\\n\\ \\ \\ SelectedKey\\ =\\ nuke.thisNode().knob('count').animation(0).keys()\\\[9\\].x\\nexcept:\\n\\ \\ \\ SelectedKey\\ =\\ 0\\n\\nret\\ =\\ SelectedKey]"}}
 addUserKnob {3 shot_11 l "" +STARTLINE +INVISIBLE}
 shot_11 {{"\[python -execlocal try:\\n\\ \\ \\ SelectedKey\\ =\\ nuke.thisNode().knob('count').animation(0).keys()\\\[10\\].x\\nexcept:\\n\\ \\ \\ SelectedKey\\ =\\ 0\\n\\nret\\ =\\ SelectedKey]"}}
 addUserKnob {3 shot_12 l "" +STARTLINE +INVISIBLE}
 shot_12 {{"\[python -execlocal try:\\n\\ \\ \\ SelectedKey\\ =\\ nuke.thisNode().knob('count').animation(0).keys()\\\[11\\].x\\nexcept:\\n\\ \\ \\ SelectedKey\\ =\\ 0\\n\\nret\\ =\\ SelectedKey]"}}
 addUserKnob {3 shot_13 l "" +STARTLINE +INVISIBLE}
 shot_13 {{"\[python -execlocal try:\\n\\ \\ \\ SelectedKey\\ =\\ nuke.thisNode().knob('count').animation(0).keys()\\\[12\\].x\\nexcept:\\n\\ \\ \\ SelectedKey\\ =\\ 0\\n\\nret\\ =\\ SelectedKey]"}}
 addUserKnob {3 shot_14 l "" +STARTLINE +INVISIBLE}
 shot_14 {{"\[python -execlocal try:\\n\\ \\ \\ SelectedKey\\ =\\ nuke.thisNode().knob('count').animation(0).keys()\\\[13\\].x\\nexcept:\\n\\ \\ \\ SelectedKey\\ =\\ 0\\n\\nret\\ =\\ SelectedKey]"}}
 addUserKnob {3 shot_15 l "" +STARTLINE +INVISIBLE}
 shot_15 {{"\[python -execlocal try:\\n\\ \\ \\ SelectedKey\\ =\\ nuke.thisNode().knob('count').animation(0).keys()\\\[14\\].x\\nexcept:\\n\\ \\ \\ SelectedKey\\ =\\ 0\\n\\nret\\ =\\ SelectedKey]"}}
 addUserKnob {3 shot_16 l "" +STARTLINE +INVISIBLE}
 shot_16 {{"\[python -execlocal try:\\n\\ \\ \\ SelectedKey\\ =\\ nuke.thisNode().knob('count').animation(0).keys()\\\[15\\].x\\nexcept:\\n\\ \\ \\ SelectedKey\\ =\\ 0\\n\\nret\\ =\\ SelectedKey]"}}
 addUserKnob {3 shot_17 l "" +STARTLINE +INVISIBLE}
 shot_17 {{"\[python -execlocal try:\\n\\ \\ \\ SelectedKey\\ =\\ nuke.thisNode().knob('count').animation(0).keys()\\\[16\\].x\\nexcept:\\n\\ \\ \\ SelectedKey\\ =\\ 0\\n\\nret\\ =\\ SelectedKey]"}}
 addUserKnob {3 shot_18 l "" +STARTLINE +INVISIBLE}
 shot_18 {{"\[python -execlocal try:\\n\\ \\ \\ SelectedKey\\ =\\ nuke.thisNode().knob('count').animation(0).keys()\\\[17\\].x\\nexcept:\\n\\ \\ \\ SelectedKey\\ =\\ 0\\n\\nret\\ =\\ SelectedKey]"}}
 addUserKnob {3 shot_19 l "" +STARTLINE +INVISIBLE}
 shot_19 {{"\[python -execlocal try:\\n\\ \\ \\ SelectedKey\\ =\\ nuke.thisNode().knob('count').animation(0).keys()\\\[18\\].x\\nexcept:\\n\\ \\ \\ SelectedKey\\ =\\ 0\\n\\nret\\ =\\ SelectedKey]"}}
 addUserKnob {3 shot_20 l "" +STARTLINE +INVISIBLE}
 shot_20 {{"\[python -execlocal try:\\n\\ \\ \\ SelectedKey\\ =\\ nuke.thisNode().knob('count').animation(0).keys()\\\[19\\].x\\nexcept:\\n\\ \\ \\ SelectedKey\\ =\\ 0\\n\\nret\\ =\\ SelectedKey]"}}
 addUserKnob {3 shot_21 l "" +STARTLINE +INVISIBLE}
 shot_21 {{"\[python -execlocal try:\\n\\ \\ \\ SelectedKey\\ =\\ nuke.thisNode().knob('count').animation(0).keys()\\\[20\\].x\\nexcept:\\n\\ \\ \\ SelectedKey\\ =\\ 0\\n\\nret\\ =\\ SelectedKey]"}}
 addUserKnob {3 shot_22 l "" +STARTLINE +INVISIBLE}
 shot_22 {{"\[python -execlocal try:\\n\\ \\ \\ SelectedKey\\ =\\ nuke.thisNode().knob('count').animation(0).keys()\\\[21\\].x\\nexcept:\\n\\ \\ \\ SelectedKey\\ =\\ 0\\n\\nret\\ =\\ SelectedKey]"}}
 addUserKnob {3 shot_23 l "" +STARTLINE +INVISIBLE}
 shot_23 {{"\[python -execlocal try:\\n\\ \\ \\ SelectedKey\\ =\\ nuke.thisNode().knob('count').animation(0).keys()\\\[22\\].x\\nexcept:\\n\\ \\ \\ SelectedKey\\ =\\ 0\\n\\nret\\ =\\ SelectedKey]"}}
 addUserKnob {3 shot_24 l "" +STARTLINE +INVISIBLE}
 shot_24 {{"\[python -execlocal try:\\n\\ \\ \\ SelectedKey\\ =\\ nuke.thisNode().knob('count').animation(0).keys()\\\[23\\].x\\nexcept:\\n\\ \\ \\ SelectedKey\\ =\\ 0\\n\\nret\\ =\\ SelectedKey]"}}
}
 BackdropNode {
  inputs 0
  name BackdropNode15
  knobChanged "try:\n    listenedKnobs = \['text', 'position', 'name']\n    node = nuke.thisNode()\n    name = node.knob('name').value()\n    text = node.knob('text').value()\n    position = node.knob('position').value()\n    position = \"<\" + position + \">\"\n    label = node.knob('label').value()\n    \n    if nuke.thisKnob().name() in listenedKnobs:\n        if text == \"\":\n            if node.knob('position').value() == \"left\":\n                node.knob('label').setValue()\n            else:\n                node.knob('label').setValue(position + name)\n        else:\n            if node.knob('position').value() == \"left\":\n                node.knob('label').setValue(text)\n            else:\n                node.knob('label').setValue(position + text)\n                \n    elif nuke.thisKnob().name() == 'font_size':\n        fontSize = node.knob('font_size').value()\n        node.knob('note_font_size').setValue(fontSize)\nexcept:\n    pass"
  tile_color 0x383838ff
  label "<Left>ref gun collection"
  note_font_size 50
  xpos -426
  ypos -1024
  bdwidth 568
  bdheight 1553
  addUserKnob {20 F_VFX l BackdropNode}
  addUserKnob {43 text l Text}
  text "ref gun collection"
  addUserKnob {7 font_size l "Font Size" R 10 100}
  font_size 50
  addUserKnob {4 position l "" -STARTLINE M {Left Center}}
  addUserKnob {26 S01 l " " T " "}
  addUserKnob {22 grow l " <img src=\"F_scalep.png\">" -STARTLINE T "n=nuke.thisNode()\n\ndef grow(node=None,step=50):\n    try:\n        if not node:\n            n=nuke.selectedNode()\n        else:\n            n=node\n            n\['xpos'].setValue(n\['xpos'].getValue()-step)\n            n\['ypos'].setValue(n\['ypos'].getValue()-step)\n            n\['bdwidth'].setValue(n\['bdwidth'].getValue()+step*2)\n            n\['bdheight'].setValue(n\['bdheight'].getValue()+step*2)\n    except:\n        pass\ngrow(n,50)"}
  addUserKnob {22 shrink l " <img src=\"F_scalem.png\">" -STARTLINE T "n=nuke.thisNode()\n\ndef shrink(node=None,step=50):\n    try:\n        if not node:\n            n=nuke.selectedNode()\n        else:\n            n=node\n            n\['xpos'].setValue(n\['xpos'].getValue()+step)\n            n\['ypos'].setValue(n\['ypos'].getValue()+step)\n            n\['bdwidth'].setValue(n\['bdwidth'].getValue()-step*2)\n            n\['bdheight'].setValue(n\['bdheight'].getValue()-step*2)\n    except:\n        pass\nshrink(n,50)"}
  addUserKnob {22 colorandom l " <img src=\"ColorBars.png\">" -STARTLINE T "import colorsys, random\nn=nuke.thisNode()\nR,G,B= colorsys.hsv_to_rgb(random.random(),.1+random.random()*.15,.15+random.random()*.15)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ) )"}
  addUserKnob {22 darkgrey l "<font color=\"#232323\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.0, 0.0, 0.14]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
  addUserKnob {22 lightgrey l "<font color=\"#383838\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.0, 0.0, 0.22]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
  addUserKnob {22 red l "<font color=\"#8c3838\" size=6>■</font>" T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.0, 0.6, 0.55]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n" +STARTLINE}
  addUserKnob {22 orange l "<font color=\"#b28e59\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.1, 0.5, 0.7]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
  addUserKnob {22 yellow l "<font color=\"#ccc766\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.16, 0.5, 0.8]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
  addUserKnob {22 green l "<font color=\"#5d995b\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.33, 0.4, 0.6]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
  addUserKnob {22 cyan l "<font color=\"#72998f\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.46, 0.25, 0.6]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
  addUserKnob {22 blue l "<font color=\"#59687f\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.6, 0.3, 0.5]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
  addUserKnob {22 darkblue l "<font color=\"#63628c\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.67, 0.3, 0.55]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
  addUserKnob {22 magenta l "<font color=\"#927a99\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.8, 0.2, 0.6]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
  addUserKnob {22 pink l "<font color=\"#997a89\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.92, 0.2, 0.6]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
  addUserKnob {26 S02 l " " T " "}
  addUserKnob {26 Ftools l "" +STARTLINE T "<font color=\"#1C1C1C\"> v1.2 - Franklin VFX - 2018"}
 }
 BackdropNode {
  inputs 0
  name BackdropNode16
  knobChanged "try:\n    listenedKnobs = \['text', 'position', 'name']\n    node = nuke.thisNode()\n    name = node.knob('name').value()\n    text = node.knob('text').value()\n    position = node.knob('position').value()\n    position = \"<\" + position + \">\"\n    label = node.knob('label').value()\n    \n    if nuke.thisKnob().name() in listenedKnobs:\n        if text == \"\":\n            if node.knob('position').value() == \"left\":\n                node.knob('label').setValue()\n            else:\n                node.knob('label').setValue(position + name)\n        else:\n            if node.knob('position').value() == \"left\":\n                node.knob('label').setValue(text)\n            else:\n                node.knob('label').setValue(position + text)\n                \n    elif nuke.thisKnob().name() == 'font_size':\n        fontSize = node.knob('font_size').value()\n        node.knob('note_font_size').setValue(fontSize)\nexcept:\n    pass"
  tile_color 0x343941ff
  label "<Left>perspective revealer"
  note_font_size 50
  xpos 1411
  ypos -398
  bdwidth 362
  bdheight 518
  addUserKnob {20 F_VFX l BackdropNode}
  addUserKnob {43 text l Text}
  text "perspective revealer"
  addUserKnob {7 font_size l "Font Size" R 10 100}
  font_size 50
  addUserKnob {4 position l "" -STARTLINE M {Left Center}}
  addUserKnob {26 S01 l " " T " "}
  addUserKnob {22 grow l " <img src=\"F_scalep.png\">" -STARTLINE T "n=nuke.thisNode()\n\ndef grow(node=None,step=50):\n    try:\n        if not node:\n            n=nuke.selectedNode()\n        else:\n            n=node\n            n\['xpos'].setValue(n\['xpos'].getValue()-step)\n            n\['ypos'].setValue(n\['ypos'].getValue()-step)\n            n\['bdwidth'].setValue(n\['bdwidth'].getValue()+step*2)\n            n\['bdheight'].setValue(n\['bdheight'].getValue()+step*2)\n    except:\n        pass\ngrow(n,50)"}
  addUserKnob {22 shrink l " <img src=\"F_scalem.png\">" -STARTLINE T "n=nuke.thisNode()\n\ndef shrink(node=None,step=50):\n    try:\n        if not node:\n            n=nuke.selectedNode()\n        else:\n            n=node\n            n\['xpos'].setValue(n\['xpos'].getValue()+step)\n            n\['ypos'].setValue(n\['ypos'].getValue()+step)\n            n\['bdwidth'].setValue(n\['bdwidth'].getValue()-step*2)\n            n\['bdheight'].setValue(n\['bdheight'].getValue()-step*2)\n    except:\n        pass\nshrink(n,50)"}
  addUserKnob {22 colorandom l " <img src=\"ColorBars.png\">" -STARTLINE T "import colorsys, random\nn=nuke.thisNode()\nR,G,B= colorsys.hsv_to_rgb(random.random(),.1+random.random()*.15,.15+random.random()*.15)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ) )"}
  addUserKnob {22 darkgrey l "<font color=\"#232323\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.0, 0.0, 0.14]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
  addUserKnob {22 lightgrey l "<font color=\"#383838\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.0, 0.0, 0.22]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
  addUserKnob {22 red l "<font color=\"#8c3838\" size=6>■</font>" T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.0, 0.6, 0.55]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n" +STARTLINE}
  addUserKnob {22 orange l "<font color=\"#b28e59\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.1, 0.5, 0.7]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
  addUserKnob {22 yellow l "<font color=\"#ccc766\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.16, 0.5, 0.8]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
  addUserKnob {22 green l "<font color=\"#5d995b\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.33, 0.4, 0.6]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
  addUserKnob {22 cyan l "<font color=\"#72998f\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.46, 0.25, 0.6]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
  addUserKnob {22 blue l "<font color=\"#59687f\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.6, 0.3, 0.5]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
  addUserKnob {22 darkblue l "<font color=\"#63628c\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.67, 0.3, 0.55]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
  addUserKnob {22 magenta l "<font color=\"#927a99\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.8, 0.2, 0.6]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
  addUserKnob {22 pink l "<font color=\"#997a89\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.92, 0.2, 0.6]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
  addUserKnob {26 S02 l " " T " "}
  addUserKnob {26 Ftools l "" +STARTLINE T "<font color=\"#1C1C1C\"> v1.2 - Franklin VFX - 2018"}
 }
 BackdropNode {
  inputs 0
  name BackdropNode17
  knobChanged "try:\n    listenedKnobs = \['text', 'position', 'name']\n    node = nuke.thisNode()\n    name = node.knob('name').value()\n    text = node.knob('text').value()\n    position = node.knob('position').value()\n    position = \"<\" + position + \">\"\n    label = node.knob('label').value()\n    \n    if nuke.thisKnob().name() in listenedKnobs:\n        if text == \"\":\n            if node.knob('position').value() == \"left\":\n                node.knob('label').setValue()\n            else:\n                node.knob('label').setValue(position + name)\n        else:\n            if node.knob('position').value() == \"left\":\n                node.knob('label').setValue(text)\n            else:\n                node.knob('label').setValue(position + text)\n                \n    elif nuke.thisKnob().name() == 'font_size':\n        fontSize = node.knob('font_size').value()\n        node.knob('note_font_size').setValue(fontSize)\nexcept:\n    pass"
  tile_color 0x232323ff
  label <Left>FX
  note_font_size 50
  xpos 998
  ypos -1017
  bdwidth 368
  bdheight 1555
  addUserKnob {20 F_VFX l BackdropNode}
  addUserKnob {43 text l Text}
  text FX
  addUserKnob {7 font_size l "Font Size" R 10 100}
  font_size 50
  addUserKnob {4 position l "" -STARTLINE M {Left Center}}
  addUserKnob {26 S01 l " " T " "}
  addUserKnob {22 grow l " <img src=\"F_scalep.png\">" -STARTLINE T "n=nuke.thisNode()\n\ndef grow(node=None,step=50):\n    try:\n        if not node:\n            n=nuke.selectedNode()\n        else:\n            n=node\n            n\['xpos'].setValue(n\['xpos'].getValue()-step)\n            n\['ypos'].setValue(n\['ypos'].getValue()-step)\n            n\['bdwidth'].setValue(n\['bdwidth'].getValue()+step*2)\n            n\['bdheight'].setValue(n\['bdheight'].getValue()+step*2)\n    except:\n        pass\ngrow(n,50)"}
  addUserKnob {22 shrink l " <img src=\"F_scalem.png\">" -STARTLINE T "n=nuke.thisNode()\n\ndef shrink(node=None,step=50):\n    try:\n        if not node:\n            n=nuke.selectedNode()\n        else:\n            n=node\n            n\['xpos'].setValue(n\['xpos'].getValue()+step)\n            n\['ypos'].setValue(n\['ypos'].getValue()+step)\n            n\['bdwidth'].setValue(n\['bdwidth'].getValue()-step*2)\n            n\['bdheight'].setValue(n\['bdheight'].getValue()-step*2)\n    except:\n        pass\nshrink(n,50)"}
  addUserKnob {22 colorandom l " <img src=\"ColorBars.png\">" -STARTLINE T "import colorsys, random\nn=nuke.thisNode()\nR,G,B= colorsys.hsv_to_rgb(random.random(),.1+random.random()*.15,.15+random.random()*.15)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ) )"}
  addUserKnob {22 darkgrey l "<font color=\"#232323\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.0, 0.0, 0.14]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
  addUserKnob {22 lightgrey l "<font color=\"#383838\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.0, 0.0, 0.22]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
  addUserKnob {22 red l "<font color=\"#8c3838\" size=6>■</font>" T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.0, 0.6, 0.55]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n" +STARTLINE}
  addUserKnob {22 orange l "<font color=\"#b28e59\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.1, 0.5, 0.7]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
  addUserKnob {22 yellow l "<font color=\"#ccc766\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.16, 0.5, 0.8]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
  addUserKnob {22 green l "<font color=\"#5d995b\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.33, 0.4, 0.6]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
  addUserKnob {22 cyan l "<font color=\"#72998f\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.46, 0.25, 0.6]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
  addUserKnob {22 blue l "<font color=\"#59687f\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.6, 0.3, 0.5]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
  addUserKnob {22 darkblue l "<font color=\"#63628c\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.67, 0.3, 0.55]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
  addUserKnob {22 magenta l "<font color=\"#927a99\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.8, 0.2, 0.6]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
  addUserKnob {22 pink l "<font color=\"#997a89\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.92, 0.2, 0.6]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
  addUserKnob {26 S02 l " " T " "}
  addUserKnob {26 Ftools l "" +STARTLINE T "<font color=\"#1C1C1C\"> v1.2 - Franklin VFX - 2018"}
 }
 BackdropNode {
  inputs 0
  name BackdropNode18
  knobChanged "try:\n    listenedKnobs = \['text', 'position', 'name']\n    node = nuke.thisNode()\n    name = node.knob('name').value()\n    text = node.knob('text').value()\n    position = node.knob('position').value()\n    position = \"<\" + position + \">\"\n    label = node.knob('label').value()\n    \n    if nuke.thisKnob().name() in listenedKnobs:\n        if text == \"\":\n            if node.knob('position').value() == \"left\":\n                node.knob('label').setValue()\n            else:\n                node.knob('label').setValue(position + name)\n        else:\n            if node.knob('position').value() == \"left\":\n                node.knob('label').setValue(text)\n            else:\n                node.knob('label').setValue(position + text)\n                \n    elif nuke.thisKnob().name() == 'font_size':\n        fontSize = node.knob('font_size').value()\n        node.knob('note_font_size').setValue(fontSize)\nexcept:\n    pass"
  tile_color 0x383838ff
  label <Left>alignment
  note_font_size 50
  xpos 180
  ypos -1020
  bdwidth 786
  bdheight 1550
  addUserKnob {20 F_VFX l BackdropNode}
  addUserKnob {43 text l Text}
  text alignment
  addUserKnob {7 font_size l "Font Size" R 10 100}
  font_size 50
  addUserKnob {4 position l "" -STARTLINE M {Left Center}}
  addUserKnob {26 S01 l " " T " "}
  addUserKnob {22 grow l " <img src=\"F_scalep.png\">" -STARTLINE T "n=nuke.thisNode()\n\ndef grow(node=None,step=50):\n    try:\n        if not node:\n            n=nuke.selectedNode()\n        else:\n            n=node\n            n\['xpos'].setValue(n\['xpos'].getValue()-step)\n            n\['ypos'].setValue(n\['ypos'].getValue()-step)\n            n\['bdwidth'].setValue(n\['bdwidth'].getValue()+step*2)\n            n\['bdheight'].setValue(n\['bdheight'].getValue()+step*2)\n    except:\n        pass\ngrow(n,50)"}
  addUserKnob {22 shrink l " <img src=\"F_scalem.png\">" -STARTLINE T "n=nuke.thisNode()\n\ndef shrink(node=None,step=50):\n    try:\n        if not node:\n            n=nuke.selectedNode()\n        else:\n            n=node\n            n\['xpos'].setValue(n\['xpos'].getValue()+step)\n            n\['ypos'].setValue(n\['ypos'].getValue()+step)\n            n\['bdwidth'].setValue(n\['bdwidth'].getValue()-step*2)\n            n\['bdheight'].setValue(n\['bdheight'].getValue()-step*2)\n    except:\n        pass\nshrink(n,50)"}
  addUserKnob {22 colorandom l " <img src=\"ColorBars.png\">" -STARTLINE T "import colorsys, random\nn=nuke.thisNode()\nR,G,B= colorsys.hsv_to_rgb(random.random(),.1+random.random()*.15,.15+random.random()*.15)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ) )"}
  addUserKnob {22 darkgrey l "<font color=\"#232323\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.0, 0.0, 0.14]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
  addUserKnob {22 lightgrey l "<font color=\"#383838\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.0, 0.0, 0.22]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
  addUserKnob {22 red l "<font color=\"#8c3838\" size=6>■</font>" T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.0, 0.6, 0.55]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n" +STARTLINE}
  addUserKnob {22 orange l "<font color=\"#b28e59\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.1, 0.5, 0.7]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
  addUserKnob {22 yellow l "<font color=\"#ccc766\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.16, 0.5, 0.8]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
  addUserKnob {22 green l "<font color=\"#5d995b\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.33, 0.4, 0.6]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
  addUserKnob {22 cyan l "<font color=\"#72998f\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.46, 0.25, 0.6]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
  addUserKnob {22 blue l "<font color=\"#59687f\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.6, 0.3, 0.5]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
  addUserKnob {22 darkblue l "<font color=\"#63628c\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.67, 0.3, 0.55]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
  addUserKnob {22 magenta l "<font color=\"#927a99\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.8, 0.2, 0.6]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
  addUserKnob {22 pink l "<font color=\"#997a89\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.92, 0.2, 0.6]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
  addUserKnob {26 S02 l " " T " "}
  addUserKnob {26 Ftools l "" +STARTLINE T "<font color=\"#1C1C1C\"> v1.2 - Franklin VFX - 2018"}
 }
 NoOp {
  inputs 0
  name math_matrix
  xpos 1517
  ypos -51
  addUserKnob {20 User}
  addUserKnob {18 Nx l "" +STARTLINE +INVISIBLE}
  Nx {-1 0 0}
  addUserKnob {6 Nx_panelDropped l "panel dropped state" -STARTLINE +HIDDEN}
  addUserKnob {6 color_rgb_panelDropped l "panel dropped state" -STARTLINE +HIDDEN}
  addUserKnob {18 Ny l "" +STARTLINE +INVISIBLE}
  Ny {0 1 0}
  addUserKnob {6 Ny_panelDropped l "panel dropped state" -STARTLINE +HIDDEN}
  addUserKnob {6 color_rgb_1_panelDropped l "panel dropped state" -STARTLINE +HIDDEN}
  addUserKnob {6 color_rgb_2_panelDropped l "panel dropped state" -STARTLINE +HIDDEN}
  addUserKnob {18 Nz l "" +STARTLINE +INVISIBLE}
  Nz {0 0 1}
  addUserKnob {6 Nz_panelDropped l "panel dropped state" -STARTLINE +HIDDEN}
  addUserKnob {26 _1 l "" +STARTLINE +INVISIBLE T "\n\n"}
  addUserKnob {13 red l "" +STARTLINE}
  red {{"\[if \{\[exists  parent.input0]\} \{return \[value \[topnode parent.input0].name].matrix.0\} \{return 1\}]"} {"\[if \{\[exists  parent.input0]\} \{return \[value \[topnode parent.input0].name].matrix.1\} \{return 0\}]"} {"\[if \{\[exists  parent.input0]\} \{return \[value \[topnode parent.input0].name].matrix.2\} \{return 0\}]"}}
  addUserKnob {13 green l "" +STARTLINE}
  green {{"\[if \{\[exists  parent.input0]\} \{return \[value \[topnode parent.input0].name].matrix.4\} \{return 0\}]"} {"\[if \{\[exists  parent.input0]\} \{return \[value \[topnode parent.input0].name].matrix.5\} \{return 1\}]"} {"\[if \{\[exists  parent.input0]\} \{return \[value \[topnode parent.input0].name].matrix.6\} \{return 0\}]"}}
  addUserKnob {13 blue l "" +STARTLINE}
  blue {{"\[if \{\[exists  parent.input0]\} \{return \[value \[topnode parent.input0].name].matrix.8\} \{return 0\}]"} {"\[if \{\[exists  parent.input0]\} \{return \[value \[topnode parent.input0].name].matrix.9\} \{return 0\}]"} {"\[if \{\[exists  parent.input0]\} \{return \[value \[topnode parent.input0].name].matrix.10\} \{return 1\}]"}}
  addUserKnob {26 _2 l "" +STARTLINE T "\n\n"}
  addUserKnob {18 Tx l "" +STARTLINE +INVISIBLE}
  Tx {{"((Nx.r * red.x) + (Nx.g * red.y) + (Nx.b * red.z))"} {"((Nx.r * green.x) + (Nx.g * green.y) + (Nx.b * green.z))"} {"((Nx.r * blue.x) + (Nx.g * blue.y) + (Nx.b * blue.z))"}}
  addUserKnob {6 Tx_panelDropped l "panel dropped state" -STARTLINE +HIDDEN}
  addUserKnob {18 Ty l "" +STARTLINE +INVISIBLE}
  Ty {{"((Ny.r * red.x) + (Ny.g * red.y) + (Ny.b * red.z))"} {"((Ny.r * green.x) + (Ny.g * green.y) + (Ny.b * green.z))"} {"((Ny.r * blue.x) + (Ny.g * blue.y) + (Ny.b * blue.z))"}}
  addUserKnob {6 Ty_panelDropped l "panel dropped state" -STARTLINE +HIDDEN}
  addUserKnob {18 Tz l "" +STARTLINE +INVISIBLE}
  Tz {{"((Nz.r * red.x) + (Nz.g * red.y) + (Nz.b * red.z))"} {"((Nz.r * green.x) + (Nz.g * green.y) + (Nz.b * green.z))"} {"((Nz.r * blue.x) + (Nz.g * blue.y) + (Nz.b * blue.z))"}}
  addUserKnob {6 Tz_panelDropped l "panel dropped state" -STARTLINE +HIDDEN}
  addUserKnob {26 _3 l "" +STARTLINE +INVISIBLE T "\n\n"}
  addUserKnob {26 _6 l "" +STARTLINE T <b>flash}
  addUserKnob {7 gamma_flash l gamma}
  gamma_flash 1
  addUserKnob {7 max_value_flash l "max value"}
  max_value_flash 0.35
  addUserKnob {7 min_value_flash l "min value"}
  min_value_flash 0.3
  addUserKnob {26 _7 l "" +STARTLINE T "\n\n"}
  addUserKnob {26 _8 l "" +STARTLINE T <b>smoke}
  addUserKnob {7 gamma_smoke l gamma}
  gamma_smoke 2
  addUserKnob {7 max_value_smoke l "max value"}
  max_value_smoke 0.9
  addUserKnob {7 min_value_smoke l double}
  min_value_smoke 0.3
  addUserKnob {26 _5 l "" +STARTLINE T "\n\n"}
  addUserKnob {26 _4 l "" +STARTLINE T <h2>output}
  addUserKnob {26 _9 l "" +STARTLINE T <b>flash}
  addUserKnob {7 result_x_flash l "result x"}
  result_x_flash {{"(1-((1-(        ((clamp(  (abs(Tx.b/(sqrt((Tx.r*Tx.r)+(Tx.g*Tx.g)+(Tx.b*Tx.b)))))  , (min_value_flash)  ,  (max_value_flash)  ))   -   (min_value_flash))     *      (1/((max_value_flash)-(min_value_flash)))       ))**gamma_flash))**gamma_flash"}}
  addUserKnob {7 result_y_flash l "result y"}
  result_y_flash {{"(1-((1-(        ((clamp(  (abs(Ty.b/(sqrt((Ty.r*Ty.r)+(Ty.g*Ty.g)+(Ty.b*Ty.b)))))  , (min_value_flash)  ,  (max_value_flash)  ))   -   (min_value_flash))     *      (1/((max_value_flash)-(min_value_flash)))       ))**gamma_flash))**gamma_flash"}}
  addUserKnob {7 result_z_flash l "result z"}
  result_z_flash {{"(1-((1-(        ((clamp(  (abs(Tz.b/(sqrt((Tz.r*Tz.r)+(Tz.g*Tz.g)+(Tz.b*Tz.b)))))  , (min_value_flash)  ,  (max_value_flash)  ))   -   (min_value_flash))     *      (1/((max_value_flash)-(min_value_flash)))       ))**gamma_flash))**gamma_flash"}}
  addUserKnob {26 _10 l "" +STARTLINE T "\n"}
  addUserKnob {26 _11 l "" +STARTLINE T <b>smoke}
  addUserKnob {7 result_x_smoke l "result x"}
  result_x_smoke {{"(1-((1-(        ((clamp(  (abs(Tx.b/(sqrt((Tx.r*Tx.r)+(Tx.g*Tx.g)+(Tx.b*Tx.b)))))  , (min_value_smoke)  ,  (max_value_smoke)  ))   -   (min_value_smoke))     *      (1/((max_value_smoke)-(min_value_smoke)))       ))**gamma_smoke))**gamma_smoke\n"}}
  addUserKnob {7 result_y_smoke l "result y"}
  result_y_smoke {{"(1-((1-(        ((clamp(  (abs(Ty.b/(sqrt((Ty.r*Ty.r)+(Ty.g*Ty.g)+(Ty.b*Ty.b)))))  , (min_value_smoke)  ,  (max_value_smoke)  ))   -   (min_value_smoke))     *      (1/((max_value_smoke)-(min_value_smoke)))       ))**gamma_smoke))**gamma_smoke\n"}}
  addUserKnob {7 result_z_smoke l "result z"}
  result_z_smoke {{"((1-((1-(        ((clamp(  (abs(Tz.b/(sqrt((Tz.r*Tz.r)+(Tz.g*Tz.g)+(Tz.b*Tz.b)))))  , (min_value_smoke)  ,  (max_value_smoke)  ))   -   (min_value_smoke))     *      (1/((max_value_smoke)-(min_value_smoke)))       ))**gamma_smoke))**gamma_smoke)\n"}}
 }
 Read {
  inputs 0
  file_type exr
  file "\[value filepath]/align/align_shapes_####.exr"
  format "3840 2160 0 0 3840 2160 1 UHD_4K"
  last 15
  after black
  origlast 15
  origset true
  version 1
  colorspace scene_linear
  name Read1
  xpos 470
  ypos -1478
 }
 Shuffle2 {
  fromInput1 {{0} B}
  fromInput2 {{0} B}
  mappings "4 rgba.red 0 0 rgba.red 0 0 rgba.green 0 1 rgba.green 0 1 rgba.blue 0 2 rgba.blue 0 2 black -1 -1 rgba.alpha 0 3"
  name Shuffle4
  xpos 470
  ypos -1344
 }
set N3e642850 [stack 0]
 Dot {
  name Dot8
  xpos -101
  ypos -1340
 }
 Transform {
  translate {-1820 0}
  scale 0.85
  center {3840 1080}
  shutteroffset centred
  name Transform2
  xpos -135
  ypos -813
 }
 Text2 {
  font_size_toolbar 100
  font_width_toolbar 100
  font_height_toolbar 100
  message "\[frame]"
  old_message {{48}
    }
  old_expression_markers {{0 0}
    }
  box {0 0 2160 3840}
  yjustify bottom
  transforms {{0 2}
    }
  global_font_scale 2
  center {1920 1080}
  cursor_initialised true
  autofit_bbox false
  group_animations {{0} imported: 0 selected: items: "root transform/"}
  animation_layers {{1 11 1920 1080 0 0 1 1 0 0 0 0}
    }
  name Text1
  xpos -135
  ypos -756
 }
 ContactSheet {
  rows 4
  center true
  splitinputs true
  startframe 1
  endframe {{input.last_frame}}
  name ContactSheet2
  xpos -135
  ypos -657
 }
 Reformat {
  resize height
  pbb true
  name Reformat2
  xpos -135
  ypos -601
 }
add_layer {smoke smoke.red smoke.green smoke.blue smoke.alpha}
 Shuffle2 {
  fromInput1 {{0} B}
  out1 smoke
  fromInput2 {{0} B}
  out2 alpha
  mappings "5 rgba.red 0 0 smoke.red 0 0 rgba.green 0 1 smoke.green 0 1 rgba.blue 0 2 smoke.blue 0 2 rgba.blue 0 2 smoke.alpha 0 3 rgba.blue 0 2 rgba.alpha 1 0"
  name Shuffle1
  xpos -135
  ypos 373
 }
 Dot {
  name Dot1
  xpos -101
  ypos 902
 }
 Group {
  inputs 0
  name muzzleflash_maker_FLASH
  xpos 1240
  ypos -595
  disable {{"((mode==2||mode==4?0:1)||((ActivateFrontFlash+ActivateSideFlash)==0))\n*\n((ShowRefMuzzleFlash*(mode==1))==0)"}}
  addUserKnob {20 User}
  addUserKnob {26 _1 l "" +STARTLINE T "\n\n"}
  addUserKnob {26 _2 l "" +STARTLINE T "<i>All the settings are in the properties pannel of the main group"}
 }
  BackdropNode {
   inputs 0
   name BackdropNode2
   knobChanged "try:\n    listenedKnobs = \['text', 'position', 'name']\n    node = nuke.thisNode()\n    name = node.knob('name').value()\n    text = node.knob('text').value()\n    position = node.knob('position').value()\n    position = \"<\" + position + \">\"\n    label = node.knob('label').value()\n    \n    if nuke.thisKnob().name() in listenedKnobs:\n        if text == \"\":\n            if node.knob('position').value() == \"left\":\n                node.knob('label').setValue()\n            else:\n                node.knob('label').setValue(position + name)\n        else:\n            if node.knob('position').value() == \"left\":\n                node.knob('label').setValue(text)\n            else:\n                node.knob('label').setValue(position + text)\n                \n    elif nuke.thisKnob().name() == 'font_size':\n        fontSize = node.knob('font_size').value()\n        node.knob('note_font_size').setValue(fontSize)\nexcept:\n    pass"
   tile_color 0x374a63ff
   label <Center>ASSETS
   note_font_size 200
   xpos 3194
   ypos -3419
   bdwidth 7929
   bdheight 1212
   z_order -4
   addUserKnob {20 F_VFX l BackdropNode}
   addUserKnob {43 text l Text}
   text ASSETS
   addUserKnob {7 font_size l "Font Size" R 10 100}
   font_size 200
   addUserKnob {4 position l "" -STARTLINE M {Left Center}}
   position Center
   addUserKnob {26 S01 l " " T " "}
   addUserKnob {22 grow l " <img src=\"F_scalep.png\">" -STARTLINE T "n=nuke.thisNode()\n\ndef grow(node=None,step=50):\n    try:\n        if not node:\n            n=nuke.selectedNode()\n        else:\n            n=node\n            n\['xpos'].setValue(n\['xpos'].getValue()-step)\n            n\['ypos'].setValue(n\['ypos'].getValue()-step)\n            n\['bdwidth'].setValue(n\['bdwidth'].getValue()+step*2)\n            n\['bdheight'].setValue(n\['bdheight'].getValue()+step*2)\n    except:\n        pass\ngrow(n,50)"}
   addUserKnob {22 shrink l " <img src=\"F_scalem.png\">" -STARTLINE T "n=nuke.thisNode()\n\ndef shrink(node=None,step=50):\n    try:\n        if not node:\n            n=nuke.selectedNode()\n        else:\n            n=node\n            n\['xpos'].setValue(n\['xpos'].getValue()+step)\n            n\['ypos'].setValue(n\['ypos'].getValue()+step)\n            n\['bdwidth'].setValue(n\['bdwidth'].getValue()-step*2)\n            n\['bdheight'].setValue(n\['bdheight'].getValue()-step*2)\n    except:\n        pass\nshrink(n,50)"}
   addUserKnob {22 colorandom l " <img src=\"ColorBars.png\">" -STARTLINE T "import colorsys, random\nn=nuke.thisNode()\nR,G,B= colorsys.hsv_to_rgb(random.random(),.1+random.random()*.15,.15+random.random()*.15)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ) )"}
   addUserKnob {22 darkgrey l "<font color=\"#232323\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.0, 0.0, 0.14]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
   addUserKnob {22 lightgrey l "<font color=\"#383838\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.0, 0.0, 0.22]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
   addUserKnob {22 red l "<font color=\"#8c3838\" size=6>■</font>" T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.0, 0.6, 0.55]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n" +STARTLINE}
   addUserKnob {22 orange l "<font color=\"#b28e59\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.1, 0.5, 0.7]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
   addUserKnob {22 yellow l "<font color=\"#ccc766\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.16, 0.5, 0.8]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
   addUserKnob {22 green l "<font color=\"#5d995b\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.33, 0.4, 0.6]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
   addUserKnob {22 cyan l "<font color=\"#72998f\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.46, 0.25, 0.6]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
   addUserKnob {22 blue l "<font color=\"#59687f\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.6, 0.3, 0.5]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
   addUserKnob {22 darkblue l "<font color=\"#63628c\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.67, 0.3, 0.55]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
   addUserKnob {22 magenta l "<font color=\"#927a99\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.8, 0.2, 0.6]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
   addUserKnob {22 pink l "<font color=\"#997a89\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.92, 0.2, 0.6]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
   addUserKnob {26 S02 l " " T " "}
   addUserKnob {26 Ftools l "" +STARTLINE T "<font color=\"#1C1C1C\"> v1.2 - Franklin VFX - 2018"}
  }
  BackdropNode {
   inputs 0
   name BackdropNode24
   knobChanged "try:\n    listenedKnobs = \['text', 'position', 'name']\n    node = nuke.thisNode()\n    name = node.knob('name').value()\n    text = node.knob('text').value()\n    position = node.knob('position').value()\n    position = \"<\" + position + \">\"\n    label = node.knob('label').value()\n    \n    if nuke.thisKnob().name() in listenedKnobs:\n        if text == \"\":\n            if node.knob('position').value() == \"left\":\n                node.knob('label').setValue()\n            else:\n                node.knob('label').setValue(position + name)\n        else:\n            if node.knob('position').value() == \"left\":\n                node.knob('label').setValue(text)\n            else:\n                node.knob('label').setValue(position + text)\n                \n    elif nuke.thisKnob().name() == 'font_size':\n        fontSize = node.knob('font_size').value()\n        node.knob('note_font_size').setValue(fontSize)\nexcept:\n    pass"
   tile_color 0x7c7c7cff
   label <Center>FRONT
   note_font_size 50
   xpos 7353
   ypos -3062
   bdwidth 3669
   bdheight 761
   z_order -1
   addUserKnob {20 F_VFX l BackdropNode}
   addUserKnob {43 text l Text}
   text FRONT
   addUserKnob {7 font_size l "Font Size" R 10 100}
   font_size 50
   addUserKnob {4 position l "" -STARTLINE M {Left Center}}
   position Center
   addUserKnob {26 S01 l " " T " "}
   addUserKnob {22 grow l " <img src=\"F_scalep.png\">" -STARTLINE T "n=nuke.thisNode()\n\ndef grow(node=None,step=50):\n    try:\n        if not node:\n            n=nuke.selectedNode()\n        else:\n            n=node\n            n\['xpos'].setValue(n\['xpos'].getValue()-step)\n            n\['ypos'].setValue(n\['ypos'].getValue()-step)\n            n\['bdwidth'].setValue(n\['bdwidth'].getValue()+step*2)\n            n\['bdheight'].setValue(n\['bdheight'].getValue()+step*2)\n    except:\n        pass\ngrow(n,50)"}
   addUserKnob {22 shrink l " <img src=\"F_scalem.png\">" -STARTLINE T "n=nuke.thisNode()\n\ndef shrink(node=None,step=50):\n    try:\n        if not node:\n            n=nuke.selectedNode()\n        else:\n            n=node\n            n\['xpos'].setValue(n\['xpos'].getValue()+step)\n            n\['ypos'].setValue(n\['ypos'].getValue()+step)\n            n\['bdwidth'].setValue(n\['bdwidth'].getValue()-step*2)\n            n\['bdheight'].setValue(n\['bdheight'].getValue()-step*2)\n    except:\n        pass\nshrink(n,50)"}
   addUserKnob {22 colorandom l " <img src=\"ColorBars.png\">" -STARTLINE T "import colorsys, random\nn=nuke.thisNode()\nR,G,B= colorsys.hsv_to_rgb(random.random(),.1+random.random()*.15,.15+random.random()*.15)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ) )"}
   addUserKnob {22 darkgrey l "<font color=\"#232323\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.0, 0.0, 0.14]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
   addUserKnob {22 lightgrey l "<font color=\"#383838\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.0, 0.0, 0.22]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
   addUserKnob {22 red l "<font color=\"#8c3838\" size=6>■</font>" T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.0, 0.6, 0.55]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n" +STARTLINE}
   addUserKnob {22 orange l "<font color=\"#b28e59\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.1, 0.5, 0.7]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
   addUserKnob {22 yellow l "<font color=\"#ccc766\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.16, 0.5, 0.8]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
   addUserKnob {22 green l "<font color=\"#5d995b\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.33, 0.4, 0.6]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
   addUserKnob {22 cyan l "<font color=\"#72998f\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.46, 0.25, 0.6]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
   addUserKnob {22 blue l "<font color=\"#59687f\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.6, 0.3, 0.5]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
   addUserKnob {22 darkblue l "<font color=\"#63628c\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.67, 0.3, 0.55]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
   addUserKnob {22 magenta l "<font color=\"#927a99\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.8, 0.2, 0.6]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
   addUserKnob {22 pink l "<font color=\"#997a89\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.92, 0.2, 0.6]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
   addUserKnob {26 S02 l " " T " "}
   addUserKnob {26 Ftools l "" +STARTLINE T "<font color=\"#1C1C1C\"> v1.2 - Franklin VFX - 2018"}
  }
  BackdropNode {
   inputs 0
   name BackdropNode3
   knobChanged "try:\n    listenedKnobs = \['text', 'position', 'name']\n    node = nuke.thisNode()\n    name = node.knob('name').value()\n    text = node.knob('text').value()\n    position = node.knob('position').value()\n    position = \"<\" + position + \">\"\n    label = node.knob('label').value()\n    \n    if nuke.thisKnob().name() in listenedKnobs:\n        if text == \"\":\n            if node.knob('position').value() == \"left\":\n                node.knob('label').setValue()\n            else:\n                node.knob('label').setValue(position + name)\n        else:\n            if node.knob('position').value() == \"left\":\n                node.knob('label').setValue(text)\n            else:\n                node.knob('label').setValue(position + text)\n                \n    elif nuke.thisKnob().name() == 'font_size':\n        fontSize = node.knob('font_size').value()\n        node.knob('note_font_size').setValue(fontSize)\nexcept:\n    pass"
   tile_color 0x7c7c7cff
   label "<Center>SIDE & TOP"
   note_font_size 50
   xpos 3307
   ypos -3105
   bdwidth 3566
   bdheight 764
   z_order -1
   addUserKnob {20 F_VFX l BackdropNode}
   addUserKnob {43 text l Text}
   text "SIDE & TOP"
   addUserKnob {7 font_size l "Font Size" R 10 100}
   font_size 50
   addUserKnob {4 position l "" -STARTLINE M {Left Center}}
   position Center
   addUserKnob {26 S01 l " " T " "}
   addUserKnob {22 grow l " <img src=\"F_scalep.png\">" -STARTLINE T "n=nuke.thisNode()\n\ndef grow(node=None,step=50):\n    try:\n        if not node:\n            n=nuke.selectedNode()\n        else:\n            n=node\n            n\['xpos'].setValue(n\['xpos'].getValue()-step)\n            n\['ypos'].setValue(n\['ypos'].getValue()-step)\n            n\['bdwidth'].setValue(n\['bdwidth'].getValue()+step*2)\n            n\['bdheight'].setValue(n\['bdheight'].getValue()+step*2)\n    except:\n        pass\ngrow(n,50)"}
   addUserKnob {22 shrink l " <img src=\"F_scalem.png\">" -STARTLINE T "n=nuke.thisNode()\n\ndef shrink(node=None,step=50):\n    try:\n        if not node:\n            n=nuke.selectedNode()\n        else:\n            n=node\n            n\['xpos'].setValue(n\['xpos'].getValue()+step)\n            n\['ypos'].setValue(n\['ypos'].getValue()+step)\n            n\['bdwidth'].setValue(n\['bdwidth'].getValue()-step*2)\n            n\['bdheight'].setValue(n\['bdheight'].getValue()-step*2)\n    except:\n        pass\nshrink(n,50)"}
   addUserKnob {22 colorandom l " <img src=\"ColorBars.png\">" -STARTLINE T "import colorsys, random\nn=nuke.thisNode()\nR,G,B= colorsys.hsv_to_rgb(random.random(),.1+random.random()*.15,.15+random.random()*.15)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ) )"}
   addUserKnob {22 darkgrey l "<font color=\"#232323\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.0, 0.0, 0.14]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
   addUserKnob {22 lightgrey l "<font color=\"#383838\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.0, 0.0, 0.22]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
   addUserKnob {22 red l "<font color=\"#8c3838\" size=6>■</font>" T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.0, 0.6, 0.55]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n" +STARTLINE}
   addUserKnob {22 orange l "<font color=\"#b28e59\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.1, 0.5, 0.7]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
   addUserKnob {22 yellow l "<font color=\"#ccc766\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.16, 0.5, 0.8]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
   addUserKnob {22 green l "<font color=\"#5d995b\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.33, 0.4, 0.6]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
   addUserKnob {22 cyan l "<font color=\"#72998f\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.46, 0.25, 0.6]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
   addUserKnob {22 blue l "<font color=\"#59687f\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.6, 0.3, 0.5]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
   addUserKnob {22 darkblue l "<font color=\"#63628c\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.67, 0.3, 0.55]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
   addUserKnob {22 magenta l "<font color=\"#927a99\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.8, 0.2, 0.6]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
   addUserKnob {22 pink l "<font color=\"#997a89\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.92, 0.2, 0.6]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
   addUserKnob {26 S02 l " " T " "}
   addUserKnob {26 Ftools l "" +STARTLINE T "<font color=\"#1C1C1C\"> v1.2 - Franklin VFX - 2018"}
  }
  BackdropNode {
   inputs 0
   name BackdropNode1
   knobChanged "try:\n    listenedKnobs = \['text', 'position', 'name']\n    node = nuke.thisNode()\n    name = node.knob('name').value()\n    text = node.knob('text').value()\n    position = node.knob('position').value()\n    position = \"<\" + position + \">\"\n    label = node.knob('label').value()\n    \n    if nuke.thisKnob().name() in listenedKnobs:\n        if text == \"\":\n            if node.knob('position').value() == \"left\":\n                node.knob('label').setValue()\n            else:\n                node.knob('label').setValue(position + name)\n        else:\n            if node.knob('position').value() == \"left\":\n                node.knob('label').setValue(text)\n            else:\n                node.knob('label').setValue(position + text)\n                \n    elif nuke.thisKnob().name() == 'font_size':\n        fontSize = node.knob('font_size').value()\n        node.knob('note_font_size').setValue(fontSize)\nexcept:\n    pass"
   tile_color 0x232323ff
   label <Left>muzzleflashes
   note_font_size 50
   xpos 7770
   ypos -1206
   bdwidth 4880
   bdheight 618
   addUserKnob {20 F_VFX l BackdropNode}
   addUserKnob {43 text l Text}
   text muzzleflashes
   addUserKnob {7 font_size l "Font Size" R 10 100}
   font_size 50
   addUserKnob {4 position l "" -STARTLINE M {Left Center}}
   addUserKnob {26 S01 l " " T " "}
   addUserKnob {22 grow l " <img src=\"F_scalep.png\">" -STARTLINE T "n=nuke.thisNode()\n\ndef grow(node=None,step=50):\n    try:\n        if not node:\n            n=nuke.selectedNode()\n        else:\n            n=node\n            n\['xpos'].setValue(n\['xpos'].getValue()-step)\n            n\['ypos'].setValue(n\['ypos'].getValue()-step)\n            n\['bdwidth'].setValue(n\['bdwidth'].getValue()+step*2)\n            n\['bdheight'].setValue(n\['bdheight'].getValue()+step*2)\n    except:\n        pass\ngrow(n,50)"}
   addUserKnob {22 shrink l " <img src=\"F_scalem.png\">" -STARTLINE T "n=nuke.thisNode()\n\ndef shrink(node=None,step=50):\n    try:\n        if not node:\n            n=nuke.selectedNode()\n        else:\n            n=node\n            n\['xpos'].setValue(n\['xpos'].getValue()+step)\n            n\['ypos'].setValue(n\['ypos'].getValue()+step)\n            n\['bdwidth'].setValue(n\['bdwidth'].getValue()-step*2)\n            n\['bdheight'].setValue(n\['bdheight'].getValue()-step*2)\n    except:\n        pass\nshrink(n,50)"}
   addUserKnob {22 colorandom l " <img src=\"ColorBars.png\">" -STARTLINE T "import colorsys, random\nn=nuke.thisNode()\nR,G,B= colorsys.hsv_to_rgb(random.random(),.1+random.random()*.15,.15+random.random()*.15)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ) )"}
   addUserKnob {22 darkgrey l "<font color=\"#232323\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.0, 0.0, 0.14]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
   addUserKnob {22 lightgrey l "<font color=\"#383838\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.0, 0.0, 0.22]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
   addUserKnob {22 red l "<font color=\"#8c3838\" size=6>■</font>" T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.0, 0.6, 0.55]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n" +STARTLINE}
   addUserKnob {22 orange l "<font color=\"#b28e59\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.1, 0.5, 0.7]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
   addUserKnob {22 yellow l "<font color=\"#ccc766\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.16, 0.5, 0.8]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
   addUserKnob {22 green l "<font color=\"#5d995b\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.33, 0.4, 0.6]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
   addUserKnob {22 cyan l "<font color=\"#72998f\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.46, 0.25, 0.6]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
   addUserKnob {22 blue l "<font color=\"#59687f\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.6, 0.3, 0.5]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
   addUserKnob {22 darkblue l "<font color=\"#63628c\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.67, 0.3, 0.55]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
   addUserKnob {22 magenta l "<font color=\"#927a99\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.8, 0.2, 0.6]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
   addUserKnob {22 pink l "<font color=\"#997a89\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.92, 0.2, 0.6]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
   addUserKnob {26 S02 l " " T " "}
   addUserKnob {26 Ftools l "" +STARTLINE T "<font color=\"#1C1C1C\"> v1.2 - Franklin VFX - 2018"}
  }
  BackdropNode {
   inputs 0
   name BackdropNode13
   knobChanged "try:\n    listenedKnobs = \['text', 'position', 'name']\n    node = nuke.thisNode()\n    name = node.knob('name').value()\n    text = node.knob('text').value()\n    position = node.knob('position').value()\n    position = \"<\" + position + \">\"\n    label = node.knob('label').value()\n    \n    if nuke.thisKnob().name() in listenedKnobs:\n        if text == \"\":\n            if node.knob('position').value() == \"left\":\n                node.knob('label').setValue()\n            else:\n                node.knob('label').setValue(position + name)\n        else:\n            if node.knob('position').value() == \"left\":\n                node.knob('label').setValue(text)\n            else:\n                node.knob('label').setValue(position + text)\n                \n    elif nuke.thisKnob().name() == 'font_size':\n        fontSize = node.knob('font_size').value()\n        node.knob('note_font_size').setValue(fontSize)\nexcept:\n    pass"
   tile_color 0x232323ff
   label "<Left>\[1] colt45"
   note_font_size 50
   xpos 7761
   ypos -2961
   bdwidth 297
   bdheight 396
   addUserKnob {20 F_VFX l BackdropNode}
   addUserKnob {43 text l Text}
   text "\[1] colt45"
   addUserKnob {7 font_size l "Font Size" R 10 100}
   font_size 50
   addUserKnob {4 position l "" -STARTLINE M {Left Center}}
   addUserKnob {26 S01 l " " T " "}
   addUserKnob {22 grow l " <img src=\"F_scalep.png\">" -STARTLINE T "n=nuke.thisNode()\n\ndef grow(node=None,step=50):\n    try:\n        if not node:\n            n=nuke.selectedNode()\n        else:\n            n=node\n            n\['xpos'].setValue(n\['xpos'].getValue()-step)\n            n\['ypos'].setValue(n\['ypos'].getValue()-step)\n            n\['bdwidth'].setValue(n\['bdwidth'].getValue()+step*2)\n            n\['bdheight'].setValue(n\['bdheight'].getValue()+step*2)\n    except:\n        pass\ngrow(n,50)"}
   addUserKnob {22 shrink l " <img src=\"F_scalem.png\">" -STARTLINE T "n=nuke.thisNode()\n\ndef shrink(node=None,step=50):\n    try:\n        if not node:\n            n=nuke.selectedNode()\n        else:\n            n=node\n            n\['xpos'].setValue(n\['xpos'].getValue()+step)\n            n\['ypos'].setValue(n\['ypos'].getValue()+step)\n            n\['bdwidth'].setValue(n\['bdwidth'].getValue()-step*2)\n            n\['bdheight'].setValue(n\['bdheight'].getValue()-step*2)\n    except:\n        pass\nshrink(n,50)"}
   addUserKnob {22 colorandom l " <img src=\"ColorBars.png\">" -STARTLINE T "import colorsys, random\nn=nuke.thisNode()\nR,G,B= colorsys.hsv_to_rgb(random.random(),.1+random.random()*.15,.15+random.random()*.15)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ) )"}
   addUserKnob {22 darkgrey l "<font color=\"#232323\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.0, 0.0, 0.14]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
   addUserKnob {22 lightgrey l "<font color=\"#383838\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.0, 0.0, 0.22]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
   addUserKnob {22 red l "<font color=\"#8c3838\" size=6>■</font>" T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.0, 0.6, 0.55]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n" +STARTLINE}
   addUserKnob {22 orange l "<font color=\"#b28e59\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.1, 0.5, 0.7]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
   addUserKnob {22 yellow l "<font color=\"#ccc766\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.16, 0.5, 0.8]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
   addUserKnob {22 green l "<font color=\"#5d995b\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.33, 0.4, 0.6]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
   addUserKnob {22 cyan l "<font color=\"#72998f\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.46, 0.25, 0.6]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
   addUserKnob {22 blue l "<font color=\"#59687f\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.6, 0.3, 0.5]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
   addUserKnob {22 darkblue l "<font color=\"#63628c\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.67, 0.3, 0.55]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
   addUserKnob {22 magenta l "<font color=\"#927a99\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.8, 0.2, 0.6]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
   addUserKnob {22 pink l "<font color=\"#997a89\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.92, 0.2, 0.6]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
   addUserKnob {26 S02 l " " T " "}
   addUserKnob {26 Ftools l "" +STARTLINE T "<font color=\"#1C1C1C\"> v1.2 - Franklin VFX - 2018"}
  }
  BackdropNode {
   inputs 0
   name BackdropNode16
   knobChanged "try:\n    listenedKnobs = \['text', 'position', 'name']\n    node = nuke.thisNode()\n    name = node.knob('name').value()\n    text = node.knob('text').value()\n    position = node.knob('position').value()\n    position = \"<\" + position + \">\"\n    label = node.knob('label').value()\n    \n    if nuke.thisKnob().name() in listenedKnobs:\n        if text == \"\":\n            if node.knob('position').value() == \"left\":\n                node.knob('label').setValue()\n            else:\n                node.knob('label').setValue(position + name)\n        else:\n            if node.knob('position').value() == \"left\":\n                node.knob('label').setValue(text)\n            else:\n                node.knob('label').setValue(position + text)\n                \n    elif nuke.thisKnob().name() == 'font_size':\n        fontSize = node.knob('font_size').value()\n        node.knob('note_font_size').setValue(fontSize)\nexcept:\n    pass"
   tile_color 0x232323ff
   label "<Left>\[3] AR-15"
   note_font_size 50
   xpos 8497
   ypos -2953
   bdwidth 297
   bdheight 396
   addUserKnob {20 F_VFX l BackdropNode}
   addUserKnob {43 text l Text}
   text "\[3] AR-15"
   addUserKnob {7 font_size l "Font Size" R 10 100}
   font_size 50
   addUserKnob {4 position l "" -STARTLINE M {Left Center}}
   addUserKnob {26 S01 l " " T " "}
   addUserKnob {22 grow l " <img src=\"F_scalep.png\">" -STARTLINE T "n=nuke.thisNode()\n\ndef grow(node=None,step=50):\n    try:\n        if not node:\n            n=nuke.selectedNode()\n        else:\n            n=node\n            n\['xpos'].setValue(n\['xpos'].getValue()-step)\n            n\['ypos'].setValue(n\['ypos'].getValue()-step)\n            n\['bdwidth'].setValue(n\['bdwidth'].getValue()+step*2)\n            n\['bdheight'].setValue(n\['bdheight'].getValue()+step*2)\n    except:\n        pass\ngrow(n,50)"}
   addUserKnob {22 shrink l " <img src=\"F_scalem.png\">" -STARTLINE T "n=nuke.thisNode()\n\ndef shrink(node=None,step=50):\n    try:\n        if not node:\n            n=nuke.selectedNode()\n        else:\n            n=node\n            n\['xpos'].setValue(n\['xpos'].getValue()+step)\n            n\['ypos'].setValue(n\['ypos'].getValue()+step)\n            n\['bdwidth'].setValue(n\['bdwidth'].getValue()-step*2)\n            n\['bdheight'].setValue(n\['bdheight'].getValue()-step*2)\n    except:\n        pass\nshrink(n,50)"}
   addUserKnob {22 colorandom l " <img src=\"ColorBars.png\">" -STARTLINE T "import colorsys, random\nn=nuke.thisNode()\nR,G,B= colorsys.hsv_to_rgb(random.random(),.1+random.random()*.15,.15+random.random()*.15)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ) )"}
   addUserKnob {22 darkgrey l "<font color=\"#232323\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.0, 0.0, 0.14]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
   addUserKnob {22 lightgrey l "<font color=\"#383838\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.0, 0.0, 0.22]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
   addUserKnob {22 red l "<font color=\"#8c3838\" size=6>■</font>" T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.0, 0.6, 0.55]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n" +STARTLINE}
   addUserKnob {22 orange l "<font color=\"#b28e59\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.1, 0.5, 0.7]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
   addUserKnob {22 yellow l "<font color=\"#ccc766\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.16, 0.5, 0.8]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
   addUserKnob {22 green l "<font color=\"#5d995b\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.33, 0.4, 0.6]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
   addUserKnob {22 cyan l "<font color=\"#72998f\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.46, 0.25, 0.6]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
   addUserKnob {22 blue l "<font color=\"#59687f\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.6, 0.3, 0.5]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
   addUserKnob {22 darkblue l "<font color=\"#63628c\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.67, 0.3, 0.55]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
   addUserKnob {22 magenta l "<font color=\"#927a99\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.8, 0.2, 0.6]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
   addUserKnob {22 pink l "<font color=\"#997a89\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.92, 0.2, 0.6]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
   addUserKnob {26 S02 l " " T " "}
   addUserKnob {26 Ftools l "" +STARTLINE T "<font color=\"#1C1C1C\"> v1.2 - Franklin VFX - 2018"}
  }
  BackdropNode {
   inputs 0
   name BackdropNode17
   knobChanged "try:\n    listenedKnobs = \['text', 'position', 'name']\n    node = nuke.thisNode()\n    name = node.knob('name').value()\n    text = node.knob('text').value()\n    position = node.knob('position').value()\n    position = \"<\" + position + \">\"\n    label = node.knob('label').value()\n    \n    if nuke.thisKnob().name() in listenedKnobs:\n        if text == \"\":\n            if node.knob('position').value() == \"left\":\n                node.knob('label').setValue()\n            else:\n                node.knob('label').setValue(position + name)\n        else:\n            if node.knob('position').value() == \"left\":\n                node.knob('label').setValue(text)\n            else:\n                node.knob('label').setValue(position + text)\n                \n    elif nuke.thisKnob().name() == 'font_size':\n        fontSize = node.knob('font_size').value()\n        node.knob('note_font_size').setValue(fontSize)\nexcept:\n    pass"
   tile_color 0x232323ff
   label "<Left>\[2] AK"
   note_font_size 50
   xpos 8121
   ypos -2960
   bdwidth 297
   bdheight 396
   addUserKnob {20 F_VFX l BackdropNode}
   addUserKnob {43 text l Text}
   text "\[2] AK"
   addUserKnob {7 font_size l "Font Size" R 10 100}
   font_size 50
   addUserKnob {4 position l "" -STARTLINE M {Left Center}}
   addUserKnob {26 S01 l " " T " "}
   addUserKnob {22 grow l " <img src=\"F_scalep.png\">" -STARTLINE T "n=nuke.thisNode()\n\ndef grow(node=None,step=50):\n    try:\n        if not node:\n            n=nuke.selectedNode()\n        else:\n            n=node\n            n\['xpos'].setValue(n\['xpos'].getValue()-step)\n            n\['ypos'].setValue(n\['ypos'].getValue()-step)\n            n\['bdwidth'].setValue(n\['bdwidth'].getValue()+step*2)\n            n\['bdheight'].setValue(n\['bdheight'].getValue()+step*2)\n    except:\n        pass\ngrow(n,50)"}
   addUserKnob {22 shrink l " <img src=\"F_scalem.png\">" -STARTLINE T "n=nuke.thisNode()\n\ndef shrink(node=None,step=50):\n    try:\n        if not node:\n            n=nuke.selectedNode()\n        else:\n            n=node\n            n\['xpos'].setValue(n\['xpos'].getValue()+step)\n            n\['ypos'].setValue(n\['ypos'].getValue()+step)\n            n\['bdwidth'].setValue(n\['bdwidth'].getValue()-step*2)\n            n\['bdheight'].setValue(n\['bdheight'].getValue()-step*2)\n    except:\n        pass\nshrink(n,50)"}
   addUserKnob {22 colorandom l " <img src=\"ColorBars.png\">" -STARTLINE T "import colorsys, random\nn=nuke.thisNode()\nR,G,B= colorsys.hsv_to_rgb(random.random(),.1+random.random()*.15,.15+random.random()*.15)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ) )"}
   addUserKnob {22 darkgrey l "<font color=\"#232323\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.0, 0.0, 0.14]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
   addUserKnob {22 lightgrey l "<font color=\"#383838\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.0, 0.0, 0.22]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
   addUserKnob {22 red l "<font color=\"#8c3838\" size=6>■</font>" T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.0, 0.6, 0.55]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n" +STARTLINE}
   addUserKnob {22 orange l "<font color=\"#b28e59\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.1, 0.5, 0.7]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
   addUserKnob {22 yellow l "<font color=\"#ccc766\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.16, 0.5, 0.8]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
   addUserKnob {22 green l "<font color=\"#5d995b\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.33, 0.4, 0.6]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
   addUserKnob {22 cyan l "<font color=\"#72998f\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.46, 0.25, 0.6]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
   addUserKnob {22 blue l "<font color=\"#59687f\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.6, 0.3, 0.5]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
   addUserKnob {22 darkblue l "<font color=\"#63628c\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.67, 0.3, 0.55]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
   addUserKnob {22 magenta l "<font color=\"#927a99\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.8, 0.2, 0.6]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
   addUserKnob {22 pink l "<font color=\"#997a89\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.92, 0.2, 0.6]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
   addUserKnob {26 S02 l " " T " "}
   addUserKnob {26 Ftools l "" +STARTLINE T "<font color=\"#1C1C1C\"> v1.2 - Franklin VFX - 2018"}
  }
  BackdropNode {
   inputs 0
   name BackdropNode18
   knobChanged "try:\n    listenedKnobs = \['text', 'position', 'name']\n    node = nuke.thisNode()\n    name = node.knob('name').value()\n    text = node.knob('text').value()\n    position = node.knob('position').value()\n    position = \"<\" + position + \">\"\n    label = node.knob('label').value()\n    \n    if nuke.thisKnob().name() in listenedKnobs:\n        if text == \"\":\n            if node.knob('position').value() == \"left\":\n                node.knob('label').setValue()\n            else:\n                node.knob('label').setValue(position + name)\n        else:\n            if node.knob('position').value() == \"left\":\n                node.knob('label').setValue(text)\n            else:\n                node.knob('label').setValue(position + text)\n                \n    elif nuke.thisKnob().name() == 'font_size':\n        fontSize = node.knob('font_size').value()\n        node.knob('note_font_size').setValue(fontSize)\nexcept:\n    pass"
   tile_color 0x232323ff
   label "<Left>\[4] G2"
   note_font_size 50
   xpos 8873
   ypos -2960
   bdwidth 297
   bdheight 396
   addUserKnob {20 F_VFX l BackdropNode}
   addUserKnob {43 text l Text}
   text "\[4] G2"
   addUserKnob {7 font_size l "Font Size" R 10 100}
   font_size 50
   addUserKnob {4 position l "" -STARTLINE M {Left Center}}
   addUserKnob {26 S01 l " " T " "}
   addUserKnob {22 grow l " <img src=\"F_scalep.png\">" -STARTLINE T "n=nuke.thisNode()\n\ndef grow(node=None,step=50):\n    try:\n        if not node:\n            n=nuke.selectedNode()\n        else:\n            n=node\n            n\['xpos'].setValue(n\['xpos'].getValue()-step)\n            n\['ypos'].setValue(n\['ypos'].getValue()-step)\n            n\['bdwidth'].setValue(n\['bdwidth'].getValue()+step*2)\n            n\['bdheight'].setValue(n\['bdheight'].getValue()+step*2)\n    except:\n        pass\ngrow(n,50)"}
   addUserKnob {22 shrink l " <img src=\"F_scalem.png\">" -STARTLINE T "n=nuke.thisNode()\n\ndef shrink(node=None,step=50):\n    try:\n        if not node:\n            n=nuke.selectedNode()\n        else:\n            n=node\n            n\['xpos'].setValue(n\['xpos'].getValue()+step)\n            n\['ypos'].setValue(n\['ypos'].getValue()+step)\n            n\['bdwidth'].setValue(n\['bdwidth'].getValue()-step*2)\n            n\['bdheight'].setValue(n\['bdheight'].getValue()-step*2)\n    except:\n        pass\nshrink(n,50)"}
   addUserKnob {22 colorandom l " <img src=\"ColorBars.png\">" -STARTLINE T "import colorsys, random\nn=nuke.thisNode()\nR,G,B= colorsys.hsv_to_rgb(random.random(),.1+random.random()*.15,.15+random.random()*.15)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ) )"}
   addUserKnob {22 darkgrey l "<font color=\"#232323\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.0, 0.0, 0.14]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
   addUserKnob {22 lightgrey l "<font color=\"#383838\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.0, 0.0, 0.22]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
   addUserKnob {22 red l "<font color=\"#8c3838\" size=6>■</font>" T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.0, 0.6, 0.55]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n" +STARTLINE}
   addUserKnob {22 orange l "<font color=\"#b28e59\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.1, 0.5, 0.7]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
   addUserKnob {22 yellow l "<font color=\"#ccc766\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.16, 0.5, 0.8]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
   addUserKnob {22 green l "<font color=\"#5d995b\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.33, 0.4, 0.6]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
   addUserKnob {22 cyan l "<font color=\"#72998f\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.46, 0.25, 0.6]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
   addUserKnob {22 blue l "<font color=\"#59687f\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.6, 0.3, 0.5]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
   addUserKnob {22 darkblue l "<font color=\"#63628c\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.67, 0.3, 0.55]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
   addUserKnob {22 magenta l "<font color=\"#927a99\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.8, 0.2, 0.6]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
   addUserKnob {22 pink l "<font color=\"#997a89\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.92, 0.2, 0.6]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
   addUserKnob {26 S02 l " " T " "}
   addUserKnob {26 Ftools l "" +STARTLINE T "<font color=\"#1C1C1C\"> v1.2 - Franklin VFX - 2018"}
  }
  BackdropNode {
   inputs 0
   name BackdropNode19
   knobChanged "try:\n    listenedKnobs = \['text', 'position', 'name']\n    node = nuke.thisNode()\n    name = node.knob('name').value()\n    text = node.knob('text').value()\n    position = node.knob('position').value()\n    position = \"<\" + position + \">\"\n    label = node.knob('label').value()\n    \n    if nuke.thisKnob().name() in listenedKnobs:\n        if text == \"\":\n            if node.knob('position').value() == \"left\":\n                node.knob('label').setValue()\n            else:\n                node.knob('label').setValue(position + name)\n        else:\n            if node.knob('position').value() == \"left\":\n                node.knob('label').setValue(text)\n            else:\n                node.knob('label').setValue(position + text)\n                \n    elif nuke.thisKnob().name() == 'font_size':\n        fontSize = node.knob('font_size').value()\n        node.knob('note_font_size').setValue(fontSize)\nexcept:\n    pass"
   tile_color 0x232323ff
   label "<Left>\[6] M249"
   note_font_size 50
   xpos 9592
   ypos -2968
   bdwidth 308
   bdheight 401
   addUserKnob {20 F_VFX l BackdropNode}
   addUserKnob {43 text l Text}
   text "\[6] M249"
   addUserKnob {7 font_size l "Font Size" R 10 100}
   font_size 50
   addUserKnob {4 position l "" -STARTLINE M {Left Center}}
   addUserKnob {26 S01 l " " T " "}
   addUserKnob {22 grow l " <img src=\"F_scalep.png\">" -STARTLINE T "n=nuke.thisNode()\n\ndef grow(node=None,step=50):\n    try:\n        if not node:\n            n=nuke.selectedNode()\n        else:\n            n=node\n            n\['xpos'].setValue(n\['xpos'].getValue()-step)\n            n\['ypos'].setValue(n\['ypos'].getValue()-step)\n            n\['bdwidth'].setValue(n\['bdwidth'].getValue()+step*2)\n            n\['bdheight'].setValue(n\['bdheight'].getValue()+step*2)\n    except:\n        pass\ngrow(n,50)"}
   addUserKnob {22 shrink l " <img src=\"F_scalem.png\">" -STARTLINE T "n=nuke.thisNode()\n\ndef shrink(node=None,step=50):\n    try:\n        if not node:\n            n=nuke.selectedNode()\n        else:\n            n=node\n            n\['xpos'].setValue(n\['xpos'].getValue()+step)\n            n\['ypos'].setValue(n\['ypos'].getValue()+step)\n            n\['bdwidth'].setValue(n\['bdwidth'].getValue()-step*2)\n            n\['bdheight'].setValue(n\['bdheight'].getValue()-step*2)\n    except:\n        pass\nshrink(n,50)"}
   addUserKnob {22 colorandom l " <img src=\"ColorBars.png\">" -STARTLINE T "import colorsys, random\nn=nuke.thisNode()\nR,G,B= colorsys.hsv_to_rgb(random.random(),.1+random.random()*.15,.15+random.random()*.15)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ) )"}
   addUserKnob {22 darkgrey l "<font color=\"#232323\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.0, 0.0, 0.14]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
   addUserKnob {22 lightgrey l "<font color=\"#383838\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.0, 0.0, 0.22]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
   addUserKnob {22 red l "<font color=\"#8c3838\" size=6>■</font>" T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.0, 0.6, 0.55]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n" +STARTLINE}
   addUserKnob {22 orange l "<font color=\"#b28e59\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.1, 0.5, 0.7]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
   addUserKnob {22 yellow l "<font color=\"#ccc766\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.16, 0.5, 0.8]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
   addUserKnob {22 green l "<font color=\"#5d995b\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.33, 0.4, 0.6]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
   addUserKnob {22 cyan l "<font color=\"#72998f\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.46, 0.25, 0.6]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
   addUserKnob {22 blue l "<font color=\"#59687f\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.6, 0.3, 0.5]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
   addUserKnob {22 darkblue l "<font color=\"#63628c\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.67, 0.3, 0.55]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
   addUserKnob {22 magenta l "<font color=\"#927a99\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.8, 0.2, 0.6]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
   addUserKnob {22 pink l "<font color=\"#997a89\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.92, 0.2, 0.6]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
   addUserKnob {26 S02 l " " T " "}
   addUserKnob {26 Ftools l "" +STARTLINE T "<font color=\"#1C1C1C\"> v1.2 - Franklin VFX - 2018"}
  }
  BackdropNode {
   inputs 0
   name BackdropNode20
   knobChanged "try:\n    listenedKnobs = \['text', 'position', 'name']\n    node = nuke.thisNode()\n    name = node.knob('name').value()\n    text = node.knob('text').value()\n    position = node.knob('position').value()\n    position = \"<\" + position + \">\"\n    label = node.knob('label').value()\n    \n    if nuke.thisKnob().name() in listenedKnobs:\n        if text == \"\":\n            if node.knob('position').value() == \"left\":\n                node.knob('label').setValue()\n            else:\n                node.knob('label').setValue(position + name)\n        else:\n            if node.knob('position').value() == \"left\":\n                node.knob('label').setValue(text)\n            else:\n                node.knob('label').setValue(position + text)\n                \n    elif nuke.thisKnob().name() == 'font_size':\n        fontSize = node.knob('font_size').value()\n        node.knob('note_font_size').setValue(fontSize)\nexcept:\n    pass"
   tile_color 0x232323ff
   label "<Left>\[7] mp5"
   note_font_size 50
   xpos 9970
   ypos -2968
   bdwidth 297
   bdheight 396
   addUserKnob {20 F_VFX l BackdropNode}
   addUserKnob {43 text l Text}
   text "\[7] mp5"
   addUserKnob {7 font_size l "Font Size" R 10 100}
   font_size 50
   addUserKnob {4 position l "" -STARTLINE M {Left Center}}
   addUserKnob {26 S01 l " " T " "}
   addUserKnob {22 grow l " <img src=\"F_scalep.png\">" -STARTLINE T "n=nuke.thisNode()\n\ndef grow(node=None,step=50):\n    try:\n        if not node:\n            n=nuke.selectedNode()\n        else:\n            n=node\n            n\['xpos'].setValue(n\['xpos'].getValue()-step)\n            n\['ypos'].setValue(n\['ypos'].getValue()-step)\n            n\['bdwidth'].setValue(n\['bdwidth'].getValue()+step*2)\n            n\['bdheight'].setValue(n\['bdheight'].getValue()+step*2)\n    except:\n        pass\ngrow(n,50)"}
   addUserKnob {22 shrink l " <img src=\"F_scalem.png\">" -STARTLINE T "n=nuke.thisNode()\n\ndef shrink(node=None,step=50):\n    try:\n        if not node:\n            n=nuke.selectedNode()\n        else:\n            n=node\n            n\['xpos'].setValue(n\['xpos'].getValue()+step)\n            n\['ypos'].setValue(n\['ypos'].getValue()+step)\n            n\['bdwidth'].setValue(n\['bdwidth'].getValue()-step*2)\n            n\['bdheight'].setValue(n\['bdheight'].getValue()-step*2)\n    except:\n        pass\nshrink(n,50)"}
   addUserKnob {22 colorandom l " <img src=\"ColorBars.png\">" -STARTLINE T "import colorsys, random\nn=nuke.thisNode()\nR,G,B= colorsys.hsv_to_rgb(random.random(),.1+random.random()*.15,.15+random.random()*.15)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ) )"}
   addUserKnob {22 darkgrey l "<font color=\"#232323\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.0, 0.0, 0.14]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
   addUserKnob {22 lightgrey l "<font color=\"#383838\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.0, 0.0, 0.22]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
   addUserKnob {22 red l "<font color=\"#8c3838\" size=6>■</font>" T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.0, 0.6, 0.55]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n" +STARTLINE}
   addUserKnob {22 orange l "<font color=\"#b28e59\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.1, 0.5, 0.7]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
   addUserKnob {22 yellow l "<font color=\"#ccc766\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.16, 0.5, 0.8]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
   addUserKnob {22 green l "<font color=\"#5d995b\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.33, 0.4, 0.6]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
   addUserKnob {22 cyan l "<font color=\"#72998f\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.46, 0.25, 0.6]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
   addUserKnob {22 blue l "<font color=\"#59687f\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.6, 0.3, 0.5]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
   addUserKnob {22 darkblue l "<font color=\"#63628c\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.67, 0.3, 0.55]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
   addUserKnob {22 magenta l "<font color=\"#927a99\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.8, 0.2, 0.6]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
   addUserKnob {22 pink l "<font color=\"#997a89\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.92, 0.2, 0.6]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
   addUserKnob {26 S02 l " " T " "}
   addUserKnob {26 Ftools l "" +STARTLINE T "<font color=\"#1C1C1C\"> v1.2 - Franklin VFX - 2018"}
  }
  BackdropNode {
   inputs 0
   name BackdropNode4
   knobChanged "try:\n    listenedKnobs = \['text', 'position', 'name']\n    node = nuke.thisNode()\n    name = node.knob('name').value()\n    text = node.knob('text').value()\n    position = node.knob('position').value()\n    position = \"<\" + position + \">\"\n    label = node.knob('label').value()\n    \n    if nuke.thisKnob().name() in listenedKnobs:\n        if text == \"\":\n            if node.knob('position').value() == \"left\":\n                node.knob('label').setValue()\n            else:\n                node.knob('label').setValue(position + name)\n        else:\n            if node.knob('position').value() == \"left\":\n                node.knob('label').setValue(text)\n            else:\n                node.knob('label').setValue(position + text)\n                \n    elif nuke.thisKnob().name() == 'font_size':\n        fontSize = node.knob('font_size').value()\n        node.knob('note_font_size').setValue(fontSize)\nexcept:\n    pass"
   tile_color 0x232323ff
   label "<Left>\[1] colt45"
   note_font_size 50
   xpos 6181
   ypos -2964
   bdwidth 297
   bdheight 396
   addUserKnob {20 F_VFX l BackdropNode}
   addUserKnob {43 text l Text}
   text "\[1] colt45"
   addUserKnob {7 font_size l "Font Size" R 10 100}
   font_size 50
   addUserKnob {4 position l "" -STARTLINE M {Left Center}}
   addUserKnob {26 S01 l " " T " "}
   addUserKnob {22 grow l " <img src=\"F_scalep.png\">" -STARTLINE T "n=nuke.thisNode()\n\ndef grow(node=None,step=50):\n    try:\n        if not node:\n            n=nuke.selectedNode()\n        else:\n            n=node\n            n\['xpos'].setValue(n\['xpos'].getValue()-step)\n            n\['ypos'].setValue(n\['ypos'].getValue()-step)\n            n\['bdwidth'].setValue(n\['bdwidth'].getValue()+step*2)\n            n\['bdheight'].setValue(n\['bdheight'].getValue()+step*2)\n    except:\n        pass\ngrow(n,50)"}
   addUserKnob {22 shrink l " <img src=\"F_scalem.png\">" -STARTLINE T "n=nuke.thisNode()\n\ndef shrink(node=None,step=50):\n    try:\n        if not node:\n            n=nuke.selectedNode()\n        else:\n            n=node\n            n\['xpos'].setValue(n\['xpos'].getValue()+step)\n            n\['ypos'].setValue(n\['ypos'].getValue()+step)\n            n\['bdwidth'].setValue(n\['bdwidth'].getValue()-step*2)\n            n\['bdheight'].setValue(n\['bdheight'].getValue()-step*2)\n    except:\n        pass\nshrink(n,50)"}
   addUserKnob {22 colorandom l " <img src=\"ColorBars.png\">" -STARTLINE T "import colorsys, random\nn=nuke.thisNode()\nR,G,B= colorsys.hsv_to_rgb(random.random(),.1+random.random()*.15,.15+random.random()*.15)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ) )"}
   addUserKnob {22 darkgrey l "<font color=\"#232323\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.0, 0.0, 0.14]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
   addUserKnob {22 lightgrey l "<font color=\"#383838\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.0, 0.0, 0.22]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
   addUserKnob {22 red l "<font color=\"#8c3838\" size=6>■</font>" T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.0, 0.6, 0.55]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n" +STARTLINE}
   addUserKnob {22 orange l "<font color=\"#b28e59\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.1, 0.5, 0.7]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
   addUserKnob {22 yellow l "<font color=\"#ccc766\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.16, 0.5, 0.8]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
   addUserKnob {22 green l "<font color=\"#5d995b\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.33, 0.4, 0.6]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
   addUserKnob {22 cyan l "<font color=\"#72998f\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.46, 0.25, 0.6]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
   addUserKnob {22 blue l "<font color=\"#59687f\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.6, 0.3, 0.5]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
   addUserKnob {22 darkblue l "<font color=\"#63628c\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.67, 0.3, 0.55]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
   addUserKnob {22 magenta l "<font color=\"#927a99\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.8, 0.2, 0.6]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
   addUserKnob {22 pink l "<font color=\"#997a89\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.92, 0.2, 0.6]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
   addUserKnob {26 S02 l " " T " "}
   addUserKnob {26 Ftools l "" +STARTLINE T "<font color=\"#1C1C1C\"> v1.2 - Franklin VFX - 2018"}
  }
  BackdropNode {
   inputs 0
   name BackdropNode5
   knobChanged "try:\n    listenedKnobs = \['text', 'position', 'name']\n    node = nuke.thisNode()\n    name = node.knob('name').value()\n    text = node.knob('text').value()\n    position = node.knob('position').value()\n    position = \"<\" + position + \">\"\n    label = node.knob('label').value()\n    \n    if nuke.thisKnob().name() in listenedKnobs:\n        if text == \"\":\n            if node.knob('position').value() == \"left\":\n                node.knob('label').setValue()\n            else:\n                node.knob('label').setValue(position + name)\n        else:\n            if node.knob('position').value() == \"left\":\n                node.knob('label').setValue(text)\n            else:\n                node.knob('label').setValue(position + text)\n                \n    elif nuke.thisKnob().name() == 'font_size':\n        fontSize = node.knob('font_size').value()\n        node.knob('note_font_size').setValue(fontSize)\nexcept:\n    pass"
   tile_color 0x232323ff
   label "<Left>\[3] AR-15"
   note_font_size 50
   xpos 5449
   ypos -2965
   bdwidth 297
   bdheight 396
   addUserKnob {20 F_VFX l BackdropNode}
   addUserKnob {43 text l Text}
   text "\[3] AR-15"
   addUserKnob {7 font_size l "Font Size" R 10 100}
   font_size 50
   addUserKnob {4 position l "" -STARTLINE M {Left Center}}
   addUserKnob {26 S01 l " " T " "}
   addUserKnob {22 grow l " <img src=\"F_scalep.png\">" -STARTLINE T "n=nuke.thisNode()\n\ndef grow(node=None,step=50):\n    try:\n        if not node:\n            n=nuke.selectedNode()\n        else:\n            n=node\n            n\['xpos'].setValue(n\['xpos'].getValue()-step)\n            n\['ypos'].setValue(n\['ypos'].getValue()-step)\n            n\['bdwidth'].setValue(n\['bdwidth'].getValue()+step*2)\n            n\['bdheight'].setValue(n\['bdheight'].getValue()+step*2)\n    except:\n        pass\ngrow(n,50)"}
   addUserKnob {22 shrink l " <img src=\"F_scalem.png\">" -STARTLINE T "n=nuke.thisNode()\n\ndef shrink(node=None,step=50):\n    try:\n        if not node:\n            n=nuke.selectedNode()\n        else:\n            n=node\n            n\['xpos'].setValue(n\['xpos'].getValue()+step)\n            n\['ypos'].setValue(n\['ypos'].getValue()+step)\n            n\['bdwidth'].setValue(n\['bdwidth'].getValue()-step*2)\n            n\['bdheight'].setValue(n\['bdheight'].getValue()-step*2)\n    except:\n        pass\nshrink(n,50)"}
   addUserKnob {22 colorandom l " <img src=\"ColorBars.png\">" -STARTLINE T "import colorsys, random\nn=nuke.thisNode()\nR,G,B= colorsys.hsv_to_rgb(random.random(),.1+random.random()*.15,.15+random.random()*.15)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ) )"}
   addUserKnob {22 darkgrey l "<font color=\"#232323\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.0, 0.0, 0.14]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
   addUserKnob {22 lightgrey l "<font color=\"#383838\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.0, 0.0, 0.22]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
   addUserKnob {22 red l "<font color=\"#8c3838\" size=6>■</font>" T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.0, 0.6, 0.55]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n" +STARTLINE}
   addUserKnob {22 orange l "<font color=\"#b28e59\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.1, 0.5, 0.7]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
   addUserKnob {22 yellow l "<font color=\"#ccc766\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.16, 0.5, 0.8]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
   addUserKnob {22 green l "<font color=\"#5d995b\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.33, 0.4, 0.6]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
   addUserKnob {22 cyan l "<font color=\"#72998f\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.46, 0.25, 0.6]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
   addUserKnob {22 blue l "<font color=\"#59687f\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.6, 0.3, 0.5]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
   addUserKnob {22 darkblue l "<font color=\"#63628c\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.67, 0.3, 0.55]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
   addUserKnob {22 magenta l "<font color=\"#927a99\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.8, 0.2, 0.6]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
   addUserKnob {22 pink l "<font color=\"#997a89\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.92, 0.2, 0.6]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
   addUserKnob {26 S02 l " " T " "}
   addUserKnob {26 Ftools l "" +STARTLINE T "<font color=\"#1C1C1C\"> v1.2 - Franklin VFX - 2018"}
  }
  BackdropNode {
   inputs 0
   name BackdropNode6
   knobChanged "try:\n    listenedKnobs = \['text', 'position', 'name']\n    node = nuke.thisNode()\n    name = node.knob('name').value()\n    text = node.knob('text').value()\n    position = node.knob('position').value()\n    position = \"<\" + position + \">\"\n    label = node.knob('label').value()\n    \n    if nuke.thisKnob().name() in listenedKnobs:\n        if text == \"\":\n            if node.knob('position').value() == \"left\":\n                node.knob('label').setValue()\n            else:\n                node.knob('label').setValue(position + name)\n        else:\n            if node.knob('position').value() == \"left\":\n                node.knob('label').setValue(text)\n            else:\n                node.knob('label').setValue(position + text)\n                \n    elif nuke.thisKnob().name() == 'font_size':\n        fontSize = node.knob('font_size').value()\n        node.knob('note_font_size').setValue(fontSize)\nexcept:\n    pass"
   tile_color 0x232323ff
   label "<Left>\[2] AK"
   note_font_size 50
   xpos 5804
   ypos -2967
   bdwidth 297
   bdheight 396
   addUserKnob {20 F_VFX l BackdropNode}
   addUserKnob {43 text l Text}
   text "\[2] AK"
   addUserKnob {7 font_size l "Font Size" R 10 100}
   font_size 50
   addUserKnob {4 position l "" -STARTLINE M {Left Center}}
   addUserKnob {26 S01 l " " T " "}
   addUserKnob {22 grow l " <img src=\"F_scalep.png\">" -STARTLINE T "n=nuke.thisNode()\n\ndef grow(node=None,step=50):\n    try:\n        if not node:\n            n=nuke.selectedNode()\n        else:\n            n=node\n            n\['xpos'].setValue(n\['xpos'].getValue()-step)\n            n\['ypos'].setValue(n\['ypos'].getValue()-step)\n            n\['bdwidth'].setValue(n\['bdwidth'].getValue()+step*2)\n            n\['bdheight'].setValue(n\['bdheight'].getValue()+step*2)\n    except:\n        pass\ngrow(n,50)"}
   addUserKnob {22 shrink l " <img src=\"F_scalem.png\">" -STARTLINE T "n=nuke.thisNode()\n\ndef shrink(node=None,step=50):\n    try:\n        if not node:\n            n=nuke.selectedNode()\n        else:\n            n=node\n            n\['xpos'].setValue(n\['xpos'].getValue()+step)\n            n\['ypos'].setValue(n\['ypos'].getValue()+step)\n            n\['bdwidth'].setValue(n\['bdwidth'].getValue()-step*2)\n            n\['bdheight'].setValue(n\['bdheight'].getValue()-step*2)\n    except:\n        pass\nshrink(n,50)"}
   addUserKnob {22 colorandom l " <img src=\"ColorBars.png\">" -STARTLINE T "import colorsys, random\nn=nuke.thisNode()\nR,G,B= colorsys.hsv_to_rgb(random.random(),.1+random.random()*.15,.15+random.random()*.15)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ) )"}
   addUserKnob {22 darkgrey l "<font color=\"#232323\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.0, 0.0, 0.14]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
   addUserKnob {22 lightgrey l "<font color=\"#383838\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.0, 0.0, 0.22]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
   addUserKnob {22 red l "<font color=\"#8c3838\" size=6>■</font>" T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.0, 0.6, 0.55]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n" +STARTLINE}
   addUserKnob {22 orange l "<font color=\"#b28e59\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.1, 0.5, 0.7]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
   addUserKnob {22 yellow l "<font color=\"#ccc766\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.16, 0.5, 0.8]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
   addUserKnob {22 green l "<font color=\"#5d995b\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.33, 0.4, 0.6]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
   addUserKnob {22 cyan l "<font color=\"#72998f\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.46, 0.25, 0.6]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
   addUserKnob {22 blue l "<font color=\"#59687f\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.6, 0.3, 0.5]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
   addUserKnob {22 darkblue l "<font color=\"#63628c\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.67, 0.3, 0.55]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
   addUserKnob {22 magenta l "<font color=\"#927a99\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.8, 0.2, 0.6]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
   addUserKnob {22 pink l "<font color=\"#997a89\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.92, 0.2, 0.6]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
   addUserKnob {26 S02 l " " T " "}
   addUserKnob {26 Ftools l "" +STARTLINE T "<font color=\"#1C1C1C\"> v1.2 - Franklin VFX - 2018"}
  }
  BackdropNode {
   inputs 0
   name BackdropNode7
   knobChanged "try:\n    listenedKnobs = \['text', 'position', 'name']\n    node = nuke.thisNode()\n    name = node.knob('name').value()\n    text = node.knob('text').value()\n    position = node.knob('position').value()\n    position = \"<\" + position + \">\"\n    label = node.knob('label').value()\n    \n    if nuke.thisKnob().name() in listenedKnobs:\n        if text == \"\":\n            if node.knob('position').value() == \"left\":\n                node.knob('label').setValue()\n            else:\n                node.knob('label').setValue(position + name)\n        else:\n            if node.knob('position').value() == \"left\":\n                node.knob('label').setValue(text)\n            else:\n                node.knob('label').setValue(position + text)\n                \n    elif nuke.thisKnob().name() == 'font_size':\n        fontSize = node.knob('font_size').value()\n        node.knob('note_font_size').setValue(fontSize)\nexcept:\n    pass"
   tile_color 0x232323ff
   label "<Left>\[4] G2"
   note_font_size 50
   xpos 5082
   ypos -2969
   bdwidth 297
   bdheight 396
   addUserKnob {20 F_VFX l BackdropNode}
   addUserKnob {43 text l Text}
   text "\[4] G2"
   addUserKnob {7 font_size l "Font Size" R 10 100}
   font_size 50
   addUserKnob {4 position l "" -STARTLINE M {Left Center}}
   addUserKnob {26 S01 l " " T " "}
   addUserKnob {22 grow l " <img src=\"F_scalep.png\">" -STARTLINE T "n=nuke.thisNode()\n\ndef grow(node=None,step=50):\n    try:\n        if not node:\n            n=nuke.selectedNode()\n        else:\n            n=node\n            n\['xpos'].setValue(n\['xpos'].getValue()-step)\n            n\['ypos'].setValue(n\['ypos'].getValue()-step)\n            n\['bdwidth'].setValue(n\['bdwidth'].getValue()+step*2)\n            n\['bdheight'].setValue(n\['bdheight'].getValue()+step*2)\n    except:\n        pass\ngrow(n,50)"}
   addUserKnob {22 shrink l " <img src=\"F_scalem.png\">" -STARTLINE T "n=nuke.thisNode()\n\ndef shrink(node=None,step=50):\n    try:\n        if not node:\n            n=nuke.selectedNode()\n        else:\n            n=node\n            n\['xpos'].setValue(n\['xpos'].getValue()+step)\n            n\['ypos'].setValue(n\['ypos'].getValue()+step)\n            n\['bdwidth'].setValue(n\['bdwidth'].getValue()-step*2)\n            n\['bdheight'].setValue(n\['bdheight'].getValue()-step*2)\n    except:\n        pass\nshrink(n,50)"}
   addUserKnob {22 colorandom l " <img src=\"ColorBars.png\">" -STARTLINE T "import colorsys, random\nn=nuke.thisNode()\nR,G,B= colorsys.hsv_to_rgb(random.random(),.1+random.random()*.15,.15+random.random()*.15)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ) )"}
   addUserKnob {22 darkgrey l "<font color=\"#232323\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.0, 0.0, 0.14]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
   addUserKnob {22 lightgrey l "<font color=\"#383838\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.0, 0.0, 0.22]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
   addUserKnob {22 red l "<font color=\"#8c3838\" size=6>■</font>" T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.0, 0.6, 0.55]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n" +STARTLINE}
   addUserKnob {22 orange l "<font color=\"#b28e59\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.1, 0.5, 0.7]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
   addUserKnob {22 yellow l "<font color=\"#ccc766\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.16, 0.5, 0.8]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
   addUserKnob {22 green l "<font color=\"#5d995b\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.33, 0.4, 0.6]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
   addUserKnob {22 cyan l "<font color=\"#72998f\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.46, 0.25, 0.6]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
   addUserKnob {22 blue l "<font color=\"#59687f\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.6, 0.3, 0.5]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
   addUserKnob {22 darkblue l "<font color=\"#63628c\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.67, 0.3, 0.55]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
   addUserKnob {22 magenta l "<font color=\"#927a99\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.8, 0.2, 0.6]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
   addUserKnob {22 pink l "<font color=\"#997a89\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.92, 0.2, 0.6]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
   addUserKnob {26 S02 l " " T " "}
   addUserKnob {26 Ftools l "" +STARTLINE T "<font color=\"#1C1C1C\"> v1.2 - Franklin VFX - 2018"}
  }
  BackdropNode {
   inputs 0
   name BackdropNode8
   knobChanged "try:\n    listenedKnobs = \['text', 'position', 'name']\n    node = nuke.thisNode()\n    name = node.knob('name').value()\n    text = node.knob('text').value()\n    position = node.knob('position').value()\n    position = \"<\" + position + \">\"\n    label = node.knob('label').value()\n    \n    if nuke.thisKnob().name() in listenedKnobs:\n        if text == \"\":\n            if node.knob('position').value() == \"left\":\n                node.knob('label').setValue()\n            else:\n                node.knob('label').setValue(position + name)\n        else:\n            if node.knob('position').value() == \"left\":\n                node.knob('label').setValue(text)\n            else:\n                node.knob('label').setValue(position + text)\n                \n    elif nuke.thisKnob().name() == 'font_size':\n        fontSize = node.knob('font_size').value()\n        node.knob('note_font_size').setValue(fontSize)\nexcept:\n    pass"
   tile_color 0x232323ff
   label "<Left>\[6] M249"
   note_font_size 50
   xpos 4405
   ypos -2967
   bdwidth 297
   bdheight 396
   addUserKnob {20 F_VFX l BackdropNode}
   addUserKnob {43 text l Text}
   text "\[6] M249"
   addUserKnob {7 font_size l "Font Size" R 10 100}
   font_size 50
   addUserKnob {4 position l "" -STARTLINE M {Left Center}}
   addUserKnob {26 S01 l " " T " "}
   addUserKnob {22 grow l " <img src=\"F_scalep.png\">" -STARTLINE T "n=nuke.thisNode()\n\ndef grow(node=None,step=50):\n    try:\n        if not node:\n            n=nuke.selectedNode()\n        else:\n            n=node\n            n\['xpos'].setValue(n\['xpos'].getValue()-step)\n            n\['ypos'].setValue(n\['ypos'].getValue()-step)\n            n\['bdwidth'].setValue(n\['bdwidth'].getValue()+step*2)\n            n\['bdheight'].setValue(n\['bdheight'].getValue()+step*2)\n    except:\n        pass\ngrow(n,50)"}
   addUserKnob {22 shrink l " <img src=\"F_scalem.png\">" -STARTLINE T "n=nuke.thisNode()\n\ndef shrink(node=None,step=50):\n    try:\n        if not node:\n            n=nuke.selectedNode()\n        else:\n            n=node\n            n\['xpos'].setValue(n\['xpos'].getValue()+step)\n            n\['ypos'].setValue(n\['ypos'].getValue()+step)\n            n\['bdwidth'].setValue(n\['bdwidth'].getValue()-step*2)\n            n\['bdheight'].setValue(n\['bdheight'].getValue()-step*2)\n    except:\n        pass\nshrink(n,50)"}
   addUserKnob {22 colorandom l " <img src=\"ColorBars.png\">" -STARTLINE T "import colorsys, random\nn=nuke.thisNode()\nR,G,B= colorsys.hsv_to_rgb(random.random(),.1+random.random()*.15,.15+random.random()*.15)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ) )"}
   addUserKnob {22 darkgrey l "<font color=\"#232323\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.0, 0.0, 0.14]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
   addUserKnob {22 lightgrey l "<font color=\"#383838\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.0, 0.0, 0.22]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
   addUserKnob {22 red l "<font color=\"#8c3838\" size=6>■</font>" T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.0, 0.6, 0.55]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n" +STARTLINE}
   addUserKnob {22 orange l "<font color=\"#b28e59\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.1, 0.5, 0.7]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
   addUserKnob {22 yellow l "<font color=\"#ccc766\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.16, 0.5, 0.8]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
   addUserKnob {22 green l "<font color=\"#5d995b\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.33, 0.4, 0.6]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
   addUserKnob {22 cyan l "<font color=\"#72998f\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.46, 0.25, 0.6]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
   addUserKnob {22 blue l "<font color=\"#59687f\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.6, 0.3, 0.5]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
   addUserKnob {22 darkblue l "<font color=\"#63628c\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.67, 0.3, 0.55]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
   addUserKnob {22 magenta l "<font color=\"#927a99\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.8, 0.2, 0.6]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
   addUserKnob {22 pink l "<font color=\"#997a89\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.92, 0.2, 0.6]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
   addUserKnob {26 S02 l " " T " "}
   addUserKnob {26 Ftools l "" +STARTLINE T "<font color=\"#1C1C1C\"> v1.2 - Franklin VFX - 2018"}
  }
  BackdropNode {
   inputs 0
   name BackdropNode9
   knobChanged "try:\n    listenedKnobs = \['text', 'position', 'name']\n    node = nuke.thisNode()\n    name = node.knob('name').value()\n    text = node.knob('text').value()\n    position = node.knob('position').value()\n    position = \"<\" + position + \">\"\n    label = node.knob('label').value()\n    \n    if nuke.thisKnob().name() in listenedKnobs:\n        if text == \"\":\n            if node.knob('position').value() == \"left\":\n                node.knob('label').setValue()\n            else:\n                node.knob('label').setValue(position + name)\n        else:\n            if node.knob('position').value() == \"left\":\n                node.knob('label').setValue(text)\n            else:\n                node.knob('label').setValue(position + text)\n                \n    elif nuke.thisKnob().name() == 'font_size':\n        fontSize = node.knob('font_size').value()\n        node.knob('note_font_size').setValue(fontSize)\nexcept:\n    pass"
   tile_color 0x232323ff
   label "<Left>\[7] mp5"
   note_font_size 50
   xpos 4058
   ypos -2968
   bdwidth 297
   bdheight 396
   addUserKnob {20 F_VFX l BackdropNode}
   addUserKnob {43 text l Text}
   text "\[7] mp5"
   addUserKnob {7 font_size l "Font Size" R 10 100}
   font_size 50
   addUserKnob {4 position l "" -STARTLINE M {Left Center}}
   addUserKnob {26 S01 l " " T " "}
   addUserKnob {22 grow l " <img src=\"F_scalep.png\">" -STARTLINE T "n=nuke.thisNode()\n\ndef grow(node=None,step=50):\n    try:\n        if not node:\n            n=nuke.selectedNode()\n        else:\n            n=node\n            n\['xpos'].setValue(n\['xpos'].getValue()-step)\n            n\['ypos'].setValue(n\['ypos'].getValue()-step)\n            n\['bdwidth'].setValue(n\['bdwidth'].getValue()+step*2)\n            n\['bdheight'].setValue(n\['bdheight'].getValue()+step*2)\n    except:\n        pass\ngrow(n,50)"}
   addUserKnob {22 shrink l " <img src=\"F_scalem.png\">" -STARTLINE T "n=nuke.thisNode()\n\ndef shrink(node=None,step=50):\n    try:\n        if not node:\n            n=nuke.selectedNode()\n        else:\n            n=node\n            n\['xpos'].setValue(n\['xpos'].getValue()+step)\n            n\['ypos'].setValue(n\['ypos'].getValue()+step)\n            n\['bdwidth'].setValue(n\['bdwidth'].getValue()-step*2)\n            n\['bdheight'].setValue(n\['bdheight'].getValue()-step*2)\n    except:\n        pass\nshrink(n,50)"}
   addUserKnob {22 colorandom l " <img src=\"ColorBars.png\">" -STARTLINE T "import colorsys, random\nn=nuke.thisNode()\nR,G,B= colorsys.hsv_to_rgb(random.random(),.1+random.random()*.15,.15+random.random()*.15)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ) )"}
   addUserKnob {22 darkgrey l "<font color=\"#232323\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.0, 0.0, 0.14]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
   addUserKnob {22 lightgrey l "<font color=\"#383838\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.0, 0.0, 0.22]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
   addUserKnob {22 red l "<font color=\"#8c3838\" size=6>■</font>" T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.0, 0.6, 0.55]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n" +STARTLINE}
   addUserKnob {22 orange l "<font color=\"#b28e59\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.1, 0.5, 0.7]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
   addUserKnob {22 yellow l "<font color=\"#ccc766\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.16, 0.5, 0.8]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
   addUserKnob {22 green l "<font color=\"#5d995b\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.33, 0.4, 0.6]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
   addUserKnob {22 cyan l "<font color=\"#72998f\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.46, 0.25, 0.6]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
   addUserKnob {22 blue l "<font color=\"#59687f\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.6, 0.3, 0.5]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
   addUserKnob {22 darkblue l "<font color=\"#63628c\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.67, 0.3, 0.55]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
   addUserKnob {22 magenta l "<font color=\"#927a99\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.8, 0.2, 0.6]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
   addUserKnob {22 pink l "<font color=\"#997a89\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.92, 0.2, 0.6]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
   addUserKnob {26 S02 l " " T " "}
   addUserKnob {26 Ftools l "" +STARTLINE T "<font color=\"#1C1C1C\"> v1.2 - Franklin VFX - 2018"}
  }
  BackdropNode {
   inputs 0
   name BackdropNode14
   knobChanged "try:\n    listenedKnobs = \['text', 'position', 'name']\n    node = nuke.thisNode()\n    name = node.knob('name').value()\n    text = node.knob('text').value()\n    position = node.knob('position').value()\n    position = \"<\" + position + \">\"\n    label = node.knob('label').value()\n    \n    if nuke.thisKnob().name() in listenedKnobs:\n        if text == \"\":\n            if node.knob('position').value() == \"left\":\n                node.knob('label').setValue()\n            else:\n                node.knob('label').setValue(position + name)\n        else:\n            if node.knob('position').value() == \"left\":\n                node.knob('label').setValue(text)\n            else:\n                node.knob('label').setValue(position + text)\n                \n    elif nuke.thisKnob().name() == 'font_size':\n        fontSize = node.knob('font_size').value()\n        node.knob('note_font_size').setValue(fontSize)\nexcept:\n    pass"
   tile_color 0x232323ff
   label "<Left>\[0] default"
   note_font_size 50
   xpos 6546
   ypos -2958
   bdwidth 297
   bdheight 396
   z_order 2
   addUserKnob {20 F_VFX l BackdropNode}
   addUserKnob {43 text l Text}
   text "\[0] default"
   addUserKnob {7 font_size l "Font Size" R 10 100}
   font_size 50
   addUserKnob {4 position l "" -STARTLINE M {Left Center}}
   addUserKnob {26 S01 l " " T " "}
   addUserKnob {22 grow l " <img src=\"F_scalep.png\">" -STARTLINE T "n=nuke.thisNode()\n\ndef grow(node=None,step=50):\n    try:\n        if not node:\n            n=nuke.selectedNode()\n        else:\n            n=node\n            n\['xpos'].setValue(n\['xpos'].getValue()-step)\n            n\['ypos'].setValue(n\['ypos'].getValue()-step)\n            n\['bdwidth'].setValue(n\['bdwidth'].getValue()+step*2)\n            n\['bdheight'].setValue(n\['bdheight'].getValue()+step*2)\n    except:\n        pass\ngrow(n,50)"}
   addUserKnob {22 shrink l " <img src=\"F_scalem.png\">" -STARTLINE T "n=nuke.thisNode()\n\ndef shrink(node=None,step=50):\n    try:\n        if not node:\n            n=nuke.selectedNode()\n        else:\n            n=node\n            n\['xpos'].setValue(n\['xpos'].getValue()+step)\n            n\['ypos'].setValue(n\['ypos'].getValue()+step)\n            n\['bdwidth'].setValue(n\['bdwidth'].getValue()-step*2)\n            n\['bdheight'].setValue(n\['bdheight'].getValue()-step*2)\n    except:\n        pass\nshrink(n,50)"}
   addUserKnob {22 colorandom l " <img src=\"ColorBars.png\">" -STARTLINE T "import colorsys, random\nn=nuke.thisNode()\nR,G,B= colorsys.hsv_to_rgb(random.random(),.1+random.random()*.15,.15+random.random()*.15)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ) )"}
   addUserKnob {22 darkgrey l "<font color=\"#232323\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.0, 0.0, 0.14]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
   addUserKnob {22 lightgrey l "<font color=\"#383838\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.0, 0.0, 0.22]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
   addUserKnob {22 red l "<font color=\"#8c3838\" size=6>■</font>" T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.0, 0.6, 0.55]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n" +STARTLINE}
   addUserKnob {22 orange l "<font color=\"#b28e59\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.1, 0.5, 0.7]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
   addUserKnob {22 yellow l "<font color=\"#ccc766\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.16, 0.5, 0.8]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
   addUserKnob {22 green l "<font color=\"#5d995b\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.33, 0.4, 0.6]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
   addUserKnob {22 cyan l "<font color=\"#72998f\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.46, 0.25, 0.6]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
   addUserKnob {22 blue l "<font color=\"#59687f\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.6, 0.3, 0.5]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
   addUserKnob {22 darkblue l "<font color=\"#63628c\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.67, 0.3, 0.55]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
   addUserKnob {22 magenta l "<font color=\"#927a99\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.8, 0.2, 0.6]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
   addUserKnob {22 pink l "<font color=\"#997a89\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.92, 0.2, 0.6]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
   addUserKnob {26 S02 l " " T " "}
   addUserKnob {26 Ftools l "" +STARTLINE T "<font color=\"#1C1C1C\"> v1.2 - Franklin VFX - 2018"}
  }
  BackdropNode {
   inputs 0
   name BackdropNode15
   knobChanged "try:\n    listenedKnobs = \['text', 'position', 'name']\n    node = nuke.thisNode()\n    name = node.knob('name').value()\n    text = node.knob('text').value()\n    position = node.knob('position').value()\n    position = \"<\" + position + \">\"\n    label = node.knob('label').value()\n    \n    if nuke.thisKnob().name() in listenedKnobs:\n        if text == \"\":\n            if node.knob('position').value() == \"left\":\n                node.knob('label').setValue()\n            else:\n                node.knob('label').setValue(position + name)\n        else:\n            if node.knob('position').value() == \"left\":\n                node.knob('label').setValue(text)\n            else:\n                node.knob('label').setValue(position + text)\n                \n    elif nuke.thisKnob().name() == 'font_size':\n        fontSize = node.knob('font_size').value()\n        node.knob('note_font_size').setValue(fontSize)\nexcept:\n    pass"
   tile_color 0x232323ff
   label "<Left>\[0] default"
   note_font_size 50
   xpos 7390
   ypos -2952
   bdwidth 297
   bdheight 396
   z_order 2
   addUserKnob {20 F_VFX l BackdropNode}
   addUserKnob {43 text l Text}
   text "\[0] default"
   addUserKnob {7 font_size l "Font Size" R 10 100}
   font_size 50
   addUserKnob {4 position l "" -STARTLINE M {Left Center}}
   addUserKnob {26 S01 l " " T " "}
   addUserKnob {22 grow l " <img src=\"F_scalep.png\">" -STARTLINE T "n=nuke.thisNode()\n\ndef grow(node=None,step=50):\n    try:\n        if not node:\n            n=nuke.selectedNode()\n        else:\n            n=node\n            n\['xpos'].setValue(n\['xpos'].getValue()-step)\n            n\['ypos'].setValue(n\['ypos'].getValue()-step)\n            n\['bdwidth'].setValue(n\['bdwidth'].getValue()+step*2)\n            n\['bdheight'].setValue(n\['bdheight'].getValue()+step*2)\n    except:\n        pass\ngrow(n,50)"}
   addUserKnob {22 shrink l " <img src=\"F_scalem.png\">" -STARTLINE T "n=nuke.thisNode()\n\ndef shrink(node=None,step=50):\n    try:\n        if not node:\n            n=nuke.selectedNode()\n        else:\n            n=node\n            n\['xpos'].setValue(n\['xpos'].getValue()+step)\n            n\['ypos'].setValue(n\['ypos'].getValue()+step)\n            n\['bdwidth'].setValue(n\['bdwidth'].getValue()-step*2)\n            n\['bdheight'].setValue(n\['bdheight'].getValue()-step*2)\n    except:\n        pass\nshrink(n,50)"}
   addUserKnob {22 colorandom l " <img src=\"ColorBars.png\">" -STARTLINE T "import colorsys, random\nn=nuke.thisNode()\nR,G,B= colorsys.hsv_to_rgb(random.random(),.1+random.random()*.15,.15+random.random()*.15)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ) )"}
   addUserKnob {22 darkgrey l "<font color=\"#232323\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.0, 0.0, 0.14]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
   addUserKnob {22 lightgrey l "<font color=\"#383838\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.0, 0.0, 0.22]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
   addUserKnob {22 red l "<font color=\"#8c3838\" size=6>■</font>" T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.0, 0.6, 0.55]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n" +STARTLINE}
   addUserKnob {22 orange l "<font color=\"#b28e59\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.1, 0.5, 0.7]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
   addUserKnob {22 yellow l "<font color=\"#ccc766\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.16, 0.5, 0.8]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
   addUserKnob {22 green l "<font color=\"#5d995b\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.33, 0.4, 0.6]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
   addUserKnob {22 cyan l "<font color=\"#72998f\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.46, 0.25, 0.6]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
   addUserKnob {22 blue l "<font color=\"#59687f\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.6, 0.3, 0.5]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
   addUserKnob {22 darkblue l "<font color=\"#63628c\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.67, 0.3, 0.55]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
   addUserKnob {22 magenta l "<font color=\"#927a99\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.8, 0.2, 0.6]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
   addUserKnob {22 pink l "<font color=\"#997a89\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.92, 0.2, 0.6]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
   addUserKnob {26 S02 l " " T " "}
   addUserKnob {26 Ftools l "" +STARTLINE T "<font color=\"#1C1C1C\"> v1.2 - Franklin VFX - 2018"}
  }
  BackdropNode {
   inputs 0
   name BackdropNode10
   knobChanged "try:\n    listenedKnobs = \['text', 'position', 'name']\n    node = nuke.thisNode()\n    name = node.knob('name').value()\n    text = node.knob('text').value()\n    position = node.knob('position').value()\n    position = \"<\" + position + \">\"\n    label = node.knob('label').value()\n    \n    if nuke.thisKnob().name() in listenedKnobs:\n        if text == \"\":\n            if node.knob('position').value() == \"left\":\n                node.knob('label').setValue()\n            else:\n                node.knob('label').setValue(position + name)\n        else:\n            if node.knob('position').value() == \"left\":\n                node.knob('label').setValue(text)\n            else:\n                node.knob('label').setValue(position + text)\n                \n    elif nuke.thisKnob().name() == 'font_size':\n        fontSize = node.knob('font_size').value()\n        node.knob('note_font_size').setValue(fontSize)\nexcept:\n    pass"
   tile_color 0x232323ff
   label "<Left>\[9] M4"
   note_font_size 50
   xpos 3337
   ypos -2985
   bdwidth 297
   bdheight 396
   z_order 4
   addUserKnob {20 F_VFX l BackdropNode}
   addUserKnob {43 text l Text}
   text "\[9] M4"
   addUserKnob {7 font_size l "Font Size" R 10 100}
   font_size 50
   addUserKnob {4 position l "" -STARTLINE M {Left Center}}
   addUserKnob {26 S01 l " " T " "}
   addUserKnob {22 grow l " <img src=\"F_scalep.png\">" -STARTLINE T "n=nuke.thisNode()\n\ndef grow(node=None,step=50):\n    try:\n        if not node:\n            n=nuke.selectedNode()\n        else:\n            n=node\n            n\['xpos'].setValue(n\['xpos'].getValue()-step)\n            n\['ypos'].setValue(n\['ypos'].getValue()-step)\n            n\['bdwidth'].setValue(n\['bdwidth'].getValue()+step*2)\n            n\['bdheight'].setValue(n\['bdheight'].getValue()+step*2)\n    except:\n        pass\ngrow(n,50)"}
   addUserKnob {22 shrink l " <img src=\"F_scalem.png\">" -STARTLINE T "n=nuke.thisNode()\n\ndef shrink(node=None,step=50):\n    try:\n        if not node:\n            n=nuke.selectedNode()\n        else:\n            n=node\n            n\['xpos'].setValue(n\['xpos'].getValue()+step)\n            n\['ypos'].setValue(n\['ypos'].getValue()+step)\n            n\['bdwidth'].setValue(n\['bdwidth'].getValue()-step*2)\n            n\['bdheight'].setValue(n\['bdheight'].getValue()-step*2)\n    except:\n        pass\nshrink(n,50)"}
   addUserKnob {22 colorandom l " <img src=\"ColorBars.png\">" -STARTLINE T "import colorsys, random\nn=nuke.thisNode()\nR,G,B= colorsys.hsv_to_rgb(random.random(),.1+random.random()*.15,.15+random.random()*.15)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ) )"}
   addUserKnob {22 darkgrey l "<font color=\"#232323\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.0, 0.0, 0.14]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
   addUserKnob {22 lightgrey l "<font color=\"#383838\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.0, 0.0, 0.22]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
   addUserKnob {22 red l "<font color=\"#8c3838\" size=6>■</font>" T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.0, 0.6, 0.55]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n" +STARTLINE}
   addUserKnob {22 orange l "<font color=\"#b28e59\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.1, 0.5, 0.7]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
   addUserKnob {22 yellow l "<font color=\"#ccc766\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.16, 0.5, 0.8]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
   addUserKnob {22 green l "<font color=\"#5d995b\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.33, 0.4, 0.6]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
   addUserKnob {22 cyan l "<font color=\"#72998f\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.46, 0.25, 0.6]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
   addUserKnob {22 blue l "<font color=\"#59687f\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.6, 0.3, 0.5]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
   addUserKnob {22 darkblue l "<font color=\"#63628c\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.67, 0.3, 0.55]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
   addUserKnob {22 magenta l "<font color=\"#927a99\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.8, 0.2, 0.6]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
   addUserKnob {22 pink l "<font color=\"#997a89\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.92, 0.2, 0.6]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
   addUserKnob {26 S02 l " " T " "}
   addUserKnob {26 Ftools l "" +STARTLINE T "<font color=\"#1C1C1C\"> v1.2 - Franklin VFX - 2018"}
  }
  BackdropNode {
   inputs 0
   name BackdropNode11
   knobChanged "try:\n    listenedKnobs = \['text', 'position', 'name']\n    node = nuke.thisNode()\n    name = node.knob('name').value()\n    text = node.knob('text').value()\n    position = node.knob('position').value()\n    position = \"<\" + position + \">\"\n    label = node.knob('label').value()\n    \n    if nuke.thisKnob().name() in listenedKnobs:\n        if text == \"\":\n            if node.knob('position').value() == \"left\":\n                node.knob('label').setValue()\n            else:\n                node.knob('label').setValue(position + name)\n        else:\n            if node.knob('position').value() == \"left\":\n                node.knob('label').setValue(text)\n            else:\n                node.knob('label').setValue(position + text)\n                \n    elif nuke.thisKnob().name() == 'font_size':\n        fontSize = node.knob('font_size').value()\n        node.knob('note_font_size').setValue(fontSize)\nexcept:\n    pass"
   tile_color 0x232323ff
   label "<Left>\[8] M870"
   note_font_size 50
   xpos 3708
   ypos -2974
   bdwidth 297
   bdheight 396
   z_order 4
   addUserKnob {20 F_VFX l BackdropNode}
   addUserKnob {43 text l Text}
   text "\[8] M870"
   addUserKnob {7 font_size l "Font Size" R 10 100}
   font_size 50
   addUserKnob {4 position l "" -STARTLINE M {Left Center}}
   addUserKnob {26 S01 l " " T " "}
   addUserKnob {22 grow l " <img src=\"F_scalep.png\">" -STARTLINE T "n=nuke.thisNode()\n\ndef grow(node=None,step=50):\n    try:\n        if not node:\n            n=nuke.selectedNode()\n        else:\n            n=node\n            n\['xpos'].setValue(n\['xpos'].getValue()-step)\n            n\['ypos'].setValue(n\['ypos'].getValue()-step)\n            n\['bdwidth'].setValue(n\['bdwidth'].getValue()+step*2)\n            n\['bdheight'].setValue(n\['bdheight'].getValue()+step*2)\n    except:\n        pass\ngrow(n,50)"}
   addUserKnob {22 shrink l " <img src=\"F_scalem.png\">" -STARTLINE T "n=nuke.thisNode()\n\ndef shrink(node=None,step=50):\n    try:\n        if not node:\n            n=nuke.selectedNode()\n        else:\n            n=node\n            n\['xpos'].setValue(n\['xpos'].getValue()+step)\n            n\['ypos'].setValue(n\['ypos'].getValue()+step)\n            n\['bdwidth'].setValue(n\['bdwidth'].getValue()-step*2)\n            n\['bdheight'].setValue(n\['bdheight'].getValue()-step*2)\n    except:\n        pass\nshrink(n,50)"}
   addUserKnob {22 colorandom l " <img src=\"ColorBars.png\">" -STARTLINE T "import colorsys, random\nn=nuke.thisNode()\nR,G,B= colorsys.hsv_to_rgb(random.random(),.1+random.random()*.15,.15+random.random()*.15)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ) )"}
   addUserKnob {22 darkgrey l "<font color=\"#232323\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.0, 0.0, 0.14]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
   addUserKnob {22 lightgrey l "<font color=\"#383838\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.0, 0.0, 0.22]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
   addUserKnob {22 red l "<font color=\"#8c3838\" size=6>■</font>" T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.0, 0.6, 0.55]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n" +STARTLINE}
   addUserKnob {22 orange l "<font color=\"#b28e59\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.1, 0.5, 0.7]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
   addUserKnob {22 yellow l "<font color=\"#ccc766\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.16, 0.5, 0.8]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
   addUserKnob {22 green l "<font color=\"#5d995b\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.33, 0.4, 0.6]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
   addUserKnob {22 cyan l "<font color=\"#72998f\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.46, 0.25, 0.6]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
   addUserKnob {22 blue l "<font color=\"#59687f\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.6, 0.3, 0.5]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
   addUserKnob {22 darkblue l "<font color=\"#63628c\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.67, 0.3, 0.55]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
   addUserKnob {22 magenta l "<font color=\"#927a99\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.8, 0.2, 0.6]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
   addUserKnob {22 pink l "<font color=\"#997a89\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.92, 0.2, 0.6]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
   addUserKnob {26 S02 l " " T " "}
   addUserKnob {26 Ftools l "" +STARTLINE T "<font color=\"#1C1C1C\"> v1.2 - Franklin VFX - 2018"}
  }
  BackdropNode {
   inputs 0
   name BackdropNode12
   knobChanged "try:\n    listenedKnobs = \['text', 'position', 'name']\n    node = nuke.thisNode()\n    name = node.knob('name').value()\n    text = node.knob('text').value()\n    position = node.knob('position').value()\n    position = \"<\" + position + \">\"\n    label = node.knob('label').value()\n    \n    if nuke.thisKnob().name() in listenedKnobs:\n        if text == \"\":\n            if node.knob('position').value() == \"left\":\n                node.knob('label').setValue()\n            else:\n                node.knob('label').setValue(position + name)\n        else:\n            if node.knob('position').value() == \"left\":\n                node.knob('label').setValue(text)\n            else:\n                node.knob('label').setValue(position + text)\n                \n    elif nuke.thisKnob().name() == 'font_size':\n        fontSize = node.knob('font_size').value()\n        node.knob('note_font_size').setValue(fontSize)\nexcept:\n    pass"
   tile_color 0x232323ff
   label "<Left>\[5] M16"
   note_font_size 50
   xpos 4732
   ypos -2962
   bdwidth 297
   bdheight 396
   z_order 4
   addUserKnob {20 F_VFX l BackdropNode}
   addUserKnob {43 text l Text}
   text "\[5] M16"
   addUserKnob {7 font_size l "Font Size" R 10 100}
   font_size 50
   addUserKnob {4 position l "" -STARTLINE M {Left Center}}
   addUserKnob {26 S01 l " " T " "}
   addUserKnob {22 grow l " <img src=\"F_scalep.png\">" -STARTLINE T "n=nuke.thisNode()\n\ndef grow(node=None,step=50):\n    try:\n        if not node:\n            n=nuke.selectedNode()\n        else:\n            n=node\n            n\['xpos'].setValue(n\['xpos'].getValue()-step)\n            n\['ypos'].setValue(n\['ypos'].getValue()-step)\n            n\['bdwidth'].setValue(n\['bdwidth'].getValue()+step*2)\n            n\['bdheight'].setValue(n\['bdheight'].getValue()+step*2)\n    except:\n        pass\ngrow(n,50)"}
   addUserKnob {22 shrink l " <img src=\"F_scalem.png\">" -STARTLINE T "n=nuke.thisNode()\n\ndef shrink(node=None,step=50):\n    try:\n        if not node:\n            n=nuke.selectedNode()\n        else:\n            n=node\n            n\['xpos'].setValue(n\['xpos'].getValue()+step)\n            n\['ypos'].setValue(n\['ypos'].getValue()+step)\n            n\['bdwidth'].setValue(n\['bdwidth'].getValue()-step*2)\n            n\['bdheight'].setValue(n\['bdheight'].getValue()-step*2)\n    except:\n        pass\nshrink(n,50)"}
   addUserKnob {22 colorandom l " <img src=\"ColorBars.png\">" -STARTLINE T "import colorsys, random\nn=nuke.thisNode()\nR,G,B= colorsys.hsv_to_rgb(random.random(),.1+random.random()*.15,.15+random.random()*.15)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ) )"}
   addUserKnob {22 darkgrey l "<font color=\"#232323\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.0, 0.0, 0.14]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
   addUserKnob {22 lightgrey l "<font color=\"#383838\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.0, 0.0, 0.22]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
   addUserKnob {22 red l "<font color=\"#8c3838\" size=6>■</font>" T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.0, 0.6, 0.55]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n" +STARTLINE}
   addUserKnob {22 orange l "<font color=\"#b28e59\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.1, 0.5, 0.7]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
   addUserKnob {22 yellow l "<font color=\"#ccc766\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.16, 0.5, 0.8]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
   addUserKnob {22 green l "<font color=\"#5d995b\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.33, 0.4, 0.6]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
   addUserKnob {22 cyan l "<font color=\"#72998f\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.46, 0.25, 0.6]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
   addUserKnob {22 blue l "<font color=\"#59687f\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.6, 0.3, 0.5]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
   addUserKnob {22 darkblue l "<font color=\"#63628c\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.67, 0.3, 0.55]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
   addUserKnob {22 magenta l "<font color=\"#927a99\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.8, 0.2, 0.6]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
   addUserKnob {22 pink l "<font color=\"#997a89\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.92, 0.2, 0.6]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
   addUserKnob {26 S02 l " " T " "}
   addUserKnob {26 Ftools l "" +STARTLINE T "<font color=\"#1C1C1C\"> v1.2 - Franklin VFX - 2018"}
  }
  BackdropNode {
   inputs 0
   name BackdropNode21
   knobChanged "try:\n    listenedKnobs = \['text', 'position', 'name']\n    node = nuke.thisNode()\n    name = node.knob('name').value()\n    text = node.knob('text').value()\n    position = node.knob('position').value()\n    position = \"<\" + position + \">\"\n    label = node.knob('label').value()\n    \n    if nuke.thisKnob().name() in listenedKnobs:\n        if text == \"\":\n            if node.knob('position').value() == \"left\":\n                node.knob('label').setValue()\n            else:\n                node.knob('label').setValue(position + name)\n        else:\n            if node.knob('position').value() == \"left\":\n                node.knob('label').setValue(text)\n            else:\n                node.knob('label').setValue(position + text)\n                \n    elif nuke.thisKnob().name() == 'font_size':\n        fontSize = node.knob('font_size').value()\n        node.knob('note_font_size').setValue(fontSize)\nexcept:\n    pass"
   tile_color 0x232323ff
   label "<Left>\[9] M4"
   note_font_size 50
   xpos 10699
   ypos -2970
   bdwidth 297
   bdheight 396
   z_order 4
   addUserKnob {20 F_VFX l BackdropNode}
   addUserKnob {43 text l Text}
   text "\[9] M4"
   addUserKnob {7 font_size l "Font Size" R 10 100}
   font_size 50
   addUserKnob {4 position l "" -STARTLINE M {Left Center}}
   addUserKnob {26 S01 l " " T " "}
   addUserKnob {22 grow l " <img src=\"F_scalep.png\">" -STARTLINE T "n=nuke.thisNode()\n\ndef grow(node=None,step=50):\n    try:\n        if not node:\n            n=nuke.selectedNode()\n        else:\n            n=node\n            n\['xpos'].setValue(n\['xpos'].getValue()-step)\n            n\['ypos'].setValue(n\['ypos'].getValue()-step)\n            n\['bdwidth'].setValue(n\['bdwidth'].getValue()+step*2)\n            n\['bdheight'].setValue(n\['bdheight'].getValue()+step*2)\n    except:\n        pass\ngrow(n,50)"}
   addUserKnob {22 shrink l " <img src=\"F_scalem.png\">" -STARTLINE T "n=nuke.thisNode()\n\ndef shrink(node=None,step=50):\n    try:\n        if not node:\n            n=nuke.selectedNode()\n        else:\n            n=node\n            n\['xpos'].setValue(n\['xpos'].getValue()+step)\n            n\['ypos'].setValue(n\['ypos'].getValue()+step)\n            n\['bdwidth'].setValue(n\['bdwidth'].getValue()-step*2)\n            n\['bdheight'].setValue(n\['bdheight'].getValue()-step*2)\n    except:\n        pass\nshrink(n,50)"}
   addUserKnob {22 colorandom l " <img src=\"ColorBars.png\">" -STARTLINE T "import colorsys, random\nn=nuke.thisNode()\nR,G,B= colorsys.hsv_to_rgb(random.random(),.1+random.random()*.15,.15+random.random()*.15)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ) )"}
   addUserKnob {22 darkgrey l "<font color=\"#232323\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.0, 0.0, 0.14]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
   addUserKnob {22 lightgrey l "<font color=\"#383838\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.0, 0.0, 0.22]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
   addUserKnob {22 red l "<font color=\"#8c3838\" size=6>■</font>" T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.0, 0.6, 0.55]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n" +STARTLINE}
   addUserKnob {22 orange l "<font color=\"#b28e59\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.1, 0.5, 0.7]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
   addUserKnob {22 yellow l "<font color=\"#ccc766\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.16, 0.5, 0.8]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
   addUserKnob {22 green l "<font color=\"#5d995b\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.33, 0.4, 0.6]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
   addUserKnob {22 cyan l "<font color=\"#72998f\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.46, 0.25, 0.6]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
   addUserKnob {22 blue l "<font color=\"#59687f\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.6, 0.3, 0.5]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
   addUserKnob {22 darkblue l "<font color=\"#63628c\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.67, 0.3, 0.55]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
   addUserKnob {22 magenta l "<font color=\"#927a99\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.8, 0.2, 0.6]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
   addUserKnob {22 pink l "<font color=\"#997a89\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.92, 0.2, 0.6]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
   addUserKnob {26 S02 l " " T " "}
   addUserKnob {26 Ftools l "" +STARTLINE T "<font color=\"#1C1C1C\"> v1.2 - Franklin VFX - 2018"}
  }
  BackdropNode {
   inputs 0
   name BackdropNode22
   knobChanged "try:\n    listenedKnobs = \['text', 'position', 'name']\n    node = nuke.thisNode()\n    name = node.knob('name').value()\n    text = node.knob('text').value()\n    position = node.knob('position').value()\n    position = \"<\" + position + \">\"\n    label = node.knob('label').value()\n    \n    if nuke.thisKnob().name() in listenedKnobs:\n        if text == \"\":\n            if node.knob('position').value() == \"left\":\n                node.knob('label').setValue()\n            else:\n                node.knob('label').setValue(position + name)\n        else:\n            if node.knob('position').value() == \"left\":\n                node.knob('label').setValue(text)\n            else:\n                node.knob('label').setValue(position + text)\n                \n    elif nuke.thisKnob().name() == 'font_size':\n        fontSize = node.knob('font_size').value()\n        node.knob('note_font_size').setValue(fontSize)\nexcept:\n    pass"
   tile_color 0x232323ff
   label "<Left>\[8] M870"
   note_font_size 50
   xpos 10342
   ypos -2973
   bdwidth 297
   bdheight 396
   z_order 4
   addUserKnob {20 F_VFX l BackdropNode}
   addUserKnob {43 text l Text}
   text "\[8] M870"
   addUserKnob {7 font_size l "Font Size" R 10 100}
   font_size 50
   addUserKnob {4 position l "" -STARTLINE M {Left Center}}
   addUserKnob {26 S01 l " " T " "}
   addUserKnob {22 grow l " <img src=\"F_scalep.png\">" -STARTLINE T "n=nuke.thisNode()\n\ndef grow(node=None,step=50):\n    try:\n        if not node:\n            n=nuke.selectedNode()\n        else:\n            n=node\n            n\['xpos'].setValue(n\['xpos'].getValue()-step)\n            n\['ypos'].setValue(n\['ypos'].getValue()-step)\n            n\['bdwidth'].setValue(n\['bdwidth'].getValue()+step*2)\n            n\['bdheight'].setValue(n\['bdheight'].getValue()+step*2)\n    except:\n        pass\ngrow(n,50)"}
   addUserKnob {22 shrink l " <img src=\"F_scalem.png\">" -STARTLINE T "n=nuke.thisNode()\n\ndef shrink(node=None,step=50):\n    try:\n        if not node:\n            n=nuke.selectedNode()\n        else:\n            n=node\n            n\['xpos'].setValue(n\['xpos'].getValue()+step)\n            n\['ypos'].setValue(n\['ypos'].getValue()+step)\n            n\['bdwidth'].setValue(n\['bdwidth'].getValue()-step*2)\n            n\['bdheight'].setValue(n\['bdheight'].getValue()-step*2)\n    except:\n        pass\nshrink(n,50)"}
   addUserKnob {22 colorandom l " <img src=\"ColorBars.png\">" -STARTLINE T "import colorsys, random\nn=nuke.thisNode()\nR,G,B= colorsys.hsv_to_rgb(random.random(),.1+random.random()*.15,.15+random.random()*.15)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ) )"}
   addUserKnob {22 darkgrey l "<font color=\"#232323\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.0, 0.0, 0.14]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
   addUserKnob {22 lightgrey l "<font color=\"#383838\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.0, 0.0, 0.22]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
   addUserKnob {22 red l "<font color=\"#8c3838\" size=6>■</font>" T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.0, 0.6, 0.55]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n" +STARTLINE}
   addUserKnob {22 orange l "<font color=\"#b28e59\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.1, 0.5, 0.7]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
   addUserKnob {22 yellow l "<font color=\"#ccc766\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.16, 0.5, 0.8]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
   addUserKnob {22 green l "<font color=\"#5d995b\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.33, 0.4, 0.6]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
   addUserKnob {22 cyan l "<font color=\"#72998f\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.46, 0.25, 0.6]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
   addUserKnob {22 blue l "<font color=\"#59687f\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.6, 0.3, 0.5]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
   addUserKnob {22 darkblue l "<font color=\"#63628c\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.67, 0.3, 0.55]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
   addUserKnob {22 magenta l "<font color=\"#927a99\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.8, 0.2, 0.6]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
   addUserKnob {22 pink l "<font color=\"#997a89\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.92, 0.2, 0.6]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
   addUserKnob {26 S02 l " " T " "}
   addUserKnob {26 Ftools l "" +STARTLINE T "<font color=\"#1C1C1C\"> v1.2 - Franklin VFX - 2018"}
  }
  BackdropNode {
   inputs 0
   name BackdropNode23
   knobChanged "try:\n    listenedKnobs = \['text', 'position', 'name']\n    node = nuke.thisNode()\n    name = node.knob('name').value()\n    text = node.knob('text').value()\n    position = node.knob('position').value()\n    position = \"<\" + position + \">\"\n    label = node.knob('label').value()\n    \n    if nuke.thisKnob().name() in listenedKnobs:\n        if text == \"\":\n            if node.knob('position').value() == \"left\":\n                node.knob('label').setValue()\n            else:\n                node.knob('label').setValue(position + name)\n        else:\n            if node.knob('position').value() == \"left\":\n                node.knob('label').setValue(text)\n            else:\n                node.knob('label').setValue(position + text)\n                \n    elif nuke.thisKnob().name() == 'font_size':\n        fontSize = node.knob('font_size').value()\n        node.knob('note_font_size').setValue(fontSize)\nexcept:\n    pass"
   tile_color 0x232323ff
   label "<Left>\[5] M16"
   note_font_size 50
   xpos 9238
   ypos -2962
   bdwidth 297
   bdheight 396
   z_order 4
   addUserKnob {20 F_VFX l BackdropNode}
   addUserKnob {43 text l Text}
   text "\[5] M16"
   addUserKnob {7 font_size l "Font Size" R 10 100}
   font_size 50
   addUserKnob {4 position l "" -STARTLINE M {Left Center}}
   addUserKnob {26 S01 l " " T " "}
   addUserKnob {22 grow l " <img src=\"F_scalep.png\">" -STARTLINE T "n=nuke.thisNode()\n\ndef grow(node=None,step=50):\n    try:\n        if not node:\n            n=nuke.selectedNode()\n        else:\n            n=node\n            n\['xpos'].setValue(n\['xpos'].getValue()-step)\n            n\['ypos'].setValue(n\['ypos'].getValue()-step)\n            n\['bdwidth'].setValue(n\['bdwidth'].getValue()+step*2)\n            n\['bdheight'].setValue(n\['bdheight'].getValue()+step*2)\n    except:\n        pass\ngrow(n,50)"}
   addUserKnob {22 shrink l " <img src=\"F_scalem.png\">" -STARTLINE T "n=nuke.thisNode()\n\ndef shrink(node=None,step=50):\n    try:\n        if not node:\n            n=nuke.selectedNode()\n        else:\n            n=node\n            n\['xpos'].setValue(n\['xpos'].getValue()+step)\n            n\['ypos'].setValue(n\['ypos'].getValue()+step)\n            n\['bdwidth'].setValue(n\['bdwidth'].getValue()-step*2)\n            n\['bdheight'].setValue(n\['bdheight'].getValue()-step*2)\n    except:\n        pass\nshrink(n,50)"}
   addUserKnob {22 colorandom l " <img src=\"ColorBars.png\">" -STARTLINE T "import colorsys, random\nn=nuke.thisNode()\nR,G,B= colorsys.hsv_to_rgb(random.random(),.1+random.random()*.15,.15+random.random()*.15)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ) )"}
   addUserKnob {22 darkgrey l "<font color=\"#232323\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.0, 0.0, 0.14]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
   addUserKnob {22 lightgrey l "<font color=\"#383838\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.0, 0.0, 0.22]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
   addUserKnob {22 red l "<font color=\"#8c3838\" size=6>■</font>" T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.0, 0.6, 0.55]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n" +STARTLINE}
   addUserKnob {22 orange l "<font color=\"#b28e59\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.1, 0.5, 0.7]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
   addUserKnob {22 yellow l "<font color=\"#ccc766\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.16, 0.5, 0.8]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
   addUserKnob {22 green l "<font color=\"#5d995b\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.33, 0.4, 0.6]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
   addUserKnob {22 cyan l "<font color=\"#72998f\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.46, 0.25, 0.6]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
   addUserKnob {22 blue l "<font color=\"#59687f\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.6, 0.3, 0.5]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
   addUserKnob {22 darkblue l "<font color=\"#63628c\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.67, 0.3, 0.55]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
   addUserKnob {22 magenta l "<font color=\"#927a99\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.8, 0.2, 0.6]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
   addUserKnob {22 pink l "<font color=\"#997a89\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.92, 0.2, 0.6]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
   addUserKnob {26 S02 l " " T " "}
   addUserKnob {26 Ftools l "" +STARTLINE T "<font color=\"#1C1C1C\"> v1.2 - Franklin VFX - 2018"}
  }
  Read {
   inputs 0
   file_type exr
   file "\[value filepath]Flares/Front/M4_front.%08d.exr"
   localizationPolicy on
   format "4096 2160 0 0 4096 2160 1 4K_DCP"
   before black
   last 143
   after black
   origlast 143
   origset true
   on_error black
   version 1
   in_colorspace scene_linear
   out_colorspace scene_linear
   name Read58
   xpos 10757
   ypos -2869
   postage_stamp false
  }
  Dot {
   name Dot48
   xpos 10791
   ypos -2756
  }
set N5e3fb010 [stack 0]
  Dot {
   name Dot49
   xpos 10948
   ypos -2756
  }
  FrameHold {
   firstFrame {{"\[if \{\[expression sort]==0\} \{return \[expression ((frame%1)<=0.50)*(1+(((frame)%1)*count))]\} \{return \[expression (((frame%1)>0.50)*(100+(((((frame+0.5)%1))*2))*count))]\}]"}}
   name FrameHold16
   label "assets x\[value count]\nsort: \[value sort]"
   xpos 10914
   ypos -2688
   addUserKnob {20 User}
   addUserKnob {4 sort M {dim bright}}
   sort bright
   addUserKnob {3 count}
   count 43
  }
  Dot {
   name Dot50
   xpos 10948
   ypos -2599
  }
push $N5e3fb010
  FrameHold {
   firstFrame {{"\[if \{\[expression sort]==0\} \{return \[expression ((frame%1)<=0.50)*(1+(((frame)%1)*count))]\} \{return \[expression (((frame%1)>0.50)*(100+(((((frame+0.5)%1))*2))*count))]\}]"}}
   name FrameHold19
   label "assets x\[value count]\nsort: \[value sort]"
   xpos 10757
   ypos -2689
   addUserKnob {20 User}
   addUserKnob {4 sort M {dim bright}}
   addUserKnob {3 count}
   count 15
  }
  Merge2 {
   inputs 2
   name Merge9
   xpos 10757
   ypos -2603
  }
  Dot {
   name Dot91
   xpos 10791
   ypos -2373
  }
  Read {
   inputs 0
   file_type exr
   file "\[value filepath]Flares/Front/M870_front.########.exr"
   localizationPolicy on
   format "4096 2160 0 0 4096 2160 1 4K_DCP"
   last 24
   origlast 24
   origset true
   on_error black
   version 24
   in_colorspace scene_linear
   out_colorspace scene_linear
   name Read49
   xpos 10468
   ypos -2873
   postage_stamp false
  }
  FrameHold {
   firstFrame {{1+((frame%1)*(count))}}
   name FrameHold25
   label "assets x\[value count]"
   xpos 10468
   ypos -2676
   addUserKnob {20 User}
   addUserKnob {3 count}
   count 24
  }
  Dot {
   name Dot89
   xpos 10502
   ypos -2373
  }
  Read {
   inputs 0
   file_type exr
   file "\[value filepath]Flares/Front/mp5_front.%08d.exr"
   localizationPolicy on
   format "4096 2160 0 0 4096 2160 1 4K_DCP"
   before black
   last 131
   after black
   origlast 131
   origset true
   on_error black
   version 1
   in_colorspace scene_linear
   out_colorspace scene_linear
   name Read60
   xpos 10027
   ypos -2872
   postage_stamp false
  }
  Dot {
   name Dot51
   xpos 10061
   ypos -2766
  }
set N575faa00 [stack 0]
  Dot {
   name Dot52
   xpos 10218
   ypos -2766
  }
  FrameHold {
   firstFrame {{"\[if \{\[expression sort]==0\} \{return \[expression ((frame%1)<=0.50)*(1+(((frame)%1)*count))]\} \{return \[expression (((frame%1)>0.50)*(100+(((((frame+0.5)%1))*2))*count))]\}]"}}
   name FrameHold15
   label "assets x\[value count]\nsort: \[value sort]"
   xpos 10184
   ypos -2698
   addUserKnob {20 User}
   addUserKnob {4 sort M {dim bright}}
   sort bright
   addUserKnob {3 count}
   count 31
  }
  Dot {
   name Dot53
   xpos 10218
   ypos -2609
  }
push $N575faa00
  FrameHold {
   firstFrame {{"\[if \{\[expression sort]==0\} \{return \[expression ((frame%1)<=0.50)*(1+(((frame)%1)*count))]\} \{return \[expression (((frame%1)>0.50)*(100+(((((frame+0.5)%1))*2))*count))]\}]"}}
   name FrameHold21
   label "assets x\[value count]\nsort: \[value sort]"
   xpos 10027
   ypos -2701
   addUserKnob {20 User}
   addUserKnob {4 sort M {dim bright}}
   addUserKnob {3 count}
   count 24
  }
  Merge2 {
   inputs 2
   name Merge10
   xpos 10027
   ypos -2613
  }
  Dot {
   name Dot90
   xpos 10061
   ypos -2373
  }
  Read {
   inputs 0
   file_type exr
   file "\[value filepath]Flares/Front/M249_front.%08d.exr"
   localizationPolicy on
   format "4096 2160 0 0 4096 2160 1 4K_DCP"
   before black
   last 120
   after black
   origlast 120
   origset true
   on_error black
   version 1
   in_colorspace scene_linear
   out_colorspace scene_linear
   name Read57
   xpos 9640
   ypos -2877
   postage_stamp false
  }
  Dot {
   name Dot42
   xpos 9674
   ypos -2786
  }
set N4c9fa620 [stack 0]
  Dot {
   name Dot43
   xpos 9831
   ypos -2786
  }
  FrameHold {
   firstFrame {{"\[if \{\[expression sort]==0\} \{return \[expression ((frame%1)<=0.50)*(1+(((frame)%1)*count))]\} \{return \[expression (((frame%1)>0.50)*(100+(((((frame+0.5)%1))*2))*count))]\}]"}}
   name FrameHold11
   label "assets x\[value count]\nsort: \[value sort]"
   xpos 9797
   ypos -2718
   addUserKnob {20 User}
   addUserKnob {4 sort M {dim bright}}
   sort bright
   addUserKnob {3 count}
   count 20
  }
  Dot {
   name Dot44
   xpos 9831
   ypos -2629
  }
push $N4c9fa620
  FrameHold {
   firstFrame {{"\[if \{\[expression sort]==0\} \{return \[expression ((frame%1)<=0.50)*(1+(((frame)%1)*count))]\} \{return \[expression (((frame%1)>0.50)*(100+(((((frame+0.5)%1))*2))*count))]\}]"}}
   name FrameHold12
   label "assets x\[value count]\nsort: \[value sort]"
   xpos 9640
   ypos -2718
   addUserKnob {20 User}
   addUserKnob {4 sort M {dim bright}}
   addUserKnob {3 count}
   count 12
  }
  Merge2 {
   inputs 2
   name Merge7
   xpos 9640
   ypos -2633
  }
  Dot {
   name Dot88
   xpos 9674
   ypos -2373
  }
  Read {
   inputs 0
   file_type exr
   file "\[value filepath]Flares/Front/M16_front.%08d.exr"
   localizationPolicy on
   format "4096 2160 0 0 4096 2160 1 4K_DCP"
   last 26
   origlast 26
   origset true
   on_error black
   version 20
   in_colorspace scene_linear
   out_colorspace scene_linear
   name Read12
   xpos 9361
   ypos -2876
   postage_stamp false
  }
  FrameHold {
   firstFrame {{1+((frame%1)*(count))}}
   name FrameHold29
   label "assets x\[value count]"
   xpos 9361
   ypos -2659
   addUserKnob {20 User}
   addUserKnob {3 count}
   count 26
  }
  Dot {
   name Dot87
   xpos 9395
   ypos -2373
  }
  Read {
   inputs 0
   file_type exr
   file "\[value filepath]Flares/Front/G2_front.%08d.exr"
   localizationPolicy on
   format "4096 2160 0 0 4096 2160 1 4K_DCP"
   before black
   last 113
   after black
   origlast 113
   origset true
   on_error black
   version 1
   in_colorspace scene_linear
   out_colorspace scene_linear
   name Read32
   xpos 8923
   ypos -2876
   postage_stamp false
  }
  Dot {
   name Dot36
   xpos 8957
   ypos -2787
  }
set N507f2a10 [stack 0]
  Dot {
   name Dot37
   xpos 9114
   ypos -2787
  }
  FrameHold {
   firstFrame {{"\[if \{\[expression sort]==0\} \{return \[expression ((frame%1)<=0.50)*(1+(((frame)%1)*count))]\} \{return \[expression (((frame%1)>0.50)*(100+(((((frame+0.5)%1))*2))*count))]\}]"}}
   name FrameHold7
   label "assets x\[value count]\nsort: \[value sort]"
   xpos 9080
   ypos -2718
   addUserKnob {20 User}
   addUserKnob {4 sort M {dim bright}}
   sort bright
   addUserKnob {3 count}
   count 13
  }
  Dot {
   name Dot38
   xpos 9114
   ypos -2630
  }
push $N507f2a10
  FrameHold {
   firstFrame {{"\[if \{\[expression sort]==0\} \{return \[expression ((frame%1)<=0.50)*(1+(((frame)%1)*count))]\} \{return \[expression (((frame%1)>0.50)*(100+(((((frame+0.5)%1))*2))*count))]\}]"}}
   name FrameHold8
   label "assets x\[value count]\nsort: \[value sort]"
   xpos 8923
   ypos -2716
   addUserKnob {20 User}
   addUserKnob {4 sort M {dim bright}}
   addUserKnob {3 count}
   count 10
  }
  Merge2 {
   inputs 2
   name Merge5
   xpos 8923
   ypos -2634
  }
  Dot {
   name Dot86
   xpos 8957
   ypos -2373
  }
  Read {
   inputs 0
   file_type exr
   file "\[value filepath]Flares/Front/AR-15_front.%08d.exr"
   localizationPolicy on
   format "4096 2160 0 0 4096 2160 1 4K_DCP"
   before black
   last 127
   after black
   origlast 127
   origset true
   on_error black
   version 1
   in_colorspace scene_linear
   out_colorspace scene_linear
   name Read25
   xpos 8517
   ypos -2867
   postage_stamp false
  }
  Dot {
   name Dot60
   xpos 8551
   ypos -2769
  }
set N531fe580 [stack 0]
  Dot {
   name Dot61
   xpos 8708
   ypos -2769
  }
  FrameHold {
   firstFrame {{"\[if \{\[expression sort]==0\} \{return \[expression ((frame%1)<=0.50)*(1+(((frame)%1)*count))]\} \{return \[expression (((frame%1)>0.50)*(100+(((((frame+0.5)%1))*2))*count))]\}]"}}
   name FrameHold30
   label "assets x\[value count]\nsort: \[value sort]"
   xpos 8674
   ypos -2700
   addUserKnob {20 User}
   addUserKnob {4 sort M {dim bright}}
   sort bright
   addUserKnob {3 count}
   count 27
  }
  Dot {
   name Dot62
   xpos 8708
   ypos -2612
  }
push $N531fe580
  FrameHold {
   firstFrame {{"\[if \{\[expression sort]==0\} \{return \[expression ((frame%1)<=0.50)*(1+(((frame)%1)*count))]\} \{return \[expression (((frame%1)>0.50)*(100+(((((frame+0.5)%1))*2))*count))]\}]"}}
   name FrameHold31
   label "assets x\[value count]\nsort: \[value sort]"
   xpos 8517
   ypos -2698
   addUserKnob {20 User}
   addUserKnob {4 sort M {dim bright}}
   addUserKnob {3 count}
   count 16
  }
  Merge2 {
   inputs 2
   name Merge13
   xpos 8517
   ypos -2616
  }
  Dot {
   name Dot85
   xpos 8551
   ypos -2373
  }
  Read {
   inputs 0
   file_type exr
   file "\[value filepath]Flares/Front/AK_front.########.exr"
   localizationPolicy on
   format "4096 2160 0 0 4096 2160 1 4K_DCP"
   last 32
   origlast 32
   origset true
   on_error black
   version 30
   in_colorspace scene_linear
   out_colorspace scene_linear
   name Read16
   xpos 8235
   ypos -2868
   postage_stamp false
  }
  FrameHold {
   firstFrame {{1+((frame%1)*(count))}}
   name FrameHold33
   label "assets x\[value count]"
   xpos 8235
   ypos -2735
   addUserKnob {20 User}
   addUserKnob {3 count}
   count 32
  }
  Dot {
   name Dot84
   xpos 8269
   ypos -2373
  }
  Read {
   inputs 0
   file_type exr
   file "\[value filepath]Flares/Front/colt45_front.%08d.exr"
   localizationPolicy on
   format "4096 2160 0 0 4096 2160 1 4K_DCP"
   before black
   last 115
   after black
   origlast 115
   origset true
   on_error black
   in_colorspace scene_linear
   out_colorspace scene_linear
   name Read28
   xpos 7811
   ypos -2873
   postage_stamp false
  }
  Dot {
   name Dot28
   xpos 7845
   ypos -2769
  }
set N4b6f8990 [stack 0]
  Dot {
   name Dot32
   xpos 8002
   ypos -2769
  }
  FrameHold {
   firstFrame {{"\[if \{\[expression sort]==0\} \{return \[expression ((frame%1)<=0.50)*(1+(((frame)%1)*count))]\} \{return \[expression (((frame%1)>0.50)*(100+(((((frame+0.5)%1))*2))*count))]\}]"}}
   name FrameHold5
   label "assets x\[value count]\nsort: \[value sort]"
   xpos 7968
   ypos -2697
   addUserKnob {20 User}
   addUserKnob {4 sort M {dim bright}}
   sort bright
   addUserKnob {3 count}
   count 15
  }
  Dot {
   name Dot31
   xpos 8002
   ypos -2611
  }
push $N4b6f8990
  FrameHold {
   firstFrame {{"\[if \{\[expression sort]==0\} \{return \[expression ((frame%1)<=0.50)*(1+(((frame)%1)*count))]\} \{return \[expression (((frame%1)>0.50)*(100+(((((frame+0.5)%1))*2))*count))]\}]"}}
   name FrameHold6
   label "assets x\[value count]\nsort: \[value sort]"
   xpos 7811
   ypos -2698
   addUserKnob {20 User}
   addUserKnob {4 sort M {dim bright}}
   addUserKnob {3 count}
   count 16
  }
  Merge2 {
   inputs 2
   name Merge3
   xpos 7811
   ypos -2615
  }
  Dot {
   name Dot83
   xpos 7845
   ypos -2373
  }
  Roto {
   inputs 0
   output alpha
   curves {{{v x3f99999a}
  {f 0}
  {n
   {layer Root
    {f 2097152}
    {t x45100000 x44a20000}
    {a pt1x 0 pt1y 0 pt2x 0 pt2y 0 pt3x 0 pt3y 0 pt4x 0 pt4y 0 ptex00 0 ptex01 0 ptex02 0 ptex03 0 ptex10 0 ptex11 0 ptex12 0 ptex13 0 ptex20 0 ptex21 0 ptex22 0 ptex23 0 ptex30 0 ptex31 0 ptex32 0 ptex33 0 ptof1x 0 ptof1y 0 ptof2x 0 ptof2y 0 ptof3x 0 ptof3y 0 ptof4x 0 ptof4y 0 pterr 0 ptrefset 0 ptmot x40800000 ptref 0}
    {curvegroup Ellipse1 512 bezier
     {{cc
       {f 8192}
       {p
        {{r
       {{{1 xc232ada0 -}	7}
        {{x41000000 xc232adc0 xb9400000 1 0 1}	1}
        {{x41100000 xc232adc0}	1}}}
      {r
       {{{1 0 -}	8}
        {{x41100000 0}	1}}}}
        {{{1 x44fbb333 -}
       {x40000000}
       {x40400000}
       {x40800000 x45009998 x41facca0 1 x41facca0 1}
       {x40a00000 x4501c4cc -}
       {x40c00000 x4500b4cb -}
       {x40e00000 x45046ccb x42606640 1 x42606640 1}
       {x41000000 x4507b7fd -}
       {x41100000 x45071b30 -}}
      {{1 x444fb9ca -}
       {x40000000}
       {x40400000}
       {x40800000 x4439b9ca xc23799c0 1 xc23799c0 1}
       {x40a00000 x4435e696 -}
       {x40c00000 x44497362 x42813334 1 x42813334 1}
       {x40e00000 x44563363 -}
       {x41000000 x443d202f -}
       {x41100000 x4447a02e -}}}
        {{{1 x42ac4bf0 -}
       {x40000000}
       {x40400000}
       {x40800000}
       {x40c00000}
       {x40e00000 x42ac4be0 -}
       {x41000000}
       {x41100000 x42ac4be0}}
      {{1 0 -}
       {x40000000}
       {x40400000}
       {x40800000}
       {x40c00000}
       {x40e00000}
       {x41000000}
       {x41100000 0}}}
        {{{1 xc2836340 0 1 x414ff600 1}
       {x40000000 xc2641d80 -}
       {x40400000}
       {x40800000 xc1cc8536 -}
       {x40c00000}
       {x40e00000 xc1cc8500 -}
       {x41000000}
       {x41100000 xc1cc8500}}
      {{1 xc25e63c0 0 1 x40f0cd80 1}
       {x40000000 xc24a52a0 -}
       {x40400000}
       {x40800000 xc2055d6c -}
       {x40c00000}
       {x40e00000}
       {x41000000}
       {x41100000 xc2055d6c}}}
        {{{1 x450d0a9a 0 1 xc0b49c00 1}
       {x40000000 x450cce66 -}
       {x40400000 x450dae66 -}
       {x40800000 x450bce66 xc1c99980 1 xc1c99980 1}
       {x40a00000 x450a8800 -}
       {x40c00000 x450c719a x41959980 1 x41959980 1}
       {x40e00000 x450cde66 x41a33200 1 x41a33200 1}
       {x41000000 x450f8666 x42563380 1 0 1}
       {x41100000 x450f8666}}
      {{1 x44663b68 0 1 xc21a2410 1}
       {x40000000 x445dd334 xc1be8340 1 xc1be8340 1}
       {x40400000 x445a5334 -}
       {x40800000 x4463d334 x40a33500 1 x40a33500 1}
       {x40a00000 x44644002 -}
       {x40c00000 x445b5335 -}
       {x40e00000 x4462f99d -}
       {x41000000 x44534003 xc2bcb338 1 0 1}
       {x41100000 x44534003}}}
        {{{1 x425fd880 0 1 xc1312880 1}
       {x40000000 x424251c0 -}
       {x40400000}
       {x40800000 x41cc8535 -}
       {x40c00000}
       {x40e00000 x41cc8500 -}
       {x41000000}
       {x41100000 x41cc8500}}
      {{1 x423d7160 0 1 xc0cd2000 1}
       {x40000000 x422c5960 -}
       {x40400000}
       {x40800000 x42055d6c -}
       {x40c00000}
       {x40e00000}
       {x41000000}
       {x41100000 x42055d6c}}}
        {{{1 0 -}
       {x40000000}
       {x40400000}
       {x40800000}
       {x40c00000}
       {x40e00000}
       {x41000000}
       {x41100000 0}}
      {{1 xc28bc700 -}
       {x40000000}
       {x40400000}
       {x40800000}
       {x40c00000}
       {x40e00000 xc28bc6e8 -}
       {x41000000}
       {x41100000 xc28bc6e8}}}
        {{{1 x4512e0fe 0 1 xc241cc80 1}
       {x40000000 x4510dc32 -}
       {x40400000}
       {x40800000}
       {x40c00000 x450ea0fe -}
       {x40e00000 x45127431 x41f4cc80 1 x41f4cc80 1}
       {x41000000 x45131764 -}
       {x41100000 x45131764}}
      {{1 x44899ccd 0 1 xc1e066a0 1}
       {x40000000 x44874666 -}
       {x40400000}
       {x40800000}
       {x40c00000 x4484b999 -}
       {x40e00000 x4486d998 -}
       {x41000000 x4481f664 xc26a99c0 1 0 1}
       {x41100000 x4481f664}}}
        {{{1 0 -}
       {x40000000}
       {x40400000}
       {x40800000}
       {x40c00000}
       {x40e00000}
       {x41000000}
       {x41100000 0}}
      {{1 x42140ae0 -}
       {x40000000}
       {x40400000}
       {x40800000}
       {x40c00000}
       {x40e00000 x42140b00 -}
       {x41000000}
       {x41100000 x42140b00}}}
        {{{1 x41b47800 -}
       {x40000000}
       {x40400000}
       {x40800000}
       {x40c00000}
       {x40e00000}
       {x41000000}
       {x41100000 x41b47800}}
      {{1 xc204f560 -}
       {x40000000}
       {x40400000}
       {x40800000}
       {x40c00000}
       {x40e00000 xc204f580 -}
       {x41000000}
       {x41100000 xc204f580}}}
        {{{1 x451151b6 -}
       {x40000000}
       {x40400000 x450bf1b6 -}
       {x40800000 x450e71b6 x41ff3340 1 x41ff3340 1}
       {x40a00000 x450fee83 -}
       {x40c00000 x450d61b7 -}
       {x40e00000 x450ef9b7 x41c532c0 1 x41c532c0 1}
       {x41000000 x45107682 x41bafee0 1 0 1}
       {x41100000 x45107682}}
      {{1 x44985573 -}
       {x40000000}
       {x40400000 x44991573 -}
       {x40800000 x4498d573 xc0c00000 1 xc0c00000 1}
       {x40a00000 x4492abd9 xc1fb99a0 1 xc1fb99a0 1}
       {x40c00000 x4490f8a6 -}
       {x40e00000 x449318a6 -}
       {x41000000 x4490f8a5 xc1cc0060 1 0 1}
       {x41100000 x4490f8a5}}}
        {{{1 xc1f93880 -}
       {x40000000}
       {x40400000}
       {x40800000}
       {x40c00000}
       {x40e00000}
       {x41000000}
       {x41100000 xc1f93880}}
      {{1 x42379be0 -}
       {x40000000}
       {x40400000}
       {x40800000}
       {x40c00000}
       {x40e00000 x42379bc0 -}
       {x41000000}
       {x41100000 x42379bc0}}}
        {{{1 x423b1700 -}
       {x40000000}
       {x40400000}
       {x40800000}
       {x40c00000}
       {x40e00000}
       {x41000000}
       {x41100000 x423b1700}}
      {{1 xc208de20 -}
       {x40000000}
       {x40400000}
       {x40800000}
       {x40c00000}
       {x40e00000 xc208de00 -}
       {x41000000}
       {x41100000 xc208de00}}}
        {{{1 x4508c5f8 0 1 x41cbff40 1}
       {x40000000 x4509d5f7 -}
       {x40400000 x450735f7 xc1400300 1 xc1400300 1}
       {x40800000 x4506f5f6 -}
       {x40a00000 x450c6128 -}
       {x40c00000 x450a5c5c -}
       {x40e00000 x450bf45c x41880040 1 x41880040 1}
       {x41000000 x450c7c5d x40880280 1 0 1}
       {x41100000 x450c7c5d}}
      {{1 x44a60814 0 1 x412c0000 1}
       {x40000000 x44a82814 x41ec0000 1 x41ec0000 1}
       {x40400000 x44ad6814 -}
       {x40800000 x44a5e814 xc2a20000 1 xc2a20000 1}
       {x40a00000 x44992814 -}
       {x40c00000 x449adb47 x4174cc80 1 x4174cc80 1}
       {x40e00000 x449cfb46 -}
       {x41000000 x449b11ac xc1b799c0 1 0 1}
       {x41100000 x449b11ac}}}
        {{r
       {{{1 xc1c43600 -}	8}
        {{x41100000 xc1c43600}	1}}}
      {r
       {{{1 x418f8a80 -}	8}
        {{x41100000 x418f8a80}	1}}}}
        {{{1 x41b7c200 0 1 xc063d600 1}
       {x40000000 x41a17f00 xbf9d3800 1 xbf9d3800 1}
       {x40400000 x419e3880 -}
       {x40800000 x41c8c880 -}
       {x40a00000}
       {x40c00000}
       {x40e00000}
       {x41000000}
       {x41100000 x41c8c880}}
      {{1 xc1553580 0 1 x412defe0 1}
       {x40000000 xc04f3000 x41085cc0 1 x41085cc0 1}
       {x40400000 x406e1000 -}
       {x40800000 xc13d4e80 -}
       {x40a00000}
       {x40c00000}
       {x40e00000 xc13d4e00 -}
       {x41000000}
       {x41100000 xc13d4e00}}}
        {{{1 x450463e0 0 1 x42051700 1}
       {x40000000 x4505c6c8 -}
       {x40400000 x450332fa xc2164a00 1 xc2164a00 1}
       {x40800000 x45011478 -}
       {x40a00000 x4506cade -}
       {x40c00000 x4504fc78 -}
       {x40e00000 x450ab944 -}
       {x41000000 x4508b476 xc241cd40 1 0 1}
       {x41100000 x4508b476}}
      {{1 x44ac06c4 0 1 xc02b5400 1}
       {x40000000 x44abcda8 -}
       {x40400000 x44af6f1a -}
       {x40800000 x44a80dc1 xc25048c0 1 xc25048c0 1}
       {x40a00000 x44a26a8e -}
       {x40c00000 x44a59a8f x40a33200 1 x40a33200 1}
       {x40e00000 x44a5d0f5 -}
       {x41000000 x449e2a8f xc2b79990 1 0 1}
       {x41100000 x449e2a8f}}}
        {{{1 xc1fdc300 0 1 x409d5600 1}
       {x40000000 xc1df0480 x3fd90800 1 x3fd90800 1}
       {x40400000 xc1da7f00 -}
       {x40800000 xc20aa2c0 -}
       {x40a00000}
       {x40c00000}
       {x40e00000}
       {x41000000}
       {x41100000 xc20aa2c0}}
      {{1 x41933680 0 1 xc1703040 1}
       {x40000000 x408f1000 xc13c4e80 1 xc13c4e80 1}
       {x40400000 xc0a46000 -}
       {x40800000 x4182b600 -}
       {x40a00000}
       {x40c00000}
       {x40e00000}
       {x41000000}
       {x41100000 x4182b600}}}
        {{{1 x421b7340 -}
       {x40000000}
       {x40400000 x421b7320 -}
       {x40800000}
       {x40a00000}
       {x40c00000}
       {x40e00000 x421b7340 -}
       {x41000000}
       {x41100000 x421b7340}}
      {r
       {{{1 0 -}	8}
        {{x41100000 0}	1}}}}
        {{{1 x44fbe99a 0 1 x42379960 1}
       {x40000000 x44ffbccc -}
       {x40400000 x44fabccd xc20c0000 1 xc20c0000 1}
       {x40800000 x44f6fccc -}
       {x40a00000 x45007ccc -}
       {x40c00000 x44fb3cca -}
       {x40e00000 x45039199 x4274ccc0 1 x4274ccc0 1}
       {x41000000 x450544cb x41233180 1 0 1}
       {x41100000 x450544cb}}
      {{1 x44afd31a 0 1 xc241cce0 1}
       {x40000000 x44abc980 -}
       {x40400000 x44acc980 x41400000 1 x41400000 1}
       {x40800000 x44aec980 -}
       {x40a00000 x44a4ccb3 -}
       {x40c00000 x44a7c64d x41233200 1 x41233200 1}
       {x40e00000 x44a83319 -}
       {x41000000 x44a7597e xc1233440 1 0 1}
       {x41100000 x44a7597e}}}
        {{{1 xc27f4120 -}
       {x40000000}
       {x40400000}
       {x40800000}
       {x40c00000}
       {x40e00000}
       {x41000000}
       {x41100000 xc27f4120}}
      {{1 0 -}
       {x40000000}
       {x40400000}
       {x40800000}
       {x40c00000}
       {x40e00000}
       {x41000000}
       {x41100000 0}}}
        {{{1 x423f3700 -}
       {x40000000}
       {x40400000}
       {x40800000}
       {x40c00000}
       {x40e00000}
       {x41000000}
       {x41100000 x423f3700}}
      {{1 x42057c40 -}
       {x40000000}
       {x40400000}
       {x40800000}
       {x40c00000}
       {x40e00000}
       {x41000000}
       {x41100000 x42057c40}}}
        {{{1 x44e409a9 0 1 x42849990 1}
       {x40000000 x44e9900f -}
       {x40400000}
       {x40800000}
       {x40a00000 x44f1d9aa -}
       {x40c00000 x44eb0cde -}
       {x40e00000 x44f91342 -}
       {x41000000 x44f7600e xc1a33380 1 0 1}
       {x41100000 x44f78cdb}}
      {{1 x44abf3d1 0 1 xc2b28000 1}
       {x40000000 x44a483d1 -}
       {x40400000}
       {x40800000}
       {x40a00000 x44a29a37 -}
       {x40c00000 x44a593d0 x421c6670 1 x421c6670 1}
       {x40e00000 x44ac609e -}
       {x41000000 x44a6a3d1 xc289b338 1 0 1}
       {x41100000 x44ac109d}}}
        {{{1 xc1f7d0c0 -}
       {x40000000}
       {x40400000}
       {x40800000}
       {x40c00000}
       {x40e00000}
       {x41000000}
       {x41100000 xc1f7d0c0}}
      {{1 xc1acff40 -}
       {x40000000}
       {x40400000}
       {x40800000}
       {x40c00000}
       {x40e00000 xc1acff80 -}
       {x41000000}
       {x41100000 xc1acff80}}}
        {{{1 x417e6600 0 1 x4217f6e0 1}
       {x40000000 x4224e8c0 -}
       {x40400000}
       {x40800000}
       {x40c00000}
       {x40e00000}
       {x41000000}
       {x41100000 x4224e8c0}}
      {{1 x42263140 0 1 xc19baf00 1}
       {x40000000 x41e49880 -}
       {x40400000}
       {x40800000}
       {x40c00000}
       {x40e00000}
       {x41000000}
       {x41100000 x41e49880}}}
        {{{1 x44db5432 0 1 xc273c960 1}
       {x40000000 x44d64000 -}
       {x40400000 x44dd4000 x424c0010 1 x424c0010 1}
       {x40800000 x44e30001 x4174ce00 1 x4174ce00 1}
       {x40a00000 x44e3a335 -}
       {x40c00000 x44db9003 -}
       {x40e00000 x44eb1335 -}
       {x41000000 x44e92998 xc1b79ae0 1 0 1}
       {x41100000 x44e92998}}
      {{1 x449f866c 0 1 x40bb2c00 1}
       {x40000000 x44a00334 -}
       {x40400000 x449a8334 xc2240000 1 xc2240000 1}
       {x40800000 x4495c334 -}
       {x40a00000 x4496d334 x41b799a0 1 x41b799a0 1}
       {x40c00000 x449b8001 x422d6670 1 x422d6670 1}
       {x40e00000 x44a1a99b x42343330 1 x42343330 1}
       {x41000000 x44a6c334 x421ab318 1 0 1}
       {x41100000 x44a6c334}}}
        {{{1 xc158b600 0 1 xc2017320 1}
       {x40000000 xc20c7a40 -}
       {x40400000}
       {x40800000}
       {x40c00000}
       {x40e00000}
       {x41000000}
       {x41100000 xc20c7a40}}
      {{1 xc20d9240 0 1 x41849e40 1}
       {x40000000 xc1c2bb00 -}
       {x40400000}
       {x40800000}
       {x40c00000}
       {x40e00000}
       {x41000000}
       {x41100000 xc1c2bb00}}}
        {{{1 x408ac100 0 1 x39400000 1}
       {x40000000 x408ac200 -}
       {x40400000}
       {x40800000}
       {x40c00000}
       {x40e00000}
       {x41000000}
       {x41100000 x408ac200}}
      {{1 x42154f40 0 1 x39400000 1}
       {x40000000 x42154f60 -}
       {x40400000}
       {x40800000}
       {x40c00000}
       {x40e00000 x42154f40 -}
       {x41000000}
       {x41100000 x42154f40}}}
        {{{1 x44d806af 0 1 xc296a068 1}
       {x40000000 x44d1c000 -}
       {x40400000 x44d68000 x424ffff0 1 x424ffff0 1}
       {x40800000 x44debfff x4174cb00 1 x4174cb00 1}
       {x40a00000 x44df6331 -}
       {x40c00000 x44d93997 -}
       {x40e00000 x44e84ffe -}
       {x41000000 x44df632e xc2d63380 1 0 1}
       {x41100000 x44df632e}}
      {{1 x449187ae 0 1 xc15b5c40 1}
       {x40000000 x44902333 xc0c00000 1 xc0c00000 1}
       {x40400000 x448fe333 xc0c00000 1 xc0c00000 1}
       {x40800000 x448c2333 -}
       {x40a00000 x4491a999 x41a332c0 1 x41a332c0 1}
       {x40c00000 x44928332 x41a332c0 1 x41a332c0 1}
       {x40e00000 x449a6000 -}
       {x41000000 x44995000 xc14c0000 1 0 1}
       {x41100000 x44995000}}}
        {{{1 xc016d200 -}
       {x40000000}
       {x40400000}
       {x40800000}
       {x40c00000}
       {x40e00000}
       {x41000000}
       {x41100000 xc016d200}}
      {{1 xc1a24b00 -}
       {x40000000}
       {x40400000}
       {x40800000}
       {x40c00000}
       {x40e00000}
       {x41000000}
       {x41100000 xc1a24b00}}}
        {{{1 0 -}
       {x40000000}
       {x40400000}
       {x40800000}
       {x40c00000}
       {x40e00000}
       {x41000000}
       {x41100000 0}}
      {{1 x4191dac0 -}
       {x40000000}
       {x40400000}
       {x40800000}
       {x40c00000}
       {x40e00000 x4191db00 -}
       {x41000000}
       {x41100000 x4191db00}}}
        {{{1 x44d7979e 0 1 xc1f4cc80 1}
       {x40000000 x44d50ad2 -}
       {x40400000 x44d6cad2 x41e7ffe0 1 x41e7ffe0 1}
       {x40800000 x44dc4ad1 -}
       {x40a00000 x44d8ae05 -}
       {x40c00000}
       {x40e00000 x44e3179f -}
       {x41000000 x44dc8137 xc29e19c0 1 0 1}
       {x41100000 x44dc8137}}
      {{1 x448a4000 0 1 xc27f0000 1}
       {x40000000 x4484f000 -}
       {x40400000 x44853000 -}
       {x40800000 x4483f000 -}
       {x40a00000 x448a1999 -}
       {x40c00000}
       {x40e00000 x448f3331 -}
       {x41000000 x448d4998 xc1b79960 1 0 1}
       {x41100000 x448d4998}}}
        {{{1 0 -}
       {x40000000}
       {x40400000}
       {x40800000}
       {x40c00000}
       {x40e00000}
       {x41000000}
       {x41100000 0}}
      {{1 xc1b65180 -}
       {x40000000}
       {x40400000}
       {x40800000}
       {x40c00000}
       {x40e00000}
       {x41000000}
       {x41100000 xc1b65180}}}
        {{{1 x410f6f80 0 1 xc1a33320 1}
       {x40000000 xc0945400 -}
       {x40400000}
       {x40800000}
       {x40c00000 x41280200 -}
       {x40e00000}
       {x41000000}
       {x41100000 x41280200}}
      {{1 x419bd040 0 1 x418ecce0 1}
       {x40000000 x41fb0380 -}
       {x40400000}
       {x40800000}
       {x40c00000 x41f80000 -}
       {x40e00000}
       {x41000000}
       {x41100000 x41f80000}}}
        {{{1 x44d50776 0 1 x425a3310 1}
       {x40000000 x44d99331 -}
       {x40400000 x44d8532f -}
       {x40800000 x44d9932e -}
       {x40a00000 x44d5f662 -}
       {x40c00000 x44d8effc x419599a0 1 x419599a0 1}
       {x40e00000 x44daa32f x41159940 1 x41159940 1}
       {x41000000 x44db4661 x403e6380 1 0 1}
       {x41100000 x44db4661}}
      {{1 x4482694f 0 1 xc1d6e8c0 1}
       {x40000000 x447e2666 xc1d2c380 1 xc1d2c380 1}
       {x40400000 x4477a666 xc1b00000 1 xc1b00000 1}
       {x40800000 x44732666 -}
       {x40a00000 x44832333 -}
       {x40c00000 x44806000 -}
       {x40e00000 x44872ccd -}
       {x41000000 x44828000 xc2606670 1 0 1}
       {x41100000 x44828000}}}
        {{{1 xc10f7000 0 1 x41a33380 1}
       {x40000000 x40945400 -}
       {x40400000}
       {x40800000}
       {x40c00000 xc122cf80 -}
       {x40e00000}
       {x41000000}
       {x41100000 xc122cf80}}
      {{1 xc19bd040 0 1 xc18ecce0 1}
       {x40000000 xc1fb0380 -}
       {x40400000}
       {x40800000}
       {x40c00000 xc1f05340 x39400000 1 x39400000 1}
       {x40e00000 xc1f05320 -}
       {x41000000}
       {x41100000 xc1f05320}}}
        {{{1 xc124d200 -}
       {x40000000}
       {x40400000}
       {x40800000}
       {x40c00000}
       {x40e00000}
       {x41000000}
       {x41100000 xc124d200}}
      {{1 x41976920 0 1 x38c00000 1}
       {x40000000 x41976940 -}
       {x40400000}
       {x40800000}
       {x40c00000}
       {x40e00000}
       {x41000000}
       {x41100000 x41976940}}}
        {{{1 x44d465c4 0 1 x42a33350 1}
       {x40000000 x44db3292 -}
       {x40400000 x44daf292 -}
       {x40800000 x44de3294 x42133360 1 x42133360 1}
       {x40a00000 x44e425c8 -}
       {x40c00000 x44c95f61 -}
       {x40e00000 x44d68c2d x42b27fe8 1 x42b27fe8 1}
       {x41000000 x44dfaf5e x42820ca4 1 0 1}
       {x41100000 x44dfaf5e}}
      {{1 x44769821 0 1 xc249fff8 1}
       {x40000000 x446ab1bb xc2273330 1 xc2273330 1}
       {x40400000 x4461b1bb xc20c0000 1 xc20c0000 1}
       {x40800000 x445931bb -}
       {x40a00000 x44628b54 -}
       {x40c00000 x44585820 -}
       {x40e00000 x448135a9 -}
       {x41000000 x446e04ec xc2f4ccc8 1 0 1}
       {x41100000 x446e04ec}}}
        {{r
       {{{1 x416ffb00 -}	8}
        {{x41100000 x416ffb00}	1}}}
      {r
       {{{1 xc1dc7460 -}	8}
        {{x41100000 xc1dc7460}	1}}}}
        {{{1 xc1f9abc0 0 1 x412ee040 1}
       {x40000000 xc1bf6100 -}
       {x40400000 xc1c18580 xbf4db000 1 xbf4db000 1}
       {x40800000 xc1e56c40 -}
       {x40a00000 xc1d4cf00 -}
       {x40c00000}
       {x40e00000}
       {x41000000}
       {x41100000 xc1d4cf00}}
      {{1 x41b04ea0 0 1 xc0d874a0 1}
       {x40000000 x417a9a00 xc0b32a40 1 xc0b32a40 1}
       {x40400000 x412d7300 xc0987a00 1 xc0987a00 1}
       {x40800000 x40c44000 -}
       {x40a00000 x419096a0 -}
       {x40c00000}
       {x40e00000}
       {x41000000}
       {x41100000 x419096a0}}}
        {{{1 x44dd586e 0 1 x427ae8a0 1}
       {x40000000 x44e2929c -}
       {x40400000 x44e26169 -}
       {x40800000 x44e5bfff x4119f480 1 x4119f480 1}
       {x40a00000 x44e626a2 -}
       {x40c00000 x44e32d08 -}
       {x40e00000 x44ea66a3 -}
       {x41000000 x44e956a1 xc14c0180 1 0 1}
       {x41100000 x44e956a1}}
      {{1 x4463d24d 0 1 xc21b4780 1}
       {x40000000 x445aac81 xc2008740 1 xc2008740 1}
       {x40400000 x4453c165 xc21d6408 1 xc21d6408 1}
       {x40800000 x44470000 -}
       {x40a00000 x44482210 x41598c00 1 x41598c00 1}
       {x40c00000 x44503544 x421c6670 1 x421c6670 1}
       {x40e00000 x445baede -}
       {x41000000 x444da877 xc2a84cd4 1 0 1}
       {x41100000 x444da877}}}
        {{{1 x41e67780 0 1 xc1216e80 1}
       {x40000000 x41b0a800 -}
       {x40400000 x41b2a2c0 x3f3e0800 1 x3f3e0800 1}
       {x40800000 x41d3c680 -}
       {x40a00000 x41c470c0 -}
       {x40c00000}
       {x40e00000}
       {x41000000}
       {x41100000 x41c470c0}}
      {{1 xc1a2bec0 0 1 x40c7cdc0 1}
       {x40000000 xc1675340 x40a56200 1 x40a56200 1}
       {x40400000 xc1201b80 x408cbfc0 1 x408cbfc0 1}
       {x40800000 xc0b52700 -}
       {x40a00000 xc1857780 -}
       {x40c00000}
       {x40e00000}
       {x41000000}
       {x41100000 xc1857780}}}
        {{{1 xc20cb3c0 0 1 x41347d40 1}
       {x40000000 xc1dd3dc0 -}
       {x40400000 xc1df7440 xbf547000 1 xbf547000 1}
       {x40800000 xc1f35c40 -}
       {x40a00000 xc1f35c00 -}
       {x40c00000}
       {x40e00000}
       {x41000000}
       {x41100000 xc1f35c00}}
      {{1 x4155a580 0 1 xc0df6680 1}
       {x40000000 x40d8b900 xc0b8e900 1 xc0b8e900 1}
       {x40400000 x3fe5e400 -}
       {x40800000 x41142d00 -}
       {x40a00000}
       {x40c00000}
       {x40e00000}
       {x41000000}
       {x41100000 x41142d00}}}
        {{{1 x44e990d5 0 1 x41e5c920 1}
       {x40000000 x44ebf598 -}
       {x40400000 x44ebdf11 -}
       {x40800000 x44f19451 -}
       {x40a00000 x44f09450 -}
       {x40c00000}
       {x40e00000 x44fc7ab7 -}
       {x41000000 x44fa911d -}
       {x41100000 x44fa6451 -}}
      {{1 x44570c56 0 1 xc18e3508 1}
       {x40000000 x4452dc02 xc16b6ae0 1 xc16b6ae0 1}
       {x40400000 x444fb0ff xc18ea800 1 xc18ea800 1}
       {x40800000 x4449f182 xc209fbe8 1 xc209fbe8 1}
       {x40a00000 x443e7182 -}
       {x40c00000}
       {x40e00000 x4436cb1c xc12332c0 1 xc12332c0 1}
       {x41000000 x4435f183 -}
       {x41100000 x44407183 -}}}
        {{{1 x42436b80 0 1 xc17aad00 1}
       {x40000000 x4219a400 -}
       {x40400000 x421b2d20 x3f936c00 1 x3f936c00 1}
       {x40800000 x42290000 -}
       {x40a00000}
       {x40c00000}
       {x40e00000}
       {x41000000 x42290020 x39400000 1 0 1}
       {x41100000 x42290020}}
      {{1 xc1945d80 0 1 x411b2290 1}
       {x40000000 xc1168100 x410068e0 1 x410068e0 1}
       {x40400000 xc01fa500 -}
       {x40800000 xc14dcc80 -}
       {x40a00000}
       {x40c00000}
       {x40e00000}
       {x41000000}
       {x41100000 xc14dcc80}}}}}
      {cc
       {f 8192}
       {p
        {{r
       {{{1 xc232ada0 -}	7}
        {{x41000000 xc232adc0 xb9400000 1 0 1}	1}
        {{x41100000 xc232adc0}	1}}}
      {r
       {{{1 0 -}	8}
        {{x41100000 0}	1}}}}
        {{r
       {{{1 0 -}	8}
        {{x41100000 0}	1}}}
      {r
       {{{1 0 -}	8}
        {{x41100000 0}	1}}}}
        {{r
       {{{1 x42ac4bf0 -}	3}
        {{x40800000 x42ac4c00 -}	5}
        {{x41100000 x42ac4c00}	1}}}
      {r
       {{{1 0 -}	8}
        {{x41100000 0}	1}}}}
        {{{1 xc2836340 0 1 x414ff600 1}
       {x40000000 xc2641d80 -}
       {x40400000}
       {x40800000 xc1cc8536 -}
       {x40c00000}
       {x40e00000 xc1cc8500 -}
       {x41000000}
       {x41100000 xc1cc8500}}
      {{1 xc25e63c0 0 1 x40f0cd80 1}
       {x40000000 xc24a52a0 -}
       {x40400000}
       {x40800000 xc2055d6c -}
       {x40c00000}
       {x40e00000}
       {x41000000}
       {x41100000 xc2055d6c}}}
        {{{1 0 -}
       {x40000000}
       {x40400000}
       {x40800000}
       {x40c00000}
       {x40e00000}
       {x41000000}
       {x41100000 0}}
      {{1 0 -}
       {x40000000}
       {x40400000}
       {x40800000}
       {x40c00000}
       {x40e00000}
       {x41000000}
       {x41100000 0}}}
        {{{1 x425fd880 0 1 xc1312880 1}
       {x40000000 x424251c0 -}
       {x40400000}
       {x40800000 x41cc8535 -}
       {x40c00000}
       {x40e00000 x41cc8500 -}
       {x41000000}
       {x41100000 x41cc8500}}
      {{1 x423d7160 0 1 xc0cd2000 1}
       {x40000000 x422c5960 -}
       {x40400000}
       {x40800000 x42055d6c -}
       {x40c00000}
       {x40e00000}
       {x41000000}
       {x41100000 x42055d6c}}}
        {{{1 0 -}
       {x40000000}
       {x40400000}
       {x40800000}
       {x40c00000}
       {x40e00000}
       {x41000000}
       {x41100000 0}}
      {{1 xc28bc700 -}
       {x40000000}
       {x40400000}
       {x40800000}
       {x40c00000}
       {x40e00000 xc28bc6e8 -}
       {x41000000}
       {x41100000 xc28bc6e8}}}
        {{{1 0 -}
       {x40000000}
       {x40400000}
       {x40800000}
       {x40c00000}
       {x40e00000}
       {x41000000}
       {x41100000 0}}
      {{1 0 -}
       {x40000000}
       {x40400000}
       {x40800000}
       {x40c00000}
       {x40e00000}
       {x41000000}
       {x41100000 0}}}
        {{{1 0 -}
       {x40000000}
       {x40400000}
       {x40800000}
       {x40c00000}
       {x40e00000}
       {x41000000}
       {x41100000 0}}
      {{1 x42140ae0 -}
       {x40000000}
       {x40400000}
       {x40800000}
       {x40c00000}
       {x40e00000 x42140b00 -}
       {x41000000}
       {x41100000 x42140b00}}}
        {{{1 x41b47800 -}
       {x40000000}
       {x40400000}
       {x40800000}
       {x40c00000}
       {x40e00000}
       {x41000000}
       {x41100000 x41b47800}}
      {{1 xc204f560 -}
       {x40000000}
       {x40400000}
       {x40800000}
       {x40c00000}
       {x40e00000 xc204f580 -}
       {x41000000}
       {x41100000 xc204f580}}}
        {{{1 0 -}
       {x40000000}
       {x40400000}
       {x40800000}
       {x40c00000}
       {x40e00000}
       {x41000000}
       {x41100000 0}}
      {{1 0 -}
       {x40000000}
       {x40400000}
       {x40800000}
       {x40c00000}
       {x40e00000}
       {x41000000}
       {x41100000 0}}}
        {{{1 xc1f93880 -}
       {x40000000}
       {x40400000}
       {x40800000}
       {x40c00000}
       {x40e00000}
       {x41000000}
       {x41100000 xc1f93880}}
      {{1 x42379be0 -}
       {x40000000}
       {x40400000}
       {x40800000}
       {x40c00000}
       {x40e00000 x42379bc0 -}
       {x41000000}
       {x41100000 x42379bc0}}}
        {{r
       {{{1 x423b1700 -}	8}
        {{x41100000 x423b1700}	1}}}
      {r
       {{{1 xc208de20 -}	6}
        {{x40e00000 xc208de00 -}	2}
        {{x41100000 xc208de00}	1}}}}
        {{r
       {{{1 0 -}	8}
        {{x41100000 0}	1}}}
      {r
       {{{1 0 -}	8}
        {{x41100000 0}	1}}}}
        {{r
       {{{1 xc1c43600 -}	8}
        {{x41100000 xc1c43600}	1}}}
      {r
       {{{1 x418f8a80 -}	8}
        {{x41100000 x418f8a80}	1}}}}
        {{{1 x41b7c200 0 1 xc063d600 1}
       {x40000000 x41a17f00 xbf9d3800 1 xbf9d3800 1}
       {x40400000 x419e3880 -}
       {x40800000 x41c8c880 -}
       {x40a00000}
       {x40c00000}
       {x40e00000}
       {x41000000}
       {x41100000 x41c8c880}}
      {{1 xc1553580 0 1 x412defe0 1}
       {x40000000 xc04f3000 x41085cc0 1 x41085cc0 1}
       {x40400000 x406e1000 -}
       {x40800000 xc13d4e80 -}
       {x40a00000}
       {x40c00000}
       {x40e00000 xc13d4e00 -}
       {x41000000}
       {x41100000 xc13d4e00}}}
        {{r
       {{{1 0 -}	8}
        {{x41100000 0}	1}}}
      {r
       {{{1 0 -}	8}
        {{x41100000 0}	1}}}}
        {{{1 xc1fdc300 0 1 x409d5600 1}
       {x40000000 xc1df0480 x3fd90800 1 x3fd90800 1}
       {x40400000 xc1da7f00 -}
       {x40800000 xc20aa2c0 -}
       {x40a00000}
       {x40c00000}
       {x40e00000}
       {x41000000}
       {x41100000 xc20aa2c0}}
      {{1 x41933680 0 1 xc1703040 1}
       {x40000000 x408f1000 xc13c4e80 1 xc13c4e80 1}
       {x40400000 xc0a46000 -}
       {x40800000 x4182b600 -}
       {x40a00000}
       {x40c00000}
       {x40e00000}
       {x41000000}
       {x41100000 x4182b600}}}
        {{{1 x421b7340 -}
       {x40000000}
       {x40400000 x421b7320 -}
       {x40800000}
       {x40a00000}
       {x40c00000}
       {x40e00000 x421b7340 -}
       {x41000000}
       {x41100000 x421b7340}}
      {r
       {{{1 0 -}	8}
        {{x41100000 0}	1}}}}
        {{r
       {{{1 0 -}	8}
        {{x41100000 0}	1}}}
      {r
       {{{1 0 -}	8}
        {{x41100000 0}	1}}}}
        {{r
       {{{1 xc27f4120 -}	8}
        {{x41100000 xc27f4120}	1}}}
      {r
       {{{1 0 -}	8}
        {{x41100000 0}	1}}}}
        {{{1 x423f3700 -}
       {x40000000}
       {x40400000}
       {x40800000}
       {x40c00000}
       {x40e00000}
       {x41000000}
       {x41100000 x423f3700}}
      {{1 x42057c40 -}
       {x40000000}
       {x40400000}
       {x40800000}
       {x40c00000}
       {x40e00000}
       {x41000000}
       {x41100000 x42057c40}}}
        {{{1 0 -}
       {x40000000}
       {x40400000}
       {x40800000}
       {x40c00000}
       {x40e00000}
       {x41000000}
       {x41100000 0}}
      {{1 0 -}
       {x40000000}
       {x40400000}
       {x40800000}
       {x40c00000}
       {x40e00000}
       {x41000000}
       {x41100000 0}}}
        {{{1 xc1f7d0c0 -}
       {x40000000}
       {x40400000}
       {x40800000}
       {x40c00000}
       {x40e00000}
       {x41000000}
       {x41100000 xc1f7d0c0}}
      {{1 xc1acff40 -}
       {x40000000}
       {x40400000}
       {x40800000}
       {x40c00000}
       {x40e00000 xc1acff80 -}
       {x41000000}
       {x41100000 xc1acff80}}}
        {{{1 x417e6600 0 1 x4217f6e0 1}
       {x40000000 x4224e8c0 -}
       {x40400000}
       {x40800000}
       {x40c00000}
       {x40e00000}
       {x41000000}
       {x41100000 x4224e8c0}}
      {{1 x42263140 0 1 xc19baf00 1}
       {x40000000 x41e49880 -}
       {x40400000}
       {x40800000}
       {x40c00000}
       {x40e00000}
       {x41000000}
       {x41100000 x41e49880}}}
        {{{1 0 -}
       {x40000000}
       {x40400000}
       {x40800000}
       {x40c00000}
       {x40e00000}
       {x41000000}
       {x41100000 0}}
      {{1 0 -}
       {x40000000}
       {x40400000}
       {x40800000}
       {x40c00000}
       {x40e00000}
       {x41000000}
       {x41100000 0}}}
        {{{1 xc158b600 0 1 xc2017320 1}
       {x40000000 xc20c7a40 -}
       {x40400000}
       {x40800000}
       {x40c00000}
       {x40e00000}
       {x41000000}
       {x41100000 xc20c7a40}}
      {{1 xc20d9240 0 1 x41849e40 1}
       {x40000000 xc1c2bb00 -}
       {x40400000}
       {x40800000}
       {x40c00000}
       {x40e00000}
       {x41000000}
       {x41100000 xc1c2bb00}}}
        {{{1 x408ac100 0 1 x39400000 1}
       {x40000000 x408ac200 -}
       {x40400000}
       {x40800000}
       {x40c00000}
       {x40e00000}
       {x41000000}
       {x41100000 x408ac200}}
      {{1 x42154f40 0 1 x39400000 1}
       {x40000000 x42154f60 -}
       {x40400000}
       {x40800000}
       {x40c00000}
       {x40e00000 x42154f40 -}
       {x41000000}
       {x41100000 x42154f40}}}
        {{{1 0 -}
       {x40000000}
       {x40400000}
       {x40800000}
       {x40c00000}
       {x40e00000}
       {x41000000}
       {x41100000 0}}
      {{1 0 -}
       {x40000000}
       {x40400000}
       {x40800000}
       {x40c00000}
       {x40e00000}
       {x41000000}
       {x41100000 0}}}
        {{{1 xc016d200 -}
       {x40000000}
       {x40400000}
       {x40800000}
       {x40c00000}
       {x40e00000}
       {x41000000}
       {x41100000 xc016d200}}
      {{1 xc1a24b00 -}
       {x40000000}
       {x40400000}
       {x40800000}
       {x40c00000}
       {x40e00000}
       {x41000000}
       {x41100000 xc1a24b00}}}
        {{{1 0 -}
       {x40000000}
       {x40400000}
       {x40800000}
       {x40c00000}
       {x40e00000}
       {x41000000}
       {x41100000 0}}
      {{1 x4191dac0 -}
       {x40000000}
       {x40400000}
       {x40800000}
       {x40c00000}
       {x40e00000 x4191db00 -}
       {x41000000}
       {x41100000 x4191db00}}}
        {{{1 0 -}
       {x40000000}
       {x40400000}
       {x40800000}
       {x40c00000}
       {x40e00000}
       {x41000000}
       {x41100000 0}}
      {{1 0 -}
       {x40000000}
       {x40400000}
       {x40800000}
       {x40c00000}
       {x40e00000}
       {x41000000}
       {x41100000 0}}}
        {{{1 0 -}
       {x40000000}
       {x40400000}
       {x40800000}
       {x40c00000}
       {x40e00000}
       {x41000000}
       {x41100000 0}}
      {{1 xc1b65180 -}
       {x40000000}
       {x40400000}
       {x40800000}
       {x40c00000}
       {x40e00000}
       {x41000000}
       {x41100000 xc1b65180}}}
        {{{1 x410f6f80 0 1 xc1a33320 1}
       {x40000000 xc0945400 -}
       {x40400000}
       {x40800000}
       {x40c00000 x41280200 -}
       {x40e00000}
       {x41000000}
       {x41100000 x41280200}}
      {{1 x419bd040 0 1 x418ecce0 1}
       {x40000000 x41fb0380 -}
       {x40400000}
       {x40800000}
       {x40c00000 x41f80000 -}
       {x40e00000}
       {x41000000}
       {x41100000 x41f80000}}}
        {{{1 0 -}
       {x40000000}
       {x40400000}
       {x40800000}
       {x40c00000}
       {x40e00000}
       {x41000000}
       {x41100000 0}}
      {{1 0 -}
       {x40000000}
       {x40400000}
       {x40800000}
       {x40c00000}
       {x40e00000}
       {x41000000}
       {x41100000 0}}}
        {{{1 xc10f7000 0 1 x41a33380 1}
       {x40000000 x40945400 -}
       {x40400000}
       {x40800000}
       {x40c00000 xc122cf80 -}
       {x40e00000}
       {x41000000}
       {x41100000 xc122cf80}}
      {{1 xc19bd040 0 1 xc18ecce0 1}
       {x40000000 xc1fb0380 -}
       {x40400000}
       {x40800000}
       {x40c00000 xc1f05340 x39400000 1 x39400000 1}
       {x40e00000 xc1f05320 -}
       {x41000000}
       {x41100000 xc1f05320}}}
        {{r
       {{{1 xc124d200 -}	8}
        {{x41100000 xc124d200}	1}}}
      {r
       {{{1 x41976920 0 1 x38c00000 1}	1}
        {{x40000000 x41976940 -}	7}
        {{x41100000 x41976940}	1}}}}
        {{r
       {{{1 0 -}	8}
        {{x41100000 0}	1}}}
      {r
       {{{1 0 -}	8}
        {{x41100000 0}	1}}}}
        {{r
       {{{1 x416ffb00 -}	8}
        {{x41100000 x416ffb00}	1}}}
      {r
       {{{1 xc1dc7460 -}	8}
        {{x41100000 xc1dc7460}	1}}}}
        {{{1 xc1f9abc0 0 1 x412ee040 1}
       {x40000000 xc1bf6100 -}
       {x40400000 xc1c18580 xbf4db000 1 xbf4db000 1}
       {x40800000 xc1e56c40 -}
       {x40a00000 xc1d4cf00 -}
       {x40c00000}
       {x40e00000}
       {x41000000}
       {x41100000 xc1d4cf00}}
      {{1 x41b04ea0 0 1 xc0d874a0 1}
       {x40000000 x417a9a00 xc0b32a40 1 xc0b32a40 1}
       {x40400000 x412d7300 xc0987a00 1 xc0987a00 1}
       {x40800000 x40c44000 -}
       {x40a00000 x419096a0 -}
       {x40c00000}
       {x40e00000}
       {x41000000}
       {x41100000 x419096a0}}}
        {{r
       {{{1 0 -}	8}
        {{x41100000 0}	1}}}
      {r
       {{{1 0 -}	8}
        {{x41100000 0}	1}}}}
        {{{1 x41e67780 0 1 xc1216e80 1}
       {x40000000 x41b0a800 -}
       {x40400000 x41b2a2c0 x3f3e0800 1 x3f3e0800 1}
       {x40800000 x41d3c680 -}
       {x40a00000 x41c470c0 -}
       {x40c00000}
       {x40e00000}
       {x41000000}
       {x41100000 x41c470c0}}
      {{1 xc1a2bec0 0 1 x40c7cdc0 1}
       {x40000000 xc1675340 x40a56200 1 x40a56200 1}
       {x40400000 xc1201b80 x408cbfc0 1 x408cbfc0 1}
       {x40800000 xc0b52700 -}
       {x40a00000 xc1857780 -}
       {x40c00000}
       {x40e00000}
       {x41000000}
       {x41100000 xc1857780}}}
        {{{1 xc20cb3c0 0 1 x41347d40 1}
       {x40000000 xc1dd3dc0 -}
       {x40400000 xc1df7440 xbf547000 1 xbf547000 1}
       {x40800000 xc1f35c40 -}
       {x40a00000 xc1f35c00 -}
       {x40c00000}
       {x40e00000}
       {x41000000}
       {x41100000 xc1f35c00}}
      {{1 x4155a580 0 1 xc0df6680 1}
       {x40000000 x40d8b900 xc0b8e900 1 xc0b8e900 1}
       {x40400000 x3fe5e400 -}
       {x40800000 x41142d00 -}
       {x40a00000}
       {x40c00000}
       {x40e00000}
       {x41000000}
       {x41100000 x41142d00}}}
        {{r
       {{{1 0 -}	8}
        {{x41100000 0}	1}}}
      {r
       {{{1 0 -}	8}
        {{x41100000 0}	1}}}}
        {{{1 x42436b80 0 1 xc17aad00 1}
       {x40000000 x4219a400 -}
       {x40400000 x421b2d20 x3f936c00 1 x3f936c00 1}
       {x40800000 x42290000 -}
       {x40a00000}
       {x40c00000}
       {x40e00000}
       {x41000000 x42290020 x39400000 1 0 1}
       {x41100000 x42290020}}
      {{1 xc1945d80 0 1 x411b2290 1}
       {x40000000 xc1168100 x410068e0 1 x410068e0 1}
       {x40400000 xc01fa500 -}
       {x40800000 xc14dcc80 -}
       {x40a00000}
       {x40c00000}
       {x40e00000}
       {x41000000}
       {x41100000 xc14dcc80}}}}}}
     {tx x40a00000 x44ffe000 x44784000}
     {a osw x41200000 osf 0 str 1 spx x45100000 spy x44a20000 sb 1 ltn x40a00000 ltm x40a00000 tt x40e00000}}}}}}
   toolbox {selectAll {
  { selectAll str 1 ssx 1 ssy 1 sf 1 }
  { createBezier str 1 ssx 1 ssy 1 sf 1 sb 1 tt 4 }
  { createBezierCusped str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { createBSpline str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { createEllipse str 1 ssx 1 ssy 1 sf 1 sb 1 tt 7 }
  { createRectangle str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { createRectangleCusped str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { brush str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { eraser src 2 str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { clone src 1 str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { reveal src 3 str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { dodge src 1 str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { burn src 1 str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { blur src 1 str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { sharpen src 1 str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { smear src 1 str 1 ssx 1 ssy 1 sf 1 sb 1 }
} }
   toolbar_brush_hardness 0.200000003
   toolbar_source_transform_scale {1 1}
   toolbar_source_transform_center {2304 1296}
   colorOverlay {0 0 0 0}
   lifetime_type "all frames"
   lifetime_start 5
   lifetime_end 5
   motionblur_shutter_offset_type centred
   source_black_outside true
   name Roto4
   xpos 7555
   ypos -2817
   addUserKnob {20 button +HIDDEN +INVISIBLE}
   addUserKnob {22 createPowerRelative -STARTLINE T "import aePowerPinFun\naePowerPinFun.createPowerRelative()"}
   addUserKnob {22 createPowerAbsolute -STARTLINE T "import aePowerPinFun\naePowerPinFun.createPowerAbsolute()"}
   addUserKnob {22 createPowerStabilize -STARTLINE T "import aePowerPinFun\naePowerPinFun.createPowerStabilize()"}
   addUserKnob {20 button +HIDDEN +INVISIBLE}
   addUserKnob {22 createPowerRelative -STARTLINE T "import aePowerPinFun\naePowerPinFun.createPowerRelative()"}
   addUserKnob {22 createPowerAbsolute -STARTLINE T "import aePowerPinFun\naePowerPinFun.createPowerAbsolute()"}
   addUserKnob {22 createPowerStabilize -STARTLINE T "import aePowerPinFun\naePowerPinFun.createPowerStabilize()"}
  }
  Blur {
   size 75
   name Blur4
   xpos 7555
   ypos -2779
  }
  Read {
   inputs 0
   file_type exr
   file "\[value filepath]Flares/Front/default_front.%08d.exr"
   localizationPolicy on
   format "4096 2160 0 0 4096 2160 1 4K_DCP"
   last 9
   after black
   origlast 9
   origset true
   version 17
   in_colorspace scene_linear
   out_colorspace scene_linear
   name Read17
   xpos 7414
   ypos -2854
   postage_stamp false
  }
  Multiply {
   inputs 1+1
   value {{SparksFrontFlash}}
   invert_mask true
   name Multiply64
   xpos 7414
   ypos -2779
  }
  FrameHold {
   firstFrame {{1+((frame%1)*(count))}}
   name FrameHold34
   label "assets x\[value count]"
   xpos 7414
   ypos -2707
   addUserKnob {20 User}
   addUserKnob {3 count}
   count 9
  }
  Saturation {
   saturation 0.8
   name Saturation1
   xpos 7414
   ypos -2619
  }
  Grade {
   whitepoint {1.727726936 1.684559703 1.524384618 1}
   white {0.9260987639 0.9260889292 0.9261653423 0}
   multiply 1.39
   name Grade2
   xpos 7414
   ypos -2593
  }
  Switch {
   inputs 10
   which {{SelectAssetFlash}}
   name Switch4
   xpos 7414
   ypos -2377
  }
push 0
  Switch {
   inputs 2
   which {{floor(((frame>=1)+(frame<2))/2)}}
   name Switch15
   xpos 7414
   ypos -2135
  }
  Transform {
   scale {{ScaleFrontFlash.w} {ScaleFrontFlash.h}}
   center {2048 1080}
   shutteroffset centred
   name Transform46
   label scaling
   xpos 7414
   ypos -1784
  }
  Reformat {
   resize height
   pbb true
   name Reformat2
   xpos 7414
   ypos -1709
  }
  Dot {
   name Dot3
   xpos 7448
   ypos -1077
  }
  Dot {
   name Dot5
   xpos 7927
   ypos -1077
  }
set N5c3fbf20 [stack 0]
  Dot {
   name Dot2
   xpos 8121
   ypos -1077
  }
set N562fd1c0 [stack 0]
  Dot {
   name Dot7
   xpos 8315
   ypos -1077
  }
set N557fc1b0 [stack 0]
  Dot {
   name Dot9
   xpos 8509
   ypos -1077
  }
set N53ff1170 [stack 0]
  Dot {
   name Dot11
   xpos 8703
   ypos -1077
  }
set N534fa5d0 [stack 0]
  Dot {
   name Dot13
   xpos 8897
   ypos -1077
  }
set N4c4f1c50 [stack 0]
  Dot {
   name Dot15
   xpos 9091
   ypos -1077
  }
set N307f6f20 [stack 0]
  Dot {
   name Dot17
   xpos 9285
   ypos -1077
  }
set N4b6f4980 [stack 0]
  Dot {
   name Dot19
   xpos 9522
   ypos -1077
  }
set N570f6080 [stack 0]
  Dot {
   name Dot21
   xpos 9716
   ypos -1077
  }
set N4ccfe7a0 [stack 0]
  Dot {
   name Dot23
   xpos 9910
   ypos -1077
  }
set N562f74e0 [stack 0]
  Dot {
   name Dot25
   xpos 10104
   ypos -1077
  }
set N56cfb0e0 [stack 0]
  Dot {
   name Dot63
   xpos 10335
   ypos -1077
  }
set N32775e40 [stack 0]
  Dot {
   name Dot65
   xpos 10529
   ypos -1077
  }
set N544f3820 [stack 0]
  Dot {
   name Dot67
   xpos 10723
   ypos -1077
  }
set N5b4f3f40 [stack 0]
  Dot {
   name Dot69
   xpos 10917
   ypos -1077
  }
set N55bf1e10 [stack 0]
  Dot {
   name Dot71
   xpos 11111
   ypos -1077
  }
set N52df2b50 [stack 0]
  Dot {
   name Dot73
   xpos 11305
   ypos -1077
  }
set Nca0614e0 [stack 0]
  Dot {
   name Dot75
   xpos 11499
   ypos -1077
  }
set N4b6f5100 [stack 0]
  Dot {
   name Dot77
   xpos 11693
   ypos -1077
  }
set N57df6650 [stack 0]
  Dot {
   name Dot79
   xpos 11930
   ypos -1077
  }
set N57efb700 [stack 0]
  Dot {
   name Dot81
   xpos 12124
   ypos -1077
  }
set N4b5f9cf0 [stack 0]
  Dot {
   name Dot101
   xpos 12318
   ypos -1077
  }
set N5d0feb20 [stack 0]
  Dot {
   name Dot103
   xpos 12512
   ypos -1077
  }
  Read {
   inputs 0
   file_type exr
   file "\[value filepath]Flares/Side/M4_Side.%08d.exr"
   localizationPolicy on
   format "4096 2160 0 0 4096 2160 1 4K_DCP"
   before black
   last 112
   after black
   origlast 112
   origset true
   on_error black
   version 3
   in_colorspace scene_linear
   out_colorspace scene_linear
   name Read35
   xpos 3362
   ypos -2882
   postage_stamp false
  }
  Dot {
   name Dot45
   xpos 3396
   ypos -2806
  }
set N336bff70 [stack 0]
  Dot {
   name Dot46
   xpos 3553
   ypos -2806
  }
  FrameHold {
   firstFrame {{"\[if \{\[expression sort]==0\} \{return \[expression ((frame%1)<=0.50)*(1+(((frame)%1)*count))]\} \{return \[expression (((frame%1)>0.50)*(100+(((((frame+0.5)%1))*2))*count))]\}]"}}
   name FrameHold13
   label "assets x\[value count]\nsort: \[value sort]"
   xpos 3519
   ypos -2738
   addUserKnob {20 User}
   addUserKnob {4 sort M {dim bright}}
   sort bright
   addUserKnob {3 count}
   count 12
  }
  Dot {
   name Dot47
   xpos 3553
   ypos -2649
  }
push $N336bff70
  FrameHold {
   firstFrame {{"\[if \{\[expression sort]==0\} \{return \[expression ((frame%1)<=0.50)*(1+(((frame)%1)*count))]\} \{return \[expression (((frame%1)>0.50)*(100+(((((frame+0.5)%1))*2))*count))]\}]"}}
   name FrameHold14
   label "assets x\[value count]\nsort: \[value sort]"
   xpos 3362
   ypos -2738
   addUserKnob {20 User}
   addUserKnob {4 sort M {dim bright}}
   addUserKnob {3 count}
   count 5
  }
  Merge2 {
   inputs 2
   name Merge8
   xpos 3362
   ypos -2653
  }
  Dot {
   name Dot98
   xpos 3396
   ypos -2387
  }
  Read {
   inputs 0
   file_type exr
   file "\[value filepath]Flares/Side/M870_Side.########.exr"
   localizationPolicy on
   format "4096 2160 0 0 4096 2160 1 4K_DCP"
   last 12
   origlast 12
   origset true
   on_error black
   version 18
   in_colorspace scene_linear
   out_colorspace scene_linear
   name Read50
   xpos 3799
   ypos -2881
   postage_stamp false
  }
  FrameHold {
   firstFrame {{1+((frame%1)*(count))}}
   name FrameHold20
   label "assets x\[value count]"
   xpos 3799
   ypos -2718
   addUserKnob {20 User}
   addUserKnob {3 count}
   count 12
  }
  Dot {
   name Dot97
   xpos 3833
   ypos -2387
  }
  Read {
   inputs 0
   file_type exr
   file "\[value filepath]Flares/Side/mp5_Side.%08d.exr"
   localizationPolicy on
   format "4096 2160 0 0 4096 2160 1 4K_DCP"
   before black
   last 119
   after black
   origlast 131
   origset true
   on_error black
   version 2
   in_colorspace scene_linear
   out_colorspace scene_linear
   name Read59
   xpos 4089
   ypos -2876
   postage_stamp false
  }
  Dot {
   name Dot54
   xpos 4123
   ypos -2797
  }
set N4cdfd870 [stack 0]
  Dot {
   name Dot55
   xpos 4280
   ypos -2797
  }
  FrameHold {
   firstFrame {{"\[if \{\[expression sort]==0\} \{return \[expression ((frame%1)<=0.50)*(1+(((frame)%1)*count))]\} \{return \[expression (((frame%1)>0.50)*(100+(((((frame+0.5)%1))*2))*count))]\}]"}}
   name FrameHold27
   label "assets x\[value count]\nsort: \[value sort]"
   xpos 4246
   ypos -2729
   addUserKnob {20 User}
   addUserKnob {4 sort M {dim bright}}
   sort bright
   addUserKnob {3 count}
   count 19
  }
  Dot {
   name Dot56
   xpos 4280
   ypos -2640
  }
push $N4cdfd870
  FrameHold {
   firstFrame {{"\[if \{\[expression sort]==0\} \{return \[expression ((frame%1)<=0.50)*(1+(((frame)%1)*count))]\} \{return \[expression (((frame%1)>0.50)*(100+(((((frame+0.5)%1))*2))*count))]\}]"}}
   name FrameHold28
   label "assets x\[value count]\nsort: \[value sort]"
   xpos 4089
   ypos -2732
   addUserKnob {20 User}
   addUserKnob {4 sort M {dim bright}}
   addUserKnob {3 count}
   count 6
  }
  Merge2 {
   inputs 2
   name Merge11
   xpos 4089
   ypos -2644
  }
  Dot {
   name Dot99
   xpos 4123
   ypos -2387
  }
  Read {
   inputs 0
   file_type exr
   file "\[value filepath]Flares/Side/M249_Side.%08d.exr"
   localizationPolicy on
   format "4096 2160 0 0 4096 2160 1 4K_DCP"
   before black
   last 121
   after black
   origlast 121
   origset true
   on_error black
   version 1
   in_colorspace scene_linear
   out_colorspace scene_linear
   name Read56
   xpos 4433
   ypos -2869
   postage_stamp false
  }
  Dot {
   name Dot39
   xpos 4467
   ypos -2783
  }
set N5b0feb20 [stack 0]
  Dot {
   name Dot40
   xpos 4624
   ypos -2783
  }
  FrameHold {
   firstFrame {{"\[if \{\[expression sort]==0\} \{return \[expression ((frame%1)<=0.50)*(1+(((frame)%1)*count))]\} \{return \[expression (((frame%1)>0.50)*(100+(((((frame+0.5)%1))*2))*count))]\}]"}}
   name FrameHold9
   label "assets x\[value count]\nsort: \[value sort]"
   xpos 4590
   ypos -2715
   addUserKnob {20 User}
   addUserKnob {4 sort M {dim bright}}
   sort bright
   addUserKnob {3 count}
   count 21
  }
  Dot {
   name Dot41
   xpos 4624
   ypos -2626
  }
push $N5b0feb20
  FrameHold {
   firstFrame {{"\[if \{\[expression sort]==0\} \{return \[expression ((frame%1)<=0.50)*(1+(((frame)%1)*count))]\} \{return \[expression (((frame%1)>0.50)*(100+(((((frame+0.5)%1))*2))*count))]\}]"}}
   name FrameHold10
   label "assets x\[value count]\nsort: \[value sort]"
   xpos 4433
   ypos -2712
   addUserKnob {20 User}
   addUserKnob {4 sort M {dim bright}}
   addUserKnob {3 count}
   count 13
  }
  Merge2 {
   inputs 2
   name Merge6
   xpos 4433
   ypos -2630
  }
  Dot {
   name Dot100
   xpos 4467
   ypos -2387
  }
  Read {
   inputs 0
   file_type exr
   file "\[value filepath]Flares/Side/M16_Side.%08d.exr"
   localizationPolicy on
   format "4096 2160 0 0 4096 2160 1 4K_DCP"
   last 16
   origlast 16
   origset true
   on_error black
   version 20
   in_colorspace scene_linear
   out_colorspace scene_linear
   name Read2
   xpos 4827
   ypos -2859
   postage_stamp false
  }
  FrameHold {
   firstFrame {{1+((frame%1)*(count))}}
   name FrameHold18
   label "assets x\[value count]"
   xpos 4827
   ypos -2665
   addUserKnob {20 User}
   addUserKnob {3 count}
   count 16
  }
  Dot {
   name Dot95
   xpos 4861
   ypos -2387
  }
  Read {
   inputs 0
   file_type exr
   file "\[value filepath]Flares/Side/G2_Side.########.exr"
   localizationPolicy on
   format "4096 2160 0 0 4096 2160 1 4K_DCP"
   last 28
   origlast 28
   origset true
   on_error black
   in_colorspace scene_linear
   out_colorspace scene_linear
   name Read4
   xpos 5118
   ypos -2861
   postage_stamp false
  }
  Dot {
   name Dot33
   xpos 5152
   ypos -2780
  }
set N5adfd5a0 [stack 0]
  Dot {
   name Dot34
   xpos 5309
   ypos -2780
  }
  FrameHold {
   firstFrame {{"\[if \{\[expression sort]==0\} \{return \[expression ((frame%1)<=0.50)*(1+(((frame)%1)*count))]\} \{return \[expression (((frame%1)>0.50)*(100+(((((frame+0.5)%1))*2))*count))]\}]"}}
   name FrameHold1
   label "assets x\[value count]\nsort: \[value sort]"
   xpos 5275
   ypos -2711
   addUserKnob {20 User}
   addUserKnob {4 sort M {dim bright}}
   sort bright
   addUserKnob {3 count}
   count 18
  }
  Dot {
   name Dot35
   xpos 5309
   ypos -2623
  }
push $N5adfd5a0
  FrameHold {
   firstFrame {{"\[if \{\[expression sort]==0\} \{return \[expression ((frame%1)<=0.50)*(1+(((frame)%1)*count))]\} \{return \[expression (((frame%1)>0.50)*(100+(((((frame+0.5)%1))*2))*count))]\}]"}}
   name FrameHold2
   label "assets x\[value count]\nsort: \[value sort]"
   xpos 5118
   ypos -2709
   addUserKnob {20 User}
   addUserKnob {4 sort M {dim bright}}
   addUserKnob {3 count}
   count 7
  }
  Merge2 {
   inputs 2
   name Merge4
   xpos 5118
   ypos -2627
  }
  Dot {
   name Dot96
   xpos 5152
   ypos -2387
  }
  Read {
   inputs 0
   file_type exr
   file "\[value filepath]Flares/Side/AR-15_Side.%08d.exr"
   localizationPolicy on
   format "4096 2160 0 0 4096 2160 1 4K_DCP"
   before black
   last 147
   after black
   origlast 147
   origset true
   on_error black
   version 1
   in_colorspace scene_linear
   out_colorspace scene_linear
   name Read63
   xpos 5477
   ypos -2866
   postage_stamp false
  }
  Dot {
   name Dot57
   xpos 5511
   ypos -2783
  }
set N3e076420 [stack 0]
  Dot {
   name Dot58
   xpos 5668
   ypos -2783
  }
  FrameHold {
   firstFrame {{"\[if \{\[expression sort]==0\} \{return \[expression ((frame%1)<=0.50)*(1+(((frame)%1)*count))]\} \{return \[expression (((frame%1)>0.50)*(100+(((((frame+0.5)%1))*2))*count))]\}]"}}
   name FrameHold17
   label "assets x\[value count]\nsort: \[value sort]"
   xpos 5634
   ypos -2714
   addUserKnob {20 User}
   addUserKnob {4 sort M {dim bright}}
   sort bright
   addUserKnob {3 count}
   count 47
  }
  Dot {
   name Dot59
   xpos 5668
   ypos -2626
  }
push $N3e076420
  FrameHold {
   firstFrame {{"\[if \{\[expression sort]==0\} \{return \[expression ((frame%1)<=0.50)*(1+(((frame)%1)*count))]\} \{return \[expression (((frame%1)>0.50)*(100+(((((frame+0.5)%1))*2))*count))]\}]"}}
   name FrameHold26
   label "assets x\[value count]\nsort: \[value sort]"
   xpos 5477
   ypos -2712
   addUserKnob {20 User}
   addUserKnob {4 sort M {dim bright}}
   addUserKnob {3 count}
   count 12
  }
  Merge2 {
   inputs 2
   name Merge12
   xpos 5477
   ypos -2630
  }
  Dot {
   name Dot94
   xpos 5511
   ypos -2387
  }
  Read {
   inputs 0
   file_type exr
   file "\[value filepath]Flares/Side/Ak_Side.########.exr"
   localizationPolicy on
   format "4096 2160 0 0 4096 2160 1 4K_DCP"
   last 28
   origlast 28
   origset true
   on_error black
   in_colorspace scene_linear
   out_colorspace scene_linear
   name Read3
   xpos 5938
   ypos -2857
   postage_stamp false
  }
  FrameHold {
   firstFrame {{1+((frame%1)*(count))}}
   name FrameHold23
   label "assets x\[value count]"
   xpos 5938
   ypos -2714
   addUserKnob {20 User}
   addUserKnob {3 count}
   count 28
  }
  Dot {
   name Dot93
   xpos 5972
   ypos -2387
  }
  Read {
   inputs 0
   file_type exr
   file "\[value filepath]Flares/Side/colt45_Side.########.exr"
   localizationPolicy on
   format "4096 2160 0 0 4096 2160 1 4K_DCP"
   last 28
   origlast 28
   origset true
   on_error black
   in_colorspace scene_linear
   out_colorspace scene_linear
   name Read6
   xpos 6211
   ypos -2859
   postage_stamp false
  }
  Dot {
   name Dot27
   xpos 6245
   ypos -2772
  }
set N49ffa210 [stack 0]
  Dot {
   name Dot29
   xpos 6402
   ypos -2772
  }
  FrameHold {
   firstFrame {{"\[if \{\[expression sort]==0\} \{return \[expression ((frame%1)<=0.50)*(1+(((frame)%1)*count))]\} \{return \[expression (((frame%1)>0.50)*(100+(((((frame+0.5)%1))*2))*count))]\}]"}}
   name FrameHold3
   label "assets x\[value count]\nsort: \[value sort]"
   xpos 6368
   ypos -2703
   addUserKnob {20 User}
   addUserKnob {4 sort M {dim bright}}
   sort bright
   addUserKnob {3 count}
   count 15
  }
  Dot {
   name Dot30
   xpos 6402
   ypos -2614
  }
push $N49ffa210
  FrameHold {
   firstFrame {{"\[if \{\[expression sort]==0\} \{return \[expression ((frame%1)<=0.50)*(1+(((frame)%1)*count))]\} \{return \[expression (((frame%1)>0.50)*(100+(((((frame+0.5)%1))*2))*count))]\}]"}}
   name FrameHold4
   label "assets x\[value count]\nsort: \[value sort]"
   xpos 6211
   ypos -2701
   addUserKnob {20 User}
   addUserKnob {4 sort M {dim bright}}
   addUserKnob {3 count}
   count 8
  }
  Merge2 {
   inputs 2
   name Merge2
   xpos 6211
   ypos -2618
  }
  Dot {
   name Dot92
   xpos 6245
   ypos -2387
  }
  Roto {
   inputs 0
   output alpha
   curves {{{v x3f99999a}
  {f 0}
  {n
   {layer Root
    {f 2097152}
    {t x45100000 x44c5c000}
    {a pt1x 0 pt1y 0 pt2x 0 pt2y 0 pt3x 0 pt3y 0 pt4x 0 pt4y 0 ptex00 0 ptex01 0 ptex02 0 ptex03 0 ptex10 0 ptex11 0 ptex12 0 ptex13 0 ptex20 0 ptex21 0 ptex22 0 ptex23 0 ptex30 0 ptex31 0 ptex32 0 ptex33 0 ptof1x 0 ptof1y 0 ptof2x 0 ptof2y 0 ptof3x 0 ptof3y 0 ptof4x 0 ptof4y 0 pterr 0 ptrefset 0 ptmot x40800000 ptref 0}
    {curvegroup Bezier1 512 bezier
     {{cc
       {f 8192}
       {px
        {1 x40000000 x40400000 x40800000 x40a00000 x40c00000 x40e00000 x41000000 x41100000 x41200000 x41300000 x41400000 x41500000 x41600000 x41700000 x41800000}
        {{{x 15
        {0 -}}      0}
      {{x 15
        {xc0800000 -}}      xc0800000}}
        {{{x 2
        {x44258000 -}}
       {x 3
        {x442b0000 -}}
       {x 2
        {x4428e666 -}}
       {x 2
        {x440d9999 -}}
       {x441b4000 x425a6670 1 x425a6670 1}
       {x 4
        {x4428e667 -}}
       {x4422999c -}
       {x441e666a -}}
      {{x 2
        {x448b0000 -}}
       {x44844000 -}
       {x 4
        {x4488c000 -}}
       {x 2
        {x44838000 -}}
       {x4484e667 -}
       {x 4
        {x44835334 -}}
       {x44819334 -}
       {x4481c001 -}}}
        {{{x 15
        {0 -}}      0}
      {{x 15
        {x40800000 -}}      x40800000}}
        {{{x 15
        {xc1000000 -}}      xc1000000}
      {{x 15
        {xc0800000 -}}      xc0800000}}
        {{{x 2
        {x44378000 -}}
       {x443c7fff x41e00000 1 x41e00000 1}
       {x 2
        {x44458000 -}}
       {x 2
        {x4449b333 -}}
       {x 2
        {x44180000 -}}
       {x4424999a x42440008 1 x42440008 1}
       {x44308001 -}
       {x441c3335 -}
       {x44324002 -}
       {x4426599c -}
       {x44276669 -}
       {x44217336 -}}
      {{x 2
        {x4491c000 -}}
       {x448ac000 -}
       {x 2
        {x448e8000 -}}
       {x 2
        {x4493c000 -}}
       {x 2
        {x448e5333 -}}
       {x4490c666 -}
       {x448ed99a -}
       {x44922ccd -}
       {x4491799a -}
       {x44968ccd -}
       {x4492b334 -}
       {x44936667 -}}}
        {{{x 15
        {x41000000 -}}      x41000000}
      {{x 15
        {x40800000 -}}      x40800000}}
        {{{x 15
        {xc1000000 -}}      xc1000000}
      {{x 15
        {0 -}}      0}}
        {{{x445e8000 0 1 xc0400080 1}
       {x445d8000 xc0bfff80 1 xc0bfff80 1}
       {x445b8002 -}
       {x 2
        {x44600001 -}}
       {x44654000 x41499980 1 x41499980 1}
       {x44664ccd -}
       {x44627333 xc238cce0 1 xc238cce0 1}
       {x4436b333 -}
       {x443b999a x416b3340 1 x416b3340 1}
       {x443e0ccd -}
       {x442c3333 -}
       {x4448e665 -}
       {x443a3332 -}
       {x44423ffe -}
       {x44418cca -}}
      {{x44944000 0 1 x42280000 1}
       {x4497c000 -}
       {x44918000 xc2000000 1 xc2000000 1}
       {x 2
        {x448fc000 -}}
       {x44920667 x41a80000 1 x41a80000 1}
       {x44950000 x41919980 1 x41919980 1}
       {x44969333 x42173320 1 x42173320 1}
       {x449ea000 -}
       {x4497f999 xc1066700 1 xc1066700 1}
       {x44979fff -}
       {x449dc000 -}
       {x44985334 -}
       {x44a08ccd -}
       {x44990667 -}
       {x44996001 -}}}
        {{{x 15
        {x41000000 -}}      x41000000}
      {{x 15
        {0 -}}      0}}
        {{{x 15
        {xc0800000 -}}      xc0800000}
      {{x 15
        {0 -}}      0}}
        {{{x44790000 0 1 xc0c000c0 1}
       {x4477ffff -}
       {x447f7ffe -}
       {x447e7ffe xc10fffa0 1 xc10fffa0 1}
       {x447b0001 -}
       {x447ed99c x41280060 1 x41280060 1}
       {x44802002 -}
       {x447a4cd1 xc28eccc8 1 xc28eccc8 1}
       {x444f4005 -}
       {x4456999e x421199a0 1 x421199a0 1}
       {x44617339 -}
       {x4458b33b -}
       {x4467c006 -}
       {x445a199f -}
       {x445df339 -}
       {x4453ccd2 -}}
      {{x44930000 0 1 x42ba0000 1}
       {x449ac000 -}
       {x4493c000 xc21c0000 1 xc21c0000 1}
       {x44910000 -}
       {x44944000 -}
       {x4492d999 -}
       {x44965999 x41a80000 1 x41a80000 1}
       {x44981999 x42280000 1 x42280000 1}
       {x44a5eccc -}
       {x449ddfff xc2306670 1 xc2306670 1}
       {x449ae665 -}
       {x449ebfff -}
       {x449b3fff -}
       {x44a05332 -}
       {x449d2ccb -}
       {x44a1b998 -}}}
        {{{x 15
        {x40800000 -}}      x40800000}
      {{x 15
        {0 -}}      0}}
        {{{x 9
        {xc0800000 -}}
       {x 6
        {xc20cc59e -}}      xc20cc59e}
      {{x 9
        {0 -}}
       {x 6
        {xc01b8e75 -}}      xc01b8e75}}
        {{{x 2
        {x44900000 -}}
       {x44938000 -}
       {x448ec001 xc1c7ffc0 1 xc1c7ffc0 1}
       {x448d4002 -}
       {x448f8669 -}
       {x448e799c xc1b8cce0 1 xc1b8cce0 1}
       {x4489c002 xc2066670 1 xc2066670 1}
       {x44861335 xc1cf3340 1 xc1cf3340 1}
       {x44834668 -}
       {x4485b99b -}
       {x44794001 -}
       {x4480a667 -}
       {x447f8ccc xc1a80020 1 xc1a80020 1}
       {x4476cccc -}
       {x44698000 -}}
      {{x 2
        {x449cc000 -}}
       {x44998000 -}
       {x449c0000 -}
       {x44980000 xc1c8ccc0 1 xc1c8ccc0 1}
       {x4495b99a -}
       {x44982ccd x419ccce0 1 x419ccce0 1}
       {x449aa001 x4238ccd0 1 x4238ccd0 1}
       {x44a3b99a -}
       {x44a00ccd -}
       {x44a41334 x41eb3340 1 x41eb3340 1}
       {x44a76667 -}
       {x44a0ecce -}
       {x44a33334 -}
       {x44a1a001 -}
       {x44a7c001 -}}}
        {{{x 9
        {x400f5c00 -}}
       {x 6
        {x420cc59e -}}      x420cc59e}
      {{x 9
        {0 -}}
       {x 6
        {x401b8e86 -}}      x401b8e86}}
        {{{xc28ac050 0 1 xc228e430 1}
       {xc2c30c60 -}
       {xc29e9ee0 -}
       {x 7
        {xc2b39820 -}}
       {x 5
        {xc202364a -}}      xc202364a}
      {{xc1d7f540 0 1 xc0ee6f80 1}
       {xc1ffb280 -}
       {xc1cf2080 x40b97380 1 x40b97380 1}
       {x 7
        {xc1a2f8c0 -}}
       {x 5
        {xc0391467 -}}      xc0391467}}
        {{{x44a34464 0 1 x42b46840 1}
       {x44aac8bc -}
       {x44a96b92 xc202efc0 1 xc202efc0 1}
       {x44a18001 xc256b920 1 xc256b920 1}
       {x449c0000 -}
       {x449f5334 -}
       {x449b4ccf xc2039990 1 xc2039990 1}
       {x 3
        {x4497199b -}}
       {x44960cce xc1b8ccc0 1 xc1b8ccc0 1}
       {x44915335 xc1dfffe0 1 xc1dfffe0 1}
       {x448f0ccf xc1866660 1 xc1866660 1}
       {x448d2002 -}
       {x448fc002 x41fc0000 1 0 1}      x448fc002}
      {{x44a3cf24 0 1 x417eb140 1}
       {x44a522bb -}
       {x44a043ac -}
       {x44aaffff -}
       {x449a3fff xc2066640 1 xc2066640 1}
       {x4498d999 -}
       {x449deccd x4200ccd0 1 x4200ccd0 1}
       {x 3
        {x44a0e666 -}}
       {x44a35999 x42119990 1 x42119990 1}
       {x44a9ffff -}
       {x449dbfff -}
       {x44a46665 x4254ccc0 1 x4254ccc0 1}
       {x44ab0ccb x4254ccc0 1 0 1}      x44ab0ccb}}
        {{{x425a0980 0 1 x4204b3a0 1}
       {x429940a0 -}
       {x427942e0 -}
       {x 7
        {x428d1c20 -}}
       {x 5
        {x4202364a -}}      x4202364a}
      {{x41a9ae40 0 1 x40bb5900 1}
       {x41c8e7c0 -}
       {x41a2be00 xc091b600 1 xc091b600 1}
       {x 7
        {x41800cc0 -}}
       {x 5
        {x4039147c -}}      x4039147c}}
        {{{x 6
        {x40e14800 -}}
       {x 9
        {xc2137320 -}}      xc2137320}
      {{x 6
        {xc028f600 -}}
       {x 9
        {xbfec7df8 -}}      xbfec7df8}}
        {{{x44af0000 0 1 x43190000 1}
       {x44bbc000 -}
       {x 2
        {x44b70001 -}}
       {x44b24002 xc1b99980 1 xc1b99980 1}
       {x44b13335 xc0b33280 1 xc0b33280 1}
       {x44b0d99d xc1066400 1 xc1066400 1}
       {x 5
        {x44ae0cd1 -}}
       {x449d1338 -}
       {x44a00cd0 x42093310 1 x42093310 1}
       {x44a5a669 x42483328 1 0 1}      x44a5a669}
      {{x44a94000 0 1 x41d80000 1}
       {x44ab8000 -}
       {x44a57fff -}
       {x44a5bffe -}
       {x 2
        {x449c7ffe -}}
       {x449ffffd x41eb3320 1 x41eb3320 1}
       {x 4
        {x44a3d997 -}}
       {x44a83997 x42146660 1 x42146660 1}
       {x44ad1ffd -}
       {x44a48cca -}
       {x44a6a664 x41c999c0 1 0 1}      x44a6a664}}
        {{{x 6
        {xc1800000 -}}
       {x 9
        {x42137320 -}}      x42137320}
      {{x 6
        {x40c00000 -}}
       {x 9
        {x3fec7e1e -}}      x3fec7e1e}}
        {{{x 15
        {xc0000000 -}}      xc0000000}
      {{x 15
        {0 -}}      0}}
        {{{x 3
        {x44cdc000 -}}
       {x44c40001 -}
       {x44c5c001 -}
       {x 2
        {x44c4b334 -}}
       {x 5
        {x44c3799b -}}
       {x 3
        {x44b9acce -}}      x44b9acce}
      {{x 3
        {x44a64000 -}}
       {x44a7c001 -}
       {x 3
        {x44a00002 -}}
       {x 5
        {x44a48ccf -}}
       {x 3
        {x44a3accf -}}      x44a3accf}}
        {{{x 3
        {x3f1d4000 -}}
       {x 12
        {x3f1d4800 -}}      x3f1d4800}
      {{x 15
        {0 -}}      0}}
        {{{x 2
        {xc258acc0 -}}
       {xc26478a0 xc10d8e80 1 xc10d8e80 1}
       {x 12
        {xc2a03df0 -}}      xc2a03df0}
      {{x 2
        {x419cea00 -}}
       {x4135b500 -}
       {x 12
        {x416e5480 -}}      x416e5480}}
        {{{x 2
        {x44d982e0 -}}
       {x44da6453 -}
       {x44d402cb -}
       {x44d9c2cc -}
       {x44d6c933 xc17666c0 1 xc17666c0 1}
       {x 3
        {x44d5e931 -}}
       {x 3
        {x44d74f97 -}}
       {x 3
        {x44cd55fd -}}      x44cd55fd}
      {{x 2
        {x44a2075c -}}
       {x44a47e9a -}
       {x44a43012 -}
       {x44a63012 -}
       {x44a11cdf -}
       {x 3
        {x44a5d679 -}}
       {x 3
        {x44a769ad -}}
       {x 3
        {x44a149ad -}}      x44a149ad}}
        {{{x 2
        {x41f3c280 -}}
       {x420083e0 x409f3f00 1 x409f3f00 1}
       {x 12
        {x423445a0 -}}      x423445a0}
      {{x 2
        {xc1308780 -}}
       {xc0cc6c00 -}
       {x 12
        {xc1061000 -}}      xc1061000}}
        {{{x 15
        {xc20e8880 -}}      xc20e8880}
      {{x 15
        {x414f0700 -}}      x414f0700}}
        {{{x 2
        {x44e62bb0 -}}
       {x 3
        {x44e76bb2 -}}
       {x44e65ee5 -}
       {x 8
        {x44e6b87f -}}
       {x44e81ee5 -}
       {x44e8d218 -}}
      {{x 2
        {x449d6fec -}}
       {x44a0efec -}
       {x 3
        {x449e2fec -}}
       {x 9
        {x449eb652 -}}
       {x44a3431e -}}}
        {{{x 15
        {x42d675c0 -}}      x42d675c0}
      {{x 15
        {xc21bc020 -}}      xc21bc020}}
        {{{x 15
        {0 -}}      0}
      {{x 15
        {0 -}}      0}}
        {{{x 5
        {x4500c000 -}}
       {x 10
        {x4500399a -}}      x4500399a}
      {{x 15
        {x44938000 -}}      x44938000}}
        {{{x 15
        {0 -}}      0}
      {{x 15
        {0 -}}      0}}
        {{{x 15
        {0 -}}      0}
      {{x 15
        {0 -}}      0}}
        {{{x 3
        {x45058000 -}}
       {x 2
        {x45042001 -}}
       {x 10
        {x4503999a -}}      x4503999a}
      {{x 3
        {x44864000 -}}
       {x 12
        {x44868000 -}}      x44868000}}
        {{{x 15
        {0 -}}      0}
      {{x 15
        {0 -}}      0}}
        {{{x424c3840 0 1 x40999300 1}
       {x 4
        {x42590480 -}}
       {x 10
        {x425904a0 -}}      x425904a0}
      {{x424746c0 0 1 xc19415e0 1}
       {x 14
        {x4215ea20 -}}      x4215ea20}}
        {{{x44fecc94 0 1 xc113e280 1}
       {x 2
        {x44fe0766 -}}
       {x 2
        {x45000000 -}}
       {x 3
        {x44fef333 -}}
       {x 4
        {x44fec667 -}}
       {x 3
        {x44fcd99b -}}      x44fcd99b}
      {{x44748354 0 1 x420e9a10 1}
       {x 2
        {x447a746a -}}
       {x 5
        {x44768000 -}}
       {x 4
        {x446ba667 -}}
       {x 3
        {x446ecccd -}}      x446ecccd}}
        {{{xc26fbc60 0 1 xc0b44680 1}
       {x 14
        {xc27ec240 -}}      xc27ec240}
      {{xc269eed0 0 1 x41add6f0 1}
       {x 14
        {xc22ffc80 -}}      xc22ffc80}}
        {{{x408a3c00 0 1 x39400000 1}
       {x 14
        {x408a3d00 -}}      x408a3d00}
      {{x 15
        {0 -}}      0}}
        {{{x44ee8000 0 1 xc1a80000 1}
       {x 3
        {x44ecc000 -}}
       {x44d60000 -}
       {x44d6b333 x409ccc00 1 x409ccc00 1}
       {x44d73998 -}
       {x 2
        {x44d68664 -}}
       {x44d79331 x416b3340 1 x416b3340 1}
       {x44da3331 x41499a00 1 x41499a00 1}
       {x44dab999 -}
       {x 2
        {x44cdf331 -}}
       {x44ce1ffe x40066700 1 0 1}      x44ce1ffe}
      {{x44560000 0 1 x42a20000 1}
       {x 3
        {x44638000 -}}
       {x44518000 -}
       {x44593334 -}
       {x444cf336 -}
       {x 2
        {x4458266a -}}
       {x444f666a -}
       {x4452e66a -}
       {x444c999e -}
       {x 2
        {x444e0004 -}}
       {x444ad99e xc1973320 1 0 1}      x444ad99e}}
        {{{x 15
        {xc1000000 -}}      xc1000000}
      {{x 15
        {0 -}}      0}}
        {{{x 15
        {x41c00000 -}}      x41c00000}
      {{x 15
        {xc0800000 -}}      xc0800000}}
        {{{x44c90000 0 1 x410fff40 1}
       {x 2
        {x44c9bfff -}}
       {x 2
        {x44be7ffd -}}
       {x44bd7330 xc1c999c0 1 xc1c999c0 1}
       {x 3
        {x44b53996 -}}
       {x44bbb32e x421cccb0 1 x421cccb0 1}
       {x 2
        {x44bf0661 -}}
       {x 2
        {x44b72660 -}}
       {x44b80660 -}
       {x44b53993 -}}
      {{x444d8000 0 1 x42ba0000 1}
       {x 2
        {x445d0000 -}}
       {x445c0000 xc1000000 1 xc1000000 1}
       {x 2
        {x44590000 -}}
       {x 3
        {x4450f332 -}}
       {x44547332 x41280000 1 x41280000 1}
       {x 2
        {x44563332 -}}
       {x 2
        {x444fe664 -}}
       {x44488ccb -}
       {x4445bffe -}}}
        {{{x 15
        {xc1c00000 -}}      xc1c00000}
      {{x 15
        {x40800000 -}}      x40800000}}
        {{{x 15
        {0 -}}      0}
      {{x 15
        {0 -}}      0}}
        {{{x44910000 0 1 x41dfffb0 1}
       {x44957fff x424ffff0 1 x424ffff0 1}
       {x449dffff x424c0020 1 x424c0020 1}
       {x44a24001 x420c0010 1 x420c0010 1}
       {x44a6c000 -}
       {x44a69333 -}
       {x 4
        {x44a6c000 -}}
       {x 2
        {x44a93333 -}}
       {x449f0ccc -}
       {x 2
        {x44ab7999 -}}      x44a82664}
      {{x44530000 0 1 xc2a20000 1}
       {x44458000 -}
       {x44510000 -}
       {x44418000 -}
       {x444c8000 x421b3330 1 x421b3330 1}
       {x 5
        {x4454e666 -}}
       {x 2
        {x445c9998 -}}
       {x4444cccb -}
       {x 2
        {x4457b332 -}}      x444e3ffe}}
        {{{x 15
        {0 -}}      0}
      {{x 15
        {0 -}}      0}}
        {{{x42250000 -}
       {x42310000 x41100000 1 x41100000 1}
       {x42750000 -}
       {x42130000 xc1a4cc82 1 xc1a4cc82 1}
       {x 11
        {x41a066fd -}}      x41a066fd}
      {{x40a80000 0 1 xc1d80000 1}
       {xc14c0000 -}
       {xbfa00000 -}
       {xc2030000 -}
       {x 11
        {xc099b824 -}}      xc099b824}}
        {{{x4486d800 0 1 x41e7ffb0 1}
       {x448a97ff x41ffffe0 1 x41ffffe0 1}
       {x448ed7ff x42228010 1 x42228010 1}
       {x4494c000 x41e4ffc0 1 x41e4ffc0 1}
       {x4495fffd -}
       {x4495a664 -}
       {x 3
        {x4499d996 -}}
       {x 3
        {x449ae663 -}}
       {x4491ccca -}
       {x449ff998 -}
       {x449ebffe xc16b3380 1 0 1}      x449ebffe}
      {{x44507000 0 1 xc1d80000 1}
       {x444bf000 -}
       {x4451b000 -}
       {x444c0000 xc1830000 1 xc1830000 1}
       {x44498000 -}
       {x 4
        {x44518ccc -}}
       {x 3
        {x445d7332 -}}
       {x44567334 -}
       {x4464199a -}
       {x4460999a xc1a80000 1 0 1}      x4460999a}}
        {{{xc2250000 -}
       {xc2310000 xc1100000 1 xc1100000 1}
       {xc2750000 -}
       {xc2130000 x41a4cc81 1 x41a4cc81 1}
       {x 11
        {xc1a066fe -}}      xc1a066fe}
      {{xc0a80000 0 1 x41d80000 1}
       {x414c0000 -}
       {x3fa00000 -}
       {x42030000 -}
       {x 11
        {x4099b813 -}}      x4099b813}}
        {{{x 15
        {x40a00000 -}}      x40a00000}
      {{x 15
        {1 -}}      1}}
        {{{x44778000 0 1 x420fffd0 1}
       {x 2
        {x447d7ffe -}}
       {x448f4001 -}
       {x448a4002 -}
       {x448a6cce x40866400 1 x40866400 1}
       {x 3
        {x448f2668 -}}
       {x 3
        {x44906002 -}}
       {x448a999c -}
       {x448ecccf -}
       {x448c0002 xc2066670 1 0 1}      x448c0002}
      {{x444d8000 0 1 x41d80000 1}
       {x 2
        {x44520000 -}}
       {x44620000 -}
       {x444d0000 -}
       {x4455c000 x41499a80 1 x41499a80 1}
       {x 3
        {x4456ccce -}}
       {x 3
        {x44652668 -}}
       {x44630cd0 -}
       {x4469b336 -}
       {x4461a668 xc2413350 1 0 1}      x4461a668}}
        {{{x 15
        {xc1200000 -}}      xc1200000}
      {{x 15
        {xc0000000 -}}      xc0000000}}
        {{{x 15
        {0 -}}      0}
      {{x 15
        {xc0800000 -}}      xc0800000}}
        {{{x445b8000 0 1 x423fffe8 1}
       {x 2
        {x44637fff -}}
       {x44730001 -}
       {x446a0000 -}
       {x44715999 x425a6670 1 x425a6670 1}
       {x4482a667 -}
       {x4481f333 -}
       {x4485cccb -}
       {x 3
        {x4484eccc -}}
       {x 2
        {x44849332 -}}
       {x447efffe xc2739990 1 0 1}      x447efffe}
      {{x44520000 0 1 x424c0000 1}
       {x445a8000 -}
       {x44520000 -}
       {x44610000 -}
       {x44518000 -}
       {x44613ffe x41499a80 1 x41499a80 1}
       {x44624ccc -}
       {x4456bffe -}
       {x44667ffe x4238ccd0 1 x4238ccd0 1}
       {x 5
        {x446dd998 -}}
       {x44657332 xc2499990 1 0 1}      x44657332}}
        {{{x 15
        {0 -}}      0}
      {{x 15
        {x40800000 -}}      x40800000}}
        {{{x 15
        {0 -}}      0}
      {{x 15
        {0 -}}      0}}
        {{{x 2
        {x44318000 -}}
       {x442f7fff -}
       {x444bffff -}
       {x4438ffff -}
       {x4446ffff x42520000 1 x42520000 1}
       {x44533fff -}
       {x44464ccc -}
       {x4461f333 x427c0000 1 x427c0000 1}
       {x44673333 x4180ccd0 1 x4180ccd0 1}
       {x 2
        {x446a0000 -}}
       {x4471b334 -}
       {x446ee666 xc20666a0 1 xc20666a0 1}
       {x445af334 xc2cdccb0 1 0 1}      x445af334}
      {{x 2
        {x44740000 -}}
       {x44548000 -}
       {x44698000 -}
       {x445e8000 -}
       {x446d8ccc -}
       {x4467f332 xc2850000 1 xc2850000 1}
       {x444c4ccc -}
       {x44743332 -}
       {x446c7ffe -}
       {x 2
        {x44721998 -}}
       {x447da665 -}
       {x44780ccc xc2360000 1 xc2360000 1}
       {x4466e665 xc2a04cd4 1 0 1}      x4466e665}}
        {{{x 15
        {0 -}}      0}
      {{x 15
        {0 -}}      0}}
        {{{x 15
        {0 -}}      0}
      {{x 15
        {0 -}}      0}}
        {{{x 2
        {x441e0000 -}}
       {x44158001 -}
       {x442f0000 -}
       {x44227fff -}
       {x 2
        {x44329998 -}}
       {x 2
        {x44249999 -}}
       {x4430d999 x426e0000 1 x426e0000 1}
       {x 2
        {x44425999 -}}
       {x 2
        {x444d3332 -}}
       {x443a4cca xc2e2cce0 1 0 1}      x443a4cca}
      {{x 2
        {x4483c000 -}}
       {x446a0000 -}
       {x447d0000 -}
       {x44700000 -}
       {x 2
        {x447f0ccd -}}
       {x 2
        {x4471c000 -}}
       {x446b7333 -}
       {x 2
        {x44721999 -}}
       {x 2
        {x447c9999 -}}
       {x446f4ccc xc29f999c 1 0 1}      x446f4ccc}}
        {{{x 15
        {0 -}}      0}
      {{x 15
        {0 -}}      0}}}}     idem}
     {tx 1 x4498d400 x44852c00}
     {a osw x41200000 osf 0 str 1 spx x45100000 spy x44c5c000 sb 1 tt x40800000}}}}}}
   toolbox {selectAll {
  { selectAll str 1 ssx 1 ssy 1 sf 1 }
  { createBezier str 1 ssx 1 ssy 1 sf 1 sb 1 tt 4 }
  { createBezierCusped str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { createBSpline str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { createEllipse str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { createRectangle str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { createRectangleCusped str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { brush str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { eraser src 2 str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { clone src 1 str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { reveal src 3 str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { dodge src 1 str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { burn src 1 str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { blur src 1 str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { sharpen src 1 str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { smear src 1 str 1 ssx 1 ssy 1 sf 1 sb 1 }
} }
   toolbar_brush_hardness 0.200000003
   toolbar_source_transform_scale {1 1}
   toolbar_source_transform_center {2304 1582}
   colorOverlay {0 0 0 0}
   lifetime_type "all frames"
   motionblur_shutter_offset_type centred
   source_black_outside true
   name Roto3
   xpos 6580
   ypos -2757
   addUserKnob {20 button +HIDDEN +INVISIBLE}
   addUserKnob {22 createPowerRelative -STARTLINE T "import aePowerPinFun\naePowerPinFun.createPowerRelative()"}
   addUserKnob {22 createPowerAbsolute -STARTLINE T "import aePowerPinFun\naePowerPinFun.createPowerAbsolute()"}
   addUserKnob {22 createPowerStabilize -STARTLINE T "import aePowerPinFun\naePowerPinFun.createPowerStabilize()"}
   addUserKnob {20 button +HIDDEN +INVISIBLE}
   addUserKnob {22 createPowerRelative -STARTLINE T "import aePowerPinFun\naePowerPinFun.createPowerRelative()"}
   addUserKnob {22 createPowerAbsolute -STARTLINE T "import aePowerPinFun\naePowerPinFun.createPowerAbsolute()"}
   addUserKnob {22 createPowerStabilize -STARTLINE T "import aePowerPinFun\naePowerPinFun.createPowerStabilize()"}
  }
  Blur {
   size 75
   name Blur3
   xpos 6580
   ypos -2685
  }
  Read {
   inputs 0
   file_type exr
   file "\[value filepath]Flares/Side/default_side.%08d.exr"
   localizationPolicy on
   format "4096 2160 0 0 4096 2160 1 4K_DCP"
   last 16
   after black
   origlast 16
   origset true
   on_error black
   version 16
   name Read9
   selected true
   xpos 6738
   ypos -2859
   postage_stamp false
  }
  Multiply {
   inputs 1+1
   value {{SparksSideFlash}}
   invert_mask true
   name Multiply63
   xpos 6738
   ypos -2685
  }
  FrameHold {
   firstFrame {{1+((frame%1)*(count))}}
   name FrameHold24
   label "assets x\[value count]"
   xpos 6738
   ypos -2634
   addUserKnob {20 User}
   addUserKnob {3 count}
   count 16
  }
  Switch {
   inputs 10
   which {{SelectAssetFlash}}
   name Switch5
   xpos 6738
   ypos -2391
  }
push 0
  Switch {
   inputs 2
   which {{floor(((frame>=1)+(frame<2))/2)}}
   name Switch14
   xpos 6738
   ypos -2152
  }
  Transform {
   scale {-1 1}
   center {2048 1080}
   shutteroffset centred
   name Transform1
   label "direction fix"
   xpos 6738
   ypos -1841
  }
  Transform {
   scale {{ScaleSideFlash.w} {ScaleSideFlash.h}}
   center {2048 1080}
   shutteroffset centred
   name Transform41
   label scaling
   xpos 6738
   ypos -1791
  }
  Reformat {
   resize height
   pbb true
   name Reformat1
   xpos 6738
   ypos -1715
  }
  Dot {
   name Dot1
   xpos 6772
   ypos -871
  }
  Dot {
   name Dot6
   xpos 7829
   ypos -871
  }
set N4d8fe120 [stack 0]
  Dot {
   name Dot4
   xpos 8023
   ypos -871
  }
set N5d6f6560 [stack 0]
  Dot {
   name Dot8
   xpos 8217
   ypos -871
  }
set N573f42b0 [stack 0]
  Dot {
   name Dot10
   xpos 8411
   ypos -871
  }
set N56ffc6e0 [stack 0]
  Dot {
   name Dot12
   xpos 8605
   ypos -871
  }
set N326500b0 [stack 0]
  Dot {
   name Dot14
   xpos 8799
   ypos -871
  }
set N4e7fc4d0 [stack 0]
  Dot {
   name Dot16
   xpos 8993
   ypos -871
  }
set N5d0f2ef0 [stack 0]
  Dot {
   name Dot18
   xpos 9187
   ypos -871
  }
set N5edeff50 [stack 0]
  Dot {
   name Dot20
   xpos 9424
   ypos -871
  }
set N4ddf0630 [stack 0]
  Dot {
   name Dot22
   xpos 9618
   ypos -871
  }
set N339bee70 [stack 0]
  Dot {
   name Dot24
   xpos 9812
   ypos -871
  }
set N201a7d90 [stack 0]
  Dot {
   name Dot26
   xpos 10006
   ypos -871
  }
set N4fbf2670 [stack 0]
  Dot {
   name Dot64
   xpos 10237
   ypos -871
  }
set N5b4f34b0 [stack 0]
  Dot {
   name Dot66
   xpos 10431
   ypos -871
  }
set N50efe110 [stack 0]
  Dot {
   name Dot68
   xpos 10625
   ypos -871
  }
set N5d1f1a00 [stack 0]
  Dot {
   name Dot70
   xpos 10819
   ypos -871
  }
set N4daf73d0 [stack 0]
  Dot {
   name Dot72
   xpos 11013
   ypos -871
  }
set N5d0f1910 [stack 0]
  Dot {
   name Dot74
   xpos 11207
   ypos -871
  }
set N563f3640 [stack 0]
  Dot {
   name Dot76
   xpos 11401
   ypos -871
  }
set N4d0f0b40 [stack 0]
  Dot {
   name Dot78
   xpos 11595
   ypos -871
  }
set N7c3e70c0 [stack 0]
  Dot {
   name Dot80
   xpos 11832
   ypos -871
  }
set N7c3ec0c0 [stack 0]
  Dot {
   name Dot82
   xpos 12026
   ypos -871
  }
set N206270d0 [stack 0]
  Dot {
   name Dot102
   xpos 12220
   ypos -871
  }
set N2062c1a0 [stack 0]
  Dot {
   name Dot104
   xpos 12414
   ypos -871
  }
  Group {
   inputs 2
   name gunshot24
   label "shot: \[value shotcount]\non frame: \[value shot_\[value shotcount]]\n"
   xpos 12478
   ypos -813
   addUserKnob {20 User}
   addUserKnob {3 shotcount l shot}
   shotcount 24
   addUserKnob {3 shotstart l frame +INVISIBLE}
   shotstart {{"shotcount==0 ? 0 : shot\[value shotcount]-1"}}
  }
   BackdropNode {
    inputs 0
    name BackdropNode3
    knobChanged "try:\n    listenedKnobs = \['text', 'position', 'name']\n    node = nuke.thisNode()\n    name = node.knob('name').value()\n    text = node.knob('text').value()\n    position = node.knob('position').value()\n    position = \"<\" + position + \">\"\n    label = node.knob('label').value()\n    \n    if nuke.thisKnob().name() in listenedKnobs:\n        if text == \"\":\n            if node.knob('position').value() == \"left\":\n                node.knob('label').setValue()\n            else:\n                node.knob('label').setValue(position + name)\n        else:\n            if node.knob('position').value() == \"left\":\n                node.knob('label').setValue(text)\n            else:\n                node.knob('label').setValue(position + text)\n                \n    elif nuke.thisKnob().name() == 'font_size':\n        fontSize = node.knob('font_size').value()\n        node.knob('note_font_size').setValue(fontSize)\nexcept:\n    pass"
    tile_color 0x232323ff
    label "<Left><h2> Gunshot"
    note_font_size 31.5
    xpos -698
    ypos -924
    bdwidth 1057
    bdheight 2343
    addUserKnob {20 F_VFX l BackdropNode}
    addUserKnob {43 text l Text}
    text "<h2> Gunshot"
    addUserKnob {7 font_size l "Font Size" R 10 100}
    font_size 31.5
    addUserKnob {4 position l "" -STARTLINE M {Left Center}}
    addUserKnob {26 S01 l " " T " "}
    addUserKnob {22 grow l " <img src=\"F_scalep.png\">" -STARTLINE T "n=nuke.thisNode()\n\ndef grow(node=None,step=50):\n    try:\n        if not node:\n            n=nuke.selectedNode()\n        else:\n            n=node\n            n\['xpos'].setValue(n\['xpos'].getValue()-step)\n            n\['ypos'].setValue(n\['ypos'].getValue()-step)\n            n\['bdwidth'].setValue(n\['bdwidth'].getValue()+step*2)\n            n\['bdheight'].setValue(n\['bdheight'].getValue()+step*2)\n    except:\n        pass\ngrow(n,50)"}
    addUserKnob {22 shrink l " <img src=\"F_scalem.png\">" -STARTLINE T "n=nuke.thisNode()\n\ndef shrink(node=None,step=50):\n    try:\n        if not node:\n            n=nuke.selectedNode()\n        else:\n            n=node\n            n\['xpos'].setValue(n\['xpos'].getValue()+step)\n            n\['ypos'].setValue(n\['ypos'].getValue()+step)\n            n\['bdwidth'].setValue(n\['bdwidth'].getValue()-step*2)\n            n\['bdheight'].setValue(n\['bdheight'].getValue()-step*2)\n    except:\n        pass\nshrink(n,50)"}
    addUserKnob {22 colorandom l " <img src=\"ColorBars.png\">" -STARTLINE T "import colorsys, random\nn=nuke.thisNode()\nR,G,B= colorsys.hsv_to_rgb(random.random(),.1+random.random()*.15,.15+random.random()*.15)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ) )"}
    addUserKnob {22 darkgrey l "<font color=\"#232323\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.0, 0.0, 0.14]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 lightgrey l "<font color=\"#383838\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.0, 0.0, 0.22]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 red l "<font color=\"#8c3838\" size=6>■</font>" T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.0, 0.6, 0.55]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n" +STARTLINE}
    addUserKnob {22 orange l "<font color=\"#b28e59\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.1, 0.5, 0.7]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 yellow l "<font color=\"#ccc766\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.16, 0.5, 0.8]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 green l "<font color=\"#5d995b\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.33, 0.4, 0.6]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 cyan l "<font color=\"#72998f\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.46, 0.25, 0.6]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 blue l "<font color=\"#59687f\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.6, 0.3, 0.5]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 darkblue l "<font color=\"#63628c\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.67, 0.3, 0.55]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 magenta l "<font color=\"#927a99\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.8, 0.2, 0.6]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 pink l "<font color=\"#997a89\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.92, 0.2, 0.6]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {26 S02 l " " T " "}
    addUserKnob {26 Ftools l "" +STARTLINE T "<font color=\"#1C1C1C\"> v1.2 - Franklin VFX - 2018"}
   }
   BackdropNode {
    inputs 0
    name BackdropNode1
    knobChanged "try:\n    listenedKnobs = \['text', 'position', 'name']\n    node = nuke.thisNode()\n    name = node.knob('name').value()\n    text = node.knob('text').value()\n    position = node.knob('position').value()\n    position = \"<\" + position + \">\"\n    label = node.knob('label').value()\n    \n    if nuke.thisKnob().name() in listenedKnobs:\n        if text == \"\":\n            if node.knob('position').value() == \"left\":\n                node.knob('label').setValue()\n            else:\n                node.knob('label').setValue(position + name)\n        else:\n            if node.knob('position').value() == \"left\":\n                node.knob('label').setValue(text)\n            else:\n                node.knob('label').setValue(position + text)\n                \n    elif nuke.thisKnob().name() == 'font_size':\n        fontSize = node.knob('font_size').value()\n        node.knob('note_font_size').setValue(fontSize)\nexcept:\n    pass"
    tile_color 0x927a99ff
    note_font_size 50
    xpos -460
    ypos -257
    bdwidth 435
    bdheight 786
    z_order 1
    addUserKnob {20 F_VFX l BackdropNode}
    addUserKnob {43 text l Text}
    addUserKnob {7 font_size l "Font Size" R 10 100}
    font_size 50
    addUserKnob {4 position l "" -STARTLINE M {Left Center}}
    addUserKnob {26 S01 l " " T " "}
    addUserKnob {22 grow l " <img src=\"F_scalep.png\">" -STARTLINE T "n=nuke.thisNode()\n\ndef grow(node=None,step=50):\n    try:\n        if not node:\n            n=nuke.selectedNode()\n        else:\n            n=node\n            n\['xpos'].setValue(n\['xpos'].getValue()-step)\n            n\['ypos'].setValue(n\['ypos'].getValue()-step)\n            n\['bdwidth'].setValue(n\['bdwidth'].getValue()+step*2)\n            n\['bdheight'].setValue(n\['bdheight'].getValue()+step*2)\n    except:\n        pass\ngrow(n,50)"}
    addUserKnob {22 shrink l " <img src=\"F_scalem.png\">" -STARTLINE T "n=nuke.thisNode()\n\ndef shrink(node=None,step=50):\n    try:\n        if not node:\n            n=nuke.selectedNode()\n        else:\n            n=node\n            n\['xpos'].setValue(n\['xpos'].getValue()+step)\n            n\['ypos'].setValue(n\['ypos'].getValue()+step)\n            n\['bdwidth'].setValue(n\['bdwidth'].getValue()-step*2)\n            n\['bdheight'].setValue(n\['bdheight'].getValue()-step*2)\n    except:\n        pass\nshrink(n,50)"}
    addUserKnob {22 colorandom l " <img src=\"ColorBars.png\">" -STARTLINE T "import colorsys, random\nn=nuke.thisNode()\nR,G,B= colorsys.hsv_to_rgb(random.random(),.1+random.random()*.15,.15+random.random()*.15)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ) )"}
    addUserKnob {22 darkgrey l "<font color=\"#232323\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.0, 0.0, 0.14]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 lightgrey l "<font color=\"#383838\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.0, 0.0, 0.22]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 red l "<font color=\"#8c3838\" size=6>■</font>" T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.0, 0.6, 0.55]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n" +STARTLINE}
    addUserKnob {22 orange l "<font color=\"#b28e59\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.1, 0.5, 0.7]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 yellow l "<font color=\"#ccc766\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.16, 0.5, 0.8]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 green l "<font color=\"#5d995b\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.33, 0.4, 0.6]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 cyan l "<font color=\"#72998f\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.46, 0.25, 0.6]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 blue l "<font color=\"#59687f\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.6, 0.3, 0.5]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 darkblue l "<font color=\"#63628c\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.67, 0.3, 0.55]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 magenta l "<font color=\"#927a99\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.8, 0.2, 0.6]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 pink l "<font color=\"#997a89\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.92, 0.2, 0.6]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {26 S02 l " " T " "}
    addUserKnob {26 Ftools l "" +STARTLINE T "<font color=\"#1C1C1C\"> v1.2 - Franklin VFX - 2018"}
   }
   Constant {
    inputs 0
    channels rgb
    name Constant4
    xpos -648
    ypos 987
   }
   AdjBBox {
    numpixels {{size_bbox}}
    name AdjBBox4
    xpos -648
    ypos 1120
   }
   Dot {
    name Dot19
    xpos -614
    ypos 1200
   }
   Axis3 {
    inputs 0
    useMatrix true
    matrix {
        {{parent.cCard3D_1.matrix} {parent.cCard3D_1.matrix} {parent.cCard3D_1.matrix} {parent.cCard3D_1.matrix}}
        {{parent.cCard3D_1.matrix} {parent.cCard3D_1.matrix} {parent.cCard3D_1.matrix} {parent.cCard3D_1.matrix}}
        {{parent.cCard3D_1.matrix} {parent.cCard3D_1.matrix} {parent.cCard3D_1.matrix} {parent.cCard3D_1.matrix}}
        {{parent.cCard3D_1.matrix} {parent.cCard3D_1.matrix} {parent.cCard3D_1.matrix} {parent.cCard3D_1.matrix}}
      }
    name Axis3
    xpos -207
    ypos 48
   }
set N9807b420 [stack 0]
push 0
   Input {
    inputs 0
    name Side
    xpos -135
    ypos -1101
   }
   TimeOffset {
    time_offset {{"shotnmbr==0 ? 0 : shot_\[value shotnmbr]-1"}}
    time ""
    name CTimeOffset7
    label "shot: \[value shotnmbr]\non frame \[value time_offset]"
    xpos -135
    ypos -853
    addUserKnob {20 User}
    addUserKnob {3 shotnmbr l "shot "}
    shotnmbr {{shotcount}}
    addUserKnob {3 ref}
    ref {{time_offset+1}}
   }
   Group {
    name DecimalTimeOffset1
    tile_color 0xafa35dff
    label "random asset\n(based on brighness)"
    note_font "Bitstream Vera Sans Bold"
    xpos -135
    ypos -690
    addUserKnob {20 User}
    addUserKnob {7 decimal l "time offset (decimal)"}
    decimal {{"floor\n(\n  (\n  (  ((((random((shotcount*823)+((seed+seed_offset_\[value shotcount])*212))-0.5)*  ((1-( abs(brighness_flare-0.5) )*2)+1)  )+0.5)*0.5)  * (1-brighness_flare)  )\n\n  +\n\n  (  (((((random((shotcount*823)+((seed+seed_offset_\[value shotcount])*212))-0.5)*  ((1-( abs(brighness_flare-0.5) )*2)+1)  )+0.5)*0.5)+0.5)  * (brighness_flare)  )\n  )\n  *1000\n)\n\n/1000"}}
    addUserKnob {26 ""}
    addUserKnob {26 _1 l "" +STARTLINE T "Chris Fryer | 2020\nupdated by Yorben Otto | 2024"}
   }
    Input {
     inputs 0
     name Input1
     xpos 426
     ypos -793
    }
    TimeOffset {
     time_offset {{(-floor(parent.decimal))*(DecimalTimeOffset1.decimal<0)}}
     time ""
     name TimeOffset1
     xpos 426
     ypos -674
    }
    Dot {
     name Dot6
     xpos 460
     ypos -635
    }
set N5e00dc50 [stack 0]
    Dot {
     name Dot5
     xpos 350
     ypos -635
    }
    Dot {
     name Dot7
     xpos 350
     ypos -365
    }
push $N5e00dc50
    Dot {
     name Dot1
     xpos 572
     ypos -635
    }
    TimeBlur {
     divisions 2
     shutter {{(parent.decimal-(floor(parent.decimal)))*2}}
     shutteroffset start
     shuttercustomoffset 0
     name TimeBlur1
     xpos 538
     ypos -558
    }
    Dot {
     name Dot2
     xpos 572
     ypos -490
    }
push $N5e00dc50
    TimeBlur {
     divisions 2
     shutter {{parent.decimal*2}}
     shutteroffset start
     shuttercustomoffset 0
     name TimeBlur8
     xpos 426
     ypos -556
    }
    Switch {
     inputs 2
     which {{parent.decimal<0}}
     name Switch1
     xpos 426
     ypos -494
    }
    Multiply {
     value {{parent.TimeBlur8.divisions}}
     name Multiply6
     xpos 426
     ypos -436
    }
    Merge2 {
     inputs 2
     operation from
     name Merge6
     xpos 426
     ypos -369
    }
set Nca0857d0 [stack 0]
    Output {
     name Output1
     xpos 426
     ypos -221
    }
push $Nca0857d0
push $Nca0857d0
    Viewer {
     inputs 2
     frame_range 1-100
     viewerProcess "sRGB (default)"
     name Viewer1
     xpos 675
     ypos -246
    }
   end_group
   NoTimeBlur {
    name NoTimeBlur6
    xpos -135
    ypos -608
   }
   Dot {
    name Dot21
    xpos -101
    ypos -449
   }
set Nca063020 [stack 0]
   Dot {
    name Dot22
    xpos -245
    ypos -449
   }
   Multiply {
    value {{math_matrix.result_y_flash(parent.CTimeOffset7.ref)}}
    name Angle_reveal_top
    label TOP
    xpos -279
    ypos -371
   }
   Transform {
    scale {{0.05+(0.05*(((parent.DecimalTimeOffset1.decimal-0.5)*2)*ScaleVariationFlash))}}
    center {{root.width/2 x1015 2304} {root.height/2}}
    shutteroffset centred
    name random_size_top
    xpos -279
    ypos -136
   }
   Card3D {
    inputs 3
    rot_order ZYX
    translate {0 0 0}
    rotate {90 0 0}
    shutteroffset centred
    name cCard3D5
    tile_color 0x7b1d1dff
    xpos -279
    ypos 153
    addUserKnob {20 User l parent}
    addUserKnob {22 python_button l "set parent" t "select parent node, and press this button to set the selected node as parent" +INVISIBLE T "n = nuke.selectedNode()\['name'].getValue()\nnuke.thisNode()\['string'].setValue(n)" +STARTLINE}
    addUserKnob {1 string l parent +INVISIBLE}
    string null
    addUserKnob {3 ref l "ref frame"}
    ref 1015
   }
   Transform {
    translate {{"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].translate.x(ref)\}]"} {"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].translate.y(ref)\}]"}}
    rotate {{"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].rotate-\[value parent_gun].rotate(ref)\}]"}}
    scale {{"\[if \{\[value parent_gun]==\"null\"\} \{return 1\} \{return 1+(\[value parent_gun].scale-\[value parent_gun].scale(ref))\}]"}}
    center {{"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].center.x(ref)\}]"} {"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].center.y(ref)\}]"}}
    name GUNMatchMove
    label "\n"
    xpos -279
    ypos 247
    addUserKnob {20 User l parent}
    addUserKnob {3 ref}
    ref {{parent.CTimeOffset7.ref}}
   }
   Transform {
    translate {{"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].translate.x-\[value parent_env].translate.x(ref)\}]"} {"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].translate.y-\[value parent_env].translate.y(ref)\}]"}}
    rotate {{"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].rotate-\[value parent_env].rotate(ref)\}]"}}
    scale {{"\[if \{\[value parent_gun]==\"null\"\} \{return 1\} \{return 1+(\[value parent_env].scale-\[value parent_env].scale(ref))\}]"}}
    center {{"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].center.x(ref)\}]"} {"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].center.y(ref)\}]"}}
    motionblur {{(mode==2)*0.2}}
    shutter {{FlashMB*(0.175*0.3)}}
    shutteroffset centred
    name ENVMatchMove
    xpos -279
    ypos 321
    addUserKnob {20 User l parent}
    addUserKnob {3 ref}
    ref {{parent.CTimeOffset7.ref}}
   }
   Transform {
    translate {{"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return -((root.width/2)-(\[value parent_gun].center.x(1)+\[value parent_gun].translate.x(1)))\}]"} {"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return -((root.height/2)-(\[value parent_gun].center.y(1)+\[value parent_gun].translate.y(1)))\}]"}}
    shutteroffset centred
    name Transform_GUNMatchMove1
    label "alignment correction"
    xpos -279
    ypos 408
    addUserKnob {20 User l parent}
    addUserKnob {22 python_button l "set parent" t "select parent node, and press this button to set the selected node as parent" T "n = nuke.selectedNode()\['name'].getValue()\nnuke.thisNode()\['string'].setValue(n)" +STARTLINE}
    addUserKnob {1 string l parent}
    string Transform_MatchMove10
    addUserKnob {3 ref +INVISIBLE}
    ref {{parent.cCard3D_8.ref}}
   }
   Remove {
    operation keep
    channels rgb
    name Remove10
    xpos -279
    ypos 489
   }
push 0
   Switch {
    inputs 2
    which {{ActivateSideFlash(CTimeOffset7.ref)}}
    name Switch1
    label "keyframeable disable "
    xpos -279
    ypos 587
   }
push 0
   Switch {
    inputs 2
    which {{parent.Angle_reveal_top.value!=0}}
    name Switch4
    label "disable based on angle"
    xpos -279
    ypos 670
   }
   Dot {
    name Dot1
    xpos -245
    ypos 717
   }
push 0
push $N9807b420
push 0
   Input {
    inputs 0
    name Front
    xpos -430
    ypos -1102
    number 1
   }
   TimeOffset {
    time_offset {{"shotnmbr==0 ? 0 : shot_\[value shotnmbr]-1"}}
    time ""
    name CTimeOffset8
    xpos -430
    ypos -840
    addUserKnob {20 User}
    addUserKnob {3 shotnmbr l "shot "}
    shotnmbr {{parent.CTimeOffset7.shotnmbr}}
   }
   Group {
    name DecimalTimeOffset
    tile_color 0xafa35dff
    label "random asset\n(based on brighness)"
    note_font "Bitstream Vera Sans Bold"
    xpos -430
    ypos -693
    addUserKnob {20 User}
    addUserKnob {7 decimal l "time offset (decimal)"}
    decimal {{"floor\n(\n  (\n  (  ((((random((shotcount*823)+((seed+seed_offset_\[value shotcount])*212))-0.5)*  ((1-( abs(brighness_flare-0.5) )*2)+1)  )+0.5)*0.5)  * (1-brighness_flare)  )\n\n  +\n\n  (  (((((random((shotcount*823)+((seed+seed_offset_\[value shotcount])*212))-0.5)*  ((1-( abs(brighness_flare-0.5) )*2)+1)  )+0.5)*0.5)+0.5)  * (brighness_flare)  )\n  )\n  *1000\n)\n\n/1000"}}
    addUserKnob {26 ""}
    addUserKnob {26 _1 l "" +STARTLINE T "Chris Fryer | 2020\nupdated by Yorben Otto | 2024"}
   }
    Input {
     inputs 0
     name Input1
     xpos 426
     ypos -793
    }
    TimeOffset {
     time_offset {{(-floor(parent.decimal))*(DecimalTimeOffset.decimal<0)}}
     time ""
     name TimeOffset1
     xpos 426
     ypos -674
    }
    Dot {
     name Dot6
     xpos 460
     ypos -635
    }
set N3389f790 [stack 0]
    Dot {
     name Dot5
     xpos 350
     ypos -635
    }
    Dot {
     name Dot7
     xpos 350
     ypos -365
    }
push $N3389f790
    Dot {
     name Dot1
     xpos 572
     ypos -635
    }
    TimeBlur {
     divisions 2
     shutter {{(parent.decimal-(floor(parent.decimal)))*2}}
     shutteroffset start
     shuttercustomoffset 0
     name TimeBlur1
     xpos 538
     ypos -558
    }
    Dot {
     name Dot2
     xpos 572
     ypos -490
    }
push $N3389f790
    TimeBlur {
     divisions 2
     shutter {{parent.decimal*2}}
     shutteroffset start
     shuttercustomoffset 0
     name TimeBlur8
     xpos 426
     ypos -556
    }
    Switch {
     inputs 2
     which {{parent.decimal<0}}
     name Switch1
     xpos 426
     ypos -494
    }
    Multiply {
     value {{parent.TimeBlur8.divisions}}
     name Multiply6
     xpos 426
     ypos -436
    }
    Merge2 {
     inputs 2
     operation from
     name Merge6
     xpos 426
     ypos -369
    }
set N3fa55470 [stack 0]
    Output {
     name Output1
     xpos 426
     ypos -221
    }
push $N3fa55470
push $N3fa55470
    Viewer {
     inputs 2
     frame_range 1-100
     viewerProcess "sRGB (default)"
     name Viewer1
     xpos 675
     ypos -246
    }
   end_group
   NoTimeBlur {
    name NoTimeBlur7
    xpos -430
    ypos -617
   }
   Multiply {
    value {{math_matrix.result_x_flash(parent.CTimeOffset7.ref)}}
    name Angle_reveal_front
    label FRONT
    xpos -430
    ypos -375
   }
   Transform {
    scale {{0.05+(0.05*(((parent.DecimalTimeOffset1.decimal-0.5)*2)*ScaleVariationFlash))}}
    center {{root.width/2 x1015 2304} {root.height/2}}
    shutteroffset centred
    name random_size_front
    xpos -430
    ypos -134
   }
   Card3D {
    inputs 3
    rot_order ZYX
    translate {0 0 0}
    rotate {0 90 0}
    shutteroffset centred
    name cCard3D6
    tile_color 0x7b1d1dff
    xpos -430
    ypos 150
    addUserKnob {20 User l parent}
    addUserKnob {22 python_button l "set parent" t "select parent node, and press this button to set the selected node as parent" +INVISIBLE T "n = nuke.selectedNode()\['name'].getValue()\nnuke.thisNode()\['string'].setValue(n)" +STARTLINE}
    addUserKnob {1 string l parent +INVISIBLE}
    string null
    addUserKnob {3 ref l "ref frame"}
    ref 1015
   }
   Transform {
    translate {{"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].translate.x(ref)\}]"} {"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].translate.y(ref)\}]"}}
    rotate {{"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].rotate-\[value parent_gun].rotate(ref)\}]"}}
    scale {{"\[if \{\[value parent_gun]==\"null\"\} \{return 1\} \{return 1+(\[value parent_gun].scale-\[value parent_gun].scale(ref))\}]"}}
    center {{"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].center.x(ref)\}]"} {"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].center.y(ref)\}]"}}
    name GUNMatchMove2
    label "\n"
    xpos -430
    ypos 248
    addUserKnob {20 User l parent}
    addUserKnob {3 ref}
    ref {{parent.CTimeOffset7.ref}}
   }
   Transform {
    translate {{"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].translate.x-\[value parent_env].translate.x(ref)\}]"} {"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].translate.y-\[value parent_env].translate.y(ref)\}]"}}
    rotate {{"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].rotate-\[value parent_env].rotate(ref)\}]"}}
    scale {{"\[if \{\[value parent_gun]==\"null\"\} \{return 1\} \{return 1+(\[value parent_env].scale-\[value parent_env].scale(ref))\}]"}}
    center {{"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].center.x(ref)\}]"} {"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].center.y(ref)\}]"}}
    motionblur {{(mode==2)*0.2}}
    shutter {{FlashMB*(0.175*0.3)}}
    shutteroffset centred
    name ENVMatchMove2
    xpos -430
    ypos 320
    addUserKnob {20 User l parent}
    addUserKnob {3 ref}
    ref {{parent.CTimeOffset7.ref}}
   }
   Transform {
    translate {{"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return -((root.width/2)-(\[value parent_gun].center.x(1)+\[value parent_gun].translate.x(1)))\}]"} {"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return -((root.height/2)-(\[value parent_gun].center.y(1)+\[value parent_gun].translate.y(1)))\}]"}}
    shutteroffset centred
    name Transform_GUNMatchMove2
    label "alignment correction"
    xpos -430
    ypos 407
    addUserKnob {20 User l parent}
    addUserKnob {22 python_button l "set parent" t "select parent node, and press this button to set the selected node as parent" T "n = nuke.selectedNode()\['name'].getValue()\nnuke.thisNode()\['string'].setValue(n)" +STARTLINE}
    addUserKnob {1 string l parent}
    string Transform_MatchMove10
    addUserKnob {3 ref +INVISIBLE}
    ref {{parent.cCard3D_8.ref}}
   }
   Remove {
    operation keep
    channels rgb
    name Remove11
    xpos -430
    ypos 487
   }
push 0
   Switch {
    inputs 2
    which {{ActivateFrontFlash(CTimeOffset7.ref)}}
    name Switch7
    label "keyframeable disable "
    xpos -430
    ypos 586
   }
push 0
   Switch {
    inputs 2
    which {{parent.Angle_reveal_front.value!=0}}
    name Switch5
    label "disable based on angle"
    xpos -430
    ypos 670
   }
   Dot {
    name Dot2
    xpos -396
    ypos 749
   }
push $Nca063020
   Multiply {
    value {{math_matrix.result_z_flash(parent.CTimeOffset7.ref)}}
    name Angle_reveal_side
    label SIDE
    xpos -135
    ypos -374
   }
   Transform {
    scale {{0.05+(0.05*(((parent.DecimalTimeOffset1.decimal-0.5)*2)*ScaleVariationFlash))}}
    center {{root.width/2 x1015 2304} {root.height/2}}
    shutteroffset centred
    name random_size_side
    xpos -135
    ypos -137
   }
   Card3D {
    translate {{"\[if \{\[exists  parent.parent.parent.input0]\} \{return \[value \[topnode parent.parent.parent.input0].name].translate.x(ref)\} \{return 0\}]"} {"\[if \{\[exists  parent.parent.parent.input0]\} \{return \[value \[topnode parent.parent.parent.input0].name].translate.y(ref)\} \{return 0\}]"} {"\[if \{\[exists  parent.parent.parent.input0]\} \{return \[value \[topnode parent.parent.parent.input0].name].translate.z(ref)\} \{return -1\}]"}}
    rotate {{"\[if \{\[exists  parent.parent.parent.input0]\} \{return \[value \[topnode parent.parent.parent.input0].name].rotate.x(ref)\} \{return 0\}]"} {"\[if \{\[exists  parent.parent.parent.input0]\} \{return \[value \[topnode parent.parent.parent.input0].name].rotate.y(ref)\} \{return 0\}]"} {"\[if \{\[exists  parent.parent.parent.input0]\} \{return \[value \[topnode parent.parent.parent.input0].name].rotate.z(ref)\} \{return 0\}]"}}
    scaling {{"\[if \{\[exists  parent.parent.parent.input0]\} \{return \[value \[topnode parent.parent.parent.input0].name].scaling.x(ref)\} \{return 1\}]"} {"\[if \{\[exists  parent.parent.parent.input0]\} \{return \[value \[topnode parent.parent.parent.input0].name].scaling.y(ref)\} \{return 1\}]"} {"\[if \{\[exists  parent.parent.parent.input0]\} \{return \[value \[topnode parent.parent.parent.input0].name].scaling.z(ref)\} \{return 1\}]"}}
    uniform_scale {{"\[if \{\[exists  parent.parent.parent.input0]\} \{return (\[value \[topnode parent.parent.parent.input0].name].uniform_scale(ref)*25)\} \{return 25\}]"}}
    shutteroffset centred
    name cCard3D_1
    tile_color 0x7b1d1dff
    label "ref frame: \[value ref]"
    xpos -135
    ypos 147
    addUserKnob {20 User l parent}
    addUserKnob {22 python_button l "set parent" t "select parent node, and press this button to set the selected node as parent" +INVISIBLE T "n = nuke.selectedNode()\['name'].getValue()\nnuke.thisNode()\['string'].setValue(n)" +STARTLINE}
    addUserKnob {1 string l parent +INVISIBLE}
    string null
    addUserKnob {3 id l "id number"}
    id {{parent.CTimeOffset7.shotnmbr}}
    addUserKnob {3 ref l "ref frame"}
    ref {{parent.CTimeOffset7.ref}}
   }
   Transform {
    translate {{"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].translate.x(ref)\}]"} {"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].translate.y(ref)\}]"}}
    rotate {{"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].rotate-\[value parent_gun].rotate(ref)\}]"}}
    scale {{"\[if \{\[value parent_gun]==\"null\"\} \{return 1\} \{return 1+(\[value parent_gun].scale-\[value parent_gun].scale(ref))\}]"}}
    center {{"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].center.x(ref)\}]"} {"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].center.y(ref)\}]"}}
    name GUNMatchMove1
    label "\n"
    xpos -135
    ypos 241
    addUserKnob {20 User l parent}
    addUserKnob {3 ref}
    ref {{parent.CTimeOffset7.ref}}
   }
   Transform {
    translate {{"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].translate.x-\[value parent_env].translate.x(ref)\}]"} {"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].translate.y-\[value parent_env].translate.y(ref)\}]"}}
    rotate {{"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].rotate-\[value parent_env].rotate(ref)\}]"}}
    scale {{"\[if \{\[value parent_gun]==\"null\"\} \{return 1\} \{return 1+(\[value parent_env].scale-\[value parent_env].scale(ref))\}]"}}
    center {{"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].center.x(ref)\}]"} {"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].center.y(ref)\}]"}}
    motionblur {{(mode==2)*0.2}}
    shutter {{FlashMB*(0.175*0.3)}}
    shutteroffset centred
    name ENVMatchMove1
    xpos -135
    ypos 317
    addUserKnob {20 User l parent}
    addUserKnob {3 ref}
    ref {{parent.CTimeOffset7.ref}}
   }
   Transform {
    translate {{"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return -((root.width/2)-(\[value parent_gun].center.x(1)+\[value parent_gun].translate.x(1)))\}]"} {"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return -((root.height/2)-(\[value parent_gun].center.y(1)+\[value parent_gun].translate.y(1)))\}]"}}
    shutteroffset centred
    name Transform_GUNMatchMove3
    label "alignment correction"
    xpos -135
    ypos 405
    addUserKnob {20 User l parent}
    addUserKnob {22 python_button l "set parent" t "select parent node, and press this button to set the selected node as parent" T "n = nuke.selectedNode()\['name'].getValue()\nnuke.thisNode()\['string'].setValue(n)" +STARTLINE}
    addUserKnob {1 string l parent}
    string Transform_MatchMove10
    addUserKnob {3 ref +INVISIBLE}
    ref {{parent.cCard3D_8.ref}}
   }
   Remove {
    operation keep
    channels rgb
    name Remove12
    xpos -135
    ypos 489
   }
push 0
   Switch {
    inputs 2
    which {{ActivateSideFlash(CTimeOffset7.ref)}}
    name Switch3
    label "keyframeable disable "
    xpos -135
    ypos 587
   }
push 0
   Switch {
    inputs 2
    which {{parent.Angle_reveal_side.value!=0}}
    name Switch6
    label "disable based on angle"
    xpos -135
    ypos 671
   }
   Merge2 {
    inputs 3+1
    operation max
    name Merge1
    xpos -135
    ypos 745
   }
   Merge2 {
    inputs 2
    operation plus
    bbox intersection
    name Merge6
    xpos -135
    ypos 1196
   }
push 0
   Switch {
    inputs 2
    which {{"shot_\[value count]==0?0:(EnableExtraFrames==1?floor(((frame>=shot_\[value count])+(frame<=(shot_\[value count]+(4*((mode==1)+(mode==2))))))/2):frame==shot_\[value count])"}}
    name cSwitch_3
    selected true
    xpos -135
    ypos 1354
    addUserKnob {20 User}
    addUserKnob {3 count l "shot number"}
    count {{parent.CTimeOffset7.shotnmbr}}
   }
   Output {
    name Output1
    xpos -135
    ypos 1861
   }
  end_group
push $N544f3820
push $N50efe110
  Group {
   inputs 2
   name gunshot14
   label "shot: \[value shotcount]\non frame: \[value shot_\[value shotcount]]\n"
   xpos 10495
   ypos -815
   addUserKnob {20 User}
   addUserKnob {3 shotcount l shot}
   shotcount 14
   addUserKnob {3 shotstart l frame +INVISIBLE}
   shotstart {{"shotcount==0 ? 0 : shot\[value shotcount]-1"}}
  }
   BackdropNode {
    inputs 0
    name BackdropNode3
    knobChanged "try:\n    listenedKnobs = \['text', 'position', 'name']\n    node = nuke.thisNode()\n    name = node.knob('name').value()\n    text = node.knob('text').value()\n    position = node.knob('position').value()\n    position = \"<\" + position + \">\"\n    label = node.knob('label').value()\n    \n    if nuke.thisKnob().name() in listenedKnobs:\n        if text == \"\":\n            if node.knob('position').value() == \"left\":\n                node.knob('label').setValue()\n            else:\n                node.knob('label').setValue(position + name)\n        else:\n            if node.knob('position').value() == \"left\":\n                node.knob('label').setValue(text)\n            else:\n                node.knob('label').setValue(position + text)\n                \n    elif nuke.thisKnob().name() == 'font_size':\n        fontSize = node.knob('font_size').value()\n        node.knob('note_font_size').setValue(fontSize)\nexcept:\n    pass"
    tile_color 0x232323ff
    label "<Left><h2> Gunshot"
    note_font_size 31.5
    xpos -698
    ypos -924
    bdwidth 1057
    bdheight 2343
    addUserKnob {20 F_VFX l BackdropNode}
    addUserKnob {43 text l Text}
    text "<h2> Gunshot"
    addUserKnob {7 font_size l "Font Size" R 10 100}
    font_size 31.5
    addUserKnob {4 position l "" -STARTLINE M {Left Center}}
    addUserKnob {26 S01 l " " T " "}
    addUserKnob {22 grow l " <img src=\"F_scalep.png\">" -STARTLINE T "n=nuke.thisNode()\n\ndef grow(node=None,step=50):\n    try:\n        if not node:\n            n=nuke.selectedNode()\n        else:\n            n=node\n            n\['xpos'].setValue(n\['xpos'].getValue()-step)\n            n\['ypos'].setValue(n\['ypos'].getValue()-step)\n            n\['bdwidth'].setValue(n\['bdwidth'].getValue()+step*2)\n            n\['bdheight'].setValue(n\['bdheight'].getValue()+step*2)\n    except:\n        pass\ngrow(n,50)"}
    addUserKnob {22 shrink l " <img src=\"F_scalem.png\">" -STARTLINE T "n=nuke.thisNode()\n\ndef shrink(node=None,step=50):\n    try:\n        if not node:\n            n=nuke.selectedNode()\n        else:\n            n=node\n            n\['xpos'].setValue(n\['xpos'].getValue()+step)\n            n\['ypos'].setValue(n\['ypos'].getValue()+step)\n            n\['bdwidth'].setValue(n\['bdwidth'].getValue()-step*2)\n            n\['bdheight'].setValue(n\['bdheight'].getValue()-step*2)\n    except:\n        pass\nshrink(n,50)"}
    addUserKnob {22 colorandom l " <img src=\"ColorBars.png\">" -STARTLINE T "import colorsys, random\nn=nuke.thisNode()\nR,G,B= colorsys.hsv_to_rgb(random.random(),.1+random.random()*.15,.15+random.random()*.15)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ) )"}
    addUserKnob {22 darkgrey l "<font color=\"#232323\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.0, 0.0, 0.14]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 lightgrey l "<font color=\"#383838\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.0, 0.0, 0.22]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 red l "<font color=\"#8c3838\" size=6>■</font>" T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.0, 0.6, 0.55]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n" +STARTLINE}
    addUserKnob {22 orange l "<font color=\"#b28e59\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.1, 0.5, 0.7]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 yellow l "<font color=\"#ccc766\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.16, 0.5, 0.8]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 green l "<font color=\"#5d995b\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.33, 0.4, 0.6]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 cyan l "<font color=\"#72998f\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.46, 0.25, 0.6]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 blue l "<font color=\"#59687f\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.6, 0.3, 0.5]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 darkblue l "<font color=\"#63628c\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.67, 0.3, 0.55]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 magenta l "<font color=\"#927a99\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.8, 0.2, 0.6]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 pink l "<font color=\"#997a89\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.92, 0.2, 0.6]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {26 S02 l " " T " "}
    addUserKnob {26 Ftools l "" +STARTLINE T "<font color=\"#1C1C1C\"> v1.2 - Franklin VFX - 2018"}
   }
   BackdropNode {
    inputs 0
    name BackdropNode1
    knobChanged "try:\n    listenedKnobs = \['text', 'position', 'name']\n    node = nuke.thisNode()\n    name = node.knob('name').value()\n    text = node.knob('text').value()\n    position = node.knob('position').value()\n    position = \"<\" + position + \">\"\n    label = node.knob('label').value()\n    \n    if nuke.thisKnob().name() in listenedKnobs:\n        if text == \"\":\n            if node.knob('position').value() == \"left\":\n                node.knob('label').setValue()\n            else:\n                node.knob('label').setValue(position + name)\n        else:\n            if node.knob('position').value() == \"left\":\n                node.knob('label').setValue(text)\n            else:\n                node.knob('label').setValue(position + text)\n                \n    elif nuke.thisKnob().name() == 'font_size':\n        fontSize = node.knob('font_size').value()\n        node.knob('note_font_size').setValue(fontSize)\nexcept:\n    pass"
    tile_color 0x927a99ff
    note_font_size 50
    xpos -460
    ypos -257
    bdwidth 435
    bdheight 786
    z_order 1
    addUserKnob {20 F_VFX l BackdropNode}
    addUserKnob {43 text l Text}
    addUserKnob {7 font_size l "Font Size" R 10 100}
    font_size 50
    addUserKnob {4 position l "" -STARTLINE M {Left Center}}
    addUserKnob {26 S01 l " " T " "}
    addUserKnob {22 grow l " <img src=\"F_scalep.png\">" -STARTLINE T "n=nuke.thisNode()\n\ndef grow(node=None,step=50):\n    try:\n        if not node:\n            n=nuke.selectedNode()\n        else:\n            n=node\n            n\['xpos'].setValue(n\['xpos'].getValue()-step)\n            n\['ypos'].setValue(n\['ypos'].getValue()-step)\n            n\['bdwidth'].setValue(n\['bdwidth'].getValue()+step*2)\n            n\['bdheight'].setValue(n\['bdheight'].getValue()+step*2)\n    except:\n        pass\ngrow(n,50)"}
    addUserKnob {22 shrink l " <img src=\"F_scalem.png\">" -STARTLINE T "n=nuke.thisNode()\n\ndef shrink(node=None,step=50):\n    try:\n        if not node:\n            n=nuke.selectedNode()\n        else:\n            n=node\n            n\['xpos'].setValue(n\['xpos'].getValue()+step)\n            n\['ypos'].setValue(n\['ypos'].getValue()+step)\n            n\['bdwidth'].setValue(n\['bdwidth'].getValue()-step*2)\n            n\['bdheight'].setValue(n\['bdheight'].getValue()-step*2)\n    except:\n        pass\nshrink(n,50)"}
    addUserKnob {22 colorandom l " <img src=\"ColorBars.png\">" -STARTLINE T "import colorsys, random\nn=nuke.thisNode()\nR,G,B= colorsys.hsv_to_rgb(random.random(),.1+random.random()*.15,.15+random.random()*.15)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ) )"}
    addUserKnob {22 darkgrey l "<font color=\"#232323\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.0, 0.0, 0.14]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 lightgrey l "<font color=\"#383838\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.0, 0.0, 0.22]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 red l "<font color=\"#8c3838\" size=6>■</font>" T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.0, 0.6, 0.55]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n" +STARTLINE}
    addUserKnob {22 orange l "<font color=\"#b28e59\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.1, 0.5, 0.7]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 yellow l "<font color=\"#ccc766\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.16, 0.5, 0.8]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 green l "<font color=\"#5d995b\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.33, 0.4, 0.6]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 cyan l "<font color=\"#72998f\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.46, 0.25, 0.6]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 blue l "<font color=\"#59687f\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.6, 0.3, 0.5]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 darkblue l "<font color=\"#63628c\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.67, 0.3, 0.55]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 magenta l "<font color=\"#927a99\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.8, 0.2, 0.6]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 pink l "<font color=\"#997a89\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.92, 0.2, 0.6]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {26 S02 l " " T " "}
    addUserKnob {26 Ftools l "" +STARTLINE T "<font color=\"#1C1C1C\"> v1.2 - Franklin VFX - 2018"}
   }
   Constant {
    inputs 0
    channels rgb
    name Constant4
    xpos -648
    ypos 987
   }
   AdjBBox {
    numpixels {{size_bbox}}
    name AdjBBox4
    xpos -648
    ypos 1120
   }
   Dot {
    name Dot19
    xpos -614
    ypos 1200
   }
   Axis3 {
    inputs 0
    useMatrix true
    matrix {
        {{parent.cCard3D_1.matrix} {parent.cCard3D_1.matrix} {parent.cCard3D_1.matrix} {parent.cCard3D_1.matrix}}
        {{parent.cCard3D_1.matrix} {parent.cCard3D_1.matrix} {parent.cCard3D_1.matrix} {parent.cCard3D_1.matrix}}
        {{parent.cCard3D_1.matrix} {parent.cCard3D_1.matrix} {parent.cCard3D_1.matrix} {parent.cCard3D_1.matrix}}
        {{parent.cCard3D_1.matrix} {parent.cCard3D_1.matrix} {parent.cCard3D_1.matrix} {parent.cCard3D_1.matrix}}
      }
    name Axis3
    xpos -207
    ypos 48
   }
set N3263cf60 [stack 0]
push 0
   Input {
    inputs 0
    name Side
    xpos -135
    ypos -1101
   }
   TimeOffset {
    time_offset {{"shotnmbr==0 ? 0 : shot_\[value shotnmbr]-1"}}
    time ""
    name CTimeOffset7
    label "shot: \[value shotnmbr]\non frame \[value time_offset]"
    xpos -135
    ypos -853
    addUserKnob {20 User}
    addUserKnob {3 shotnmbr l "shot "}
    shotnmbr {{shotcount}}
    addUserKnob {3 ref}
    ref {{time_offset+1}}
   }
   Group {
    name DecimalTimeOffset1
    tile_color 0xafa35dff
    label "random asset\n(based on brighness)"
    note_font "Bitstream Vera Sans Bold"
    xpos -135
    ypos -690
    addUserKnob {20 User}
    addUserKnob {7 decimal l "time offset (decimal)"}
    decimal {{"floor\n(\n  (\n  (  ((((random((shotcount*823)+((seed+seed_offset_\[value shotcount])*212))-0.5)*  ((1-( abs(brighness_flare-0.5) )*2)+1)  )+0.5)*0.5)  * (1-brighness_flare)  )\n\n  +\n\n  (  (((((random((shotcount*823)+((seed+seed_offset_\[value shotcount])*212))-0.5)*  ((1-( abs(brighness_flare-0.5) )*2)+1)  )+0.5)*0.5)+0.5)  * (brighness_flare)  )\n  )\n  *1000\n)\n\n/1000"}}
    addUserKnob {26 ""}
    addUserKnob {26 _1 l "" +STARTLINE T "Chris Fryer | 2020\nupdated by Yorben Otto | 2024"}
   }
    Input {
     inputs 0
     name Input1
     xpos 426
     ypos -793
    }
    TimeOffset {
     time_offset {{(-floor(parent.decimal))*(DecimalTimeOffset1.decimal<0)}}
     time ""
     name TimeOffset1
     xpos 426
     ypos -674
    }
    Dot {
     name Dot6
     xpos 460
     ypos -635
    }
set N3fad0170 [stack 0]
    Dot {
     name Dot5
     xpos 350
     ypos -635
    }
    Dot {
     name Dot7
     xpos 350
     ypos -365
    }
push $N3fad0170
    Dot {
     name Dot1
     xpos 572
     ypos -635
    }
    TimeBlur {
     divisions 2
     shutter {{(parent.decimal-(floor(parent.decimal)))*2}}
     shutteroffset start
     shuttercustomoffset 0
     name TimeBlur1
     xpos 538
     ypos -558
    }
    Dot {
     name Dot2
     xpos 572
     ypos -490
    }
push $N3fad0170
    TimeBlur {
     divisions 2
     shutter {{parent.decimal*2}}
     shutteroffset start
     shuttercustomoffset 0
     name TimeBlur8
     xpos 426
     ypos -556
    }
    Switch {
     inputs 2
     which {{parent.decimal<0}}
     name Switch1
     xpos 426
     ypos -494
    }
    Multiply {
     value {{parent.TimeBlur8.divisions}}
     name Multiply6
     xpos 426
     ypos -436
    }
    Merge2 {
     inputs 2
     operation from
     name Merge6
     xpos 426
     ypos -369
    }
set N3fb120b0 [stack 0]
    Output {
     name Output1
     xpos 426
     ypos -221
    }
push $N3fb120b0
push $N3fb120b0
    Viewer {
     inputs 2
     frame_range 1-100
     viewerProcess "sRGB (default)"
     name Viewer1
     xpos 675
     ypos -246
    }
   end_group
   NoTimeBlur {
    name NoTimeBlur6
    xpos -135
    ypos -608
   }
   Dot {
    name Dot21
    xpos -101
    ypos -449
   }
set N3ed95440 [stack 0]
   Dot {
    name Dot22
    xpos -245
    ypos -449
   }
   Multiply {
    value {{math_matrix.result_y_flash(parent.CTimeOffset7.ref)}}
    name Angle_reveal_top
    label TOP
    xpos -279
    ypos -371
   }
   Transform {
    scale {{0.05+(0.05*(((parent.DecimalTimeOffset1.decimal-0.5)*2)*ScaleVariationFlash))}}
    center {{root.width/2 x1015 2304} {root.height/2}}
    shutteroffset centred
    name random_size_top
    xpos -279
    ypos -136
   }
   Card3D {
    inputs 3
    rot_order ZYX
    translate {0 0 0}
    rotate {90 0 0}
    shutteroffset centred
    name cCard3D5
    tile_color 0x7b1d1dff
    xpos -279
    ypos 153
    addUserKnob {20 User l parent}
    addUserKnob {22 python_button l "set parent" t "select parent node, and press this button to set the selected node as parent" +INVISIBLE T "n = nuke.selectedNode()\['name'].getValue()\nnuke.thisNode()\['string'].setValue(n)" +STARTLINE}
    addUserKnob {1 string l parent +INVISIBLE}
    string null
    addUserKnob {3 ref l "ref frame"}
    ref 1015
   }
   Transform {
    translate {{"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].translate.x(ref)\}]"} {"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].translate.y(ref)\}]"}}
    rotate {{"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].rotate-\[value parent_gun].rotate(ref)\}]"}}
    scale {{"\[if \{\[value parent_gun]==\"null\"\} \{return 1\} \{return 1+(\[value parent_gun].scale-\[value parent_gun].scale(ref))\}]"}}
    center {{"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].center.x(ref)\}]"} {"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].center.y(ref)\}]"}}
    name GUNMatchMove
    label "\n"
    xpos -279
    ypos 247
    addUserKnob {20 User l parent}
    addUserKnob {3 ref}
    ref {{parent.CTimeOffset7.ref}}
   }
   Transform {
    translate {{"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].translate.x-\[value parent_env].translate.x(ref)\}]"} {"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].translate.y-\[value parent_env].translate.y(ref)\}]"}}
    rotate {{"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].rotate-\[value parent_env].rotate(ref)\}]"}}
    scale {{"\[if \{\[value parent_gun]==\"null\"\} \{return 1\} \{return 1+(\[value parent_env].scale-\[value parent_env].scale(ref))\}]"}}
    center {{"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].center.x(ref)\}]"} {"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].center.y(ref)\}]"}}
    motionblur {{(mode==2)*0.2}}
    shutter {{FlashMB*(0.175*0.3)}}
    shutteroffset centred
    name ENVMatchMove
    xpos -279
    ypos 321
    addUserKnob {20 User l parent}
    addUserKnob {3 ref}
    ref {{parent.CTimeOffset7.ref}}
   }
   Transform {
    translate {{"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return -((root.width/2)-(\[value parent_gun].center.x(1)+\[value parent_gun].translate.x(1)))\}]"} {"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return -((root.height/2)-(\[value parent_gun].center.y(1)+\[value parent_gun].translate.y(1)))\}]"}}
    shutteroffset centred
    name Transform_GUNMatchMove1
    label "alignment correction"
    xpos -279
    ypos 408
    addUserKnob {20 User l parent}
    addUserKnob {22 python_button l "set parent" t "select parent node, and press this button to set the selected node as parent" T "n = nuke.selectedNode()\['name'].getValue()\nnuke.thisNode()\['string'].setValue(n)" +STARTLINE}
    addUserKnob {1 string l parent}
    string Transform_MatchMove10
    addUserKnob {3 ref +INVISIBLE}
    ref {{parent.cCard3D_8.ref}}
   }
   Remove {
    operation keep
    channels rgb
    name Remove10
    xpos -279
    ypos 489
   }
push 0
   Switch {
    inputs 2
    which {{ActivateSideFlash(CTimeOffset7.ref)}}
    name Switch1
    label "keyframeable disable "
    xpos -279
    ypos 587
   }
push 0
   Switch {
    inputs 2
    which {{parent.Angle_reveal_top.value!=0}}
    name Switch4
    label "disable based on angle"
    xpos -279
    ypos 670
   }
   Dot {
    name Dot1
    xpos -245
    ypos 717
   }
push 0
push $N3263cf60
push 0
   Input {
    inputs 0
    name Front
    xpos -430
    ypos -1102
    number 1
   }
   TimeOffset {
    time_offset {{"shotnmbr==0 ? 0 : shot_\[value shotnmbr]-1"}}
    time ""
    name CTimeOffset8
    xpos -430
    ypos -840
    addUserKnob {20 User}
    addUserKnob {3 shotnmbr l "shot "}
    shotnmbr {{parent.CTimeOffset7.shotnmbr}}
   }
   Group {
    name DecimalTimeOffset
    tile_color 0xafa35dff
    label "random asset\n(based on brighness)"
    note_font "Bitstream Vera Sans Bold"
    xpos -430
    ypos -693
    addUserKnob {20 User}
    addUserKnob {7 decimal l "time offset (decimal)"}
    decimal {{"floor\n(\n  (\n  (  ((((random((shotcount*823)+((seed+seed_offset_\[value shotcount])*212))-0.5)*  ((1-( abs(brighness_flare-0.5) )*2)+1)  )+0.5)*0.5)  * (1-brighness_flare)  )\n\n  +\n\n  (  (((((random((shotcount*823)+((seed+seed_offset_\[value shotcount])*212))-0.5)*  ((1-( abs(brighness_flare-0.5) )*2)+1)  )+0.5)*0.5)+0.5)  * (brighness_flare)  )\n  )\n  *1000\n)\n\n/1000"}}
    addUserKnob {26 ""}
    addUserKnob {26 _1 l "" +STARTLINE T "Chris Fryer | 2020\nupdated by Yorben Otto | 2024"}
   }
    Input {
     inputs 0
     name Input1
     xpos 426
     ypos -793
    }
    TimeOffset {
     time_offset {{(-floor(parent.decimal))*(DecimalTimeOffset.decimal<0)}}
     time ""
     name TimeOffset1
     xpos 426
     ypos -674
    }
    Dot {
     name Dot6
     xpos 460
     ypos -635
    }
set Nd9f5c00 [stack 0]
    Dot {
     name Dot5
     xpos 350
     ypos -635
    }
    Dot {
     name Dot7
     xpos 350
     ypos -365
    }
push $Nd9f5c00
    Dot {
     name Dot1
     xpos 572
     ypos -635
    }
    TimeBlur {
     divisions 2
     shutter {{(parent.decimal-(floor(parent.decimal)))*2}}
     shutteroffset start
     shuttercustomoffset 0
     name TimeBlur1
     xpos 538
     ypos -558
    }
    Dot {
     name Dot2
     xpos 572
     ypos -490
    }
push $Nd9f5c00
    TimeBlur {
     divisions 2
     shutter {{parent.decimal*2}}
     shutteroffset start
     shuttercustomoffset 0
     name TimeBlur8
     xpos 426
     ypos -556
    }
    Switch {
     inputs 2
     which {{parent.decimal<0}}
     name Switch1
     xpos 426
     ypos -494
    }
    Multiply {
     value {{parent.TimeBlur8.divisions}}
     name Multiply6
     xpos 426
     ypos -436
    }
    Merge2 {
     inputs 2
     operation from
     name Merge6
     xpos 426
     ypos -369
    }
set Nda37b40 [stack 0]
    Output {
     name Output1
     xpos 426
     ypos -221
    }
push $Nda37b40
push $Nda37b40
    Viewer {
     inputs 2
     frame_range 1-100
     viewerProcess "sRGB (default)"
     name Viewer1
     xpos 675
     ypos -246
    }
   end_group
   NoTimeBlur {
    name NoTimeBlur7
    xpos -430
    ypos -617
   }
   Multiply {
    value {{math_matrix.result_x_flash(parent.CTimeOffset7.ref)}}
    name Angle_reveal_front
    label FRONT
    xpos -430
    ypos -375
   }
   Transform {
    scale {{0.05+(0.05*(((parent.DecimalTimeOffset1.decimal-0.5)*2)*ScaleVariationFlash))}}
    center {{root.width/2 x1015 2304} {root.height/2}}
    shutteroffset centred
    name random_size_front
    xpos -430
    ypos -134
   }
   Card3D {
    inputs 3
    rot_order ZYX
    translate {0 0 0}
    rotate {0 90 0}
    shutteroffset centred
    name cCard3D6
    tile_color 0x7b1d1dff
    xpos -430
    ypos 150
    addUserKnob {20 User l parent}
    addUserKnob {22 python_button l "set parent" t "select parent node, and press this button to set the selected node as parent" +INVISIBLE T "n = nuke.selectedNode()\['name'].getValue()\nnuke.thisNode()\['string'].setValue(n)" +STARTLINE}
    addUserKnob {1 string l parent +INVISIBLE}
    string null
    addUserKnob {3 ref l "ref frame"}
    ref 1015
   }
   Transform {
    translate {{"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].translate.x(ref)\}]"} {"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].translate.y(ref)\}]"}}
    rotate {{"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].rotate-\[value parent_gun].rotate(ref)\}]"}}
    scale {{"\[if \{\[value parent_gun]==\"null\"\} \{return 1\} \{return 1+(\[value parent_gun].scale-\[value parent_gun].scale(ref))\}]"}}
    center {{"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].center.x(ref)\}]"} {"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].center.y(ref)\}]"}}
    name GUNMatchMove2
    label "\n"
    xpos -430
    ypos 248
    addUserKnob {20 User l parent}
    addUserKnob {3 ref}
    ref {{parent.CTimeOffset7.ref}}
   }
   Transform {
    translate {{"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].translate.x-\[value parent_env].translate.x(ref)\}]"} {"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].translate.y-\[value parent_env].translate.y(ref)\}]"}}
    rotate {{"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].rotate-\[value parent_env].rotate(ref)\}]"}}
    scale {{"\[if \{\[value parent_gun]==\"null\"\} \{return 1\} \{return 1+(\[value parent_env].scale-\[value parent_env].scale(ref))\}]"}}
    center {{"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].center.x(ref)\}]"} {"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].center.y(ref)\}]"}}
    motionblur {{(mode==2)*0.2}}
    shutter {{FlashMB*(0.175*0.3)}}
    shutteroffset centred
    name ENVMatchMove2
    xpos -430
    ypos 320
    addUserKnob {20 User l parent}
    addUserKnob {3 ref}
    ref {{parent.CTimeOffset7.ref}}
   }
   Transform {
    translate {{"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return -((root.width/2)-(\[value parent_gun].center.x(1)+\[value parent_gun].translate.x(1)))\}]"} {"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return -((root.height/2)-(\[value parent_gun].center.y(1)+\[value parent_gun].translate.y(1)))\}]"}}
    shutteroffset centred
    name Transform_GUNMatchMove2
    label "alignment correction"
    xpos -430
    ypos 407
    addUserKnob {20 User l parent}
    addUserKnob {22 python_button l "set parent" t "select parent node, and press this button to set the selected node as parent" T "n = nuke.selectedNode()\['name'].getValue()\nnuke.thisNode()\['string'].setValue(n)" +STARTLINE}
    addUserKnob {1 string l parent}
    string Transform_MatchMove10
    addUserKnob {3 ref +INVISIBLE}
    ref {{parent.cCard3D_8.ref}}
   }
   Remove {
    operation keep
    channels rgb
    name Remove11
    xpos -430
    ypos 487
   }
push 0
   Switch {
    inputs 2
    which {{ActivateFrontFlash(CTimeOffset7.ref)}}
    name Switch7
    label "keyframeable disable "
    xpos -430
    ypos 586
   }
push 0
   Switch {
    inputs 2
    which {{parent.Angle_reveal_front.value!=0}}
    name Switch5
    label "disable based on angle"
    xpos -430
    ypos 670
   }
   Dot {
    name Dot2
    xpos -396
    ypos 749
   }
push $N3ed95440
   Multiply {
    value {{math_matrix.result_z_flash(parent.CTimeOffset7.ref)}}
    name Angle_reveal_side
    label SIDE
    xpos -135
    ypos -374
   }
   Transform {
    scale {{0.05+(0.05*(((parent.DecimalTimeOffset1.decimal-0.5)*2)*ScaleVariationFlash))}}
    center {{root.width/2 x1015 2304} {root.height/2}}
    shutteroffset centred
    name random_size_side
    xpos -135
    ypos -137
   }
   Card3D {
    translate {{"\[if \{\[exists  parent.parent.parent.input0]\} \{return \[value \[topnode parent.parent.parent.input0].name].translate.x(ref)\} \{return 0\}]"} {"\[if \{\[exists  parent.parent.parent.input0]\} \{return \[value \[topnode parent.parent.parent.input0].name].translate.y(ref)\} \{return 0\}]"} {"\[if \{\[exists  parent.parent.parent.input0]\} \{return \[value \[topnode parent.parent.parent.input0].name].translate.z(ref)\} \{return -1\}]"}}
    rotate {{"\[if \{\[exists  parent.parent.parent.input0]\} \{return \[value \[topnode parent.parent.parent.input0].name].rotate.x(ref)\} \{return 0\}]"} {"\[if \{\[exists  parent.parent.parent.input0]\} \{return \[value \[topnode parent.parent.parent.input0].name].rotate.y(ref)\} \{return 0\}]"} {"\[if \{\[exists  parent.parent.parent.input0]\} \{return \[value \[topnode parent.parent.parent.input0].name].rotate.z(ref)\} \{return 0\}]"}}
    scaling {{"\[if \{\[exists  parent.parent.parent.input0]\} \{return \[value \[topnode parent.parent.parent.input0].name].scaling.x(ref)\} \{return 1\}]"} {"\[if \{\[exists  parent.parent.parent.input0]\} \{return \[value \[topnode parent.parent.parent.input0].name].scaling.y(ref)\} \{return 1\}]"} {"\[if \{\[exists  parent.parent.parent.input0]\} \{return \[value \[topnode parent.parent.parent.input0].name].scaling.z(ref)\} \{return 1\}]"}}
    uniform_scale {{"\[if \{\[exists  parent.parent.parent.input0]\} \{return (\[value \[topnode parent.parent.parent.input0].name].uniform_scale(ref)*25)\} \{return 25\}]"}}
    shutteroffset centred
    name cCard3D_1
    tile_color 0x7b1d1dff
    label "ref frame: \[value ref]"
    xpos -135
    ypos 147
    addUserKnob {20 User l parent}
    addUserKnob {22 python_button l "set parent" t "select parent node, and press this button to set the selected node as parent" +INVISIBLE T "n = nuke.selectedNode()\['name'].getValue()\nnuke.thisNode()\['string'].setValue(n)" +STARTLINE}
    addUserKnob {1 string l parent +INVISIBLE}
    string null
    addUserKnob {3 id l "id number"}
    id {{parent.CTimeOffset7.shotnmbr}}
    addUserKnob {3 ref l "ref frame"}
    ref {{parent.CTimeOffset7.ref}}
   }
   Transform {
    translate {{"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].translate.x(ref)\}]"} {"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].translate.y(ref)\}]"}}
    rotate {{"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].rotate-\[value parent_gun].rotate(ref)\}]"}}
    scale {{"\[if \{\[value parent_gun]==\"null\"\} \{return 1\} \{return 1+(\[value parent_gun].scale-\[value parent_gun].scale(ref))\}]"}}
    center {{"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].center.x(ref)\}]"} {"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].center.y(ref)\}]"}}
    name GUNMatchMove1
    label "\n"
    xpos -135
    ypos 241
    addUserKnob {20 User l parent}
    addUserKnob {3 ref}
    ref {{parent.CTimeOffset7.ref}}
   }
   Transform {
    translate {{"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].translate.x-\[value parent_env].translate.x(ref)\}]"} {"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].translate.y-\[value parent_env].translate.y(ref)\}]"}}
    rotate {{"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].rotate-\[value parent_env].rotate(ref)\}]"}}
    scale {{"\[if \{\[value parent_gun]==\"null\"\} \{return 1\} \{return 1+(\[value parent_env].scale-\[value parent_env].scale(ref))\}]"}}
    center {{"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].center.x(ref)\}]"} {"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].center.y(ref)\}]"}}
    motionblur {{(mode==2)*0.2}}
    shutter {{FlashMB*(0.175*0.3)}}
    shutteroffset centred
    name ENVMatchMove1
    xpos -135
    ypos 317
    addUserKnob {20 User l parent}
    addUserKnob {3 ref}
    ref {{parent.CTimeOffset7.ref}}
   }
   Transform {
    translate {{"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return -((root.width/2)-(\[value parent_gun].center.x(1)+\[value parent_gun].translate.x(1)))\}]"} {"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return -((root.height/2)-(\[value parent_gun].center.y(1)+\[value parent_gun].translate.y(1)))\}]"}}
    shutteroffset centred
    name Transform_GUNMatchMove3
    label "alignment correction"
    xpos -135
    ypos 405
    addUserKnob {20 User l parent}
    addUserKnob {22 python_button l "set parent" t "select parent node, and press this button to set the selected node as parent" T "n = nuke.selectedNode()\['name'].getValue()\nnuke.thisNode()\['string'].setValue(n)" +STARTLINE}
    addUserKnob {1 string l parent}
    string Transform_MatchMove10
    addUserKnob {3 ref +INVISIBLE}
    ref {{parent.cCard3D_8.ref}}
   }
   Remove {
    operation keep
    channels rgb
    name Remove12
    xpos -135
    ypos 489
   }
push 0
   Switch {
    inputs 2
    which {{ActivateSideFlash(CTimeOffset7.ref)}}
    name Switch3
    label "keyframeable disable "
    xpos -135
    ypos 587
   }
push 0
   Switch {
    inputs 2
    which {{parent.Angle_reveal_side.value!=0}}
    name Switch6
    label "disable based on angle"
    xpos -135
    ypos 671
   }
   Merge2 {
    inputs 3+1
    operation max
    name Merge1
    xpos -135
    ypos 745
   }
   Merge2 {
    inputs 2
    operation plus
    bbox intersection
    name Merge6
    xpos -135
    ypos 1196
   }
push 0
   Switch {
    inputs 2
    which {{"shot_\[value count]==0?0:(EnableExtraFrames==1?floor(((frame>=shot_\[value count])+(frame<=(shot_\[value count]+(4*((mode==1)+(mode==2))))))/2):frame==shot_\[value count])"}}
    name cSwitch_3
    selected true
    xpos -135
    ypos 1354
    addUserKnob {20 User}
    addUserKnob {3 count l "shot number"}
    count {{parent.CTimeOffset7.shotnmbr}}
   }
   Output {
    name Output1
    xpos -135
    ypos 1861
   }
  end_group
push $N5b4f3f40
push $N5d1f1a00
  Group {
   inputs 2
   name gunshot15
   label "shot: \[value shotcount]\non frame: \[value shot_\[value shotcount]]\n"
   xpos 10689
   ypos -815
   addUserKnob {20 User}
   addUserKnob {3 shotcount l shot}
   shotcount 15
   addUserKnob {3 shotstart l frame +INVISIBLE}
   shotstart {{"shotcount==0 ? 0 : shot\[value shotcount]-1"}}
  }
   BackdropNode {
    inputs 0
    name BackdropNode3
    knobChanged "try:\n    listenedKnobs = \['text', 'position', 'name']\n    node = nuke.thisNode()\n    name = node.knob('name').value()\n    text = node.knob('text').value()\n    position = node.knob('position').value()\n    position = \"<\" + position + \">\"\n    label = node.knob('label').value()\n    \n    if nuke.thisKnob().name() in listenedKnobs:\n        if text == \"\":\n            if node.knob('position').value() == \"left\":\n                node.knob('label').setValue()\n            else:\n                node.knob('label').setValue(position + name)\n        else:\n            if node.knob('position').value() == \"left\":\n                node.knob('label').setValue(text)\n            else:\n                node.knob('label').setValue(position + text)\n                \n    elif nuke.thisKnob().name() == 'font_size':\n        fontSize = node.knob('font_size').value()\n        node.knob('note_font_size').setValue(fontSize)\nexcept:\n    pass"
    tile_color 0x232323ff
    label "<Left><h2> Gunshot"
    note_font_size 31.5
    xpos -698
    ypos -924
    bdwidth 1057
    bdheight 2343
    addUserKnob {20 F_VFX l BackdropNode}
    addUserKnob {43 text l Text}
    text "<h2> Gunshot"
    addUserKnob {7 font_size l "Font Size" R 10 100}
    font_size 31.5
    addUserKnob {4 position l "" -STARTLINE M {Left Center}}
    addUserKnob {26 S01 l " " T " "}
    addUserKnob {22 grow l " <img src=\"F_scalep.png\">" -STARTLINE T "n=nuke.thisNode()\n\ndef grow(node=None,step=50):\n    try:\n        if not node:\n            n=nuke.selectedNode()\n        else:\n            n=node\n            n\['xpos'].setValue(n\['xpos'].getValue()-step)\n            n\['ypos'].setValue(n\['ypos'].getValue()-step)\n            n\['bdwidth'].setValue(n\['bdwidth'].getValue()+step*2)\n            n\['bdheight'].setValue(n\['bdheight'].getValue()+step*2)\n    except:\n        pass\ngrow(n,50)"}
    addUserKnob {22 shrink l " <img src=\"F_scalem.png\">" -STARTLINE T "n=nuke.thisNode()\n\ndef shrink(node=None,step=50):\n    try:\n        if not node:\n            n=nuke.selectedNode()\n        else:\n            n=node\n            n\['xpos'].setValue(n\['xpos'].getValue()+step)\n            n\['ypos'].setValue(n\['ypos'].getValue()+step)\n            n\['bdwidth'].setValue(n\['bdwidth'].getValue()-step*2)\n            n\['bdheight'].setValue(n\['bdheight'].getValue()-step*2)\n    except:\n        pass\nshrink(n,50)"}
    addUserKnob {22 colorandom l " <img src=\"ColorBars.png\">" -STARTLINE T "import colorsys, random\nn=nuke.thisNode()\nR,G,B= colorsys.hsv_to_rgb(random.random(),.1+random.random()*.15,.15+random.random()*.15)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ) )"}
    addUserKnob {22 darkgrey l "<font color=\"#232323\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.0, 0.0, 0.14]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 lightgrey l "<font color=\"#383838\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.0, 0.0, 0.22]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 red l "<font color=\"#8c3838\" size=6>■</font>" T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.0, 0.6, 0.55]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n" +STARTLINE}
    addUserKnob {22 orange l "<font color=\"#b28e59\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.1, 0.5, 0.7]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 yellow l "<font color=\"#ccc766\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.16, 0.5, 0.8]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 green l "<font color=\"#5d995b\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.33, 0.4, 0.6]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 cyan l "<font color=\"#72998f\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.46, 0.25, 0.6]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 blue l "<font color=\"#59687f\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.6, 0.3, 0.5]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 darkblue l "<font color=\"#63628c\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.67, 0.3, 0.55]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 magenta l "<font color=\"#927a99\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.8, 0.2, 0.6]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 pink l "<font color=\"#997a89\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.92, 0.2, 0.6]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {26 S02 l " " T " "}
    addUserKnob {26 Ftools l "" +STARTLINE T "<font color=\"#1C1C1C\"> v1.2 - Franklin VFX - 2018"}
   }
   BackdropNode {
    inputs 0
    name BackdropNode1
    knobChanged "try:\n    listenedKnobs = \['text', 'position', 'name']\n    node = nuke.thisNode()\n    name = node.knob('name').value()\n    text = node.knob('text').value()\n    position = node.knob('position').value()\n    position = \"<\" + position + \">\"\n    label = node.knob('label').value()\n    \n    if nuke.thisKnob().name() in listenedKnobs:\n        if text == \"\":\n            if node.knob('position').value() == \"left\":\n                node.knob('label').setValue()\n            else:\n                node.knob('label').setValue(position + name)\n        else:\n            if node.knob('position').value() == \"left\":\n                node.knob('label').setValue(text)\n            else:\n                node.knob('label').setValue(position + text)\n                \n    elif nuke.thisKnob().name() == 'font_size':\n        fontSize = node.knob('font_size').value()\n        node.knob('note_font_size').setValue(fontSize)\nexcept:\n    pass"
    tile_color 0x927a99ff
    note_font_size 50
    xpos -460
    ypos -257
    bdwidth 435
    bdheight 786
    z_order 1
    addUserKnob {20 F_VFX l BackdropNode}
    addUserKnob {43 text l Text}
    addUserKnob {7 font_size l "Font Size" R 10 100}
    font_size 50
    addUserKnob {4 position l "" -STARTLINE M {Left Center}}
    addUserKnob {26 S01 l " " T " "}
    addUserKnob {22 grow l " <img src=\"F_scalep.png\">" -STARTLINE T "n=nuke.thisNode()\n\ndef grow(node=None,step=50):\n    try:\n        if not node:\n            n=nuke.selectedNode()\n        else:\n            n=node\n            n\['xpos'].setValue(n\['xpos'].getValue()-step)\n            n\['ypos'].setValue(n\['ypos'].getValue()-step)\n            n\['bdwidth'].setValue(n\['bdwidth'].getValue()+step*2)\n            n\['bdheight'].setValue(n\['bdheight'].getValue()+step*2)\n    except:\n        pass\ngrow(n,50)"}
    addUserKnob {22 shrink l " <img src=\"F_scalem.png\">" -STARTLINE T "n=nuke.thisNode()\n\ndef shrink(node=None,step=50):\n    try:\n        if not node:\n            n=nuke.selectedNode()\n        else:\n            n=node\n            n\['xpos'].setValue(n\['xpos'].getValue()+step)\n            n\['ypos'].setValue(n\['ypos'].getValue()+step)\n            n\['bdwidth'].setValue(n\['bdwidth'].getValue()-step*2)\n            n\['bdheight'].setValue(n\['bdheight'].getValue()-step*2)\n    except:\n        pass\nshrink(n,50)"}
    addUserKnob {22 colorandom l " <img src=\"ColorBars.png\">" -STARTLINE T "import colorsys, random\nn=nuke.thisNode()\nR,G,B= colorsys.hsv_to_rgb(random.random(),.1+random.random()*.15,.15+random.random()*.15)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ) )"}
    addUserKnob {22 darkgrey l "<font color=\"#232323\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.0, 0.0, 0.14]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 lightgrey l "<font color=\"#383838\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.0, 0.0, 0.22]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 red l "<font color=\"#8c3838\" size=6>■</font>" T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.0, 0.6, 0.55]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n" +STARTLINE}
    addUserKnob {22 orange l "<font color=\"#b28e59\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.1, 0.5, 0.7]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 yellow l "<font color=\"#ccc766\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.16, 0.5, 0.8]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 green l "<font color=\"#5d995b\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.33, 0.4, 0.6]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 cyan l "<font color=\"#72998f\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.46, 0.25, 0.6]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 blue l "<font color=\"#59687f\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.6, 0.3, 0.5]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 darkblue l "<font color=\"#63628c\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.67, 0.3, 0.55]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 magenta l "<font color=\"#927a99\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.8, 0.2, 0.6]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 pink l "<font color=\"#997a89\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.92, 0.2, 0.6]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {26 S02 l " " T " "}
    addUserKnob {26 Ftools l "" +STARTLINE T "<font color=\"#1C1C1C\"> v1.2 - Franklin VFX - 2018"}
   }
   Constant {
    inputs 0
    channels rgb
    name Constant4
    xpos -648
    ypos 987
   }
   AdjBBox {
    numpixels {{size_bbox}}
    name AdjBBox4
    xpos -648
    ypos 1120
   }
   Dot {
    name Dot19
    xpos -614
    ypos 1200
   }
   Axis3 {
    inputs 0
    useMatrix true
    matrix {
        {{parent.cCard3D_1.matrix} {parent.cCard3D_1.matrix} {parent.cCard3D_1.matrix} {parent.cCard3D_1.matrix}}
        {{parent.cCard3D_1.matrix} {parent.cCard3D_1.matrix} {parent.cCard3D_1.matrix} {parent.cCard3D_1.matrix}}
        {{parent.cCard3D_1.matrix} {parent.cCard3D_1.matrix} {parent.cCard3D_1.matrix} {parent.cCard3D_1.matrix}}
        {{parent.cCard3D_1.matrix} {parent.cCard3D_1.matrix} {parent.cCard3D_1.matrix} {parent.cCard3D_1.matrix}}
      }
    name Axis3
    xpos -207
    ypos 48
   }
set N52fa8fe0 [stack 0]
push 0
   Input {
    inputs 0
    name Side
    xpos -135
    ypos -1101
   }
   TimeOffset {
    time_offset {{"shotnmbr==0 ? 0 : shot_\[value shotnmbr]-1"}}
    time ""
    name CTimeOffset7
    label "shot: \[value shotnmbr]\non frame \[value time_offset]"
    xpos -135
    ypos -853
    addUserKnob {20 User}
    addUserKnob {3 shotnmbr l "shot "}
    shotnmbr {{shotcount}}
    addUserKnob {3 ref}
    ref {{time_offset+1}}
   }
   Group {
    name DecimalTimeOffset1
    tile_color 0xafa35dff
    label "random asset\n(based on brighness)"
    note_font "Bitstream Vera Sans Bold"
    xpos -135
    ypos -690
    addUserKnob {20 User}
    addUserKnob {7 decimal l "time offset (decimal)"}
    decimal {{"floor\n(\n  (\n  (  ((((random((shotcount*823)+((seed+seed_offset_\[value shotcount])*212))-0.5)*  ((1-( abs(brighness_flare-0.5) )*2)+1)  )+0.5)*0.5)  * (1-brighness_flare)  )\n\n  +\n\n  (  (((((random((shotcount*823)+((seed+seed_offset_\[value shotcount])*212))-0.5)*  ((1-( abs(brighness_flare-0.5) )*2)+1)  )+0.5)*0.5)+0.5)  * (brighness_flare)  )\n  )\n  *1000\n)\n\n/1000"}}
    addUserKnob {26 ""}
    addUserKnob {26 _1 l "" +STARTLINE T "Chris Fryer | 2020\nupdated by Yorben Otto | 2024"}
   }
    Input {
     inputs 0
     name Input1
     xpos 426
     ypos -793
    }
    TimeOffset {
     time_offset {{(-floor(parent.decimal))*(DecimalTimeOffset1.decimal<0)}}
     time ""
     name TimeOffset1
     xpos 426
     ypos -674
    }
    Dot {
     name Dot6
     xpos 460
     ypos -635
    }
set Nca0c77e0 [stack 0]
    Dot {
     name Dot5
     xpos 350
     ypos -635
    }
    Dot {
     name Dot7
     xpos 350
     ypos -365
    }
push $Nca0c77e0
    Dot {
     name Dot1
     xpos 572
     ypos -635
    }
    TimeBlur {
     divisions 2
     shutter {{(parent.decimal-(floor(parent.decimal)))*2}}
     shutteroffset start
     shuttercustomoffset 0
     name TimeBlur1
     xpos 538
     ypos -558
    }
    Dot {
     name Dot2
     xpos 572
     ypos -490
    }
push $Nca0c77e0
    TimeBlur {
     divisions 2
     shutter {{parent.decimal*2}}
     shutteroffset start
     shuttercustomoffset 0
     name TimeBlur8
     xpos 426
     ypos -556
    }
    Switch {
     inputs 2
     which {{parent.decimal<0}}
     name Switch1
     xpos 426
     ypos -494
    }
    Multiply {
     value {{parent.TimeBlur8.divisions}}
     name Multiply6
     xpos 426
     ypos -436
    }
    Merge2 {
     inputs 2
     operation from
     name Merge6
     xpos 426
     ypos -369
    }
set Nca109720 [stack 0]
    Output {
     name Output1
     xpos 426
     ypos -221
    }
push $Nca109720
push $Nca109720
    Viewer {
     inputs 2
     frame_range 1-100
     viewerProcess "sRGB (default)"
     name Viewer1
     xpos 675
     ypos -246
    }
   end_group
   NoTimeBlur {
    name NoTimeBlur6
    xpos -135
    ypos -608
   }
   Dot {
    name Dot21
    xpos -101
    ypos -449
   }
set N338f7000 [stack 0]
   Dot {
    name Dot22
    xpos -245
    ypos -449
   }
   Multiply {
    value {{math_matrix.result_y_flash(parent.CTimeOffset7.ref)}}
    name Angle_reveal_top
    label TOP
    xpos -279
    ypos -371
   }
   Transform {
    scale {{0.05+(0.05*(((parent.DecimalTimeOffset1.decimal-0.5)*2)*ScaleVariationFlash))}}
    center {{root.width/2 x1015 2304} {root.height/2}}
    shutteroffset centred
    name random_size_top
    xpos -279
    ypos -136
   }
   Card3D {
    inputs 3
    rot_order ZYX
    translate {0 0 0}
    rotate {90 0 0}
    shutteroffset centred
    name cCard3D5
    tile_color 0x7b1d1dff
    xpos -279
    ypos 153
    addUserKnob {20 User l parent}
    addUserKnob {22 python_button l "set parent" t "select parent node, and press this button to set the selected node as parent" +INVISIBLE T "n = nuke.selectedNode()\['name'].getValue()\nnuke.thisNode()\['string'].setValue(n)" +STARTLINE}
    addUserKnob {1 string l parent +INVISIBLE}
    string null
    addUserKnob {3 ref l "ref frame"}
    ref 1015
   }
   Transform {
    translate {{"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].translate.x(ref)\}]"} {"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].translate.y(ref)\}]"}}
    rotate {{"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].rotate-\[value parent_gun].rotate(ref)\}]"}}
    scale {{"\[if \{\[value parent_gun]==\"null\"\} \{return 1\} \{return 1+(\[value parent_gun].scale-\[value parent_gun].scale(ref))\}]"}}
    center {{"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].center.x(ref)\}]"} {"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].center.y(ref)\}]"}}
    name GUNMatchMove
    label "\n"
    xpos -279
    ypos 247
    addUserKnob {20 User l parent}
    addUserKnob {3 ref}
    ref {{parent.CTimeOffset7.ref}}
   }
   Transform {
    translate {{"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].translate.x-\[value parent_env].translate.x(ref)\}]"} {"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].translate.y-\[value parent_env].translate.y(ref)\}]"}}
    rotate {{"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].rotate-\[value parent_env].rotate(ref)\}]"}}
    scale {{"\[if \{\[value parent_gun]==\"null\"\} \{return 1\} \{return 1+(\[value parent_env].scale-\[value parent_env].scale(ref))\}]"}}
    center {{"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].center.x(ref)\}]"} {"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].center.y(ref)\}]"}}
    motionblur {{(mode==2)*0.2}}
    shutter {{FlashMB*(0.175*0.3)}}
    shutteroffset centred
    name ENVMatchMove
    xpos -279
    ypos 321
    addUserKnob {20 User l parent}
    addUserKnob {3 ref}
    ref {{parent.CTimeOffset7.ref}}
   }
   Transform {
    translate {{"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return -((root.width/2)-(\[value parent_gun].center.x(1)+\[value parent_gun].translate.x(1)))\}]"} {"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return -((root.height/2)-(\[value parent_gun].center.y(1)+\[value parent_gun].translate.y(1)))\}]"}}
    shutteroffset centred
    name Transform_GUNMatchMove1
    label "alignment correction"
    xpos -279
    ypos 408
    addUserKnob {20 User l parent}
    addUserKnob {22 python_button l "set parent" t "select parent node, and press this button to set the selected node as parent" T "n = nuke.selectedNode()\['name'].getValue()\nnuke.thisNode()\['string'].setValue(n)" +STARTLINE}
    addUserKnob {1 string l parent}
    string Transform_MatchMove10
    addUserKnob {3 ref +INVISIBLE}
    ref {{parent.cCard3D_8.ref}}
   }
   Remove {
    operation keep
    channels rgb
    name Remove10
    xpos -279
    ypos 489
   }
push 0
   Switch {
    inputs 2
    which {{ActivateSideFlash(CTimeOffset7.ref)}}
    name Switch1
    label "keyframeable disable "
    xpos -279
    ypos 587
   }
push 0
   Switch {
    inputs 2
    which {{parent.Angle_reveal_top.value!=0}}
    name Switch4
    label "disable based on angle"
    xpos -279
    ypos 670
   }
   Dot {
    name Dot1
    xpos -245
    ypos 717
   }
push 0
push $N52fa8fe0
push 0
   Input {
    inputs 0
    name Front
    xpos -430
    ypos -1102
    number 1
   }
   TimeOffset {
    time_offset {{"shotnmbr==0 ? 0 : shot_\[value shotnmbr]-1"}}
    time ""
    name CTimeOffset8
    xpos -430
    ypos -840
    addUserKnob {20 User}
    addUserKnob {3 shotnmbr l "shot "}
    shotnmbr {{parent.CTimeOffset7.shotnmbr}}
   }
   Group {
    name DecimalTimeOffset
    tile_color 0xafa35dff
    label "random asset\n(based on brighness)"
    note_font "Bitstream Vera Sans Bold"
    xpos -430
    ypos -693
    addUserKnob {20 User}
    addUserKnob {7 decimal l "time offset (decimal)"}
    decimal {{"floor\n(\n  (\n  (  ((((random((shotcount*823)+((seed+seed_offset_\[value shotcount])*212))-0.5)*  ((1-( abs(brighness_flare-0.5) )*2)+1)  )+0.5)*0.5)  * (1-brighness_flare)  )\n\n  +\n\n  (  (((((random((shotcount*823)+((seed+seed_offset_\[value shotcount])*212))-0.5)*  ((1-( abs(brighness_flare-0.5) )*2)+1)  )+0.5)*0.5)+0.5)  * (brighness_flare)  )\n  )\n  *1000\n)\n\n/1000"}}
    addUserKnob {26 ""}
    addUserKnob {26 _1 l "" +STARTLINE T "Chris Fryer | 2020\nupdated by Yorben Otto | 2024"}
   }
    Input {
     inputs 0
     name Input1
     xpos 426
     ypos -793
    }
    TimeOffset {
     time_offset {{(-floor(parent.decimal))*(DecimalTimeOffset.decimal<0)}}
     time ""
     name TimeOffset1
     xpos 426
     ypos -674
    }
    Dot {
     name Dot6
     xpos 460
     ypos -635
    }
set N388a9930 [stack 0]
    Dot {
     name Dot5
     xpos 350
     ypos -635
    }
    Dot {
     name Dot7
     xpos 350
     ypos -365
    }
push $N388a9930
    Dot {
     name Dot1
     xpos 572
     ypos -635
    }
    TimeBlur {
     divisions 2
     shutter {{(parent.decimal-(floor(parent.decimal)))*2}}
     shutteroffset start
     shuttercustomoffset 0
     name TimeBlur1
     xpos 538
     ypos -558
    }
    Dot {
     name Dot2
     xpos 572
     ypos -490
    }
push $N388a9930
    TimeBlur {
     divisions 2
     shutter {{parent.decimal*2}}
     shutteroffset start
     shuttercustomoffset 0
     name TimeBlur8
     xpos 426
     ypos -556
    }
    Switch {
     inputs 2
     which {{parent.decimal<0}}
     name Switch1
     xpos 426
     ypos -494
    }
    Multiply {
     value {{parent.TimeBlur8.divisions}}
     name Multiply6
     xpos 426
     ypos -436
    }
    Merge2 {
     inputs 2
     operation from
     name Merge6
     xpos 426
     ypos -369
    }
set N388eb870 [stack 0]
    Output {
     name Output1
     xpos 426
     ypos -221
    }
push $N388eb870
push $N388eb870
    Viewer {
     inputs 2
     frame_range 1-100
     viewerProcess "sRGB (default)"
     name Viewer1
     xpos 675
     ypos -246
    }
   end_group
   NoTimeBlur {
    name NoTimeBlur7
    xpos -430
    ypos -617
   }
   Multiply {
    value {{math_matrix.result_x_flash(parent.CTimeOffset7.ref)}}
    name Angle_reveal_front
    label FRONT
    xpos -430
    ypos -375
   }
   Transform {
    scale {{0.05+(0.05*(((parent.DecimalTimeOffset1.decimal-0.5)*2)*ScaleVariationFlash))}}
    center {{root.width/2 x1015 2304} {root.height/2}}
    shutteroffset centred
    name random_size_front
    xpos -430
    ypos -134
   }
   Card3D {
    inputs 3
    rot_order ZYX
    translate {0 0 0}
    rotate {0 90 0}
    shutteroffset centred
    name cCard3D6
    tile_color 0x7b1d1dff
    xpos -430
    ypos 150
    addUserKnob {20 User l parent}
    addUserKnob {22 python_button l "set parent" t "select parent node, and press this button to set the selected node as parent" +INVISIBLE T "n = nuke.selectedNode()\['name'].getValue()\nnuke.thisNode()\['string'].setValue(n)" +STARTLINE}
    addUserKnob {1 string l parent +INVISIBLE}
    string null
    addUserKnob {3 ref l "ref frame"}
    ref 1015
   }
   Transform {
    translate {{"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].translate.x(ref)\}]"} {"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].translate.y(ref)\}]"}}
    rotate {{"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].rotate-\[value parent_gun].rotate(ref)\}]"}}
    scale {{"\[if \{\[value parent_gun]==\"null\"\} \{return 1\} \{return 1+(\[value parent_gun].scale-\[value parent_gun].scale(ref))\}]"}}
    center {{"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].center.x(ref)\}]"} {"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].center.y(ref)\}]"}}
    name GUNMatchMove2
    label "\n"
    xpos -430
    ypos 248
    addUserKnob {20 User l parent}
    addUserKnob {3 ref}
    ref {{parent.CTimeOffset7.ref}}
   }
   Transform {
    translate {{"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].translate.x-\[value parent_env].translate.x(ref)\}]"} {"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].translate.y-\[value parent_env].translate.y(ref)\}]"}}
    rotate {{"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].rotate-\[value parent_env].rotate(ref)\}]"}}
    scale {{"\[if \{\[value parent_gun]==\"null\"\} \{return 1\} \{return 1+(\[value parent_env].scale-\[value parent_env].scale(ref))\}]"}}
    center {{"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].center.x(ref)\}]"} {"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].center.y(ref)\}]"}}
    motionblur {{(mode==2)*0.2}}
    shutter {{FlashMB*(0.175*0.3)}}
    shutteroffset centred
    name ENVMatchMove2
    xpos -430
    ypos 320
    addUserKnob {20 User l parent}
    addUserKnob {3 ref}
    ref {{parent.CTimeOffset7.ref}}
   }
   Transform {
    translate {{"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return -((root.width/2)-(\[value parent_gun].center.x(1)+\[value parent_gun].translate.x(1)))\}]"} {"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return -((root.height/2)-(\[value parent_gun].center.y(1)+\[value parent_gun].translate.y(1)))\}]"}}
    shutteroffset centred
    name Transform_GUNMatchMove2
    label "alignment correction"
    xpos -430
    ypos 407
    addUserKnob {20 User l parent}
    addUserKnob {22 python_button l "set parent" t "select parent node, and press this button to set the selected node as parent" T "n = nuke.selectedNode()\['name'].getValue()\nnuke.thisNode()\['string'].setValue(n)" +STARTLINE}
    addUserKnob {1 string l parent}
    string Transform_MatchMove10
    addUserKnob {3 ref +INVISIBLE}
    ref {{parent.cCard3D_8.ref}}
   }
   Remove {
    operation keep
    channels rgb
    name Remove11
    xpos -430
    ypos 487
   }
push 0
   Switch {
    inputs 2
    which {{ActivateFrontFlash(CTimeOffset7.ref)}}
    name Switch7
    label "keyframeable disable "
    xpos -430
    ypos 586
   }
push 0
   Switch {
    inputs 2
    which {{parent.Angle_reveal_front.value!=0}}
    name Switch5
    label "disable based on angle"
    xpos -430
    ypos 670
   }
   Dot {
    name Dot2
    xpos -396
    ypos 749
   }
push $N338f7000
   Multiply {
    value {{math_matrix.result_z_flash(parent.CTimeOffset7.ref)}}
    name Angle_reveal_side
    label SIDE
    xpos -135
    ypos -374
   }
   Transform {
    scale {{0.05+(0.05*(((parent.DecimalTimeOffset1.decimal-0.5)*2)*ScaleVariationFlash))}}
    center {{root.width/2 x1015 2304} {root.height/2}}
    shutteroffset centred
    name random_size_side
    xpos -135
    ypos -137
   }
   Card3D {
    translate {{"\[if \{\[exists  parent.parent.parent.input0]\} \{return \[value \[topnode parent.parent.parent.input0].name].translate.x(ref)\} \{return 0\}]"} {"\[if \{\[exists  parent.parent.parent.input0]\} \{return \[value \[topnode parent.parent.parent.input0].name].translate.y(ref)\} \{return 0\}]"} {"\[if \{\[exists  parent.parent.parent.input0]\} \{return \[value \[topnode parent.parent.parent.input0].name].translate.z(ref)\} \{return -1\}]"}}
    rotate {{"\[if \{\[exists  parent.parent.parent.input0]\} \{return \[value \[topnode parent.parent.parent.input0].name].rotate.x(ref)\} \{return 0\}]"} {"\[if \{\[exists  parent.parent.parent.input0]\} \{return \[value \[topnode parent.parent.parent.input0].name].rotate.y(ref)\} \{return 0\}]"} {"\[if \{\[exists  parent.parent.parent.input0]\} \{return \[value \[topnode parent.parent.parent.input0].name].rotate.z(ref)\} \{return 0\}]"}}
    scaling {{"\[if \{\[exists  parent.parent.parent.input0]\} \{return \[value \[topnode parent.parent.parent.input0].name].scaling.x(ref)\} \{return 1\}]"} {"\[if \{\[exists  parent.parent.parent.input0]\} \{return \[value \[topnode parent.parent.parent.input0].name].scaling.y(ref)\} \{return 1\}]"} {"\[if \{\[exists  parent.parent.parent.input0]\} \{return \[value \[topnode parent.parent.parent.input0].name].scaling.z(ref)\} \{return 1\}]"}}
    uniform_scale {{"\[if \{\[exists  parent.parent.parent.input0]\} \{return (\[value \[topnode parent.parent.parent.input0].name].uniform_scale(ref)*25)\} \{return 25\}]"}}
    shutteroffset centred
    name cCard3D_1
    tile_color 0x7b1d1dff
    label "ref frame: \[value ref]"
    xpos -135
    ypos 147
    addUserKnob {20 User l parent}
    addUserKnob {22 python_button l "set parent" t "select parent node, and press this button to set the selected node as parent" +INVISIBLE T "n = nuke.selectedNode()\['name'].getValue()\nnuke.thisNode()\['string'].setValue(n)" +STARTLINE}
    addUserKnob {1 string l parent +INVISIBLE}
    string null
    addUserKnob {3 id l "id number"}
    id {{parent.CTimeOffset7.shotnmbr}}
    addUserKnob {3 ref l "ref frame"}
    ref {{parent.CTimeOffset7.ref}}
   }
   Transform {
    translate {{"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].translate.x(ref)\}]"} {"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].translate.y(ref)\}]"}}
    rotate {{"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].rotate-\[value parent_gun].rotate(ref)\}]"}}
    scale {{"\[if \{\[value parent_gun]==\"null\"\} \{return 1\} \{return 1+(\[value parent_gun].scale-\[value parent_gun].scale(ref))\}]"}}
    center {{"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].center.x(ref)\}]"} {"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].center.y(ref)\}]"}}
    name GUNMatchMove1
    label "\n"
    xpos -135
    ypos 241
    addUserKnob {20 User l parent}
    addUserKnob {3 ref}
    ref {{parent.CTimeOffset7.ref}}
   }
   Transform {
    translate {{"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].translate.x-\[value parent_env].translate.x(ref)\}]"} {"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].translate.y-\[value parent_env].translate.y(ref)\}]"}}
    rotate {{"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].rotate-\[value parent_env].rotate(ref)\}]"}}
    scale {{"\[if \{\[value parent_gun]==\"null\"\} \{return 1\} \{return 1+(\[value parent_env].scale-\[value parent_env].scale(ref))\}]"}}
    center {{"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].center.x(ref)\}]"} {"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].center.y(ref)\}]"}}
    motionblur {{(mode==2)*0.2}}
    shutter {{FlashMB*(0.175*0.3)}}
    shutteroffset centred
    name ENVMatchMove1
    xpos -135
    ypos 317
    addUserKnob {20 User l parent}
    addUserKnob {3 ref}
    ref {{parent.CTimeOffset7.ref}}
   }
   Transform {
    translate {{"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return -((root.width/2)-(\[value parent_gun].center.x(1)+\[value parent_gun].translate.x(1)))\}]"} {"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return -((root.height/2)-(\[value parent_gun].center.y(1)+\[value parent_gun].translate.y(1)))\}]"}}
    shutteroffset centred
    name Transform_GUNMatchMove3
    label "alignment correction"
    xpos -135
    ypos 405
    addUserKnob {20 User l parent}
    addUserKnob {22 python_button l "set parent" t "select parent node, and press this button to set the selected node as parent" T "n = nuke.selectedNode()\['name'].getValue()\nnuke.thisNode()\['string'].setValue(n)" +STARTLINE}
    addUserKnob {1 string l parent}
    string Transform_MatchMove10
    addUserKnob {3 ref +INVISIBLE}
    ref {{parent.cCard3D_8.ref}}
   }
   Remove {
    operation keep
    channels rgb
    name Remove12
    xpos -135
    ypos 489
   }
push 0
   Switch {
    inputs 2
    which {{ActivateSideFlash(CTimeOffset7.ref)}}
    name Switch3
    label "keyframeable disable "
    xpos -135
    ypos 587
   }
push 0
   Switch {
    inputs 2
    which {{parent.Angle_reveal_side.value!=0}}
    name Switch6
    label "disable based on angle"
    xpos -135
    ypos 671
   }
   Merge2 {
    inputs 3+1
    operation max
    name Merge1
    xpos -135
    ypos 745
   }
   Merge2 {
    inputs 2
    operation plus
    bbox intersection
    name Merge6
    xpos -135
    ypos 1196
   }
push 0
   Switch {
    inputs 2
    which {{"shot_\[value count]==0?0:(EnableExtraFrames==1?floor(((frame>=shot_\[value count])+(frame<=(shot_\[value count]+(4*((mode==1)+(mode==2))))))/2):frame==shot_\[value count])"}}
    name cSwitch_3
    selected true
    xpos -135
    ypos 1354
    addUserKnob {20 User}
    addUserKnob {3 count l "shot number"}
    count {{parent.CTimeOffset7.shotnmbr}}
   }
   Output {
    name Output1
    xpos -135
    ypos 1861
   }
  end_group
push $N57efb700
push $N7c3ec0c0
  Group {
   inputs 2
   name gunshot21
   label "shot: \[value shotcount]\non frame: \[value shot_\[value shotcount]]\n"
   xpos 11896
   ypos -815
   addUserKnob {20 User}
   addUserKnob {3 shotcount l shot}
   shotcount 21
   addUserKnob {3 shotstart l frame +INVISIBLE}
   shotstart {{"shotcount==0 ? 0 : shot\[value shotcount]-1"}}
  }
   BackdropNode {
    inputs 0
    name BackdropNode3
    knobChanged "try:\n    listenedKnobs = \['text', 'position', 'name']\n    node = nuke.thisNode()\n    name = node.knob('name').value()\n    text = node.knob('text').value()\n    position = node.knob('position').value()\n    position = \"<\" + position + \">\"\n    label = node.knob('label').value()\n    \n    if nuke.thisKnob().name() in listenedKnobs:\n        if text == \"\":\n            if node.knob('position').value() == \"left\":\n                node.knob('label').setValue()\n            else:\n                node.knob('label').setValue(position + name)\n        else:\n            if node.knob('position').value() == \"left\":\n                node.knob('label').setValue(text)\n            else:\n                node.knob('label').setValue(position + text)\n                \n    elif nuke.thisKnob().name() == 'font_size':\n        fontSize = node.knob('font_size').value()\n        node.knob('note_font_size').setValue(fontSize)\nexcept:\n    pass"
    tile_color 0x232323ff
    label "<Left><h2> Gunshot"
    note_font_size 31.5
    xpos -698
    ypos -924
    bdwidth 1057
    bdheight 2343
    addUserKnob {20 F_VFX l BackdropNode}
    addUserKnob {43 text l Text}
    text "<h2> Gunshot"
    addUserKnob {7 font_size l "Font Size" R 10 100}
    font_size 31.5
    addUserKnob {4 position l "" -STARTLINE M {Left Center}}
    addUserKnob {26 S01 l " " T " "}
    addUserKnob {22 grow l " <img src=\"F_scalep.png\">" -STARTLINE T "n=nuke.thisNode()\n\ndef grow(node=None,step=50):\n    try:\n        if not node:\n            n=nuke.selectedNode()\n        else:\n            n=node\n            n\['xpos'].setValue(n\['xpos'].getValue()-step)\n            n\['ypos'].setValue(n\['ypos'].getValue()-step)\n            n\['bdwidth'].setValue(n\['bdwidth'].getValue()+step*2)\n            n\['bdheight'].setValue(n\['bdheight'].getValue()+step*2)\n    except:\n        pass\ngrow(n,50)"}
    addUserKnob {22 shrink l " <img src=\"F_scalem.png\">" -STARTLINE T "n=nuke.thisNode()\n\ndef shrink(node=None,step=50):\n    try:\n        if not node:\n            n=nuke.selectedNode()\n        else:\n            n=node\n            n\['xpos'].setValue(n\['xpos'].getValue()+step)\n            n\['ypos'].setValue(n\['ypos'].getValue()+step)\n            n\['bdwidth'].setValue(n\['bdwidth'].getValue()-step*2)\n            n\['bdheight'].setValue(n\['bdheight'].getValue()-step*2)\n    except:\n        pass\nshrink(n,50)"}
    addUserKnob {22 colorandom l " <img src=\"ColorBars.png\">" -STARTLINE T "import colorsys, random\nn=nuke.thisNode()\nR,G,B= colorsys.hsv_to_rgb(random.random(),.1+random.random()*.15,.15+random.random()*.15)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ) )"}
    addUserKnob {22 darkgrey l "<font color=\"#232323\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.0, 0.0, 0.14]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 lightgrey l "<font color=\"#383838\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.0, 0.0, 0.22]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 red l "<font color=\"#8c3838\" size=6>■</font>" T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.0, 0.6, 0.55]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n" +STARTLINE}
    addUserKnob {22 orange l "<font color=\"#b28e59\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.1, 0.5, 0.7]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 yellow l "<font color=\"#ccc766\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.16, 0.5, 0.8]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 green l "<font color=\"#5d995b\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.33, 0.4, 0.6]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 cyan l "<font color=\"#72998f\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.46, 0.25, 0.6]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 blue l "<font color=\"#59687f\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.6, 0.3, 0.5]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 darkblue l "<font color=\"#63628c\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.67, 0.3, 0.55]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 magenta l "<font color=\"#927a99\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.8, 0.2, 0.6]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 pink l "<font color=\"#997a89\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.92, 0.2, 0.6]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {26 S02 l " " T " "}
    addUserKnob {26 Ftools l "" +STARTLINE T "<font color=\"#1C1C1C\"> v1.2 - Franklin VFX - 2018"}
   }
   BackdropNode {
    inputs 0
    name BackdropNode1
    knobChanged "try:\n    listenedKnobs = \['text', 'position', 'name']\n    node = nuke.thisNode()\n    name = node.knob('name').value()\n    text = node.knob('text').value()\n    position = node.knob('position').value()\n    position = \"<\" + position + \">\"\n    label = node.knob('label').value()\n    \n    if nuke.thisKnob().name() in listenedKnobs:\n        if text == \"\":\n            if node.knob('position').value() == \"left\":\n                node.knob('label').setValue()\n            else:\n                node.knob('label').setValue(position + name)\n        else:\n            if node.knob('position').value() == \"left\":\n                node.knob('label').setValue(text)\n            else:\n                node.knob('label').setValue(position + text)\n                \n    elif nuke.thisKnob().name() == 'font_size':\n        fontSize = node.knob('font_size').value()\n        node.knob('note_font_size').setValue(fontSize)\nexcept:\n    pass"
    tile_color 0x927a99ff
    note_font_size 50
    xpos -460
    ypos -257
    bdwidth 435
    bdheight 786
    z_order 1
    addUserKnob {20 F_VFX l BackdropNode}
    addUserKnob {43 text l Text}
    addUserKnob {7 font_size l "Font Size" R 10 100}
    font_size 50
    addUserKnob {4 position l "" -STARTLINE M {Left Center}}
    addUserKnob {26 S01 l " " T " "}
    addUserKnob {22 grow l " <img src=\"F_scalep.png\">" -STARTLINE T "n=nuke.thisNode()\n\ndef grow(node=None,step=50):\n    try:\n        if not node:\n            n=nuke.selectedNode()\n        else:\n            n=node\n            n\['xpos'].setValue(n\['xpos'].getValue()-step)\n            n\['ypos'].setValue(n\['ypos'].getValue()-step)\n            n\['bdwidth'].setValue(n\['bdwidth'].getValue()+step*2)\n            n\['bdheight'].setValue(n\['bdheight'].getValue()+step*2)\n    except:\n        pass\ngrow(n,50)"}
    addUserKnob {22 shrink l " <img src=\"F_scalem.png\">" -STARTLINE T "n=nuke.thisNode()\n\ndef shrink(node=None,step=50):\n    try:\n        if not node:\n            n=nuke.selectedNode()\n        else:\n            n=node\n            n\['xpos'].setValue(n\['xpos'].getValue()+step)\n            n\['ypos'].setValue(n\['ypos'].getValue()+step)\n            n\['bdwidth'].setValue(n\['bdwidth'].getValue()-step*2)\n            n\['bdheight'].setValue(n\['bdheight'].getValue()-step*2)\n    except:\n        pass\nshrink(n,50)"}
    addUserKnob {22 colorandom l " <img src=\"ColorBars.png\">" -STARTLINE T "import colorsys, random\nn=nuke.thisNode()\nR,G,B= colorsys.hsv_to_rgb(random.random(),.1+random.random()*.15,.15+random.random()*.15)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ) )"}
    addUserKnob {22 darkgrey l "<font color=\"#232323\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.0, 0.0, 0.14]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 lightgrey l "<font color=\"#383838\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.0, 0.0, 0.22]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 red l "<font color=\"#8c3838\" size=6>■</font>" T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.0, 0.6, 0.55]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n" +STARTLINE}
    addUserKnob {22 orange l "<font color=\"#b28e59\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.1, 0.5, 0.7]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 yellow l "<font color=\"#ccc766\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.16, 0.5, 0.8]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 green l "<font color=\"#5d995b\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.33, 0.4, 0.6]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 cyan l "<font color=\"#72998f\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.46, 0.25, 0.6]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 blue l "<font color=\"#59687f\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.6, 0.3, 0.5]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 darkblue l "<font color=\"#63628c\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.67, 0.3, 0.55]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 magenta l "<font color=\"#927a99\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.8, 0.2, 0.6]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 pink l "<font color=\"#997a89\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.92, 0.2, 0.6]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {26 S02 l " " T " "}
    addUserKnob {26 Ftools l "" +STARTLINE T "<font color=\"#1C1C1C\"> v1.2 - Franklin VFX - 2018"}
   }
   Constant {
    inputs 0
    channels rgb
    name Constant4
    xpos -648
    ypos 987
   }
   AdjBBox {
    numpixels {{size_bbox}}
    name AdjBBox4
    xpos -648
    ypos 1120
   }
   Dot {
    name Dot19
    xpos -614
    ypos 1200
   }
   Axis3 {
    inputs 0
    useMatrix true
    matrix {
        {{parent.cCard3D_1.matrix} {parent.cCard3D_1.matrix} {parent.cCard3D_1.matrix} {parent.cCard3D_1.matrix}}
        {{parent.cCard3D_1.matrix} {parent.cCard3D_1.matrix} {parent.cCard3D_1.matrix} {parent.cCard3D_1.matrix}}
        {{parent.cCard3D_1.matrix} {parent.cCard3D_1.matrix} {parent.cCard3D_1.matrix} {parent.cCard3D_1.matrix}}
        {{parent.cCard3D_1.matrix} {parent.cCard3D_1.matrix} {parent.cCard3D_1.matrix} {parent.cCard3D_1.matrix}}
      }
    name Axis3
    xpos -207
    ypos 48
   }
set N38c08820 [stack 0]
push 0
   Input {
    inputs 0
    name Side
    xpos -135
    ypos -1101
   }
   TimeOffset {
    time_offset {{"shotnmbr==0 ? 0 : shot_\[value shotnmbr]-1"}}
    time ""
    name CTimeOffset7
    label "shot: \[value shotnmbr]\non frame \[value time_offset]"
    xpos -135
    ypos -853
    addUserKnob {20 User}
    addUserKnob {3 shotnmbr l "shot "}
    shotnmbr {{shotcount}}
    addUserKnob {3 ref}
    ref {{time_offset+1}}
   }
   Group {
    name DecimalTimeOffset1
    tile_color 0xafa35dff
    label "random asset\n(based on brighness)"
    note_font "Bitstream Vera Sans Bold"
    xpos -135
    ypos -690
    addUserKnob {20 User}
    addUserKnob {7 decimal l "time offset (decimal)"}
    decimal {{"floor\n(\n  (\n  (  ((((random((shotcount*823)+((seed+seed_offset_\[value shotcount])*212))-0.5)*  ((1-( abs(brighness_flare-0.5) )*2)+1)  )+0.5)*0.5)  * (1-brighness_flare)  )\n\n  +\n\n  (  (((((random((shotcount*823)+((seed+seed_offset_\[value shotcount])*212))-0.5)*  ((1-( abs(brighness_flare-0.5) )*2)+1)  )+0.5)*0.5)+0.5)  * (brighness_flare)  )\n  )\n  *1000\n)\n\n/1000"}}
    addUserKnob {26 ""}
    addUserKnob {26 _1 l "" +STARTLINE T "Chris Fryer | 2020\nupdated by Yorben Otto | 2024"}
   }
    Input {
     inputs 0
     name Input1
     xpos 426
     ypos -793
    }
    TimeOffset {
     time_offset {{(-floor(parent.decimal))*(DecimalTimeOffset1.decimal<0)}}
     time ""
     name TimeOffset1
     xpos 426
     ypos -674
    }
    Dot {
     name Dot6
     xpos 460
     ypos -635
    }
set N38c481f0 [stack 0]
    Dot {
     name Dot5
     xpos 350
     ypos -635
    }
    Dot {
     name Dot7
     xpos 350
     ypos -365
    }
push $N38c481f0
    Dot {
     name Dot1
     xpos 572
     ypos -635
    }
    TimeBlur {
     divisions 2
     shutter {{(parent.decimal-(floor(parent.decimal)))*2}}
     shutteroffset start
     shuttercustomoffset 0
     name TimeBlur1
     xpos 538
     ypos -558
    }
    Dot {
     name Dot2
     xpos 572
     ypos -490
    }
push $N38c481f0
    TimeBlur {
     divisions 2
     shutter {{parent.decimal*2}}
     shutteroffset start
     shuttercustomoffset 0
     name TimeBlur8
     xpos 426
     ypos -556
    }
    Switch {
     inputs 2
     which {{parent.decimal<0}}
     name Switch1
     xpos 426
     ypos -494
    }
    Multiply {
     value {{parent.TimeBlur8.divisions}}
     name Multiply6
     xpos 426
     ypos -436
    }
    Merge2 {
     inputs 2
     operation from
     name Merge6
     xpos 426
     ypos -369
    }
set N38c8a130 [stack 0]
    Output {
     name Output1
     xpos 426
     ypos -221
    }
push $N38c8a130
push $N38c8a130
    Viewer {
     inputs 2
     frame_range 1-100
     viewerProcess "sRGB (default)"
     name Viewer1
     xpos 675
     ypos -246
    }
   end_group
   NoTimeBlur {
    name NoTimeBlur6
    xpos -135
    ypos -608
   }
   Dot {
    name Dot21
    xpos -101
    ypos -449
   }
set N38d389b0 [stack 0]
   Dot {
    name Dot22
    xpos -245
    ypos -449
   }
   Multiply {
    value {{math_matrix.result_y_flash(parent.CTimeOffset7.ref)}}
    name Angle_reveal_top
    label TOP
    xpos -279
    ypos -371
   }
   Transform {
    scale {{0.05+(0.05*(((parent.DecimalTimeOffset1.decimal-0.5)*2)*ScaleVariationFlash))}}
    center {{root.width/2 x1015 2304} {root.height/2}}
    shutteroffset centred
    name random_size_top
    xpos -279
    ypos -136
   }
   Card3D {
    inputs 3
    rot_order ZYX
    translate {0 0 0}
    rotate {90 0 0}
    shutteroffset centred
    name cCard3D5
    tile_color 0x7b1d1dff
    xpos -279
    ypos 153
    addUserKnob {20 User l parent}
    addUserKnob {22 python_button l "set parent" t "select parent node, and press this button to set the selected node as parent" +INVISIBLE T "n = nuke.selectedNode()\['name'].getValue()\nnuke.thisNode()\['string'].setValue(n)" +STARTLINE}
    addUserKnob {1 string l parent +INVISIBLE}
    string null
    addUserKnob {3 ref l "ref frame"}
    ref 1015
   }
   Transform {
    translate {{"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].translate.x(ref)\}]"} {"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].translate.y(ref)\}]"}}
    rotate {{"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].rotate-\[value parent_gun].rotate(ref)\}]"}}
    scale {{"\[if \{\[value parent_gun]==\"null\"\} \{return 1\} \{return 1+(\[value parent_gun].scale-\[value parent_gun].scale(ref))\}]"}}
    center {{"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].center.x(ref)\}]"} {"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].center.y(ref)\}]"}}
    name GUNMatchMove
    label "\n"
    xpos -279
    ypos 247
    addUserKnob {20 User l parent}
    addUserKnob {3 ref}
    ref {{parent.CTimeOffset7.ref}}
   }
   Transform {
    translate {{"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].translate.x-\[value parent_env].translate.x(ref)\}]"} {"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].translate.y-\[value parent_env].translate.y(ref)\}]"}}
    rotate {{"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].rotate-\[value parent_env].rotate(ref)\}]"}}
    scale {{"\[if \{\[value parent_gun]==\"null\"\} \{return 1\} \{return 1+(\[value parent_env].scale-\[value parent_env].scale(ref))\}]"}}
    center {{"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].center.x(ref)\}]"} {"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].center.y(ref)\}]"}}
    motionblur {{(mode==2)*0.2}}
    shutter {{FlashMB*(0.175*0.3)}}
    shutteroffset centred
    name ENVMatchMove
    xpos -279
    ypos 321
    addUserKnob {20 User l parent}
    addUserKnob {3 ref}
    ref {{parent.CTimeOffset7.ref}}
   }
   Transform {
    translate {{"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return -((root.width/2)-(\[value parent_gun].center.x(1)+\[value parent_gun].translate.x(1)))\}]"} {"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return -((root.height/2)-(\[value parent_gun].center.y(1)+\[value parent_gun].translate.y(1)))\}]"}}
    shutteroffset centred
    name Transform_GUNMatchMove1
    label "alignment correction"
    xpos -279
    ypos 408
    addUserKnob {20 User l parent}
    addUserKnob {22 python_button l "set parent" t "select parent node, and press this button to set the selected node as parent" T "n = nuke.selectedNode()\['name'].getValue()\nnuke.thisNode()\['string'].setValue(n)" +STARTLINE}
    addUserKnob {1 string l parent}
    string Transform_MatchMove10
    addUserKnob {3 ref +INVISIBLE}
    ref {{parent.cCard3D_8.ref}}
   }
   Remove {
    operation keep
    channels rgb
    name Remove10
    xpos -279
    ypos 489
   }
push 0
   Switch {
    inputs 2
    which {{ActivateSideFlash(CTimeOffset7.ref)}}
    name Switch1
    label "keyframeable disable "
    xpos -279
    ypos 587
   }
push 0
   Switch {
    inputs 2
    which {{parent.Angle_reveal_top.value!=0}}
    name Switch4
    label "disable based on angle"
    xpos -279
    ypos 670
   }
   Dot {
    name Dot1
    xpos -245
    ypos 717
   }
push 0
push $N38c08820
push 0
   Input {
    inputs 0
    name Front
    xpos -430
    ypos -1102
    number 1
   }
   TimeOffset {
    time_offset {{"shotnmbr==0 ? 0 : shot_\[value shotnmbr]-1"}}
    time ""
    name CTimeOffset8
    xpos -430
    ypos -840
    addUserKnob {20 User}
    addUserKnob {3 shotnmbr l "shot "}
    shotnmbr {{parent.CTimeOffset7.shotnmbr}}
   }
   Group {
    name DecimalTimeOffset
    tile_color 0xafa35dff
    label "random asset\n(based on brighness)"
    note_font "Bitstream Vera Sans Bold"
    xpos -430
    ypos -693
    addUserKnob {20 User}
    addUserKnob {7 decimal l "time offset (decimal)"}
    decimal {{"floor\n(\n  (\n  (  ((((random((shotcount*823)+((seed+seed_offset_\[value shotcount])*212))-0.5)*  ((1-( abs(brighness_flare-0.5) )*2)+1)  )+0.5)*0.5)  * (1-brighness_flare)  )\n\n  +\n\n  (  (((((random((shotcount*823)+((seed+seed_offset_\[value shotcount])*212))-0.5)*  ((1-( abs(brighness_flare-0.5) )*2)+1)  )+0.5)*0.5)+0.5)  * (brighness_flare)  )\n  )\n  *1000\n)\n\n/1000"}}
    addUserKnob {26 ""}
    addUserKnob {26 _1 l "" +STARTLINE T "Chris Fryer | 2020\nupdated by Yorben Otto | 2024"}
   }
    Input {
     inputs 0
     name Input1
     xpos 426
     ypos -793
    }
    TimeOffset {
     time_offset {{(-floor(parent.decimal))*(DecimalTimeOffset.decimal<0)}}
     time ""
     name TimeOffset1
     xpos 426
     ypos -674
    }
    Dot {
     name Dot6
     xpos 460
     ypos -635
    }
set N326cf480 [stack 0]
    Dot {
     name Dot5
     xpos 350
     ypos -635
    }
    Dot {
     name Dot7
     xpos 350
     ypos -365
    }
push $N326cf480
    Dot {
     name Dot1
     xpos 572
     ypos -635
    }
    TimeBlur {
     divisions 2
     shutter {{(parent.decimal-(floor(parent.decimal)))*2}}
     shutteroffset start
     shuttercustomoffset 0
     name TimeBlur1
     xpos 538
     ypos -558
    }
    Dot {
     name Dot2
     xpos 572
     ypos -490
    }
push $N326cf480
    TimeBlur {
     divisions 2
     shutter {{parent.decimal*2}}
     shutteroffset start
     shuttercustomoffset 0
     name TimeBlur8
     xpos 426
     ypos -556
    }
    Switch {
     inputs 2
     which {{parent.decimal<0}}
     name Switch1
     xpos 426
     ypos -494
    }
    Multiply {
     value {{parent.TimeBlur8.divisions}}
     name Multiply6
     xpos 426
     ypos -436
    }
    Merge2 {
     inputs 2
     operation from
     name Merge6
     xpos 426
     ypos -369
    }
set N327113c0 [stack 0]
    Output {
     name Output1
     xpos 426
     ypos -221
    }
push $N327113c0
push $N327113c0
    Viewer {
     inputs 2
     frame_range 1-100
     viewerProcess "sRGB (default)"
     name Viewer1
     xpos 675
     ypos -246
    }
   end_group
   NoTimeBlur {
    name NoTimeBlur7
    xpos -430
    ypos -617
   }
   Multiply {
    value {{math_matrix.result_x_flash(parent.CTimeOffset7.ref)}}
    name Angle_reveal_front
    label FRONT
    xpos -430
    ypos -375
   }
   Transform {
    scale {{0.05+(0.05*(((parent.DecimalTimeOffset1.decimal-0.5)*2)*ScaleVariationFlash))}}
    center {{root.width/2 x1015 2304} {root.height/2}}
    shutteroffset centred
    name random_size_front
    xpos -430
    ypos -134
   }
   Card3D {
    inputs 3
    rot_order ZYX
    translate {0 0 0}
    rotate {0 90 0}
    shutteroffset centred
    name cCard3D6
    tile_color 0x7b1d1dff
    xpos -430
    ypos 150
    addUserKnob {20 User l parent}
    addUserKnob {22 python_button l "set parent" t "select parent node, and press this button to set the selected node as parent" +INVISIBLE T "n = nuke.selectedNode()\['name'].getValue()\nnuke.thisNode()\['string'].setValue(n)" +STARTLINE}
    addUserKnob {1 string l parent +INVISIBLE}
    string null
    addUserKnob {3 ref l "ref frame"}
    ref 1015
   }
   Transform {
    translate {{"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].translate.x(ref)\}]"} {"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].translate.y(ref)\}]"}}
    rotate {{"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].rotate-\[value parent_gun].rotate(ref)\}]"}}
    scale {{"\[if \{\[value parent_gun]==\"null\"\} \{return 1\} \{return 1+(\[value parent_gun].scale-\[value parent_gun].scale(ref))\}]"}}
    center {{"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].center.x(ref)\}]"} {"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].center.y(ref)\}]"}}
    name GUNMatchMove2
    label "\n"
    xpos -430
    ypos 248
    addUserKnob {20 User l parent}
    addUserKnob {3 ref}
    ref {{parent.CTimeOffset7.ref}}
   }
   Transform {
    translate {{"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].translate.x-\[value parent_env].translate.x(ref)\}]"} {"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].translate.y-\[value parent_env].translate.y(ref)\}]"}}
    rotate {{"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].rotate-\[value parent_env].rotate(ref)\}]"}}
    scale {{"\[if \{\[value parent_gun]==\"null\"\} \{return 1\} \{return 1+(\[value parent_env].scale-\[value parent_env].scale(ref))\}]"}}
    center {{"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].center.x(ref)\}]"} {"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].center.y(ref)\}]"}}
    motionblur {{(mode==2)*0.2}}
    shutter {{FlashMB*(0.175*0.3)}}
    shutteroffset centred
    name ENVMatchMove2
    xpos -430
    ypos 320
    addUserKnob {20 User l parent}
    addUserKnob {3 ref}
    ref {{parent.CTimeOffset7.ref}}
   }
   Transform {
    translate {{"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return -((root.width/2)-(\[value parent_gun].center.x(1)+\[value parent_gun].translate.x(1)))\}]"} {"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return -((root.height/2)-(\[value parent_gun].center.y(1)+\[value parent_gun].translate.y(1)))\}]"}}
    shutteroffset centred
    name Transform_GUNMatchMove2
    label "alignment correction"
    xpos -430
    ypos 407
    addUserKnob {20 User l parent}
    addUserKnob {22 python_button l "set parent" t "select parent node, and press this button to set the selected node as parent" T "n = nuke.selectedNode()\['name'].getValue()\nnuke.thisNode()\['string'].setValue(n)" +STARTLINE}
    addUserKnob {1 string l parent}
    string Transform_MatchMove10
    addUserKnob {3 ref +INVISIBLE}
    ref {{parent.cCard3D_8.ref}}
   }
   Remove {
    operation keep
    channels rgb
    name Remove11
    xpos -430
    ypos 487
   }
push 0
   Switch {
    inputs 2
    which {{ActivateFrontFlash(CTimeOffset7.ref)}}
    name Switch7
    label "keyframeable disable "
    xpos -430
    ypos 586
   }
push 0
   Switch {
    inputs 2
    which {{parent.Angle_reveal_front.value!=0}}
    name Switch5
    label "disable based on angle"
    xpos -430
    ypos 670
   }
   Dot {
    name Dot2
    xpos -396
    ypos 749
   }
push $N38d389b0
   Multiply {
    value {{math_matrix.result_z_flash(parent.CTimeOffset7.ref)}}
    name Angle_reveal_side
    label SIDE
    xpos -135
    ypos -374
   }
   Transform {
    scale {{0.05+(0.05*(((parent.DecimalTimeOffset1.decimal-0.5)*2)*ScaleVariationFlash))}}
    center {{root.width/2 x1015 2304} {root.height/2}}
    shutteroffset centred
    name random_size_side
    xpos -135
    ypos -137
   }
   Card3D {
    translate {{"\[if \{\[exists  parent.parent.parent.input0]\} \{return \[value \[topnode parent.parent.parent.input0].name].translate.x(ref)\} \{return 0\}]"} {"\[if \{\[exists  parent.parent.parent.input0]\} \{return \[value \[topnode parent.parent.parent.input0].name].translate.y(ref)\} \{return 0\}]"} {"\[if \{\[exists  parent.parent.parent.input0]\} \{return \[value \[topnode parent.parent.parent.input0].name].translate.z(ref)\} \{return -1\}]"}}
    rotate {{"\[if \{\[exists  parent.parent.parent.input0]\} \{return \[value \[topnode parent.parent.parent.input0].name].rotate.x(ref)\} \{return 0\}]"} {"\[if \{\[exists  parent.parent.parent.input0]\} \{return \[value \[topnode parent.parent.parent.input0].name].rotate.y(ref)\} \{return 0\}]"} {"\[if \{\[exists  parent.parent.parent.input0]\} \{return \[value \[topnode parent.parent.parent.input0].name].rotate.z(ref)\} \{return 0\}]"}}
    scaling {{"\[if \{\[exists  parent.parent.parent.input0]\} \{return \[value \[topnode parent.parent.parent.input0].name].scaling.x(ref)\} \{return 1\}]"} {"\[if \{\[exists  parent.parent.parent.input0]\} \{return \[value \[topnode parent.parent.parent.input0].name].scaling.y(ref)\} \{return 1\}]"} {"\[if \{\[exists  parent.parent.parent.input0]\} \{return \[value \[topnode parent.parent.parent.input0].name].scaling.z(ref)\} \{return 1\}]"}}
    uniform_scale {{"\[if \{\[exists  parent.parent.parent.input0]\} \{return (\[value \[topnode parent.parent.parent.input0].name].uniform_scale(ref)*25)\} \{return 25\}]"}}
    shutteroffset centred
    name cCard3D_1
    tile_color 0x7b1d1dff
    label "ref frame: \[value ref]"
    xpos -135
    ypos 147
    addUserKnob {20 User l parent}
    addUserKnob {22 python_button l "set parent" t "select parent node, and press this button to set the selected node as parent" +INVISIBLE T "n = nuke.selectedNode()\['name'].getValue()\nnuke.thisNode()\['string'].setValue(n)" +STARTLINE}
    addUserKnob {1 string l parent +INVISIBLE}
    string null
    addUserKnob {3 id l "id number"}
    id {{parent.CTimeOffset7.shotnmbr}}
    addUserKnob {3 ref l "ref frame"}
    ref {{parent.CTimeOffset7.ref}}
   }
   Transform {
    translate {{"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].translate.x(ref)\}]"} {"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].translate.y(ref)\}]"}}
    rotate {{"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].rotate-\[value parent_gun].rotate(ref)\}]"}}
    scale {{"\[if \{\[value parent_gun]==\"null\"\} \{return 1\} \{return 1+(\[value parent_gun].scale-\[value parent_gun].scale(ref))\}]"}}
    center {{"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].center.x(ref)\}]"} {"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].center.y(ref)\}]"}}
    name GUNMatchMove1
    label "\n"
    xpos -135
    ypos 241
    addUserKnob {20 User l parent}
    addUserKnob {3 ref}
    ref {{parent.CTimeOffset7.ref}}
   }
   Transform {
    translate {{"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].translate.x-\[value parent_env].translate.x(ref)\}]"} {"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].translate.y-\[value parent_env].translate.y(ref)\}]"}}
    rotate {{"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].rotate-\[value parent_env].rotate(ref)\}]"}}
    scale {{"\[if \{\[value parent_gun]==\"null\"\} \{return 1\} \{return 1+(\[value parent_env].scale-\[value parent_env].scale(ref))\}]"}}
    center {{"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].center.x(ref)\}]"} {"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].center.y(ref)\}]"}}
    motionblur {{(mode==2)*0.2}}
    shutter {{FlashMB*(0.175*0.3)}}
    shutteroffset centred
    name ENVMatchMove1
    xpos -135
    ypos 317
    addUserKnob {20 User l parent}
    addUserKnob {3 ref}
    ref {{parent.CTimeOffset7.ref}}
   }
   Transform {
    translate {{"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return -((root.width/2)-(\[value parent_gun].center.x(1)+\[value parent_gun].translate.x(1)))\}]"} {"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return -((root.height/2)-(\[value parent_gun].center.y(1)+\[value parent_gun].translate.y(1)))\}]"}}
    shutteroffset centred
    name Transform_GUNMatchMove3
    label "alignment correction"
    xpos -135
    ypos 405
    addUserKnob {20 User l parent}
    addUserKnob {22 python_button l "set parent" t "select parent node, and press this button to set the selected node as parent" T "n = nuke.selectedNode()\['name'].getValue()\nnuke.thisNode()\['string'].setValue(n)" +STARTLINE}
    addUserKnob {1 string l parent}
    string Transform_MatchMove10
    addUserKnob {3 ref +INVISIBLE}
    ref {{parent.cCard3D_8.ref}}
   }
   Remove {
    operation keep
    channels rgb
    name Remove12
    xpos -135
    ypos 489
   }
push 0
   Switch {
    inputs 2
    which {{ActivateSideFlash(CTimeOffset7.ref)}}
    name Switch3
    label "keyframeable disable "
    xpos -135
    ypos 587
   }
push 0
   Switch {
    inputs 2
    which {{parent.Angle_reveal_side.value!=0}}
    name Switch6
    label "disable based on angle"
    xpos -135
    ypos 671
   }
   Merge2 {
    inputs 3+1
    operation max
    name Merge1
    xpos -135
    ypos 745
   }
   Merge2 {
    inputs 2
    operation plus
    bbox intersection
    name Merge6
    xpos -135
    ypos 1196
   }
push 0
   Switch {
    inputs 2
    which {{"shot_\[value count]==0?0:(EnableExtraFrames==1?floor(((frame>=shot_\[value count])+(frame<=(shot_\[value count]+(4*((mode==1)+(mode==2))))))/2):frame==shot_\[value count])"}}
    name cSwitch_3
    selected true
    xpos -135
    ypos 1354
    addUserKnob {20 User}
    addUserKnob {3 count l "shot number"}
    count {{parent.CTimeOffset7.shotnmbr}}
   }
   Output {
    name Output1
    xpos -135
    ypos 1861
   }
  end_group
push $N5d0feb20
push $N2062c1a0
  Group {
   inputs 2
   name gunshot23
   label "shot: \[value shotcount]\non frame: \[value shot_\[value shotcount]]\n"
   xpos 12284
   ypos -815
   addUserKnob {20 User}
   addUserKnob {3 shotcount l shot}
   shotcount 23
   addUserKnob {3 shotstart l frame +INVISIBLE}
   shotstart {{"shotcount==0 ? 0 : shot\[value shotcount]-1"}}
  }
   BackdropNode {
    inputs 0
    name BackdropNode3
    knobChanged "try:\n    listenedKnobs = \['text', 'position', 'name']\n    node = nuke.thisNode()\n    name = node.knob('name').value()\n    text = node.knob('text').value()\n    position = node.knob('position').value()\n    position = \"<\" + position + \">\"\n    label = node.knob('label').value()\n    \n    if nuke.thisKnob().name() in listenedKnobs:\n        if text == \"\":\n            if node.knob('position').value() == \"left\":\n                node.knob('label').setValue()\n            else:\n                node.knob('label').setValue(position + name)\n        else:\n            if node.knob('position').value() == \"left\":\n                node.knob('label').setValue(text)\n            else:\n                node.knob('label').setValue(position + text)\n                \n    elif nuke.thisKnob().name() == 'font_size':\n        fontSize = node.knob('font_size').value()\n        node.knob('note_font_size').setValue(fontSize)\nexcept:\n    pass"
    tile_color 0x232323ff
    label "<Left><h2> Gunshot"
    note_font_size 31.5
    xpos -698
    ypos -924
    bdwidth 1057
    bdheight 2343
    addUserKnob {20 F_VFX l BackdropNode}
    addUserKnob {43 text l Text}
    text "<h2> Gunshot"
    addUserKnob {7 font_size l "Font Size" R 10 100}
    font_size 31.5
    addUserKnob {4 position l "" -STARTLINE M {Left Center}}
    addUserKnob {26 S01 l " " T " "}
    addUserKnob {22 grow l " <img src=\"F_scalep.png\">" -STARTLINE T "n=nuke.thisNode()\n\ndef grow(node=None,step=50):\n    try:\n        if not node:\n            n=nuke.selectedNode()\n        else:\n            n=node\n            n\['xpos'].setValue(n\['xpos'].getValue()-step)\n            n\['ypos'].setValue(n\['ypos'].getValue()-step)\n            n\['bdwidth'].setValue(n\['bdwidth'].getValue()+step*2)\n            n\['bdheight'].setValue(n\['bdheight'].getValue()+step*2)\n    except:\n        pass\ngrow(n,50)"}
    addUserKnob {22 shrink l " <img src=\"F_scalem.png\">" -STARTLINE T "n=nuke.thisNode()\n\ndef shrink(node=None,step=50):\n    try:\n        if not node:\n            n=nuke.selectedNode()\n        else:\n            n=node\n            n\['xpos'].setValue(n\['xpos'].getValue()+step)\n            n\['ypos'].setValue(n\['ypos'].getValue()+step)\n            n\['bdwidth'].setValue(n\['bdwidth'].getValue()-step*2)\n            n\['bdheight'].setValue(n\['bdheight'].getValue()-step*2)\n    except:\n        pass\nshrink(n,50)"}
    addUserKnob {22 colorandom l " <img src=\"ColorBars.png\">" -STARTLINE T "import colorsys, random\nn=nuke.thisNode()\nR,G,B= colorsys.hsv_to_rgb(random.random(),.1+random.random()*.15,.15+random.random()*.15)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ) )"}
    addUserKnob {22 darkgrey l "<font color=\"#232323\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.0, 0.0, 0.14]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 lightgrey l "<font color=\"#383838\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.0, 0.0, 0.22]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 red l "<font color=\"#8c3838\" size=6>■</font>" T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.0, 0.6, 0.55]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n" +STARTLINE}
    addUserKnob {22 orange l "<font color=\"#b28e59\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.1, 0.5, 0.7]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 yellow l "<font color=\"#ccc766\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.16, 0.5, 0.8]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 green l "<font color=\"#5d995b\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.33, 0.4, 0.6]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 cyan l "<font color=\"#72998f\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.46, 0.25, 0.6]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 blue l "<font color=\"#59687f\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.6, 0.3, 0.5]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 darkblue l "<font color=\"#63628c\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.67, 0.3, 0.55]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 magenta l "<font color=\"#927a99\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.8, 0.2, 0.6]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 pink l "<font color=\"#997a89\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.92, 0.2, 0.6]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {26 S02 l " " T " "}
    addUserKnob {26 Ftools l "" +STARTLINE T "<font color=\"#1C1C1C\"> v1.2 - Franklin VFX - 2018"}
   }
   BackdropNode {
    inputs 0
    name BackdropNode1
    knobChanged "try:\n    listenedKnobs = \['text', 'position', 'name']\n    node = nuke.thisNode()\n    name = node.knob('name').value()\n    text = node.knob('text').value()\n    position = node.knob('position').value()\n    position = \"<\" + position + \">\"\n    label = node.knob('label').value()\n    \n    if nuke.thisKnob().name() in listenedKnobs:\n        if text == \"\":\n            if node.knob('position').value() == \"left\":\n                node.knob('label').setValue()\n            else:\n                node.knob('label').setValue(position + name)\n        else:\n            if node.knob('position').value() == \"left\":\n                node.knob('label').setValue(text)\n            else:\n                node.knob('label').setValue(position + text)\n                \n    elif nuke.thisKnob().name() == 'font_size':\n        fontSize = node.knob('font_size').value()\n        node.knob('note_font_size').setValue(fontSize)\nexcept:\n    pass"
    tile_color 0x927a99ff
    note_font_size 50
    xpos -460
    ypos -257
    bdwidth 435
    bdheight 786
    z_order 1
    addUserKnob {20 F_VFX l BackdropNode}
    addUserKnob {43 text l Text}
    addUserKnob {7 font_size l "Font Size" R 10 100}
    font_size 50
    addUserKnob {4 position l "" -STARTLINE M {Left Center}}
    addUserKnob {26 S01 l " " T " "}
    addUserKnob {22 grow l " <img src=\"F_scalep.png\">" -STARTLINE T "n=nuke.thisNode()\n\ndef grow(node=None,step=50):\n    try:\n        if not node:\n            n=nuke.selectedNode()\n        else:\n            n=node\n            n\['xpos'].setValue(n\['xpos'].getValue()-step)\n            n\['ypos'].setValue(n\['ypos'].getValue()-step)\n            n\['bdwidth'].setValue(n\['bdwidth'].getValue()+step*2)\n            n\['bdheight'].setValue(n\['bdheight'].getValue()+step*2)\n    except:\n        pass\ngrow(n,50)"}
    addUserKnob {22 shrink l " <img src=\"F_scalem.png\">" -STARTLINE T "n=nuke.thisNode()\n\ndef shrink(node=None,step=50):\n    try:\n        if not node:\n            n=nuke.selectedNode()\n        else:\n            n=node\n            n\['xpos'].setValue(n\['xpos'].getValue()+step)\n            n\['ypos'].setValue(n\['ypos'].getValue()+step)\n            n\['bdwidth'].setValue(n\['bdwidth'].getValue()-step*2)\n            n\['bdheight'].setValue(n\['bdheight'].getValue()-step*2)\n    except:\n        pass\nshrink(n,50)"}
    addUserKnob {22 colorandom l " <img src=\"ColorBars.png\">" -STARTLINE T "import colorsys, random\nn=nuke.thisNode()\nR,G,B= colorsys.hsv_to_rgb(random.random(),.1+random.random()*.15,.15+random.random()*.15)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ) )"}
    addUserKnob {22 darkgrey l "<font color=\"#232323\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.0, 0.0, 0.14]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 lightgrey l "<font color=\"#383838\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.0, 0.0, 0.22]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 red l "<font color=\"#8c3838\" size=6>■</font>" T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.0, 0.6, 0.55]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n" +STARTLINE}
    addUserKnob {22 orange l "<font color=\"#b28e59\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.1, 0.5, 0.7]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 yellow l "<font color=\"#ccc766\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.16, 0.5, 0.8]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 green l "<font color=\"#5d995b\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.33, 0.4, 0.6]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 cyan l "<font color=\"#72998f\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.46, 0.25, 0.6]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 blue l "<font color=\"#59687f\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.6, 0.3, 0.5]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 darkblue l "<font color=\"#63628c\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.67, 0.3, 0.55]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 magenta l "<font color=\"#927a99\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.8, 0.2, 0.6]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 pink l "<font color=\"#997a89\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.92, 0.2, 0.6]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {26 S02 l " " T " "}
    addUserKnob {26 Ftools l "" +STARTLINE T "<font color=\"#1C1C1C\"> v1.2 - Franklin VFX - 2018"}
   }
   Constant {
    inputs 0
    channels rgb
    name Constant4
    xpos -648
    ypos 987
   }
   AdjBBox {
    numpixels {{size_bbox}}
    name AdjBBox4
    xpos -648
    ypos 1120
   }
   Dot {
    name Dot19
    xpos -614
    ypos 1200
   }
   Axis3 {
    inputs 0
    useMatrix true
    matrix {
        {{parent.cCard3D_1.matrix} {parent.cCard3D_1.matrix} {parent.cCard3D_1.matrix} {parent.cCard3D_1.matrix}}
        {{parent.cCard3D_1.matrix} {parent.cCard3D_1.matrix} {parent.cCard3D_1.matrix} {parent.cCard3D_1.matrix}}
        {{parent.cCard3D_1.matrix} {parent.cCard3D_1.matrix} {parent.cCard3D_1.matrix} {parent.cCard3D_1.matrix}}
        {{parent.cCard3D_1.matrix} {parent.cCard3D_1.matrix} {parent.cCard3D_1.matrix} {parent.cCard3D_1.matrix}}
      }
    name Axis3
    xpos -207
    ypos 48
   }
set N3292e370 [stack 0]
push 0
   Input {
    inputs 0
    name Side
    xpos -135
    ypos -1101
   }
   TimeOffset {
    time_offset {{"shotnmbr==0 ? 0 : shot_\[value shotnmbr]-1"}}
    time ""
    name CTimeOffset7
    label "shot: \[value shotnmbr]\non frame \[value time_offset]"
    xpos -135
    ypos -853
    addUserKnob {20 User}
    addUserKnob {3 shotnmbr l "shot "}
    shotnmbr {{shotcount}}
    addUserKnob {3 ref}
    ref {{time_offset+1}}
   }
   Group {
    name DecimalTimeOffset1
    tile_color 0xafa35dff
    label "random asset\n(based on brighness)"
    note_font "Bitstream Vera Sans Bold"
    xpos -135
    ypos -690
    addUserKnob {20 User}
    addUserKnob {7 decimal l "time offset (decimal)"}
    decimal {{"floor\n(\n  (\n  (  ((((random((shotcount*823)+((seed+seed_offset_\[value shotcount])*212))-0.5)*  ((1-( abs(brighness_flare-0.5) )*2)+1)  )+0.5)*0.5)  * (1-brighness_flare)  )\n\n  +\n\n  (  (((((random((shotcount*823)+((seed+seed_offset_\[value shotcount])*212))-0.5)*  ((1-( abs(brighness_flare-0.5) )*2)+1)  )+0.5)*0.5)+0.5)  * (brighness_flare)  )\n  )\n  *1000\n)\n\n/1000"}}
    addUserKnob {26 ""}
    addUserKnob {26 _1 l "" +STARTLINE T "Chris Fryer | 2020\nupdated by Yorben Otto | 2024"}
   }
    Input {
     inputs 0
     name Input1
     xpos 426
     ypos -793
    }
    TimeOffset {
     time_offset {{(-floor(parent.decimal))*(DecimalTimeOffset1.decimal<0)}}
     time ""
     name TimeOffset1
     xpos 426
     ypos -674
    }
    Dot {
     name Dot6
     xpos 460
     ypos -635
    }
set N32b7dc60 [stack 0]
    Dot {
     name Dot5
     xpos 350
     ypos -635
    }
    Dot {
     name Dot7
     xpos 350
     ypos -365
    }
push $N32b7dc60
    Dot {
     name Dot1
     xpos 572
     ypos -635
    }
    TimeBlur {
     divisions 2
     shutter {{(parent.decimal-(floor(parent.decimal)))*2}}
     shutteroffset start
     shuttercustomoffset 0
     name TimeBlur1
     xpos 538
     ypos -558
    }
    Dot {
     name Dot2
     xpos 572
     ypos -490
    }
push $N32b7dc60
    TimeBlur {
     divisions 2
     shutter {{parent.decimal*2}}
     shutteroffset start
     shuttercustomoffset 0
     name TimeBlur8
     xpos 426
     ypos -556
    }
    Switch {
     inputs 2
     which {{parent.decimal<0}}
     name Switch1
     xpos 426
     ypos -494
    }
    Multiply {
     value {{parent.TimeBlur8.divisions}}
     name Multiply6
     xpos 426
     ypos -436
    }
    Merge2 {
     inputs 2
     operation from
     name Merge6
     xpos 426
     ypos -369
    }
set N32bbfba0 [stack 0]
    Output {
     name Output1
     xpos 426
     ypos -221
    }
push $N32bbfba0
push $N32bbfba0
    Viewer {
     inputs 2
     frame_range 1-100
     viewerProcess "sRGB (default)"
     name Viewer1
     xpos 675
     ypos -246
    }
   end_group
   NoTimeBlur {
    name NoTimeBlur6
    xpos -135
    ypos -608
   }
   Dot {
    name Dot21
    xpos -101
    ypos -449
   }
set N32c5e510 [stack 0]
   Dot {
    name Dot22
    xpos -245
    ypos -449
   }
   Multiply {
    value {{math_matrix.result_y_flash(parent.CTimeOffset7.ref)}}
    name Angle_reveal_top
    label TOP
    xpos -279
    ypos -371
   }
   Transform {
    scale {{0.05+(0.05*(((parent.DecimalTimeOffset1.decimal-0.5)*2)*ScaleVariationFlash))}}
    center {{root.width/2 x1015 2304} {root.height/2}}
    shutteroffset centred
    name random_size_top
    xpos -279
    ypos -136
   }
   Card3D {
    inputs 3
    rot_order ZYX
    translate {0 0 0}
    rotate {90 0 0}
    shutteroffset centred
    name cCard3D5
    tile_color 0x7b1d1dff
    xpos -279
    ypos 153
    addUserKnob {20 User l parent}
    addUserKnob {22 python_button l "set parent" t "select parent node, and press this button to set the selected node as parent" +INVISIBLE T "n = nuke.selectedNode()\['name'].getValue()\nnuke.thisNode()\['string'].setValue(n)" +STARTLINE}
    addUserKnob {1 string l parent +INVISIBLE}
    string null
    addUserKnob {3 ref l "ref frame"}
    ref 1015
   }
   Transform {
    translate {{"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].translate.x(ref)\}]"} {"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].translate.y(ref)\}]"}}
    rotate {{"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].rotate-\[value parent_gun].rotate(ref)\}]"}}
    scale {{"\[if \{\[value parent_gun]==\"null\"\} \{return 1\} \{return 1+(\[value parent_gun].scale-\[value parent_gun].scale(ref))\}]"}}
    center {{"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].center.x(ref)\}]"} {"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].center.y(ref)\}]"}}
    name GUNMatchMove
    label "\n"
    xpos -279
    ypos 247
    addUserKnob {20 User l parent}
    addUserKnob {3 ref}
    ref {{parent.CTimeOffset7.ref}}
   }
   Transform {
    translate {{"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].translate.x-\[value parent_env].translate.x(ref)\}]"} {"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].translate.y-\[value parent_env].translate.y(ref)\}]"}}
    rotate {{"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].rotate-\[value parent_env].rotate(ref)\}]"}}
    scale {{"\[if \{\[value parent_gun]==\"null\"\} \{return 1\} \{return 1+(\[value parent_env].scale-\[value parent_env].scale(ref))\}]"}}
    center {{"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].center.x(ref)\}]"} {"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].center.y(ref)\}]"}}
    motionblur {{(mode==2)*0.2}}
    shutter {{FlashMB*(0.175*0.3)}}
    shutteroffset centred
    name ENVMatchMove
    xpos -279
    ypos 321
    addUserKnob {20 User l parent}
    addUserKnob {3 ref}
    ref {{parent.CTimeOffset7.ref}}
   }
   Transform {
    translate {{"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return -((root.width/2)-(\[value parent_gun].center.x(1)+\[value parent_gun].translate.x(1)))\}]"} {"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return -((root.height/2)-(\[value parent_gun].center.y(1)+\[value parent_gun].translate.y(1)))\}]"}}
    shutteroffset centred
    name Transform_GUNMatchMove1
    label "alignment correction"
    xpos -279
    ypos 408
    addUserKnob {20 User l parent}
    addUserKnob {22 python_button l "set parent" t "select parent node, and press this button to set the selected node as parent" T "n = nuke.selectedNode()\['name'].getValue()\nnuke.thisNode()\['string'].setValue(n)" +STARTLINE}
    addUserKnob {1 string l parent}
    string Transform_MatchMove10
    addUserKnob {3 ref +INVISIBLE}
    ref {{parent.cCard3D_8.ref}}
   }
   Remove {
    operation keep
    channels rgb
    name Remove10
    xpos -279
    ypos 489
   }
push 0
   Switch {
    inputs 2
    which {{ActivateSideFlash(CTimeOffset7.ref)}}
    name Switch1
    label "keyframeable disable "
    xpos -279
    ypos 587
   }
push 0
   Switch {
    inputs 2
    which {{parent.Angle_reveal_top.value!=0}}
    name Switch4
    label "disable based on angle"
    xpos -279
    ypos 670
   }
   Dot {
    name Dot1
    xpos -245
    ypos 717
   }
push 0
push $N3292e370
push 0
   Input {
    inputs 0
    name Front
    xpos -430
    ypos -1102
    number 1
   }
   TimeOffset {
    time_offset {{"shotnmbr==0 ? 0 : shot_\[value shotnmbr]-1"}}
    time ""
    name CTimeOffset8
    xpos -430
    ypos -840
    addUserKnob {20 User}
    addUserKnob {3 shotnmbr l "shot "}
    shotnmbr {{parent.CTimeOffset7.shotnmbr}}
   }
   Group {
    name DecimalTimeOffset
    tile_color 0xafa35dff
    label "random asset\n(based on brighness)"
    note_font "Bitstream Vera Sans Bold"
    xpos -430
    ypos -693
    addUserKnob {20 User}
    addUserKnob {7 decimal l "time offset (decimal)"}
    decimal {{"floor\n(\n  (\n  (  ((((random((shotcount*823)+((seed+seed_offset_\[value shotcount])*212))-0.5)*  ((1-( abs(brighness_flare-0.5) )*2)+1)  )+0.5)*0.5)  * (1-brighness_flare)  )\n\n  +\n\n  (  (((((random((shotcount*823)+((seed+seed_offset_\[value shotcount])*212))-0.5)*  ((1-( abs(brighness_flare-0.5) )*2)+1)  )+0.5)*0.5)+0.5)  * (brighness_flare)  )\n  )\n  *1000\n)\n\n/1000"}}
    addUserKnob {26 ""}
    addUserKnob {26 _1 l "" +STARTLINE T "Chris Fryer | 2020\nupdated by Yorben Otto | 2024"}
   }
    Input {
     inputs 0
     name Input1
     xpos 426
     ypos -793
    }
    TimeOffset {
     time_offset {{(-floor(parent.decimal))*(DecimalTimeOffset.decimal<0)}}
     time ""
     name TimeOffset1
     xpos 426
     ypos -674
    }
    Dot {
     name Dot6
     xpos 460
     ypos -635
    }
set N32f1df80 [stack 0]
    Dot {
     name Dot5
     xpos 350
     ypos -635
    }
    Dot {
     name Dot7
     xpos 350
     ypos -365
    }
push $N32f1df80
    Dot {
     name Dot1
     xpos 572
     ypos -635
    }
    TimeBlur {
     divisions 2
     shutter {{(parent.decimal-(floor(parent.decimal)))*2}}
     shutteroffset start
     shuttercustomoffset 0
     name TimeBlur1
     xpos 538
     ypos -558
    }
    Dot {
     name Dot2
     xpos 572
     ypos -490
    }
push $N32f1df80
    TimeBlur {
     divisions 2
     shutter {{parent.decimal*2}}
     shutteroffset start
     shuttercustomoffset 0
     name TimeBlur8
     xpos 426
     ypos -556
    }
    Switch {
     inputs 2
     which {{parent.decimal<0}}
     name Switch1
     xpos 426
     ypos -494
    }
    Multiply {
     value {{parent.TimeBlur8.divisions}}
     name Multiply6
     xpos 426
     ypos -436
    }
    Merge2 {
     inputs 2
     operation from
     name Merge6
     xpos 426
     ypos -369
    }
set N32f5fec0 [stack 0]
    Output {
     name Output1
     xpos 426
     ypos -221
    }
push $N32f5fec0
push $N32f5fec0
    Viewer {
     inputs 2
     frame_range 1-100
     viewerProcess "sRGB (default)"
     name Viewer1
     xpos 675
     ypos -246
    }
   end_group
   NoTimeBlur {
    name NoTimeBlur7
    xpos -430
    ypos -617
   }
   Multiply {
    value {{math_matrix.result_x_flash(parent.CTimeOffset7.ref)}}
    name Angle_reveal_front
    label FRONT
    xpos -430
    ypos -375
   }
   Transform {
    scale {{0.05+(0.05*(((parent.DecimalTimeOffset1.decimal-0.5)*2)*ScaleVariationFlash))}}
    center {{root.width/2 x1015 2304} {root.height/2}}
    shutteroffset centred
    name random_size_front
    xpos -430
    ypos -134
   }
   Card3D {
    inputs 3
    rot_order ZYX
    translate {0 0 0}
    rotate {0 90 0}
    shutteroffset centred
    name cCard3D6
    tile_color 0x7b1d1dff
    xpos -430
    ypos 150
    addUserKnob {20 User l parent}
    addUserKnob {22 python_button l "set parent" t "select parent node, and press this button to set the selected node as parent" +INVISIBLE T "n = nuke.selectedNode()\['name'].getValue()\nnuke.thisNode()\['string'].setValue(n)" +STARTLINE}
    addUserKnob {1 string l parent +INVISIBLE}
    string null
    addUserKnob {3 ref l "ref frame"}
    ref 1015
   }
   Transform {
    translate {{"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].translate.x(ref)\}]"} {"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].translate.y(ref)\}]"}}
    rotate {{"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].rotate-\[value parent_gun].rotate(ref)\}]"}}
    scale {{"\[if \{\[value parent_gun]==\"null\"\} \{return 1\} \{return 1+(\[value parent_gun].scale-\[value parent_gun].scale(ref))\}]"}}
    center {{"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].center.x(ref)\}]"} {"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].center.y(ref)\}]"}}
    name GUNMatchMove2
    label "\n"
    xpos -430
    ypos 248
    addUserKnob {20 User l parent}
    addUserKnob {3 ref}
    ref {{parent.CTimeOffset7.ref}}
   }
   Transform {
    translate {{"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].translate.x-\[value parent_env].translate.x(ref)\}]"} {"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].translate.y-\[value parent_env].translate.y(ref)\}]"}}
    rotate {{"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].rotate-\[value parent_env].rotate(ref)\}]"}}
    scale {{"\[if \{\[value parent_gun]==\"null\"\} \{return 1\} \{return 1+(\[value parent_env].scale-\[value parent_env].scale(ref))\}]"}}
    center {{"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].center.x(ref)\}]"} {"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].center.y(ref)\}]"}}
    motionblur {{(mode==2)*0.2}}
    shutter {{FlashMB*(0.175*0.3)}}
    shutteroffset centred
    name ENVMatchMove2
    xpos -430
    ypos 320
    addUserKnob {20 User l parent}
    addUserKnob {3 ref}
    ref {{parent.CTimeOffset7.ref}}
   }
   Transform {
    translate {{"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return -((root.width/2)-(\[value parent_gun].center.x(1)+\[value parent_gun].translate.x(1)))\}]"} {"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return -((root.height/2)-(\[value parent_gun].center.y(1)+\[value parent_gun].translate.y(1)))\}]"}}
    shutteroffset centred
    name Transform_GUNMatchMove2
    label "alignment correction"
    xpos -430
    ypos 407
    addUserKnob {20 User l parent}
    addUserKnob {22 python_button l "set parent" t "select parent node, and press this button to set the selected node as parent" T "n = nuke.selectedNode()\['name'].getValue()\nnuke.thisNode()\['string'].setValue(n)" +STARTLINE}
    addUserKnob {1 string l parent}
    string Transform_MatchMove10
    addUserKnob {3 ref +INVISIBLE}
    ref {{parent.cCard3D_8.ref}}
   }
   Remove {
    operation keep
    channels rgb
    name Remove11
    xpos -430
    ypos 487
   }
push 0
   Switch {
    inputs 2
    which {{ActivateFrontFlash(CTimeOffset7.ref)}}
    name Switch7
    label "keyframeable disable "
    xpos -430
    ypos 586
   }
push 0
   Switch {
    inputs 2
    which {{parent.Angle_reveal_front.value!=0}}
    name Switch5
    label "disable based on angle"
    xpos -430
    ypos 670
   }
   Dot {
    name Dot2
    xpos -396
    ypos 749
   }
push $N32c5e510
   Multiply {
    value {{math_matrix.result_z_flash(parent.CTimeOffset7.ref)}}
    name Angle_reveal_side
    label SIDE
    xpos -135
    ypos -374
   }
   Transform {
    scale {{0.05+(0.05*(((parent.DecimalTimeOffset1.decimal-0.5)*2)*ScaleVariationFlash))}}
    center {{root.width/2 x1015 2304} {root.height/2}}
    shutteroffset centred
    name random_size_side
    xpos -135
    ypos -137
   }
   Card3D {
    translate {{"\[if \{\[exists  parent.parent.parent.input0]\} \{return \[value \[topnode parent.parent.parent.input0].name].translate.x(ref)\} \{return 0\}]"} {"\[if \{\[exists  parent.parent.parent.input0]\} \{return \[value \[topnode parent.parent.parent.input0].name].translate.y(ref)\} \{return 0\}]"} {"\[if \{\[exists  parent.parent.parent.input0]\} \{return \[value \[topnode parent.parent.parent.input0].name].translate.z(ref)\} \{return -1\}]"}}
    rotate {{"\[if \{\[exists  parent.parent.parent.input0]\} \{return \[value \[topnode parent.parent.parent.input0].name].rotate.x(ref)\} \{return 0\}]"} {"\[if \{\[exists  parent.parent.parent.input0]\} \{return \[value \[topnode parent.parent.parent.input0].name].rotate.y(ref)\} \{return 0\}]"} {"\[if \{\[exists  parent.parent.parent.input0]\} \{return \[value \[topnode parent.parent.parent.input0].name].rotate.z(ref)\} \{return 0\}]"}}
    scaling {{"\[if \{\[exists  parent.parent.parent.input0]\} \{return \[value \[topnode parent.parent.parent.input0].name].scaling.x(ref)\} \{return 1\}]"} {"\[if \{\[exists  parent.parent.parent.input0]\} \{return \[value \[topnode parent.parent.parent.input0].name].scaling.y(ref)\} \{return 1\}]"} {"\[if \{\[exists  parent.parent.parent.input0]\} \{return \[value \[topnode parent.parent.parent.input0].name].scaling.z(ref)\} \{return 1\}]"}}
    uniform_scale {{"\[if \{\[exists  parent.parent.parent.input0]\} \{return (\[value \[topnode parent.parent.parent.input0].name].uniform_scale(ref)*25)\} \{return 25\}]"}}
    shutteroffset centred
    name cCard3D_1
    tile_color 0x7b1d1dff
    label "ref frame: \[value ref]"
    xpos -135
    ypos 147
    addUserKnob {20 User l parent}
    addUserKnob {22 python_button l "set parent" t "select parent node, and press this button to set the selected node as parent" +INVISIBLE T "n = nuke.selectedNode()\['name'].getValue()\nnuke.thisNode()\['string'].setValue(n)" +STARTLINE}
    addUserKnob {1 string l parent +INVISIBLE}
    string null
    addUserKnob {3 id l "id number"}
    id {{parent.CTimeOffset7.shotnmbr}}
    addUserKnob {3 ref l "ref frame"}
    ref {{parent.CTimeOffset7.ref}}
   }
   Transform {
    translate {{"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].translate.x(ref)\}]"} {"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].translate.y(ref)\}]"}}
    rotate {{"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].rotate-\[value parent_gun].rotate(ref)\}]"}}
    scale {{"\[if \{\[value parent_gun]==\"null\"\} \{return 1\} \{return 1+(\[value parent_gun].scale-\[value parent_gun].scale(ref))\}]"}}
    center {{"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].center.x(ref)\}]"} {"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].center.y(ref)\}]"}}
    name GUNMatchMove1
    label "\n"
    xpos -135
    ypos 241
    addUserKnob {20 User l parent}
    addUserKnob {3 ref}
    ref {{parent.CTimeOffset7.ref}}
   }
   Transform {
    translate {{"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].translate.x-\[value parent_env].translate.x(ref)\}]"} {"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].translate.y-\[value parent_env].translate.y(ref)\}]"}}
    rotate {{"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].rotate-\[value parent_env].rotate(ref)\}]"}}
    scale {{"\[if \{\[value parent_gun]==\"null\"\} \{return 1\} \{return 1+(\[value parent_env].scale-\[value parent_env].scale(ref))\}]"}}
    center {{"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].center.x(ref)\}]"} {"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].center.y(ref)\}]"}}
    motionblur {{(mode==2)*0.2}}
    shutter {{FlashMB*(0.175*0.3)}}
    shutteroffset centred
    name ENVMatchMove1
    xpos -135
    ypos 317
    addUserKnob {20 User l parent}
    addUserKnob {3 ref}
    ref {{parent.CTimeOffset7.ref}}
   }
   Transform {
    translate {{"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return -((root.width/2)-(\[value parent_gun].center.x(1)+\[value parent_gun].translate.x(1)))\}]"} {"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return -((root.height/2)-(\[value parent_gun].center.y(1)+\[value parent_gun].translate.y(1)))\}]"}}
    shutteroffset centred
    name Transform_GUNMatchMove3
    label "alignment correction"
    xpos -135
    ypos 405
    addUserKnob {20 User l parent}
    addUserKnob {22 python_button l "set parent" t "select parent node, and press this button to set the selected node as parent" T "n = nuke.selectedNode()\['name'].getValue()\nnuke.thisNode()\['string'].setValue(n)" +STARTLINE}
    addUserKnob {1 string l parent}
    string Transform_MatchMove10
    addUserKnob {3 ref +INVISIBLE}
    ref {{parent.cCard3D_8.ref}}
   }
   Remove {
    operation keep
    channels rgb
    name Remove12
    xpos -135
    ypos 489
   }
push 0
   Switch {
    inputs 2
    which {{ActivateSideFlash(CTimeOffset7.ref)}}
    name Switch3
    label "keyframeable disable "
    xpos -135
    ypos 587
   }
push 0
   Switch {
    inputs 2
    which {{parent.Angle_reveal_side.value!=0}}
    name Switch6
    label "disable based on angle"
    xpos -135
    ypos 671
   }
   Merge2 {
    inputs 3+1
    operation max
    name Merge1
    xpos -135
    ypos 745
   }
   Merge2 {
    inputs 2
    operation plus
    bbox intersection
    name Merge6
    xpos -135
    ypos 1196
   }
push 0
   Switch {
    inputs 2
    which {{"shot_\[value count]==0?0:(EnableExtraFrames==1?floor(((frame>=shot_\[value count])+(frame<=(shot_\[value count]+(4*((mode==1)+(mode==2))))))/2):frame==shot_\[value count])"}}
    name cSwitch_3
    selected true
    xpos -135
    ypos 1354
    addUserKnob {20 User}
    addUserKnob {3 count l "shot number"}
    count {{parent.CTimeOffset7.shotnmbr}}
   }
   Output {
    name Output1
    xpos -135
    ypos 1861
   }
  end_group
push $N5c3fbf20
push $N4d8fe120
  Group {
   inputs 2
   name gunshot2
   label "shot: \[value shotcount]\non frame: \[value shot_\[value shotcount]]\n"
   xpos 7893
   ypos -814
   addUserKnob {20 User}
   addUserKnob {3 shotcount l shot}
   shotcount 1
   addUserKnob {3 shotstart l frame +INVISIBLE}
   shotstart {{"shotcount==0 ? 0 : shot\[value shotcount]-1"}}
  }
   BackdropNode {
    inputs 0
    name BackdropNode3
    knobChanged "try:\n    listenedKnobs = \['text', 'position', 'name']\n    node = nuke.thisNode()\n    name = node.knob('name').value()\n    text = node.knob('text').value()\n    position = node.knob('position').value()\n    position = \"<\" + position + \">\"\n    label = node.knob('label').value()\n    \n    if nuke.thisKnob().name() in listenedKnobs:\n        if text == \"\":\n            if node.knob('position').value() == \"left\":\n                node.knob('label').setValue()\n            else:\n                node.knob('label').setValue(position + name)\n        else:\n            if node.knob('position').value() == \"left\":\n                node.knob('label').setValue(text)\n            else:\n                node.knob('label').setValue(position + text)\n                \n    elif nuke.thisKnob().name() == 'font_size':\n        fontSize = node.knob('font_size').value()\n        node.knob('note_font_size').setValue(fontSize)\nexcept:\n    pass"
    tile_color 0x232323ff
    label "<Left><h2> Gunshot"
    note_font_size 31.5
    xpos -698
    ypos -924
    bdwidth 1057
    bdheight 2343
    addUserKnob {20 F_VFX l BackdropNode}
    addUserKnob {43 text l Text}
    text "<h2> Gunshot"
    addUserKnob {7 font_size l "Font Size" R 10 100}
    font_size 31.5
    addUserKnob {4 position l "" -STARTLINE M {Left Center}}
    addUserKnob {26 S01 l " " T " "}
    addUserKnob {22 grow l " <img src=\"F_scalep.png\">" -STARTLINE T "n=nuke.thisNode()\n\ndef grow(node=None,step=50):\n    try:\n        if not node:\n            n=nuke.selectedNode()\n        else:\n            n=node\n            n\['xpos'].setValue(n\['xpos'].getValue()-step)\n            n\['ypos'].setValue(n\['ypos'].getValue()-step)\n            n\['bdwidth'].setValue(n\['bdwidth'].getValue()+step*2)\n            n\['bdheight'].setValue(n\['bdheight'].getValue()+step*2)\n    except:\n        pass\ngrow(n,50)"}
    addUserKnob {22 shrink l " <img src=\"F_scalem.png\">" -STARTLINE T "n=nuke.thisNode()\n\ndef shrink(node=None,step=50):\n    try:\n        if not node:\n            n=nuke.selectedNode()\n        else:\n            n=node\n            n\['xpos'].setValue(n\['xpos'].getValue()+step)\n            n\['ypos'].setValue(n\['ypos'].getValue()+step)\n            n\['bdwidth'].setValue(n\['bdwidth'].getValue()-step*2)\n            n\['bdheight'].setValue(n\['bdheight'].getValue()-step*2)\n    except:\n        pass\nshrink(n,50)"}
    addUserKnob {22 colorandom l " <img src=\"ColorBars.png\">" -STARTLINE T "import colorsys, random\nn=nuke.thisNode()\nR,G,B= colorsys.hsv_to_rgb(random.random(),.1+random.random()*.15,.15+random.random()*.15)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ) )"}
    addUserKnob {22 darkgrey l "<font color=\"#232323\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.0, 0.0, 0.14]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 lightgrey l "<font color=\"#383838\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.0, 0.0, 0.22]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 red l "<font color=\"#8c3838\" size=6>■</font>" T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.0, 0.6, 0.55]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n" +STARTLINE}
    addUserKnob {22 orange l "<font color=\"#b28e59\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.1, 0.5, 0.7]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 yellow l "<font color=\"#ccc766\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.16, 0.5, 0.8]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 green l "<font color=\"#5d995b\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.33, 0.4, 0.6]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 cyan l "<font color=\"#72998f\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.46, 0.25, 0.6]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 blue l "<font color=\"#59687f\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.6, 0.3, 0.5]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 darkblue l "<font color=\"#63628c\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.67, 0.3, 0.55]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 magenta l "<font color=\"#927a99\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.8, 0.2, 0.6]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 pink l "<font color=\"#997a89\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.92, 0.2, 0.6]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {26 S02 l " " T " "}
    addUserKnob {26 Ftools l "" +STARTLINE T "<font color=\"#1C1C1C\"> v1.2 - Franklin VFX - 2018"}
   }
   BackdropNode {
    inputs 0
    name BackdropNode1
    knobChanged "try:\n    listenedKnobs = \['text', 'position', 'name']\n    node = nuke.thisNode()\n    name = node.knob('name').value()\n    text = node.knob('text').value()\n    position = node.knob('position').value()\n    position = \"<\" + position + \">\"\n    label = node.knob('label').value()\n    \n    if nuke.thisKnob().name() in listenedKnobs:\n        if text == \"\":\n            if node.knob('position').value() == \"left\":\n                node.knob('label').setValue()\n            else:\n                node.knob('label').setValue(position + name)\n        else:\n            if node.knob('position').value() == \"left\":\n                node.knob('label').setValue(text)\n            else:\n                node.knob('label').setValue(position + text)\n                \n    elif nuke.thisKnob().name() == 'font_size':\n        fontSize = node.knob('font_size').value()\n        node.knob('note_font_size').setValue(fontSize)\nexcept:\n    pass"
    tile_color 0x927a99ff
    note_font_size 50
    xpos -460
    ypos -257
    bdwidth 435
    bdheight 786
    z_order 1
    addUserKnob {20 F_VFX l BackdropNode}
    addUserKnob {43 text l Text}
    addUserKnob {7 font_size l "Font Size" R 10 100}
    font_size 50
    addUserKnob {4 position l "" -STARTLINE M {Left Center}}
    addUserKnob {26 S01 l " " T " "}
    addUserKnob {22 grow l " <img src=\"F_scalep.png\">" -STARTLINE T "n=nuke.thisNode()\n\ndef grow(node=None,step=50):\n    try:\n        if not node:\n            n=nuke.selectedNode()\n        else:\n            n=node\n            n\['xpos'].setValue(n\['xpos'].getValue()-step)\n            n\['ypos'].setValue(n\['ypos'].getValue()-step)\n            n\['bdwidth'].setValue(n\['bdwidth'].getValue()+step*2)\n            n\['bdheight'].setValue(n\['bdheight'].getValue()+step*2)\n    except:\n        pass\ngrow(n,50)"}
    addUserKnob {22 shrink l " <img src=\"F_scalem.png\">" -STARTLINE T "n=nuke.thisNode()\n\ndef shrink(node=None,step=50):\n    try:\n        if not node:\n            n=nuke.selectedNode()\n        else:\n            n=node\n            n\['xpos'].setValue(n\['xpos'].getValue()+step)\n            n\['ypos'].setValue(n\['ypos'].getValue()+step)\n            n\['bdwidth'].setValue(n\['bdwidth'].getValue()-step*2)\n            n\['bdheight'].setValue(n\['bdheight'].getValue()-step*2)\n    except:\n        pass\nshrink(n,50)"}
    addUserKnob {22 colorandom l " <img src=\"ColorBars.png\">" -STARTLINE T "import colorsys, random\nn=nuke.thisNode()\nR,G,B= colorsys.hsv_to_rgb(random.random(),.1+random.random()*.15,.15+random.random()*.15)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ) )"}
    addUserKnob {22 darkgrey l "<font color=\"#232323\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.0, 0.0, 0.14]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 lightgrey l "<font color=\"#383838\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.0, 0.0, 0.22]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 red l "<font color=\"#8c3838\" size=6>■</font>" T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.0, 0.6, 0.55]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n" +STARTLINE}
    addUserKnob {22 orange l "<font color=\"#b28e59\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.1, 0.5, 0.7]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 yellow l "<font color=\"#ccc766\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.16, 0.5, 0.8]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 green l "<font color=\"#5d995b\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.33, 0.4, 0.6]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 cyan l "<font color=\"#72998f\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.46, 0.25, 0.6]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 blue l "<font color=\"#59687f\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.6, 0.3, 0.5]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 darkblue l "<font color=\"#63628c\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.67, 0.3, 0.55]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 magenta l "<font color=\"#927a99\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.8, 0.2, 0.6]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 pink l "<font color=\"#997a89\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.92, 0.2, 0.6]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {26 S02 l " " T " "}
    addUserKnob {26 Ftools l "" +STARTLINE T "<font color=\"#1C1C1C\"> v1.2 - Franklin VFX - 2018"}
   }
   Constant {
    inputs 0
    channels rgb
    name Constant4
    xpos -648
    ypos 987
   }
   AdjBBox {
    numpixels {{size_bbox}}
    name AdjBBox4
    xpos -648
    ypos 1120
   }
   Dot {
    name Dot19
    xpos -614
    ypos 1200
   }
   Axis3 {
    inputs 0
    useMatrix true
    matrix {
        {{parent.cCard3D_1.matrix} {parent.cCard3D_1.matrix} {parent.cCard3D_1.matrix} {parent.cCard3D_1.matrix}}
        {{parent.cCard3D_1.matrix} {parent.cCard3D_1.matrix} {parent.cCard3D_1.matrix} {parent.cCard3D_1.matrix}}
        {{parent.cCard3D_1.matrix} {parent.cCard3D_1.matrix} {parent.cCard3D_1.matrix} {parent.cCard3D_1.matrix}}
        {{parent.cCard3D_1.matrix} {parent.cCard3D_1.matrix} {parent.cCard3D_1.matrix} {parent.cCard3D_1.matrix}}
      }
    name Axis3
    xpos -207
    ypos 48
   }
set N31110d80 [stack 0]
push 0
   Input {
    inputs 0
    name Side
    xpos -135
    ypos -1101
   }
   TimeOffset {
    time_offset {{"shotnmbr==0 ? 0 : shot_\[value shotnmbr]-1"}}
    time ""
    name CTimeOffset7
    label "shot: \[value shotnmbr]\non frame \[value time_offset]"
    xpos -135
    ypos -853
    addUserKnob {20 User}
    addUserKnob {3 shotnmbr l "shot "}
    shotnmbr {{shotcount}}
    addUserKnob {3 ref}
    ref {{time_offset+1}}
   }
   Group {
    name DecimalTimeOffset1
    tile_color 0xafa35dff
    label "random asset\n(based on brighness)"
    note_font "Bitstream Vera Sans Bold"
    xpos -135
    ypos -690
    addUserKnob {20 User}
    addUserKnob {7 decimal l "time offset (decimal)"}
    decimal {{"floor\n(\n  (\n  (  ((((random((shotcount*823)+((seed+seed_offset_\[value shotcount])*212))-0.5)*  ((1-( abs(brighness_flare-0.5) )*2)+1)  )+0.5)*0.5)  * (1-brighness_flare)  )\n\n  +\n\n  (  (((((random((shotcount*823)+((seed+seed_offset_\[value shotcount])*212))-0.5)*  ((1-( abs(brighness_flare-0.5) )*2)+1)  )+0.5)*0.5)+0.5)  * (brighness_flare)  )\n  )\n  *1000\n)\n\n/1000"}}
    addUserKnob {26 ""}
    addUserKnob {26 _1 l "" +STARTLINE T "Chris Fryer | 2020\nupdated by Yorben Otto | 2024"}
   }
    Input {
     inputs 0
     name Input1
     xpos 426
     ypos -793
    }
    TimeOffset {
     time_offset {{(-floor(parent.decimal))*(DecimalTimeOffset1.decimal<0)}}
     time ""
     name TimeOffset1
     xpos 426
     ypos -674
    }
    Dot {
     name Dot6
     xpos 460
     ypos -635
    }
set N31150750 [stack 0]
    Dot {
     name Dot5
     xpos 350
     ypos -635
    }
    Dot {
     name Dot7
     xpos 350
     ypos -365
    }
push $N31150750
    Dot {
     name Dot1
     xpos 572
     ypos -635
    }
    TimeBlur {
     divisions 2
     shutter {{(parent.decimal-(floor(parent.decimal)))*2}}
     shutteroffset start
     shuttercustomoffset 0
     name TimeBlur1
     xpos 538
     ypos -558
    }
    Dot {
     name Dot2
     xpos 572
     ypos -490
    }
push $N31150750
    TimeBlur {
     divisions 2
     shutter {{parent.decimal*2}}
     shutteroffset start
     shuttercustomoffset 0
     name TimeBlur8
     xpos 426
     ypos -556
    }
    Switch {
     inputs 2
     which {{parent.decimal<0}}
     name Switch1
     xpos 426
     ypos -494
    }
    Multiply {
     value {{parent.TimeBlur8.divisions}}
     name Multiply6
     xpos 426
     ypos -436
    }
    Merge2 {
     inputs 2
     operation from
     name Merge6
     xpos 426
     ypos -369
    }
set N31192690 [stack 0]
    Output {
     name Output1
     xpos 426
     ypos -221
    }
push $N31192690
push $N31192690
    Viewer {
     inputs 2
     frame_range 1-100
     viewerProcess "sRGB (default)"
     name Viewer1
     xpos 675
     ypos -246
    }
   end_group
   NoTimeBlur {
    name NoTimeBlur6
    xpos -135
    ypos -608
   }
   Dot {
    name Dot21
    xpos -101
    ypos -449
   }
set N31240f10 [stack 0]
   Dot {
    name Dot22
    xpos -245
    ypos -449
   }
   Multiply {
    value {{math_matrix.result_y_flash(parent.CTimeOffset7.ref)}}
    name Angle_reveal_top
    label TOP
    xpos -279
    ypos -371
   }
   Transform {
    scale {{0.05+(0.05*(((parent.DecimalTimeOffset1.decimal-0.5)*2)*ScaleVariationFlash))}}
    center {{root.width/2 x1015 2304} {root.height/2}}
    shutteroffset centred
    name random_size_top
    xpos -279
    ypos -136
   }
   Card3D {
    inputs 3
    rot_order ZYX
    translate {0 0 0}
    rotate {90 0 0}
    shutteroffset centred
    name cCard3D5
    tile_color 0x7b1d1dff
    xpos -279
    ypos 153
    addUserKnob {20 User l parent}
    addUserKnob {22 python_button l "set parent" t "select parent node, and press this button to set the selected node as parent" +INVISIBLE T "n = nuke.selectedNode()\['name'].getValue()\nnuke.thisNode()\['string'].setValue(n)" +STARTLINE}
    addUserKnob {1 string l parent +INVISIBLE}
    string null
    addUserKnob {3 ref l "ref frame"}
    ref 1015
   }
   Transform {
    translate {{"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].translate.x(ref)\}]"} {"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].translate.y(ref)\}]"}}
    rotate {{"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].rotate-\[value parent_gun].rotate(ref)\}]"}}
    scale {{"\[if \{\[value parent_gun]==\"null\"\} \{return 1\} \{return 1+(\[value parent_gun].scale-\[value parent_gun].scale(ref))\}]"}}
    center {{"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].center.x(ref)\}]"} {"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].center.y(ref)\}]"}}
    name GUNMatchMove
    label "\n"
    xpos -279
    ypos 247
    addUserKnob {20 User l parent}
    addUserKnob {3 ref}
    ref {{parent.CTimeOffset7.ref}}
   }
   Transform {
    translate {{"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].translate.x-\[value parent_env].translate.x(ref)\}]"} {"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].translate.y-\[value parent_env].translate.y(ref)\}]"}}
    rotate {{"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].rotate-\[value parent_env].rotate(ref)\}]"}}
    scale {{"\[if \{\[value parent_gun]==\"null\"\} \{return 1\} \{return 1+(\[value parent_env].scale-\[value parent_env].scale(ref))\}]"}}
    center {{"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].center.x(ref)\}]"} {"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].center.y(ref)\}]"}}
    motionblur {{(mode==2)*0.2}}
    shutter {{FlashMB*(0.175*0.3)}}
    shutteroffset centred
    name ENVMatchMove
    xpos -279
    ypos 321
    addUserKnob {20 User l parent}
    addUserKnob {3 ref}
    ref {{parent.CTimeOffset7.ref}}
   }
   Transform {
    translate {{"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return -((root.width/2)-(\[value parent_gun].center.x(1)+\[value parent_gun].translate.x(1)))\}]"} {"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return -((root.height/2)-(\[value parent_gun].center.y(1)+\[value parent_gun].translate.y(1)))\}]"}}
    shutteroffset centred
    name Transform_GUNMatchMove1
    label "alignment correction"
    xpos -279
    ypos 408
    addUserKnob {20 User l parent}
    addUserKnob {22 python_button l "set parent" t "select parent node, and press this button to set the selected node as parent" T "n = nuke.selectedNode()\['name'].getValue()\nnuke.thisNode()\['string'].setValue(n)" +STARTLINE}
    addUserKnob {1 string l parent}
    string Transform_MatchMove10
    addUserKnob {3 ref +INVISIBLE}
    ref {{parent.cCard3D_8.ref}}
   }
   Remove {
    operation keep
    channels rgb
    name Remove10
    xpos -279
    ypos 489
   }
push 0
   Switch {
    inputs 2
    which {{ActivateSideFlash(CTimeOffset7.ref)}}
    name Switch1
    label "keyframeable disable "
    xpos -279
    ypos 587
   }
push 0
   Switch {
    inputs 2
    which {{parent.Angle_reveal_top.value!=0}}
    name Switch4
    label "disable based on angle"
    xpos -279
    ypos 670
   }
   Dot {
    name Dot1
    xpos -245
    ypos 717
   }
push 0
push $N31110d80
push 0
   Input {
    inputs 0
    name Front
    xpos -430
    ypos -1102
    number 1
   }
   TimeOffset {
    time_offset {{"shotnmbr==0 ? 0 : shot_\[value shotnmbr]-1"}}
    time ""
    name CTimeOffset8
    xpos -430
    ypos -840
    addUserKnob {20 User}
    addUserKnob {3 shotnmbr l "shot "}
    shotnmbr {{parent.CTimeOffset7.shotnmbr}}
   }
   Group {
    name DecimalTimeOffset
    tile_color 0xafa35dff
    label "random asset\n(based on brighness)"
    note_font "Bitstream Vera Sans Bold"
    xpos -430
    ypos -693
    addUserKnob {20 User}
    addUserKnob {7 decimal l "time offset (decimal)"}
    decimal {{"floor\n(\n  (\n  (  ((((random((shotcount*823)+((seed+seed_offset_\[value shotcount])*212))-0.5)*  ((1-( abs(brighness_flare-0.5) )*2)+1)  )+0.5)*0.5)  * (1-brighness_flare)  )\n\n  +\n\n  (  (((((random((shotcount*823)+((seed+seed_offset_\[value shotcount])*212))-0.5)*  ((1-( abs(brighness_flare-0.5) )*2)+1)  )+0.5)*0.5)+0.5)  * (brighness_flare)  )\n  )\n  *1000\n)\n\n/1000"}}
    addUserKnob {26 ""}
    addUserKnob {26 _1 l "" +STARTLINE T "Chris Fryer | 2020\nupdated by Yorben Otto | 2024"}
   }
    Input {
     inputs 0
     name Input1
     xpos 426
     ypos -793
    }
    TimeOffset {
     time_offset {{(-floor(parent.decimal))*(DecimalTimeOffset.decimal<0)}}
     time ""
     name TimeOffset1
     xpos 426
     ypos -674
    }
    Dot {
     name Dot6
     xpos 460
     ypos -635
    }
set N31300990 [stack 0]
    Dot {
     name Dot5
     xpos 350
     ypos -635
    }
    Dot {
     name Dot7
     xpos 350
     ypos -365
    }
push $N31300990
    Dot {
     name Dot1
     xpos 572
     ypos -635
    }
    TimeBlur {
     divisions 2
     shutter {{(parent.decimal-(floor(parent.decimal)))*2}}
     shutteroffset start
     shuttercustomoffset 0
     name TimeBlur1
     xpos 538
     ypos -558
    }
    Dot {
     name Dot2
     xpos 572
     ypos -490
    }
push $N31300990
    TimeBlur {
     divisions 2
     shutter {{parent.decimal*2}}
     shutteroffset start
     shuttercustomoffset 0
     name TimeBlur8
     xpos 426
     ypos -556
    }
    Switch {
     inputs 2
     which {{parent.decimal<0}}
     name Switch1
     xpos 426
     ypos -494
    }
    Multiply {
     value {{parent.TimeBlur8.divisions}}
     name Multiply6
     xpos 426
     ypos -436
    }
    Merge2 {
     inputs 2
     operation from
     name Merge6
     xpos 426
     ypos -369
    }
set N313428d0 [stack 0]
    Output {
     name Output1
     xpos 426
     ypos -221
    }
push $N313428d0
push $N313428d0
    Viewer {
     inputs 2
     frame_range 1-100
     viewerProcess "sRGB (default)"
     name Viewer1
     xpos 675
     ypos -246
    }
   end_group
   NoTimeBlur {
    name NoTimeBlur7
    xpos -430
    ypos -617
   }
   Multiply {
    value {{math_matrix.result_x_flash(parent.CTimeOffset7.ref)}}
    name Angle_reveal_front
    label FRONT
    xpos -430
    ypos -375
   }
   Transform {
    scale {{0.05+(0.05*(((parent.DecimalTimeOffset1.decimal-0.5)*2)*ScaleVariationFlash))}}
    center {{root.width/2 x1015 2304} {root.height/2}}
    shutteroffset centred
    name random_size_front
    xpos -430
    ypos -134
   }
   Card3D {
    inputs 3
    rot_order ZYX
    translate {0 0 0}
    rotate {0 90 0}
    shutteroffset centred
    name cCard3D6
    tile_color 0x7b1d1dff
    xpos -430
    ypos 150
    addUserKnob {20 User l parent}
    addUserKnob {22 python_button l "set parent" t "select parent node, and press this button to set the selected node as parent" +INVISIBLE T "n = nuke.selectedNode()\['name'].getValue()\nnuke.thisNode()\['string'].setValue(n)" +STARTLINE}
    addUserKnob {1 string l parent +INVISIBLE}
    string null
    addUserKnob {3 ref l "ref frame"}
    ref 1015
   }
   Transform {
    translate {{"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].translate.x(ref)\}]"} {"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].translate.y(ref)\}]"}}
    rotate {{"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].rotate-\[value parent_gun].rotate(ref)\}]"}}
    scale {{"\[if \{\[value parent_gun]==\"null\"\} \{return 1\} \{return 1+(\[value parent_gun].scale-\[value parent_gun].scale(ref))\}]"}}
    center {{"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].center.x(ref)\}]"} {"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].center.y(ref)\}]"}}
    name GUNMatchMove2
    label "\n"
    xpos -430
    ypos 248
    addUserKnob {20 User l parent}
    addUserKnob {3 ref}
    ref {{parent.CTimeOffset7.ref}}
   }
   Transform {
    translate {{"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].translate.x-\[value parent_env].translate.x(ref)\}]"} {"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].translate.y-\[value parent_env].translate.y(ref)\}]"}}
    rotate {{"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].rotate-\[value parent_env].rotate(ref)\}]"}}
    scale {{"\[if \{\[value parent_gun]==\"null\"\} \{return 1\} \{return 1+(\[value parent_env].scale-\[value parent_env].scale(ref))\}]"}}
    center {{"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].center.x(ref)\}]"} {"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].center.y(ref)\}]"}}
    motionblur {{(mode==2)*0.2}}
    shutter {{FlashMB*(0.175*0.3)}}
    shutteroffset centred
    name ENVMatchMove2
    xpos -430
    ypos 320
    addUserKnob {20 User l parent}
    addUserKnob {3 ref}
    ref {{parent.CTimeOffset7.ref}}
   }
   Transform {
    translate {{"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return -((root.width/2)-(\[value parent_gun].center.x(1)+\[value parent_gun].translate.x(1)))\}]"} {"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return -((root.height/2)-(\[value parent_gun].center.y(1)+\[value parent_gun].translate.y(1)))\}]"}}
    shutteroffset centred
    name Transform_GUNMatchMove2
    label "alignment correction"
    xpos -430
    ypos 407
    addUserKnob {20 User l parent}
    addUserKnob {22 python_button l "set parent" t "select parent node, and press this button to set the selected node as parent" T "n = nuke.selectedNode()\['name'].getValue()\nnuke.thisNode()\['string'].setValue(n)" +STARTLINE}
    addUserKnob {1 string l parent}
    string Transform_MatchMove10
    addUserKnob {3 ref +INVISIBLE}
    ref {{parent.cCard3D_8.ref}}
   }
   Remove {
    operation keep
    channels rgb
    name Remove11
    xpos -430
    ypos 487
   }
push 0
   Switch {
    inputs 2
    which {{ActivateFrontFlash(CTimeOffset7.ref)}}
    name Switch7
    label "keyframeable disable "
    xpos -430
    ypos 586
   }
push 0
   Switch {
    inputs 2
    which {{parent.Angle_reveal_front.value!=0}}
    name Switch5
    label "disable based on angle"
    xpos -430
    ypos 670
   }
   Dot {
    name Dot2
    xpos -396
    ypos 749
   }
push $N31240f10
   Multiply {
    value {{math_matrix.result_z_flash(parent.CTimeOffset7.ref)}}
    name Angle_reveal_side
    label SIDE
    xpos -135
    ypos -374
   }
   Transform {
    scale {{0.05+(0.05*(((parent.DecimalTimeOffset1.decimal-0.5)*2)*ScaleVariationFlash))}}
    center {{root.width/2 x1015 2304} {root.height/2}}
    shutteroffset centred
    name random_size_side
    xpos -135
    ypos -137
   }
   Card3D {
    translate {{"\[if \{\[exists  parent.parent.parent.input0]\} \{return \[value \[topnode parent.parent.parent.input0].name].translate.x(ref)\} \{return 0\}]"} {"\[if \{\[exists  parent.parent.parent.input0]\} \{return \[value \[topnode parent.parent.parent.input0].name].translate.y(ref)\} \{return 0\}]"} {"\[if \{\[exists  parent.parent.parent.input0]\} \{return \[value \[topnode parent.parent.parent.input0].name].translate.z(ref)\} \{return -1\}]"}}
    rotate {{"\[if \{\[exists  parent.parent.parent.input0]\} \{return \[value \[topnode parent.parent.parent.input0].name].rotate.x(ref)\} \{return 0\}]"} {"\[if \{\[exists  parent.parent.parent.input0]\} \{return \[value \[topnode parent.parent.parent.input0].name].rotate.y(ref)\} \{return 0\}]"} {"\[if \{\[exists  parent.parent.parent.input0]\} \{return \[value \[topnode parent.parent.parent.input0].name].rotate.z(ref)\} \{return 0\}]"}}
    scaling {{"\[if \{\[exists  parent.parent.parent.input0]\} \{return \[value \[topnode parent.parent.parent.input0].name].scaling.x(ref)\} \{return 1\}]"} {"\[if \{\[exists  parent.parent.parent.input0]\} \{return \[value \[topnode parent.parent.parent.input0].name].scaling.y(ref)\} \{return 1\}]"} {"\[if \{\[exists  parent.parent.parent.input0]\} \{return \[value \[topnode parent.parent.parent.input0].name].scaling.z(ref)\} \{return 1\}]"}}
    uniform_scale {{"\[if \{\[exists  parent.parent.parent.input0]\} \{return (\[value \[topnode parent.parent.parent.input0].name].uniform_scale(ref)*25)\} \{return 25\}]"}}
    shutteroffset centred
    name cCard3D_1
    tile_color 0x7b1d1dff
    label "ref frame: \[value ref]"
    xpos -135
    ypos 147
    addUserKnob {20 User l parent}
    addUserKnob {22 python_button l "set parent" t "select parent node, and press this button to set the selected node as parent" +INVISIBLE T "n = nuke.selectedNode()\['name'].getValue()\nnuke.thisNode()\['string'].setValue(n)" +STARTLINE}
    addUserKnob {1 string l parent +INVISIBLE}
    string null
    addUserKnob {3 id l "id number"}
    id {{parent.CTimeOffset7.shotnmbr}}
    addUserKnob {3 ref l "ref frame"}
    ref {{parent.CTimeOffset7.ref}}
   }
   Transform {
    translate {{"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].translate.x(ref)\}]"} {"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].translate.y(ref)\}]"}}
    rotate {{"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].rotate-\[value parent_gun].rotate(ref)\}]"}}
    scale {{"\[if \{\[value parent_gun]==\"null\"\} \{return 1\} \{return 1+(\[value parent_gun].scale-\[value parent_gun].scale(ref))\}]"}}
    center {{"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].center.x(ref)\}]"} {"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].center.y(ref)\}]"}}
    name GUNMatchMove1
    label "\n"
    xpos -135
    ypos 241
    addUserKnob {20 User l parent}
    addUserKnob {3 ref}
    ref {{parent.CTimeOffset7.ref}}
   }
   Transform {
    translate {{"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].translate.x-\[value parent_env].translate.x(ref)\}]"} {"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].translate.y-\[value parent_env].translate.y(ref)\}]"}}
    rotate {{"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].rotate-\[value parent_env].rotate(ref)\}]"}}
    scale {{"\[if \{\[value parent_gun]==\"null\"\} \{return 1\} \{return 1+(\[value parent_env].scale-\[value parent_env].scale(ref))\}]"}}
    center {{"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].center.x(ref)\}]"} {"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].center.y(ref)\}]"}}
    motionblur {{(mode==2)*0.2}}
    shutter {{FlashMB*(0.175*0.3)}}
    shutteroffset centred
    name ENVMatchMove1
    xpos -135
    ypos 317
    addUserKnob {20 User l parent}
    addUserKnob {3 ref}
    ref {{parent.CTimeOffset7.ref}}
   }
   Transform {
    translate {{"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return -((root.width/2)-(\[value parent_gun].center.x(1)+\[value parent_gun].translate.x(1)))\}]"} {"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return -((root.height/2)-(\[value parent_gun].center.y(1)+\[value parent_gun].translate.y(1)))\}]"}}
    shutteroffset centred
    name Transform_GUNMatchMove3
    label "alignment correction"
    xpos -135
    ypos 405
    addUserKnob {20 User l parent}
    addUserKnob {22 python_button l "set parent" t "select parent node, and press this button to set the selected node as parent" T "n = nuke.selectedNode()\['name'].getValue()\nnuke.thisNode()\['string'].setValue(n)" +STARTLINE}
    addUserKnob {1 string l parent}
    string Transform_MatchMove10
    addUserKnob {3 ref +INVISIBLE}
    ref {{parent.cCard3D_8.ref}}
   }
   Remove {
    operation keep
    channels rgb
    name Remove12
    xpos -135
    ypos 489
   }
push 0
   Switch {
    inputs 2
    which {{ActivateSideFlash(CTimeOffset7.ref)}}
    name Switch3
    label "keyframeable disable "
    xpos -135
    ypos 587
   }
push 0
   Switch {
    inputs 2
    which {{parent.Angle_reveal_side.value!=0}}
    name Switch6
    label "disable based on angle"
    xpos -135
    ypos 671
   }
   Merge2 {
    inputs 3+1
    operation max
    name Merge1
    xpos -135
    ypos 745
   }
   Merge2 {
    inputs 2
    operation plus
    bbox intersection
    name Merge6
    xpos -135
    ypos 1196
   }
push 0
   Switch {
    inputs 2
    which {{"shot_\[value count]==0?0:(EnableExtraFrames==1?floor(((frame>=shot_\[value count])+(frame<=(shot_\[value count]+(4*((mode==1)+(mode==2))))))/2):frame==shot_\[value count])"}}
    name cSwitch_3
    selected true
    xpos -135
    ypos 1354
    addUserKnob {20 User}
    addUserKnob {3 count l "shot number"}
    count {{parent.CTimeOffset7.shotnmbr}}
   }
   Output {
    name Output1
    xpos -135
    ypos 1861
   }
  end_group
push $N562fd1c0
push $N5d6f6560
  Group {
   inputs 2
   name gunshot1
   label "shot: \[value shotcount]\non frame: \[value shot_\[value shotcount]]\n"
   xpos 8087
   ypos -814
   addUserKnob {20 User}
   addUserKnob {3 shotcount l shot}
   shotcount 2
   addUserKnob {3 shotstart l frame +INVISIBLE}
   shotstart {{"shotcount==0 ? 0 : shot\[value shotcount]-1"}}
  }
   BackdropNode {
    inputs 0
    name BackdropNode3
    knobChanged "try:\n    listenedKnobs = \['text', 'position', 'name']\n    node = nuke.thisNode()\n    name = node.knob('name').value()\n    text = node.knob('text').value()\n    position = node.knob('position').value()\n    position = \"<\" + position + \">\"\n    label = node.knob('label').value()\n    \n    if nuke.thisKnob().name() in listenedKnobs:\n        if text == \"\":\n            if node.knob('position').value() == \"left\":\n                node.knob('label').setValue()\n            else:\n                node.knob('label').setValue(position + name)\n        else:\n            if node.knob('position').value() == \"left\":\n                node.knob('label').setValue(text)\n            else:\n                node.knob('label').setValue(position + text)\n                \n    elif nuke.thisKnob().name() == 'font_size':\n        fontSize = node.knob('font_size').value()\n        node.knob('note_font_size').setValue(fontSize)\nexcept:\n    pass"
    tile_color 0x232323ff
    label "<Left><h2> Gunshot"
    note_font_size 31.5
    xpos -698
    ypos -924
    bdwidth 1057
    bdheight 2343
    addUserKnob {20 F_VFX l BackdropNode}
    addUserKnob {43 text l Text}
    text "<h2> Gunshot"
    addUserKnob {7 font_size l "Font Size" R 10 100}
    font_size 31.5
    addUserKnob {4 position l "" -STARTLINE M {Left Center}}
    addUserKnob {26 S01 l " " T " "}
    addUserKnob {22 grow l " <img src=\"F_scalep.png\">" -STARTLINE T "n=nuke.thisNode()\n\ndef grow(node=None,step=50):\n    try:\n        if not node:\n            n=nuke.selectedNode()\n        else:\n            n=node\n            n\['xpos'].setValue(n\['xpos'].getValue()-step)\n            n\['ypos'].setValue(n\['ypos'].getValue()-step)\n            n\['bdwidth'].setValue(n\['bdwidth'].getValue()+step*2)\n            n\['bdheight'].setValue(n\['bdheight'].getValue()+step*2)\n    except:\n        pass\ngrow(n,50)"}
    addUserKnob {22 shrink l " <img src=\"F_scalem.png\">" -STARTLINE T "n=nuke.thisNode()\n\ndef shrink(node=None,step=50):\n    try:\n        if not node:\n            n=nuke.selectedNode()\n        else:\n            n=node\n            n\['xpos'].setValue(n\['xpos'].getValue()+step)\n            n\['ypos'].setValue(n\['ypos'].getValue()+step)\n            n\['bdwidth'].setValue(n\['bdwidth'].getValue()-step*2)\n            n\['bdheight'].setValue(n\['bdheight'].getValue()-step*2)\n    except:\n        pass\nshrink(n,50)"}
    addUserKnob {22 colorandom l " <img src=\"ColorBars.png\">" -STARTLINE T "import colorsys, random\nn=nuke.thisNode()\nR,G,B= colorsys.hsv_to_rgb(random.random(),.1+random.random()*.15,.15+random.random()*.15)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ) )"}
    addUserKnob {22 darkgrey l "<font color=\"#232323\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.0, 0.0, 0.14]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 lightgrey l "<font color=\"#383838\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.0, 0.0, 0.22]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 red l "<font color=\"#8c3838\" size=6>■</font>" T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.0, 0.6, 0.55]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n" +STARTLINE}
    addUserKnob {22 orange l "<font color=\"#b28e59\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.1, 0.5, 0.7]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 yellow l "<font color=\"#ccc766\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.16, 0.5, 0.8]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 green l "<font color=\"#5d995b\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.33, 0.4, 0.6]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 cyan l "<font color=\"#72998f\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.46, 0.25, 0.6]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 blue l "<font color=\"#59687f\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.6, 0.3, 0.5]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 darkblue l "<font color=\"#63628c\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.67, 0.3, 0.55]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 magenta l "<font color=\"#927a99\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.8, 0.2, 0.6]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 pink l "<font color=\"#997a89\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.92, 0.2, 0.6]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {26 S02 l " " T " "}
    addUserKnob {26 Ftools l "" +STARTLINE T "<font color=\"#1C1C1C\"> v1.2 - Franklin VFX - 2018"}
   }
   BackdropNode {
    inputs 0
    name BackdropNode1
    knobChanged "try:\n    listenedKnobs = \['text', 'position', 'name']\n    node = nuke.thisNode()\n    name = node.knob('name').value()\n    text = node.knob('text').value()\n    position = node.knob('position').value()\n    position = \"<\" + position + \">\"\n    label = node.knob('label').value()\n    \n    if nuke.thisKnob().name() in listenedKnobs:\n        if text == \"\":\n            if node.knob('position').value() == \"left\":\n                node.knob('label').setValue()\n            else:\n                node.knob('label').setValue(position + name)\n        else:\n            if node.knob('position').value() == \"left\":\n                node.knob('label').setValue(text)\n            else:\n                node.knob('label').setValue(position + text)\n                \n    elif nuke.thisKnob().name() == 'font_size':\n        fontSize = node.knob('font_size').value()\n        node.knob('note_font_size').setValue(fontSize)\nexcept:\n    pass"
    tile_color 0x927a99ff
    note_font_size 50
    xpos -460
    ypos -257
    bdwidth 435
    bdheight 786
    z_order 1
    addUserKnob {20 F_VFX l BackdropNode}
    addUserKnob {43 text l Text}
    addUserKnob {7 font_size l "Font Size" R 10 100}
    font_size 50
    addUserKnob {4 position l "" -STARTLINE M {Left Center}}
    addUserKnob {26 S01 l " " T " "}
    addUserKnob {22 grow l " <img src=\"F_scalep.png\">" -STARTLINE T "n=nuke.thisNode()\n\ndef grow(node=None,step=50):\n    try:\n        if not node:\n            n=nuke.selectedNode()\n        else:\n            n=node\n            n\['xpos'].setValue(n\['xpos'].getValue()-step)\n            n\['ypos'].setValue(n\['ypos'].getValue()-step)\n            n\['bdwidth'].setValue(n\['bdwidth'].getValue()+step*2)\n            n\['bdheight'].setValue(n\['bdheight'].getValue()+step*2)\n    except:\n        pass\ngrow(n,50)"}
    addUserKnob {22 shrink l " <img src=\"F_scalem.png\">" -STARTLINE T "n=nuke.thisNode()\n\ndef shrink(node=None,step=50):\n    try:\n        if not node:\n            n=nuke.selectedNode()\n        else:\n            n=node\n            n\['xpos'].setValue(n\['xpos'].getValue()+step)\n            n\['ypos'].setValue(n\['ypos'].getValue()+step)\n            n\['bdwidth'].setValue(n\['bdwidth'].getValue()-step*2)\n            n\['bdheight'].setValue(n\['bdheight'].getValue()-step*2)\n    except:\n        pass\nshrink(n,50)"}
    addUserKnob {22 colorandom l " <img src=\"ColorBars.png\">" -STARTLINE T "import colorsys, random\nn=nuke.thisNode()\nR,G,B= colorsys.hsv_to_rgb(random.random(),.1+random.random()*.15,.15+random.random()*.15)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ) )"}
    addUserKnob {22 darkgrey l "<font color=\"#232323\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.0, 0.0, 0.14]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 lightgrey l "<font color=\"#383838\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.0, 0.0, 0.22]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 red l "<font color=\"#8c3838\" size=6>■</font>" T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.0, 0.6, 0.55]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n" +STARTLINE}
    addUserKnob {22 orange l "<font color=\"#b28e59\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.1, 0.5, 0.7]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 yellow l "<font color=\"#ccc766\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.16, 0.5, 0.8]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 green l "<font color=\"#5d995b\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.33, 0.4, 0.6]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 cyan l "<font color=\"#72998f\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.46, 0.25, 0.6]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 blue l "<font color=\"#59687f\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.6, 0.3, 0.5]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 darkblue l "<font color=\"#63628c\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.67, 0.3, 0.55]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 magenta l "<font color=\"#927a99\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.8, 0.2, 0.6]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 pink l "<font color=\"#997a89\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.92, 0.2, 0.6]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {26 S02 l " " T " "}
    addUserKnob {26 Ftools l "" +STARTLINE T "<font color=\"#1C1C1C\"> v1.2 - Franklin VFX - 2018"}
   }
   Constant {
    inputs 0
    channels rgb
    name Constant4
    xpos -648
    ypos 987
   }
   AdjBBox {
    numpixels {{size_bbox}}
    name AdjBBox4
    xpos -648
    ypos 1120
   }
   Dot {
    name Dot19
    xpos -614
    ypos 1200
   }
   Axis3 {
    inputs 0
    useMatrix true
    matrix {
        {{parent.cCard3D_1.matrix} {parent.cCard3D_1.matrix} {parent.cCard3D_1.matrix} {parent.cCard3D_1.matrix}}
        {{parent.cCard3D_1.matrix} {parent.cCard3D_1.matrix} {parent.cCard3D_1.matrix} {parent.cCard3D_1.matrix}}
        {{parent.cCard3D_1.matrix} {parent.cCard3D_1.matrix} {parent.cCard3D_1.matrix} {parent.cCard3D_1.matrix}}
        {{parent.cCard3D_1.matrix} {parent.cCard3D_1.matrix} {parent.cCard3D_1.matrix} {parent.cCard3D_1.matrix}}
      }
    name Axis3
    xpos -207
    ypos 48
   }
set N3165f880 [stack 0]
push 0
   Input {
    inputs 0
    name Side
    xpos -135
    ypos -1101
   }
   TimeOffset {
    time_offset {{"shotnmbr==0 ? 0 : shot_\[value shotnmbr]-1"}}
    time ""
    name CTimeOffset7
    label "shot: \[value shotnmbr]\non frame \[value time_offset]"
    xpos -135
    ypos -853
    addUserKnob {20 User}
    addUserKnob {3 shotnmbr l "shot "}
    shotnmbr {{shotcount}}
    addUserKnob {3 ref}
    ref {{time_offset+1}}
   }
   Group {
    name DecimalTimeOffset1
    tile_color 0xafa35dff
    label "random asset\n(based on brighness)"
    note_font "Bitstream Vera Sans Bold"
    xpos -135
    ypos -690
    addUserKnob {20 User}
    addUserKnob {7 decimal l "time offset (decimal)"}
    decimal {{"floor\n(\n  (\n  (  ((((random((shotcount*823)+((seed+seed_offset_\[value shotcount])*212))-0.5)*  ((1-( abs(brighness_flare-0.5) )*2)+1)  )+0.5)*0.5)  * (1-brighness_flare)  )\n\n  +\n\n  (  (((((random((shotcount*823)+((seed+seed_offset_\[value shotcount])*212))-0.5)*  ((1-( abs(brighness_flare-0.5) )*2)+1)  )+0.5)*0.5)+0.5)  * (brighness_flare)  )\n  )\n  *1000\n)\n\n/1000"}}
    addUserKnob {26 ""}
    addUserKnob {26 _1 l "" +STARTLINE T "Chris Fryer | 2020\nupdated by Yorben Otto | 2024"}
   }
    Input {
     inputs 0
     name Input1
     xpos 426
     ypos -793
    }
    TimeOffset {
     time_offset {{(-floor(parent.decimal))*(DecimalTimeOffset1.decimal<0)}}
     time ""
     name TimeOffset1
     xpos 426
     ypos -674
    }
    Dot {
     name Dot6
     xpos 460
     ypos -635
    }
set N3169f250 [stack 0]
    Dot {
     name Dot5
     xpos 350
     ypos -635
    }
    Dot {
     name Dot7
     xpos 350
     ypos -365
    }
push $N3169f250
    Dot {
     name Dot1
     xpos 572
     ypos -635
    }
    TimeBlur {
     divisions 2
     shutter {{(parent.decimal-(floor(parent.decimal)))*2}}
     shutteroffset start
     shuttercustomoffset 0
     name TimeBlur1
     xpos 538
     ypos -558
    }
    Dot {
     name Dot2
     xpos 572
     ypos -490
    }
push $N3169f250
    TimeBlur {
     divisions 2
     shutter {{parent.decimal*2}}
     shutteroffset start
     shuttercustomoffset 0
     name TimeBlur8
     xpos 426
     ypos -556
    }
    Switch {
     inputs 2
     which {{parent.decimal<0}}
     name Switch1
     xpos 426
     ypos -494
    }
    Multiply {
     value {{parent.TimeBlur8.divisions}}
     name Multiply6
     xpos 426
     ypos -436
    }
    Merge2 {
     inputs 2
     operation from
     name Merge6
     xpos 426
     ypos -369
    }
set N316e1190 [stack 0]
    Output {
     name Output1
     xpos 426
     ypos -221
    }
push $N316e1190
push $N316e1190
    Viewer {
     inputs 2
     frame_range 1-100
     viewerProcess "sRGB (default)"
     name Viewer1
     xpos 675
     ypos -246
    }
   end_group
   NoTimeBlur {
    name NoTimeBlur6
    xpos -135
    ypos -608
   }
   Dot {
    name Dot21
    xpos -101
    ypos -449
   }
set N3210ba10 [stack 0]
   Dot {
    name Dot22
    xpos -245
    ypos -449
   }
   Multiply {
    value {{math_matrix.result_y_flash(parent.CTimeOffset7.ref)}}
    name Angle_reveal_top
    label TOP
    xpos -279
    ypos -371
   }
   Transform {
    scale {{0.05+(0.05*(((parent.DecimalTimeOffset1.decimal-0.5)*2)*ScaleVariationFlash))}}
    center {{root.width/2 x1015 2304} {root.height/2}}
    shutteroffset centred
    name random_size_top
    xpos -279
    ypos -136
   }
   Card3D {
    inputs 3
    rot_order ZYX
    translate {0 0 0}
    rotate {90 0 0}
    shutteroffset centred
    name cCard3D5
    tile_color 0x7b1d1dff
    xpos -279
    ypos 153
    addUserKnob {20 User l parent}
    addUserKnob {22 python_button l "set parent" t "select parent node, and press this button to set the selected node as parent" +INVISIBLE T "n = nuke.selectedNode()\['name'].getValue()\nnuke.thisNode()\['string'].setValue(n)" +STARTLINE}
    addUserKnob {1 string l parent +INVISIBLE}
    string null
    addUserKnob {3 ref l "ref frame"}
    ref 1015
   }
   Transform {
    translate {{"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].translate.x(ref)\}]"} {"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].translate.y(ref)\}]"}}
    rotate {{"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].rotate-\[value parent_gun].rotate(ref)\}]"}}
    scale {{"\[if \{\[value parent_gun]==\"null\"\} \{return 1\} \{return 1+(\[value parent_gun].scale-\[value parent_gun].scale(ref))\}]"}}
    center {{"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].center.x(ref)\}]"} {"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].center.y(ref)\}]"}}
    name GUNMatchMove
    label "\n"
    xpos -279
    ypos 247
    addUserKnob {20 User l parent}
    addUserKnob {3 ref}
    ref {{parent.CTimeOffset7.ref}}
   }
   Transform {
    translate {{"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].translate.x-\[value parent_env].translate.x(ref)\}]"} {"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].translate.y-\[value parent_env].translate.y(ref)\}]"}}
    rotate {{"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].rotate-\[value parent_env].rotate(ref)\}]"}}
    scale {{"\[if \{\[value parent_gun]==\"null\"\} \{return 1\} \{return 1+(\[value parent_env].scale-\[value parent_env].scale(ref))\}]"}}
    center {{"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].center.x(ref)\}]"} {"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].center.y(ref)\}]"}}
    motionblur {{(mode==2)*0.2}}
    shutter {{FlashMB*(0.175*0.3)}}
    shutteroffset centred
    name ENVMatchMove
    xpos -279
    ypos 321
    addUserKnob {20 User l parent}
    addUserKnob {3 ref}
    ref {{parent.CTimeOffset7.ref}}
   }
   Transform {
    translate {{"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return -((root.width/2)-(\[value parent_gun].center.x(1)+\[value parent_gun].translate.x(1)))\}]"} {"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return -((root.height/2)-(\[value parent_gun].center.y(1)+\[value parent_gun].translate.y(1)))\}]"}}
    shutteroffset centred
    name Transform_GUNMatchMove1
    label "alignment correction"
    xpos -279
    ypos 408
    addUserKnob {20 User l parent}
    addUserKnob {22 python_button l "set parent" t "select parent node, and press this button to set the selected node as parent" T "n = nuke.selectedNode()\['name'].getValue()\nnuke.thisNode()\['string'].setValue(n)" +STARTLINE}
    addUserKnob {1 string l parent}
    string Transform_MatchMove10
    addUserKnob {3 ref +INVISIBLE}
    ref {{parent.cCard3D_8.ref}}
   }
   Remove {
    operation keep
    channels rgb
    name Remove10
    xpos -279
    ypos 489
   }
push 0
   Switch {
    inputs 2
    which {{ActivateSideFlash(CTimeOffset7.ref)}}
    name Switch1
    label "keyframeable disable "
    xpos -279
    ypos 587
   }
push 0
   Switch {
    inputs 2
    which {{parent.Angle_reveal_top.value!=0}}
    name Switch4
    label "disable based on angle"
    xpos -279
    ypos 670
   }
   Dot {
    name Dot1
    xpos -245
    ypos 717
   }
push 0
push $N3165f880
push 0
   Input {
    inputs 0
    name Front
    xpos -430
    ypos -1102
    number 1
   }
   TimeOffset {
    time_offset {{"shotnmbr==0 ? 0 : shot_\[value shotnmbr]-1"}}
    time ""
    name CTimeOffset8
    xpos -430
    ypos -840
    addUserKnob {20 User}
    addUserKnob {3 shotnmbr l "shot "}
    shotnmbr {{parent.CTimeOffset7.shotnmbr}}
   }
   Group {
    name DecimalTimeOffset
    tile_color 0xafa35dff
    label "random asset\n(based on brighness)"
    note_font "Bitstream Vera Sans Bold"
    xpos -430
    ypos -693
    addUserKnob {20 User}
    addUserKnob {7 decimal l "time offset (decimal)"}
    decimal {{"floor\n(\n  (\n  (  ((((random((shotcount*823)+((seed+seed_offset_\[value shotcount])*212))-0.5)*  ((1-( abs(brighness_flare-0.5) )*2)+1)  )+0.5)*0.5)  * (1-brighness_flare)  )\n\n  +\n\n  (  (((((random((shotcount*823)+((seed+seed_offset_\[value shotcount])*212))-0.5)*  ((1-( abs(brighness_flare-0.5) )*2)+1)  )+0.5)*0.5)+0.5)  * (brighness_flare)  )\n  )\n  *1000\n)\n\n/1000"}}
    addUserKnob {26 ""}
    addUserKnob {26 _1 l "" +STARTLINE T "Chris Fryer | 2020\nupdated by Yorben Otto | 2024"}
   }
    Input {
     inputs 0
     name Input1
     xpos 426
     ypos -793
    }
    TimeOffset {
     time_offset {{(-floor(parent.decimal))*(DecimalTimeOffset.decimal<0)}}
     time ""
     name TimeOffset1
     xpos 426
     ypos -674
    }
    Dot {
     name Dot6
     xpos 460
     ypos -635
    }
set N321cb490 [stack 0]
    Dot {
     name Dot5
     xpos 350
     ypos -635
    }
    Dot {
     name Dot7
     xpos 350
     ypos -365
    }
push $N321cb490
    Dot {
     name Dot1
     xpos 572
     ypos -635
    }
    TimeBlur {
     divisions 2
     shutter {{(parent.decimal-(floor(parent.decimal)))*2}}
     shutteroffset start
     shuttercustomoffset 0
     name TimeBlur1
     xpos 538
     ypos -558
    }
    Dot {
     name Dot2
     xpos 572
     ypos -490
    }
push $N321cb490
    TimeBlur {
     divisions 2
     shutter {{parent.decimal*2}}
     shutteroffset start
     shuttercustomoffset 0
     name TimeBlur8
     xpos 426
     ypos -556
    }
    Switch {
     inputs 2
     which {{parent.decimal<0}}
     name Switch1
     xpos 426
     ypos -494
    }
    Multiply {
     value {{parent.TimeBlur8.divisions}}
     name Multiply6
     xpos 426
     ypos -436
    }
    Merge2 {
     inputs 2
     operation from
     name Merge6
     xpos 426
     ypos -369
    }
set N3220d3d0 [stack 0]
    Output {
     name Output1
     xpos 426
     ypos -221
    }
push $N3220d3d0
push $N3220d3d0
    Viewer {
     inputs 2
     frame_range 1-100
     viewerProcess "sRGB (default)"
     name Viewer1
     xpos 675
     ypos -246
    }
   end_group
   NoTimeBlur {
    name NoTimeBlur7
    xpos -430
    ypos -617
   }
   Multiply {
    value {{math_matrix.result_x_flash(parent.CTimeOffset7.ref)}}
    name Angle_reveal_front
    label FRONT
    xpos -430
    ypos -375
   }
   Transform {
    scale {{0.05+(0.05*(((parent.DecimalTimeOffset1.decimal-0.5)*2)*ScaleVariationFlash))}}
    center {{root.width/2 x1015 2304} {root.height/2}}
    shutteroffset centred
    name random_size_front
    xpos -430
    ypos -134
   }
   Card3D {
    inputs 3
    rot_order ZYX
    translate {0 0 0}
    rotate {0 90 0}
    shutteroffset centred
    name cCard3D6
    tile_color 0x7b1d1dff
    xpos -430
    ypos 150
    addUserKnob {20 User l parent}
    addUserKnob {22 python_button l "set parent" t "select parent node, and press this button to set the selected node as parent" +INVISIBLE T "n = nuke.selectedNode()\['name'].getValue()\nnuke.thisNode()\['string'].setValue(n)" +STARTLINE}
    addUserKnob {1 string l parent +INVISIBLE}
    string null
    addUserKnob {3 ref l "ref frame"}
    ref 1015
   }
   Transform {
    translate {{"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].translate.x(ref)\}]"} {"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].translate.y(ref)\}]"}}
    rotate {{"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].rotate-\[value parent_gun].rotate(ref)\}]"}}
    scale {{"\[if \{\[value parent_gun]==\"null\"\} \{return 1\} \{return 1+(\[value parent_gun].scale-\[value parent_gun].scale(ref))\}]"}}
    center {{"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].center.x(ref)\}]"} {"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].center.y(ref)\}]"}}
    name GUNMatchMove2
    label "\n"
    xpos -430
    ypos 248
    addUserKnob {20 User l parent}
    addUserKnob {3 ref}
    ref {{parent.CTimeOffset7.ref}}
   }
   Transform {
    translate {{"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].translate.x-\[value parent_env].translate.x(ref)\}]"} {"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].translate.y-\[value parent_env].translate.y(ref)\}]"}}
    rotate {{"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].rotate-\[value parent_env].rotate(ref)\}]"}}
    scale {{"\[if \{\[value parent_gun]==\"null\"\} \{return 1\} \{return 1+(\[value parent_env].scale-\[value parent_env].scale(ref))\}]"}}
    center {{"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].center.x(ref)\}]"} {"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].center.y(ref)\}]"}}
    motionblur {{(mode==2)*0.2}}
    shutter {{FlashMB*(0.175*0.3)}}
    shutteroffset centred
    name ENVMatchMove2
    xpos -430
    ypos 320
    addUserKnob {20 User l parent}
    addUserKnob {3 ref}
    ref {{parent.CTimeOffset7.ref}}
   }
   Transform {
    translate {{"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return -((root.width/2)-(\[value parent_gun].center.x(1)+\[value parent_gun].translate.x(1)))\}]"} {"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return -((root.height/2)-(\[value parent_gun].center.y(1)+\[value parent_gun].translate.y(1)))\}]"}}
    shutteroffset centred
    name Transform_GUNMatchMove2
    label "alignment correction"
    xpos -430
    ypos 407
    addUserKnob {20 User l parent}
    addUserKnob {22 python_button l "set parent" t "select parent node, and press this button to set the selected node as parent" T "n = nuke.selectedNode()\['name'].getValue()\nnuke.thisNode()\['string'].setValue(n)" +STARTLINE}
    addUserKnob {1 string l parent}
    string Transform_MatchMove10
    addUserKnob {3 ref +INVISIBLE}
    ref {{parent.cCard3D_8.ref}}
   }
   Remove {
    operation keep
    channels rgb
    name Remove11
    xpos -430
    ypos 487
   }
push 0
   Switch {
    inputs 2
    which {{ActivateFrontFlash(CTimeOffset7.ref)}}
    name Switch7
    label "keyframeable disable "
    xpos -430
    ypos 586
   }
push 0
   Switch {
    inputs 2
    which {{parent.Angle_reveal_front.value!=0}}
    name Switch5
    label "disable based on angle"
    xpos -430
    ypos 670
   }
   Dot {
    name Dot2
    xpos -396
    ypos 749
   }
push $N3210ba10
   Multiply {
    value {{math_matrix.result_z_flash(parent.CTimeOffset7.ref)}}
    name Angle_reveal_side
    label SIDE
    xpos -135
    ypos -374
   }
   Transform {
    scale {{0.05+(0.05*(((parent.DecimalTimeOffset1.decimal-0.5)*2)*ScaleVariationFlash))}}
    center {{root.width/2 x1015 2304} {root.height/2}}
    shutteroffset centred
    name random_size_side
    xpos -135
    ypos -137
   }
   Card3D {
    translate {{"\[if \{\[exists  parent.parent.parent.input0]\} \{return \[value \[topnode parent.parent.parent.input0].name].translate.x(ref)\} \{return 0\}]"} {"\[if \{\[exists  parent.parent.parent.input0]\} \{return \[value \[topnode parent.parent.parent.input0].name].translate.y(ref)\} \{return 0\}]"} {"\[if \{\[exists  parent.parent.parent.input0]\} \{return \[value \[topnode parent.parent.parent.input0].name].translate.z(ref)\} \{return -1\}]"}}
    rotate {{"\[if \{\[exists  parent.parent.parent.input0]\} \{return \[value \[topnode parent.parent.parent.input0].name].rotate.x(ref)\} \{return 0\}]"} {"\[if \{\[exists  parent.parent.parent.input0]\} \{return \[value \[topnode parent.parent.parent.input0].name].rotate.y(ref)\} \{return 0\}]"} {"\[if \{\[exists  parent.parent.parent.input0]\} \{return \[value \[topnode parent.parent.parent.input0].name].rotate.z(ref)\} \{return 0\}]"}}
    scaling {{"\[if \{\[exists  parent.parent.parent.input0]\} \{return \[value \[topnode parent.parent.parent.input0].name].scaling.x(ref)\} \{return 1\}]"} {"\[if \{\[exists  parent.parent.parent.input0]\} \{return \[value \[topnode parent.parent.parent.input0].name].scaling.y(ref)\} \{return 1\}]"} {"\[if \{\[exists  parent.parent.parent.input0]\} \{return \[value \[topnode parent.parent.parent.input0].name].scaling.z(ref)\} \{return 1\}]"}}
    uniform_scale {{"\[if \{\[exists  parent.parent.parent.input0]\} \{return (\[value \[topnode parent.parent.parent.input0].name].uniform_scale(ref)*25)\} \{return 25\}]"}}
    shutteroffset centred
    name cCard3D_1
    tile_color 0x7b1d1dff
    label "ref frame: \[value ref]"
    xpos -135
    ypos 147
    addUserKnob {20 User l parent}
    addUserKnob {22 python_button l "set parent" t "select parent node, and press this button to set the selected node as parent" +INVISIBLE T "n = nuke.selectedNode()\['name'].getValue()\nnuke.thisNode()\['string'].setValue(n)" +STARTLINE}
    addUserKnob {1 string l parent +INVISIBLE}
    string null
    addUserKnob {3 id l "id number"}
    id {{parent.CTimeOffset7.shotnmbr}}
    addUserKnob {3 ref l "ref frame"}
    ref {{parent.CTimeOffset7.ref}}
   }
   Transform {
    translate {{"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].translate.x(ref)\}]"} {"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].translate.y(ref)\}]"}}
    rotate {{"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].rotate-\[value parent_gun].rotate(ref)\}]"}}
    scale {{"\[if \{\[value parent_gun]==\"null\"\} \{return 1\} \{return 1+(\[value parent_gun].scale-\[value parent_gun].scale(ref))\}]"}}
    center {{"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].center.x(ref)\}]"} {"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].center.y(ref)\}]"}}
    name GUNMatchMove1
    label "\n"
    xpos -135
    ypos 241
    addUserKnob {20 User l parent}
    addUserKnob {3 ref}
    ref {{parent.CTimeOffset7.ref}}
   }
   Transform {
    translate {{"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].translate.x-\[value parent_env].translate.x(ref)\}]"} {"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].translate.y-\[value parent_env].translate.y(ref)\}]"}}
    rotate {{"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].rotate-\[value parent_env].rotate(ref)\}]"}}
    scale {{"\[if \{\[value parent_gun]==\"null\"\} \{return 1\} \{return 1+(\[value parent_env].scale-\[value parent_env].scale(ref))\}]"}}
    center {{"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].center.x(ref)\}]"} {"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].center.y(ref)\}]"}}
    motionblur {{(mode==2)*0.2}}
    shutter {{FlashMB*(0.175*0.3)}}
    shutteroffset centred
    name ENVMatchMove1
    xpos -135
    ypos 317
    addUserKnob {20 User l parent}
    addUserKnob {3 ref}
    ref {{parent.CTimeOffset7.ref}}
   }
   Transform {
    translate {{"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return -((root.width/2)-(\[value parent_gun].center.x(1)+\[value parent_gun].translate.x(1)))\}]"} {"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return -((root.height/2)-(\[value parent_gun].center.y(1)+\[value parent_gun].translate.y(1)))\}]"}}
    shutteroffset centred
    name Transform_GUNMatchMove3
    label "alignment correction"
    xpos -135
    ypos 405
    addUserKnob {20 User l parent}
    addUserKnob {22 python_button l "set parent" t "select parent node, and press this button to set the selected node as parent" T "n = nuke.selectedNode()\['name'].getValue()\nnuke.thisNode()\['string'].setValue(n)" +STARTLINE}
    addUserKnob {1 string l parent}
    string Transform_MatchMove10
    addUserKnob {3 ref +INVISIBLE}
    ref {{parent.cCard3D_8.ref}}
   }
   Remove {
    operation keep
    channels rgb
    name Remove12
    xpos -135
    ypos 489
   }
push 0
   Switch {
    inputs 2
    which {{ActivateSideFlash(CTimeOffset7.ref)}}
    name Switch3
    label "keyframeable disable "
    xpos -135
    ypos 587
   }
push 0
   Switch {
    inputs 2
    which {{parent.Angle_reveal_side.value!=0}}
    name Switch6
    label "disable based on angle"
    xpos -135
    ypos 671
   }
   Merge2 {
    inputs 3+1
    operation max
    name Merge1
    xpos -135
    ypos 745
   }
   Merge2 {
    inputs 2
    operation plus
    bbox intersection
    name Merge6
    xpos -135
    ypos 1196
   }
push 0
   Switch {
    inputs 2
    which {{"shot_\[value count]==0?0:(EnableExtraFrames==1?floor(((frame>=shot_\[value count])+(frame<=(shot_\[value count]+(4*((mode==1)+(mode==2))))))/2):frame==shot_\[value count])"}}
    name cSwitch_3
    selected true
    xpos -135
    ypos 1354
    addUserKnob {20 User}
    addUserKnob {3 count l "shot number"}
    count {{parent.CTimeOffset7.shotnmbr}}
   }
   Output {
    name Output1
    xpos -135
    ypos 1861
   }
  end_group
push $N557fc1b0
push $N573f42b0
  Group {
   inputs 2
   name gunshot3
   label "shot: \[value shotcount]\non frame: \[value shot_\[value shotcount]]\n"
   xpos 8281
   ypos -814
   addUserKnob {20 User}
   addUserKnob {3 shotcount l shot}
   shotcount 3
   addUserKnob {3 shotstart l frame +INVISIBLE}
   shotstart {{"shotcount==0 ? 0 : shot\[value shotcount]-1"}}
  }
   BackdropNode {
    inputs 0
    name BackdropNode3
    knobChanged "try:\n    listenedKnobs = \['text', 'position', 'name']\n    node = nuke.thisNode()\n    name = node.knob('name').value()\n    text = node.knob('text').value()\n    position = node.knob('position').value()\n    position = \"<\" + position + \">\"\n    label = node.knob('label').value()\n    \n    if nuke.thisKnob().name() in listenedKnobs:\n        if text == \"\":\n            if node.knob('position').value() == \"left\":\n                node.knob('label').setValue()\n            else:\n                node.knob('label').setValue(position + name)\n        else:\n            if node.knob('position').value() == \"left\":\n                node.knob('label').setValue(text)\n            else:\n                node.knob('label').setValue(position + text)\n                \n    elif nuke.thisKnob().name() == 'font_size':\n        fontSize = node.knob('font_size').value()\n        node.knob('note_font_size').setValue(fontSize)\nexcept:\n    pass"
    tile_color 0x232323ff
    label "<Left><h2> Gunshot"
    note_font_size 31.5
    xpos -698
    ypos -924
    bdwidth 1057
    bdheight 2343
    addUserKnob {20 F_VFX l BackdropNode}
    addUserKnob {43 text l Text}
    text "<h2> Gunshot"
    addUserKnob {7 font_size l "Font Size" R 10 100}
    font_size 31.5
    addUserKnob {4 position l "" -STARTLINE M {Left Center}}
    addUserKnob {26 S01 l " " T " "}
    addUserKnob {22 grow l " <img src=\"F_scalep.png\">" -STARTLINE T "n=nuke.thisNode()\n\ndef grow(node=None,step=50):\n    try:\n        if not node:\n            n=nuke.selectedNode()\n        else:\n            n=node\n            n\['xpos'].setValue(n\['xpos'].getValue()-step)\n            n\['ypos'].setValue(n\['ypos'].getValue()-step)\n            n\['bdwidth'].setValue(n\['bdwidth'].getValue()+step*2)\n            n\['bdheight'].setValue(n\['bdheight'].getValue()+step*2)\n    except:\n        pass\ngrow(n,50)"}
    addUserKnob {22 shrink l " <img src=\"F_scalem.png\">" -STARTLINE T "n=nuke.thisNode()\n\ndef shrink(node=None,step=50):\n    try:\n        if not node:\n            n=nuke.selectedNode()\n        else:\n            n=node\n            n\['xpos'].setValue(n\['xpos'].getValue()+step)\n            n\['ypos'].setValue(n\['ypos'].getValue()+step)\n            n\['bdwidth'].setValue(n\['bdwidth'].getValue()-step*2)\n            n\['bdheight'].setValue(n\['bdheight'].getValue()-step*2)\n    except:\n        pass\nshrink(n,50)"}
    addUserKnob {22 colorandom l " <img src=\"ColorBars.png\">" -STARTLINE T "import colorsys, random\nn=nuke.thisNode()\nR,G,B= colorsys.hsv_to_rgb(random.random(),.1+random.random()*.15,.15+random.random()*.15)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ) )"}
    addUserKnob {22 darkgrey l "<font color=\"#232323\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.0, 0.0, 0.14]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 lightgrey l "<font color=\"#383838\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.0, 0.0, 0.22]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 red l "<font color=\"#8c3838\" size=6>■</font>" T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.0, 0.6, 0.55]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n" +STARTLINE}
    addUserKnob {22 orange l "<font color=\"#b28e59\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.1, 0.5, 0.7]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 yellow l "<font color=\"#ccc766\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.16, 0.5, 0.8]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 green l "<font color=\"#5d995b\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.33, 0.4, 0.6]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 cyan l "<font color=\"#72998f\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.46, 0.25, 0.6]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 blue l "<font color=\"#59687f\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.6, 0.3, 0.5]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 darkblue l "<font color=\"#63628c\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.67, 0.3, 0.55]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 magenta l "<font color=\"#927a99\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.8, 0.2, 0.6]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 pink l "<font color=\"#997a89\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.92, 0.2, 0.6]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {26 S02 l " " T " "}
    addUserKnob {26 Ftools l "" +STARTLINE T "<font color=\"#1C1C1C\"> v1.2 - Franklin VFX - 2018"}
   }
   BackdropNode {
    inputs 0
    name BackdropNode1
    knobChanged "try:\n    listenedKnobs = \['text', 'position', 'name']\n    node = nuke.thisNode()\n    name = node.knob('name').value()\n    text = node.knob('text').value()\n    position = node.knob('position').value()\n    position = \"<\" + position + \">\"\n    label = node.knob('label').value()\n    \n    if nuke.thisKnob().name() in listenedKnobs:\n        if text == \"\":\n            if node.knob('position').value() == \"left\":\n                node.knob('label').setValue()\n            else:\n                node.knob('label').setValue(position + name)\n        else:\n            if node.knob('position').value() == \"left\":\n                node.knob('label').setValue(text)\n            else:\n                node.knob('label').setValue(position + text)\n                \n    elif nuke.thisKnob().name() == 'font_size':\n        fontSize = node.knob('font_size').value()\n        node.knob('note_font_size').setValue(fontSize)\nexcept:\n    pass"
    tile_color 0x927a99ff
    note_font_size 50
    xpos -460
    ypos -257
    bdwidth 435
    bdheight 786
    z_order 1
    addUserKnob {20 F_VFX l BackdropNode}
    addUserKnob {43 text l Text}
    addUserKnob {7 font_size l "Font Size" R 10 100}
    font_size 50
    addUserKnob {4 position l "" -STARTLINE M {Left Center}}
    addUserKnob {26 S01 l " " T " "}
    addUserKnob {22 grow l " <img src=\"F_scalep.png\">" -STARTLINE T "n=nuke.thisNode()\n\ndef grow(node=None,step=50):\n    try:\n        if not node:\n            n=nuke.selectedNode()\n        else:\n            n=node\n            n\['xpos'].setValue(n\['xpos'].getValue()-step)\n            n\['ypos'].setValue(n\['ypos'].getValue()-step)\n            n\['bdwidth'].setValue(n\['bdwidth'].getValue()+step*2)\n            n\['bdheight'].setValue(n\['bdheight'].getValue()+step*2)\n    except:\n        pass\ngrow(n,50)"}
    addUserKnob {22 shrink l " <img src=\"F_scalem.png\">" -STARTLINE T "n=nuke.thisNode()\n\ndef shrink(node=None,step=50):\n    try:\n        if not node:\n            n=nuke.selectedNode()\n        else:\n            n=node\n            n\['xpos'].setValue(n\['xpos'].getValue()+step)\n            n\['ypos'].setValue(n\['ypos'].getValue()+step)\n            n\['bdwidth'].setValue(n\['bdwidth'].getValue()-step*2)\n            n\['bdheight'].setValue(n\['bdheight'].getValue()-step*2)\n    except:\n        pass\nshrink(n,50)"}
    addUserKnob {22 colorandom l " <img src=\"ColorBars.png\">" -STARTLINE T "import colorsys, random\nn=nuke.thisNode()\nR,G,B= colorsys.hsv_to_rgb(random.random(),.1+random.random()*.15,.15+random.random()*.15)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ) )"}
    addUserKnob {22 darkgrey l "<font color=\"#232323\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.0, 0.0, 0.14]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 lightgrey l "<font color=\"#383838\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.0, 0.0, 0.22]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 red l "<font color=\"#8c3838\" size=6>■</font>" T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.0, 0.6, 0.55]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n" +STARTLINE}
    addUserKnob {22 orange l "<font color=\"#b28e59\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.1, 0.5, 0.7]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 yellow l "<font color=\"#ccc766\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.16, 0.5, 0.8]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 green l "<font color=\"#5d995b\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.33, 0.4, 0.6]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 cyan l "<font color=\"#72998f\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.46, 0.25, 0.6]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 blue l "<font color=\"#59687f\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.6, 0.3, 0.5]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 darkblue l "<font color=\"#63628c\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.67, 0.3, 0.55]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 magenta l "<font color=\"#927a99\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.8, 0.2, 0.6]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 pink l "<font color=\"#997a89\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.92, 0.2, 0.6]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {26 S02 l " " T " "}
    addUserKnob {26 Ftools l "" +STARTLINE T "<font color=\"#1C1C1C\"> v1.2 - Franklin VFX - 2018"}
   }
   Constant {
    inputs 0
    channels rgb
    name Constant4
    xpos -648
    ypos 987
   }
   AdjBBox {
    numpixels {{size_bbox}}
    name AdjBBox4
    xpos -648
    ypos 1120
   }
   Dot {
    name Dot19
    xpos -614
    ypos 1200
   }
   Axis3 {
    inputs 0
    useMatrix true
    matrix {
        {{parent.cCard3D_1.matrix} {parent.cCard3D_1.matrix} {parent.cCard3D_1.matrix} {parent.cCard3D_1.matrix}}
        {{parent.cCard3D_1.matrix} {parent.cCard3D_1.matrix} {parent.cCard3D_1.matrix} {parent.cCard3D_1.matrix}}
        {{parent.cCard3D_1.matrix} {parent.cCard3D_1.matrix} {parent.cCard3D_1.matrix} {parent.cCard3D_1.matrix}}
        {{parent.cCard3D_1.matrix} {parent.cCard3D_1.matrix} {parent.cCard3D_1.matrix} {parent.cCard3D_1.matrix}}
      }
    name Axis3
    xpos -207
    ypos 48
   }
set Nca699340 [stack 0]
push 0
   Input {
    inputs 0
    name Side
    xpos -135
    ypos -1101
   }
   TimeOffset {
    time_offset {{"shotnmbr==0 ? 0 : shot_\[value shotnmbr]-1"}}
    time ""
    name CTimeOffset7
    label "shot: \[value shotnmbr]\non frame \[value time_offset]"
    xpos -135
    ypos -853
    addUserKnob {20 User}
    addUserKnob {3 shotnmbr l "shot "}
    shotnmbr {{shotcount}}
    addUserKnob {3 ref}
    ref {{time_offset+1}}
   }
   Group {
    name DecimalTimeOffset1
    tile_color 0xafa35dff
    label "random asset\n(based on brighness)"
    note_font "Bitstream Vera Sans Bold"
    xpos -135
    ypos -690
    addUserKnob {20 User}
    addUserKnob {7 decimal l "time offset (decimal)"}
    decimal {{"floor\n(\n  (\n  (  ((((random((shotcount*823)+((seed+seed_offset_\[value shotcount])*212))-0.5)*  ((1-( abs(brighness_flare-0.5) )*2)+1)  )+0.5)*0.5)  * (1-brighness_flare)  )\n\n  +\n\n  (  (((((random((shotcount*823)+((seed+seed_offset_\[value shotcount])*212))-0.5)*  ((1-( abs(brighness_flare-0.5) )*2)+1)  )+0.5)*0.5)+0.5)  * (brighness_flare)  )\n  )\n  *1000\n)\n\n/1000"}}
    addUserKnob {26 ""}
    addUserKnob {26 _1 l "" +STARTLINE T "Chris Fryer | 2020\nupdated by Yorben Otto | 2024"}
   }
    Input {
     inputs 0
     name Input1
     xpos 426
     ypos -793
    }
    TimeOffset {
     time_offset {{(-floor(parent.decimal))*(DecimalTimeOffset1.decimal<0)}}
     time ""
     name TimeOffset1
     xpos 426
     ypos -674
    }
    Dot {
     name Dot6
     xpos 460
     ypos -635
    }
set Nca6e8c40 [stack 0]
    Dot {
     name Dot5
     xpos 350
     ypos -635
    }
    Dot {
     name Dot7
     xpos 350
     ypos -365
    }
push $Nca6e8c40
    Dot {
     name Dot1
     xpos 572
     ypos -635
    }
    TimeBlur {
     divisions 2
     shutter {{(parent.decimal-(floor(parent.decimal)))*2}}
     shutteroffset start
     shuttercustomoffset 0
     name TimeBlur1
     xpos 538
     ypos -558
    }
    Dot {
     name Dot2
     xpos 572
     ypos -490
    }
push $Nca6e8c40
    TimeBlur {
     divisions 2
     shutter {{parent.decimal*2}}
     shutteroffset start
     shuttercustomoffset 0
     name TimeBlur8
     xpos 426
     ypos -556
    }
    Switch {
     inputs 2
     which {{parent.decimal<0}}
     name Switch1
     xpos 426
     ypos -494
    }
    Multiply {
     value {{parent.TimeBlur8.divisions}}
     name Multiply6
     xpos 426
     ypos -436
    }
    Merge2 {
     inputs 2
     operation from
     name Merge6
     xpos 426
     ypos -369
    }
set Nca72ab80 [stack 0]
    Output {
     name Output1
     xpos 426
     ypos -221
    }
push $Nca72ab80
push $Nca72ab80
    Viewer {
     inputs 2
     frame_range 1-100
     viewerProcess "sRGB (default)"
     name Viewer1
     xpos 675
     ypos -246
    }
   end_group
   NoTimeBlur {
    name NoTimeBlur6
    xpos -135
    ypos -608
   }
   Dot {
    name Dot21
    xpos -101
    ypos -449
   }
set Nca7c94f0 [stack 0]
   Dot {
    name Dot22
    xpos -245
    ypos -449
   }
   Multiply {
    value {{math_matrix.result_y_flash(parent.CTimeOffset7.ref)}}
    name Angle_reveal_top
    label TOP
    xpos -279
    ypos -371
   }
   Transform {
    scale {{0.05+(0.05*(((parent.DecimalTimeOffset1.decimal-0.5)*2)*ScaleVariationFlash))}}
    center {{root.width/2 x1015 2304} {root.height/2}}
    shutteroffset centred
    name random_size_top
    xpos -279
    ypos -136
   }
   Card3D {
    inputs 3
    rot_order ZYX
    translate {0 0 0}
    rotate {90 0 0}
    shutteroffset centred
    name cCard3D5
    tile_color 0x7b1d1dff
    xpos -279
    ypos 153
    addUserKnob {20 User l parent}
    addUserKnob {22 python_button l "set parent" t "select parent node, and press this button to set the selected node as parent" +INVISIBLE T "n = nuke.selectedNode()\['name'].getValue()\nnuke.thisNode()\['string'].setValue(n)" +STARTLINE}
    addUserKnob {1 string l parent +INVISIBLE}
    string null
    addUserKnob {3 ref l "ref frame"}
    ref 1015
   }
   Transform {
    translate {{"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].translate.x(ref)\}]"} {"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].translate.y(ref)\}]"}}
    rotate {{"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].rotate-\[value parent_gun].rotate(ref)\}]"}}
    scale {{"\[if \{\[value parent_gun]==\"null\"\} \{return 1\} \{return 1+(\[value parent_gun].scale-\[value parent_gun].scale(ref))\}]"}}
    center {{"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].center.x(ref)\}]"} {"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].center.y(ref)\}]"}}
    name GUNMatchMove
    label "\n"
    xpos -279
    ypos 247
    addUserKnob {20 User l parent}
    addUserKnob {3 ref}
    ref {{parent.CTimeOffset7.ref}}
   }
   Transform {
    translate {{"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].translate.x-\[value parent_env].translate.x(ref)\}]"} {"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].translate.y-\[value parent_env].translate.y(ref)\}]"}}
    rotate {{"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].rotate-\[value parent_env].rotate(ref)\}]"}}
    scale {{"\[if \{\[value parent_gun]==\"null\"\} \{return 1\} \{return 1+(\[value parent_env].scale-\[value parent_env].scale(ref))\}]"}}
    center {{"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].center.x(ref)\}]"} {"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].center.y(ref)\}]"}}
    motionblur {{(mode==2)*0.2}}
    shutter {{FlashMB*(0.175*0.3)}}
    shutteroffset centred
    name ENVMatchMove
    xpos -279
    ypos 321
    addUserKnob {20 User l parent}
    addUserKnob {3 ref}
    ref {{parent.CTimeOffset7.ref}}
   }
   Transform {
    translate {{"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return -((root.width/2)-(\[value parent_gun].center.x(1)+\[value parent_gun].translate.x(1)))\}]"} {"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return -((root.height/2)-(\[value parent_gun].center.y(1)+\[value parent_gun].translate.y(1)))\}]"}}
    shutteroffset centred
    name Transform_GUNMatchMove1
    label "alignment correction"
    xpos -279
    ypos 408
    addUserKnob {20 User l parent}
    addUserKnob {22 python_button l "set parent" t "select parent node, and press this button to set the selected node as parent" T "n = nuke.selectedNode()\['name'].getValue()\nnuke.thisNode()\['string'].setValue(n)" +STARTLINE}
    addUserKnob {1 string l parent}
    string Transform_MatchMove10
    addUserKnob {3 ref +INVISIBLE}
    ref {{parent.cCard3D_8.ref}}
   }
   Remove {
    operation keep
    channels rgb
    name Remove10
    xpos -279
    ypos 489
   }
push 0
   Switch {
    inputs 2
    which {{ActivateSideFlash(CTimeOffset7.ref)}}
    name Switch1
    label "keyframeable disable "
    xpos -279
    ypos 587
   }
push 0
   Switch {
    inputs 2
    which {{parent.Angle_reveal_top.value!=0}}
    name Switch4
    label "disable based on angle"
    xpos -279
    ypos 670
   }
   Dot {
    name Dot1
    xpos -245
    ypos 717
   }
push 0
push $Nca699340
push 0
   Input {
    inputs 0
    name Front
    xpos -430
    ypos -1102
    number 1
   }
   TimeOffset {
    time_offset {{"shotnmbr==0 ? 0 : shot_\[value shotnmbr]-1"}}
    time ""
    name CTimeOffset8
    xpos -430
    ypos -840
    addUserKnob {20 User}
    addUserKnob {3 shotnmbr l "shot "}
    shotnmbr {{parent.CTimeOffset7.shotnmbr}}
   }
   Group {
    name DecimalTimeOffset
    tile_color 0xafa35dff
    label "random asset\n(based on brighness)"
    note_font "Bitstream Vera Sans Bold"
    xpos -430
    ypos -693
    addUserKnob {20 User}
    addUserKnob {7 decimal l "time offset (decimal)"}
    decimal {{"floor\n(\n  (\n  (  ((((random((shotcount*823)+((seed+seed_offset_\[value shotcount])*212))-0.5)*  ((1-( abs(brighness_flare-0.5) )*2)+1)  )+0.5)*0.5)  * (1-brighness_flare)  )\n\n  +\n\n  (  (((((random((shotcount*823)+((seed+seed_offset_\[value shotcount])*212))-0.5)*  ((1-( abs(brighness_flare-0.5) )*2)+1)  )+0.5)*0.5)+0.5)  * (brighness_flare)  )\n  )\n  *1000\n)\n\n/1000"}}
    addUserKnob {26 ""}
    addUserKnob {26 _1 l "" +STARTLINE T "Chris Fryer | 2020\nupdated by Yorben Otto | 2024"}
   }
    Input {
     inputs 0
     name Input1
     xpos 426
     ypos -793
    }
    TimeOffset {
     time_offset {{(-floor(parent.decimal))*(DecimalTimeOffset.decimal<0)}}
     time ""
     name TimeOffset1
     xpos 426
     ypos -674
    }
    Dot {
     name Dot6
     xpos 460
     ypos -635
    }
set Nca888f60 [stack 0]
    Dot {
     name Dot5
     xpos 350
     ypos -635
    }
    Dot {
     name Dot7
     xpos 350
     ypos -365
    }
push $Nca888f60
    Dot {
     name Dot1
     xpos 572
     ypos -635
    }
    TimeBlur {
     divisions 2
     shutter {{(parent.decimal-(floor(parent.decimal)))*2}}
     shutteroffset start
     shuttercustomoffset 0
     name TimeBlur1
     xpos 538
     ypos -558
    }
    Dot {
     name Dot2
     xpos 572
     ypos -490
    }
push $Nca888f60
    TimeBlur {
     divisions 2
     shutter {{parent.decimal*2}}
     shutteroffset start
     shuttercustomoffset 0
     name TimeBlur8
     xpos 426
     ypos -556
    }
    Switch {
     inputs 2
     which {{parent.decimal<0}}
     name Switch1
     xpos 426
     ypos -494
    }
    Multiply {
     value {{parent.TimeBlur8.divisions}}
     name Multiply6
     xpos 426
     ypos -436
    }
    Merge2 {
     inputs 2
     operation from
     name Merge6
     xpos 426
     ypos -369
    }
set Nca8caea0 [stack 0]
    Output {
     name Output1
     xpos 426
     ypos -221
    }
push $Nca8caea0
push $Nca8caea0
    Viewer {
     inputs 2
     frame_range 1-100
     viewerProcess "sRGB (default)"
     name Viewer1
     xpos 675
     ypos -246
    }
   end_group
   NoTimeBlur {
    name NoTimeBlur7
    xpos -430
    ypos -617
   }
   Multiply {
    value {{math_matrix.result_x_flash(parent.CTimeOffset7.ref)}}
    name Angle_reveal_front
    label FRONT
    xpos -430
    ypos -375
   }
   Transform {
    scale {{0.05+(0.05*(((parent.DecimalTimeOffset1.decimal-0.5)*2)*ScaleVariationFlash))}}
    center {{root.width/2 x1015 2304} {root.height/2}}
    shutteroffset centred
    name random_size_front
    xpos -430
    ypos -134
   }
   Card3D {
    inputs 3
    rot_order ZYX
    translate {0 0 0}
    rotate {0 90 0}
    shutteroffset centred
    name cCard3D6
    tile_color 0x7b1d1dff
    xpos -430
    ypos 150
    addUserKnob {20 User l parent}
    addUserKnob {22 python_button l "set parent" t "select parent node, and press this button to set the selected node as parent" +INVISIBLE T "n = nuke.selectedNode()\['name'].getValue()\nnuke.thisNode()\['string'].setValue(n)" +STARTLINE}
    addUserKnob {1 string l parent +INVISIBLE}
    string null
    addUserKnob {3 ref l "ref frame"}
    ref 1015
   }
   Transform {
    translate {{"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].translate.x(ref)\}]"} {"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].translate.y(ref)\}]"}}
    rotate {{"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].rotate-\[value parent_gun].rotate(ref)\}]"}}
    scale {{"\[if \{\[value parent_gun]==\"null\"\} \{return 1\} \{return 1+(\[value parent_gun].scale-\[value parent_gun].scale(ref))\}]"}}
    center {{"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].center.x(ref)\}]"} {"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].center.y(ref)\}]"}}
    name GUNMatchMove2
    label "\n"
    xpos -430
    ypos 248
    addUserKnob {20 User l parent}
    addUserKnob {3 ref}
    ref {{parent.CTimeOffset7.ref}}
   }
   Transform {
    translate {{"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].translate.x-\[value parent_env].translate.x(ref)\}]"} {"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].translate.y-\[value parent_env].translate.y(ref)\}]"}}
    rotate {{"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].rotate-\[value parent_env].rotate(ref)\}]"}}
    scale {{"\[if \{\[value parent_gun]==\"null\"\} \{return 1\} \{return 1+(\[value parent_env].scale-\[value parent_env].scale(ref))\}]"}}
    center {{"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].center.x(ref)\}]"} {"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].center.y(ref)\}]"}}
    motionblur {{(mode==2)*0.2}}
    shutter {{FlashMB*(0.175*0.3)}}
    shutteroffset centred
    name ENVMatchMove2
    xpos -430
    ypos 320
    addUserKnob {20 User l parent}
    addUserKnob {3 ref}
    ref {{parent.CTimeOffset7.ref}}
   }
   Transform {
    translate {{"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return -((root.width/2)-(\[value parent_gun].center.x(1)+\[value parent_gun].translate.x(1)))\}]"} {"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return -((root.height/2)-(\[value parent_gun].center.y(1)+\[value parent_gun].translate.y(1)))\}]"}}
    shutteroffset centred
    name Transform_GUNMatchMove2
    label "alignment correction"
    xpos -430
    ypos 407
    addUserKnob {20 User l parent}
    addUserKnob {22 python_button l "set parent" t "select parent node, and press this button to set the selected node as parent" T "n = nuke.selectedNode()\['name'].getValue()\nnuke.thisNode()\['string'].setValue(n)" +STARTLINE}
    addUserKnob {1 string l parent}
    string Transform_MatchMove10
    addUserKnob {3 ref +INVISIBLE}
    ref {{parent.cCard3D_8.ref}}
   }
   Remove {
    operation keep
    channels rgb
    name Remove11
    xpos -430
    ypos 487
   }
push 0
   Switch {
    inputs 2
    which {{ActivateFrontFlash(CTimeOffset7.ref)}}
    name Switch7
    label "keyframeable disable "
    xpos -430
    ypos 586
   }
push 0
   Switch {
    inputs 2
    which {{parent.Angle_reveal_front.value!=0}}
    name Switch5
    label "disable based on angle"
    xpos -430
    ypos 670
   }
   Dot {
    name Dot2
    xpos -396
    ypos 749
   }
push $Nca7c94f0
   Multiply {
    value {{math_matrix.result_z_flash(parent.CTimeOffset7.ref)}}
    name Angle_reveal_side
    label SIDE
    xpos -135
    ypos -374
   }
   Transform {
    scale {{0.05+(0.05*(((parent.DecimalTimeOffset1.decimal-0.5)*2)*ScaleVariationFlash))}}
    center {{root.width/2 x1015 2304} {root.height/2}}
    shutteroffset centred
    name random_size_side
    xpos -135
    ypos -137
   }
   Card3D {
    translate {{"\[if \{\[exists  parent.parent.parent.input0]\} \{return \[value \[topnode parent.parent.parent.input0].name].translate.x(ref)\} \{return 0\}]"} {"\[if \{\[exists  parent.parent.parent.input0]\} \{return \[value \[topnode parent.parent.parent.input0].name].translate.y(ref)\} \{return 0\}]"} {"\[if \{\[exists  parent.parent.parent.input0]\} \{return \[value \[topnode parent.parent.parent.input0].name].translate.z(ref)\} \{return -1\}]"}}
    rotate {{"\[if \{\[exists  parent.parent.parent.input0]\} \{return \[value \[topnode parent.parent.parent.input0].name].rotate.x(ref)\} \{return 0\}]"} {"\[if \{\[exists  parent.parent.parent.input0]\} \{return \[value \[topnode parent.parent.parent.input0].name].rotate.y(ref)\} \{return 0\}]"} {"\[if \{\[exists  parent.parent.parent.input0]\} \{return \[value \[topnode parent.parent.parent.input0].name].rotate.z(ref)\} \{return 0\}]"}}
    scaling {{"\[if \{\[exists  parent.parent.parent.input0]\} \{return \[value \[topnode parent.parent.parent.input0].name].scaling.x(ref)\} \{return 1\}]"} {"\[if \{\[exists  parent.parent.parent.input0]\} \{return \[value \[topnode parent.parent.parent.input0].name].scaling.y(ref)\} \{return 1\}]"} {"\[if \{\[exists  parent.parent.parent.input0]\} \{return \[value \[topnode parent.parent.parent.input0].name].scaling.z(ref)\} \{return 1\}]"}}
    uniform_scale {{"\[if \{\[exists  parent.parent.parent.input0]\} \{return (\[value \[topnode parent.parent.parent.input0].name].uniform_scale(ref)*25)\} \{return 25\}]"}}
    shutteroffset centred
    name cCard3D_1
    tile_color 0x7b1d1dff
    label "ref frame: \[value ref]"
    xpos -135
    ypos 147
    addUserKnob {20 User l parent}
    addUserKnob {22 python_button l "set parent" t "select parent node, and press this button to set the selected node as parent" +INVISIBLE T "n = nuke.selectedNode()\['name'].getValue()\nnuke.thisNode()\['string'].setValue(n)" +STARTLINE}
    addUserKnob {1 string l parent +INVISIBLE}
    string null
    addUserKnob {3 id l "id number"}
    id {{parent.CTimeOffset7.shotnmbr}}
    addUserKnob {3 ref l "ref frame"}
    ref {{parent.CTimeOffset7.ref}}
   }
   Transform {
    translate {{"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].translate.x(ref)\}]"} {"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].translate.y(ref)\}]"}}
    rotate {{"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].rotate-\[value parent_gun].rotate(ref)\}]"}}
    scale {{"\[if \{\[value parent_gun]==\"null\"\} \{return 1\} \{return 1+(\[value parent_gun].scale-\[value parent_gun].scale(ref))\}]"}}
    center {{"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].center.x(ref)\}]"} {"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].center.y(ref)\}]"}}
    name GUNMatchMove1
    label "\n"
    xpos -135
    ypos 241
    addUserKnob {20 User l parent}
    addUserKnob {3 ref}
    ref {{parent.CTimeOffset7.ref}}
   }
   Transform {
    translate {{"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].translate.x-\[value parent_env].translate.x(ref)\}]"} {"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].translate.y-\[value parent_env].translate.y(ref)\}]"}}
    rotate {{"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].rotate-\[value parent_env].rotate(ref)\}]"}}
    scale {{"\[if \{\[value parent_gun]==\"null\"\} \{return 1\} \{return 1+(\[value parent_env].scale-\[value parent_env].scale(ref))\}]"}}
    center {{"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].center.x(ref)\}]"} {"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].center.y(ref)\}]"}}
    motionblur {{(mode==2)*0.2}}
    shutter {{FlashMB*(0.175*0.3)}}
    shutteroffset centred
    name ENVMatchMove1
    xpos -135
    ypos 317
    addUserKnob {20 User l parent}
    addUserKnob {3 ref}
    ref {{parent.CTimeOffset7.ref}}
   }
   Transform {
    translate {{"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return -((root.width/2)-(\[value parent_gun].center.x(1)+\[value parent_gun].translate.x(1)))\}]"} {"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return -((root.height/2)-(\[value parent_gun].center.y(1)+\[value parent_gun].translate.y(1)))\}]"}}
    shutteroffset centred
    name Transform_GUNMatchMove3
    label "alignment correction"
    xpos -135
    ypos 405
    addUserKnob {20 User l parent}
    addUserKnob {22 python_button l "set parent" t "select parent node, and press this button to set the selected node as parent" T "n = nuke.selectedNode()\['name'].getValue()\nnuke.thisNode()\['string'].setValue(n)" +STARTLINE}
    addUserKnob {1 string l parent}
    string Transform_MatchMove10
    addUserKnob {3 ref +INVISIBLE}
    ref {{parent.cCard3D_8.ref}}
   }
   Remove {
    operation keep
    channels rgb
    name Remove12
    xpos -135
    ypos 489
   }
push 0
   Switch {
    inputs 2
    which {{ActivateSideFlash(CTimeOffset7.ref)}}
    name Switch3
    label "keyframeable disable "
    xpos -135
    ypos 587
   }
push 0
   Switch {
    inputs 2
    which {{parent.Angle_reveal_side.value!=0}}
    name Switch6
    label "disable based on angle"
    xpos -135
    ypos 671
   }
   Merge2 {
    inputs 3+1
    operation max
    name Merge1
    xpos -135
    ypos 745
   }
   Merge2 {
    inputs 2
    operation plus
    bbox intersection
    name Merge6
    xpos -135
    ypos 1196
   }
push 0
   Switch {
    inputs 2
    which {{"shot_\[value count]==0?0:(EnableExtraFrames==1?floor(((frame>=shot_\[value count])+(frame<=(shot_\[value count]+(4*((mode==1)+(mode==2))))))/2):frame==shot_\[value count])"}}
    name cSwitch_3
    selected true
    xpos -135
    ypos 1354
    addUserKnob {20 User}
    addUserKnob {3 count l "shot number"}
    count {{parent.CTimeOffset7.shotnmbr}}
   }
   Output {
    name Output1
    xpos -135
    ypos 1861
   }
  end_group
push $N53ff1170
push $N56ffc6e0
  Group {
   inputs 2
   name gunshot4
   label "shot: \[value shotcount]\non frame: \[value shot_\[value shotcount]]\n"
   xpos 8475
   ypos -814
   addUserKnob {20 User}
   addUserKnob {3 shotcount l shot}
   shotcount 4
   addUserKnob {3 shotstart l frame +INVISIBLE}
   shotstart {{"shotcount==0 ? 0 : shot\[value shotcount]-1"}}
  }
   BackdropNode {
    inputs 0
    name BackdropNode3
    knobChanged "try:\n    listenedKnobs = \['text', 'position', 'name']\n    node = nuke.thisNode()\n    name = node.knob('name').value()\n    text = node.knob('text').value()\n    position = node.knob('position').value()\n    position = \"<\" + position + \">\"\n    label = node.knob('label').value()\n    \n    if nuke.thisKnob().name() in listenedKnobs:\n        if text == \"\":\n            if node.knob('position').value() == \"left\":\n                node.knob('label').setValue()\n            else:\n                node.knob('label').setValue(position + name)\n        else:\n            if node.knob('position').value() == \"left\":\n                node.knob('label').setValue(text)\n            else:\n                node.knob('label').setValue(position + text)\n                \n    elif nuke.thisKnob().name() == 'font_size':\n        fontSize = node.knob('font_size').value()\n        node.knob('note_font_size').setValue(fontSize)\nexcept:\n    pass"
    tile_color 0x232323ff
    label "<Left><h2> Gunshot"
    note_font_size 31.5
    xpos -698
    ypos -924
    bdwidth 1057
    bdheight 2343
    addUserKnob {20 F_VFX l BackdropNode}
    addUserKnob {43 text l Text}
    text "<h2> Gunshot"
    addUserKnob {7 font_size l "Font Size" R 10 100}
    font_size 31.5
    addUserKnob {4 position l "" -STARTLINE M {Left Center}}
    addUserKnob {26 S01 l " " T " "}
    addUserKnob {22 grow l " <img src=\"F_scalep.png\">" -STARTLINE T "n=nuke.thisNode()\n\ndef grow(node=None,step=50):\n    try:\n        if not node:\n            n=nuke.selectedNode()\n        else:\n            n=node\n            n\['xpos'].setValue(n\['xpos'].getValue()-step)\n            n\['ypos'].setValue(n\['ypos'].getValue()-step)\n            n\['bdwidth'].setValue(n\['bdwidth'].getValue()+step*2)\n            n\['bdheight'].setValue(n\['bdheight'].getValue()+step*2)\n    except:\n        pass\ngrow(n,50)"}
    addUserKnob {22 shrink l " <img src=\"F_scalem.png\">" -STARTLINE T "n=nuke.thisNode()\n\ndef shrink(node=None,step=50):\n    try:\n        if not node:\n            n=nuke.selectedNode()\n        else:\n            n=node\n            n\['xpos'].setValue(n\['xpos'].getValue()+step)\n            n\['ypos'].setValue(n\['ypos'].getValue()+step)\n            n\['bdwidth'].setValue(n\['bdwidth'].getValue()-step*2)\n            n\['bdheight'].setValue(n\['bdheight'].getValue()-step*2)\n    except:\n        pass\nshrink(n,50)"}
    addUserKnob {22 colorandom l " <img src=\"ColorBars.png\">" -STARTLINE T "import colorsys, random\nn=nuke.thisNode()\nR,G,B= colorsys.hsv_to_rgb(random.random(),.1+random.random()*.15,.15+random.random()*.15)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ) )"}
    addUserKnob {22 darkgrey l "<font color=\"#232323\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.0, 0.0, 0.14]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 lightgrey l "<font color=\"#383838\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.0, 0.0, 0.22]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 red l "<font color=\"#8c3838\" size=6>■</font>" T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.0, 0.6, 0.55]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n" +STARTLINE}
    addUserKnob {22 orange l "<font color=\"#b28e59\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.1, 0.5, 0.7]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 yellow l "<font color=\"#ccc766\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.16, 0.5, 0.8]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 green l "<font color=\"#5d995b\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.33, 0.4, 0.6]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 cyan l "<font color=\"#72998f\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.46, 0.25, 0.6]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 blue l "<font color=\"#59687f\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.6, 0.3, 0.5]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 darkblue l "<font color=\"#63628c\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.67, 0.3, 0.55]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 magenta l "<font color=\"#927a99\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.8, 0.2, 0.6]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 pink l "<font color=\"#997a89\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.92, 0.2, 0.6]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {26 S02 l " " T " "}
    addUserKnob {26 Ftools l "" +STARTLINE T "<font color=\"#1C1C1C\"> v1.2 - Franklin VFX - 2018"}
   }
   BackdropNode {
    inputs 0
    name BackdropNode1
    knobChanged "try:\n    listenedKnobs = \['text', 'position', 'name']\n    node = nuke.thisNode()\n    name = node.knob('name').value()\n    text = node.knob('text').value()\n    position = node.knob('position').value()\n    position = \"<\" + position + \">\"\n    label = node.knob('label').value()\n    \n    if nuke.thisKnob().name() in listenedKnobs:\n        if text == \"\":\n            if node.knob('position').value() == \"left\":\n                node.knob('label').setValue()\n            else:\n                node.knob('label').setValue(position + name)\n        else:\n            if node.knob('position').value() == \"left\":\n                node.knob('label').setValue(text)\n            else:\n                node.knob('label').setValue(position + text)\n                \n    elif nuke.thisKnob().name() == 'font_size':\n        fontSize = node.knob('font_size').value()\n        node.knob('note_font_size').setValue(fontSize)\nexcept:\n    pass"
    tile_color 0x927a99ff
    note_font_size 50
    xpos -460
    ypos -257
    bdwidth 435
    bdheight 786
    z_order 1
    addUserKnob {20 F_VFX l BackdropNode}
    addUserKnob {43 text l Text}
    addUserKnob {7 font_size l "Font Size" R 10 100}
    font_size 50
    addUserKnob {4 position l "" -STARTLINE M {Left Center}}
    addUserKnob {26 S01 l " " T " "}
    addUserKnob {22 grow l " <img src=\"F_scalep.png\">" -STARTLINE T "n=nuke.thisNode()\n\ndef grow(node=None,step=50):\n    try:\n        if not node:\n            n=nuke.selectedNode()\n        else:\n            n=node\n            n\['xpos'].setValue(n\['xpos'].getValue()-step)\n            n\['ypos'].setValue(n\['ypos'].getValue()-step)\n            n\['bdwidth'].setValue(n\['bdwidth'].getValue()+step*2)\n            n\['bdheight'].setValue(n\['bdheight'].getValue()+step*2)\n    except:\n        pass\ngrow(n,50)"}
    addUserKnob {22 shrink l " <img src=\"F_scalem.png\">" -STARTLINE T "n=nuke.thisNode()\n\ndef shrink(node=None,step=50):\n    try:\n        if not node:\n            n=nuke.selectedNode()\n        else:\n            n=node\n            n\['xpos'].setValue(n\['xpos'].getValue()+step)\n            n\['ypos'].setValue(n\['ypos'].getValue()+step)\n            n\['bdwidth'].setValue(n\['bdwidth'].getValue()-step*2)\n            n\['bdheight'].setValue(n\['bdheight'].getValue()-step*2)\n    except:\n        pass\nshrink(n,50)"}
    addUserKnob {22 colorandom l " <img src=\"ColorBars.png\">" -STARTLINE T "import colorsys, random\nn=nuke.thisNode()\nR,G,B= colorsys.hsv_to_rgb(random.random(),.1+random.random()*.15,.15+random.random()*.15)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ) )"}
    addUserKnob {22 darkgrey l "<font color=\"#232323\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.0, 0.0, 0.14]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 lightgrey l "<font color=\"#383838\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.0, 0.0, 0.22]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 red l "<font color=\"#8c3838\" size=6>■</font>" T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.0, 0.6, 0.55]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n" +STARTLINE}
    addUserKnob {22 orange l "<font color=\"#b28e59\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.1, 0.5, 0.7]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 yellow l "<font color=\"#ccc766\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.16, 0.5, 0.8]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 green l "<font color=\"#5d995b\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.33, 0.4, 0.6]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 cyan l "<font color=\"#72998f\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.46, 0.25, 0.6]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 blue l "<font color=\"#59687f\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.6, 0.3, 0.5]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 darkblue l "<font color=\"#63628c\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.67, 0.3, 0.55]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 magenta l "<font color=\"#927a99\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.8, 0.2, 0.6]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 pink l "<font color=\"#997a89\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.92, 0.2, 0.6]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {26 S02 l " " T " "}
    addUserKnob {26 Ftools l "" +STARTLINE T "<font color=\"#1C1C1C\"> v1.2 - Franklin VFX - 2018"}
   }
   Constant {
    inputs 0
    channels rgb
    name Constant4
    xpos -648
    ypos 987
   }
   AdjBBox {
    numpixels {{size_bbox}}
    name AdjBBox4
    xpos -648
    ypos 1120
   }
   Dot {
    name Dot19
    xpos -614
    ypos 1200
   }
   Axis3 {
    inputs 0
    useMatrix true
    matrix {
        {{parent.cCard3D_1.matrix} {parent.cCard3D_1.matrix} {parent.cCard3D_1.matrix} {parent.cCard3D_1.matrix}}
        {{parent.cCard3D_1.matrix} {parent.cCard3D_1.matrix} {parent.cCard3D_1.matrix} {parent.cCard3D_1.matrix}}
        {{parent.cCard3D_1.matrix} {parent.cCard3D_1.matrix} {parent.cCard3D_1.matrix} {parent.cCard3D_1.matrix}}
        {{parent.cCard3D_1.matrix} {parent.cCard3D_1.matrix} {parent.cCard3D_1.matrix} {parent.cCard3D_1.matrix}}
      }
    name Axis3
    xpos -207
    ypos 48
   }
set N140fbc50 [stack 0]
push 0
   Input {
    inputs 0
    name Side
    xpos -135
    ypos -1101
   }
   TimeOffset {
    time_offset {{"shotnmbr==0 ? 0 : shot_\[value shotnmbr]-1"}}
    time ""
    name CTimeOffset7
    label "shot: \[value shotnmbr]\non frame \[value time_offset]"
    xpos -135
    ypos -853
    addUserKnob {20 User}
    addUserKnob {3 shotnmbr l "shot "}
    shotnmbr {{shotcount}}
    addUserKnob {3 ref}
    ref {{time_offset+1}}
   }
   Group {
    name DecimalTimeOffset1
    tile_color 0xafa35dff
    label "random asset\n(based on brighness)"
    note_font "Bitstream Vera Sans Bold"
    xpos -135
    ypos -690
    addUserKnob {20 User}
    addUserKnob {7 decimal l "time offset (decimal)"}
    decimal {{"floor\n(\n  (\n  (  ((((random((shotcount*823)+((seed+seed_offset_\[value shotcount])*212))-0.5)*  ((1-( abs(brighness_flare-0.5) )*2)+1)  )+0.5)*0.5)  * (1-brighness_flare)  )\n\n  +\n\n  (  (((((random((shotcount*823)+((seed+seed_offset_\[value shotcount])*212))-0.5)*  ((1-( abs(brighness_flare-0.5) )*2)+1)  )+0.5)*0.5)+0.5)  * (brighness_flare)  )\n  )\n  *1000\n)\n\n/1000"}}
    addUserKnob {26 ""}
    addUserKnob {26 _1 l "" +STARTLINE T "Chris Fryer | 2020\nupdated by Yorben Otto | 2024"}
   }
    Input {
     inputs 0
     name Input1
     xpos 426
     ypos -793
    }
    TimeOffset {
     time_offset {{(-floor(parent.decimal))*(DecimalTimeOffset1.decimal<0)}}
     time ""
     name TimeOffset1
     xpos 426
     ypos -674
    }
    Dot {
     name Dot6
     xpos 460
     ypos -635
    }
set N1413b6e0 [stack 0]
    Dot {
     name Dot5
     xpos 350
     ypos -635
    }
    Dot {
     name Dot7
     xpos 350
     ypos -365
    }
push $N1413b6e0
    Dot {
     name Dot1
     xpos 572
     ypos -635
    }
    TimeBlur {
     divisions 2
     shutter {{(parent.decimal-(floor(parent.decimal)))*2}}
     shutteroffset start
     shuttercustomoffset 0
     name TimeBlur1
     xpos 538
     ypos -558
    }
    Dot {
     name Dot2
     xpos 572
     ypos -490
    }
push $N1413b6e0
    TimeBlur {
     divisions 2
     shutter {{parent.decimal*2}}
     shutteroffset start
     shuttercustomoffset 0
     name TimeBlur8
     xpos 426
     ypos -556
    }
    Switch {
     inputs 2
     which {{parent.decimal<0}}
     name Switch1
     xpos 426
     ypos -494
    }
    Multiply {
     value {{parent.TimeBlur8.divisions}}
     name Multiply6
     xpos 426
     ypos -436
    }
    Merge2 {
     inputs 2
     operation from
     name Merge6
     xpos 426
     ypos -369
    }
set N1417d620 [stack 0]
    Output {
     name Output1
     xpos 426
     ypos -221
    }
push $N1417d620
push $N1417d620
    Viewer {
     inputs 2
     frame_range 1-100
     viewerProcess "sRGB (default)"
     name Viewer1
     xpos 675
     ypos -246
    }
   end_group
   NoTimeBlur {
    name NoTimeBlur6
    xpos -135
    ypos -608
   }
   Dot {
    name Dot21
    xpos -101
    ypos -449
   }
set N1c23aeb0 [stack 0]
   Dot {
    name Dot22
    xpos -245
    ypos -449
   }
   Multiply {
    value {{math_matrix.result_y_flash(parent.CTimeOffset7.ref)}}
    name Angle_reveal_top
    label TOP
    xpos -279
    ypos -371
   }
   Transform {
    scale {{0.05+(0.05*(((parent.DecimalTimeOffset1.decimal-0.5)*2)*ScaleVariationFlash))}}
    center {{root.width/2 x1015 2304} {root.height/2}}
    shutteroffset centred
    name random_size_top
    xpos -279
    ypos -136
   }
   Card3D {
    inputs 3
    rot_order ZYX
    translate {0 0 0}
    rotate {90 0 0}
    shutteroffset centred
    name cCard3D5
    tile_color 0x7b1d1dff
    xpos -279
    ypos 153
    addUserKnob {20 User l parent}
    addUserKnob {22 python_button l "set parent" t "select parent node, and press this button to set the selected node as parent" +INVISIBLE T "n = nuke.selectedNode()\['name'].getValue()\nnuke.thisNode()\['string'].setValue(n)" +STARTLINE}
    addUserKnob {1 string l parent +INVISIBLE}
    string null
    addUserKnob {3 ref l "ref frame"}
    ref 1015
   }
   Transform {
    translate {{"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].translate.x(ref)\}]"} {"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].translate.y(ref)\}]"}}
    rotate {{"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].rotate-\[value parent_gun].rotate(ref)\}]"}}
    scale {{"\[if \{\[value parent_gun]==\"null\"\} \{return 1\} \{return 1+(\[value parent_gun].scale-\[value parent_gun].scale(ref))\}]"}}
    center {{"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].center.x(ref)\}]"} {"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].center.y(ref)\}]"}}
    name GUNMatchMove
    label "\n"
    xpos -279
    ypos 247
    addUserKnob {20 User l parent}
    addUserKnob {3 ref}
    ref {{parent.CTimeOffset7.ref}}
   }
   Transform {
    translate {{"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].translate.x-\[value parent_env].translate.x(ref)\}]"} {"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].translate.y-\[value parent_env].translate.y(ref)\}]"}}
    rotate {{"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].rotate-\[value parent_env].rotate(ref)\}]"}}
    scale {{"\[if \{\[value parent_gun]==\"null\"\} \{return 1\} \{return 1+(\[value parent_env].scale-\[value parent_env].scale(ref))\}]"}}
    center {{"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].center.x(ref)\}]"} {"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].center.y(ref)\}]"}}
    motionblur {{(mode==2)*0.2}}
    shutter {{FlashMB*(0.175*0.3)}}
    shutteroffset centred
    name ENVMatchMove
    xpos -279
    ypos 321
    addUserKnob {20 User l parent}
    addUserKnob {3 ref}
    ref {{parent.CTimeOffset7.ref}}
   }
   Transform {
    translate {{"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return -((root.width/2)-(\[value parent_gun].center.x(1)+\[value parent_gun].translate.x(1)))\}]"} {"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return -((root.height/2)-(\[value parent_gun].center.y(1)+\[value parent_gun].translate.y(1)))\}]"}}
    shutteroffset centred
    name Transform_GUNMatchMove1
    label "alignment correction"
    xpos -279
    ypos 408
    addUserKnob {20 User l parent}
    addUserKnob {22 python_button l "set parent" t "select parent node, and press this button to set the selected node as parent" T "n = nuke.selectedNode()\['name'].getValue()\nnuke.thisNode()\['string'].setValue(n)" +STARTLINE}
    addUserKnob {1 string l parent}
    string Transform_MatchMove10
    addUserKnob {3 ref +INVISIBLE}
    ref {{parent.cCard3D_8.ref}}
   }
   Remove {
    operation keep
    channels rgb
    name Remove10
    xpos -279
    ypos 489
   }
push 0
   Switch {
    inputs 2
    which {{ActivateSideFlash(CTimeOffset7.ref)}}
    name Switch1
    label "keyframeable disable "
    xpos -279
    ypos 587
   }
push 0
   Switch {
    inputs 2
    which {{parent.Angle_reveal_top.value!=0}}
    name Switch4
    label "disable based on angle"
    xpos -279
    ypos 670
   }
   Dot {
    name Dot1
    xpos -245
    ypos 717
   }
push 0
push $N140fbc50
push 0
   Input {
    inputs 0
    name Front
    xpos -430
    ypos -1102
    number 1
   }
   TimeOffset {
    time_offset {{"shotnmbr==0 ? 0 : shot_\[value shotnmbr]-1"}}
    time ""
    name CTimeOffset8
    xpos -430
    ypos -840
    addUserKnob {20 User}
    addUserKnob {3 shotnmbr l "shot "}
    shotnmbr {{parent.CTimeOffset7.shotnmbr}}
   }
   Group {
    name DecimalTimeOffset
    tile_color 0xafa35dff
    label "random asset\n(based on brighness)"
    note_font "Bitstream Vera Sans Bold"
    xpos -430
    ypos -693
    addUserKnob {20 User}
    addUserKnob {7 decimal l "time offset (decimal)"}
    decimal {{"floor\n(\n  (\n  (  ((((random((shotcount*823)+((seed+seed_offset_\[value shotcount])*212))-0.5)*  ((1-( abs(brighness_flare-0.5) )*2)+1)  )+0.5)*0.5)  * (1-brighness_flare)  )\n\n  +\n\n  (  (((((random((shotcount*823)+((seed+seed_offset_\[value shotcount])*212))-0.5)*  ((1-( abs(brighness_flare-0.5) )*2)+1)  )+0.5)*0.5)+0.5)  * (brighness_flare)  )\n  )\n  *1000\n)\n\n/1000"}}
    addUserKnob {26 ""}
    addUserKnob {26 _1 l "" +STARTLINE T "Chris Fryer | 2020\nupdated by Yorben Otto | 2024"}
   }
    Input {
     inputs 0
     name Input1
     xpos 426
     ypos -793
    }
    TimeOffset {
     time_offset {{(-floor(parent.decimal))*(DecimalTimeOffset.decimal<0)}}
     time ""
     name TimeOffset1
     xpos 426
     ypos -674
    }
    Dot {
     name Dot6
     xpos 460
     ypos -635
    }
set N1c2fa930 [stack 0]
    Dot {
     name Dot5
     xpos 350
     ypos -635
    }
    Dot {
     name Dot7
     xpos 350
     ypos -365
    }
push $N1c2fa930
    Dot {
     name Dot1
     xpos 572
     ypos -635
    }
    TimeBlur {
     divisions 2
     shutter {{(parent.decimal-(floor(parent.decimal)))*2}}
     shutteroffset start
     shuttercustomoffset 0
     name TimeBlur1
     xpos 538
     ypos -558
    }
    Dot {
     name Dot2
     xpos 572
     ypos -490
    }
push $N1c2fa930
    TimeBlur {
     divisions 2
     shutter {{parent.decimal*2}}
     shutteroffset start
     shuttercustomoffset 0
     name TimeBlur8
     xpos 426
     ypos -556
    }
    Switch {
     inputs 2
     which {{parent.decimal<0}}
     name Switch1
     xpos 426
     ypos -494
    }
    Multiply {
     value {{parent.TimeBlur8.divisions}}
     name Multiply6
     xpos 426
     ypos -436
    }
    Merge2 {
     inputs 2
     operation from
     name Merge6
     xpos 426
     ypos -369
    }
set N1c33c870 [stack 0]
    Output {
     name Output1
     xpos 426
     ypos -221
    }
push $N1c33c870
push $N1c33c870
    Viewer {
     inputs 2
     frame_range 1-100
     viewerProcess "sRGB (default)"
     name Viewer1
     xpos 675
     ypos -246
    }
   end_group
   NoTimeBlur {
    name NoTimeBlur7
    xpos -430
    ypos -617
   }
   Multiply {
    value {{math_matrix.result_x_flash(parent.CTimeOffset7.ref)}}
    name Angle_reveal_front
    label FRONT
    xpos -430
    ypos -375
   }
   Transform {
    scale {{0.05+(0.05*(((parent.DecimalTimeOffset1.decimal-0.5)*2)*ScaleVariationFlash))}}
    center {{root.width/2 x1015 2304} {root.height/2}}
    shutteroffset centred
    name random_size_front
    xpos -430
    ypos -134
   }
   Card3D {
    inputs 3
    rot_order ZYX
    translate {0 0 0}
    rotate {0 90 0}
    shutteroffset centred
    name cCard3D6
    tile_color 0x7b1d1dff
    xpos -430
    ypos 150
    addUserKnob {20 User l parent}
    addUserKnob {22 python_button l "set parent" t "select parent node, and press this button to set the selected node as parent" +INVISIBLE T "n = nuke.selectedNode()\['name'].getValue()\nnuke.thisNode()\['string'].setValue(n)" +STARTLINE}
    addUserKnob {1 string l parent +INVISIBLE}
    string null
    addUserKnob {3 ref l "ref frame"}
    ref 1015
   }
   Transform {
    translate {{"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].translate.x(ref)\}]"} {"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].translate.y(ref)\}]"}}
    rotate {{"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].rotate-\[value parent_gun].rotate(ref)\}]"}}
    scale {{"\[if \{\[value parent_gun]==\"null\"\} \{return 1\} \{return 1+(\[value parent_gun].scale-\[value parent_gun].scale(ref))\}]"}}
    center {{"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].center.x(ref)\}]"} {"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].center.y(ref)\}]"}}
    name GUNMatchMove2
    label "\n"
    xpos -430
    ypos 248
    addUserKnob {20 User l parent}
    addUserKnob {3 ref}
    ref {{parent.CTimeOffset7.ref}}
   }
   Transform {
    translate {{"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].translate.x-\[value parent_env].translate.x(ref)\}]"} {"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].translate.y-\[value parent_env].translate.y(ref)\}]"}}
    rotate {{"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].rotate-\[value parent_env].rotate(ref)\}]"}}
    scale {{"\[if \{\[value parent_gun]==\"null\"\} \{return 1\} \{return 1+(\[value parent_env].scale-\[value parent_env].scale(ref))\}]"}}
    center {{"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].center.x(ref)\}]"} {"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].center.y(ref)\}]"}}
    motionblur {{(mode==2)*0.2}}
    shutter {{FlashMB*(0.175*0.3)}}
    shutteroffset centred
    name ENVMatchMove2
    xpos -430
    ypos 320
    addUserKnob {20 User l parent}
    addUserKnob {3 ref}
    ref {{parent.CTimeOffset7.ref}}
   }
   Transform {
    translate {{"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return -((root.width/2)-(\[value parent_gun].center.x(1)+\[value parent_gun].translate.x(1)))\}]"} {"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return -((root.height/2)-(\[value parent_gun].center.y(1)+\[value parent_gun].translate.y(1)))\}]"}}
    shutteroffset centred
    name Transform_GUNMatchMove2
    label "alignment correction"
    xpos -430
    ypos 407
    addUserKnob {20 User l parent}
    addUserKnob {22 python_button l "set parent" t "select parent node, and press this button to set the selected node as parent" T "n = nuke.selectedNode()\['name'].getValue()\nnuke.thisNode()\['string'].setValue(n)" +STARTLINE}
    addUserKnob {1 string l parent}
    string Transform_MatchMove10
    addUserKnob {3 ref +INVISIBLE}
    ref {{parent.cCard3D_8.ref}}
   }
   Remove {
    operation keep
    channels rgb
    name Remove11
    xpos -430
    ypos 487
   }
push 0
   Switch {
    inputs 2
    which {{ActivateFrontFlash(CTimeOffset7.ref)}}
    name Switch7
    label "keyframeable disable "
    xpos -430
    ypos 586
   }
push 0
   Switch {
    inputs 2
    which {{parent.Angle_reveal_front.value!=0}}
    name Switch5
    label "disable based on angle"
    xpos -430
    ypos 670
   }
   Dot {
    name Dot2
    xpos -396
    ypos 749
   }
push $N1c23aeb0
   Multiply {
    value {{math_matrix.result_z_flash(parent.CTimeOffset7.ref)}}
    name Angle_reveal_side
    label SIDE
    xpos -135
    ypos -374
   }
   Transform {
    scale {{0.05+(0.05*(((parent.DecimalTimeOffset1.decimal-0.5)*2)*ScaleVariationFlash))}}
    center {{root.width/2 x1015 2304} {root.height/2}}
    shutteroffset centred
    name random_size_side
    xpos -135
    ypos -137
   }
   Card3D {
    translate {{"\[if \{\[exists  parent.parent.parent.input0]\} \{return \[value \[topnode parent.parent.parent.input0].name].translate.x(ref)\} \{return 0\}]"} {"\[if \{\[exists  parent.parent.parent.input0]\} \{return \[value \[topnode parent.parent.parent.input0].name].translate.y(ref)\} \{return 0\}]"} {"\[if \{\[exists  parent.parent.parent.input0]\} \{return \[value \[topnode parent.parent.parent.input0].name].translate.z(ref)\} \{return -1\}]"}}
    rotate {{"\[if \{\[exists  parent.parent.parent.input0]\} \{return \[value \[topnode parent.parent.parent.input0].name].rotate.x(ref)\} \{return 0\}]"} {"\[if \{\[exists  parent.parent.parent.input0]\} \{return \[value \[topnode parent.parent.parent.input0].name].rotate.y(ref)\} \{return 0\}]"} {"\[if \{\[exists  parent.parent.parent.input0]\} \{return \[value \[topnode parent.parent.parent.input0].name].rotate.z(ref)\} \{return 0\}]"}}
    scaling {{"\[if \{\[exists  parent.parent.parent.input0]\} \{return \[value \[topnode parent.parent.parent.input0].name].scaling.x(ref)\} \{return 1\}]"} {"\[if \{\[exists  parent.parent.parent.input0]\} \{return \[value \[topnode parent.parent.parent.input0].name].scaling.y(ref)\} \{return 1\}]"} {"\[if \{\[exists  parent.parent.parent.input0]\} \{return \[value \[topnode parent.parent.parent.input0].name].scaling.z(ref)\} \{return 1\}]"}}
    uniform_scale {{"\[if \{\[exists  parent.parent.parent.input0]\} \{return (\[value \[topnode parent.parent.parent.input0].name].uniform_scale(ref)*25)\} \{return 25\}]"}}
    shutteroffset centred
    name cCard3D_1
    tile_color 0x7b1d1dff
    label "ref frame: \[value ref]"
    xpos -135
    ypos 147
    addUserKnob {20 User l parent}
    addUserKnob {22 python_button l "set parent" t "select parent node, and press this button to set the selected node as parent" +INVISIBLE T "n = nuke.selectedNode()\['name'].getValue()\nnuke.thisNode()\['string'].setValue(n)" +STARTLINE}
    addUserKnob {1 string l parent +INVISIBLE}
    string null
    addUserKnob {3 id l "id number"}
    id {{parent.CTimeOffset7.shotnmbr}}
    addUserKnob {3 ref l "ref frame"}
    ref {{parent.CTimeOffset7.ref}}
   }
   Transform {
    translate {{"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].translate.x(ref)\}]"} {"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].translate.y(ref)\}]"}}
    rotate {{"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].rotate-\[value parent_gun].rotate(ref)\}]"}}
    scale {{"\[if \{\[value parent_gun]==\"null\"\} \{return 1\} \{return 1+(\[value parent_gun].scale-\[value parent_gun].scale(ref))\}]"}}
    center {{"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].center.x(ref)\}]"} {"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].center.y(ref)\}]"}}
    name GUNMatchMove1
    label "\n"
    xpos -135
    ypos 241
    addUserKnob {20 User l parent}
    addUserKnob {3 ref}
    ref {{parent.CTimeOffset7.ref}}
   }
   Transform {
    translate {{"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].translate.x-\[value parent_env].translate.x(ref)\}]"} {"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].translate.y-\[value parent_env].translate.y(ref)\}]"}}
    rotate {{"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].rotate-\[value parent_env].rotate(ref)\}]"}}
    scale {{"\[if \{\[value parent_gun]==\"null\"\} \{return 1\} \{return 1+(\[value parent_env].scale-\[value parent_env].scale(ref))\}]"}}
    center {{"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].center.x(ref)\}]"} {"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].center.y(ref)\}]"}}
    motionblur {{(mode==2)*0.2}}
    shutter {{FlashMB*(0.175*0.3)}}
    shutteroffset centred
    name ENVMatchMove1
    xpos -135
    ypos 317
    addUserKnob {20 User l parent}
    addUserKnob {3 ref}
    ref {{parent.CTimeOffset7.ref}}
   }
   Transform {
    translate {{"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return -((root.width/2)-(\[value parent_gun].center.x(1)+\[value parent_gun].translate.x(1)))\}]"} {"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return -((root.height/2)-(\[value parent_gun].center.y(1)+\[value parent_gun].translate.y(1)))\}]"}}
    shutteroffset centred
    name Transform_GUNMatchMove3
    label "alignment correction"
    xpos -135
    ypos 405
    addUserKnob {20 User l parent}
    addUserKnob {22 python_button l "set parent" t "select parent node, and press this button to set the selected node as parent" T "n = nuke.selectedNode()\['name'].getValue()\nnuke.thisNode()\['string'].setValue(n)" +STARTLINE}
    addUserKnob {1 string l parent}
    string Transform_MatchMove10
    addUserKnob {3 ref +INVISIBLE}
    ref {{parent.cCard3D_8.ref}}
   }
   Remove {
    operation keep
    channels rgb
    name Remove12
    xpos -135
    ypos 489
   }
push 0
   Switch {
    inputs 2
    which {{ActivateSideFlash(CTimeOffset7.ref)}}
    name Switch3
    label "keyframeable disable "
    xpos -135
    ypos 587
   }
push 0
   Switch {
    inputs 2
    which {{parent.Angle_reveal_side.value!=0}}
    name Switch6
    label "disable based on angle"
    xpos -135
    ypos 671
   }
   Merge2 {
    inputs 3+1
    operation max
    name Merge1
    xpos -135
    ypos 745
   }
   Merge2 {
    inputs 2
    operation plus
    bbox intersection
    name Merge6
    xpos -135
    ypos 1196
   }
push 0
   Switch {
    inputs 2
    which {{"shot_\[value count]==0?0:(EnableExtraFrames==1?floor(((frame>=shot_\[value count])+(frame<=(shot_\[value count]+(4*((mode==1)+(mode==2))))))/2):frame==shot_\[value count])"}}
    name cSwitch_3
    selected true
    xpos -135
    ypos 1354
    addUserKnob {20 User}
    addUserKnob {3 count l "shot number"}
    count {{parent.CTimeOffset7.shotnmbr}}
   }
   Output {
    name Output1
    xpos -135
    ypos 1861
   }
  end_group
push $N534fa5d0
push $N326500b0
  Group {
   inputs 2
   name gunshot5
   label "shot: \[value shotcount]\non frame: \[value shot_\[value shotcount]]\n"
   xpos 8669
   ypos -814
   addUserKnob {20 User}
   addUserKnob {3 shotcount l shot}
   shotcount 5
   addUserKnob {3 shotstart l frame +INVISIBLE}
   shotstart {{"shotcount==0 ? 0 : shot\[value shotcount]-1"}}
  }
   BackdropNode {
    inputs 0
    name BackdropNode3
    knobChanged "try:\n    listenedKnobs = \['text', 'position', 'name']\n    node = nuke.thisNode()\n    name = node.knob('name').value()\n    text = node.knob('text').value()\n    position = node.knob('position').value()\n    position = \"<\" + position + \">\"\n    label = node.knob('label').value()\n    \n    if nuke.thisKnob().name() in listenedKnobs:\n        if text == \"\":\n            if node.knob('position').value() == \"left\":\n                node.knob('label').setValue()\n            else:\n                node.knob('label').setValue(position + name)\n        else:\n            if node.knob('position').value() == \"left\":\n                node.knob('label').setValue(text)\n            else:\n                node.knob('label').setValue(position + text)\n                \n    elif nuke.thisKnob().name() == 'font_size':\n        fontSize = node.knob('font_size').value()\n        node.knob('note_font_size').setValue(fontSize)\nexcept:\n    pass"
    tile_color 0x232323ff
    label "<Left><h2> Gunshot"
    note_font_size 31.5
    xpos -698
    ypos -924
    bdwidth 1057
    bdheight 2343
    addUserKnob {20 F_VFX l BackdropNode}
    addUserKnob {43 text l Text}
    text "<h2> Gunshot"
    addUserKnob {7 font_size l "Font Size" R 10 100}
    font_size 31.5
    addUserKnob {4 position l "" -STARTLINE M {Left Center}}
    addUserKnob {26 S01 l " " T " "}
    addUserKnob {22 grow l " <img src=\"F_scalep.png\">" -STARTLINE T "n=nuke.thisNode()\n\ndef grow(node=None,step=50):\n    try:\n        if not node:\n            n=nuke.selectedNode()\n        else:\n            n=node\n            n\['xpos'].setValue(n\['xpos'].getValue()-step)\n            n\['ypos'].setValue(n\['ypos'].getValue()-step)\n            n\['bdwidth'].setValue(n\['bdwidth'].getValue()+step*2)\n            n\['bdheight'].setValue(n\['bdheight'].getValue()+step*2)\n    except:\n        pass\ngrow(n,50)"}
    addUserKnob {22 shrink l " <img src=\"F_scalem.png\">" -STARTLINE T "n=nuke.thisNode()\n\ndef shrink(node=None,step=50):\n    try:\n        if not node:\n            n=nuke.selectedNode()\n        else:\n            n=node\n            n\['xpos'].setValue(n\['xpos'].getValue()+step)\n            n\['ypos'].setValue(n\['ypos'].getValue()+step)\n            n\['bdwidth'].setValue(n\['bdwidth'].getValue()-step*2)\n            n\['bdheight'].setValue(n\['bdheight'].getValue()-step*2)\n    except:\n        pass\nshrink(n,50)"}
    addUserKnob {22 colorandom l " <img src=\"ColorBars.png\">" -STARTLINE T "import colorsys, random\nn=nuke.thisNode()\nR,G,B= colorsys.hsv_to_rgb(random.random(),.1+random.random()*.15,.15+random.random()*.15)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ) )"}
    addUserKnob {22 darkgrey l "<font color=\"#232323\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.0, 0.0, 0.14]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 lightgrey l "<font color=\"#383838\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.0, 0.0, 0.22]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 red l "<font color=\"#8c3838\" size=6>■</font>" T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.0, 0.6, 0.55]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n" +STARTLINE}
    addUserKnob {22 orange l "<font color=\"#b28e59\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.1, 0.5, 0.7]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 yellow l "<font color=\"#ccc766\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.16, 0.5, 0.8]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 green l "<font color=\"#5d995b\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.33, 0.4, 0.6]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 cyan l "<font color=\"#72998f\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.46, 0.25, 0.6]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 blue l "<font color=\"#59687f\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.6, 0.3, 0.5]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 darkblue l "<font color=\"#63628c\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.67, 0.3, 0.55]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 magenta l "<font color=\"#927a99\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.8, 0.2, 0.6]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 pink l "<font color=\"#997a89\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.92, 0.2, 0.6]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {26 S02 l " " T " "}
    addUserKnob {26 Ftools l "" +STARTLINE T "<font color=\"#1C1C1C\"> v1.2 - Franklin VFX - 2018"}
   }
   BackdropNode {
    inputs 0
    name BackdropNode1
    knobChanged "try:\n    listenedKnobs = \['text', 'position', 'name']\n    node = nuke.thisNode()\n    name = node.knob('name').value()\n    text = node.knob('text').value()\n    position = node.knob('position').value()\n    position = \"<\" + position + \">\"\n    label = node.knob('label').value()\n    \n    if nuke.thisKnob().name() in listenedKnobs:\n        if text == \"\":\n            if node.knob('position').value() == \"left\":\n                node.knob('label').setValue()\n            else:\n                node.knob('label').setValue(position + name)\n        else:\n            if node.knob('position').value() == \"left\":\n                node.knob('label').setValue(text)\n            else:\n                node.knob('label').setValue(position + text)\n                \n    elif nuke.thisKnob().name() == 'font_size':\n        fontSize = node.knob('font_size').value()\n        node.knob('note_font_size').setValue(fontSize)\nexcept:\n    pass"
    tile_color 0x927a99ff
    note_font_size 50
    xpos -460
    ypos -257
    bdwidth 435
    bdheight 786
    z_order 1
    addUserKnob {20 F_VFX l BackdropNode}
    addUserKnob {43 text l Text}
    addUserKnob {7 font_size l "Font Size" R 10 100}
    font_size 50
    addUserKnob {4 position l "" -STARTLINE M {Left Center}}
    addUserKnob {26 S01 l " " T " "}
    addUserKnob {22 grow l " <img src=\"F_scalep.png\">" -STARTLINE T "n=nuke.thisNode()\n\ndef grow(node=None,step=50):\n    try:\n        if not node:\n            n=nuke.selectedNode()\n        else:\n            n=node\n            n\['xpos'].setValue(n\['xpos'].getValue()-step)\n            n\['ypos'].setValue(n\['ypos'].getValue()-step)\n            n\['bdwidth'].setValue(n\['bdwidth'].getValue()+step*2)\n            n\['bdheight'].setValue(n\['bdheight'].getValue()+step*2)\n    except:\n        pass\ngrow(n,50)"}
    addUserKnob {22 shrink l " <img src=\"F_scalem.png\">" -STARTLINE T "n=nuke.thisNode()\n\ndef shrink(node=None,step=50):\n    try:\n        if not node:\n            n=nuke.selectedNode()\n        else:\n            n=node\n            n\['xpos'].setValue(n\['xpos'].getValue()+step)\n            n\['ypos'].setValue(n\['ypos'].getValue()+step)\n            n\['bdwidth'].setValue(n\['bdwidth'].getValue()-step*2)\n            n\['bdheight'].setValue(n\['bdheight'].getValue()-step*2)\n    except:\n        pass\nshrink(n,50)"}
    addUserKnob {22 colorandom l " <img src=\"ColorBars.png\">" -STARTLINE T "import colorsys, random\nn=nuke.thisNode()\nR,G,B= colorsys.hsv_to_rgb(random.random(),.1+random.random()*.15,.15+random.random()*.15)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ) )"}
    addUserKnob {22 darkgrey l "<font color=\"#232323\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.0, 0.0, 0.14]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 lightgrey l "<font color=\"#383838\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.0, 0.0, 0.22]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 red l "<font color=\"#8c3838\" size=6>■</font>" T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.0, 0.6, 0.55]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n" +STARTLINE}
    addUserKnob {22 orange l "<font color=\"#b28e59\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.1, 0.5, 0.7]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 yellow l "<font color=\"#ccc766\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.16, 0.5, 0.8]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 green l "<font color=\"#5d995b\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.33, 0.4, 0.6]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 cyan l "<font color=\"#72998f\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.46, 0.25, 0.6]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 blue l "<font color=\"#59687f\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.6, 0.3, 0.5]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 darkblue l "<font color=\"#63628c\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.67, 0.3, 0.55]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 magenta l "<font color=\"#927a99\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.8, 0.2, 0.6]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 pink l "<font color=\"#997a89\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.92, 0.2, 0.6]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {26 S02 l " " T " "}
    addUserKnob {26 Ftools l "" +STARTLINE T "<font color=\"#1C1C1C\"> v1.2 - Franklin VFX - 2018"}
   }
   Constant {
    inputs 0
    channels rgb
    name Constant4
    xpos -648
    ypos 987
   }
   AdjBBox {
    numpixels {{size_bbox}}
    name AdjBBox4
    xpos -648
    ypos 1120
   }
   Dot {
    name Dot19
    xpos -614
    ypos 1200
   }
   Axis3 {
    inputs 0
    useMatrix true
    matrix {
        {{parent.cCard3D_1.matrix} {parent.cCard3D_1.matrix} {parent.cCard3D_1.matrix} {parent.cCard3D_1.matrix}}
        {{parent.cCard3D_1.matrix} {parent.cCard3D_1.matrix} {parent.cCard3D_1.matrix} {parent.cCard3D_1.matrix}}
        {{parent.cCard3D_1.matrix} {parent.cCard3D_1.matrix} {parent.cCard3D_1.matrix} {parent.cCard3D_1.matrix}}
        {{parent.cCard3D_1.matrix} {parent.cCard3D_1.matrix} {parent.cCard3D_1.matrix} {parent.cCard3D_1.matrix}}
      }
    name Axis3
    xpos -207
    ypos 48
   }
set N1c559830 [stack 0]
push 0
   Input {
    inputs 0
    name Side
    xpos -135
    ypos -1101
   }
   TimeOffset {
    time_offset {{"shotnmbr==0 ? 0 : shot_\[value shotnmbr]-1"}}
    time ""
    name CTimeOffset7
    label "shot: \[value shotnmbr]\non frame \[value time_offset]"
    xpos -135
    ypos -853
    addUserKnob {20 User}
    addUserKnob {3 shotnmbr l "shot "}
    shotnmbr {{shotcount}}
    addUserKnob {3 ref}
    ref {{time_offset+1}}
   }
   Group {
    name DecimalTimeOffset1
    tile_color 0xafa35dff
    label "random asset\n(based on brighness)"
    note_font "Bitstream Vera Sans Bold"
    xpos -135
    ypos -690
    addUserKnob {20 User}
    addUserKnob {7 decimal l "time offset (decimal)"}
    decimal {{"floor\n(\n  (\n  (  ((((random((shotcount*823)+((seed+seed_offset_\[value shotcount])*212))-0.5)*  ((1-( abs(brighness_flare-0.5) )*2)+1)  )+0.5)*0.5)  * (1-brighness_flare)  )\n\n  +\n\n  (  (((((random((shotcount*823)+((seed+seed_offset_\[value shotcount])*212))-0.5)*  ((1-( abs(brighness_flare-0.5) )*2)+1)  )+0.5)*0.5)+0.5)  * (brighness_flare)  )\n  )\n  *1000\n)\n\n/1000"}}
    addUserKnob {26 ""}
    addUserKnob {26 _1 l "" +STARTLINE T "Chris Fryer | 2020\nupdated by Yorben Otto | 2024"}
   }
    Input {
     inputs 0
     name Input1
     xpos 426
     ypos -793
    }
    TimeOffset {
     time_offset {{(-floor(parent.decimal))*(DecimalTimeOffset1.decimal<0)}}
     time ""
     name TimeOffset1
     xpos 426
     ypos -674
    }
    Dot {
     name Dot6
     xpos 460
     ypos -635
    }
set N1c599200 [stack 0]
    Dot {
     name Dot5
     xpos 350
     ypos -635
    }
    Dot {
     name Dot7
     xpos 350
     ypos -365
    }
push $N1c599200
    Dot {
     name Dot1
     xpos 572
     ypos -635
    }
    TimeBlur {
     divisions 2
     shutter {{(parent.decimal-(floor(parent.decimal)))*2}}
     shutteroffset start
     shuttercustomoffset 0
     name TimeBlur1
     xpos 538
     ypos -558
    }
    Dot {
     name Dot2
     xpos 572
     ypos -490
    }
push $N1c599200
    TimeBlur {
     divisions 2
     shutter {{parent.decimal*2}}
     shutteroffset start
     shuttercustomoffset 0
     name TimeBlur8
     xpos 426
     ypos -556
    }
    Switch {
     inputs 2
     which {{parent.decimal<0}}
     name Switch1
     xpos 426
     ypos -494
    }
    Multiply {
     value {{parent.TimeBlur8.divisions}}
     name Multiply6
     xpos 426
     ypos -436
    }
    Merge2 {
     inputs 2
     operation from
     name Merge6
     xpos 426
     ypos -369
    }
set N1c5db140 [stack 0]
    Output {
     name Output1
     xpos 426
     ypos -221
    }
push $N1c5db140
push $N1c5db140
    Viewer {
     inputs 2
     frame_range 1-100
     viewerProcess "sRGB (default)"
     name Viewer1
     xpos 675
     ypos -246
    }
   end_group
   NoTimeBlur {
    name NoTimeBlur6
    xpos -135
    ypos -608
   }
   Dot {
    name Dot21
    xpos -101
    ypos -449
   }
set N301899c0 [stack 0]
   Dot {
    name Dot22
    xpos -245
    ypos -449
   }
   Multiply {
    value {{math_matrix.result_y_flash(parent.CTimeOffset7.ref)}}
    name Angle_reveal_top
    label TOP
    xpos -279
    ypos -371
   }
   Transform {
    scale {{0.05+(0.05*(((parent.DecimalTimeOffset1.decimal-0.5)*2)*ScaleVariationFlash))}}
    center {{root.width/2 x1015 2304} {root.height/2}}
    shutteroffset centred
    name random_size_top
    xpos -279
    ypos -136
   }
   Card3D {
    inputs 3
    rot_order ZYX
    translate {0 0 0}
    rotate {90 0 0}
    shutteroffset centred
    name cCard3D5
    tile_color 0x7b1d1dff
    xpos -279
    ypos 153
    addUserKnob {20 User l parent}
    addUserKnob {22 python_button l "set parent" t "select parent node, and press this button to set the selected node as parent" +INVISIBLE T "n = nuke.selectedNode()\['name'].getValue()\nnuke.thisNode()\['string'].setValue(n)" +STARTLINE}
    addUserKnob {1 string l parent +INVISIBLE}
    string null
    addUserKnob {3 ref l "ref frame"}
    ref 1015
   }
   Transform {
    translate {{"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].translate.x(ref)\}]"} {"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].translate.y(ref)\}]"}}
    rotate {{"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].rotate-\[value parent_gun].rotate(ref)\}]"}}
    scale {{"\[if \{\[value parent_gun]==\"null\"\} \{return 1\} \{return 1+(\[value parent_gun].scale-\[value parent_gun].scale(ref))\}]"}}
    center {{"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].center.x(ref)\}]"} {"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].center.y(ref)\}]"}}
    name GUNMatchMove
    label "\n"
    xpos -279
    ypos 247
    addUserKnob {20 User l parent}
    addUserKnob {3 ref}
    ref {{parent.CTimeOffset7.ref}}
   }
   Transform {
    translate {{"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].translate.x-\[value parent_env].translate.x(ref)\}]"} {"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].translate.y-\[value parent_env].translate.y(ref)\}]"}}
    rotate {{"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].rotate-\[value parent_env].rotate(ref)\}]"}}
    scale {{"\[if \{\[value parent_gun]==\"null\"\} \{return 1\} \{return 1+(\[value parent_env].scale-\[value parent_env].scale(ref))\}]"}}
    center {{"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].center.x(ref)\}]"} {"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].center.y(ref)\}]"}}
    motionblur {{(mode==2)*0.2}}
    shutter {{FlashMB*(0.175*0.3)}}
    shutteroffset centred
    name ENVMatchMove
    xpos -279
    ypos 321
    addUserKnob {20 User l parent}
    addUserKnob {3 ref}
    ref {{parent.CTimeOffset7.ref}}
   }
   Transform {
    translate {{"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return -((root.width/2)-(\[value parent_gun].center.x(1)+\[value parent_gun].translate.x(1)))\}]"} {"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return -((root.height/2)-(\[value parent_gun].center.y(1)+\[value parent_gun].translate.y(1)))\}]"}}
    shutteroffset centred
    name Transform_GUNMatchMove1
    label "alignment correction"
    xpos -279
    ypos 408
    addUserKnob {20 User l parent}
    addUserKnob {22 python_button l "set parent" t "select parent node, and press this button to set the selected node as parent" T "n = nuke.selectedNode()\['name'].getValue()\nnuke.thisNode()\['string'].setValue(n)" +STARTLINE}
    addUserKnob {1 string l parent}
    string Transform_MatchMove10
    addUserKnob {3 ref +INVISIBLE}
    ref {{parent.cCard3D_8.ref}}
   }
   Remove {
    operation keep
    channels rgb
    name Remove10
    xpos -279
    ypos 489
   }
push 0
   Switch {
    inputs 2
    which {{ActivateSideFlash(CTimeOffset7.ref)}}
    name Switch1
    label "keyframeable disable "
    xpos -279
    ypos 587
   }
push 0
   Switch {
    inputs 2
    which {{parent.Angle_reveal_top.value!=0}}
    name Switch4
    label "disable based on angle"
    xpos -279
    ypos 670
   }
   Dot {
    name Dot1
    xpos -245
    ypos 717
   }
push 0
push $N1c559830
push 0
   Input {
    inputs 0
    name Front
    xpos -430
    ypos -1102
    number 1
   }
   TimeOffset {
    time_offset {{"shotnmbr==0 ? 0 : shot_\[value shotnmbr]-1"}}
    time ""
    name CTimeOffset8
    xpos -430
    ypos -840
    addUserKnob {20 User}
    addUserKnob {3 shotnmbr l "shot "}
    shotnmbr {{parent.CTimeOffset7.shotnmbr}}
   }
   Group {
    name DecimalTimeOffset
    tile_color 0xafa35dff
    label "random asset\n(based on brighness)"
    note_font "Bitstream Vera Sans Bold"
    xpos -430
    ypos -693
    addUserKnob {20 User}
    addUserKnob {7 decimal l "time offset (decimal)"}
    decimal {{"floor\n(\n  (\n  (  ((((random((shotcount*823)+((seed+seed_offset_\[value shotcount])*212))-0.5)*  ((1-( abs(brighness_flare-0.5) )*2)+1)  )+0.5)*0.5)  * (1-brighness_flare)  )\n\n  +\n\n  (  (((((random((shotcount*823)+((seed+seed_offset_\[value shotcount])*212))-0.5)*  ((1-( abs(brighness_flare-0.5) )*2)+1)  )+0.5)*0.5)+0.5)  * (brighness_flare)  )\n  )\n  *1000\n)\n\n/1000"}}
    addUserKnob {26 ""}
    addUserKnob {26 _1 l "" +STARTLINE T "Chris Fryer | 2020\nupdated by Yorben Otto | 2024"}
   }
    Input {
     inputs 0
     name Input1
     xpos 426
     ypos -793
    }
    TimeOffset {
     time_offset {{(-floor(parent.decimal))*(DecimalTimeOffset.decimal<0)}}
     time ""
     name TimeOffset1
     xpos 426
     ypos -674
    }
    Dot {
     name Dot6
     xpos 460
     ypos -635
    }
set Nbc98e440 [stack 0]
    Dot {
     name Dot5
     xpos 350
     ypos -635
    }
    Dot {
     name Dot7
     xpos 350
     ypos -365
    }
push $Nbc98e440
    Dot {
     name Dot1
     xpos 572
     ypos -635
    }
    TimeBlur {
     divisions 2
     shutter {{(parent.decimal-(floor(parent.decimal)))*2}}
     shutteroffset start
     shuttercustomoffset 0
     name TimeBlur1
     xpos 538
     ypos -558
    }
    Dot {
     name Dot2
     xpos 572
     ypos -490
    }
push $Nbc98e440
    TimeBlur {
     divisions 2
     shutter {{parent.decimal*2}}
     shutteroffset start
     shuttercustomoffset 0
     name TimeBlur8
     xpos 426
     ypos -556
    }
    Switch {
     inputs 2
     which {{parent.decimal<0}}
     name Switch1
     xpos 426
     ypos -494
    }
    Multiply {
     value {{parent.TimeBlur8.divisions}}
     name Multiply6
     xpos 426
     ypos -436
    }
    Merge2 {
     inputs 2
     operation from
     name Merge6
     xpos 426
     ypos -369
    }
set Nbc9d0380 [stack 0]
    Output {
     name Output1
     xpos 426
     ypos -221
    }
push $Nbc9d0380
push $Nbc9d0380
    Viewer {
     inputs 2
     frame_range 1-100
     viewerProcess "sRGB (default)"
     name Viewer1
     xpos 675
     ypos -246
    }
   end_group
   NoTimeBlur {
    name NoTimeBlur7
    xpos -430
    ypos -617
   }
   Multiply {
    value {{math_matrix.result_x_flash(parent.CTimeOffset7.ref)}}
    name Angle_reveal_front
    label FRONT
    xpos -430
    ypos -375
   }
   Transform {
    scale {{0.05+(0.05*(((parent.DecimalTimeOffset1.decimal-0.5)*2)*ScaleVariationFlash))}}
    center {{root.width/2 x1015 2304} {root.height/2}}
    shutteroffset centred
    name random_size_front
    xpos -430
    ypos -134
   }
   Card3D {
    inputs 3
    rot_order ZYX
    translate {0 0 0}
    rotate {0 90 0}
    shutteroffset centred
    name cCard3D6
    tile_color 0x7b1d1dff
    xpos -430
    ypos 150
    addUserKnob {20 User l parent}
    addUserKnob {22 python_button l "set parent" t "select parent node, and press this button to set the selected node as parent" +INVISIBLE T "n = nuke.selectedNode()\['name'].getValue()\nnuke.thisNode()\['string'].setValue(n)" +STARTLINE}
    addUserKnob {1 string l parent +INVISIBLE}
    string null
    addUserKnob {3 ref l "ref frame"}
    ref 1015
   }
   Transform {
    translate {{"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].translate.x(ref)\}]"} {"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].translate.y(ref)\}]"}}
    rotate {{"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].rotate-\[value parent_gun].rotate(ref)\}]"}}
    scale {{"\[if \{\[value parent_gun]==\"null\"\} \{return 1\} \{return 1+(\[value parent_gun].scale-\[value parent_gun].scale(ref))\}]"}}
    center {{"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].center.x(ref)\}]"} {"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].center.y(ref)\}]"}}
    name GUNMatchMove2
    label "\n"
    xpos -430
    ypos 248
    addUserKnob {20 User l parent}
    addUserKnob {3 ref}
    ref {{parent.CTimeOffset7.ref}}
   }
   Transform {
    translate {{"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].translate.x-\[value parent_env].translate.x(ref)\}]"} {"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].translate.y-\[value parent_env].translate.y(ref)\}]"}}
    rotate {{"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].rotate-\[value parent_env].rotate(ref)\}]"}}
    scale {{"\[if \{\[value parent_gun]==\"null\"\} \{return 1\} \{return 1+(\[value parent_env].scale-\[value parent_env].scale(ref))\}]"}}
    center {{"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].center.x(ref)\}]"} {"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].center.y(ref)\}]"}}
    motionblur {{(mode==2)*0.2}}
    shutter {{FlashMB*(0.175*0.3)}}
    shutteroffset centred
    name ENVMatchMove2
    xpos -430
    ypos 320
    addUserKnob {20 User l parent}
    addUserKnob {3 ref}
    ref {{parent.CTimeOffset7.ref}}
   }
   Transform {
    translate {{"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return -((root.width/2)-(\[value parent_gun].center.x(1)+\[value parent_gun].translate.x(1)))\}]"} {"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return -((root.height/2)-(\[value parent_gun].center.y(1)+\[value parent_gun].translate.y(1)))\}]"}}
    shutteroffset centred
    name Transform_GUNMatchMove2
    label "alignment correction"
    xpos -430
    ypos 407
    addUserKnob {20 User l parent}
    addUserKnob {22 python_button l "set parent" t "select parent node, and press this button to set the selected node as parent" T "n = nuke.selectedNode()\['name'].getValue()\nnuke.thisNode()\['string'].setValue(n)" +STARTLINE}
    addUserKnob {1 string l parent}
    string Transform_MatchMove10
    addUserKnob {3 ref +INVISIBLE}
    ref {{parent.cCard3D_8.ref}}
   }
   Remove {
    operation keep
    channels rgb
    name Remove11
    xpos -430
    ypos 487
   }
push 0
   Switch {
    inputs 2
    which {{ActivateFrontFlash(CTimeOffset7.ref)}}
    name Switch7
    label "keyframeable disable "
    xpos -430
    ypos 586
   }
push 0
   Switch {
    inputs 2
    which {{parent.Angle_reveal_front.value!=0}}
    name Switch5
    label "disable based on angle"
    xpos -430
    ypos 670
   }
   Dot {
    name Dot2
    xpos -396
    ypos 749
   }
push $N301899c0
   Multiply {
    value {{math_matrix.result_z_flash(parent.CTimeOffset7.ref)}}
    name Angle_reveal_side
    label SIDE
    xpos -135
    ypos -374
   }
   Transform {
    scale {{0.05+(0.05*(((parent.DecimalTimeOffset1.decimal-0.5)*2)*ScaleVariationFlash))}}
    center {{root.width/2 x1015 2304} {root.height/2}}
    shutteroffset centred
    name random_size_side
    xpos -135
    ypos -137
   }
   Card3D {
    translate {{"\[if \{\[exists  parent.parent.parent.input0]\} \{return \[value \[topnode parent.parent.parent.input0].name].translate.x(ref)\} \{return 0\}]"} {"\[if \{\[exists  parent.parent.parent.input0]\} \{return \[value \[topnode parent.parent.parent.input0].name].translate.y(ref)\} \{return 0\}]"} {"\[if \{\[exists  parent.parent.parent.input0]\} \{return \[value \[topnode parent.parent.parent.input0].name].translate.z(ref)\} \{return -1\}]"}}
    rotate {{"\[if \{\[exists  parent.parent.parent.input0]\} \{return \[value \[topnode parent.parent.parent.input0].name].rotate.x(ref)\} \{return 0\}]"} {"\[if \{\[exists  parent.parent.parent.input0]\} \{return \[value \[topnode parent.parent.parent.input0].name].rotate.y(ref)\} \{return 0\}]"} {"\[if \{\[exists  parent.parent.parent.input0]\} \{return \[value \[topnode parent.parent.parent.input0].name].rotate.z(ref)\} \{return 0\}]"}}
    scaling {{"\[if \{\[exists  parent.parent.parent.input0]\} \{return \[value \[topnode parent.parent.parent.input0].name].scaling.x(ref)\} \{return 1\}]"} {"\[if \{\[exists  parent.parent.parent.input0]\} \{return \[value \[topnode parent.parent.parent.input0].name].scaling.y(ref)\} \{return 1\}]"} {"\[if \{\[exists  parent.parent.parent.input0]\} \{return \[value \[topnode parent.parent.parent.input0].name].scaling.z(ref)\} \{return 1\}]"}}
    uniform_scale {{"\[if \{\[exists  parent.parent.parent.input0]\} \{return (\[value \[topnode parent.parent.parent.input0].name].uniform_scale(ref)*25)\} \{return 25\}]"}}
    shutteroffset centred
    name cCard3D_1
    tile_color 0x7b1d1dff
    label "ref frame: \[value ref]"
    xpos -135
    ypos 147
    addUserKnob {20 User l parent}
    addUserKnob {22 python_button l "set parent" t "select parent node, and press this button to set the selected node as parent" +INVISIBLE T "n = nuke.selectedNode()\['name'].getValue()\nnuke.thisNode()\['string'].setValue(n)" +STARTLINE}
    addUserKnob {1 string l parent +INVISIBLE}
    string null
    addUserKnob {3 id l "id number"}
    id {{parent.CTimeOffset7.shotnmbr}}
    addUserKnob {3 ref l "ref frame"}
    ref {{parent.CTimeOffset7.ref}}
   }
   Transform {
    translate {{"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].translate.x(ref)\}]"} {"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].translate.y(ref)\}]"}}
    rotate {{"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].rotate-\[value parent_gun].rotate(ref)\}]"}}
    scale {{"\[if \{\[value parent_gun]==\"null\"\} \{return 1\} \{return 1+(\[value parent_gun].scale-\[value parent_gun].scale(ref))\}]"}}
    center {{"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].center.x(ref)\}]"} {"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].center.y(ref)\}]"}}
    name GUNMatchMove1
    label "\n"
    xpos -135
    ypos 241
    addUserKnob {20 User l parent}
    addUserKnob {3 ref}
    ref {{parent.CTimeOffset7.ref}}
   }
   Transform {
    translate {{"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].translate.x-\[value parent_env].translate.x(ref)\}]"} {"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].translate.y-\[value parent_env].translate.y(ref)\}]"}}
    rotate {{"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].rotate-\[value parent_env].rotate(ref)\}]"}}
    scale {{"\[if \{\[value parent_gun]==\"null\"\} \{return 1\} \{return 1+(\[value parent_env].scale-\[value parent_env].scale(ref))\}]"}}
    center {{"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].center.x(ref)\}]"} {"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].center.y(ref)\}]"}}
    motionblur {{(mode==2)*0.2}}
    shutter {{FlashMB*(0.175*0.3)}}
    shutteroffset centred
    name ENVMatchMove1
    xpos -135
    ypos 317
    addUserKnob {20 User l parent}
    addUserKnob {3 ref}
    ref {{parent.CTimeOffset7.ref}}
   }
   Transform {
    translate {{"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return -((root.width/2)-(\[value parent_gun].center.x(1)+\[value parent_gun].translate.x(1)))\}]"} {"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return -((root.height/2)-(\[value parent_gun].center.y(1)+\[value parent_gun].translate.y(1)))\}]"}}
    shutteroffset centred
    name Transform_GUNMatchMove3
    label "alignment correction"
    xpos -135
    ypos 405
    addUserKnob {20 User l parent}
    addUserKnob {22 python_button l "set parent" t "select parent node, and press this button to set the selected node as parent" T "n = nuke.selectedNode()\['name'].getValue()\nnuke.thisNode()\['string'].setValue(n)" +STARTLINE}
    addUserKnob {1 string l parent}
    string Transform_MatchMove10
    addUserKnob {3 ref +INVISIBLE}
    ref {{parent.cCard3D_8.ref}}
   }
   Remove {
    operation keep
    channels rgb
    name Remove12
    xpos -135
    ypos 489
   }
push 0
   Switch {
    inputs 2
    which {{ActivateSideFlash(CTimeOffset7.ref)}}
    name Switch3
    label "keyframeable disable "
    xpos -135
    ypos 587
   }
push 0
   Switch {
    inputs 2
    which {{parent.Angle_reveal_side.value!=0}}
    name Switch6
    label "disable based on angle"
    xpos -135
    ypos 671
   }
   Merge2 {
    inputs 3+1
    operation max
    name Merge1
    xpos -135
    ypos 745
   }
   Merge2 {
    inputs 2
    operation plus
    bbox intersection
    name Merge6
    xpos -135
    ypos 1196
   }
push 0
   Switch {
    inputs 2
    which {{"shot_\[value count]==0?0:(EnableExtraFrames==1?floor(((frame>=shot_\[value count])+(frame<=(shot_\[value count]+(4*((mode==1)+(mode==2))))))/2):frame==shot_\[value count])"}}
    name cSwitch_3
    selected true
    xpos -135
    ypos 1354
    addUserKnob {20 User}
    addUserKnob {3 count l "shot number"}
    count {{parent.CTimeOffset7.shotnmbr}}
   }
   Output {
    name Output1
    xpos -135
    ypos 1861
   }
  end_group
push $N4c4f1c50
push $N4e7fc4d0
  Group {
   inputs 2
   name gunshot6
   label "shot: \[value shotcount]\non frame: \[value shot_\[value shotcount]]\n"
   xpos 8863
   ypos -814
   addUserKnob {20 User}
   addUserKnob {3 shotcount l shot}
   shotcount 6
   addUserKnob {3 shotstart l frame +INVISIBLE}
   shotstart {{"shotcount==0 ? 0 : shot\[value shotcount]-1"}}
  }
   BackdropNode {
    inputs 0
    name BackdropNode3
    knobChanged "try:\n    listenedKnobs = \['text', 'position', 'name']\n    node = nuke.thisNode()\n    name = node.knob('name').value()\n    text = node.knob('text').value()\n    position = node.knob('position').value()\n    position = \"<\" + position + \">\"\n    label = node.knob('label').value()\n    \n    if nuke.thisKnob().name() in listenedKnobs:\n        if text == \"\":\n            if node.knob('position').value() == \"left\":\n                node.knob('label').setValue()\n            else:\n                node.knob('label').setValue(position + name)\n        else:\n            if node.knob('position').value() == \"left\":\n                node.knob('label').setValue(text)\n            else:\n                node.knob('label').setValue(position + text)\n                \n    elif nuke.thisKnob().name() == 'font_size':\n        fontSize = node.knob('font_size').value()\n        node.knob('note_font_size').setValue(fontSize)\nexcept:\n    pass"
    tile_color 0x232323ff
    label "<Left><h2> Gunshot"
    note_font_size 31.5
    xpos -698
    ypos -924
    bdwidth 1057
    bdheight 2343
    addUserKnob {20 F_VFX l BackdropNode}
    addUserKnob {43 text l Text}
    text "<h2> Gunshot"
    addUserKnob {7 font_size l "Font Size" R 10 100}
    font_size 31.5
    addUserKnob {4 position l "" -STARTLINE M {Left Center}}
    addUserKnob {26 S01 l " " T " "}
    addUserKnob {22 grow l " <img src=\"F_scalep.png\">" -STARTLINE T "n=nuke.thisNode()\n\ndef grow(node=None,step=50):\n    try:\n        if not node:\n            n=nuke.selectedNode()\n        else:\n            n=node\n            n\['xpos'].setValue(n\['xpos'].getValue()-step)\n            n\['ypos'].setValue(n\['ypos'].getValue()-step)\n            n\['bdwidth'].setValue(n\['bdwidth'].getValue()+step*2)\n            n\['bdheight'].setValue(n\['bdheight'].getValue()+step*2)\n    except:\n        pass\ngrow(n,50)"}
    addUserKnob {22 shrink l " <img src=\"F_scalem.png\">" -STARTLINE T "n=nuke.thisNode()\n\ndef shrink(node=None,step=50):\n    try:\n        if not node:\n            n=nuke.selectedNode()\n        else:\n            n=node\n            n\['xpos'].setValue(n\['xpos'].getValue()+step)\n            n\['ypos'].setValue(n\['ypos'].getValue()+step)\n            n\['bdwidth'].setValue(n\['bdwidth'].getValue()-step*2)\n            n\['bdheight'].setValue(n\['bdheight'].getValue()-step*2)\n    except:\n        pass\nshrink(n,50)"}
    addUserKnob {22 colorandom l " <img src=\"ColorBars.png\">" -STARTLINE T "import colorsys, random\nn=nuke.thisNode()\nR,G,B= colorsys.hsv_to_rgb(random.random(),.1+random.random()*.15,.15+random.random()*.15)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ) )"}
    addUserKnob {22 darkgrey l "<font color=\"#232323\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.0, 0.0, 0.14]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 lightgrey l "<font color=\"#383838\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.0, 0.0, 0.22]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 red l "<font color=\"#8c3838\" size=6>■</font>" T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.0, 0.6, 0.55]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n" +STARTLINE}
    addUserKnob {22 orange l "<font color=\"#b28e59\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.1, 0.5, 0.7]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 yellow l "<font color=\"#ccc766\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.16, 0.5, 0.8]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 green l "<font color=\"#5d995b\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.33, 0.4, 0.6]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 cyan l "<font color=\"#72998f\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.46, 0.25, 0.6]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 blue l "<font color=\"#59687f\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.6, 0.3, 0.5]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 darkblue l "<font color=\"#63628c\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.67, 0.3, 0.55]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 magenta l "<font color=\"#927a99\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.8, 0.2, 0.6]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 pink l "<font color=\"#997a89\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.92, 0.2, 0.6]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {26 S02 l " " T " "}
    addUserKnob {26 Ftools l "" +STARTLINE T "<font color=\"#1C1C1C\"> v1.2 - Franklin VFX - 2018"}
   }
   BackdropNode {
    inputs 0
    name BackdropNode1
    knobChanged "try:\n    listenedKnobs = \['text', 'position', 'name']\n    node = nuke.thisNode()\n    name = node.knob('name').value()\n    text = node.knob('text').value()\n    position = node.knob('position').value()\n    position = \"<\" + position + \">\"\n    label = node.knob('label').value()\n    \n    if nuke.thisKnob().name() in listenedKnobs:\n        if text == \"\":\n            if node.knob('position').value() == \"left\":\n                node.knob('label').setValue()\n            else:\n                node.knob('label').setValue(position + name)\n        else:\n            if node.knob('position').value() == \"left\":\n                node.knob('label').setValue(text)\n            else:\n                node.knob('label').setValue(position + text)\n                \n    elif nuke.thisKnob().name() == 'font_size':\n        fontSize = node.knob('font_size').value()\n        node.knob('note_font_size').setValue(fontSize)\nexcept:\n    pass"
    tile_color 0x927a99ff
    note_font_size 50
    xpos -460
    ypos -257
    bdwidth 435
    bdheight 786
    z_order 1
    addUserKnob {20 F_VFX l BackdropNode}
    addUserKnob {43 text l Text}
    addUserKnob {7 font_size l "Font Size" R 10 100}
    font_size 50
    addUserKnob {4 position l "" -STARTLINE M {Left Center}}
    addUserKnob {26 S01 l " " T " "}
    addUserKnob {22 grow l " <img src=\"F_scalep.png\">" -STARTLINE T "n=nuke.thisNode()\n\ndef grow(node=None,step=50):\n    try:\n        if not node:\n            n=nuke.selectedNode()\n        else:\n            n=node\n            n\['xpos'].setValue(n\['xpos'].getValue()-step)\n            n\['ypos'].setValue(n\['ypos'].getValue()-step)\n            n\['bdwidth'].setValue(n\['bdwidth'].getValue()+step*2)\n            n\['bdheight'].setValue(n\['bdheight'].getValue()+step*2)\n    except:\n        pass\ngrow(n,50)"}
    addUserKnob {22 shrink l " <img src=\"F_scalem.png\">" -STARTLINE T "n=nuke.thisNode()\n\ndef shrink(node=None,step=50):\n    try:\n        if not node:\n            n=nuke.selectedNode()\n        else:\n            n=node\n            n\['xpos'].setValue(n\['xpos'].getValue()+step)\n            n\['ypos'].setValue(n\['ypos'].getValue()+step)\n            n\['bdwidth'].setValue(n\['bdwidth'].getValue()-step*2)\n            n\['bdheight'].setValue(n\['bdheight'].getValue()-step*2)\n    except:\n        pass\nshrink(n,50)"}
    addUserKnob {22 colorandom l " <img src=\"ColorBars.png\">" -STARTLINE T "import colorsys, random\nn=nuke.thisNode()\nR,G,B= colorsys.hsv_to_rgb(random.random(),.1+random.random()*.15,.15+random.random()*.15)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ) )"}
    addUserKnob {22 darkgrey l "<font color=\"#232323\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.0, 0.0, 0.14]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 lightgrey l "<font color=\"#383838\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.0, 0.0, 0.22]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 red l "<font color=\"#8c3838\" size=6>■</font>" T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.0, 0.6, 0.55]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n" +STARTLINE}
    addUserKnob {22 orange l "<font color=\"#b28e59\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.1, 0.5, 0.7]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 yellow l "<font color=\"#ccc766\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.16, 0.5, 0.8]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 green l "<font color=\"#5d995b\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.33, 0.4, 0.6]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 cyan l "<font color=\"#72998f\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.46, 0.25, 0.6]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 blue l "<font color=\"#59687f\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.6, 0.3, 0.5]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 darkblue l "<font color=\"#63628c\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.67, 0.3, 0.55]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 magenta l "<font color=\"#927a99\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.8, 0.2, 0.6]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 pink l "<font color=\"#997a89\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.92, 0.2, 0.6]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {26 S02 l " " T " "}
    addUserKnob {26 Ftools l "" +STARTLINE T "<font color=\"#1C1C1C\"> v1.2 - Franklin VFX - 2018"}
   }
   Constant {
    inputs 0
    channels rgb
    name Constant4
    xpos -648
    ypos 987
   }
   AdjBBox {
    numpixels {{size_bbox}}
    name AdjBBox4
    xpos -648
    ypos 1120
   }
   Dot {
    name Dot19
    xpos -614
    ypos 1200
   }
   Axis3 {
    inputs 0
    useMatrix true
    matrix {
        {{parent.cCard3D_1.matrix} {parent.cCard3D_1.matrix} {parent.cCard3D_1.matrix} {parent.cCard3D_1.matrix}}
        {{parent.cCard3D_1.matrix} {parent.cCard3D_1.matrix} {parent.cCard3D_1.matrix} {parent.cCard3D_1.matrix}}
        {{parent.cCard3D_1.matrix} {parent.cCard3D_1.matrix} {parent.cCard3D_1.matrix} {parent.cCard3D_1.matrix}}
        {{parent.cCard3D_1.matrix} {parent.cCard3D_1.matrix} {parent.cCard3D_1.matrix} {parent.cCard3D_1.matrix}}
      }
    name Axis3
    xpos -207
    ypos 48
   }
set Nc8c6b320 [stack 0]
push 0
   Input {
    inputs 0
    name Side
    xpos -135
    ypos -1101
   }
   TimeOffset {
    time_offset {{"shotnmbr==0 ? 0 : shot_\[value shotnmbr]-1"}}
    time ""
    name CTimeOffset7
    label "shot: \[value shotnmbr]\non frame \[value time_offset]"
    xpos -135
    ypos -853
    addUserKnob {20 User}
    addUserKnob {3 shotnmbr l "shot "}
    shotnmbr {{shotcount}}
    addUserKnob {3 ref}
    ref {{time_offset+1}}
   }
   Group {
    name DecimalTimeOffset1
    tile_color 0xafa35dff
    label "random asset\n(based on brighness)"
    note_font "Bitstream Vera Sans Bold"
    xpos -135
    ypos -690
    addUserKnob {20 User}
    addUserKnob {7 decimal l "time offset (decimal)"}
    decimal {{"floor\n(\n  (\n  (  ((((random((shotcount*823)+((seed+seed_offset_\[value shotcount])*212))-0.5)*  ((1-( abs(brighness_flare-0.5) )*2)+1)  )+0.5)*0.5)  * (1-brighness_flare)  )\n\n  +\n\n  (  (((((random((shotcount*823)+((seed+seed_offset_\[value shotcount])*212))-0.5)*  ((1-( abs(brighness_flare-0.5) )*2)+1)  )+0.5)*0.5)+0.5)  * (brighness_flare)  )\n  )\n  *1000\n)\n\n/1000"}}
    addUserKnob {26 ""}
    addUserKnob {26 _1 l "" +STARTLINE T "Chris Fryer | 2020\nupdated by Yorben Otto | 2024"}
   }
    Input {
     inputs 0
     name Input1
     xpos 426
     ypos -793
    }
    TimeOffset {
     time_offset {{(-floor(parent.decimal))*(DecimalTimeOffset1.decimal<0)}}
     time ""
     name TimeOffset1
     xpos 426
     ypos -674
    }
    Dot {
     name Dot6
     xpos 460
     ypos -635
    }
set Nc8caacf0 [stack 0]
    Dot {
     name Dot5
     xpos 350
     ypos -635
    }
    Dot {
     name Dot7
     xpos 350
     ypos -365
    }
push $Nc8caacf0
    Dot {
     name Dot1
     xpos 572
     ypos -635
    }
    TimeBlur {
     divisions 2
     shutter {{(parent.decimal-(floor(parent.decimal)))*2}}
     shutteroffset start
     shuttercustomoffset 0
     name TimeBlur1
     xpos 538
     ypos -558
    }
    Dot {
     name Dot2
     xpos 572
     ypos -490
    }
push $Nc8caacf0
    TimeBlur {
     divisions 2
     shutter {{parent.decimal*2}}
     shutteroffset start
     shuttercustomoffset 0
     name TimeBlur8
     xpos 426
     ypos -556
    }
    Switch {
     inputs 2
     which {{parent.decimal<0}}
     name Switch1
     xpos 426
     ypos -494
    }
    Multiply {
     value {{parent.TimeBlur8.divisions}}
     name Multiply6
     xpos 426
     ypos -436
    }
    Merge2 {
     inputs 2
     operation from
     name Merge6
     xpos 426
     ypos -369
    }
set N981aeb40 [stack 0]
    Output {
     name Output1
     xpos 426
     ypos -221
    }
push $N981aeb40
push $N981aeb40
    Viewer {
     inputs 2
     frame_range 1-100
     viewerProcess "sRGB (default)"
     name Viewer1
     xpos 675
     ypos -246
    }
   end_group
   NoTimeBlur {
    name NoTimeBlur6
    xpos -135
    ypos -608
   }
   Dot {
    name Dot21
    xpos -101
    ypos -449
   }
set N9824d4a0 [stack 0]
   Dot {
    name Dot22
    xpos -245
    ypos -449
   }
   Multiply {
    value {{math_matrix.result_y_flash(parent.CTimeOffset7.ref)}}
    name Angle_reveal_top
    label TOP
    xpos -279
    ypos -371
   }
   Transform {
    scale {{0.05+(0.05*(((parent.DecimalTimeOffset1.decimal-0.5)*2)*ScaleVariationFlash))}}
    center {{root.width/2 x1015 2304} {root.height/2}}
    shutteroffset centred
    name random_size_top
    xpos -279
    ypos -136
   }
   Card3D {
    inputs 3
    rot_order ZYX
    translate {0 0 0}
    rotate {90 0 0}
    shutteroffset centred
    name cCard3D5
    tile_color 0x7b1d1dff
    xpos -279
    ypos 153
    addUserKnob {20 User l parent}
    addUserKnob {22 python_button l "set parent" t "select parent node, and press this button to set the selected node as parent" +INVISIBLE T "n = nuke.selectedNode()\['name'].getValue()\nnuke.thisNode()\['string'].setValue(n)" +STARTLINE}
    addUserKnob {1 string l parent +INVISIBLE}
    string null
    addUserKnob {3 ref l "ref frame"}
    ref 1015
   }
   Transform {
    translate {{"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].translate.x(ref)\}]"} {"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].translate.y(ref)\}]"}}
    rotate {{"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].rotate-\[value parent_gun].rotate(ref)\}]"}}
    scale {{"\[if \{\[value parent_gun]==\"null\"\} \{return 1\} \{return 1+(\[value parent_gun].scale-\[value parent_gun].scale(ref))\}]"}}
    center {{"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].center.x(ref)\}]"} {"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].center.y(ref)\}]"}}
    name GUNMatchMove
    label "\n"
    xpos -279
    ypos 247
    addUserKnob {20 User l parent}
    addUserKnob {3 ref}
    ref {{parent.CTimeOffset7.ref}}
   }
   Transform {
    translate {{"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].translate.x-\[value parent_env].translate.x(ref)\}]"} {"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].translate.y-\[value parent_env].translate.y(ref)\}]"}}
    rotate {{"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].rotate-\[value parent_env].rotate(ref)\}]"}}
    scale {{"\[if \{\[value parent_gun]==\"null\"\} \{return 1\} \{return 1+(\[value parent_env].scale-\[value parent_env].scale(ref))\}]"}}
    center {{"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].center.x(ref)\}]"} {"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].center.y(ref)\}]"}}
    motionblur {{(mode==2)*0.2}}
    shutter {{FlashMB*(0.175*0.3)}}
    shutteroffset centred
    name ENVMatchMove
    xpos -279
    ypos 321
    addUserKnob {20 User l parent}
    addUserKnob {3 ref}
    ref {{parent.CTimeOffset7.ref}}
   }
   Transform {
    translate {{"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return -((root.width/2)-(\[value parent_gun].center.x(1)+\[value parent_gun].translate.x(1)))\}]"} {"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return -((root.height/2)-(\[value parent_gun].center.y(1)+\[value parent_gun].translate.y(1)))\}]"}}
    shutteroffset centred
    name Transform_GUNMatchMove1
    label "alignment correction"
    xpos -279
    ypos 408
    addUserKnob {20 User l parent}
    addUserKnob {22 python_button l "set parent" t "select parent node, and press this button to set the selected node as parent" T "n = nuke.selectedNode()\['name'].getValue()\nnuke.thisNode()\['string'].setValue(n)" +STARTLINE}
    addUserKnob {1 string l parent}
    string Transform_MatchMove10
    addUserKnob {3 ref +INVISIBLE}
    ref {{parent.cCard3D_8.ref}}
   }
   Remove {
    operation keep
    channels rgb
    name Remove10
    xpos -279
    ypos 489
   }
push 0
   Switch {
    inputs 2
    which {{ActivateSideFlash(CTimeOffset7.ref)}}
    name Switch1
    label "keyframeable disable "
    xpos -279
    ypos 587
   }
push 0
   Switch {
    inputs 2
    which {{parent.Angle_reveal_top.value!=0}}
    name Switch4
    label "disable based on angle"
    xpos -279
    ypos 670
   }
   Dot {
    name Dot1
    xpos -245
    ypos 717
   }
push 0
push $Nc8c6b320
push 0
   Input {
    inputs 0
    name Front
    xpos -430
    ypos -1102
    number 1
   }
   TimeOffset {
    time_offset {{"shotnmbr==0 ? 0 : shot_\[value shotnmbr]-1"}}
    time ""
    name CTimeOffset8
    xpos -430
    ypos -840
    addUserKnob {20 User}
    addUserKnob {3 shotnmbr l "shot "}
    shotnmbr {{parent.CTimeOffset7.shotnmbr}}
   }
   Group {
    name DecimalTimeOffset
    tile_color 0xafa35dff
    label "random asset\n(based on brighness)"
    note_font "Bitstream Vera Sans Bold"
    xpos -430
    ypos -693
    addUserKnob {20 User}
    addUserKnob {7 decimal l "time offset (decimal)"}
    decimal {{"floor\n(\n  (\n  (  ((((random((shotcount*823)+((seed+seed_offset_\[value shotcount])*212))-0.5)*  ((1-( abs(brighness_flare-0.5) )*2)+1)  )+0.5)*0.5)  * (1-brighness_flare)  )\n\n  +\n\n  (  (((((random((shotcount*823)+((seed+seed_offset_\[value shotcount])*212))-0.5)*  ((1-( abs(brighness_flare-0.5) )*2)+1)  )+0.5)*0.5)+0.5)  * (brighness_flare)  )\n  )\n  *1000\n)\n\n/1000"}}
    addUserKnob {26 ""}
    addUserKnob {26 _1 l "" +STARTLINE T "Chris Fryer | 2020\nupdated by Yorben Otto | 2024"}
   }
    Input {
     inputs 0
     name Input1
     xpos 426
     ypos -793
    }
    TimeOffset {
     time_offset {{(-floor(parent.decimal))*(DecimalTimeOffset.decimal<0)}}
     time ""
     name TimeOffset1
     xpos 426
     ypos -674
    }
    Dot {
     name Dot6
     xpos 460
     ypos -635
    }
set N9830cf20 [stack 0]
    Dot {
     name Dot5
     xpos 350
     ypos -635
    }
    Dot {
     name Dot7
     xpos 350
     ypos -365
    }
push $N9830cf20
    Dot {
     name Dot1
     xpos 572
     ypos -635
    }
    TimeBlur {
     divisions 2
     shutter {{(parent.decimal-(floor(parent.decimal)))*2}}
     shutteroffset start
     shuttercustomoffset 0
     name TimeBlur1
     xpos 538
     ypos -558
    }
    Dot {
     name Dot2
     xpos 572
     ypos -490
    }
push $N9830cf20
    TimeBlur {
     divisions 2
     shutter {{parent.decimal*2}}
     shutteroffset start
     shuttercustomoffset 0
     name TimeBlur8
     xpos 426
     ypos -556
    }
    Switch {
     inputs 2
     which {{parent.decimal<0}}
     name Switch1
     xpos 426
     ypos -494
    }
    Multiply {
     value {{parent.TimeBlur8.divisions}}
     name Multiply6
     xpos 426
     ypos -436
    }
    Merge2 {
     inputs 2
     operation from
     name Merge6
     xpos 426
     ypos -369
    }
set N9834ee60 [stack 0]
    Output {
     name Output1
     xpos 426
     ypos -221
    }
push $N9834ee60
push $N9834ee60
    Viewer {
     inputs 2
     frame_range 1-100
     viewerProcess "sRGB (default)"
     name Viewer1
     xpos 675
     ypos -246
    }
   end_group
   NoTimeBlur {
    name NoTimeBlur7
    xpos -430
    ypos -617
   }
   Multiply {
    value {{math_matrix.result_x_flash(parent.CTimeOffset7.ref)}}
    name Angle_reveal_front
    label FRONT
    xpos -430
    ypos -375
   }
   Transform {
    scale {{0.05+(0.05*(((parent.DecimalTimeOffset1.decimal-0.5)*2)*ScaleVariationFlash))}}
    center {{root.width/2 x1015 2304} {root.height/2}}
    shutteroffset centred
    name random_size_front
    xpos -430
    ypos -134
   }
   Card3D {
    inputs 3
    rot_order ZYX
    translate {0 0 0}
    rotate {0 90 0}
    shutteroffset centred
    name cCard3D6
    tile_color 0x7b1d1dff
    xpos -430
    ypos 150
    addUserKnob {20 User l parent}
    addUserKnob {22 python_button l "set parent" t "select parent node, and press this button to set the selected node as parent" +INVISIBLE T "n = nuke.selectedNode()\['name'].getValue()\nnuke.thisNode()\['string'].setValue(n)" +STARTLINE}
    addUserKnob {1 string l parent +INVISIBLE}
    string null
    addUserKnob {3 ref l "ref frame"}
    ref 1015
   }
   Transform {
    translate {{"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].translate.x(ref)\}]"} {"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].translate.y(ref)\}]"}}
    rotate {{"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].rotate-\[value parent_gun].rotate(ref)\}]"}}
    scale {{"\[if \{\[value parent_gun]==\"null\"\} \{return 1\} \{return 1+(\[value parent_gun].scale-\[value parent_gun].scale(ref))\}]"}}
    center {{"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].center.x(ref)\}]"} {"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].center.y(ref)\}]"}}
    name GUNMatchMove2
    label "\n"
    xpos -430
    ypos 248
    addUserKnob {20 User l parent}
    addUserKnob {3 ref}
    ref {{parent.CTimeOffset7.ref}}
   }
   Transform {
    translate {{"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].translate.x-\[value parent_env].translate.x(ref)\}]"} {"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].translate.y-\[value parent_env].translate.y(ref)\}]"}}
    rotate {{"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].rotate-\[value parent_env].rotate(ref)\}]"}}
    scale {{"\[if \{\[value parent_gun]==\"null\"\} \{return 1\} \{return 1+(\[value parent_env].scale-\[value parent_env].scale(ref))\}]"}}
    center {{"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].center.x(ref)\}]"} {"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].center.y(ref)\}]"}}
    motionblur {{(mode==2)*0.2}}
    shutter {{FlashMB*(0.175*0.3)}}
    shutteroffset centred
    name ENVMatchMove2
    xpos -430
    ypos 320
    addUserKnob {20 User l parent}
    addUserKnob {3 ref}
    ref {{parent.CTimeOffset7.ref}}
   }
   Transform {
    translate {{"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return -((root.width/2)-(\[value parent_gun].center.x(1)+\[value parent_gun].translate.x(1)))\}]"} {"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return -((root.height/2)-(\[value parent_gun].center.y(1)+\[value parent_gun].translate.y(1)))\}]"}}
    shutteroffset centred
    name Transform_GUNMatchMove2
    label "alignment correction"
    xpos -430
    ypos 407
    addUserKnob {20 User l parent}
    addUserKnob {22 python_button l "set parent" t "select parent node, and press this button to set the selected node as parent" T "n = nuke.selectedNode()\['name'].getValue()\nnuke.thisNode()\['string'].setValue(n)" +STARTLINE}
    addUserKnob {1 string l parent}
    string Transform_MatchMove10
    addUserKnob {3 ref +INVISIBLE}
    ref {{parent.cCard3D_8.ref}}
   }
   Remove {
    operation keep
    channels rgb
    name Remove11
    xpos -430
    ypos 487
   }
push 0
   Switch {
    inputs 2
    which {{ActivateFrontFlash(CTimeOffset7.ref)}}
    name Switch7
    label "keyframeable disable "
    xpos -430
    ypos 586
   }
push 0
   Switch {
    inputs 2
    which {{parent.Angle_reveal_front.value!=0}}
    name Switch5
    label "disable based on angle"
    xpos -430
    ypos 670
   }
   Dot {
    name Dot2
    xpos -396
    ypos 749
   }
push $N9824d4a0
   Multiply {
    value {{math_matrix.result_z_flash(parent.CTimeOffset7.ref)}}
    name Angle_reveal_side
    label SIDE
    xpos -135
    ypos -374
   }
   Transform {
    scale {{0.05+(0.05*(((parent.DecimalTimeOffset1.decimal-0.5)*2)*ScaleVariationFlash))}}
    center {{root.width/2 x1015 2304} {root.height/2}}
    shutteroffset centred
    name random_size_side
    xpos -135
    ypos -137
   }
   Card3D {
    translate {{"\[if \{\[exists  parent.parent.parent.input0]\} \{return \[value \[topnode parent.parent.parent.input0].name].translate.x(ref)\} \{return 0\}]"} {"\[if \{\[exists  parent.parent.parent.input0]\} \{return \[value \[topnode parent.parent.parent.input0].name].translate.y(ref)\} \{return 0\}]"} {"\[if \{\[exists  parent.parent.parent.input0]\} \{return \[value \[topnode parent.parent.parent.input0].name].translate.z(ref)\} \{return -1\}]"}}
    rotate {{"\[if \{\[exists  parent.parent.parent.input0]\} \{return \[value \[topnode parent.parent.parent.input0].name].rotate.x(ref)\} \{return 0\}]"} {"\[if \{\[exists  parent.parent.parent.input0]\} \{return \[value \[topnode parent.parent.parent.input0].name].rotate.y(ref)\} \{return 0\}]"} {"\[if \{\[exists  parent.parent.parent.input0]\} \{return \[value \[topnode parent.parent.parent.input0].name].rotate.z(ref)\} \{return 0\}]"}}
    scaling {{"\[if \{\[exists  parent.parent.parent.input0]\} \{return \[value \[topnode parent.parent.parent.input0].name].scaling.x(ref)\} \{return 1\}]"} {"\[if \{\[exists  parent.parent.parent.input0]\} \{return \[value \[topnode parent.parent.parent.input0].name].scaling.y(ref)\} \{return 1\}]"} {"\[if \{\[exists  parent.parent.parent.input0]\} \{return \[value \[topnode parent.parent.parent.input0].name].scaling.z(ref)\} \{return 1\}]"}}
    uniform_scale {{"\[if \{\[exists  parent.parent.parent.input0]\} \{return (\[value \[topnode parent.parent.parent.input0].name].uniform_scale(ref)*25)\} \{return 25\}]"}}
    shutteroffset centred
    name cCard3D_1
    tile_color 0x7b1d1dff
    label "ref frame: \[value ref]"
    xpos -135
    ypos 147
    addUserKnob {20 User l parent}
    addUserKnob {22 python_button l "set parent" t "select parent node, and press this button to set the selected node as parent" +INVISIBLE T "n = nuke.selectedNode()\['name'].getValue()\nnuke.thisNode()\['string'].setValue(n)" +STARTLINE}
    addUserKnob {1 string l parent +INVISIBLE}
    string null
    addUserKnob {3 id l "id number"}
    id {{parent.CTimeOffset7.shotnmbr}}
    addUserKnob {3 ref l "ref frame"}
    ref {{parent.CTimeOffset7.ref}}
   }
   Transform {
    translate {{"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].translate.x(ref)\}]"} {"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].translate.y(ref)\}]"}}
    rotate {{"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].rotate-\[value parent_gun].rotate(ref)\}]"}}
    scale {{"\[if \{\[value parent_gun]==\"null\"\} \{return 1\} \{return 1+(\[value parent_gun].scale-\[value parent_gun].scale(ref))\}]"}}
    center {{"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].center.x(ref)\}]"} {"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].center.y(ref)\}]"}}
    name GUNMatchMove1
    label "\n"
    xpos -135
    ypos 241
    addUserKnob {20 User l parent}
    addUserKnob {3 ref}
    ref {{parent.CTimeOffset7.ref}}
   }
   Transform {
    translate {{"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].translate.x-\[value parent_env].translate.x(ref)\}]"} {"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].translate.y-\[value parent_env].translate.y(ref)\}]"}}
    rotate {{"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].rotate-\[value parent_env].rotate(ref)\}]"}}
    scale {{"\[if \{\[value parent_gun]==\"null\"\} \{return 1\} \{return 1+(\[value parent_env].scale-\[value parent_env].scale(ref))\}]"}}
    center {{"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].center.x(ref)\}]"} {"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].center.y(ref)\}]"}}
    motionblur {{(mode==2)*0.2}}
    shutter {{FlashMB*(0.175*0.3)}}
    shutteroffset centred
    name ENVMatchMove1
    xpos -135
    ypos 317
    addUserKnob {20 User l parent}
    addUserKnob {3 ref}
    ref {{parent.CTimeOffset7.ref}}
   }
   Transform {
    translate {{"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return -((root.width/2)-(\[value parent_gun].center.x(1)+\[value parent_gun].translate.x(1)))\}]"} {"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return -((root.height/2)-(\[value parent_gun].center.y(1)+\[value parent_gun].translate.y(1)))\}]"}}
    shutteroffset centred
    name Transform_GUNMatchMove3
    label "alignment correction"
    xpos -135
    ypos 405
    addUserKnob {20 User l parent}
    addUserKnob {22 python_button l "set parent" t "select parent node, and press this button to set the selected node as parent" T "n = nuke.selectedNode()\['name'].getValue()\nnuke.thisNode()\['string'].setValue(n)" +STARTLINE}
    addUserKnob {1 string l parent}
    string Transform_MatchMove10
    addUserKnob {3 ref +INVISIBLE}
    ref {{parent.cCard3D_8.ref}}
   }
   Remove {
    operation keep
    channels rgb
    name Remove12
    xpos -135
    ypos 489
   }
push 0
   Switch {
    inputs 2
    which {{ActivateSideFlash(CTimeOffset7.ref)}}
    name Switch3
    label "keyframeable disable "
    xpos -135
    ypos 587
   }
push 0
   Switch {
    inputs 2
    which {{parent.Angle_reveal_side.value!=0}}
    name Switch6
    label "disable based on angle"
    xpos -135
    ypos 671
   }
   Merge2 {
    inputs 3+1
    operation max
    name Merge1
    xpos -135
    ypos 745
   }
   Merge2 {
    inputs 2
    operation plus
    bbox intersection
    name Merge6
    xpos -135
    ypos 1196
   }
push 0
   Switch {
    inputs 2
    which {{"shot_\[value count]==0?0:(EnableExtraFrames==1?floor(((frame>=shot_\[value count])+(frame<=(shot_\[value count]+(4*((mode==1)+(mode==2))))))/2):frame==shot_\[value count])"}}
    name cSwitch_3
    selected true
    xpos -135
    ypos 1354
    addUserKnob {20 User}
    addUserKnob {3 count l "shot number"}
    count {{parent.CTimeOffset7.shotnmbr}}
   }
   Output {
    name Output1
    xpos -135
    ypos 1861
   }
  end_group
push $N307f6f20
push $N5d0f2ef0
  Group {
   inputs 2
   name gunshot7
   label "shot: \[value shotcount]\non frame: \[value shot_\[value shotcount]]\n"
   xpos 9057
   ypos -814
   addUserKnob {20 User}
   addUserKnob {3 shotcount l shot}
   shotcount 7
   addUserKnob {3 shotstart l frame +INVISIBLE}
   shotstart {{"shotcount==0 ? 0 : shot\[value shotcount]-1"}}
  }
   BackdropNode {
    inputs 0
    name BackdropNode3
    knobChanged "try:\n    listenedKnobs = \['text', 'position', 'name']\n    node = nuke.thisNode()\n    name = node.knob('name').value()\n    text = node.knob('text').value()\n    position = node.knob('position').value()\n    position = \"<\" + position + \">\"\n    label = node.knob('label').value()\n    \n    if nuke.thisKnob().name() in listenedKnobs:\n        if text == \"\":\n            if node.knob('position').value() == \"left\":\n                node.knob('label').setValue()\n            else:\n                node.knob('label').setValue(position + name)\n        else:\n            if node.knob('position').value() == \"left\":\n                node.knob('label').setValue(text)\n            else:\n                node.knob('label').setValue(position + text)\n                \n    elif nuke.thisKnob().name() == 'font_size':\n        fontSize = node.knob('font_size').value()\n        node.knob('note_font_size').setValue(fontSize)\nexcept:\n    pass"
    tile_color 0x232323ff
    label "<Left><h2> Gunshot"
    note_font_size 31.5
    xpos -698
    ypos -924
    bdwidth 1057
    bdheight 2343
    addUserKnob {20 F_VFX l BackdropNode}
    addUserKnob {43 text l Text}
    text "<h2> Gunshot"
    addUserKnob {7 font_size l "Font Size" R 10 100}
    font_size 31.5
    addUserKnob {4 position l "" -STARTLINE M {Left Center}}
    addUserKnob {26 S01 l " " T " "}
    addUserKnob {22 grow l " <img src=\"F_scalep.png\">" -STARTLINE T "n=nuke.thisNode()\n\ndef grow(node=None,step=50):\n    try:\n        if not node:\n            n=nuke.selectedNode()\n        else:\n            n=node\n            n\['xpos'].setValue(n\['xpos'].getValue()-step)\n            n\['ypos'].setValue(n\['ypos'].getValue()-step)\n            n\['bdwidth'].setValue(n\['bdwidth'].getValue()+step*2)\n            n\['bdheight'].setValue(n\['bdheight'].getValue()+step*2)\n    except:\n        pass\ngrow(n,50)"}
    addUserKnob {22 shrink l " <img src=\"F_scalem.png\">" -STARTLINE T "n=nuke.thisNode()\n\ndef shrink(node=None,step=50):\n    try:\n        if not node:\n            n=nuke.selectedNode()\n        else:\n            n=node\n            n\['xpos'].setValue(n\['xpos'].getValue()+step)\n            n\['ypos'].setValue(n\['ypos'].getValue()+step)\n            n\['bdwidth'].setValue(n\['bdwidth'].getValue()-step*2)\n            n\['bdheight'].setValue(n\['bdheight'].getValue()-step*2)\n    except:\n        pass\nshrink(n,50)"}
    addUserKnob {22 colorandom l " <img src=\"ColorBars.png\">" -STARTLINE T "import colorsys, random\nn=nuke.thisNode()\nR,G,B= colorsys.hsv_to_rgb(random.random(),.1+random.random()*.15,.15+random.random()*.15)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ) )"}
    addUserKnob {22 darkgrey l "<font color=\"#232323\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.0, 0.0, 0.14]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 lightgrey l "<font color=\"#383838\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.0, 0.0, 0.22]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 red l "<font color=\"#8c3838\" size=6>■</font>" T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.0, 0.6, 0.55]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n" +STARTLINE}
    addUserKnob {22 orange l "<font color=\"#b28e59\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.1, 0.5, 0.7]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 yellow l "<font color=\"#ccc766\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.16, 0.5, 0.8]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 green l "<font color=\"#5d995b\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.33, 0.4, 0.6]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 cyan l "<font color=\"#72998f\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.46, 0.25, 0.6]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 blue l "<font color=\"#59687f\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.6, 0.3, 0.5]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 darkblue l "<font color=\"#63628c\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.67, 0.3, 0.55]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 magenta l "<font color=\"#927a99\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.8, 0.2, 0.6]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 pink l "<font color=\"#997a89\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.92, 0.2, 0.6]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {26 S02 l " " T " "}
    addUserKnob {26 Ftools l "" +STARTLINE T "<font color=\"#1C1C1C\"> v1.2 - Franklin VFX - 2018"}
   }
   BackdropNode {
    inputs 0
    name BackdropNode1
    knobChanged "try:\n    listenedKnobs = \['text', 'position', 'name']\n    node = nuke.thisNode()\n    name = node.knob('name').value()\n    text = node.knob('text').value()\n    position = node.knob('position').value()\n    position = \"<\" + position + \">\"\n    label = node.knob('label').value()\n    \n    if nuke.thisKnob().name() in listenedKnobs:\n        if text == \"\":\n            if node.knob('position').value() == \"left\":\n                node.knob('label').setValue()\n            else:\n                node.knob('label').setValue(position + name)\n        else:\n            if node.knob('position').value() == \"left\":\n                node.knob('label').setValue(text)\n            else:\n                node.knob('label').setValue(position + text)\n                \n    elif nuke.thisKnob().name() == 'font_size':\n        fontSize = node.knob('font_size').value()\n        node.knob('note_font_size').setValue(fontSize)\nexcept:\n    pass"
    tile_color 0x927a99ff
    note_font_size 50
    xpos -460
    ypos -257
    bdwidth 435
    bdheight 786
    z_order 1
    addUserKnob {20 F_VFX l BackdropNode}
    addUserKnob {43 text l Text}
    addUserKnob {7 font_size l "Font Size" R 10 100}
    font_size 50
    addUserKnob {4 position l "" -STARTLINE M {Left Center}}
    addUserKnob {26 S01 l " " T " "}
    addUserKnob {22 grow l " <img src=\"F_scalep.png\">" -STARTLINE T "n=nuke.thisNode()\n\ndef grow(node=None,step=50):\n    try:\n        if not node:\n            n=nuke.selectedNode()\n        else:\n            n=node\n            n\['xpos'].setValue(n\['xpos'].getValue()-step)\n            n\['ypos'].setValue(n\['ypos'].getValue()-step)\n            n\['bdwidth'].setValue(n\['bdwidth'].getValue()+step*2)\n            n\['bdheight'].setValue(n\['bdheight'].getValue()+step*2)\n    except:\n        pass\ngrow(n,50)"}
    addUserKnob {22 shrink l " <img src=\"F_scalem.png\">" -STARTLINE T "n=nuke.thisNode()\n\ndef shrink(node=None,step=50):\n    try:\n        if not node:\n            n=nuke.selectedNode()\n        else:\n            n=node\n            n\['xpos'].setValue(n\['xpos'].getValue()+step)\n            n\['ypos'].setValue(n\['ypos'].getValue()+step)\n            n\['bdwidth'].setValue(n\['bdwidth'].getValue()-step*2)\n            n\['bdheight'].setValue(n\['bdheight'].getValue()-step*2)\n    except:\n        pass\nshrink(n,50)"}
    addUserKnob {22 colorandom l " <img src=\"ColorBars.png\">" -STARTLINE T "import colorsys, random\nn=nuke.thisNode()\nR,G,B= colorsys.hsv_to_rgb(random.random(),.1+random.random()*.15,.15+random.random()*.15)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ) )"}
    addUserKnob {22 darkgrey l "<font color=\"#232323\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.0, 0.0, 0.14]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 lightgrey l "<font color=\"#383838\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.0, 0.0, 0.22]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 red l "<font color=\"#8c3838\" size=6>■</font>" T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.0, 0.6, 0.55]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n" +STARTLINE}
    addUserKnob {22 orange l "<font color=\"#b28e59\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.1, 0.5, 0.7]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 yellow l "<font color=\"#ccc766\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.16, 0.5, 0.8]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 green l "<font color=\"#5d995b\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.33, 0.4, 0.6]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 cyan l "<font color=\"#72998f\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.46, 0.25, 0.6]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 blue l "<font color=\"#59687f\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.6, 0.3, 0.5]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 darkblue l "<font color=\"#63628c\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.67, 0.3, 0.55]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 magenta l "<font color=\"#927a99\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.8, 0.2, 0.6]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 pink l "<font color=\"#997a89\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.92, 0.2, 0.6]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {26 S02 l " " T " "}
    addUserKnob {26 Ftools l "" +STARTLINE T "<font color=\"#1C1C1C\"> v1.2 - Franklin VFX - 2018"}
   }
   Constant {
    inputs 0
    channels rgb
    name Constant4
    xpos -648
    ypos 987
   }
   AdjBBox {
    numpixels {{size_bbox}}
    name AdjBBox4
    xpos -648
    ypos 1120
   }
   Dot {
    name Dot19
    xpos -614
    ypos 1200
   }
   Axis3 {
    inputs 0
    useMatrix true
    matrix {
        {{parent.cCard3D_1.matrix} {parent.cCard3D_1.matrix} {parent.cCard3D_1.matrix} {parent.cCard3D_1.matrix}}
        {{parent.cCard3D_1.matrix} {parent.cCard3D_1.matrix} {parent.cCard3D_1.matrix} {parent.cCard3D_1.matrix}}
        {{parent.cCard3D_1.matrix} {parent.cCard3D_1.matrix} {parent.cCard3D_1.matrix} {parent.cCard3D_1.matrix}}
        {{parent.cCard3D_1.matrix} {parent.cCard3D_1.matrix} {parent.cCard3D_1.matrix} {parent.cCard3D_1.matrix}}
      }
    name Axis3
    xpos -207
    ypos 48
   }
set N9857bd30 [stack 0]
push 0
   Input {
    inputs 0
    name Side
    xpos -135
    ypos -1101
   }
   TimeOffset {
    time_offset {{"shotnmbr==0 ? 0 : shot_\[value shotnmbr]-1"}}
    time ""
    name CTimeOffset7
    label "shot: \[value shotnmbr]\non frame \[value time_offset]"
    xpos -135
    ypos -853
    addUserKnob {20 User}
    addUserKnob {3 shotnmbr l "shot "}
    shotnmbr {{shotcount}}
    addUserKnob {3 ref}
    ref {{time_offset+1}}
   }
   Group {
    name DecimalTimeOffset1
    tile_color 0xafa35dff
    label "random asset\n(based on brighness)"
    note_font "Bitstream Vera Sans Bold"
    xpos -135
    ypos -690
    addUserKnob {20 User}
    addUserKnob {7 decimal l "time offset (decimal)"}
    decimal {{"floor\n(\n  (\n  (  ((((random((shotcount*823)+((seed+seed_offset_\[value shotcount])*212))-0.5)*  ((1-( abs(brighness_flare-0.5) )*2)+1)  )+0.5)*0.5)  * (1-brighness_flare)  )\n\n  +\n\n  (  (((((random((shotcount*823)+((seed+seed_offset_\[value shotcount])*212))-0.5)*  ((1-( abs(brighness_flare-0.5) )*2)+1)  )+0.5)*0.5)+0.5)  * (brighness_flare)  )\n  )\n  *1000\n)\n\n/1000"}}
    addUserKnob {26 ""}
    addUserKnob {26 _1 l "" +STARTLINE T "Chris Fryer | 2020\nupdated by Yorben Otto | 2024"}
   }
    Input {
     inputs 0
     name Input1
     xpos 426
     ypos -793
    }
    TimeOffset {
     time_offset {{(-floor(parent.decimal))*(DecimalTimeOffset1.decimal<0)}}
     time ""
     name TimeOffset1
     xpos 426
     ypos -674
    }
    Dot {
     name Dot6
     xpos 460
     ypos -635
    }
set N985bb700 [stack 0]
    Dot {
     name Dot5
     xpos 350
     ypos -635
    }
    Dot {
     name Dot7
     xpos 350
     ypos -365
    }
push $N985bb700
    Dot {
     name Dot1
     xpos 572
     ypos -635
    }
    TimeBlur {
     divisions 2
     shutter {{(parent.decimal-(floor(parent.decimal)))*2}}
     shutteroffset start
     shuttercustomoffset 0
     name TimeBlur1
     xpos 538
     ypos -558
    }
    Dot {
     name Dot2
     xpos 572
     ypos -490
    }
push $N985bb700
    TimeBlur {
     divisions 2
     shutter {{parent.decimal*2}}
     shutteroffset start
     shuttercustomoffset 0
     name TimeBlur8
     xpos 426
     ypos -556
    }
    Switch {
     inputs 2
     which {{parent.decimal<0}}
     name Switch1
     xpos 426
     ypos -494
    }
    Multiply {
     value {{parent.TimeBlur8.divisions}}
     name Multiply6
     xpos 426
     ypos -436
    }
    Merge2 {
     inputs 2
     operation from
     name Merge6
     xpos 426
     ypos -369
    }
set N985fd640 [stack 0]
    Output {
     name Output1
     xpos 426
     ypos -221
    }
push $N985fd640
push $N985fd640
    Viewer {
     inputs 2
     frame_range 1-100
     viewerProcess "sRGB (default)"
     name Viewer1
     xpos 675
     ypos -246
    }
   end_group
   NoTimeBlur {
    name NoTimeBlur6
    xpos -135
    ypos -608
   }
   Dot {
    name Dot21
    xpos -101
    ypos -449
   }
set Nb4e3aeb0 [stack 0]
   Dot {
    name Dot22
    xpos -245
    ypos -449
   }
   Multiply {
    value {{math_matrix.result_y_flash(parent.CTimeOffset7.ref)}}
    name Angle_reveal_top
    label TOP
    xpos -279
    ypos -371
   }
   Transform {
    scale {{0.05+(0.05*(((parent.DecimalTimeOffset1.decimal-0.5)*2)*ScaleVariationFlash))}}
    center {{root.width/2 x1015 2304} {root.height/2}}
    shutteroffset centred
    name random_size_top
    xpos -279
    ypos -136
   }
   Card3D {
    inputs 3
    rot_order ZYX
    translate {0 0 0}
    rotate {90 0 0}
    shutteroffset centred
    name cCard3D5
    tile_color 0x7b1d1dff
    xpos -279
    ypos 153
    addUserKnob {20 User l parent}
    addUserKnob {22 python_button l "set parent" t "select parent node, and press this button to set the selected node as parent" +INVISIBLE T "n = nuke.selectedNode()\['name'].getValue()\nnuke.thisNode()\['string'].setValue(n)" +STARTLINE}
    addUserKnob {1 string l parent +INVISIBLE}
    string null
    addUserKnob {3 ref l "ref frame"}
    ref 1015
   }
   Transform {
    translate {{"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].translate.x(ref)\}]"} {"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].translate.y(ref)\}]"}}
    rotate {{"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].rotate-\[value parent_gun].rotate(ref)\}]"}}
    scale {{"\[if \{\[value parent_gun]==\"null\"\} \{return 1\} \{return 1+(\[value parent_gun].scale-\[value parent_gun].scale(ref))\}]"}}
    center {{"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].center.x(ref)\}]"} {"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].center.y(ref)\}]"}}
    name GUNMatchMove
    label "\n"
    xpos -279
    ypos 247
    addUserKnob {20 User l parent}
    addUserKnob {3 ref}
    ref {{parent.CTimeOffset7.ref}}
   }
   Transform {
    translate {{"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].translate.x-\[value parent_env].translate.x(ref)\}]"} {"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].translate.y-\[value parent_env].translate.y(ref)\}]"}}
    rotate {{"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].rotate-\[value parent_env].rotate(ref)\}]"}}
    scale {{"\[if \{\[value parent_gun]==\"null\"\} \{return 1\} \{return 1+(\[value parent_env].scale-\[value parent_env].scale(ref))\}]"}}
    center {{"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].center.x(ref)\}]"} {"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].center.y(ref)\}]"}}
    motionblur {{(mode==2)*0.2}}
    shutter {{FlashMB*(0.175*0.3)}}
    shutteroffset centred
    name ENVMatchMove
    xpos -279
    ypos 321
    addUserKnob {20 User l parent}
    addUserKnob {3 ref}
    ref {{parent.CTimeOffset7.ref}}
   }
   Transform {
    translate {{"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return -((root.width/2)-(\[value parent_gun].center.x(1)+\[value parent_gun].translate.x(1)))\}]"} {"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return -((root.height/2)-(\[value parent_gun].center.y(1)+\[value parent_gun].translate.y(1)))\}]"}}
    shutteroffset centred
    name Transform_GUNMatchMove1
    label "alignment correction"
    xpos -279
    ypos 408
    addUserKnob {20 User l parent}
    addUserKnob {22 python_button l "set parent" t "select parent node, and press this button to set the selected node as parent" T "n = nuke.selectedNode()\['name'].getValue()\nnuke.thisNode()\['string'].setValue(n)" +STARTLINE}
    addUserKnob {1 string l parent}
    string Transform_MatchMove10
    addUserKnob {3 ref +INVISIBLE}
    ref {{parent.cCard3D_8.ref}}
   }
   Remove {
    operation keep
    channels rgb
    name Remove10
    xpos -279
    ypos 489
   }
push 0
   Switch {
    inputs 2
    which {{ActivateSideFlash(CTimeOffset7.ref)}}
    name Switch1
    label "keyframeable disable "
    xpos -279
    ypos 587
   }
push 0
   Switch {
    inputs 2
    which {{parent.Angle_reveal_top.value!=0}}
    name Switch4
    label "disable based on angle"
    xpos -279
    ypos 670
   }
   Dot {
    name Dot1
    xpos -245
    ypos 717
   }
push 0
push $N9857bd30
push 0
   Input {
    inputs 0
    name Front
    xpos -430
    ypos -1102
    number 1
   }
   TimeOffset {
    time_offset {{"shotnmbr==0 ? 0 : shot_\[value shotnmbr]-1"}}
    time ""
    name CTimeOffset8
    xpos -430
    ypos -840
    addUserKnob {20 User}
    addUserKnob {3 shotnmbr l "shot "}
    shotnmbr {{parent.CTimeOffset7.shotnmbr}}
   }
   Group {
    name DecimalTimeOffset
    tile_color 0xafa35dff
    label "random asset\n(based on brighness)"
    note_font "Bitstream Vera Sans Bold"
    xpos -430
    ypos -693
    addUserKnob {20 User}
    addUserKnob {7 decimal l "time offset (decimal)"}
    decimal {{"floor\n(\n  (\n  (  ((((random((shotcount*823)+((seed+seed_offset_\[value shotcount])*212))-0.5)*  ((1-( abs(brighness_flare-0.5) )*2)+1)  )+0.5)*0.5)  * (1-brighness_flare)  )\n\n  +\n\n  (  (((((random((shotcount*823)+((seed+seed_offset_\[value shotcount])*212))-0.5)*  ((1-( abs(brighness_flare-0.5) )*2)+1)  )+0.5)*0.5)+0.5)  * (brighness_flare)  )\n  )\n  *1000\n)\n\n/1000"}}
    addUserKnob {26 ""}
    addUserKnob {26 _1 l "" +STARTLINE T "Chris Fryer | 2020\nupdated by Yorben Otto | 2024"}
   }
    Input {
     inputs 0
     name Input1
     xpos 426
     ypos -793
    }
    TimeOffset {
     time_offset {{(-floor(parent.decimal))*(DecimalTimeOffset.decimal<0)}}
     time ""
     name TimeOffset1
     xpos 426
     ypos -674
    }
    Dot {
     name Dot6
     xpos 460
     ypos -635
    }
set Nb4eeaa10 [stack 0]
    Dot {
     name Dot5
     xpos 350
     ypos -635
    }
    Dot {
     name Dot7
     xpos 350
     ypos -365
    }
push $Nb4eeaa10
    Dot {
     name Dot1
     xpos 572
     ypos -635
    }
    TimeBlur {
     divisions 2
     shutter {{(parent.decimal-(floor(parent.decimal)))*2}}
     shutteroffset start
     shuttercustomoffset 0
     name TimeBlur1
     xpos 538
     ypos -558
    }
    Dot {
     name Dot2
     xpos 572
     ypos -490
    }
push $Nb4eeaa10
    TimeBlur {
     divisions 2
     shutter {{parent.decimal*2}}
     shutteroffset start
     shuttercustomoffset 0
     name TimeBlur8
     xpos 426
     ypos -556
    }
    Switch {
     inputs 2
     which {{parent.decimal<0}}
     name Switch1
     xpos 426
     ypos -494
    }
    Multiply {
     value {{parent.TimeBlur8.divisions}}
     name Multiply6
     xpos 426
     ypos -436
    }
    Merge2 {
     inputs 2
     operation from
     name Merge6
     xpos 426
     ypos -369
    }
set Nbc77d860 [stack 0]
    Output {
     name Output1
     xpos 426
     ypos -221
    }
push $Nbc77d860
push $Nbc77d860
    Viewer {
     inputs 2
     frame_range 1-100
     viewerProcess "sRGB (default)"
     name Viewer1
     xpos 675
     ypos -246
    }
   end_group
   NoTimeBlur {
    name NoTimeBlur7
    xpos -430
    ypos -617
   }
   Multiply {
    value {{math_matrix.result_x_flash(parent.CTimeOffset7.ref)}}
    name Angle_reveal_front
    label FRONT
    xpos -430
    ypos -375
   }
   Transform {
    scale {{0.05+(0.05*(((parent.DecimalTimeOffset1.decimal-0.5)*2)*ScaleVariationFlash))}}
    center {{root.width/2 x1015 2304} {root.height/2}}
    shutteroffset centred
    name random_size_front
    xpos -430
    ypos -134
   }
   Card3D {
    inputs 3
    rot_order ZYX
    translate {0 0 0}
    rotate {0 90 0}
    shutteroffset centred
    name cCard3D6
    tile_color 0x7b1d1dff
    xpos -430
    ypos 150
    addUserKnob {20 User l parent}
    addUserKnob {22 python_button l "set parent" t "select parent node, and press this button to set the selected node as parent" +INVISIBLE T "n = nuke.selectedNode()\['name'].getValue()\nnuke.thisNode()\['string'].setValue(n)" +STARTLINE}
    addUserKnob {1 string l parent +INVISIBLE}
    string null
    addUserKnob {3 ref l "ref frame"}
    ref 1015
   }
   Transform {
    translate {{"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].translate.x(ref)\}]"} {"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].translate.y(ref)\}]"}}
    rotate {{"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].rotate-\[value parent_gun].rotate(ref)\}]"}}
    scale {{"\[if \{\[value parent_gun]==\"null\"\} \{return 1\} \{return 1+(\[value parent_gun].scale-\[value parent_gun].scale(ref))\}]"}}
    center {{"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].center.x(ref)\}]"} {"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].center.y(ref)\}]"}}
    name GUNMatchMove2
    label "\n"
    xpos -430
    ypos 248
    addUserKnob {20 User l parent}
    addUserKnob {3 ref}
    ref {{parent.CTimeOffset7.ref}}
   }
   Transform {
    translate {{"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].translate.x-\[value parent_env].translate.x(ref)\}]"} {"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].translate.y-\[value parent_env].translate.y(ref)\}]"}}
    rotate {{"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].rotate-\[value parent_env].rotate(ref)\}]"}}
    scale {{"\[if \{\[value parent_gun]==\"null\"\} \{return 1\} \{return 1+(\[value parent_env].scale-\[value parent_env].scale(ref))\}]"}}
    center {{"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].center.x(ref)\}]"} {"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].center.y(ref)\}]"}}
    motionblur {{(mode==2)*0.2}}
    shutter {{FlashMB*(0.175*0.3)}}
    shutteroffset centred
    name ENVMatchMove2
    xpos -430
    ypos 320
    addUserKnob {20 User l parent}
    addUserKnob {3 ref}
    ref {{parent.CTimeOffset7.ref}}
   }
   Transform {
    translate {{"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return -((root.width/2)-(\[value parent_gun].center.x(1)+\[value parent_gun].translate.x(1)))\}]"} {"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return -((root.height/2)-(\[value parent_gun].center.y(1)+\[value parent_gun].translate.y(1)))\}]"}}
    shutteroffset centred
    name Transform_GUNMatchMove2
    label "alignment correction"
    xpos -430
    ypos 407
    addUserKnob {20 User l parent}
    addUserKnob {22 python_button l "set parent" t "select parent node, and press this button to set the selected node as parent" T "n = nuke.selectedNode()\['name'].getValue()\nnuke.thisNode()\['string'].setValue(n)" +STARTLINE}
    addUserKnob {1 string l parent}
    string Transform_MatchMove10
    addUserKnob {3 ref +INVISIBLE}
    ref {{parent.cCard3D_8.ref}}
   }
   Remove {
    operation keep
    channels rgb
    name Remove11
    xpos -430
    ypos 487
   }
push 0
   Switch {
    inputs 2
    which {{ActivateFrontFlash(CTimeOffset7.ref)}}
    name Switch7
    label "keyframeable disable "
    xpos -430
    ypos 586
   }
push 0
   Switch {
    inputs 2
    which {{parent.Angle_reveal_front.value!=0}}
    name Switch5
    label "disable based on angle"
    xpos -430
    ypos 670
   }
   Dot {
    name Dot2
    xpos -396
    ypos 749
   }
push $Nb4e3aeb0
   Multiply {
    value {{math_matrix.result_z_flash(parent.CTimeOffset7.ref)}}
    name Angle_reveal_side
    label SIDE
    xpos -135
    ypos -374
   }
   Transform {
    scale {{0.05+(0.05*(((parent.DecimalTimeOffset1.decimal-0.5)*2)*ScaleVariationFlash))}}
    center {{root.width/2 x1015 2304} {root.height/2}}
    shutteroffset centred
    name random_size_side
    xpos -135
    ypos -137
   }
   Card3D {
    translate {{"\[if \{\[exists  parent.parent.parent.input0]\} \{return \[value \[topnode parent.parent.parent.input0].name].translate.x(ref)\} \{return 0\}]"} {"\[if \{\[exists  parent.parent.parent.input0]\} \{return \[value \[topnode parent.parent.parent.input0].name].translate.y(ref)\} \{return 0\}]"} {"\[if \{\[exists  parent.parent.parent.input0]\} \{return \[value \[topnode parent.parent.parent.input0].name].translate.z(ref)\} \{return -1\}]"}}
    rotate {{"\[if \{\[exists  parent.parent.parent.input0]\} \{return \[value \[topnode parent.parent.parent.input0].name].rotate.x(ref)\} \{return 0\}]"} {"\[if \{\[exists  parent.parent.parent.input0]\} \{return \[value \[topnode parent.parent.parent.input0].name].rotate.y(ref)\} \{return 0\}]"} {"\[if \{\[exists  parent.parent.parent.input0]\} \{return \[value \[topnode parent.parent.parent.input0].name].rotate.z(ref)\} \{return 0\}]"}}
    scaling {{"\[if \{\[exists  parent.parent.parent.input0]\} \{return \[value \[topnode parent.parent.parent.input0].name].scaling.x(ref)\} \{return 1\}]"} {"\[if \{\[exists  parent.parent.parent.input0]\} \{return \[value \[topnode parent.parent.parent.input0].name].scaling.y(ref)\} \{return 1\}]"} {"\[if \{\[exists  parent.parent.parent.input0]\} \{return \[value \[topnode parent.parent.parent.input0].name].scaling.z(ref)\} \{return 1\}]"}}
    uniform_scale {{"\[if \{\[exists  parent.parent.parent.input0]\} \{return (\[value \[topnode parent.parent.parent.input0].name].uniform_scale(ref)*25)\} \{return 25\}]"}}
    shutteroffset centred
    name cCard3D_1
    tile_color 0x7b1d1dff
    label "ref frame: \[value ref]"
    xpos -135
    ypos 147
    addUserKnob {20 User l parent}
    addUserKnob {22 python_button l "set parent" t "select parent node, and press this button to set the selected node as parent" +INVISIBLE T "n = nuke.selectedNode()\['name'].getValue()\nnuke.thisNode()\['string'].setValue(n)" +STARTLINE}
    addUserKnob {1 string l parent +INVISIBLE}
    string null
    addUserKnob {3 id l "id number"}
    id {{parent.CTimeOffset7.shotnmbr}}
    addUserKnob {3 ref l "ref frame"}
    ref {{parent.CTimeOffset7.ref}}
   }
   Transform {
    translate {{"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].translate.x(ref)\}]"} {"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].translate.y(ref)\}]"}}
    rotate {{"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].rotate-\[value parent_gun].rotate(ref)\}]"}}
    scale {{"\[if \{\[value parent_gun]==\"null\"\} \{return 1\} \{return 1+(\[value parent_gun].scale-\[value parent_gun].scale(ref))\}]"}}
    center {{"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].center.x(ref)\}]"} {"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].center.y(ref)\}]"}}
    name GUNMatchMove1
    label "\n"
    xpos -135
    ypos 241
    addUserKnob {20 User l parent}
    addUserKnob {3 ref}
    ref {{parent.CTimeOffset7.ref}}
   }
   Transform {
    translate {{"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].translate.x-\[value parent_env].translate.x(ref)\}]"} {"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].translate.y-\[value parent_env].translate.y(ref)\}]"}}
    rotate {{"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].rotate-\[value parent_env].rotate(ref)\}]"}}
    scale {{"\[if \{\[value parent_gun]==\"null\"\} \{return 1\} \{return 1+(\[value parent_env].scale-\[value parent_env].scale(ref))\}]"}}
    center {{"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].center.x(ref)\}]"} {"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].center.y(ref)\}]"}}
    motionblur {{(mode==2)*0.2}}
    shutter {{FlashMB*(0.175*0.3)}}
    shutteroffset centred
    name ENVMatchMove1
    xpos -135
    ypos 317
    addUserKnob {20 User l parent}
    addUserKnob {3 ref}
    ref {{parent.CTimeOffset7.ref}}
   }
   Transform {
    translate {{"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return -((root.width/2)-(\[value parent_gun].center.x(1)+\[value parent_gun].translate.x(1)))\}]"} {"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return -((root.height/2)-(\[value parent_gun].center.y(1)+\[value parent_gun].translate.y(1)))\}]"}}
    shutteroffset centred
    name Transform_GUNMatchMove3
    label "alignment correction"
    xpos -135
    ypos 405
    addUserKnob {20 User l parent}
    addUserKnob {22 python_button l "set parent" t "select parent node, and press this button to set the selected node as parent" T "n = nuke.selectedNode()\['name'].getValue()\nnuke.thisNode()\['string'].setValue(n)" +STARTLINE}
    addUserKnob {1 string l parent}
    string Transform_MatchMove10
    addUserKnob {3 ref +INVISIBLE}
    ref {{parent.cCard3D_8.ref}}
   }
   Remove {
    operation keep
    channels rgb
    name Remove12
    xpos -135
    ypos 489
   }
push 0
   Switch {
    inputs 2
    which {{ActivateSideFlash(CTimeOffset7.ref)}}
    name Switch3
    label "keyframeable disable "
    xpos -135
    ypos 587
   }
push 0
   Switch {
    inputs 2
    which {{parent.Angle_reveal_side.value!=0}}
    name Switch6
    label "disable based on angle"
    xpos -135
    ypos 671
   }
   Merge2 {
    inputs 3+1
    operation max
    name Merge1
    xpos -135
    ypos 745
   }
   Merge2 {
    inputs 2
    operation plus
    bbox intersection
    name Merge6
    xpos -135
    ypos 1196
   }
push 0
   Switch {
    inputs 2
    which {{"shot_\[value count]==0?0:(EnableExtraFrames==1?floor(((frame>=shot_\[value count])+(frame<=(shot_\[value count]+(4*((mode==1)+(mode==2))))))/2):frame==shot_\[value count])"}}
    name cSwitch_3
    selected true
    xpos -135
    ypos 1354
    addUserKnob {20 User}
    addUserKnob {3 count l "shot number"}
    count {{parent.CTimeOffset7.shotnmbr}}
   }
   Output {
    name Output1
    xpos -135
    ypos 1861
   }
  end_group
push $N4b6f4980
push $N5edeff50
  Group {
   inputs 2
   name gunshot8
   label "shot: \[value shotcount]\non frame: \[value shot_\[value shotcount]]\n"
   xpos 9251
   ypos -814
   addUserKnob {20 User}
   addUserKnob {3 shotcount l shot}
   shotcount 8
   addUserKnob {3 shotstart l frame +INVISIBLE}
   shotstart {{"shotcount==0 ? 0 : shot\[value shotcount]-1"}}
  }
   BackdropNode {
    inputs 0
    name BackdropNode3
    knobChanged "try:\n    listenedKnobs = \['text', 'position', 'name']\n    node = nuke.thisNode()\n    name = node.knob('name').value()\n    text = node.knob('text').value()\n    position = node.knob('position').value()\n    position = \"<\" + position + \">\"\n    label = node.knob('label').value()\n    \n    if nuke.thisKnob().name() in listenedKnobs:\n        if text == \"\":\n            if node.knob('position').value() == \"left\":\n                node.knob('label').setValue()\n            else:\n                node.knob('label').setValue(position + name)\n        else:\n            if node.knob('position').value() == \"left\":\n                node.knob('label').setValue(text)\n            else:\n                node.knob('label').setValue(position + text)\n                \n    elif nuke.thisKnob().name() == 'font_size':\n        fontSize = node.knob('font_size').value()\n        node.knob('note_font_size').setValue(fontSize)\nexcept:\n    pass"
    tile_color 0x232323ff
    label "<Left><h2> Gunshot"
    note_font_size 31.5
    xpos -698
    ypos -924
    bdwidth 1057
    bdheight 2343
    addUserKnob {20 F_VFX l BackdropNode}
    addUserKnob {43 text l Text}
    text "<h2> Gunshot"
    addUserKnob {7 font_size l "Font Size" R 10 100}
    font_size 31.5
    addUserKnob {4 position l "" -STARTLINE M {Left Center}}
    addUserKnob {26 S01 l " " T " "}
    addUserKnob {22 grow l " <img src=\"F_scalep.png\">" -STARTLINE T "n=nuke.thisNode()\n\ndef grow(node=None,step=50):\n    try:\n        if not node:\n            n=nuke.selectedNode()\n        else:\n            n=node\n            n\['xpos'].setValue(n\['xpos'].getValue()-step)\n            n\['ypos'].setValue(n\['ypos'].getValue()-step)\n            n\['bdwidth'].setValue(n\['bdwidth'].getValue()+step*2)\n            n\['bdheight'].setValue(n\['bdheight'].getValue()+step*2)\n    except:\n        pass\ngrow(n,50)"}
    addUserKnob {22 shrink l " <img src=\"F_scalem.png\">" -STARTLINE T "n=nuke.thisNode()\n\ndef shrink(node=None,step=50):\n    try:\n        if not node:\n            n=nuke.selectedNode()\n        else:\n            n=node\n            n\['xpos'].setValue(n\['xpos'].getValue()+step)\n            n\['ypos'].setValue(n\['ypos'].getValue()+step)\n            n\['bdwidth'].setValue(n\['bdwidth'].getValue()-step*2)\n            n\['bdheight'].setValue(n\['bdheight'].getValue()-step*2)\n    except:\n        pass\nshrink(n,50)"}
    addUserKnob {22 colorandom l " <img src=\"ColorBars.png\">" -STARTLINE T "import colorsys, random\nn=nuke.thisNode()\nR,G,B= colorsys.hsv_to_rgb(random.random(),.1+random.random()*.15,.15+random.random()*.15)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ) )"}
    addUserKnob {22 darkgrey l "<font color=\"#232323\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.0, 0.0, 0.14]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 lightgrey l "<font color=\"#383838\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.0, 0.0, 0.22]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 red l "<font color=\"#8c3838\" size=6>■</font>" T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.0, 0.6, 0.55]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n" +STARTLINE}
    addUserKnob {22 orange l "<font color=\"#b28e59\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.1, 0.5, 0.7]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 yellow l "<font color=\"#ccc766\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.16, 0.5, 0.8]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 green l "<font color=\"#5d995b\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.33, 0.4, 0.6]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 cyan l "<font color=\"#72998f\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.46, 0.25, 0.6]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 blue l "<font color=\"#59687f\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.6, 0.3, 0.5]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 darkblue l "<font color=\"#63628c\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.67, 0.3, 0.55]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 magenta l "<font color=\"#927a99\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.8, 0.2, 0.6]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 pink l "<font color=\"#997a89\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.92, 0.2, 0.6]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {26 S02 l " " T " "}
    addUserKnob {26 Ftools l "" +STARTLINE T "<font color=\"#1C1C1C\"> v1.2 - Franklin VFX - 2018"}
   }
   BackdropNode {
    inputs 0
    name BackdropNode1
    knobChanged "try:\n    listenedKnobs = \['text', 'position', 'name']\n    node = nuke.thisNode()\n    name = node.knob('name').value()\n    text = node.knob('text').value()\n    position = node.knob('position').value()\n    position = \"<\" + position + \">\"\n    label = node.knob('label').value()\n    \n    if nuke.thisKnob().name() in listenedKnobs:\n        if text == \"\":\n            if node.knob('position').value() == \"left\":\n                node.knob('label').setValue()\n            else:\n                node.knob('label').setValue(position + name)\n        else:\n            if node.knob('position').value() == \"left\":\n                node.knob('label').setValue(text)\n            else:\n                node.knob('label').setValue(position + text)\n                \n    elif nuke.thisKnob().name() == 'font_size':\n        fontSize = node.knob('font_size').value()\n        node.knob('note_font_size').setValue(fontSize)\nexcept:\n    pass"
    tile_color 0x927a99ff
    note_font_size 50
    xpos -460
    ypos -257
    bdwidth 435
    bdheight 786
    z_order 1
    addUserKnob {20 F_VFX l BackdropNode}
    addUserKnob {43 text l Text}
    addUserKnob {7 font_size l "Font Size" R 10 100}
    font_size 50
    addUserKnob {4 position l "" -STARTLINE M {Left Center}}
    addUserKnob {26 S01 l " " T " "}
    addUserKnob {22 grow l " <img src=\"F_scalep.png\">" -STARTLINE T "n=nuke.thisNode()\n\ndef grow(node=None,step=50):\n    try:\n        if not node:\n            n=nuke.selectedNode()\n        else:\n            n=node\n            n\['xpos'].setValue(n\['xpos'].getValue()-step)\n            n\['ypos'].setValue(n\['ypos'].getValue()-step)\n            n\['bdwidth'].setValue(n\['bdwidth'].getValue()+step*2)\n            n\['bdheight'].setValue(n\['bdheight'].getValue()+step*2)\n    except:\n        pass\ngrow(n,50)"}
    addUserKnob {22 shrink l " <img src=\"F_scalem.png\">" -STARTLINE T "n=nuke.thisNode()\n\ndef shrink(node=None,step=50):\n    try:\n        if not node:\n            n=nuke.selectedNode()\n        else:\n            n=node\n            n\['xpos'].setValue(n\['xpos'].getValue()+step)\n            n\['ypos'].setValue(n\['ypos'].getValue()+step)\n            n\['bdwidth'].setValue(n\['bdwidth'].getValue()-step*2)\n            n\['bdheight'].setValue(n\['bdheight'].getValue()-step*2)\n    except:\n        pass\nshrink(n,50)"}
    addUserKnob {22 colorandom l " <img src=\"ColorBars.png\">" -STARTLINE T "import colorsys, random\nn=nuke.thisNode()\nR,G,B= colorsys.hsv_to_rgb(random.random(),.1+random.random()*.15,.15+random.random()*.15)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ) )"}
    addUserKnob {22 darkgrey l "<font color=\"#232323\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.0, 0.0, 0.14]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 lightgrey l "<font color=\"#383838\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.0, 0.0, 0.22]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 red l "<font color=\"#8c3838\" size=6>■</font>" T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.0, 0.6, 0.55]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n" +STARTLINE}
    addUserKnob {22 orange l "<font color=\"#b28e59\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.1, 0.5, 0.7]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 yellow l "<font color=\"#ccc766\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.16, 0.5, 0.8]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 green l "<font color=\"#5d995b\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.33, 0.4, 0.6]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 cyan l "<font color=\"#72998f\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.46, 0.25, 0.6]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 blue l "<font color=\"#59687f\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.6, 0.3, 0.5]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 darkblue l "<font color=\"#63628c\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.67, 0.3, 0.55]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 magenta l "<font color=\"#927a99\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.8, 0.2, 0.6]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 pink l "<font color=\"#997a89\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.92, 0.2, 0.6]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {26 S02 l " " T " "}
    addUserKnob {26 Ftools l "" +STARTLINE T "<font color=\"#1C1C1C\"> v1.2 - Franklin VFX - 2018"}
   }
   Constant {
    inputs 0
    channels rgb
    name Constant4
    xpos -648
    ypos 987
   }
   AdjBBox {
    numpixels {{size_bbox}}
    name AdjBBox4
    xpos -648
    ypos 1120
   }
   Dot {
    name Dot19
    xpos -614
    ypos 1200
   }
   Axis3 {
    inputs 0
    useMatrix true
    matrix {
        {{parent.cCard3D_1.matrix} {parent.cCard3D_1.matrix} {parent.cCard3D_1.matrix} {parent.cCard3D_1.matrix}}
        {{parent.cCard3D_1.matrix} {parent.cCard3D_1.matrix} {parent.cCard3D_1.matrix} {parent.cCard3D_1.matrix}}
        {{parent.cCard3D_1.matrix} {parent.cCard3D_1.matrix} {parent.cCard3D_1.matrix} {parent.cCard3D_1.matrix}}
        {{parent.cCard3D_1.matrix} {parent.cCard3D_1.matrix} {parent.cCard3D_1.matrix} {parent.cCard3D_1.matrix}}
      }
    name Axis3
    xpos -207
    ypos 48
   }
set Nbc59a830 [stack 0]
push 0
   Input {
    inputs 0
    name Side
    xpos -135
    ypos -1101
   }
   TimeOffset {
    time_offset {{"shotnmbr==0 ? 0 : shot_\[value shotnmbr]-1"}}
    time ""
    name CTimeOffset7
    label "shot: \[value shotnmbr]\non frame \[value time_offset]"
    xpos -135
    ypos -853
    addUserKnob {20 User}
    addUserKnob {3 shotnmbr l "shot "}
    shotnmbr {{shotcount}}
    addUserKnob {3 ref}
    ref {{time_offset+1}}
   }
   Group {
    name DecimalTimeOffset1
    tile_color 0xafa35dff
    label "random asset\n(based on brighness)"
    note_font "Bitstream Vera Sans Bold"
    xpos -135
    ypos -690
    addUserKnob {20 User}
    addUserKnob {7 decimal l "time offset (decimal)"}
    decimal {{"floor\n(\n  (\n  (  ((((random((shotcount*823)+((seed+seed_offset_\[value shotcount])*212))-0.5)*  ((1-( abs(brighness_flare-0.5) )*2)+1)  )+0.5)*0.5)  * (1-brighness_flare)  )\n\n  +\n\n  (  (((((random((shotcount*823)+((seed+seed_offset_\[value shotcount])*212))-0.5)*  ((1-( abs(brighness_flare-0.5) )*2)+1)  )+0.5)*0.5)+0.5)  * (brighness_flare)  )\n  )\n  *1000\n)\n\n/1000"}}
    addUserKnob {26 ""}
    addUserKnob {26 _1 l "" +STARTLINE T "Chris Fryer | 2020\nupdated by Yorben Otto | 2024"}
   }
    Input {
     inputs 0
     name Input1
     xpos 426
     ypos -793
    }
    TimeOffset {
     time_offset {{(-floor(parent.decimal))*(DecimalTimeOffset1.decimal<0)}}
     time ""
     name TimeOffset1
     xpos 426
     ypos -674
    }
    Dot {
     name Dot6
     xpos 460
     ypos -635
    }
set Nbc5da200 [stack 0]
    Dot {
     name Dot5
     xpos 350
     ypos -635
    }
    Dot {
     name Dot7
     xpos 350
     ypos -365
    }
push $Nbc5da200
    Dot {
     name Dot1
     xpos 572
     ypos -635
    }
    TimeBlur {
     divisions 2
     shutter {{(parent.decimal-(floor(parent.decimal)))*2}}
     shutteroffset start
     shuttercustomoffset 0
     name TimeBlur1
     xpos 538
     ypos -558
    }
    Dot {
     name Dot2
     xpos 572
     ypos -490
    }
push $Nbc5da200
    TimeBlur {
     divisions 2
     shutter {{parent.decimal*2}}
     shutteroffset start
     shuttercustomoffset 0
     name TimeBlur8
     xpos 426
     ypos -556
    }
    Switch {
     inputs 2
     which {{parent.decimal<0}}
     name Switch1
     xpos 426
     ypos -494
    }
    Multiply {
     value {{parent.TimeBlur8.divisions}}
     name Multiply6
     xpos 426
     ypos -436
    }
    Merge2 {
     inputs 2
     operation from
     name Merge6
     xpos 426
     ypos -369
    }
set Nbc61c140 [stack 0]
    Output {
     name Output1
     xpos 426
     ypos -221
    }
push $Nbc61c140
push $Nbc61c140
    Viewer {
     inputs 2
     frame_range 1-100
     viewerProcess "sRGB (default)"
     name Viewer1
     xpos 675
     ypos -246
    }
   end_group
   NoTimeBlur {
    name NoTimeBlur6
    xpos -135
    ypos -608
   }
   Dot {
    name Dot21
    xpos -101
    ypos -449
   }
set Nbc4ca9c0 [stack 0]
   Dot {
    name Dot22
    xpos -245
    ypos -449
   }
   Multiply {
    value {{math_matrix.result_y_flash(parent.CTimeOffset7.ref)}}
    name Angle_reveal_top
    label TOP
    xpos -279
    ypos -371
   }
   Transform {
    scale {{0.05+(0.05*(((parent.DecimalTimeOffset1.decimal-0.5)*2)*ScaleVariationFlash))}}
    center {{root.width/2 x1015 2304} {root.height/2}}
    shutteroffset centred
    name random_size_top
    xpos -279
    ypos -136
   }
   Card3D {
    inputs 3
    rot_order ZYX
    translate {0 0 0}
    rotate {90 0 0}
    shutteroffset centred
    name cCard3D5
    tile_color 0x7b1d1dff
    xpos -279
    ypos 153
    addUserKnob {20 User l parent}
    addUserKnob {22 python_button l "set parent" t "select parent node, and press this button to set the selected node as parent" +INVISIBLE T "n = nuke.selectedNode()\['name'].getValue()\nnuke.thisNode()\['string'].setValue(n)" +STARTLINE}
    addUserKnob {1 string l parent +INVISIBLE}
    string null
    addUserKnob {3 ref l "ref frame"}
    ref 1015
   }
   Transform {
    translate {{"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].translate.x(ref)\}]"} {"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].translate.y(ref)\}]"}}
    rotate {{"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].rotate-\[value parent_gun].rotate(ref)\}]"}}
    scale {{"\[if \{\[value parent_gun]==\"null\"\} \{return 1\} \{return 1+(\[value parent_gun].scale-\[value parent_gun].scale(ref))\}]"}}
    center {{"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].center.x(ref)\}]"} {"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].center.y(ref)\}]"}}
    name GUNMatchMove
    label "\n"
    xpos -279
    ypos 247
    addUserKnob {20 User l parent}
    addUserKnob {3 ref}
    ref {{parent.CTimeOffset7.ref}}
   }
   Transform {
    translate {{"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].translate.x-\[value parent_env].translate.x(ref)\}]"} {"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].translate.y-\[value parent_env].translate.y(ref)\}]"}}
    rotate {{"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].rotate-\[value parent_env].rotate(ref)\}]"}}
    scale {{"\[if \{\[value parent_gun]==\"null\"\} \{return 1\} \{return 1+(\[value parent_env].scale-\[value parent_env].scale(ref))\}]"}}
    center {{"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].center.x(ref)\}]"} {"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].center.y(ref)\}]"}}
    motionblur {{(mode==2)*0.2}}
    shutter {{FlashMB*(0.175*0.3)}}
    shutteroffset centred
    name ENVMatchMove
    xpos -279
    ypos 321
    addUserKnob {20 User l parent}
    addUserKnob {3 ref}
    ref {{parent.CTimeOffset7.ref}}
   }
   Transform {
    translate {{"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return -((root.width/2)-(\[value parent_gun].center.x(1)+\[value parent_gun].translate.x(1)))\}]"} {"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return -((root.height/2)-(\[value parent_gun].center.y(1)+\[value parent_gun].translate.y(1)))\}]"}}
    shutteroffset centred
    name Transform_GUNMatchMove1
    label "alignment correction"
    xpos -279
    ypos 408
    addUserKnob {20 User l parent}
    addUserKnob {22 python_button l "set parent" t "select parent node, and press this button to set the selected node as parent" T "n = nuke.selectedNode()\['name'].getValue()\nnuke.thisNode()\['string'].setValue(n)" +STARTLINE}
    addUserKnob {1 string l parent}
    string Transform_MatchMove10
    addUserKnob {3 ref +INVISIBLE}
    ref {{parent.cCard3D_8.ref}}
   }
   Remove {
    operation keep
    channels rgb
    name Remove10
    xpos -279
    ypos 489
   }
push 0
   Switch {
    inputs 2
    which {{ActivateSideFlash(CTimeOffset7.ref)}}
    name Switch1
    label "keyframeable disable "
    xpos -279
    ypos 587
   }
push 0
   Switch {
    inputs 2
    which {{parent.Angle_reveal_top.value!=0}}
    name Switch4
    label "disable based on angle"
    xpos -279
    ypos 670
   }
   Dot {
    name Dot1
    xpos -245
    ypos 717
   }
push 0
push $Nbc59a830
push 0
   Input {
    inputs 0
    name Front
    xpos -430
    ypos -1102
    number 1
   }
   TimeOffset {
    time_offset {{"shotnmbr==0 ? 0 : shot_\[value shotnmbr]-1"}}
    time ""
    name CTimeOffset8
    xpos -430
    ypos -840
    addUserKnob {20 User}
    addUserKnob {3 shotnmbr l "shot "}
    shotnmbr {{parent.CTimeOffset7.shotnmbr}}
   }
   Group {
    name DecimalTimeOffset
    tile_color 0xafa35dff
    label "random asset\n(based on brighness)"
    note_font "Bitstream Vera Sans Bold"
    xpos -430
    ypos -693
    addUserKnob {20 User}
    addUserKnob {7 decimal l "time offset (decimal)"}
    decimal {{"floor\n(\n  (\n  (  ((((random((shotcount*823)+((seed+seed_offset_\[value shotcount])*212))-0.5)*  ((1-( abs(brighness_flare-0.5) )*2)+1)  )+0.5)*0.5)  * (1-brighness_flare)  )\n\n  +\n\n  (  (((((random((shotcount*823)+((seed+seed_offset_\[value shotcount])*212))-0.5)*  ((1-( abs(brighness_flare-0.5) )*2)+1)  )+0.5)*0.5)+0.5)  * (brighness_flare)  )\n  )\n  *1000\n)\n\n/1000"}}
    addUserKnob {26 ""}
    addUserKnob {26 _1 l "" +STARTLINE T "Chris Fryer | 2020\nupdated by Yorben Otto | 2024"}
   }
    Input {
     inputs 0
     name Input1
     xpos 426
     ypos -793
    }
    TimeOffset {
     time_offset {{(-floor(parent.decimal))*(DecimalTimeOffset.decimal<0)}}
     time ""
     name TimeOffset1
     xpos 426
     ypos -674
    }
    Dot {
     name Dot6
     xpos 460
     ypos -635
    }
set Nbc38a440 [stack 0]
    Dot {
     name Dot5
     xpos 350
     ypos -635
    }
    Dot {
     name Dot7
     xpos 350
     ypos -365
    }
push $Nbc38a440
    Dot {
     name Dot1
     xpos 572
     ypos -635
    }
    TimeBlur {
     divisions 2
     shutter {{(parent.decimal-(floor(parent.decimal)))*2}}
     shutteroffset start
     shuttercustomoffset 0
     name TimeBlur1
     xpos 538
     ypos -558
    }
    Dot {
     name Dot2
     xpos 572
     ypos -490
    }
push $Nbc38a440
    TimeBlur {
     divisions 2
     shutter {{parent.decimal*2}}
     shutteroffset start
     shuttercustomoffset 0
     name TimeBlur8
     xpos 426
     ypos -556
    }
    Switch {
     inputs 2
     which {{parent.decimal<0}}
     name Switch1
     xpos 426
     ypos -494
    }
    Multiply {
     value {{parent.TimeBlur8.divisions}}
     name Multiply6
     xpos 426
     ypos -436
    }
    Merge2 {
     inputs 2
     operation from
     name Merge6
     xpos 426
     ypos -369
    }
set Nbc3cc380 [stack 0]
    Output {
     name Output1
     xpos 426
     ypos -221
    }
push $Nbc3cc380
push $Nbc3cc380
    Viewer {
     inputs 2
     frame_range 1-100
     viewerProcess "sRGB (default)"
     name Viewer1
     xpos 675
     ypos -246
    }
   end_group
   NoTimeBlur {
    name NoTimeBlur7
    xpos -430
    ypos -617
   }
   Multiply {
    value {{math_matrix.result_x_flash(parent.CTimeOffset7.ref)}}
    name Angle_reveal_front
    label FRONT
    xpos -430
    ypos -375
   }
   Transform {
    scale {{0.05+(0.05*(((parent.DecimalTimeOffset1.decimal-0.5)*2)*ScaleVariationFlash))}}
    center {{root.width/2 x1015 2304} {root.height/2}}
    shutteroffset centred
    name random_size_front
    xpos -430
    ypos -134
   }
   Card3D {
    inputs 3
    rot_order ZYX
    translate {0 0 0}
    rotate {0 90 0}
    shutteroffset centred
    name cCard3D6
    tile_color 0x7b1d1dff
    xpos -430
    ypos 150
    addUserKnob {20 User l parent}
    addUserKnob {22 python_button l "set parent" t "select parent node, and press this button to set the selected node as parent" +INVISIBLE T "n = nuke.selectedNode()\['name'].getValue()\nnuke.thisNode()\['string'].setValue(n)" +STARTLINE}
    addUserKnob {1 string l parent +INVISIBLE}
    string null
    addUserKnob {3 ref l "ref frame"}
    ref 1015
   }
   Transform {
    translate {{"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].translate.x(ref)\}]"} {"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].translate.y(ref)\}]"}}
    rotate {{"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].rotate-\[value parent_gun].rotate(ref)\}]"}}
    scale {{"\[if \{\[value parent_gun]==\"null\"\} \{return 1\} \{return 1+(\[value parent_gun].scale-\[value parent_gun].scale(ref))\}]"}}
    center {{"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].center.x(ref)\}]"} {"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].center.y(ref)\}]"}}
    name GUNMatchMove2
    label "\n"
    xpos -430
    ypos 248
    addUserKnob {20 User l parent}
    addUserKnob {3 ref}
    ref {{parent.CTimeOffset7.ref}}
   }
   Transform {
    translate {{"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].translate.x-\[value parent_env].translate.x(ref)\}]"} {"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].translate.y-\[value parent_env].translate.y(ref)\}]"}}
    rotate {{"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].rotate-\[value parent_env].rotate(ref)\}]"}}
    scale {{"\[if \{\[value parent_gun]==\"null\"\} \{return 1\} \{return 1+(\[value parent_env].scale-\[value parent_env].scale(ref))\}]"}}
    center {{"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].center.x(ref)\}]"} {"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].center.y(ref)\}]"}}
    motionblur {{(mode==2)*0.2}}
    shutter {{FlashMB*(0.175*0.3)}}
    shutteroffset centred
    name ENVMatchMove2
    xpos -430
    ypos 320
    addUserKnob {20 User l parent}
    addUserKnob {3 ref}
    ref {{parent.CTimeOffset7.ref}}
   }
   Transform {
    translate {{"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return -((root.width/2)-(\[value parent_gun].center.x(1)+\[value parent_gun].translate.x(1)))\}]"} {"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return -((root.height/2)-(\[value parent_gun].center.y(1)+\[value parent_gun].translate.y(1)))\}]"}}
    shutteroffset centred
    name Transform_GUNMatchMove2
    label "alignment correction"
    xpos -430
    ypos 407
    addUserKnob {20 User l parent}
    addUserKnob {22 python_button l "set parent" t "select parent node, and press this button to set the selected node as parent" T "n = nuke.selectedNode()\['name'].getValue()\nnuke.thisNode()\['string'].setValue(n)" +STARTLINE}
    addUserKnob {1 string l parent}
    string Transform_MatchMove10
    addUserKnob {3 ref +INVISIBLE}
    ref {{parent.cCard3D_8.ref}}
   }
   Remove {
    operation keep
    channels rgb
    name Remove11
    xpos -430
    ypos 487
   }
push 0
   Switch {
    inputs 2
    which {{ActivateFrontFlash(CTimeOffset7.ref)}}
    name Switch7
    label "keyframeable disable "
    xpos -430
    ypos 586
   }
push 0
   Switch {
    inputs 2
    which {{parent.Angle_reveal_front.value!=0}}
    name Switch5
    label "disable based on angle"
    xpos -430
    ypos 670
   }
   Dot {
    name Dot2
    xpos -396
    ypos 749
   }
push $Nbc4ca9c0
   Multiply {
    value {{math_matrix.result_z_flash(parent.CTimeOffset7.ref)}}
    name Angle_reveal_side
    label SIDE
    xpos -135
    ypos -374
   }
   Transform {
    scale {{0.05+(0.05*(((parent.DecimalTimeOffset1.decimal-0.5)*2)*ScaleVariationFlash))}}
    center {{root.width/2 x1015 2304} {root.height/2}}
    shutteroffset centred
    name random_size_side
    xpos -135
    ypos -137
   }
   Card3D {
    translate {{"\[if \{\[exists  parent.parent.parent.input0]\} \{return \[value \[topnode parent.parent.parent.input0].name].translate.x(ref)\} \{return 0\}]"} {"\[if \{\[exists  parent.parent.parent.input0]\} \{return \[value \[topnode parent.parent.parent.input0].name].translate.y(ref)\} \{return 0\}]"} {"\[if \{\[exists  parent.parent.parent.input0]\} \{return \[value \[topnode parent.parent.parent.input0].name].translate.z(ref)\} \{return -1\}]"}}
    rotate {{"\[if \{\[exists  parent.parent.parent.input0]\} \{return \[value \[topnode parent.parent.parent.input0].name].rotate.x(ref)\} \{return 0\}]"} {"\[if \{\[exists  parent.parent.parent.input0]\} \{return \[value \[topnode parent.parent.parent.input0].name].rotate.y(ref)\} \{return 0\}]"} {"\[if \{\[exists  parent.parent.parent.input0]\} \{return \[value \[topnode parent.parent.parent.input0].name].rotate.z(ref)\} \{return 0\}]"}}
    scaling {{"\[if \{\[exists  parent.parent.parent.input0]\} \{return \[value \[topnode parent.parent.parent.input0].name].scaling.x(ref)\} \{return 1\}]"} {"\[if \{\[exists  parent.parent.parent.input0]\} \{return \[value \[topnode parent.parent.parent.input0].name].scaling.y(ref)\} \{return 1\}]"} {"\[if \{\[exists  parent.parent.parent.input0]\} \{return \[value \[topnode parent.parent.parent.input0].name].scaling.z(ref)\} \{return 1\}]"}}
    uniform_scale {{"\[if \{\[exists  parent.parent.parent.input0]\} \{return (\[value \[topnode parent.parent.parent.input0].name].uniform_scale(ref)*25)\} \{return 25\}]"}}
    shutteroffset centred
    name cCard3D_1
    tile_color 0x7b1d1dff
    label "ref frame: \[value ref]"
    xpos -135
    ypos 147
    addUserKnob {20 User l parent}
    addUserKnob {22 python_button l "set parent" t "select parent node, and press this button to set the selected node as parent" +INVISIBLE T "n = nuke.selectedNode()\['name'].getValue()\nnuke.thisNode()\['string'].setValue(n)" +STARTLINE}
    addUserKnob {1 string l parent +INVISIBLE}
    string null
    addUserKnob {3 id l "id number"}
    id {{parent.CTimeOffset7.shotnmbr}}
    addUserKnob {3 ref l "ref frame"}
    ref {{parent.CTimeOffset7.ref}}
   }
   Transform {
    translate {{"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].translate.x(ref)\}]"} {"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].translate.y(ref)\}]"}}
    rotate {{"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].rotate-\[value parent_gun].rotate(ref)\}]"}}
    scale {{"\[if \{\[value parent_gun]==\"null\"\} \{return 1\} \{return 1+(\[value parent_gun].scale-\[value parent_gun].scale(ref))\}]"}}
    center {{"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].center.x(ref)\}]"} {"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].center.y(ref)\}]"}}
    name GUNMatchMove1
    label "\n"
    xpos -135
    ypos 241
    addUserKnob {20 User l parent}
    addUserKnob {3 ref}
    ref {{parent.CTimeOffset7.ref}}
   }
   Transform {
    translate {{"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].translate.x-\[value parent_env].translate.x(ref)\}]"} {"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].translate.y-\[value parent_env].translate.y(ref)\}]"}}
    rotate {{"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].rotate-\[value parent_env].rotate(ref)\}]"}}
    scale {{"\[if \{\[value parent_gun]==\"null\"\} \{return 1\} \{return 1+(\[value parent_env].scale-\[value parent_env].scale(ref))\}]"}}
    center {{"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].center.x(ref)\}]"} {"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].center.y(ref)\}]"}}
    motionblur {{(mode==2)*0.2}}
    shutter {{FlashMB*(0.175*0.3)}}
    shutteroffset centred
    name ENVMatchMove1
    xpos -135
    ypos 317
    addUserKnob {20 User l parent}
    addUserKnob {3 ref}
    ref {{parent.CTimeOffset7.ref}}
   }
   Transform {
    translate {{"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return -((root.width/2)-(\[value parent_gun].center.x(1)+\[value parent_gun].translate.x(1)))\}]"} {"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return -((root.height/2)-(\[value parent_gun].center.y(1)+\[value parent_gun].translate.y(1)))\}]"}}
    shutteroffset centred
    name Transform_GUNMatchMove3
    label "alignment correction"
    xpos -135
    ypos 405
    addUserKnob {20 User l parent}
    addUserKnob {22 python_button l "set parent" t "select parent node, and press this button to set the selected node as parent" T "n = nuke.selectedNode()\['name'].getValue()\nnuke.thisNode()\['string'].setValue(n)" +STARTLINE}
    addUserKnob {1 string l parent}
    string Transform_MatchMove10
    addUserKnob {3 ref +INVISIBLE}
    ref {{parent.cCard3D_8.ref}}
   }
   Remove {
    operation keep
    channels rgb
    name Remove12
    xpos -135
    ypos 489
   }
push 0
   Switch {
    inputs 2
    which {{ActivateSideFlash(CTimeOffset7.ref)}}
    name Switch3
    label "keyframeable disable "
    xpos -135
    ypos 587
   }
push 0
   Switch {
    inputs 2
    which {{parent.Angle_reveal_side.value!=0}}
    name Switch6
    label "disable based on angle"
    xpos -135
    ypos 671
   }
   Merge2 {
    inputs 3+1
    operation max
    name Merge1
    xpos -135
    ypos 745
   }
   Merge2 {
    inputs 2
    operation plus
    bbox intersection
    name Merge6
    xpos -135
    ypos 1196
   }
push 0
   Switch {
    inputs 2
    which {{"shot_\[value count]==0?0:(EnableExtraFrames==1?floor(((frame>=shot_\[value count])+(frame<=(shot_\[value count]+(4*((mode==1)+(mode==2))))))/2):frame==shot_\[value count])"}}
    name cSwitch_3
    selected true
    xpos -135
    ypos 1354
    addUserKnob {20 User}
    addUserKnob {3 count l "shot number"}
    count {{parent.CTimeOffset7.shotnmbr}}
   }
   Output {
    name Output1
    xpos -135
    ypos 1861
   }
  end_group
push $N570f6080
push $N4ddf0630
  Group {
   inputs 2
   name gunshot9
   label "shot: \[value shotcount]\non frame: \[value shot_\[value shotcount]]\n"
   xpos 9488
   ypos -814
   addUserKnob {20 User}
   addUserKnob {3 shotcount l shot}
   shotcount 9
   addUserKnob {3 shotstart l frame +INVISIBLE}
   shotstart {{"shotcount==0 ? 0 : shot\[value shotcount]-1"}}
  }
   BackdropNode {
    inputs 0
    name BackdropNode3
    knobChanged "try:\n    listenedKnobs = \['text', 'position', 'name']\n    node = nuke.thisNode()\n    name = node.knob('name').value()\n    text = node.knob('text').value()\n    position = node.knob('position').value()\n    position = \"<\" + position + \">\"\n    label = node.knob('label').value()\n    \n    if nuke.thisKnob().name() in listenedKnobs:\n        if text == \"\":\n            if node.knob('position').value() == \"left\":\n                node.knob('label').setValue()\n            else:\n                node.knob('label').setValue(position + name)\n        else:\n            if node.knob('position').value() == \"left\":\n                node.knob('label').setValue(text)\n            else:\n                node.knob('label').setValue(position + text)\n                \n    elif nuke.thisKnob().name() == 'font_size':\n        fontSize = node.knob('font_size').value()\n        node.knob('note_font_size').setValue(fontSize)\nexcept:\n    pass"
    tile_color 0x232323ff
    label "<Left><h2> Gunshot"
    note_font_size 31.5
    xpos -698
    ypos -924
    bdwidth 1057
    bdheight 2343
    addUserKnob {20 F_VFX l BackdropNode}
    addUserKnob {43 text l Text}
    text "<h2> Gunshot"
    addUserKnob {7 font_size l "Font Size" R 10 100}
    font_size 31.5
    addUserKnob {4 position l "" -STARTLINE M {Left Center}}
    addUserKnob {26 S01 l " " T " "}
    addUserKnob {22 grow l " <img src=\"F_scalep.png\">" -STARTLINE T "n=nuke.thisNode()\n\ndef grow(node=None,step=50):\n    try:\n        if not node:\n            n=nuke.selectedNode()\n        else:\n            n=node\n            n\['xpos'].setValue(n\['xpos'].getValue()-step)\n            n\['ypos'].setValue(n\['ypos'].getValue()-step)\n            n\['bdwidth'].setValue(n\['bdwidth'].getValue()+step*2)\n            n\['bdheight'].setValue(n\['bdheight'].getValue()+step*2)\n    except:\n        pass\ngrow(n,50)"}
    addUserKnob {22 shrink l " <img src=\"F_scalem.png\">" -STARTLINE T "n=nuke.thisNode()\n\ndef shrink(node=None,step=50):\n    try:\n        if not node:\n            n=nuke.selectedNode()\n        else:\n            n=node\n            n\['xpos'].setValue(n\['xpos'].getValue()+step)\n            n\['ypos'].setValue(n\['ypos'].getValue()+step)\n            n\['bdwidth'].setValue(n\['bdwidth'].getValue()-step*2)\n            n\['bdheight'].setValue(n\['bdheight'].getValue()-step*2)\n    except:\n        pass\nshrink(n,50)"}
    addUserKnob {22 colorandom l " <img src=\"ColorBars.png\">" -STARTLINE T "import colorsys, random\nn=nuke.thisNode()\nR,G,B= colorsys.hsv_to_rgb(random.random(),.1+random.random()*.15,.15+random.random()*.15)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ) )"}
    addUserKnob {22 darkgrey l "<font color=\"#232323\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.0, 0.0, 0.14]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 lightgrey l "<font color=\"#383838\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.0, 0.0, 0.22]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 red l "<font color=\"#8c3838\" size=6>■</font>" T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.0, 0.6, 0.55]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n" +STARTLINE}
    addUserKnob {22 orange l "<font color=\"#b28e59\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.1, 0.5, 0.7]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 yellow l "<font color=\"#ccc766\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.16, 0.5, 0.8]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 green l "<font color=\"#5d995b\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.33, 0.4, 0.6]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 cyan l "<font color=\"#72998f\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.46, 0.25, 0.6]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 blue l "<font color=\"#59687f\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.6, 0.3, 0.5]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 darkblue l "<font color=\"#63628c\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.67, 0.3, 0.55]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 magenta l "<font color=\"#927a99\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.8, 0.2, 0.6]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 pink l "<font color=\"#997a89\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.92, 0.2, 0.6]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {26 S02 l " " T " "}
    addUserKnob {26 Ftools l "" +STARTLINE T "<font color=\"#1C1C1C\"> v1.2 - Franklin VFX - 2018"}
   }
   BackdropNode {
    inputs 0
    name BackdropNode1
    knobChanged "try:\n    listenedKnobs = \['text', 'position', 'name']\n    node = nuke.thisNode()\n    name = node.knob('name').value()\n    text = node.knob('text').value()\n    position = node.knob('position').value()\n    position = \"<\" + position + \">\"\n    label = node.knob('label').value()\n    \n    if nuke.thisKnob().name() in listenedKnobs:\n        if text == \"\":\n            if node.knob('position').value() == \"left\":\n                node.knob('label').setValue()\n            else:\n                node.knob('label').setValue(position + name)\n        else:\n            if node.knob('position').value() == \"left\":\n                node.knob('label').setValue(text)\n            else:\n                node.knob('label').setValue(position + text)\n                \n    elif nuke.thisKnob().name() == 'font_size':\n        fontSize = node.knob('font_size').value()\n        node.knob('note_font_size').setValue(fontSize)\nexcept:\n    pass"
    tile_color 0x927a99ff
    note_font_size 50
    xpos -460
    ypos -257
    bdwidth 435
    bdheight 786
    z_order 1
    addUserKnob {20 F_VFX l BackdropNode}
    addUserKnob {43 text l Text}
    addUserKnob {7 font_size l "Font Size" R 10 100}
    font_size 50
    addUserKnob {4 position l "" -STARTLINE M {Left Center}}
    addUserKnob {26 S01 l " " T " "}
    addUserKnob {22 grow l " <img src=\"F_scalep.png\">" -STARTLINE T "n=nuke.thisNode()\n\ndef grow(node=None,step=50):\n    try:\n        if not node:\n            n=nuke.selectedNode()\n        else:\n            n=node\n            n\['xpos'].setValue(n\['xpos'].getValue()-step)\n            n\['ypos'].setValue(n\['ypos'].getValue()-step)\n            n\['bdwidth'].setValue(n\['bdwidth'].getValue()+step*2)\n            n\['bdheight'].setValue(n\['bdheight'].getValue()+step*2)\n    except:\n        pass\ngrow(n,50)"}
    addUserKnob {22 shrink l " <img src=\"F_scalem.png\">" -STARTLINE T "n=nuke.thisNode()\n\ndef shrink(node=None,step=50):\n    try:\n        if not node:\n            n=nuke.selectedNode()\n        else:\n            n=node\n            n\['xpos'].setValue(n\['xpos'].getValue()+step)\n            n\['ypos'].setValue(n\['ypos'].getValue()+step)\n            n\['bdwidth'].setValue(n\['bdwidth'].getValue()-step*2)\n            n\['bdheight'].setValue(n\['bdheight'].getValue()-step*2)\n    except:\n        pass\nshrink(n,50)"}
    addUserKnob {22 colorandom l " <img src=\"ColorBars.png\">" -STARTLINE T "import colorsys, random\nn=nuke.thisNode()\nR,G,B= colorsys.hsv_to_rgb(random.random(),.1+random.random()*.15,.15+random.random()*.15)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ) )"}
    addUserKnob {22 darkgrey l "<font color=\"#232323\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.0, 0.0, 0.14]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 lightgrey l "<font color=\"#383838\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.0, 0.0, 0.22]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 red l "<font color=\"#8c3838\" size=6>■</font>" T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.0, 0.6, 0.55]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n" +STARTLINE}
    addUserKnob {22 orange l "<font color=\"#b28e59\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.1, 0.5, 0.7]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 yellow l "<font color=\"#ccc766\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.16, 0.5, 0.8]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 green l "<font color=\"#5d995b\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.33, 0.4, 0.6]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 cyan l "<font color=\"#72998f\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.46, 0.25, 0.6]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 blue l "<font color=\"#59687f\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.6, 0.3, 0.5]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 darkblue l "<font color=\"#63628c\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.67, 0.3, 0.55]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 magenta l "<font color=\"#927a99\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.8, 0.2, 0.6]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 pink l "<font color=\"#997a89\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.92, 0.2, 0.6]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {26 S02 l " " T " "}
    addUserKnob {26 Ftools l "" +STARTLINE T "<font color=\"#1C1C1C\"> v1.2 - Franklin VFX - 2018"}
   }
   Constant {
    inputs 0
    channels rgb
    name Constant4
    xpos -648
    ypos 987
   }
   AdjBBox {
    numpixels {{size_bbox}}
    name AdjBBox4
    xpos -648
    ypos 1120
   }
   Dot {
    name Dot19
    xpos -614
    ypos 1200
   }
   Axis3 {
    inputs 0
    useMatrix true
    matrix {
        {{parent.cCard3D_1.matrix} {parent.cCard3D_1.matrix} {parent.cCard3D_1.matrix} {parent.cCard3D_1.matrix}}
        {{parent.cCard3D_1.matrix} {parent.cCard3D_1.matrix} {parent.cCard3D_1.matrix} {parent.cCard3D_1.matrix}}
        {{parent.cCard3D_1.matrix} {parent.cCard3D_1.matrix} {parent.cCard3D_1.matrix} {parent.cCard3D_1.matrix}}
        {{parent.cCard3D_1.matrix} {parent.cCard3D_1.matrix} {parent.cCard3D_1.matrix} {parent.cCard3D_1.matrix}}
      }
    name Axis3
    xpos -207
    ypos 48
   }
set Nbc1e9300 [stack 0]
push 0
   Input {
    inputs 0
    name Side
    xpos -135
    ypos -1101
   }
   TimeOffset {
    time_offset {{"shotnmbr==0 ? 0 : shot_\[value shotnmbr]-1"}}
    time ""
    name CTimeOffset7
    label "shot: \[value shotnmbr]\non frame \[value time_offset]"
    xpos -135
    ypos -853
    addUserKnob {20 User}
    addUserKnob {3 shotnmbr l "shot "}
    shotnmbr {{shotcount}}
    addUserKnob {3 ref}
    ref {{time_offset+1}}
   }
   Group {
    name DecimalTimeOffset1
    tile_color 0xafa35dff
    label "random asset\n(based on brighness)"
    note_font "Bitstream Vera Sans Bold"
    xpos -135
    ypos -690
    addUserKnob {20 User}
    addUserKnob {7 decimal l "time offset (decimal)"}
    decimal {{"floor\n(\n  (\n  (  ((((random((shotcount*823)+((seed+seed_offset_\[value shotcount])*212))-0.5)*  ((1-( abs(brighness_flare-0.5) )*2)+1)  )+0.5)*0.5)  * (1-brighness_flare)  )\n\n  +\n\n  (  (((((random((shotcount*823)+((seed+seed_offset_\[value shotcount])*212))-0.5)*  ((1-( abs(brighness_flare-0.5) )*2)+1)  )+0.5)*0.5)+0.5)  * (brighness_flare)  )\n  )\n  *1000\n)\n\n/1000"}}
    addUserKnob {26 ""}
    addUserKnob {26 _1 l "" +STARTLINE T "Chris Fryer | 2020\nupdated by Yorben Otto | 2024"}
   }
    Input {
     inputs 0
     name Input1
     xpos 426
     ypos -793
    }
    TimeOffset {
     time_offset {{(-floor(parent.decimal))*(DecimalTimeOffset1.decimal<0)}}
     time ""
     name TimeOffset1
     xpos 426
     ypos -674
    }
    Dot {
     name Dot6
     xpos 460
     ypos -635
    }
set Nbc228cd0 [stack 0]
    Dot {
     name Dot5
     xpos 350
     ypos -635
    }
    Dot {
     name Dot7
     xpos 350
     ypos -365
    }
push $Nbc228cd0
    Dot {
     name Dot1
     xpos 572
     ypos -635
    }
    TimeBlur {
     divisions 2
     shutter {{(parent.decimal-(floor(parent.decimal)))*2}}
     shutteroffset start
     shuttercustomoffset 0
     name TimeBlur1
     xpos 538
     ypos -558
    }
    Dot {
     name Dot2
     xpos 572
     ypos -490
    }
push $Nbc228cd0
    TimeBlur {
     divisions 2
     shutter {{parent.decimal*2}}
     shutteroffset start
     shuttercustomoffset 0
     name TimeBlur8
     xpos 426
     ypos -556
    }
    Switch {
     inputs 2
     which {{parent.decimal<0}}
     name Switch1
     xpos 426
     ypos -494
    }
    Multiply {
     value {{parent.TimeBlur8.divisions}}
     name Multiply6
     xpos 426
     ypos -436
    }
    Merge2 {
     inputs 2
     operation from
     name Merge6
     xpos 426
     ypos -369
    }
set Nbc07ab30 [stack 0]
    Output {
     name Output1
     xpos 426
     ypos -221
    }
push $Nbc07ab30
push $Nbc07ab30
    Viewer {
     inputs 2
     frame_range 1-100
     viewerProcess "sRGB (default)"
     name Viewer1
     xpos 675
     ypos -246
    }
   end_group
   NoTimeBlur {
    name NoTimeBlur6
    xpos -135
    ypos -608
   }
   Dot {
    name Dot21
    xpos -101
    ypos -449
   }
set Nbc1194c0 [stack 0]
   Dot {
    name Dot22
    xpos -245
    ypos -449
   }
   Multiply {
    value {{math_matrix.result_y_flash(parent.CTimeOffset7.ref)}}
    name Angle_reveal_top
    label TOP
    xpos -279
    ypos -371
   }
   Transform {
    scale {{0.05+(0.05*(((parent.DecimalTimeOffset1.decimal-0.5)*2)*ScaleVariationFlash))}}
    center {{root.width/2 x1015 2304} {root.height/2}}
    shutteroffset centred
    name random_size_top
    xpos -279
    ypos -136
   }
   Card3D {
    inputs 3
    rot_order ZYX
    translate {0 0 0}
    rotate {90 0 0}
    shutteroffset centred
    name cCard3D5
    tile_color 0x7b1d1dff
    xpos -279
    ypos 153
    addUserKnob {20 User l parent}
    addUserKnob {22 python_button l "set parent" t "select parent node, and press this button to set the selected node as parent" +INVISIBLE T "n = nuke.selectedNode()\['name'].getValue()\nnuke.thisNode()\['string'].setValue(n)" +STARTLINE}
    addUserKnob {1 string l parent +INVISIBLE}
    string null
    addUserKnob {3 ref l "ref frame"}
    ref 1015
   }
   Transform {
    translate {{"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].translate.x(ref)\}]"} {"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].translate.y(ref)\}]"}}
    rotate {{"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].rotate-\[value parent_gun].rotate(ref)\}]"}}
    scale {{"\[if \{\[value parent_gun]==\"null\"\} \{return 1\} \{return 1+(\[value parent_gun].scale-\[value parent_gun].scale(ref))\}]"}}
    center {{"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].center.x(ref)\}]"} {"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].center.y(ref)\}]"}}
    name GUNMatchMove
    label "\n"
    xpos -279
    ypos 247
    addUserKnob {20 User l parent}
    addUserKnob {3 ref}
    ref {{parent.CTimeOffset7.ref}}
   }
   Transform {
    translate {{"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].translate.x-\[value parent_env].translate.x(ref)\}]"} {"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].translate.y-\[value parent_env].translate.y(ref)\}]"}}
    rotate {{"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].rotate-\[value parent_env].rotate(ref)\}]"}}
    scale {{"\[if \{\[value parent_gun]==\"null\"\} \{return 1\} \{return 1+(\[value parent_env].scale-\[value parent_env].scale(ref))\}]"}}
    center {{"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].center.x(ref)\}]"} {"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].center.y(ref)\}]"}}
    motionblur {{(mode==2)*0.2}}
    shutter {{FlashMB*(0.175*0.3)}}
    shutteroffset centred
    name ENVMatchMove
    xpos -279
    ypos 321
    addUserKnob {20 User l parent}
    addUserKnob {3 ref}
    ref {{parent.CTimeOffset7.ref}}
   }
   Transform {
    translate {{"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return -((root.width/2)-(\[value parent_gun].center.x(1)+\[value parent_gun].translate.x(1)))\}]"} {"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return -((root.height/2)-(\[value parent_gun].center.y(1)+\[value parent_gun].translate.y(1)))\}]"}}
    shutteroffset centred
    name Transform_GUNMatchMove1
    label "alignment correction"
    xpos -279
    ypos 408
    addUserKnob {20 User l parent}
    addUserKnob {22 python_button l "set parent" t "select parent node, and press this button to set the selected node as parent" T "n = nuke.selectedNode()\['name'].getValue()\nnuke.thisNode()\['string'].setValue(n)" +STARTLINE}
    addUserKnob {1 string l parent}
    string Transform_MatchMove10
    addUserKnob {3 ref +INVISIBLE}
    ref {{parent.cCard3D_8.ref}}
   }
   Remove {
    operation keep
    channels rgb
    name Remove10
    xpos -279
    ypos 489
   }
push 0
   Switch {
    inputs 2
    which {{ActivateSideFlash(CTimeOffset7.ref)}}
    name Switch1
    label "keyframeable disable "
    xpos -279
    ypos 587
   }
push 0
   Switch {
    inputs 2
    which {{parent.Angle_reveal_top.value!=0}}
    name Switch4
    label "disable based on angle"
    xpos -279
    ypos 670
   }
   Dot {
    name Dot1
    xpos -245
    ypos 717
   }
push 0
push $Nbc1e9300
push 0
   Input {
    inputs 0
    name Front
    xpos -430
    ypos -1102
    number 1
   }
   TimeOffset {
    time_offset {{"shotnmbr==0 ? 0 : shot_\[value shotnmbr]-1"}}
    time ""
    name CTimeOffset8
    xpos -430
    ypos -840
    addUserKnob {20 User}
    addUserKnob {3 shotnmbr l "shot "}
    shotnmbr {{parent.CTimeOffset7.shotnmbr}}
   }
   Group {
    name DecimalTimeOffset
    tile_color 0xafa35dff
    label "random asset\n(based on brighness)"
    note_font "Bitstream Vera Sans Bold"
    xpos -430
    ypos -693
    addUserKnob {20 User}
    addUserKnob {7 decimal l "time offset (decimal)"}
    decimal {{"floor\n(\n  (\n  (  ((((random((shotcount*823)+((seed+seed_offset_\[value shotcount])*212))-0.5)*  ((1-( abs(brighness_flare-0.5) )*2)+1)  )+0.5)*0.5)  * (1-brighness_flare)  )\n\n  +\n\n  (  (((((random((shotcount*823)+((seed+seed_offset_\[value shotcount])*212))-0.5)*  ((1-( abs(brighness_flare-0.5) )*2)+1)  )+0.5)*0.5)+0.5)  * (brighness_flare)  )\n  )\n  *1000\n)\n\n/1000"}}
    addUserKnob {26 ""}
    addUserKnob {26 _1 l "" +STARTLINE T "Chris Fryer | 2020\nupdated by Yorben Otto | 2024"}
   }
    Input {
     inputs 0
     name Input1
     xpos 426
     ypos -793
    }
    TimeOffset {
     time_offset {{(-floor(parent.decimal))*(DecimalTimeOffset.decimal<0)}}
     time ""
     name TimeOffset1
     xpos 426
     ypos -674
    }
    Dot {
     name Dot6
     xpos 460
     ypos -635
    }
set Nb4f97f40 [stack 0]
    Dot {
     name Dot5
     xpos 350
     ypos -635
    }
    Dot {
     name Dot7
     xpos 350
     ypos -365
    }
push $Nb4f97f40
    Dot {
     name Dot1
     xpos 572
     ypos -635
    }
    TimeBlur {
     divisions 2
     shutter {{(parent.decimal-(floor(parent.decimal)))*2}}
     shutteroffset start
     shuttercustomoffset 0
     name TimeBlur1
     xpos 538
     ypos -558
    }
    Dot {
     name Dot2
     xpos 572
     ypos -490
    }
push $Nb4f97f40
    TimeBlur {
     divisions 2
     shutter {{parent.decimal*2}}
     shutteroffset start
     shuttercustomoffset 0
     name TimeBlur8
     xpos 426
     ypos -556
    }
    Switch {
     inputs 2
     which {{parent.decimal<0}}
     name Switch1
     xpos 426
     ypos -494
    }
    Multiply {
     value {{parent.TimeBlur8.divisions}}
     name Multiply6
     xpos 426
     ypos -436
    }
    Merge2 {
     inputs 2
     operation from
     name Merge6
     xpos 426
     ypos -369
    }
set Nb4fd9e80 [stack 0]
    Output {
     name Output1
     xpos 426
     ypos -221
    }
push $Nb4fd9e80
push $Nb4fd9e80
    Viewer {
     inputs 2
     frame_range 1-100
     viewerProcess "sRGB (default)"
     name Viewer1
     xpos 675
     ypos -246
    }
   end_group
   NoTimeBlur {
    name NoTimeBlur7
    xpos -430
    ypos -617
   }
   Multiply {
    value {{math_matrix.result_x_flash(parent.CTimeOffset7.ref)}}
    name Angle_reveal_front
    label FRONT
    xpos -430
    ypos -375
   }
   Transform {
    scale {{0.05+(0.05*(((parent.DecimalTimeOffset1.decimal-0.5)*2)*ScaleVariationFlash))}}
    center {{root.width/2 x1015 2304} {root.height/2}}
    shutteroffset centred
    name random_size_front
    xpos -430
    ypos -134
   }
   Card3D {
    inputs 3
    rot_order ZYX
    translate {0 0 0}
    rotate {0 90 0}
    shutteroffset centred
    name cCard3D6
    tile_color 0x7b1d1dff
    xpos -430
    ypos 150
    addUserKnob {20 User l parent}
    addUserKnob {22 python_button l "set parent" t "select parent node, and press this button to set the selected node as parent" +INVISIBLE T "n = nuke.selectedNode()\['name'].getValue()\nnuke.thisNode()\['string'].setValue(n)" +STARTLINE}
    addUserKnob {1 string l parent +INVISIBLE}
    string null
    addUserKnob {3 ref l "ref frame"}
    ref 1015
   }
   Transform {
    translate {{"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].translate.x(ref)\}]"} {"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].translate.y(ref)\}]"}}
    rotate {{"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].rotate-\[value parent_gun].rotate(ref)\}]"}}
    scale {{"\[if \{\[value parent_gun]==\"null\"\} \{return 1\} \{return 1+(\[value parent_gun].scale-\[value parent_gun].scale(ref))\}]"}}
    center {{"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].center.x(ref)\}]"} {"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].center.y(ref)\}]"}}
    name GUNMatchMove2
    label "\n"
    xpos -430
    ypos 248
    addUserKnob {20 User l parent}
    addUserKnob {3 ref}
    ref {{parent.CTimeOffset7.ref}}
   }
   Transform {
    translate {{"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].translate.x-\[value parent_env].translate.x(ref)\}]"} {"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].translate.y-\[value parent_env].translate.y(ref)\}]"}}
    rotate {{"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].rotate-\[value parent_env].rotate(ref)\}]"}}
    scale {{"\[if \{\[value parent_gun]==\"null\"\} \{return 1\} \{return 1+(\[value parent_env].scale-\[value parent_env].scale(ref))\}]"}}
    center {{"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].center.x(ref)\}]"} {"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].center.y(ref)\}]"}}
    motionblur {{(mode==2)*0.2}}
    shutter {{FlashMB*(0.175*0.3)}}
    shutteroffset centred
    name ENVMatchMove2
    xpos -430
    ypos 320
    addUserKnob {20 User l parent}
    addUserKnob {3 ref}
    ref {{parent.CTimeOffset7.ref}}
   }
   Transform {
    translate {{"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return -((root.width/2)-(\[value parent_gun].center.x(1)+\[value parent_gun].translate.x(1)))\}]"} {"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return -((root.height/2)-(\[value parent_gun].center.y(1)+\[value parent_gun].translate.y(1)))\}]"}}
    shutteroffset centred
    name Transform_GUNMatchMove2
    label "alignment correction"
    xpos -430
    ypos 407
    addUserKnob {20 User l parent}
    addUserKnob {22 python_button l "set parent" t "select parent node, and press this button to set the selected node as parent" T "n = nuke.selectedNode()\['name'].getValue()\nnuke.thisNode()\['string'].setValue(n)" +STARTLINE}
    addUserKnob {1 string l parent}
    string Transform_MatchMove10
    addUserKnob {3 ref +INVISIBLE}
    ref {{parent.cCard3D_8.ref}}
   }
   Remove {
    operation keep
    channels rgb
    name Remove11
    xpos -430
    ypos 487
   }
push 0
   Switch {
    inputs 2
    which {{ActivateFrontFlash(CTimeOffset7.ref)}}
    name Switch7
    label "keyframeable disable "
    xpos -430
    ypos 586
   }
push 0
   Switch {
    inputs 2
    which {{parent.Angle_reveal_front.value!=0}}
    name Switch5
    label "disable based on angle"
    xpos -430
    ypos 670
   }
   Dot {
    name Dot2
    xpos -396
    ypos 749
   }
push $Nbc1194c0
   Multiply {
    value {{math_matrix.result_z_flash(parent.CTimeOffset7.ref)}}
    name Angle_reveal_side
    label SIDE
    xpos -135
    ypos -374
   }
   Transform {
    scale {{0.05+(0.05*(((parent.DecimalTimeOffset1.decimal-0.5)*2)*ScaleVariationFlash))}}
    center {{root.width/2 x1015 2304} {root.height/2}}
    shutteroffset centred
    name random_size_side
    xpos -135
    ypos -137
   }
   Card3D {
    translate {{"\[if \{\[exists  parent.parent.parent.input0]\} \{return \[value \[topnode parent.parent.parent.input0].name].translate.x(ref)\} \{return 0\}]"} {"\[if \{\[exists  parent.parent.parent.input0]\} \{return \[value \[topnode parent.parent.parent.input0].name].translate.y(ref)\} \{return 0\}]"} {"\[if \{\[exists  parent.parent.parent.input0]\} \{return \[value \[topnode parent.parent.parent.input0].name].translate.z(ref)\} \{return -1\}]"}}
    rotate {{"\[if \{\[exists  parent.parent.parent.input0]\} \{return \[value \[topnode parent.parent.parent.input0].name].rotate.x(ref)\} \{return 0\}]"} {"\[if \{\[exists  parent.parent.parent.input0]\} \{return \[value \[topnode parent.parent.parent.input0].name].rotate.y(ref)\} \{return 0\}]"} {"\[if \{\[exists  parent.parent.parent.input0]\} \{return \[value \[topnode parent.parent.parent.input0].name].rotate.z(ref)\} \{return 0\}]"}}
    scaling {{"\[if \{\[exists  parent.parent.parent.input0]\} \{return \[value \[topnode parent.parent.parent.input0].name].scaling.x(ref)\} \{return 1\}]"} {"\[if \{\[exists  parent.parent.parent.input0]\} \{return \[value \[topnode parent.parent.parent.input0].name].scaling.y(ref)\} \{return 1\}]"} {"\[if \{\[exists  parent.parent.parent.input0]\} \{return \[value \[topnode parent.parent.parent.input0].name].scaling.z(ref)\} \{return 1\}]"}}
    uniform_scale {{"\[if \{\[exists  parent.parent.parent.input0]\} \{return (\[value \[topnode parent.parent.parent.input0].name].uniform_scale(ref)*25)\} \{return 25\}]"}}
    shutteroffset centred
    name cCard3D_1
    tile_color 0x7b1d1dff
    label "ref frame: \[value ref]"
    xpos -135
    ypos 147
    addUserKnob {20 User l parent}
    addUserKnob {22 python_button l "set parent" t "select parent node, and press this button to set the selected node as parent" +INVISIBLE T "n = nuke.selectedNode()\['name'].getValue()\nnuke.thisNode()\['string'].setValue(n)" +STARTLINE}
    addUserKnob {1 string l parent +INVISIBLE}
    string null
    addUserKnob {3 id l "id number"}
    id {{parent.CTimeOffset7.shotnmbr}}
    addUserKnob {3 ref l "ref frame"}
    ref {{parent.CTimeOffset7.ref}}
   }
   Transform {
    translate {{"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].translate.x(ref)\}]"} {"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].translate.y(ref)\}]"}}
    rotate {{"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].rotate-\[value parent_gun].rotate(ref)\}]"}}
    scale {{"\[if \{\[value parent_gun]==\"null\"\} \{return 1\} \{return 1+(\[value parent_gun].scale-\[value parent_gun].scale(ref))\}]"}}
    center {{"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].center.x(ref)\}]"} {"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].center.y(ref)\}]"}}
    name GUNMatchMove1
    label "\n"
    xpos -135
    ypos 241
    addUserKnob {20 User l parent}
    addUserKnob {3 ref}
    ref {{parent.CTimeOffset7.ref}}
   }
   Transform {
    translate {{"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].translate.x-\[value parent_env].translate.x(ref)\}]"} {"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].translate.y-\[value parent_env].translate.y(ref)\}]"}}
    rotate {{"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].rotate-\[value parent_env].rotate(ref)\}]"}}
    scale {{"\[if \{\[value parent_gun]==\"null\"\} \{return 1\} \{return 1+(\[value parent_env].scale-\[value parent_env].scale(ref))\}]"}}
    center {{"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].center.x(ref)\}]"} {"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].center.y(ref)\}]"}}
    motionblur {{(mode==2)*0.2}}
    shutter {{FlashMB*(0.175*0.3)}}
    shutteroffset centred
    name ENVMatchMove1
    xpos -135
    ypos 317
    addUserKnob {20 User l parent}
    addUserKnob {3 ref}
    ref {{parent.CTimeOffset7.ref}}
   }
   Transform {
    translate {{"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return -((root.width/2)-(\[value parent_gun].center.x(1)+\[value parent_gun].translate.x(1)))\}]"} {"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return -((root.height/2)-(\[value parent_gun].center.y(1)+\[value parent_gun].translate.y(1)))\}]"}}
    shutteroffset centred
    name Transform_GUNMatchMove3
    label "alignment correction"
    xpos -135
    ypos 405
    addUserKnob {20 User l parent}
    addUserKnob {22 python_button l "set parent" t "select parent node, and press this button to set the selected node as parent" T "n = nuke.selectedNode()\['name'].getValue()\nnuke.thisNode()\['string'].setValue(n)" +STARTLINE}
    addUserKnob {1 string l parent}
    string Transform_MatchMove10
    addUserKnob {3 ref +INVISIBLE}
    ref {{parent.cCard3D_8.ref}}
   }
   Remove {
    operation keep
    channels rgb
    name Remove12
    xpos -135
    ypos 489
   }
push 0
   Switch {
    inputs 2
    which {{ActivateSideFlash(CTimeOffset7.ref)}}
    name Switch3
    label "keyframeable disable "
    xpos -135
    ypos 587
   }
push 0
   Switch {
    inputs 2
    which {{parent.Angle_reveal_side.value!=0}}
    name Switch6
    label "disable based on angle"
    xpos -135
    ypos 671
   }
   Merge2 {
    inputs 3+1
    operation max
    name Merge1
    xpos -135
    ypos 745
   }
   Merge2 {
    inputs 2
    operation plus
    bbox intersection
    name Merge6
    xpos -135
    ypos 1196
   }
push 0
   Switch {
    inputs 2
    which {{"shot_\[value count]==0?0:(EnableExtraFrames==1?floor(((frame>=shot_\[value count])+(frame<=(shot_\[value count]+(4*((mode==1)+(mode==2))))))/2):frame==shot_\[value count])"}}
    name cSwitch_3
    selected true
    xpos -135
    ypos 1354
    addUserKnob {20 User}
    addUserKnob {3 count l "shot number"}
    count {{parent.CTimeOffset7.shotnmbr}}
   }
   Output {
    name Output1
    xpos -135
    ypos 1861
   }
  end_group
push $N4ccfe7a0
push $N339bee70
  Group {
   inputs 2
   name gunshot10
   label "shot: \[value shotcount]\non frame: \[value shot_\[value shotcount]]\n"
   xpos 9682
   ypos -814
   addUserKnob {20 User}
   addUserKnob {3 shotcount l shot}
   shotcount 10
   addUserKnob {3 shotstart l frame +INVISIBLE}
   shotstart {{"shotcount==0 ? 0 : shot\[value shotcount]-1"}}
  }
   BackdropNode {
    inputs 0
    name BackdropNode3
    knobChanged "try:\n    listenedKnobs = \['text', 'position', 'name']\n    node = nuke.thisNode()\n    name = node.knob('name').value()\n    text = node.knob('text').value()\n    position = node.knob('position').value()\n    position = \"<\" + position + \">\"\n    label = node.knob('label').value()\n    \n    if nuke.thisKnob().name() in listenedKnobs:\n        if text == \"\":\n            if node.knob('position').value() == \"left\":\n                node.knob('label').setValue()\n            else:\n                node.knob('label').setValue(position + name)\n        else:\n            if node.knob('position').value() == \"left\":\n                node.knob('label').setValue(text)\n            else:\n                node.knob('label').setValue(position + text)\n                \n    elif nuke.thisKnob().name() == 'font_size':\n        fontSize = node.knob('font_size').value()\n        node.knob('note_font_size').setValue(fontSize)\nexcept:\n    pass"
    tile_color 0x232323ff
    label "<Left><h2> Gunshot"
    note_font_size 31.5
    xpos -698
    ypos -924
    bdwidth 1057
    bdheight 2343
    addUserKnob {20 F_VFX l BackdropNode}
    addUserKnob {43 text l Text}
    text "<h2> Gunshot"
    addUserKnob {7 font_size l "Font Size" R 10 100}
    font_size 31.5
    addUserKnob {4 position l "" -STARTLINE M {Left Center}}
    addUserKnob {26 S01 l " " T " "}
    addUserKnob {22 grow l " <img src=\"F_scalep.png\">" -STARTLINE T "n=nuke.thisNode()\n\ndef grow(node=None,step=50):\n    try:\n        if not node:\n            n=nuke.selectedNode()\n        else:\n            n=node\n            n\['xpos'].setValue(n\['xpos'].getValue()-step)\n            n\['ypos'].setValue(n\['ypos'].getValue()-step)\n            n\['bdwidth'].setValue(n\['bdwidth'].getValue()+step*2)\n            n\['bdheight'].setValue(n\['bdheight'].getValue()+step*2)\n    except:\n        pass\ngrow(n,50)"}
    addUserKnob {22 shrink l " <img src=\"F_scalem.png\">" -STARTLINE T "n=nuke.thisNode()\n\ndef shrink(node=None,step=50):\n    try:\n        if not node:\n            n=nuke.selectedNode()\n        else:\n            n=node\n            n\['xpos'].setValue(n\['xpos'].getValue()+step)\n            n\['ypos'].setValue(n\['ypos'].getValue()+step)\n            n\['bdwidth'].setValue(n\['bdwidth'].getValue()-step*2)\n            n\['bdheight'].setValue(n\['bdheight'].getValue()-step*2)\n    except:\n        pass\nshrink(n,50)"}
    addUserKnob {22 colorandom l " <img src=\"ColorBars.png\">" -STARTLINE T "import colorsys, random\nn=nuke.thisNode()\nR,G,B= colorsys.hsv_to_rgb(random.random(),.1+random.random()*.15,.15+random.random()*.15)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ) )"}
    addUserKnob {22 darkgrey l "<font color=\"#232323\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.0, 0.0, 0.14]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 lightgrey l "<font color=\"#383838\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.0, 0.0, 0.22]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 red l "<font color=\"#8c3838\" size=6>■</font>" T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.0, 0.6, 0.55]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n" +STARTLINE}
    addUserKnob {22 orange l "<font color=\"#b28e59\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.1, 0.5, 0.7]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 yellow l "<font color=\"#ccc766\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.16, 0.5, 0.8]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 green l "<font color=\"#5d995b\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.33, 0.4, 0.6]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 cyan l "<font color=\"#72998f\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.46, 0.25, 0.6]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 blue l "<font color=\"#59687f\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.6, 0.3, 0.5]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 darkblue l "<font color=\"#63628c\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.67, 0.3, 0.55]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 magenta l "<font color=\"#927a99\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.8, 0.2, 0.6]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 pink l "<font color=\"#997a89\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.92, 0.2, 0.6]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {26 S02 l " " T " "}
    addUserKnob {26 Ftools l "" +STARTLINE T "<font color=\"#1C1C1C\"> v1.2 - Franklin VFX - 2018"}
   }
   BackdropNode {
    inputs 0
    name BackdropNode1
    knobChanged "try:\n    listenedKnobs = \['text', 'position', 'name']\n    node = nuke.thisNode()\n    name = node.knob('name').value()\n    text = node.knob('text').value()\n    position = node.knob('position').value()\n    position = \"<\" + position + \">\"\n    label = node.knob('label').value()\n    \n    if nuke.thisKnob().name() in listenedKnobs:\n        if text == \"\":\n            if node.knob('position').value() == \"left\":\n                node.knob('label').setValue()\n            else:\n                node.knob('label').setValue(position + name)\n        else:\n            if node.knob('position').value() == \"left\":\n                node.knob('label').setValue(text)\n            else:\n                node.knob('label').setValue(position + text)\n                \n    elif nuke.thisKnob().name() == 'font_size':\n        fontSize = node.knob('font_size').value()\n        node.knob('note_font_size').setValue(fontSize)\nexcept:\n    pass"
    tile_color 0x927a99ff
    note_font_size 50
    xpos -460
    ypos -257
    bdwidth 435
    bdheight 786
    z_order 1
    addUserKnob {20 F_VFX l BackdropNode}
    addUserKnob {43 text l Text}
    addUserKnob {7 font_size l "Font Size" R 10 100}
    font_size 50
    addUserKnob {4 position l "" -STARTLINE M {Left Center}}
    addUserKnob {26 S01 l " " T " "}
    addUserKnob {22 grow l " <img src=\"F_scalep.png\">" -STARTLINE T "n=nuke.thisNode()\n\ndef grow(node=None,step=50):\n    try:\n        if not node:\n            n=nuke.selectedNode()\n        else:\n            n=node\n            n\['xpos'].setValue(n\['xpos'].getValue()-step)\n            n\['ypos'].setValue(n\['ypos'].getValue()-step)\n            n\['bdwidth'].setValue(n\['bdwidth'].getValue()+step*2)\n            n\['bdheight'].setValue(n\['bdheight'].getValue()+step*2)\n    except:\n        pass\ngrow(n,50)"}
    addUserKnob {22 shrink l " <img src=\"F_scalem.png\">" -STARTLINE T "n=nuke.thisNode()\n\ndef shrink(node=None,step=50):\n    try:\n        if not node:\n            n=nuke.selectedNode()\n        else:\n            n=node\n            n\['xpos'].setValue(n\['xpos'].getValue()+step)\n            n\['ypos'].setValue(n\['ypos'].getValue()+step)\n            n\['bdwidth'].setValue(n\['bdwidth'].getValue()-step*2)\n            n\['bdheight'].setValue(n\['bdheight'].getValue()-step*2)\n    except:\n        pass\nshrink(n,50)"}
    addUserKnob {22 colorandom l " <img src=\"ColorBars.png\">" -STARTLINE T "import colorsys, random\nn=nuke.thisNode()\nR,G,B= colorsys.hsv_to_rgb(random.random(),.1+random.random()*.15,.15+random.random()*.15)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ) )"}
    addUserKnob {22 darkgrey l "<font color=\"#232323\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.0, 0.0, 0.14]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 lightgrey l "<font color=\"#383838\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.0, 0.0, 0.22]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 red l "<font color=\"#8c3838\" size=6>■</font>" T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.0, 0.6, 0.55]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n" +STARTLINE}
    addUserKnob {22 orange l "<font color=\"#b28e59\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.1, 0.5, 0.7]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 yellow l "<font color=\"#ccc766\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.16, 0.5, 0.8]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 green l "<font color=\"#5d995b\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.33, 0.4, 0.6]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 cyan l "<font color=\"#72998f\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.46, 0.25, 0.6]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 blue l "<font color=\"#59687f\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.6, 0.3, 0.5]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 darkblue l "<font color=\"#63628c\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.67, 0.3, 0.55]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 magenta l "<font color=\"#927a99\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.8, 0.2, 0.6]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 pink l "<font color=\"#997a89\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.92, 0.2, 0.6]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {26 S02 l " " T " "}
    addUserKnob {26 Ftools l "" +STARTLINE T "<font color=\"#1C1C1C\"> v1.2 - Franklin VFX - 2018"}
   }
   Constant {
    inputs 0
    channels rgb
    name Constant4
    xpos -648
    ypos 987
   }
   AdjBBox {
    numpixels {{size_bbox}}
    name AdjBBox4
    xpos -648
    ypos 1120
   }
   Dot {
    name Dot19
    xpos -614
    ypos 1200
   }
   Axis3 {
    inputs 0
    useMatrix true
    matrix {
        {{parent.cCard3D_1.matrix} {parent.cCard3D_1.matrix} {parent.cCard3D_1.matrix} {parent.cCard3D_1.matrix}}
        {{parent.cCard3D_1.matrix} {parent.cCard3D_1.matrix} {parent.cCard3D_1.matrix} {parent.cCard3D_1.matrix}}
        {{parent.cCard3D_1.matrix} {parent.cCard3D_1.matrix} {parent.cCard3D_1.matrix} {parent.cCard3D_1.matrix}}
        {{parent.cCard3D_1.matrix} {parent.cCard3D_1.matrix} {parent.cCard3D_1.matrix} {parent.cCard3D_1.matrix}}
      }
    name Axis3
    xpos -207
    ypos 48
   }
set Nb4106c20 [stack 0]
push 0
   Input {
    inputs 0
    name Side
    xpos -135
    ypos -1101
   }
   TimeOffset {
    time_offset {{"shotnmbr==0 ? 0 : shot_\[value shotnmbr]-1"}}
    time ""
    name CTimeOffset7
    label "shot: \[value shotnmbr]\non frame \[value time_offset]"
    xpos -135
    ypos -853
    addUserKnob {20 User}
    addUserKnob {3 shotnmbr l "shot "}
    shotnmbr {{shotcount}}
    addUserKnob {3 ref}
    ref {{time_offset+1}}
   }
   Group {
    name DecimalTimeOffset1
    tile_color 0xafa35dff
    label "random asset\n(based on brighness)"
    note_font "Bitstream Vera Sans Bold"
    xpos -135
    ypos -690
    addUserKnob {20 User}
    addUserKnob {7 decimal l "time offset (decimal)"}
    decimal {{"floor\n(\n  (\n  (  ((((random((shotcount*823)+((seed+seed_offset_\[value shotcount])*212))-0.5)*  ((1-( abs(brighness_flare-0.5) )*2)+1)  )+0.5)*0.5)  * (1-brighness_flare)  )\n\n  +\n\n  (  (((((random((shotcount*823)+((seed+seed_offset_\[value shotcount])*212))-0.5)*  ((1-( abs(brighness_flare-0.5) )*2)+1)  )+0.5)*0.5)+0.5)  * (brighness_flare)  )\n  )\n  *1000\n)\n\n/1000"}}
    addUserKnob {26 ""}
    addUserKnob {26 _1 l "" +STARTLINE T "Chris Fryer | 2020\nupdated by Yorben Otto | 2024"}
   }
    Input {
     inputs 0
     name Input1
     xpos 426
     ypos -793
    }
    TimeOffset {
     time_offset {{(-floor(parent.decimal))*(DecimalTimeOffset1.decimal<0)}}
     time ""
     name TimeOffset1
     xpos 426
     ypos -674
    }
    Dot {
     name Dot6
     xpos 460
     ypos -635
    }
set Nb41466b0 [stack 0]
    Dot {
     name Dot5
     xpos 350
     ypos -635
    }
    Dot {
     name Dot7
     xpos 350
     ypos -365
    }
push $Nb41466b0
    Dot {
     name Dot1
     xpos 572
     ypos -635
    }
    TimeBlur {
     divisions 2
     shutter {{(parent.decimal-(floor(parent.decimal)))*2}}
     shutteroffset start
     shuttercustomoffset 0
     name TimeBlur1
     xpos 538
     ypos -558
    }
    Dot {
     name Dot2
     xpos 572
     ypos -490
    }
push $Nb41466b0
    TimeBlur {
     divisions 2
     shutter {{parent.decimal*2}}
     shutteroffset start
     shuttercustomoffset 0
     name TimeBlur8
     xpos 426
     ypos -556
    }
    Switch {
     inputs 2
     which {{parent.decimal<0}}
     name Switch1
     xpos 426
     ypos -494
    }
    Multiply {
     value {{parent.TimeBlur8.divisions}}
     name Multiply6
     xpos 426
     ypos -436
    }
    Merge2 {
     inputs 2
     operation from
     name Merge6
     xpos 426
     ypos -369
    }
set Nb41885f0 [stack 0]
    Output {
     name Output1
     xpos 426
     ypos -221
    }
push $Nb41885f0
push $Nb41885f0
    Viewer {
     inputs 2
     frame_range 1-100
     viewerProcess "sRGB (default)"
     name Viewer1
     xpos 675
     ypos -246
    }
   end_group
   NoTimeBlur {
    name NoTimeBlur6
    xpos -135
    ypos -608
   }
   Dot {
    name Dot21
    xpos -101
    ypos -449
   }
set Nb4236e60 [stack 0]
   Dot {
    name Dot22
    xpos -245
    ypos -449
   }
   Multiply {
    value {{math_matrix.result_y_flash(parent.CTimeOffset7.ref)}}
    name Angle_reveal_top
    label TOP
    xpos -279
    ypos -371
   }
   Transform {
    scale {{0.05+(0.05*(((parent.DecimalTimeOffset1.decimal-0.5)*2)*ScaleVariationFlash))}}
    center {{root.width/2 x1015 2304} {root.height/2}}
    shutteroffset centred
    name random_size_top
    xpos -279
    ypos -136
   }
   Card3D {
    inputs 3
    rot_order ZYX
    translate {0 0 0}
    rotate {90 0 0}
    shutteroffset centred
    name cCard3D5
    tile_color 0x7b1d1dff
    xpos -279
    ypos 153
    addUserKnob {20 User l parent}
    addUserKnob {22 python_button l "set parent" t "select parent node, and press this button to set the selected node as parent" +INVISIBLE T "n = nuke.selectedNode()\['name'].getValue()\nnuke.thisNode()\['string'].setValue(n)" +STARTLINE}
    addUserKnob {1 string l parent +INVISIBLE}
    string null
    addUserKnob {3 ref l "ref frame"}
    ref 1015
   }
   Transform {
    translate {{"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].translate.x(ref)\}]"} {"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].translate.y(ref)\}]"}}
    rotate {{"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].rotate-\[value parent_gun].rotate(ref)\}]"}}
    scale {{"\[if \{\[value parent_gun]==\"null\"\} \{return 1\} \{return 1+(\[value parent_gun].scale-\[value parent_gun].scale(ref))\}]"}}
    center {{"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].center.x(ref)\}]"} {"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].center.y(ref)\}]"}}
    name GUNMatchMove
    label "\n"
    xpos -279
    ypos 247
    addUserKnob {20 User l parent}
    addUserKnob {3 ref}
    ref {{parent.CTimeOffset7.ref}}
   }
   Transform {
    translate {{"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].translate.x-\[value parent_env].translate.x(ref)\}]"} {"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].translate.y-\[value parent_env].translate.y(ref)\}]"}}
    rotate {{"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].rotate-\[value parent_env].rotate(ref)\}]"}}
    scale {{"\[if \{\[value parent_gun]==\"null\"\} \{return 1\} \{return 1+(\[value parent_env].scale-\[value parent_env].scale(ref))\}]"}}
    center {{"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].center.x(ref)\}]"} {"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].center.y(ref)\}]"}}
    motionblur {{(mode==2)*0.2}}
    shutter {{FlashMB*(0.175*0.3)}}
    shutteroffset centred
    name ENVMatchMove
    xpos -279
    ypos 321
    addUserKnob {20 User l parent}
    addUserKnob {3 ref}
    ref {{parent.CTimeOffset7.ref}}
   }
   Transform {
    translate {{"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return -((root.width/2)-(\[value parent_gun].center.x(1)+\[value parent_gun].translate.x(1)))\}]"} {"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return -((root.height/2)-(\[value parent_gun].center.y(1)+\[value parent_gun].translate.y(1)))\}]"}}
    shutteroffset centred
    name Transform_GUNMatchMove1
    label "alignment correction"
    xpos -279
    ypos 408
    addUserKnob {20 User l parent}
    addUserKnob {22 python_button l "set parent" t "select parent node, and press this button to set the selected node as parent" T "n = nuke.selectedNode()\['name'].getValue()\nnuke.thisNode()\['string'].setValue(n)" +STARTLINE}
    addUserKnob {1 string l parent}
    string Transform_MatchMove10
    addUserKnob {3 ref +INVISIBLE}
    ref {{parent.cCard3D_8.ref}}
   }
   Remove {
    operation keep
    channels rgb
    name Remove10
    xpos -279
    ypos 489
   }
push 0
   Switch {
    inputs 2
    which {{ActivateSideFlash(CTimeOffset7.ref)}}
    name Switch1
    label "keyframeable disable "
    xpos -279
    ypos 587
   }
push 0
   Switch {
    inputs 2
    which {{parent.Angle_reveal_top.value!=0}}
    name Switch4
    label "disable based on angle"
    xpos -279
    ypos 670
   }
   Dot {
    name Dot1
    xpos -245
    ypos 717
   }
push 0
push $Nb4106c20
push 0
   Input {
    inputs 0
    name Front
    xpos -430
    ypos -1102
    number 1
   }
   TimeOffset {
    time_offset {{"shotnmbr==0 ? 0 : shot_\[value shotnmbr]-1"}}
    time ""
    name CTimeOffset8
    xpos -430
    ypos -840
    addUserKnob {20 User}
    addUserKnob {3 shotnmbr l "shot "}
    shotnmbr {{parent.CTimeOffset7.shotnmbr}}
   }
   Group {
    name DecimalTimeOffset
    tile_color 0xafa35dff
    label "random asset\n(based on brighness)"
    note_font "Bitstream Vera Sans Bold"
    xpos -430
    ypos -693
    addUserKnob {20 User}
    addUserKnob {7 decimal l "time offset (decimal)"}
    decimal {{"floor\n(\n  (\n  (  ((((random((shotcount*823)+((seed+seed_offset_\[value shotcount])*212))-0.5)*  ((1-( abs(brighness_flare-0.5) )*2)+1)  )+0.5)*0.5)  * (1-brighness_flare)  )\n\n  +\n\n  (  (((((random((shotcount*823)+((seed+seed_offset_\[value shotcount])*212))-0.5)*  ((1-( abs(brighness_flare-0.5) )*2)+1)  )+0.5)*0.5)+0.5)  * (brighness_flare)  )\n  )\n  *1000\n)\n\n/1000"}}
    addUserKnob {26 ""}
    addUserKnob {26 _1 l "" +STARTLINE T "Chris Fryer | 2020\nupdated by Yorben Otto | 2024"}
   }
    Input {
     inputs 0
     name Input1
     xpos 426
     ypos -793
    }
    TimeOffset {
     time_offset {{(-floor(parent.decimal))*(DecimalTimeOffset.decimal<0)}}
     time ""
     name TimeOffset1
     xpos 426
     ypos -674
    }
    Dot {
     name Dot6
     xpos 460
     ypos -635
    }
set Nb42e69c0 [stack 0]
    Dot {
     name Dot5
     xpos 350
     ypos -635
    }
    Dot {
     name Dot7
     xpos 350
     ypos -365
    }
push $Nb42e69c0
    Dot {
     name Dot1
     xpos 572
     ypos -635
    }
    TimeBlur {
     divisions 2
     shutter {{(parent.decimal-(floor(parent.decimal)))*2}}
     shutteroffset start
     shuttercustomoffset 0
     name TimeBlur1
     xpos 538
     ypos -558
    }
    Dot {
     name Dot2
     xpos 572
     ypos -490
    }
push $Nb42e69c0
    TimeBlur {
     divisions 2
     shutter {{parent.decimal*2}}
     shutteroffset start
     shuttercustomoffset 0
     name TimeBlur8
     xpos 426
     ypos -556
    }
    Switch {
     inputs 2
     which {{parent.decimal<0}}
     name Switch1
     xpos 426
     ypos -494
    }
    Multiply {
     value {{parent.TimeBlur8.divisions}}
     name Multiply6
     xpos 426
     ypos -436
    }
    Merge2 {
     inputs 2
     operation from
     name Merge6
     xpos 426
     ypos -369
    }
set Nb4338810 [stack 0]
    Output {
     name Output1
     xpos 426
     ypos -221
    }
push $Nb4338810
push $Nb4338810
    Viewer {
     inputs 2
     frame_range 1-100
     viewerProcess "sRGB (default)"
     name Viewer1
     xpos 675
     ypos -246
    }
   end_group
   NoTimeBlur {
    name NoTimeBlur7
    xpos -430
    ypos -617
   }
   Multiply {
    value {{math_matrix.result_x_flash(parent.CTimeOffset7.ref)}}
    name Angle_reveal_front
    label FRONT
    xpos -430
    ypos -375
   }
   Transform {
    scale {{0.05+(0.05*(((parent.DecimalTimeOffset1.decimal-0.5)*2)*ScaleVariationFlash))}}
    center {{root.width/2 x1015 2304} {root.height/2}}
    shutteroffset centred
    name random_size_front
    xpos -430
    ypos -134
   }
   Card3D {
    inputs 3
    rot_order ZYX
    translate {0 0 0}
    rotate {0 90 0}
    shutteroffset centred
    name cCard3D6
    tile_color 0x7b1d1dff
    xpos -430
    ypos 150
    addUserKnob {20 User l parent}
    addUserKnob {22 python_button l "set parent" t "select parent node, and press this button to set the selected node as parent" +INVISIBLE T "n = nuke.selectedNode()\['name'].getValue()\nnuke.thisNode()\['string'].setValue(n)" +STARTLINE}
    addUserKnob {1 string l parent +INVISIBLE}
    string null
    addUserKnob {3 ref l "ref frame"}
    ref 1015
   }
   Transform {
    translate {{"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].translate.x(ref)\}]"} {"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].translate.y(ref)\}]"}}
    rotate {{"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].rotate-\[value parent_gun].rotate(ref)\}]"}}
    scale {{"\[if \{\[value parent_gun]==\"null\"\} \{return 1\} \{return 1+(\[value parent_gun].scale-\[value parent_gun].scale(ref))\}]"}}
    center {{"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].center.x(ref)\}]"} {"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].center.y(ref)\}]"}}
    name GUNMatchMove2
    label "\n"
    xpos -430
    ypos 248
    addUserKnob {20 User l parent}
    addUserKnob {3 ref}
    ref {{parent.CTimeOffset7.ref}}
   }
   Transform {
    translate {{"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].translate.x-\[value parent_env].translate.x(ref)\}]"} {"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].translate.y-\[value parent_env].translate.y(ref)\}]"}}
    rotate {{"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].rotate-\[value parent_env].rotate(ref)\}]"}}
    scale {{"\[if \{\[value parent_gun]==\"null\"\} \{return 1\} \{return 1+(\[value parent_env].scale-\[value parent_env].scale(ref))\}]"}}
    center {{"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].center.x(ref)\}]"} {"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].center.y(ref)\}]"}}
    motionblur {{(mode==2)*0.2}}
    shutter {{FlashMB*(0.175*0.3)}}
    shutteroffset centred
    name ENVMatchMove2
    xpos -430
    ypos 320
    addUserKnob {20 User l parent}
    addUserKnob {3 ref}
    ref {{parent.CTimeOffset7.ref}}
   }
   Transform {
    translate {{"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return -((root.width/2)-(\[value parent_gun].center.x(1)+\[value parent_gun].translate.x(1)))\}]"} {"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return -((root.height/2)-(\[value parent_gun].center.y(1)+\[value parent_gun].translate.y(1)))\}]"}}
    shutteroffset centred
    name Transform_GUNMatchMove2
    label "alignment correction"
    xpos -430
    ypos 407
    addUserKnob {20 User l parent}
    addUserKnob {22 python_button l "set parent" t "select parent node, and press this button to set the selected node as parent" T "n = nuke.selectedNode()\['name'].getValue()\nnuke.thisNode()\['string'].setValue(n)" +STARTLINE}
    addUserKnob {1 string l parent}
    string Transform_MatchMove10
    addUserKnob {3 ref +INVISIBLE}
    ref {{parent.cCard3D_8.ref}}
   }
   Remove {
    operation keep
    channels rgb
    name Remove11
    xpos -430
    ypos 487
   }
push 0
   Switch {
    inputs 2
    which {{ActivateFrontFlash(CTimeOffset7.ref)}}
    name Switch7
    label "keyframeable disable "
    xpos -430
    ypos 586
   }
push 0
   Switch {
    inputs 2
    which {{parent.Angle_reveal_front.value!=0}}
    name Switch5
    label "disable based on angle"
    xpos -430
    ypos 670
   }
   Dot {
    name Dot2
    xpos -396
    ypos 749
   }
push $Nb4236e60
   Multiply {
    value {{math_matrix.result_z_flash(parent.CTimeOffset7.ref)}}
    name Angle_reveal_side
    label SIDE
    xpos -135
    ypos -374
   }
   Transform {
    scale {{0.05+(0.05*(((parent.DecimalTimeOffset1.decimal-0.5)*2)*ScaleVariationFlash))}}
    center {{root.width/2 x1015 2304} {root.height/2}}
    shutteroffset centred
    name random_size_side
    xpos -135
    ypos -137
   }
   Card3D {
    translate {{"\[if \{\[exists  parent.parent.parent.input0]\} \{return \[value \[topnode parent.parent.parent.input0].name].translate.x(ref)\} \{return 0\}]"} {"\[if \{\[exists  parent.parent.parent.input0]\} \{return \[value \[topnode parent.parent.parent.input0].name].translate.y(ref)\} \{return 0\}]"} {"\[if \{\[exists  parent.parent.parent.input0]\} \{return \[value \[topnode parent.parent.parent.input0].name].translate.z(ref)\} \{return -1\}]"}}
    rotate {{"\[if \{\[exists  parent.parent.parent.input0]\} \{return \[value \[topnode parent.parent.parent.input0].name].rotate.x(ref)\} \{return 0\}]"} {"\[if \{\[exists  parent.parent.parent.input0]\} \{return \[value \[topnode parent.parent.parent.input0].name].rotate.y(ref)\} \{return 0\}]"} {"\[if \{\[exists  parent.parent.parent.input0]\} \{return \[value \[topnode parent.parent.parent.input0].name].rotate.z(ref)\} \{return 0\}]"}}
    scaling {{"\[if \{\[exists  parent.parent.parent.input0]\} \{return \[value \[topnode parent.parent.parent.input0].name].scaling.x(ref)\} \{return 1\}]"} {"\[if \{\[exists  parent.parent.parent.input0]\} \{return \[value \[topnode parent.parent.parent.input0].name].scaling.y(ref)\} \{return 1\}]"} {"\[if \{\[exists  parent.parent.parent.input0]\} \{return \[value \[topnode parent.parent.parent.input0].name].scaling.z(ref)\} \{return 1\}]"}}
    uniform_scale {{"\[if \{\[exists  parent.parent.parent.input0]\} \{return (\[value \[topnode parent.parent.parent.input0].name].uniform_scale(ref)*25)\} \{return 25\}]"}}
    shutteroffset centred
    name cCard3D_1
    tile_color 0x7b1d1dff
    label "ref frame: \[value ref]"
    xpos -135
    ypos 147
    addUserKnob {20 User l parent}
    addUserKnob {22 python_button l "set parent" t "select parent node, and press this button to set the selected node as parent" +INVISIBLE T "n = nuke.selectedNode()\['name'].getValue()\nnuke.thisNode()\['string'].setValue(n)" +STARTLINE}
    addUserKnob {1 string l parent +INVISIBLE}
    string null
    addUserKnob {3 id l "id number"}
    id {{parent.CTimeOffset7.shotnmbr}}
    addUserKnob {3 ref l "ref frame"}
    ref {{parent.CTimeOffset7.ref}}
   }
   Transform {
    translate {{"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].translate.x(ref)\}]"} {"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].translate.y(ref)\}]"}}
    rotate {{"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].rotate-\[value parent_gun].rotate(ref)\}]"}}
    scale {{"\[if \{\[value parent_gun]==\"null\"\} \{return 1\} \{return 1+(\[value parent_gun].scale-\[value parent_gun].scale(ref))\}]"}}
    center {{"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].center.x(ref)\}]"} {"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].center.y(ref)\}]"}}
    name GUNMatchMove1
    label "\n"
    xpos -135
    ypos 241
    addUserKnob {20 User l parent}
    addUserKnob {3 ref}
    ref {{parent.CTimeOffset7.ref}}
   }
   Transform {
    translate {{"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].translate.x-\[value parent_env].translate.x(ref)\}]"} {"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].translate.y-\[value parent_env].translate.y(ref)\}]"}}
    rotate {{"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].rotate-\[value parent_env].rotate(ref)\}]"}}
    scale {{"\[if \{\[value parent_gun]==\"null\"\} \{return 1\} \{return 1+(\[value parent_env].scale-\[value parent_env].scale(ref))\}]"}}
    center {{"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].center.x(ref)\}]"} {"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].center.y(ref)\}]"}}
    motionblur {{(mode==2)*0.2}}
    shutter {{FlashMB*(0.175*0.3)}}
    shutteroffset centred
    name ENVMatchMove1
    xpos -135
    ypos 317
    addUserKnob {20 User l parent}
    addUserKnob {3 ref}
    ref {{parent.CTimeOffset7.ref}}
   }
   Transform {
    translate {{"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return -((root.width/2)-(\[value parent_gun].center.x(1)+\[value parent_gun].translate.x(1)))\}]"} {"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return -((root.height/2)-(\[value parent_gun].center.y(1)+\[value parent_gun].translate.y(1)))\}]"}}
    shutteroffset centred
    name Transform_GUNMatchMove3
    label "alignment correction"
    xpos -135
    ypos 405
    addUserKnob {20 User l parent}
    addUserKnob {22 python_button l "set parent" t "select parent node, and press this button to set the selected node as parent" T "n = nuke.selectedNode()\['name'].getValue()\nnuke.thisNode()\['string'].setValue(n)" +STARTLINE}
    addUserKnob {1 string l parent}
    string Transform_MatchMove10
    addUserKnob {3 ref +INVISIBLE}
    ref {{parent.cCard3D_8.ref}}
   }
   Remove {
    operation keep
    channels rgb
    name Remove12
    xpos -135
    ypos 489
   }
push 0
   Switch {
    inputs 2
    which {{ActivateSideFlash(CTimeOffset7.ref)}}
    name Switch3
    label "keyframeable disable "
    xpos -135
    ypos 587
   }
push 0
   Switch {
    inputs 2
    which {{parent.Angle_reveal_side.value!=0}}
    name Switch6
    label "disable based on angle"
    xpos -135
    ypos 671
   }
   Merge2 {
    inputs 3+1
    operation max
    name Merge1
    xpos -135
    ypos 745
   }
   Merge2 {
    inputs 2
    operation plus
    bbox intersection
    name Merge6
    xpos -135
    ypos 1196
   }
push 0
   Switch {
    inputs 2
    which {{"shot_\[value count]==0?0:(EnableExtraFrames==1?floor(((frame>=shot_\[value count])+(frame<=(shot_\[value count]+(4*((mode==1)+(mode==2))))))/2):frame==shot_\[value count])"}}
    name cSwitch_3
    selected true
    xpos -135
    ypos 1354
    addUserKnob {20 User}
    addUserKnob {3 count l "shot number"}
    count {{parent.CTimeOffset7.shotnmbr}}
   }
   Output {
    name Output1
    xpos -135
    ypos 1861
   }
  end_group
push $N562f74e0
push $N201a7d90
  Group {
   inputs 2
   name gunshot11
   label "shot: \[value shotcount]\non frame: \[value shot_\[value shotcount]]\n"
   xpos 9876
   ypos -814
   addUserKnob {20 User}
   addUserKnob {3 shotcount l shot}
   shotcount 11
   addUserKnob {3 shotstart l frame +INVISIBLE}
   shotstart {{"shotcount==0 ? 0 : shot\[value shotcount]-1"}}
  }
   BackdropNode {
    inputs 0
    name BackdropNode3
    knobChanged "try:\n    listenedKnobs = \['text', 'position', 'name']\n    node = nuke.thisNode()\n    name = node.knob('name').value()\n    text = node.knob('text').value()\n    position = node.knob('position').value()\n    position = \"<\" + position + \">\"\n    label = node.knob('label').value()\n    \n    if nuke.thisKnob().name() in listenedKnobs:\n        if text == \"\":\n            if node.knob('position').value() == \"left\":\n                node.knob('label').setValue()\n            else:\n                node.knob('label').setValue(position + name)\n        else:\n            if node.knob('position').value() == \"left\":\n                node.knob('label').setValue(text)\n            else:\n                node.knob('label').setValue(position + text)\n                \n    elif nuke.thisKnob().name() == 'font_size':\n        fontSize = node.knob('font_size').value()\n        node.knob('note_font_size').setValue(fontSize)\nexcept:\n    pass"
    tile_color 0x232323ff
    label "<Left><h2> Gunshot"
    note_font_size 31.5
    xpos -698
    ypos -924
    bdwidth 1057
    bdheight 2343
    addUserKnob {20 F_VFX l BackdropNode}
    addUserKnob {43 text l Text}
    text "<h2> Gunshot"
    addUserKnob {7 font_size l "Font Size" R 10 100}
    font_size 31.5
    addUserKnob {4 position l "" -STARTLINE M {Left Center}}
    addUserKnob {26 S01 l " " T " "}
    addUserKnob {22 grow l " <img src=\"F_scalep.png\">" -STARTLINE T "n=nuke.thisNode()\n\ndef grow(node=None,step=50):\n    try:\n        if not node:\n            n=nuke.selectedNode()\n        else:\n            n=node\n            n\['xpos'].setValue(n\['xpos'].getValue()-step)\n            n\['ypos'].setValue(n\['ypos'].getValue()-step)\n            n\['bdwidth'].setValue(n\['bdwidth'].getValue()+step*2)\n            n\['bdheight'].setValue(n\['bdheight'].getValue()+step*2)\n    except:\n        pass\ngrow(n,50)"}
    addUserKnob {22 shrink l " <img src=\"F_scalem.png\">" -STARTLINE T "n=nuke.thisNode()\n\ndef shrink(node=None,step=50):\n    try:\n        if not node:\n            n=nuke.selectedNode()\n        else:\n            n=node\n            n\['xpos'].setValue(n\['xpos'].getValue()+step)\n            n\['ypos'].setValue(n\['ypos'].getValue()+step)\n            n\['bdwidth'].setValue(n\['bdwidth'].getValue()-step*2)\n            n\['bdheight'].setValue(n\['bdheight'].getValue()-step*2)\n    except:\n        pass\nshrink(n,50)"}
    addUserKnob {22 colorandom l " <img src=\"ColorBars.png\">" -STARTLINE T "import colorsys, random\nn=nuke.thisNode()\nR,G,B= colorsys.hsv_to_rgb(random.random(),.1+random.random()*.15,.15+random.random()*.15)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ) )"}
    addUserKnob {22 darkgrey l "<font color=\"#232323\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.0, 0.0, 0.14]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 lightgrey l "<font color=\"#383838\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.0, 0.0, 0.22]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 red l "<font color=\"#8c3838\" size=6>■</font>" T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.0, 0.6, 0.55]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n" +STARTLINE}
    addUserKnob {22 orange l "<font color=\"#b28e59\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.1, 0.5, 0.7]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 yellow l "<font color=\"#ccc766\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.16, 0.5, 0.8]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 green l "<font color=\"#5d995b\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.33, 0.4, 0.6]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 cyan l "<font color=\"#72998f\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.46, 0.25, 0.6]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 blue l "<font color=\"#59687f\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.6, 0.3, 0.5]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 darkblue l "<font color=\"#63628c\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.67, 0.3, 0.55]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 magenta l "<font color=\"#927a99\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.8, 0.2, 0.6]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 pink l "<font color=\"#997a89\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.92, 0.2, 0.6]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {26 S02 l " " T " "}
    addUserKnob {26 Ftools l "" +STARTLINE T "<font color=\"#1C1C1C\"> v1.2 - Franklin VFX - 2018"}
   }
   BackdropNode {
    inputs 0
    name BackdropNode1
    knobChanged "try:\n    listenedKnobs = \['text', 'position', 'name']\n    node = nuke.thisNode()\n    name = node.knob('name').value()\n    text = node.knob('text').value()\n    position = node.knob('position').value()\n    position = \"<\" + position + \">\"\n    label = node.knob('label').value()\n    \n    if nuke.thisKnob().name() in listenedKnobs:\n        if text == \"\":\n            if node.knob('position').value() == \"left\":\n                node.knob('label').setValue()\n            else:\n                node.knob('label').setValue(position + name)\n        else:\n            if node.knob('position').value() == \"left\":\n                node.knob('label').setValue(text)\n            else:\n                node.knob('label').setValue(position + text)\n                \n    elif nuke.thisKnob().name() == 'font_size':\n        fontSize = node.knob('font_size').value()\n        node.knob('note_font_size').setValue(fontSize)\nexcept:\n    pass"
    tile_color 0x927a99ff
    note_font_size 50
    xpos -460
    ypos -257
    bdwidth 435
    bdheight 786
    z_order 1
    addUserKnob {20 F_VFX l BackdropNode}
    addUserKnob {43 text l Text}
    addUserKnob {7 font_size l "Font Size" R 10 100}
    font_size 50
    addUserKnob {4 position l "" -STARTLINE M {Left Center}}
    addUserKnob {26 S01 l " " T " "}
    addUserKnob {22 grow l " <img src=\"F_scalep.png\">" -STARTLINE T "n=nuke.thisNode()\n\ndef grow(node=None,step=50):\n    try:\n        if not node:\n            n=nuke.selectedNode()\n        else:\n            n=node\n            n\['xpos'].setValue(n\['xpos'].getValue()-step)\n            n\['ypos'].setValue(n\['ypos'].getValue()-step)\n            n\['bdwidth'].setValue(n\['bdwidth'].getValue()+step*2)\n            n\['bdheight'].setValue(n\['bdheight'].getValue()+step*2)\n    except:\n        pass\ngrow(n,50)"}
    addUserKnob {22 shrink l " <img src=\"F_scalem.png\">" -STARTLINE T "n=nuke.thisNode()\n\ndef shrink(node=None,step=50):\n    try:\n        if not node:\n            n=nuke.selectedNode()\n        else:\n            n=node\n            n\['xpos'].setValue(n\['xpos'].getValue()+step)\n            n\['ypos'].setValue(n\['ypos'].getValue()+step)\n            n\['bdwidth'].setValue(n\['bdwidth'].getValue()-step*2)\n            n\['bdheight'].setValue(n\['bdheight'].getValue()-step*2)\n    except:\n        pass\nshrink(n,50)"}
    addUserKnob {22 colorandom l " <img src=\"ColorBars.png\">" -STARTLINE T "import colorsys, random\nn=nuke.thisNode()\nR,G,B= colorsys.hsv_to_rgb(random.random(),.1+random.random()*.15,.15+random.random()*.15)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ) )"}
    addUserKnob {22 darkgrey l "<font color=\"#232323\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.0, 0.0, 0.14]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 lightgrey l "<font color=\"#383838\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.0, 0.0, 0.22]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 red l "<font color=\"#8c3838\" size=6>■</font>" T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.0, 0.6, 0.55]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n" +STARTLINE}
    addUserKnob {22 orange l "<font color=\"#b28e59\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.1, 0.5, 0.7]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 yellow l "<font color=\"#ccc766\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.16, 0.5, 0.8]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 green l "<font color=\"#5d995b\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.33, 0.4, 0.6]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 cyan l "<font color=\"#72998f\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.46, 0.25, 0.6]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 blue l "<font color=\"#59687f\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.6, 0.3, 0.5]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 darkblue l "<font color=\"#63628c\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.67, 0.3, 0.55]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 magenta l "<font color=\"#927a99\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.8, 0.2, 0.6]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 pink l "<font color=\"#997a89\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.92, 0.2, 0.6]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {26 S02 l " " T " "}
    addUserKnob {26 Ftools l "" +STARTLINE T "<font color=\"#1C1C1C\"> v1.2 - Franklin VFX - 2018"}
   }
   Constant {
    inputs 0
    channels rgb
    name Constant4
    xpos -648
    ypos 987
   }
   AdjBBox {
    numpixels {{size_bbox}}
    name AdjBBox4
    xpos -648
    ypos 1120
   }
   Dot {
    name Dot19
    xpos -614
    ypos 1200
   }
   Axis3 {
    inputs 0
    useMatrix true
    matrix {
        {{parent.cCard3D_1.matrix} {parent.cCard3D_1.matrix} {parent.cCard3D_1.matrix} {parent.cCard3D_1.matrix}}
        {{parent.cCard3D_1.matrix} {parent.cCard3D_1.matrix} {parent.cCard3D_1.matrix} {parent.cCard3D_1.matrix}}
        {{parent.cCard3D_1.matrix} {parent.cCard3D_1.matrix} {parent.cCard3D_1.matrix} {parent.cCard3D_1.matrix}}
        {{parent.cCard3D_1.matrix} {parent.cCard3D_1.matrix} {parent.cCard3D_1.matrix} {parent.cCard3D_1.matrix}}
      }
    name Axis3
    xpos -207
    ypos 48
   }
set Nb45557e0 [stack 0]
push 0
   Input {
    inputs 0
    name Side
    xpos -135
    ypos -1101
   }
   TimeOffset {
    time_offset {{"shotnmbr==0 ? 0 : shot_\[value shotnmbr]-1"}}
    time ""
    name CTimeOffset7
    label "shot: \[value shotnmbr]\non frame \[value time_offset]"
    xpos -135
    ypos -853
    addUserKnob {20 User}
    addUserKnob {3 shotnmbr l "shot "}
    shotnmbr {{shotcount}}
    addUserKnob {3 ref}
    ref {{time_offset+1}}
   }
   Group {
    name DecimalTimeOffset1
    tile_color 0xafa35dff
    label "random asset\n(based on brighness)"
    note_font "Bitstream Vera Sans Bold"
    xpos -135
    ypos -690
    addUserKnob {20 User}
    addUserKnob {7 decimal l "time offset (decimal)"}
    decimal {{"floor\n(\n  (\n  (  ((((random((shotcount*823)+((seed+seed_offset_\[value shotcount])*212))-0.5)*  ((1-( abs(brighness_flare-0.5) )*2)+1)  )+0.5)*0.5)  * (1-brighness_flare)  )\n\n  +\n\n  (  (((((random((shotcount*823)+((seed+seed_offset_\[value shotcount])*212))-0.5)*  ((1-( abs(brighness_flare-0.5) )*2)+1)  )+0.5)*0.5)+0.5)  * (brighness_flare)  )\n  )\n  *1000\n)\n\n/1000"}}
    addUserKnob {26 ""}
    addUserKnob {26 _1 l "" +STARTLINE T "Chris Fryer | 2020\nupdated by Yorben Otto | 2024"}
   }
    Input {
     inputs 0
     name Input1
     xpos 426
     ypos -793
    }
    TimeOffset {
     time_offset {{(-floor(parent.decimal))*(DecimalTimeOffset1.decimal<0)}}
     time ""
     name TimeOffset1
     xpos 426
     ypos -674
    }
    Dot {
     name Dot6
     xpos 460
     ypos -635
    }
set Nb45951b0 [stack 0]
    Dot {
     name Dot5
     xpos 350
     ypos -635
    }
    Dot {
     name Dot7
     xpos 350
     ypos -365
    }
push $Nb45951b0
    Dot {
     name Dot1
     xpos 572
     ypos -635
    }
    TimeBlur {
     divisions 2
     shutter {{(parent.decimal-(floor(parent.decimal)))*2}}
     shutteroffset start
     shuttercustomoffset 0
     name TimeBlur1
     xpos 538
     ypos -558
    }
    Dot {
     name Dot2
     xpos 572
     ypos -490
    }
push $Nb45951b0
    TimeBlur {
     divisions 2
     shutter {{parent.decimal*2}}
     shutteroffset start
     shuttercustomoffset 0
     name TimeBlur8
     xpos 426
     ypos -556
    }
    Switch {
     inputs 2
     which {{parent.decimal<0}}
     name Switch1
     xpos 426
     ypos -494
    }
    Multiply {
     value {{parent.TimeBlur8.divisions}}
     name Multiply6
     xpos 426
     ypos -436
    }
    Merge2 {
     inputs 2
     operation from
     name Merge6
     xpos 426
     ypos -369
    }
set Nb45d70f0 [stack 0]
    Output {
     name Output1
     xpos 426
     ypos -221
    }
push $Nb45d70f0
push $Nb45d70f0
    Viewer {
     inputs 2
     frame_range 1-100
     viewerProcess "sRGB (default)"
     name Viewer1
     xpos 675
     ypos -246
    }
   end_group
   NoTimeBlur {
    name NoTimeBlur6
    xpos -135
    ypos -608
   }
   Dot {
    name Dot21
    xpos -101
    ypos -449
   }
set Nb4685990 [stack 0]
   Dot {
    name Dot22
    xpos -245
    ypos -449
   }
   Multiply {
    value {{math_matrix.result_y_flash(parent.CTimeOffset7.ref)}}
    name Angle_reveal_top
    label TOP
    xpos -279
    ypos -371
   }
   Transform {
    scale {{0.05+(0.05*(((parent.DecimalTimeOffset1.decimal-0.5)*2)*ScaleVariationFlash))}}
    center {{root.width/2 x1015 2304} {root.height/2}}
    shutteroffset centred
    name random_size_top
    xpos -279
    ypos -136
   }
   Card3D {
    inputs 3
    rot_order ZYX
    translate {0 0 0}
    rotate {90 0 0}
    shutteroffset centred
    name cCard3D5
    tile_color 0x7b1d1dff
    xpos -279
    ypos 153
    addUserKnob {20 User l parent}
    addUserKnob {22 python_button l "set parent" t "select parent node, and press this button to set the selected node as parent" +INVISIBLE T "n = nuke.selectedNode()\['name'].getValue()\nnuke.thisNode()\['string'].setValue(n)" +STARTLINE}
    addUserKnob {1 string l parent +INVISIBLE}
    string null
    addUserKnob {3 ref l "ref frame"}
    ref 1015
   }
   Transform {
    translate {{"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].translate.x(ref)\}]"} {"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].translate.y(ref)\}]"}}
    rotate {{"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].rotate-\[value parent_gun].rotate(ref)\}]"}}
    scale {{"\[if \{\[value parent_gun]==\"null\"\} \{return 1\} \{return 1+(\[value parent_gun].scale-\[value parent_gun].scale(ref))\}]"}}
    center {{"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].center.x(ref)\}]"} {"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].center.y(ref)\}]"}}
    name GUNMatchMove
    label "\n"
    xpos -279
    ypos 247
    addUserKnob {20 User l parent}
    addUserKnob {3 ref}
    ref {{parent.CTimeOffset7.ref}}
   }
   Transform {
    translate {{"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].translate.x-\[value parent_env].translate.x(ref)\}]"} {"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].translate.y-\[value parent_env].translate.y(ref)\}]"}}
    rotate {{"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].rotate-\[value parent_env].rotate(ref)\}]"}}
    scale {{"\[if \{\[value parent_gun]==\"null\"\} \{return 1\} \{return 1+(\[value parent_env].scale-\[value parent_env].scale(ref))\}]"}}
    center {{"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].center.x(ref)\}]"} {"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].center.y(ref)\}]"}}
    motionblur {{(mode==2)*0.2}}
    shutter {{FlashMB*(0.175*0.3)}}
    shutteroffset centred
    name ENVMatchMove
    xpos -279
    ypos 321
    addUserKnob {20 User l parent}
    addUserKnob {3 ref}
    ref {{parent.CTimeOffset7.ref}}
   }
   Transform {
    translate {{"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return -((root.width/2)-(\[value parent_gun].center.x(1)+\[value parent_gun].translate.x(1)))\}]"} {"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return -((root.height/2)-(\[value parent_gun].center.y(1)+\[value parent_gun].translate.y(1)))\}]"}}
    shutteroffset centred
    name Transform_GUNMatchMove1
    label "alignment correction"
    xpos -279
    ypos 408
    addUserKnob {20 User l parent}
    addUserKnob {22 python_button l "set parent" t "select parent node, and press this button to set the selected node as parent" T "n = nuke.selectedNode()\['name'].getValue()\nnuke.thisNode()\['string'].setValue(n)" +STARTLINE}
    addUserKnob {1 string l parent}
    string Transform_MatchMove10
    addUserKnob {3 ref +INVISIBLE}
    ref {{parent.cCard3D_8.ref}}
   }
   Remove {
    operation keep
    channels rgb
    name Remove10
    xpos -279
    ypos 489
   }
push 0
   Switch {
    inputs 2
    which {{ActivateSideFlash(CTimeOffset7.ref)}}
    name Switch1
    label "keyframeable disable "
    xpos -279
    ypos 587
   }
push 0
   Switch {
    inputs 2
    which {{parent.Angle_reveal_top.value!=0}}
    name Switch4
    label "disable based on angle"
    xpos -279
    ypos 670
   }
   Dot {
    name Dot1
    xpos -245
    ypos 717
   }
push 0
push $Nb45557e0
push 0
   Input {
    inputs 0
    name Front
    xpos -430
    ypos -1102
    number 1
   }
   TimeOffset {
    time_offset {{"shotnmbr==0 ? 0 : shot_\[value shotnmbr]-1"}}
    time ""
    name CTimeOffset8
    xpos -430
    ypos -840
    addUserKnob {20 User}
    addUserKnob {3 shotnmbr l "shot "}
    shotnmbr {{parent.CTimeOffset7.shotnmbr}}
   }
   Group {
    name DecimalTimeOffset
    tile_color 0xafa35dff
    label "random asset\n(based on brighness)"
    note_font "Bitstream Vera Sans Bold"
    xpos -430
    ypos -693
    addUserKnob {20 User}
    addUserKnob {7 decimal l "time offset (decimal)"}
    decimal {{"floor\n(\n  (\n  (  ((((random((shotcount*823)+((seed+seed_offset_\[value shotcount])*212))-0.5)*  ((1-( abs(brighness_flare-0.5) )*2)+1)  )+0.5)*0.5)  * (1-brighness_flare)  )\n\n  +\n\n  (  (((((random((shotcount*823)+((seed+seed_offset_\[value shotcount])*212))-0.5)*  ((1-( abs(brighness_flare-0.5) )*2)+1)  )+0.5)*0.5)+0.5)  * (brighness_flare)  )\n  )\n  *1000\n)\n\n/1000"}}
    addUserKnob {26 ""}
    addUserKnob {26 _1 l "" +STARTLINE T "Chris Fryer | 2020\nupdated by Yorben Otto | 2024"}
   }
    Input {
     inputs 0
     name Input1
     xpos 426
     ypos -793
    }
    TimeOffset {
     time_offset {{(-floor(parent.decimal))*(DecimalTimeOffset.decimal<0)}}
     time ""
     name TimeOffset1
     xpos 426
     ypos -674
    }
    Dot {
     name Dot6
     xpos 460
     ypos -635
    }
set Nb4745430 [stack 0]
    Dot {
     name Dot5
     xpos 350
     ypos -635
    }
    Dot {
     name Dot7
     xpos 350
     ypos -365
    }
push $Nb4745430
    Dot {
     name Dot1
     xpos 572
     ypos -635
    }
    TimeBlur {
     divisions 2
     shutter {{(parent.decimal-(floor(parent.decimal)))*2}}
     shutteroffset start
     shuttercustomoffset 0
     name TimeBlur1
     xpos 538
     ypos -558
    }
    Dot {
     name Dot2
     xpos 572
     ypos -490
    }
push $Nb4745430
    TimeBlur {
     divisions 2
     shutter {{parent.decimal*2}}
     shutteroffset start
     shuttercustomoffset 0
     name TimeBlur8
     xpos 426
     ypos -556
    }
    Switch {
     inputs 2
     which {{parent.decimal<0}}
     name Switch1
     xpos 426
     ypos -494
    }
    Multiply {
     value {{parent.TimeBlur8.divisions}}
     name Multiply6
     xpos 426
     ypos -436
    }
    Merge2 {
     inputs 2
     operation from
     name Merge6
     xpos 426
     ypos -369
    }
set Nb4787370 [stack 0]
    Output {
     name Output1
     xpos 426
     ypos -221
    }
push $Nb4787370
push $Nb4787370
    Viewer {
     inputs 2
     frame_range 1-100
     viewerProcess "sRGB (default)"
     name Viewer1
     xpos 675
     ypos -246
    }
   end_group
   NoTimeBlur {
    name NoTimeBlur7
    xpos -430
    ypos -617
   }
   Multiply {
    value {{math_matrix.result_x_flash(parent.CTimeOffset7.ref)}}
    name Angle_reveal_front
    label FRONT
    xpos -430
    ypos -375
   }
   Transform {
    scale {{0.05+(0.05*(((parent.DecimalTimeOffset1.decimal-0.5)*2)*ScaleVariationFlash))}}
    center {{root.width/2 x1015 2304} {root.height/2}}
    shutteroffset centred
    name random_size_front
    xpos -430
    ypos -134
   }
   Card3D {
    inputs 3
    rot_order ZYX
    translate {0 0 0}
    rotate {0 90 0}
    shutteroffset centred
    name cCard3D6
    tile_color 0x7b1d1dff
    xpos -430
    ypos 150
    addUserKnob {20 User l parent}
    addUserKnob {22 python_button l "set parent" t "select parent node, and press this button to set the selected node as parent" +INVISIBLE T "n = nuke.selectedNode()\['name'].getValue()\nnuke.thisNode()\['string'].setValue(n)" +STARTLINE}
    addUserKnob {1 string l parent +INVISIBLE}
    string null
    addUserKnob {3 ref l "ref frame"}
    ref 1015
   }
   Transform {
    translate {{"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].translate.x(ref)\}]"} {"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].translate.y(ref)\}]"}}
    rotate {{"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].rotate-\[value parent_gun].rotate(ref)\}]"}}
    scale {{"\[if \{\[value parent_gun]==\"null\"\} \{return 1\} \{return 1+(\[value parent_gun].scale-\[value parent_gun].scale(ref))\}]"}}
    center {{"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].center.x(ref)\}]"} {"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].center.y(ref)\}]"}}
    name GUNMatchMove2
    label "\n"
    xpos -430
    ypos 248
    addUserKnob {20 User l parent}
    addUserKnob {3 ref}
    ref {{parent.CTimeOffset7.ref}}
   }
   Transform {
    translate {{"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].translate.x-\[value parent_env].translate.x(ref)\}]"} {"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].translate.y-\[value parent_env].translate.y(ref)\}]"}}
    rotate {{"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].rotate-\[value parent_env].rotate(ref)\}]"}}
    scale {{"\[if \{\[value parent_gun]==\"null\"\} \{return 1\} \{return 1+(\[value parent_env].scale-\[value parent_env].scale(ref))\}]"}}
    center {{"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].center.x(ref)\}]"} {"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].center.y(ref)\}]"}}
    motionblur {{(mode==2)*0.2}}
    shutter {{FlashMB*(0.175*0.3)}}
    shutteroffset centred
    name ENVMatchMove2
    xpos -430
    ypos 320
    addUserKnob {20 User l parent}
    addUserKnob {3 ref}
    ref {{parent.CTimeOffset7.ref}}
   }
   Transform {
    translate {{"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return -((root.width/2)-(\[value parent_gun].center.x(1)+\[value parent_gun].translate.x(1)))\}]"} {"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return -((root.height/2)-(\[value parent_gun].center.y(1)+\[value parent_gun].translate.y(1)))\}]"}}
    shutteroffset centred
    name Transform_GUNMatchMove2
    label "alignment correction"
    xpos -430
    ypos 407
    addUserKnob {20 User l parent}
    addUserKnob {22 python_button l "set parent" t "select parent node, and press this button to set the selected node as parent" T "n = nuke.selectedNode()\['name'].getValue()\nnuke.thisNode()\['string'].setValue(n)" +STARTLINE}
    addUserKnob {1 string l parent}
    string Transform_MatchMove10
    addUserKnob {3 ref +INVISIBLE}
    ref {{parent.cCard3D_8.ref}}
   }
   Remove {
    operation keep
    channels rgb
    name Remove11
    xpos -430
    ypos 487
   }
push 0
   Switch {
    inputs 2
    which {{ActivateFrontFlash(CTimeOffset7.ref)}}
    name Switch7
    label "keyframeable disable "
    xpos -430
    ypos 586
   }
push 0
   Switch {
    inputs 2
    which {{parent.Angle_reveal_front.value!=0}}
    name Switch5
    label "disable based on angle"
    xpos -430
    ypos 670
   }
   Dot {
    name Dot2
    xpos -396
    ypos 749
   }
push $Nb4685990
   Multiply {
    value {{math_matrix.result_z_flash(parent.CTimeOffset7.ref)}}
    name Angle_reveal_side
    label SIDE
    xpos -135
    ypos -374
   }
   Transform {
    scale {{0.05+(0.05*(((parent.DecimalTimeOffset1.decimal-0.5)*2)*ScaleVariationFlash))}}
    center {{root.width/2 x1015 2304} {root.height/2}}
    shutteroffset centred
    name random_size_side
    xpos -135
    ypos -137
   }
   Card3D {
    translate {{"\[if \{\[exists  parent.parent.parent.input0]\} \{return \[value \[topnode parent.parent.parent.input0].name].translate.x(ref)\} \{return 0\}]"} {"\[if \{\[exists  parent.parent.parent.input0]\} \{return \[value \[topnode parent.parent.parent.input0].name].translate.y(ref)\} \{return 0\}]"} {"\[if \{\[exists  parent.parent.parent.input0]\} \{return \[value \[topnode parent.parent.parent.input0].name].translate.z(ref)\} \{return -1\}]"}}
    rotate {{"\[if \{\[exists  parent.parent.parent.input0]\} \{return \[value \[topnode parent.parent.parent.input0].name].rotate.x(ref)\} \{return 0\}]"} {"\[if \{\[exists  parent.parent.parent.input0]\} \{return \[value \[topnode parent.parent.parent.input0].name].rotate.y(ref)\} \{return 0\}]"} {"\[if \{\[exists  parent.parent.parent.input0]\} \{return \[value \[topnode parent.parent.parent.input0].name].rotate.z(ref)\} \{return 0\}]"}}
    scaling {{"\[if \{\[exists  parent.parent.parent.input0]\} \{return \[value \[topnode parent.parent.parent.input0].name].scaling.x(ref)\} \{return 1\}]"} {"\[if \{\[exists  parent.parent.parent.input0]\} \{return \[value \[topnode parent.parent.parent.input0].name].scaling.y(ref)\} \{return 1\}]"} {"\[if \{\[exists  parent.parent.parent.input0]\} \{return \[value \[topnode parent.parent.parent.input0].name].scaling.z(ref)\} \{return 1\}]"}}
    uniform_scale {{"\[if \{\[exists  parent.parent.parent.input0]\} \{return (\[value \[topnode parent.parent.parent.input0].name].uniform_scale(ref)*25)\} \{return 25\}]"}}
    shutteroffset centred
    name cCard3D_1
    tile_color 0x7b1d1dff
    label "ref frame: \[value ref]"
    xpos -135
    ypos 147
    addUserKnob {20 User l parent}
    addUserKnob {22 python_button l "set parent" t "select parent node, and press this button to set the selected node as parent" +INVISIBLE T "n = nuke.selectedNode()\['name'].getValue()\nnuke.thisNode()\['string'].setValue(n)" +STARTLINE}
    addUserKnob {1 string l parent +INVISIBLE}
    string null
    addUserKnob {3 id l "id number"}
    id {{parent.CTimeOffset7.shotnmbr}}
    addUserKnob {3 ref l "ref frame"}
    ref {{parent.CTimeOffset7.ref}}
   }
   Transform {
    translate {{"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].translate.x(ref)\}]"} {"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].translate.y(ref)\}]"}}
    rotate {{"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].rotate-\[value parent_gun].rotate(ref)\}]"}}
    scale {{"\[if \{\[value parent_gun]==\"null\"\} \{return 1\} \{return 1+(\[value parent_gun].scale-\[value parent_gun].scale(ref))\}]"}}
    center {{"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].center.x(ref)\}]"} {"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].center.y(ref)\}]"}}
    name GUNMatchMove1
    label "\n"
    xpos -135
    ypos 241
    addUserKnob {20 User l parent}
    addUserKnob {3 ref}
    ref {{parent.CTimeOffset7.ref}}
   }
   Transform {
    translate {{"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].translate.x-\[value parent_env].translate.x(ref)\}]"} {"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].translate.y-\[value parent_env].translate.y(ref)\}]"}}
    rotate {{"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].rotate-\[value parent_env].rotate(ref)\}]"}}
    scale {{"\[if \{\[value parent_gun]==\"null\"\} \{return 1\} \{return 1+(\[value parent_env].scale-\[value parent_env].scale(ref))\}]"}}
    center {{"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].center.x(ref)\}]"} {"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].center.y(ref)\}]"}}
    motionblur {{(mode==2)*0.2}}
    shutter {{FlashMB*(0.175*0.3)}}
    shutteroffset centred
    name ENVMatchMove1
    xpos -135
    ypos 317
    addUserKnob {20 User l parent}
    addUserKnob {3 ref}
    ref {{parent.CTimeOffset7.ref}}
   }
   Transform {
    translate {{"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return -((root.width/2)-(\[value parent_gun].center.x(1)+\[value parent_gun].translate.x(1)))\}]"} {"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return -((root.height/2)-(\[value parent_gun].center.y(1)+\[value parent_gun].translate.y(1)))\}]"}}
    shutteroffset centred
    name Transform_GUNMatchMove3
    label "alignment correction"
    xpos -135
    ypos 405
    addUserKnob {20 User l parent}
    addUserKnob {22 python_button l "set parent" t "select parent node, and press this button to set the selected node as parent" T "n = nuke.selectedNode()\['name'].getValue()\nnuke.thisNode()\['string'].setValue(n)" +STARTLINE}
    addUserKnob {1 string l parent}
    string Transform_MatchMove10
    addUserKnob {3 ref +INVISIBLE}
    ref {{parent.cCard3D_8.ref}}
   }
   Remove {
    operation keep
    channels rgb
    name Remove12
    xpos -135
    ypos 489
   }
push 0
   Switch {
    inputs 2
    which {{ActivateSideFlash(CTimeOffset7.ref)}}
    name Switch3
    label "keyframeable disable "
    xpos -135
    ypos 587
   }
push 0
   Switch {
    inputs 2
    which {{parent.Angle_reveal_side.value!=0}}
    name Switch6
    label "disable based on angle"
    xpos -135
    ypos 671
   }
   Merge2 {
    inputs 3+1
    operation max
    name Merge1
    xpos -135
    ypos 745
   }
   Merge2 {
    inputs 2
    operation plus
    bbox intersection
    name Merge6
    xpos -135
    ypos 1196
   }
push 0
   Switch {
    inputs 2
    which {{"shot_\[value count]==0?0:(EnableExtraFrames==1?floor(((frame>=shot_\[value count])+(frame<=(shot_\[value count]+(4*((mode==1)+(mode==2))))))/2):frame==shot_\[value count])"}}
    name cSwitch_3
    selected true
    xpos -135
    ypos 1354
    addUserKnob {20 User}
    addUserKnob {3 count l "shot number"}
    count {{parent.CTimeOffset7.shotnmbr}}
   }
   Output {
    name Output1
    xpos -135
    ypos 1861
   }
  end_group
push $N56cfb0e0
push $N4fbf2670
  Group {
   inputs 2
   name gunshot12
   label "shot: \[value shotcount]\non frame: \[value shot_\[value shotcount]]\n"
   xpos 10070
   ypos -814
   addUserKnob {20 User}
   addUserKnob {3 shotcount l shot}
   shotcount 12
   addUserKnob {3 shotstart l frame +INVISIBLE}
   shotstart {{"shotcount==0 ? 0 : shot\[value shotcount]-1"}}
  }
   BackdropNode {
    inputs 0
    name BackdropNode3
    knobChanged "try:\n    listenedKnobs = \['text', 'position', 'name']\n    node = nuke.thisNode()\n    name = node.knob('name').value()\n    text = node.knob('text').value()\n    position = node.knob('position').value()\n    position = \"<\" + position + \">\"\n    label = node.knob('label').value()\n    \n    if nuke.thisKnob().name() in listenedKnobs:\n        if text == \"\":\n            if node.knob('position').value() == \"left\":\n                node.knob('label').setValue()\n            else:\n                node.knob('label').setValue(position + name)\n        else:\n            if node.knob('position').value() == \"left\":\n                node.knob('label').setValue(text)\n            else:\n                node.knob('label').setValue(position + text)\n                \n    elif nuke.thisKnob().name() == 'font_size':\n        fontSize = node.knob('font_size').value()\n        node.knob('note_font_size').setValue(fontSize)\nexcept:\n    pass"
    tile_color 0x232323ff
    label "<Left><h2> Gunshot"
    note_font_size 31.5
    xpos -698
    ypos -924
    bdwidth 1057
    bdheight 2343
    addUserKnob {20 F_VFX l BackdropNode}
    addUserKnob {43 text l Text}
    text "<h2> Gunshot"
    addUserKnob {7 font_size l "Font Size" R 10 100}
    font_size 31.5
    addUserKnob {4 position l "" -STARTLINE M {Left Center}}
    addUserKnob {26 S01 l " " T " "}
    addUserKnob {22 grow l " <img src=\"F_scalep.png\">" -STARTLINE T "n=nuke.thisNode()\n\ndef grow(node=None,step=50):\n    try:\n        if not node:\n            n=nuke.selectedNode()\n        else:\n            n=node\n            n\['xpos'].setValue(n\['xpos'].getValue()-step)\n            n\['ypos'].setValue(n\['ypos'].getValue()-step)\n            n\['bdwidth'].setValue(n\['bdwidth'].getValue()+step*2)\n            n\['bdheight'].setValue(n\['bdheight'].getValue()+step*2)\n    except:\n        pass\ngrow(n,50)"}
    addUserKnob {22 shrink l " <img src=\"F_scalem.png\">" -STARTLINE T "n=nuke.thisNode()\n\ndef shrink(node=None,step=50):\n    try:\n        if not node:\n            n=nuke.selectedNode()\n        else:\n            n=node\n            n\['xpos'].setValue(n\['xpos'].getValue()+step)\n            n\['ypos'].setValue(n\['ypos'].getValue()+step)\n            n\['bdwidth'].setValue(n\['bdwidth'].getValue()-step*2)\n            n\['bdheight'].setValue(n\['bdheight'].getValue()-step*2)\n    except:\n        pass\nshrink(n,50)"}
    addUserKnob {22 colorandom l " <img src=\"ColorBars.png\">" -STARTLINE T "import colorsys, random\nn=nuke.thisNode()\nR,G,B= colorsys.hsv_to_rgb(random.random(),.1+random.random()*.15,.15+random.random()*.15)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ) )"}
    addUserKnob {22 darkgrey l "<font color=\"#232323\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.0, 0.0, 0.14]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 lightgrey l "<font color=\"#383838\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.0, 0.0, 0.22]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 red l "<font color=\"#8c3838\" size=6>■</font>" T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.0, 0.6, 0.55]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n" +STARTLINE}
    addUserKnob {22 orange l "<font color=\"#b28e59\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.1, 0.5, 0.7]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 yellow l "<font color=\"#ccc766\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.16, 0.5, 0.8]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 green l "<font color=\"#5d995b\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.33, 0.4, 0.6]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 cyan l "<font color=\"#72998f\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.46, 0.25, 0.6]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 blue l "<font color=\"#59687f\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.6, 0.3, 0.5]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 darkblue l "<font color=\"#63628c\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.67, 0.3, 0.55]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 magenta l "<font color=\"#927a99\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.8, 0.2, 0.6]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 pink l "<font color=\"#997a89\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.92, 0.2, 0.6]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {26 S02 l " " T " "}
    addUserKnob {26 Ftools l "" +STARTLINE T "<font color=\"#1C1C1C\"> v1.2 - Franklin VFX - 2018"}
   }
   BackdropNode {
    inputs 0
    name BackdropNode1
    knobChanged "try:\n    listenedKnobs = \['text', 'position', 'name']\n    node = nuke.thisNode()\n    name = node.knob('name').value()\n    text = node.knob('text').value()\n    position = node.knob('position').value()\n    position = \"<\" + position + \">\"\n    label = node.knob('label').value()\n    \n    if nuke.thisKnob().name() in listenedKnobs:\n        if text == \"\":\n            if node.knob('position').value() == \"left\":\n                node.knob('label').setValue()\n            else:\n                node.knob('label').setValue(position + name)\n        else:\n            if node.knob('position').value() == \"left\":\n                node.knob('label').setValue(text)\n            else:\n                node.knob('label').setValue(position + text)\n                \n    elif nuke.thisKnob().name() == 'font_size':\n        fontSize = node.knob('font_size').value()\n        node.knob('note_font_size').setValue(fontSize)\nexcept:\n    pass"
    tile_color 0x927a99ff
    note_font_size 50
    xpos -460
    ypos -257
    bdwidth 435
    bdheight 786
    z_order 1
    addUserKnob {20 F_VFX l BackdropNode}
    addUserKnob {43 text l Text}
    addUserKnob {7 font_size l "Font Size" R 10 100}
    font_size 50
    addUserKnob {4 position l "" -STARTLINE M {Left Center}}
    addUserKnob {26 S01 l " " T " "}
    addUserKnob {22 grow l " <img src=\"F_scalep.png\">" -STARTLINE T "n=nuke.thisNode()\n\ndef grow(node=None,step=50):\n    try:\n        if not node:\n            n=nuke.selectedNode()\n        else:\n            n=node\n            n\['xpos'].setValue(n\['xpos'].getValue()-step)\n            n\['ypos'].setValue(n\['ypos'].getValue()-step)\n            n\['bdwidth'].setValue(n\['bdwidth'].getValue()+step*2)\n            n\['bdheight'].setValue(n\['bdheight'].getValue()+step*2)\n    except:\n        pass\ngrow(n,50)"}
    addUserKnob {22 shrink l " <img src=\"F_scalem.png\">" -STARTLINE T "n=nuke.thisNode()\n\ndef shrink(node=None,step=50):\n    try:\n        if not node:\n            n=nuke.selectedNode()\n        else:\n            n=node\n            n\['xpos'].setValue(n\['xpos'].getValue()+step)\n            n\['ypos'].setValue(n\['ypos'].getValue()+step)\n            n\['bdwidth'].setValue(n\['bdwidth'].getValue()-step*2)\n            n\['bdheight'].setValue(n\['bdheight'].getValue()-step*2)\n    except:\n        pass\nshrink(n,50)"}
    addUserKnob {22 colorandom l " <img src=\"ColorBars.png\">" -STARTLINE T "import colorsys, random\nn=nuke.thisNode()\nR,G,B= colorsys.hsv_to_rgb(random.random(),.1+random.random()*.15,.15+random.random()*.15)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ) )"}
    addUserKnob {22 darkgrey l "<font color=\"#232323\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.0, 0.0, 0.14]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 lightgrey l "<font color=\"#383838\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.0, 0.0, 0.22]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 red l "<font color=\"#8c3838\" size=6>■</font>" T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.0, 0.6, 0.55]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n" +STARTLINE}
    addUserKnob {22 orange l "<font color=\"#b28e59\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.1, 0.5, 0.7]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 yellow l "<font color=\"#ccc766\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.16, 0.5, 0.8]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 green l "<font color=\"#5d995b\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.33, 0.4, 0.6]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 cyan l "<font color=\"#72998f\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.46, 0.25, 0.6]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 blue l "<font color=\"#59687f\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.6, 0.3, 0.5]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 darkblue l "<font color=\"#63628c\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.67, 0.3, 0.55]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 magenta l "<font color=\"#927a99\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.8, 0.2, 0.6]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 pink l "<font color=\"#997a89\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.92, 0.2, 0.6]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {26 S02 l " " T " "}
    addUserKnob {26 Ftools l "" +STARTLINE T "<font color=\"#1C1C1C\"> v1.2 - Franklin VFX - 2018"}
   }
   Constant {
    inputs 0
    channels rgb
    name Constant4
    xpos -648
    ypos 987
   }
   AdjBBox {
    numpixels {{size_bbox}}
    name AdjBBox4
    xpos -648
    ypos 1120
   }
   Dot {
    name Dot19
    xpos -614
    ypos 1200
   }
   Axis3 {
    inputs 0
    useMatrix true
    matrix {
        {{parent.cCard3D_1.matrix} {parent.cCard3D_1.matrix} {parent.cCard3D_1.matrix} {parent.cCard3D_1.matrix}}
        {{parent.cCard3D_1.matrix} {parent.cCard3D_1.matrix} {parent.cCard3D_1.matrix} {parent.cCard3D_1.matrix}}
        {{parent.cCard3D_1.matrix} {parent.cCard3D_1.matrix} {parent.cCard3D_1.matrix} {parent.cCard3D_1.matrix}}
        {{parent.cCard3D_1.matrix} {parent.cCard3D_1.matrix} {parent.cCard3D_1.matrix} {parent.cCard3D_1.matrix}}
      }
    name Axis3
    xpos -207
    ypos 48
   }
set N5e3a6300 [stack 0]
push 0
   Input {
    inputs 0
    name Side
    xpos -135
    ypos -1101
   }
   TimeOffset {
    time_offset {{"shotnmbr==0 ? 0 : shot_\[value shotnmbr]-1"}}
    time ""
    name CTimeOffset7
    label "shot: \[value shotnmbr]\non frame \[value time_offset]"
    xpos -135
    ypos -853
    addUserKnob {20 User}
    addUserKnob {3 shotnmbr l "shot "}
    shotnmbr {{shotcount}}
    addUserKnob {3 ref}
    ref {{time_offset+1}}
   }
   Group {
    name DecimalTimeOffset1
    tile_color 0xafa35dff
    label "random asset\n(based on brighness)"
    note_font "Bitstream Vera Sans Bold"
    xpos -135
    ypos -690
    addUserKnob {20 User}
    addUserKnob {7 decimal l "time offset (decimal)"}
    decimal {{"floor\n(\n  (\n  (  ((((random((shotcount*823)+((seed+seed_offset_\[value shotcount])*212))-0.5)*  ((1-( abs(brighness_flare-0.5) )*2)+1)  )+0.5)*0.5)  * (1-brighness_flare)  )\n\n  +\n\n  (  (((((random((shotcount*823)+((seed+seed_offset_\[value shotcount])*212))-0.5)*  ((1-( abs(brighness_flare-0.5) )*2)+1)  )+0.5)*0.5)+0.5)  * (brighness_flare)  )\n  )\n  *1000\n)\n\n/1000"}}
    addUserKnob {26 ""}
    addUserKnob {26 _1 l "" +STARTLINE T "Chris Fryer | 2020\nupdated by Yorben Otto | 2024"}
   }
    Input {
     inputs 0
     name Input1
     xpos 426
     ypos -793
    }
    TimeOffset {
     time_offset {{(-floor(parent.decimal))*(DecimalTimeOffset1.decimal<0)}}
     time ""
     name TimeOffset1
     xpos 426
     ypos -674
    }
    Dot {
     name Dot6
     xpos 460
     ypos -635
    }
set N5e3e5cd0 [stack 0]
    Dot {
     name Dot5
     xpos 350
     ypos -635
    }
    Dot {
     name Dot7
     xpos 350
     ypos -365
    }
push $N5e3e5cd0
    Dot {
     name Dot1
     xpos 572
     ypos -635
    }
    TimeBlur {
     divisions 2
     shutter {{(parent.decimal-(floor(parent.decimal)))*2}}
     shutteroffset start
     shuttercustomoffset 0
     name TimeBlur1
     xpos 538
     ypos -558
    }
    Dot {
     name Dot2
     xpos 572
     ypos -490
    }
push $N5e3e5cd0
    TimeBlur {
     divisions 2
     shutter {{parent.decimal*2}}
     shutteroffset start
     shuttercustomoffset 0
     name TimeBlur8
     xpos 426
     ypos -556
    }
    Switch {
     inputs 2
     which {{parent.decimal<0}}
     name Switch1
     xpos 426
     ypos -494
    }
    Multiply {
     value {{parent.TimeBlur8.divisions}}
     name Multiply6
     xpos 426
     ypos -436
    }
    Merge2 {
     inputs 2
     operation from
     name Merge6
     xpos 426
     ypos -369
    }
set N5e437b30 [stack 0]
    Output {
     name Output1
     xpos 426
     ypos -221
    }
push $N5e437b30
push $N5e437b30
    Viewer {
     inputs 2
     frame_range 1-100
     viewerProcess "sRGB (default)"
     name Viewer1
     xpos 675
     ypos -246
    }
   end_group
   NoTimeBlur {
    name NoTimeBlur6
    xpos -135
    ypos -608
   }
   Dot {
    name Dot21
    xpos -101
    ypos -449
   }
set N5e4d64a0 [stack 0]
   Dot {
    name Dot22
    xpos -245
    ypos -449
   }
   Multiply {
    value {{math_matrix.result_y_flash(parent.CTimeOffset7.ref)}}
    name Angle_reveal_top
    label TOP
    xpos -279
    ypos -371
   }
   Transform {
    scale {{0.05+(0.05*(((parent.DecimalTimeOffset1.decimal-0.5)*2)*ScaleVariationFlash))}}
    center {{root.width/2 x1015 2304} {root.height/2}}
    shutteroffset centred
    name random_size_top
    xpos -279
    ypos -136
   }
   Card3D {
    inputs 3
    rot_order ZYX
    translate {0 0 0}
    rotate {90 0 0}
    shutteroffset centred
    name cCard3D5
    tile_color 0x7b1d1dff
    xpos -279
    ypos 153
    addUserKnob {20 User l parent}
    addUserKnob {22 python_button l "set parent" t "select parent node, and press this button to set the selected node as parent" +INVISIBLE T "n = nuke.selectedNode()\['name'].getValue()\nnuke.thisNode()\['string'].setValue(n)" +STARTLINE}
    addUserKnob {1 string l parent +INVISIBLE}
    string null
    addUserKnob {3 ref l "ref frame"}
    ref 1015
   }
   Transform {
    translate {{"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].translate.x(ref)\}]"} {"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].translate.y(ref)\}]"}}
    rotate {{"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].rotate-\[value parent_gun].rotate(ref)\}]"}}
    scale {{"\[if \{\[value parent_gun]==\"null\"\} \{return 1\} \{return 1+(\[value parent_gun].scale-\[value parent_gun].scale(ref))\}]"}}
    center {{"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].center.x(ref)\}]"} {"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].center.y(ref)\}]"}}
    name GUNMatchMove
    label "\n"
    xpos -279
    ypos 247
    addUserKnob {20 User l parent}
    addUserKnob {3 ref}
    ref {{parent.CTimeOffset7.ref}}
   }
   Transform {
    translate {{"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].translate.x-\[value parent_env].translate.x(ref)\}]"} {"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].translate.y-\[value parent_env].translate.y(ref)\}]"}}
    rotate {{"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].rotate-\[value parent_env].rotate(ref)\}]"}}
    scale {{"\[if \{\[value parent_gun]==\"null\"\} \{return 1\} \{return 1+(\[value parent_env].scale-\[value parent_env].scale(ref))\}]"}}
    center {{"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].center.x(ref)\}]"} {"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].center.y(ref)\}]"}}
    motionblur {{(mode==2)*0.2}}
    shutter {{FlashMB*(0.175*0.3)}}
    shutteroffset centred
    name ENVMatchMove
    xpos -279
    ypos 321
    addUserKnob {20 User l parent}
    addUserKnob {3 ref}
    ref {{parent.CTimeOffset7.ref}}
   }
   Transform {
    translate {{"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return -((root.width/2)-(\[value parent_gun].center.x(1)+\[value parent_gun].translate.x(1)))\}]"} {"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return -((root.height/2)-(\[value parent_gun].center.y(1)+\[value parent_gun].translate.y(1)))\}]"}}
    shutteroffset centred
    name Transform_GUNMatchMove1
    label "alignment correction"
    xpos -279
    ypos 408
    addUserKnob {20 User l parent}
    addUserKnob {22 python_button l "set parent" t "select parent node, and press this button to set the selected node as parent" T "n = nuke.selectedNode()\['name'].getValue()\nnuke.thisNode()\['string'].setValue(n)" +STARTLINE}
    addUserKnob {1 string l parent}
    string Transform_MatchMove10
    addUserKnob {3 ref +INVISIBLE}
    ref {{parent.cCard3D_8.ref}}
   }
   Remove {
    operation keep
    channels rgb
    name Remove10
    xpos -279
    ypos 489
   }
push 0
   Switch {
    inputs 2
    which {{ActivateSideFlash(CTimeOffset7.ref)}}
    name Switch1
    label "keyframeable disable "
    xpos -279
    ypos 587
   }
push 0
   Switch {
    inputs 2
    which {{parent.Angle_reveal_top.value!=0}}
    name Switch4
    label "disable based on angle"
    xpos -279
    ypos 670
   }
   Dot {
    name Dot1
    xpos -245
    ypos 717
   }
push 0
push $N5e3a6300
push 0
   Input {
    inputs 0
    name Front
    xpos -430
    ypos -1102
    number 1
   }
   TimeOffset {
    time_offset {{"shotnmbr==0 ? 0 : shot_\[value shotnmbr]-1"}}
    time ""
    name CTimeOffset8
    xpos -430
    ypos -840
    addUserKnob {20 User}
    addUserKnob {3 shotnmbr l "shot "}
    shotnmbr {{parent.CTimeOffset7.shotnmbr}}
   }
   Group {
    name DecimalTimeOffset
    tile_color 0xafa35dff
    label "random asset\n(based on brighness)"
    note_font "Bitstream Vera Sans Bold"
    xpos -430
    ypos -693
    addUserKnob {20 User}
    addUserKnob {7 decimal l "time offset (decimal)"}
    decimal {{"floor\n(\n  (\n  (  ((((random((shotcount*823)+((seed+seed_offset_\[value shotcount])*212))-0.5)*  ((1-( abs(brighness_flare-0.5) )*2)+1)  )+0.5)*0.5)  * (1-brighness_flare)  )\n\n  +\n\n  (  (((((random((shotcount*823)+((seed+seed_offset_\[value shotcount])*212))-0.5)*  ((1-( abs(brighness_flare-0.5) )*2)+1)  )+0.5)*0.5)+0.5)  * (brighness_flare)  )\n  )\n  *1000\n)\n\n/1000"}}
    addUserKnob {26 ""}
    addUserKnob {26 _1 l "" +STARTLINE T "Chris Fryer | 2020\nupdated by Yorben Otto | 2024"}
   }
    Input {
     inputs 0
     name Input1
     xpos 426
     ypos -793
    }
    TimeOffset {
     time_offset {{(-floor(parent.decimal))*(DecimalTimeOffset.decimal<0)}}
     time ""
     name TimeOffset1
     xpos 426
     ypos -674
    }
    Dot {
     name Dot6
     xpos 460
     ypos -635
    }
set N5e595f10 [stack 0]
    Dot {
     name Dot5
     xpos 350
     ypos -635
    }
    Dot {
     name Dot7
     xpos 350
     ypos -365
    }
push $N5e595f10
    Dot {
     name Dot1
     xpos 572
     ypos -635
    }
    TimeBlur {
     divisions 2
     shutter {{(parent.decimal-(floor(parent.decimal)))*2}}
     shutteroffset start
     shuttercustomoffset 0
     name TimeBlur1
     xpos 538
     ypos -558
    }
    Dot {
     name Dot2
     xpos 572
     ypos -490
    }
push $N5e595f10
    TimeBlur {
     divisions 2
     shutter {{parent.decimal*2}}
     shutteroffset start
     shuttercustomoffset 0
     name TimeBlur8
     xpos 426
     ypos -556
    }
    Switch {
     inputs 2
     which {{parent.decimal<0}}
     name Switch1
     xpos 426
     ypos -494
    }
    Multiply {
     value {{parent.TimeBlur8.divisions}}
     name Multiply6
     xpos 426
     ypos -436
    }
    Merge2 {
     inputs 2
     operation from
     name Merge6
     xpos 426
     ypos -369
    }
set N5e5d7e50 [stack 0]
    Output {
     name Output1
     xpos 426
     ypos -221
    }
push $N5e5d7e50
push $N5e5d7e50
    Viewer {
     inputs 2
     frame_range 1-100
     viewerProcess "sRGB (default)"
     name Viewer1
     xpos 675
     ypos -246
    }
   end_group
   NoTimeBlur {
    name NoTimeBlur7
    xpos -430
    ypos -617
   }
   Multiply {
    value {{math_matrix.result_x_flash(parent.CTimeOffset7.ref)}}
    name Angle_reveal_front
    label FRONT
    xpos -430
    ypos -375
   }
   Transform {
    scale {{0.05+(0.05*(((parent.DecimalTimeOffset1.decimal-0.5)*2)*ScaleVariationFlash))}}
    center {{root.width/2 x1015 2304} {root.height/2}}
    shutteroffset centred
    name random_size_front
    xpos -430
    ypos -134
   }
   Card3D {
    inputs 3
    rot_order ZYX
    translate {0 0 0}
    rotate {0 90 0}
    shutteroffset centred
    name cCard3D6
    tile_color 0x7b1d1dff
    xpos -430
    ypos 150
    addUserKnob {20 User l parent}
    addUserKnob {22 python_button l "set parent" t "select parent node, and press this button to set the selected node as parent" +INVISIBLE T "n = nuke.selectedNode()\['name'].getValue()\nnuke.thisNode()\['string'].setValue(n)" +STARTLINE}
    addUserKnob {1 string l parent +INVISIBLE}
    string null
    addUserKnob {3 ref l "ref frame"}
    ref 1015
   }
   Transform {
    translate {{"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].translate.x(ref)\}]"} {"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].translate.y(ref)\}]"}}
    rotate {{"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].rotate-\[value parent_gun].rotate(ref)\}]"}}
    scale {{"\[if \{\[value parent_gun]==\"null\"\} \{return 1\} \{return 1+(\[value parent_gun].scale-\[value parent_gun].scale(ref))\}]"}}
    center {{"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].center.x(ref)\}]"} {"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].center.y(ref)\}]"}}
    name GUNMatchMove2
    label "\n"
    xpos -430
    ypos 248
    addUserKnob {20 User l parent}
    addUserKnob {3 ref}
    ref {{parent.CTimeOffset7.ref}}
   }
   Transform {
    translate {{"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].translate.x-\[value parent_env].translate.x(ref)\}]"} {"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].translate.y-\[value parent_env].translate.y(ref)\}]"}}
    rotate {{"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].rotate-\[value parent_env].rotate(ref)\}]"}}
    scale {{"\[if \{\[value parent_gun]==\"null\"\} \{return 1\} \{return 1+(\[value parent_env].scale-\[value parent_env].scale(ref))\}]"}}
    center {{"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].center.x(ref)\}]"} {"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].center.y(ref)\}]"}}
    motionblur {{(mode==2)*0.2}}
    shutter {{FlashMB*(0.175*0.3)}}
    shutteroffset centred
    name ENVMatchMove2
    xpos -430
    ypos 320
    addUserKnob {20 User l parent}
    addUserKnob {3 ref}
    ref {{parent.CTimeOffset7.ref}}
   }
   Transform {
    translate {{"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return -((root.width/2)-(\[value parent_gun].center.x(1)+\[value parent_gun].translate.x(1)))\}]"} {"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return -((root.height/2)-(\[value parent_gun].center.y(1)+\[value parent_gun].translate.y(1)))\}]"}}
    shutteroffset centred
    name Transform_GUNMatchMove2
    label "alignment correction"
    xpos -430
    ypos 407
    addUserKnob {20 User l parent}
    addUserKnob {22 python_button l "set parent" t "select parent node, and press this button to set the selected node as parent" T "n = nuke.selectedNode()\['name'].getValue()\nnuke.thisNode()\['string'].setValue(n)" +STARTLINE}
    addUserKnob {1 string l parent}
    string Transform_MatchMove10
    addUserKnob {3 ref +INVISIBLE}
    ref {{parent.cCard3D_8.ref}}
   }
   Remove {
    operation keep
    channels rgb
    name Remove11
    xpos -430
    ypos 487
   }
push 0
   Switch {
    inputs 2
    which {{ActivateFrontFlash(CTimeOffset7.ref)}}
    name Switch7
    label "keyframeable disable "
    xpos -430
    ypos 586
   }
push 0
   Switch {
    inputs 2
    which {{parent.Angle_reveal_front.value!=0}}
    name Switch5
    label "disable based on angle"
    xpos -430
    ypos 670
   }
   Dot {
    name Dot2
    xpos -396
    ypos 749
   }
push $N5e4d64a0
   Multiply {
    value {{math_matrix.result_z_flash(parent.CTimeOffset7.ref)}}
    name Angle_reveal_side
    label SIDE
    xpos -135
    ypos -374
   }
   Transform {
    scale {{0.05+(0.05*(((parent.DecimalTimeOffset1.decimal-0.5)*2)*ScaleVariationFlash))}}
    center {{root.width/2 x1015 2304} {root.height/2}}
    shutteroffset centred
    name random_size_side
    xpos -135
    ypos -137
   }
   Card3D {
    translate {{"\[if \{\[exists  parent.parent.parent.input0]\} \{return \[value \[topnode parent.parent.parent.input0].name].translate.x(ref)\} \{return 0\}]"} {"\[if \{\[exists  parent.parent.parent.input0]\} \{return \[value \[topnode parent.parent.parent.input0].name].translate.y(ref)\} \{return 0\}]"} {"\[if \{\[exists  parent.parent.parent.input0]\} \{return \[value \[topnode parent.parent.parent.input0].name].translate.z(ref)\} \{return -1\}]"}}
    rotate {{"\[if \{\[exists  parent.parent.parent.input0]\} \{return \[value \[topnode parent.parent.parent.input0].name].rotate.x(ref)\} \{return 0\}]"} {"\[if \{\[exists  parent.parent.parent.input0]\} \{return \[value \[topnode parent.parent.parent.input0].name].rotate.y(ref)\} \{return 0\}]"} {"\[if \{\[exists  parent.parent.parent.input0]\} \{return \[value \[topnode parent.parent.parent.input0].name].rotate.z(ref)\} \{return 0\}]"}}
    scaling {{"\[if \{\[exists  parent.parent.parent.input0]\} \{return \[value \[topnode parent.parent.parent.input0].name].scaling.x(ref)\} \{return 1\}]"} {"\[if \{\[exists  parent.parent.parent.input0]\} \{return \[value \[topnode parent.parent.parent.input0].name].scaling.y(ref)\} \{return 1\}]"} {"\[if \{\[exists  parent.parent.parent.input0]\} \{return \[value \[topnode parent.parent.parent.input0].name].scaling.z(ref)\} \{return 1\}]"}}
    uniform_scale {{"\[if \{\[exists  parent.parent.parent.input0]\} \{return (\[value \[topnode parent.parent.parent.input0].name].uniform_scale(ref)*25)\} \{return 25\}]"}}
    shutteroffset centred
    name cCard3D_1
    tile_color 0x7b1d1dff
    label "ref frame: \[value ref]"
    xpos -135
    ypos 147
    addUserKnob {20 User l parent}
    addUserKnob {22 python_button l "set parent" t "select parent node, and press this button to set the selected node as parent" +INVISIBLE T "n = nuke.selectedNode()\['name'].getValue()\nnuke.thisNode()\['string'].setValue(n)" +STARTLINE}
    addUserKnob {1 string l parent +INVISIBLE}
    string null
    addUserKnob {3 id l "id number"}
    id {{parent.CTimeOffset7.shotnmbr}}
    addUserKnob {3 ref l "ref frame"}
    ref {{parent.CTimeOffset7.ref}}
   }
   Transform {
    translate {{"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].translate.x(ref)\}]"} {"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].translate.y(ref)\}]"}}
    rotate {{"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].rotate-\[value parent_gun].rotate(ref)\}]"}}
    scale {{"\[if \{\[value parent_gun]==\"null\"\} \{return 1\} \{return 1+(\[value parent_gun].scale-\[value parent_gun].scale(ref))\}]"}}
    center {{"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].center.x(ref)\}]"} {"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].center.y(ref)\}]"}}
    name GUNMatchMove1
    label "\n"
    xpos -135
    ypos 241
    addUserKnob {20 User l parent}
    addUserKnob {3 ref}
    ref {{parent.CTimeOffset7.ref}}
   }
   Transform {
    translate {{"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].translate.x-\[value parent_env].translate.x(ref)\}]"} {"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].translate.y-\[value parent_env].translate.y(ref)\}]"}}
    rotate {{"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].rotate-\[value parent_env].rotate(ref)\}]"}}
    scale {{"\[if \{\[value parent_gun]==\"null\"\} \{return 1\} \{return 1+(\[value parent_env].scale-\[value parent_env].scale(ref))\}]"}}
    center {{"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].center.x(ref)\}]"} {"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].center.y(ref)\}]"}}
    motionblur {{(mode==2)*0.2}}
    shutter {{FlashMB*(0.175*0.3)}}
    shutteroffset centred
    name ENVMatchMove1
    xpos -135
    ypos 317
    addUserKnob {20 User l parent}
    addUserKnob {3 ref}
    ref {{parent.CTimeOffset7.ref}}
   }
   Transform {
    translate {{"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return -((root.width/2)-(\[value parent_gun].center.x(1)+\[value parent_gun].translate.x(1)))\}]"} {"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return -((root.height/2)-(\[value parent_gun].center.y(1)+\[value parent_gun].translate.y(1)))\}]"}}
    shutteroffset centred
    name Transform_GUNMatchMove3
    label "alignment correction"
    xpos -135
    ypos 405
    addUserKnob {20 User l parent}
    addUserKnob {22 python_button l "set parent" t "select parent node, and press this button to set the selected node as parent" T "n = nuke.selectedNode()\['name'].getValue()\nnuke.thisNode()\['string'].setValue(n)" +STARTLINE}
    addUserKnob {1 string l parent}
    string Transform_MatchMove10
    addUserKnob {3 ref +INVISIBLE}
    ref {{parent.cCard3D_8.ref}}
   }
   Remove {
    operation keep
    channels rgb
    name Remove12
    xpos -135
    ypos 489
   }
push 0
   Switch {
    inputs 2
    which {{ActivateSideFlash(CTimeOffset7.ref)}}
    name Switch3
    label "keyframeable disable "
    xpos -135
    ypos 587
   }
push 0
   Switch {
    inputs 2
    which {{parent.Angle_reveal_side.value!=0}}
    name Switch6
    label "disable based on angle"
    xpos -135
    ypos 671
   }
   Merge2 {
    inputs 3+1
    operation max
    name Merge1
    xpos -135
    ypos 745
   }
   Merge2 {
    inputs 2
    operation plus
    bbox intersection
    name Merge6
    xpos -135
    ypos 1196
   }
push 0
   Switch {
    inputs 2
    which {{"shot_\[value count]==0?0:(EnableExtraFrames==1?floor(((frame>=shot_\[value count])+(frame<=(shot_\[value count]+(4*((mode==1)+(mode==2))))))/2):frame==shot_\[value count])"}}
    name cSwitch_3
    selected true
    xpos -135
    ypos 1354
    addUserKnob {20 User}
    addUserKnob {3 count l "shot number"}
    count {{parent.CTimeOffset7.shotnmbr}}
   }
   Output {
    name Output1
    xpos -135
    ypos 1861
   }
  end_group
push $N32775e40
push $N5b4f34b0
  Group {
   inputs 2
   name gunshot13
   label "shot: \[value shotcount]\non frame: \[value shot_\[value shotcount]]\n"
   xpos 10301
   ypos -814
   addUserKnob {20 User}
   addUserKnob {3 shotcount l shot}
   shotcount 13
   addUserKnob {3 shotstart l frame +INVISIBLE}
   shotstart {{"shotcount==0 ? 0 : shot\[value shotcount]-1"}}
  }
   BackdropNode {
    inputs 0
    name BackdropNode3
    knobChanged "try:\n    listenedKnobs = \['text', 'position', 'name']\n    node = nuke.thisNode()\n    name = node.knob('name').value()\n    text = node.knob('text').value()\n    position = node.knob('position').value()\n    position = \"<\" + position + \">\"\n    label = node.knob('label').value()\n    \n    if nuke.thisKnob().name() in listenedKnobs:\n        if text == \"\":\n            if node.knob('position').value() == \"left\":\n                node.knob('label').setValue()\n            else:\n                node.knob('label').setValue(position + name)\n        else:\n            if node.knob('position').value() == \"left\":\n                node.knob('label').setValue(text)\n            else:\n                node.knob('label').setValue(position + text)\n                \n    elif nuke.thisKnob().name() == 'font_size':\n        fontSize = node.knob('font_size').value()\n        node.knob('note_font_size').setValue(fontSize)\nexcept:\n    pass"
    tile_color 0x232323ff
    label "<Left><h2> Gunshot"
    note_font_size 31.5
    xpos -698
    ypos -924
    bdwidth 1057
    bdheight 2343
    addUserKnob {20 F_VFX l BackdropNode}
    addUserKnob {43 text l Text}
    text "<h2> Gunshot"
    addUserKnob {7 font_size l "Font Size" R 10 100}
    font_size 31.5
    addUserKnob {4 position l "" -STARTLINE M {Left Center}}
    addUserKnob {26 S01 l " " T " "}
    addUserKnob {22 grow l " <img src=\"F_scalep.png\">" -STARTLINE T "n=nuke.thisNode()\n\ndef grow(node=None,step=50):\n    try:\n        if not node:\n            n=nuke.selectedNode()\n        else:\n            n=node\n            n\['xpos'].setValue(n\['xpos'].getValue()-step)\n            n\['ypos'].setValue(n\['ypos'].getValue()-step)\n            n\['bdwidth'].setValue(n\['bdwidth'].getValue()+step*2)\n            n\['bdheight'].setValue(n\['bdheight'].getValue()+step*2)\n    except:\n        pass\ngrow(n,50)"}
    addUserKnob {22 shrink l " <img src=\"F_scalem.png\">" -STARTLINE T "n=nuke.thisNode()\n\ndef shrink(node=None,step=50):\n    try:\n        if not node:\n            n=nuke.selectedNode()\n        else:\n            n=node\n            n\['xpos'].setValue(n\['xpos'].getValue()+step)\n            n\['ypos'].setValue(n\['ypos'].getValue()+step)\n            n\['bdwidth'].setValue(n\['bdwidth'].getValue()-step*2)\n            n\['bdheight'].setValue(n\['bdheight'].getValue()-step*2)\n    except:\n        pass\nshrink(n,50)"}
    addUserKnob {22 colorandom l " <img src=\"ColorBars.png\">" -STARTLINE T "import colorsys, random\nn=nuke.thisNode()\nR,G,B= colorsys.hsv_to_rgb(random.random(),.1+random.random()*.15,.15+random.random()*.15)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ) )"}
    addUserKnob {22 darkgrey l "<font color=\"#232323\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.0, 0.0, 0.14]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 lightgrey l "<font color=\"#383838\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.0, 0.0, 0.22]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 red l "<font color=\"#8c3838\" size=6>■</font>" T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.0, 0.6, 0.55]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n" +STARTLINE}
    addUserKnob {22 orange l "<font color=\"#b28e59\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.1, 0.5, 0.7]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 yellow l "<font color=\"#ccc766\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.16, 0.5, 0.8]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 green l "<font color=\"#5d995b\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.33, 0.4, 0.6]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 cyan l "<font color=\"#72998f\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.46, 0.25, 0.6]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 blue l "<font color=\"#59687f\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.6, 0.3, 0.5]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 darkblue l "<font color=\"#63628c\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.67, 0.3, 0.55]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 magenta l "<font color=\"#927a99\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.8, 0.2, 0.6]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 pink l "<font color=\"#997a89\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.92, 0.2, 0.6]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {26 S02 l " " T " "}
    addUserKnob {26 Ftools l "" +STARTLINE T "<font color=\"#1C1C1C\"> v1.2 - Franklin VFX - 2018"}
   }
   BackdropNode {
    inputs 0
    name BackdropNode1
    knobChanged "try:\n    listenedKnobs = \['text', 'position', 'name']\n    node = nuke.thisNode()\n    name = node.knob('name').value()\n    text = node.knob('text').value()\n    position = node.knob('position').value()\n    position = \"<\" + position + \">\"\n    label = node.knob('label').value()\n    \n    if nuke.thisKnob().name() in listenedKnobs:\n        if text == \"\":\n            if node.knob('position').value() == \"left\":\n                node.knob('label').setValue()\n            else:\n                node.knob('label').setValue(position + name)\n        else:\n            if node.knob('position').value() == \"left\":\n                node.knob('label').setValue(text)\n            else:\n                node.knob('label').setValue(position + text)\n                \n    elif nuke.thisKnob().name() == 'font_size':\n        fontSize = node.knob('font_size').value()\n        node.knob('note_font_size').setValue(fontSize)\nexcept:\n    pass"
    tile_color 0x927a99ff
    note_font_size 50
    xpos -460
    ypos -257
    bdwidth 435
    bdheight 786
    z_order 1
    addUserKnob {20 F_VFX l BackdropNode}
    addUserKnob {43 text l Text}
    addUserKnob {7 font_size l "Font Size" R 10 100}
    font_size 50
    addUserKnob {4 position l "" -STARTLINE M {Left Center}}
    addUserKnob {26 S01 l " " T " "}
    addUserKnob {22 grow l " <img src=\"F_scalep.png\">" -STARTLINE T "n=nuke.thisNode()\n\ndef grow(node=None,step=50):\n    try:\n        if not node:\n            n=nuke.selectedNode()\n        else:\n            n=node\n            n\['xpos'].setValue(n\['xpos'].getValue()-step)\n            n\['ypos'].setValue(n\['ypos'].getValue()-step)\n            n\['bdwidth'].setValue(n\['bdwidth'].getValue()+step*2)\n            n\['bdheight'].setValue(n\['bdheight'].getValue()+step*2)\n    except:\n        pass\ngrow(n,50)"}
    addUserKnob {22 shrink l " <img src=\"F_scalem.png\">" -STARTLINE T "n=nuke.thisNode()\n\ndef shrink(node=None,step=50):\n    try:\n        if not node:\n            n=nuke.selectedNode()\n        else:\n            n=node\n            n\['xpos'].setValue(n\['xpos'].getValue()+step)\n            n\['ypos'].setValue(n\['ypos'].getValue()+step)\n            n\['bdwidth'].setValue(n\['bdwidth'].getValue()-step*2)\n            n\['bdheight'].setValue(n\['bdheight'].getValue()-step*2)\n    except:\n        pass\nshrink(n,50)"}
    addUserKnob {22 colorandom l " <img src=\"ColorBars.png\">" -STARTLINE T "import colorsys, random\nn=nuke.thisNode()\nR,G,B= colorsys.hsv_to_rgb(random.random(),.1+random.random()*.15,.15+random.random()*.15)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ) )"}
    addUserKnob {22 darkgrey l "<font color=\"#232323\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.0, 0.0, 0.14]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 lightgrey l "<font color=\"#383838\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.0, 0.0, 0.22]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 red l "<font color=\"#8c3838\" size=6>■</font>" T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.0, 0.6, 0.55]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n" +STARTLINE}
    addUserKnob {22 orange l "<font color=\"#b28e59\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.1, 0.5, 0.7]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 yellow l "<font color=\"#ccc766\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.16, 0.5, 0.8]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 green l "<font color=\"#5d995b\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.33, 0.4, 0.6]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 cyan l "<font color=\"#72998f\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.46, 0.25, 0.6]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 blue l "<font color=\"#59687f\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.6, 0.3, 0.5]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 darkblue l "<font color=\"#63628c\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.67, 0.3, 0.55]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 magenta l "<font color=\"#927a99\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.8, 0.2, 0.6]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 pink l "<font color=\"#997a89\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.92, 0.2, 0.6]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {26 S02 l " " T " "}
    addUserKnob {26 Ftools l "" +STARTLINE T "<font color=\"#1C1C1C\"> v1.2 - Franklin VFX - 2018"}
   }
   Constant {
    inputs 0
    channels rgb
    name Constant4
    xpos -648
    ypos 987
   }
   AdjBBox {
    numpixels {{size_bbox}}
    name AdjBBox4
    xpos -648
    ypos 1120
   }
   Dot {
    name Dot19
    xpos -614
    ypos 1200
   }
   Axis3 {
    inputs 0
    useMatrix true
    matrix {
        {{parent.cCard3D_1.matrix} {parent.cCard3D_1.matrix} {parent.cCard3D_1.matrix} {parent.cCard3D_1.matrix}}
        {{parent.cCard3D_1.matrix} {parent.cCard3D_1.matrix} {parent.cCard3D_1.matrix} {parent.cCard3D_1.matrix}}
        {{parent.cCard3D_1.matrix} {parent.cCard3D_1.matrix} {parent.cCard3D_1.matrix} {parent.cCard3D_1.matrix}}
        {{parent.cCard3D_1.matrix} {parent.cCard3D_1.matrix} {parent.cCard3D_1.matrix} {parent.cCard3D_1.matrix}}
      }
    name Axis3
    xpos -207
    ypos 48
   }
set N5ea04cd0 [stack 0]
push 0
   Input {
    inputs 0
    name Side
    xpos -135
    ypos -1101
   }
   TimeOffset {
    time_offset {{"shotnmbr==0 ? 0 : shot_\[value shotnmbr]-1"}}
    time ""
    name CTimeOffset7
    label "shot: \[value shotnmbr]\non frame \[value time_offset]"
    xpos -135
    ypos -853
    addUserKnob {20 User}
    addUserKnob {3 shotnmbr l "shot "}
    shotnmbr {{shotcount}}
    addUserKnob {3 ref}
    ref {{time_offset+1}}
   }
   Group {
    name DecimalTimeOffset1
    tile_color 0xafa35dff
    label "random asset\n(based on brighness)"
    note_font "Bitstream Vera Sans Bold"
    xpos -135
    ypos -690
    addUserKnob {20 User}
    addUserKnob {7 decimal l "time offset (decimal)"}
    decimal {{"floor\n(\n  (\n  (  ((((random((shotcount*823)+((seed+seed_offset_\[value shotcount])*212))-0.5)*  ((1-( abs(brighness_flare-0.5) )*2)+1)  )+0.5)*0.5)  * (1-brighness_flare)  )\n\n  +\n\n  (  (((((random((shotcount*823)+((seed+seed_offset_\[value shotcount])*212))-0.5)*  ((1-( abs(brighness_flare-0.5) )*2)+1)  )+0.5)*0.5)+0.5)  * (brighness_flare)  )\n  )\n  *1000\n)\n\n/1000"}}
    addUserKnob {26 ""}
    addUserKnob {26 _1 l "" +STARTLINE T "Chris Fryer | 2020\nupdated by Yorben Otto | 2024"}
   }
    Input {
     inputs 0
     name Input1
     xpos 426
     ypos -793
    }
    TimeOffset {
     time_offset {{(-floor(parent.decimal))*(DecimalTimeOffset1.decimal<0)}}
     time ""
     name TimeOffset1
     xpos 426
     ypos -674
    }
    Dot {
     name Dot6
     xpos 460
     ypos -635
    }
set N5ea446a0 [stack 0]
    Dot {
     name Dot5
     xpos 350
     ypos -635
    }
    Dot {
     name Dot7
     xpos 350
     ypos -365
    }
push $N5ea446a0
    Dot {
     name Dot1
     xpos 572
     ypos -635
    }
    TimeBlur {
     divisions 2
     shutter {{(parent.decimal-(floor(parent.decimal)))*2}}
     shutteroffset start
     shuttercustomoffset 0
     name TimeBlur1
     xpos 538
     ypos -558
    }
    Dot {
     name Dot2
     xpos 572
     ypos -490
    }
push $N5ea446a0
    TimeBlur {
     divisions 2
     shutter {{parent.decimal*2}}
     shutteroffset start
     shuttercustomoffset 0
     name TimeBlur8
     xpos 426
     ypos -556
    }
    Switch {
     inputs 2
     which {{parent.decimal<0}}
     name Switch1
     xpos 426
     ypos -494
    }
    Multiply {
     value {{parent.TimeBlur8.divisions}}
     name Multiply6
     xpos 426
     ypos -436
    }
    Merge2 {
     inputs 2
     operation from
     name Merge6
     xpos 426
     ypos -369
    }
set N5ea865e0 [stack 0]
    Output {
     name Output1
     xpos 426
     ypos -221
    }
push $N5ea865e0
push $N5ea865e0
    Viewer {
     inputs 2
     frame_range 1-100
     viewerProcess "sRGB (default)"
     name Viewer1
     xpos 675
     ypos -246
    }
   end_group
   NoTimeBlur {
    name NoTimeBlur6
    xpos -135
    ypos -608
   }
   Dot {
    name Dot21
    xpos -101
    ypos -449
   }
set N5eb34e60 [stack 0]
   Dot {
    name Dot22
    xpos -245
    ypos -449
   }
   Multiply {
    value {{math_matrix.result_y_flash(parent.CTimeOffset7.ref)}}
    name Angle_reveal_top
    label TOP
    xpos -279
    ypos -371
   }
   Transform {
    scale {{0.05+(0.05*(((parent.DecimalTimeOffset1.decimal-0.5)*2)*ScaleVariationFlash))}}
    center {{root.width/2 x1015 2304} {root.height/2}}
    shutteroffset centred
    name random_size_top
    xpos -279
    ypos -136
   }
   Card3D {
    inputs 3
    rot_order ZYX
    translate {0 0 0}
    rotate {90 0 0}
    shutteroffset centred
    name cCard3D5
    tile_color 0x7b1d1dff
    xpos -279
    ypos 153
    addUserKnob {20 User l parent}
    addUserKnob {22 python_button l "set parent" t "select parent node, and press this button to set the selected node as parent" +INVISIBLE T "n = nuke.selectedNode()\['name'].getValue()\nnuke.thisNode()\['string'].setValue(n)" +STARTLINE}
    addUserKnob {1 string l parent +INVISIBLE}
    string null
    addUserKnob {3 ref l "ref frame"}
    ref 1015
   }
   Transform {
    translate {{"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].translate.x(ref)\}]"} {"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].translate.y(ref)\}]"}}
    rotate {{"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].rotate-\[value parent_gun].rotate(ref)\}]"}}
    scale {{"\[if \{\[value parent_gun]==\"null\"\} \{return 1\} \{return 1+(\[value parent_gun].scale-\[value parent_gun].scale(ref))\}]"}}
    center {{"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].center.x(ref)\}]"} {"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].center.y(ref)\}]"}}
    name GUNMatchMove
    label "\n"
    xpos -279
    ypos 247
    addUserKnob {20 User l parent}
    addUserKnob {3 ref}
    ref {{parent.CTimeOffset7.ref}}
   }
   Transform {
    translate {{"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].translate.x-\[value parent_env].translate.x(ref)\}]"} {"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].translate.y-\[value parent_env].translate.y(ref)\}]"}}
    rotate {{"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].rotate-\[value parent_env].rotate(ref)\}]"}}
    scale {{"\[if \{\[value parent_gun]==\"null\"\} \{return 1\} \{return 1+(\[value parent_env].scale-\[value parent_env].scale(ref))\}]"}}
    center {{"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].center.x(ref)\}]"} {"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].center.y(ref)\}]"}}
    motionblur {{(mode==2)*0.2}}
    shutter {{FlashMB*(0.175*0.3)}}
    shutteroffset centred
    name ENVMatchMove
    xpos -279
    ypos 321
    addUserKnob {20 User l parent}
    addUserKnob {3 ref}
    ref {{parent.CTimeOffset7.ref}}
   }
   Transform {
    translate {{"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return -((root.width/2)-(\[value parent_gun].center.x(1)+\[value parent_gun].translate.x(1)))\}]"} {"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return -((root.height/2)-(\[value parent_gun].center.y(1)+\[value parent_gun].translate.y(1)))\}]"}}
    shutteroffset centred
    name Transform_GUNMatchMove1
    label "alignment correction"
    xpos -279
    ypos 408
    addUserKnob {20 User l parent}
    addUserKnob {22 python_button l "set parent" t "select parent node, and press this button to set the selected node as parent" T "n = nuke.selectedNode()\['name'].getValue()\nnuke.thisNode()\['string'].setValue(n)" +STARTLINE}
    addUserKnob {1 string l parent}
    string Transform_MatchMove10
    addUserKnob {3 ref +INVISIBLE}
    ref {{parent.cCard3D_8.ref}}
   }
   Remove {
    operation keep
    channels rgb
    name Remove10
    xpos -279
    ypos 489
   }
push 0
   Switch {
    inputs 2
    which {{ActivateSideFlash(CTimeOffset7.ref)}}
    name Switch1
    label "keyframeable disable "
    xpos -279
    ypos 587
   }
push 0
   Switch {
    inputs 2
    which {{parent.Angle_reveal_top.value!=0}}
    name Switch4
    label "disable based on angle"
    xpos -279
    ypos 670
   }
   Dot {
    name Dot1
    xpos -245
    ypos 717
   }
push 0
push $N5ea04cd0
push 0
   Input {
    inputs 0
    name Front
    xpos -430
    ypos -1102
    number 1
   }
   TimeOffset {
    time_offset {{"shotnmbr==0 ? 0 : shot_\[value shotnmbr]-1"}}
    time ""
    name CTimeOffset8
    xpos -430
    ypos -840
    addUserKnob {20 User}
    addUserKnob {3 shotnmbr l "shot "}
    shotnmbr {{parent.CTimeOffset7.shotnmbr}}
   }
   Group {
    name DecimalTimeOffset
    tile_color 0xafa35dff
    label "random asset\n(based on brighness)"
    note_font "Bitstream Vera Sans Bold"
    xpos -430
    ypos -693
    addUserKnob {20 User}
    addUserKnob {7 decimal l "time offset (decimal)"}
    decimal {{"floor\n(\n  (\n  (  ((((random((shotcount*823)+((seed+seed_offset_\[value shotcount])*212))-0.5)*  ((1-( abs(brighness_flare-0.5) )*2)+1)  )+0.5)*0.5)  * (1-brighness_flare)  )\n\n  +\n\n  (  (((((random((shotcount*823)+((seed+seed_offset_\[value shotcount])*212))-0.5)*  ((1-( abs(brighness_flare-0.5) )*2)+1)  )+0.5)*0.5)+0.5)  * (brighness_flare)  )\n  )\n  *1000\n)\n\n/1000"}}
    addUserKnob {26 ""}
    addUserKnob {26 _1 l "" +STARTLINE T "Chris Fryer | 2020\nupdated by Yorben Otto | 2024"}
   }
    Input {
     inputs 0
     name Input1
     xpos 426
     ypos -793
    }
    TimeOffset {
     time_offset {{(-floor(parent.decimal))*(DecimalTimeOffset.decimal<0)}}
     time ""
     name TimeOffset1
     xpos 426
     ypos -674
    }
    Dot {
     name Dot6
     xpos 460
     ypos -635
    }
set N5ebe49c0 [stack 0]
    Dot {
     name Dot5
     xpos 350
     ypos -635
    }
    Dot {
     name Dot7
     xpos 350
     ypos -365
    }
push $N5ebe49c0
    Dot {
     name Dot1
     xpos 572
     ypos -635
    }
    TimeBlur {
     divisions 2
     shutter {{(parent.decimal-(floor(parent.decimal)))*2}}
     shutteroffset start
     shuttercustomoffset 0
     name TimeBlur1
     xpos 538
     ypos -558
    }
    Dot {
     name Dot2
     xpos 572
     ypos -490
    }
push $N5ebe49c0
    TimeBlur {
     divisions 2
     shutter {{parent.decimal*2}}
     shutteroffset start
     shuttercustomoffset 0
     name TimeBlur8
     xpos 426
     ypos -556
    }
    Switch {
     inputs 2
     which {{parent.decimal<0}}
     name Switch1
     xpos 426
     ypos -494
    }
    Multiply {
     value {{parent.TimeBlur8.divisions}}
     name Multiply6
     xpos 426
     ypos -436
    }
    Merge2 {
     inputs 2
     operation from
     name Merge6
     xpos 426
     ypos -369
    }
set N5ee36820 [stack 0]
    Output {
     name Output1
     xpos 426
     ypos -221
    }
push $N5ee36820
push $N5ee36820
    Viewer {
     inputs 2
     frame_range 1-100
     viewerProcess "sRGB (default)"
     name Viewer1
     xpos 675
     ypos -246
    }
   end_group
   NoTimeBlur {
    name NoTimeBlur7
    xpos -430
    ypos -617
   }
   Multiply {
    value {{math_matrix.result_x_flash(parent.CTimeOffset7.ref)}}
    name Angle_reveal_front
    label FRONT
    xpos -430
    ypos -375
   }
   Transform {
    scale {{0.05+(0.05*(((parent.DecimalTimeOffset1.decimal-0.5)*2)*ScaleVariationFlash))}}
    center {{root.width/2 x1015 2304} {root.height/2}}
    shutteroffset centred
    name random_size_front
    xpos -430
    ypos -134
   }
   Card3D {
    inputs 3
    rot_order ZYX
    translate {0 0 0}
    rotate {0 90 0}
    shutteroffset centred
    name cCard3D6
    tile_color 0x7b1d1dff
    xpos -430
    ypos 150
    addUserKnob {20 User l parent}
    addUserKnob {22 python_button l "set parent" t "select parent node, and press this button to set the selected node as parent" +INVISIBLE T "n = nuke.selectedNode()\['name'].getValue()\nnuke.thisNode()\['string'].setValue(n)" +STARTLINE}
    addUserKnob {1 string l parent +INVISIBLE}
    string null
    addUserKnob {3 ref l "ref frame"}
    ref 1015
   }
   Transform {
    translate {{"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].translate.x(ref)\}]"} {"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].translate.y(ref)\}]"}}
    rotate {{"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].rotate-\[value parent_gun].rotate(ref)\}]"}}
    scale {{"\[if \{\[value parent_gun]==\"null\"\} \{return 1\} \{return 1+(\[value parent_gun].scale-\[value parent_gun].scale(ref))\}]"}}
    center {{"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].center.x(ref)\}]"} {"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].center.y(ref)\}]"}}
    name GUNMatchMove2
    label "\n"
    xpos -430
    ypos 248
    addUserKnob {20 User l parent}
    addUserKnob {3 ref}
    ref {{parent.CTimeOffset7.ref}}
   }
   Transform {
    translate {{"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].translate.x-\[value parent_env].translate.x(ref)\}]"} {"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].translate.y-\[value parent_env].translate.y(ref)\}]"}}
    rotate {{"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].rotate-\[value parent_env].rotate(ref)\}]"}}
    scale {{"\[if \{\[value parent_gun]==\"null\"\} \{return 1\} \{return 1+(\[value parent_env].scale-\[value parent_env].scale(ref))\}]"}}
    center {{"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].center.x(ref)\}]"} {"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].center.y(ref)\}]"}}
    motionblur {{(mode==2)*0.2}}
    shutter {{FlashMB*(0.175*0.3)}}
    shutteroffset centred
    name ENVMatchMove2
    xpos -430
    ypos 320
    addUserKnob {20 User l parent}
    addUserKnob {3 ref}
    ref {{parent.CTimeOffset7.ref}}
   }
   Transform {
    translate {{"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return -((root.width/2)-(\[value parent_gun].center.x(1)+\[value parent_gun].translate.x(1)))\}]"} {"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return -((root.height/2)-(\[value parent_gun].center.y(1)+\[value parent_gun].translate.y(1)))\}]"}}
    shutteroffset centred
    name Transform_GUNMatchMove2
    label "alignment correction"
    xpos -430
    ypos 407
    addUserKnob {20 User l parent}
    addUserKnob {22 python_button l "set parent" t "select parent node, and press this button to set the selected node as parent" T "n = nuke.selectedNode()\['name'].getValue()\nnuke.thisNode()\['string'].setValue(n)" +STARTLINE}
    addUserKnob {1 string l parent}
    string Transform_MatchMove10
    addUserKnob {3 ref +INVISIBLE}
    ref {{parent.cCard3D_8.ref}}
   }
   Remove {
    operation keep
    channels rgb
    name Remove11
    xpos -430
    ypos 487
   }
push 0
   Switch {
    inputs 2
    which {{ActivateFrontFlash(CTimeOffset7.ref)}}
    name Switch7
    label "keyframeable disable "
    xpos -430
    ypos 586
   }
push 0
   Switch {
    inputs 2
    which {{parent.Angle_reveal_front.value!=0}}
    name Switch5
    label "disable based on angle"
    xpos -430
    ypos 670
   }
   Dot {
    name Dot2
    xpos -396
    ypos 749
   }
push $N5eb34e60
   Multiply {
    value {{math_matrix.result_z_flash(parent.CTimeOffset7.ref)}}
    name Angle_reveal_side
    label SIDE
    xpos -135
    ypos -374
   }
   Transform {
    scale {{0.05+(0.05*(((parent.DecimalTimeOffset1.decimal-0.5)*2)*ScaleVariationFlash))}}
    center {{root.width/2 x1015 2304} {root.height/2}}
    shutteroffset centred
    name random_size_side
    xpos -135
    ypos -137
   }
   Card3D {
    translate {{"\[if \{\[exists  parent.parent.parent.input0]\} \{return \[value \[topnode parent.parent.parent.input0].name].translate.x(ref)\} \{return 0\}]"} {"\[if \{\[exists  parent.parent.parent.input0]\} \{return \[value \[topnode parent.parent.parent.input0].name].translate.y(ref)\} \{return 0\}]"} {"\[if \{\[exists  parent.parent.parent.input0]\} \{return \[value \[topnode parent.parent.parent.input0].name].translate.z(ref)\} \{return -1\}]"}}
    rotate {{"\[if \{\[exists  parent.parent.parent.input0]\} \{return \[value \[topnode parent.parent.parent.input0].name].rotate.x(ref)\} \{return 0\}]"} {"\[if \{\[exists  parent.parent.parent.input0]\} \{return \[value \[topnode parent.parent.parent.input0].name].rotate.y(ref)\} \{return 0\}]"} {"\[if \{\[exists  parent.parent.parent.input0]\} \{return \[value \[topnode parent.parent.parent.input0].name].rotate.z(ref)\} \{return 0\}]"}}
    scaling {{"\[if \{\[exists  parent.parent.parent.input0]\} \{return \[value \[topnode parent.parent.parent.input0].name].scaling.x(ref)\} \{return 1\}]"} {"\[if \{\[exists  parent.parent.parent.input0]\} \{return \[value \[topnode parent.parent.parent.input0].name].scaling.y(ref)\} \{return 1\}]"} {"\[if \{\[exists  parent.parent.parent.input0]\} \{return \[value \[topnode parent.parent.parent.input0].name].scaling.z(ref)\} \{return 1\}]"}}
    uniform_scale {{"\[if \{\[exists  parent.parent.parent.input0]\} \{return (\[value \[topnode parent.parent.parent.input0].name].uniform_scale(ref)*25)\} \{return 25\}]"}}
    shutteroffset centred
    name cCard3D_1
    tile_color 0x7b1d1dff
    label "ref frame: \[value ref]"
    xpos -135
    ypos 147
    addUserKnob {20 User l parent}
    addUserKnob {22 python_button l "set parent" t "select parent node, and press this button to set the selected node as parent" +INVISIBLE T "n = nuke.selectedNode()\['name'].getValue()\nnuke.thisNode()\['string'].setValue(n)" +STARTLINE}
    addUserKnob {1 string l parent +INVISIBLE}
    string null
    addUserKnob {3 id l "id number"}
    id {{parent.CTimeOffset7.shotnmbr}}
    addUserKnob {3 ref l "ref frame"}
    ref {{parent.CTimeOffset7.ref}}
   }
   Transform {
    translate {{"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].translate.x(ref)\}]"} {"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].translate.y(ref)\}]"}}
    rotate {{"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].rotate-\[value parent_gun].rotate(ref)\}]"}}
    scale {{"\[if \{\[value parent_gun]==\"null\"\} \{return 1\} \{return 1+(\[value parent_gun].scale-\[value parent_gun].scale(ref))\}]"}}
    center {{"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].center.x(ref)\}]"} {"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].center.y(ref)\}]"}}
    name GUNMatchMove1
    label "\n"
    xpos -135
    ypos 241
    addUserKnob {20 User l parent}
    addUserKnob {3 ref}
    ref {{parent.CTimeOffset7.ref}}
   }
   Transform {
    translate {{"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].translate.x-\[value parent_env].translate.x(ref)\}]"} {"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].translate.y-\[value parent_env].translate.y(ref)\}]"}}
    rotate {{"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].rotate-\[value parent_env].rotate(ref)\}]"}}
    scale {{"\[if \{\[value parent_gun]==\"null\"\} \{return 1\} \{return 1+(\[value parent_env].scale-\[value parent_env].scale(ref))\}]"}}
    center {{"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].center.x(ref)\}]"} {"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].center.y(ref)\}]"}}
    motionblur {{(mode==2)*0.2}}
    shutter {{FlashMB*(0.175*0.3)}}
    shutteroffset centred
    name ENVMatchMove1
    xpos -135
    ypos 317
    addUserKnob {20 User l parent}
    addUserKnob {3 ref}
    ref {{parent.CTimeOffset7.ref}}
   }
   Transform {
    translate {{"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return -((root.width/2)-(\[value parent_gun].center.x(1)+\[value parent_gun].translate.x(1)))\}]"} {"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return -((root.height/2)-(\[value parent_gun].center.y(1)+\[value parent_gun].translate.y(1)))\}]"}}
    shutteroffset centred
    name Transform_GUNMatchMove3
    label "alignment correction"
    xpos -135
    ypos 405
    addUserKnob {20 User l parent}
    addUserKnob {22 python_button l "set parent" t "select parent node, and press this button to set the selected node as parent" T "n = nuke.selectedNode()\['name'].getValue()\nnuke.thisNode()\['string'].setValue(n)" +STARTLINE}
    addUserKnob {1 string l parent}
    string Transform_MatchMove10
    addUserKnob {3 ref +INVISIBLE}
    ref {{parent.cCard3D_8.ref}}
   }
   Remove {
    operation keep
    channels rgb
    name Remove12
    xpos -135
    ypos 489
   }
push 0
   Switch {
    inputs 2
    which {{ActivateSideFlash(CTimeOffset7.ref)}}
    name Switch3
    label "keyframeable disable "
    xpos -135
    ypos 587
   }
push 0
   Switch {
    inputs 2
    which {{parent.Angle_reveal_side.value!=0}}
    name Switch6
    label "disable based on angle"
    xpos -135
    ypos 671
   }
   Merge2 {
    inputs 3+1
    operation max
    name Merge1
    xpos -135
    ypos 745
   }
   Merge2 {
    inputs 2
    operation plus
    bbox intersection
    name Merge6
    xpos -135
    ypos 1196
   }
push 0
   Switch {
    inputs 2
    which {{"shot_\[value count]==0?0:(EnableExtraFrames==1?floor(((frame>=shot_\[value count])+(frame<=(shot_\[value count]+(4*((mode==1)+(mode==2))))))/2):frame==shot_\[value count])"}}
    name cSwitch_3
    selected true
    xpos -135
    ypos 1354
    addUserKnob {20 User}
    addUserKnob {3 count l "shot number"}
    count {{parent.CTimeOffset7.shotnmbr}}
   }
   Output {
    name Output1
    xpos -135
    ypos 1861
   }
  end_group
push $N55bf1e10
push $N4daf73d0
  Group {
   inputs 2
   name gunshot16
   label "shot: \[value shotcount]\non frame: \[value shot_\[value shotcount]]\n"
   xpos 10883
   ypos -814
   addUserKnob {20 User}
   addUserKnob {3 shotcount l shot}
   shotcount 16
   addUserKnob {3 shotstart l frame +INVISIBLE}
   shotstart {{"shotcount==0 ? 0 : shot\[value shotcount]-1"}}
  }
   BackdropNode {
    inputs 0
    name BackdropNode3
    knobChanged "try:\n    listenedKnobs = \['text', 'position', 'name']\n    node = nuke.thisNode()\n    name = node.knob('name').value()\n    text = node.knob('text').value()\n    position = node.knob('position').value()\n    position = \"<\" + position + \">\"\n    label = node.knob('label').value()\n    \n    if nuke.thisKnob().name() in listenedKnobs:\n        if text == \"\":\n            if node.knob('position').value() == \"left\":\n                node.knob('label').setValue()\n            else:\n                node.knob('label').setValue(position + name)\n        else:\n            if node.knob('position').value() == \"left\":\n                node.knob('label').setValue(text)\n            else:\n                node.knob('label').setValue(position + text)\n                \n    elif nuke.thisKnob().name() == 'font_size':\n        fontSize = node.knob('font_size').value()\n        node.knob('note_font_size').setValue(fontSize)\nexcept:\n    pass"
    tile_color 0x232323ff
    label "<Left><h2> Gunshot"
    note_font_size 31.5
    xpos -698
    ypos -924
    bdwidth 1057
    bdheight 2343
    addUserKnob {20 F_VFX l BackdropNode}
    addUserKnob {43 text l Text}
    text "<h2> Gunshot"
    addUserKnob {7 font_size l "Font Size" R 10 100}
    font_size 31.5
    addUserKnob {4 position l "" -STARTLINE M {Left Center}}
    addUserKnob {26 S01 l " " T " "}
    addUserKnob {22 grow l " <img src=\"F_scalep.png\">" -STARTLINE T "n=nuke.thisNode()\n\ndef grow(node=None,step=50):\n    try:\n        if not node:\n            n=nuke.selectedNode()\n        else:\n            n=node\n            n\['xpos'].setValue(n\['xpos'].getValue()-step)\n            n\['ypos'].setValue(n\['ypos'].getValue()-step)\n            n\['bdwidth'].setValue(n\['bdwidth'].getValue()+step*2)\n            n\['bdheight'].setValue(n\['bdheight'].getValue()+step*2)\n    except:\n        pass\ngrow(n,50)"}
    addUserKnob {22 shrink l " <img src=\"F_scalem.png\">" -STARTLINE T "n=nuke.thisNode()\n\ndef shrink(node=None,step=50):\n    try:\n        if not node:\n            n=nuke.selectedNode()\n        else:\n            n=node\n            n\['xpos'].setValue(n\['xpos'].getValue()+step)\n            n\['ypos'].setValue(n\['ypos'].getValue()+step)\n            n\['bdwidth'].setValue(n\['bdwidth'].getValue()-step*2)\n            n\['bdheight'].setValue(n\['bdheight'].getValue()-step*2)\n    except:\n        pass\nshrink(n,50)"}
    addUserKnob {22 colorandom l " <img src=\"ColorBars.png\">" -STARTLINE T "import colorsys, random\nn=nuke.thisNode()\nR,G,B= colorsys.hsv_to_rgb(random.random(),.1+random.random()*.15,.15+random.random()*.15)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ) )"}
    addUserKnob {22 darkgrey l "<font color=\"#232323\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.0, 0.0, 0.14]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 lightgrey l "<font color=\"#383838\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.0, 0.0, 0.22]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 red l "<font color=\"#8c3838\" size=6>■</font>" T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.0, 0.6, 0.55]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n" +STARTLINE}
    addUserKnob {22 orange l "<font color=\"#b28e59\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.1, 0.5, 0.7]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 yellow l "<font color=\"#ccc766\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.16, 0.5, 0.8]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 green l "<font color=\"#5d995b\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.33, 0.4, 0.6]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 cyan l "<font color=\"#72998f\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.46, 0.25, 0.6]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 blue l "<font color=\"#59687f\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.6, 0.3, 0.5]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 darkblue l "<font color=\"#63628c\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.67, 0.3, 0.55]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 magenta l "<font color=\"#927a99\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.8, 0.2, 0.6]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 pink l "<font color=\"#997a89\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.92, 0.2, 0.6]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {26 S02 l " " T " "}
    addUserKnob {26 Ftools l "" +STARTLINE T "<font color=\"#1C1C1C\"> v1.2 - Franklin VFX - 2018"}
   }
   BackdropNode {
    inputs 0
    name BackdropNode1
    knobChanged "try:\n    listenedKnobs = \['text', 'position', 'name']\n    node = nuke.thisNode()\n    name = node.knob('name').value()\n    text = node.knob('text').value()\n    position = node.knob('position').value()\n    position = \"<\" + position + \">\"\n    label = node.knob('label').value()\n    \n    if nuke.thisKnob().name() in listenedKnobs:\n        if text == \"\":\n            if node.knob('position').value() == \"left\":\n                node.knob('label').setValue()\n            else:\n                node.knob('label').setValue(position + name)\n        else:\n            if node.knob('position').value() == \"left\":\n                node.knob('label').setValue(text)\n            else:\n                node.knob('label').setValue(position + text)\n                \n    elif nuke.thisKnob().name() == 'font_size':\n        fontSize = node.knob('font_size').value()\n        node.knob('note_font_size').setValue(fontSize)\nexcept:\n    pass"
    tile_color 0x927a99ff
    note_font_size 50
    xpos -460
    ypos -257
    bdwidth 435
    bdheight 786
    z_order 1
    addUserKnob {20 F_VFX l BackdropNode}
    addUserKnob {43 text l Text}
    addUserKnob {7 font_size l "Font Size" R 10 100}
    font_size 50
    addUserKnob {4 position l "" -STARTLINE M {Left Center}}
    addUserKnob {26 S01 l " " T " "}
    addUserKnob {22 grow l " <img src=\"F_scalep.png\">" -STARTLINE T "n=nuke.thisNode()\n\ndef grow(node=None,step=50):\n    try:\n        if not node:\n            n=nuke.selectedNode()\n        else:\n            n=node\n            n\['xpos'].setValue(n\['xpos'].getValue()-step)\n            n\['ypos'].setValue(n\['ypos'].getValue()-step)\n            n\['bdwidth'].setValue(n\['bdwidth'].getValue()+step*2)\n            n\['bdheight'].setValue(n\['bdheight'].getValue()+step*2)\n    except:\n        pass\ngrow(n,50)"}
    addUserKnob {22 shrink l " <img src=\"F_scalem.png\">" -STARTLINE T "n=nuke.thisNode()\n\ndef shrink(node=None,step=50):\n    try:\n        if not node:\n            n=nuke.selectedNode()\n        else:\n            n=node\n            n\['xpos'].setValue(n\['xpos'].getValue()+step)\n            n\['ypos'].setValue(n\['ypos'].getValue()+step)\n            n\['bdwidth'].setValue(n\['bdwidth'].getValue()-step*2)\n            n\['bdheight'].setValue(n\['bdheight'].getValue()-step*2)\n    except:\n        pass\nshrink(n,50)"}
    addUserKnob {22 colorandom l " <img src=\"ColorBars.png\">" -STARTLINE T "import colorsys, random\nn=nuke.thisNode()\nR,G,B= colorsys.hsv_to_rgb(random.random(),.1+random.random()*.15,.15+random.random()*.15)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ) )"}
    addUserKnob {22 darkgrey l "<font color=\"#232323\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.0, 0.0, 0.14]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 lightgrey l "<font color=\"#383838\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.0, 0.0, 0.22]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 red l "<font color=\"#8c3838\" size=6>■</font>" T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.0, 0.6, 0.55]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n" +STARTLINE}
    addUserKnob {22 orange l "<font color=\"#b28e59\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.1, 0.5, 0.7]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 yellow l "<font color=\"#ccc766\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.16, 0.5, 0.8]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 green l "<font color=\"#5d995b\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.33, 0.4, 0.6]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 cyan l "<font color=\"#72998f\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.46, 0.25, 0.6]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 blue l "<font color=\"#59687f\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.6, 0.3, 0.5]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 darkblue l "<font color=\"#63628c\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.67, 0.3, 0.55]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 magenta l "<font color=\"#927a99\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.8, 0.2, 0.6]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 pink l "<font color=\"#997a89\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.92, 0.2, 0.6]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {26 S02 l " " T " "}
    addUserKnob {26 Ftools l "" +STARTLINE T "<font color=\"#1C1C1C\"> v1.2 - Franklin VFX - 2018"}
   }
   Constant {
    inputs 0
    channels rgb
    name Constant4
    xpos -648
    ypos 987
   }
   AdjBBox {
    numpixels {{size_bbox}}
    name AdjBBox4
    xpos -648
    ypos 1120
   }
   Dot {
    name Dot19
    xpos -614
    ypos 1200
   }
   Axis3 {
    inputs 0
    useMatrix true
    matrix {
        {{parent.cCard3D_1.matrix} {parent.cCard3D_1.matrix} {parent.cCard3D_1.matrix} {parent.cCard3D_1.matrix}}
        {{parent.cCard3D_1.matrix} {parent.cCard3D_1.matrix} {parent.cCard3D_1.matrix} {parent.cCard3D_1.matrix}}
        {{parent.cCard3D_1.matrix} {parent.cCard3D_1.matrix} {parent.cCard3D_1.matrix} {parent.cCard3D_1.matrix}}
        {{parent.cCard3D_1.matrix} {parent.cCard3D_1.matrix} {parent.cCard3D_1.matrix} {parent.cCard3D_1.matrix}}
      }
    name Axis3
    xpos -207
    ypos 48
   }
set N7c1517e0 [stack 0]
push 0
   Input {
    inputs 0
    name Side
    xpos -135
    ypos -1101
   }
   TimeOffset {
    time_offset {{"shotnmbr==0 ? 0 : shot_\[value shotnmbr]-1"}}
    time ""
    name CTimeOffset7
    label "shot: \[value shotnmbr]\non frame \[value time_offset]"
    xpos -135
    ypos -853
    addUserKnob {20 User}
    addUserKnob {3 shotnmbr l "shot "}
    shotnmbr {{shotcount}}
    addUserKnob {3 ref}
    ref {{time_offset+1}}
   }
   Group {
    name DecimalTimeOffset1
    tile_color 0xafa35dff
    label "random asset\n(based on brighness)"
    note_font "Bitstream Vera Sans Bold"
    xpos -135
    ypos -690
    addUserKnob {20 User}
    addUserKnob {7 decimal l "time offset (decimal)"}
    decimal {{"floor\n(\n  (\n  (  ((((random((shotcount*823)+((seed+seed_offset_\[value shotcount])*212))-0.5)*  ((1-( abs(brighness_flare-0.5) )*2)+1)  )+0.5)*0.5)  * (1-brighness_flare)  )\n\n  +\n\n  (  (((((random((shotcount*823)+((seed+seed_offset_\[value shotcount])*212))-0.5)*  ((1-( abs(brighness_flare-0.5) )*2)+1)  )+0.5)*0.5)+0.5)  * (brighness_flare)  )\n  )\n  *1000\n)\n\n/1000"}}
    addUserKnob {26 ""}
    addUserKnob {26 _1 l "" +STARTLINE T "Chris Fryer | 2020\nupdated by Yorben Otto | 2024"}
   }
    Input {
     inputs 0
     name Input1
     xpos 426
     ypos -793
    }
    TimeOffset {
     time_offset {{(-floor(parent.decimal))*(DecimalTimeOffset1.decimal<0)}}
     time ""
     name TimeOffset1
     xpos 426
     ypos -674
    }
    Dot {
     name Dot6
     xpos 460
     ypos -635
    }
set N7c1911b0 [stack 0]
    Dot {
     name Dot5
     xpos 350
     ypos -635
    }
    Dot {
     name Dot7
     xpos 350
     ypos -365
    }
push $N7c1911b0
    Dot {
     name Dot1
     xpos 572
     ypos -635
    }
    TimeBlur {
     divisions 2
     shutter {{(parent.decimal-(floor(parent.decimal)))*2}}
     shutteroffset start
     shuttercustomoffset 0
     name TimeBlur1
     xpos 538
     ypos -558
    }
    Dot {
     name Dot2
     xpos 572
     ypos -490
    }
push $N7c1911b0
    TimeBlur {
     divisions 2
     shutter {{parent.decimal*2}}
     shutteroffset start
     shuttercustomoffset 0
     name TimeBlur8
     xpos 426
     ypos -556
    }
    Switch {
     inputs 2
     which {{parent.decimal<0}}
     name Switch1
     xpos 426
     ypos -494
    }
    Multiply {
     value {{parent.TimeBlur8.divisions}}
     name Multiply6
     xpos 426
     ypos -436
    }
    Merge2 {
     inputs 2
     operation from
     name Merge6
     xpos 426
     ypos -369
    }
set N7c1d30f0 [stack 0]
    Output {
     name Output1
     xpos 426
     ypos -221
    }
push $N7c1d30f0
push $N7c1d30f0
    Viewer {
     inputs 2
     frame_range 1-100
     viewerProcess "sRGB (default)"
     name Viewer1
     xpos 675
     ypos -246
    }
   end_group
   NoTimeBlur {
    name NoTimeBlur6
    xpos -135
    ypos -608
   }
   Dot {
    name Dot21
    xpos -101
    ypos -449
   }
set N7c281980 [stack 0]
   Dot {
    name Dot22
    xpos -245
    ypos -449
   }
   Multiply {
    value {{math_matrix.result_y_flash(parent.CTimeOffset7.ref)}}
    name Angle_reveal_top
    label TOP
    xpos -279
    ypos -371
   }
   Transform {
    scale {{0.05+(0.05*(((parent.DecimalTimeOffset1.decimal-0.5)*2)*ScaleVariationFlash))}}
    center {{root.width/2 x1015 2304} {root.height/2}}
    shutteroffset centred
    name random_size_top
    xpos -279
    ypos -136
   }
   Card3D {
    inputs 3
    rot_order ZYX
    translate {0 0 0}
    rotate {90 0 0}
    shutteroffset centred
    name cCard3D5
    tile_color 0x7b1d1dff
    xpos -279
    ypos 153
    addUserKnob {20 User l parent}
    addUserKnob {22 python_button l "set parent" t "select parent node, and press this button to set the selected node as parent" +INVISIBLE T "n = nuke.selectedNode()\['name'].getValue()\nnuke.thisNode()\['string'].setValue(n)" +STARTLINE}
    addUserKnob {1 string l parent +INVISIBLE}
    string null
    addUserKnob {3 ref l "ref frame"}
    ref 1015
   }
   Transform {
    translate {{"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].translate.x(ref)\}]"} {"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].translate.y(ref)\}]"}}
    rotate {{"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].rotate-\[value parent_gun].rotate(ref)\}]"}}
    scale {{"\[if \{\[value parent_gun]==\"null\"\} \{return 1\} \{return 1+(\[value parent_gun].scale-\[value parent_gun].scale(ref))\}]"}}
    center {{"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].center.x(ref)\}]"} {"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].center.y(ref)\}]"}}
    name GUNMatchMove
    label "\n"
    xpos -279
    ypos 247
    addUserKnob {20 User l parent}
    addUserKnob {3 ref}
    ref {{parent.CTimeOffset7.ref}}
   }
   Transform {
    translate {{"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].translate.x-\[value parent_env].translate.x(ref)\}]"} {"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].translate.y-\[value parent_env].translate.y(ref)\}]"}}
    rotate {{"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].rotate-\[value parent_env].rotate(ref)\}]"}}
    scale {{"\[if \{\[value parent_gun]==\"null\"\} \{return 1\} \{return 1+(\[value parent_env].scale-\[value parent_env].scale(ref))\}]"}}
    center {{"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].center.x(ref)\}]"} {"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].center.y(ref)\}]"}}
    motionblur {{(mode==2)*0.2}}
    shutter {{FlashMB*(0.175*0.3)}}
    shutteroffset centred
    name ENVMatchMove
    xpos -279
    ypos 321
    addUserKnob {20 User l parent}
    addUserKnob {3 ref}
    ref {{parent.CTimeOffset7.ref}}
   }
   Transform {
    translate {{"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return -((root.width/2)-(\[value parent_gun].center.x(1)+\[value parent_gun].translate.x(1)))\}]"} {"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return -((root.height/2)-(\[value parent_gun].center.y(1)+\[value parent_gun].translate.y(1)))\}]"}}
    shutteroffset centred
    name Transform_GUNMatchMove1
    label "alignment correction"
    xpos -279
    ypos 408
    addUserKnob {20 User l parent}
    addUserKnob {22 python_button l "set parent" t "select parent node, and press this button to set the selected node as parent" T "n = nuke.selectedNode()\['name'].getValue()\nnuke.thisNode()\['string'].setValue(n)" +STARTLINE}
    addUserKnob {1 string l parent}
    string Transform_MatchMove10
    addUserKnob {3 ref +INVISIBLE}
    ref {{parent.cCard3D_8.ref}}
   }
   Remove {
    operation keep
    channels rgb
    name Remove10
    xpos -279
    ypos 489
   }
push 0
   Switch {
    inputs 2
    which {{ActivateSideFlash(CTimeOffset7.ref)}}
    name Switch1
    label "keyframeable disable "
    xpos -279
    ypos 587
   }
push 0
   Switch {
    inputs 2
    which {{parent.Angle_reveal_top.value!=0}}
    name Switch4
    label "disable based on angle"
    xpos -279
    ypos 670
   }
   Dot {
    name Dot1
    xpos -245
    ypos 717
   }
push 0
push $N7c1517e0
push 0
   Input {
    inputs 0
    name Front
    xpos -430
    ypos -1102
    number 1
   }
   TimeOffset {
    time_offset {{"shotnmbr==0 ? 0 : shot_\[value shotnmbr]-1"}}
    time ""
    name CTimeOffset8
    xpos -430
    ypos -840
    addUserKnob {20 User}
    addUserKnob {3 shotnmbr l "shot "}
    shotnmbr {{parent.CTimeOffset7.shotnmbr}}
   }
   Group {
    name DecimalTimeOffset
    tile_color 0xafa35dff
    label "random asset\n(based on brighness)"
    note_font "Bitstream Vera Sans Bold"
    xpos -430
    ypos -693
    addUserKnob {20 User}
    addUserKnob {7 decimal l "time offset (decimal)"}
    decimal {{"floor\n(\n  (\n  (  ((((random((shotcount*823)+((seed+seed_offset_\[value shotcount])*212))-0.5)*  ((1-( abs(brighness_flare-0.5) )*2)+1)  )+0.5)*0.5)  * (1-brighness_flare)  )\n\n  +\n\n  (  (((((random((shotcount*823)+((seed+seed_offset_\[value shotcount])*212))-0.5)*  ((1-( abs(brighness_flare-0.5) )*2)+1)  )+0.5)*0.5)+0.5)  * (brighness_flare)  )\n  )\n  *1000\n)\n\n/1000"}}
    addUserKnob {26 ""}
    addUserKnob {26 _1 l "" +STARTLINE T "Chris Fryer | 2020\nupdated by Yorben Otto | 2024"}
   }
    Input {
     inputs 0
     name Input1
     xpos 426
     ypos -793
    }
    TimeOffset {
     time_offset {{(-floor(parent.decimal))*(DecimalTimeOffset.decimal<0)}}
     time ""
     name TimeOffset1
     xpos 426
     ypos -674
    }
    Dot {
     name Dot6
     xpos 460
     ypos -635
    }
set N5bf43400 [stack 0]
    Dot {
     name Dot5
     xpos 350
     ypos -635
    }
    Dot {
     name Dot7
     xpos 350
     ypos -365
    }
push $N5bf43400
    Dot {
     name Dot1
     xpos 572
     ypos -635
    }
    TimeBlur {
     divisions 2
     shutter {{(parent.decimal-(floor(parent.decimal)))*2}}
     shutteroffset start
     shuttercustomoffset 0
     name TimeBlur1
     xpos 538
     ypos -558
    }
    Dot {
     name Dot2
     xpos 572
     ypos -490
    }
push $N5bf43400
    TimeBlur {
     divisions 2
     shutter {{parent.decimal*2}}
     shutteroffset start
     shuttercustomoffset 0
     name TimeBlur8
     xpos 426
     ypos -556
    }
    Switch {
     inputs 2
     which {{parent.decimal<0}}
     name Switch1
     xpos 426
     ypos -494
    }
    Multiply {
     value {{parent.TimeBlur8.divisions}}
     name Multiply6
     xpos 426
     ypos -436
    }
    Merge2 {
     inputs 2
     operation from
     name Merge6
     xpos 426
     ypos -369
    }
set N5bf85340 [stack 0]
    Output {
     name Output1
     xpos 426
     ypos -221
    }
push $N5bf85340
push $N5bf85340
    Viewer {
     inputs 2
     frame_range 1-100
     viewerProcess "sRGB (default)"
     name Viewer1
     xpos 675
     ypos -246
    }
   end_group
   NoTimeBlur {
    name NoTimeBlur7
    xpos -430
    ypos -617
   }
   Multiply {
    value {{math_matrix.result_x_flash(parent.CTimeOffset7.ref)}}
    name Angle_reveal_front
    label FRONT
    xpos -430
    ypos -375
   }
   Transform {
    scale {{0.05+(0.05*(((parent.DecimalTimeOffset1.decimal-0.5)*2)*ScaleVariationFlash))}}
    center {{root.width/2 x1015 2304} {root.height/2}}
    shutteroffset centred
    name random_size_front
    xpos -430
    ypos -134
   }
   Card3D {
    inputs 3
    rot_order ZYX
    translate {0 0 0}
    rotate {0 90 0}
    shutteroffset centred
    name cCard3D6
    tile_color 0x7b1d1dff
    xpos -430
    ypos 150
    addUserKnob {20 User l parent}
    addUserKnob {22 python_button l "set parent" t "select parent node, and press this button to set the selected node as parent" +INVISIBLE T "n = nuke.selectedNode()\['name'].getValue()\nnuke.thisNode()\['string'].setValue(n)" +STARTLINE}
    addUserKnob {1 string l parent +INVISIBLE}
    string null
    addUserKnob {3 ref l "ref frame"}
    ref 1015
   }
   Transform {
    translate {{"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].translate.x(ref)\}]"} {"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].translate.y(ref)\}]"}}
    rotate {{"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].rotate-\[value parent_gun].rotate(ref)\}]"}}
    scale {{"\[if \{\[value parent_gun]==\"null\"\} \{return 1\} \{return 1+(\[value parent_gun].scale-\[value parent_gun].scale(ref))\}]"}}
    center {{"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].center.x(ref)\}]"} {"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].center.y(ref)\}]"}}
    name GUNMatchMove2
    label "\n"
    xpos -430
    ypos 248
    addUserKnob {20 User l parent}
    addUserKnob {3 ref}
    ref {{parent.CTimeOffset7.ref}}
   }
   Transform {
    translate {{"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].translate.x-\[value parent_env].translate.x(ref)\}]"} {"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].translate.y-\[value parent_env].translate.y(ref)\}]"}}
    rotate {{"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].rotate-\[value parent_env].rotate(ref)\}]"}}
    scale {{"\[if \{\[value parent_gun]==\"null\"\} \{return 1\} \{return 1+(\[value parent_env].scale-\[value parent_env].scale(ref))\}]"}}
    center {{"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].center.x(ref)\}]"} {"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].center.y(ref)\}]"}}
    motionblur {{(mode==2)*0.2}}
    shutter {{FlashMB*(0.175*0.3)}}
    shutteroffset centred
    name ENVMatchMove2
    xpos -430
    ypos 320
    addUserKnob {20 User l parent}
    addUserKnob {3 ref}
    ref {{parent.CTimeOffset7.ref}}
   }
   Transform {
    translate {{"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return -((root.width/2)-(\[value parent_gun].center.x(1)+\[value parent_gun].translate.x(1)))\}]"} {"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return -((root.height/2)-(\[value parent_gun].center.y(1)+\[value parent_gun].translate.y(1)))\}]"}}
    shutteroffset centred
    name Transform_GUNMatchMove2
    label "alignment correction"
    xpos -430
    ypos 407
    addUserKnob {20 User l parent}
    addUserKnob {22 python_button l "set parent" t "select parent node, and press this button to set the selected node as parent" T "n = nuke.selectedNode()\['name'].getValue()\nnuke.thisNode()\['string'].setValue(n)" +STARTLINE}
    addUserKnob {1 string l parent}
    string Transform_MatchMove10
    addUserKnob {3 ref +INVISIBLE}
    ref {{parent.cCard3D_8.ref}}
   }
   Remove {
    operation keep
    channels rgb
    name Remove11
    xpos -430
    ypos 487
   }
push 0
   Switch {
    inputs 2
    which {{ActivateFrontFlash(CTimeOffset7.ref)}}
    name Switch7
    label "keyframeable disable "
    xpos -430
    ypos 586
   }
push 0
   Switch {
    inputs 2
    which {{parent.Angle_reveal_front.value!=0}}
    name Switch5
    label "disable based on angle"
    xpos -430
    ypos 670
   }
   Dot {
    name Dot2
    xpos -396
    ypos 749
   }
push $N7c281980
   Multiply {
    value {{math_matrix.result_z_flash(parent.CTimeOffset7.ref)}}
    name Angle_reveal_side
    label SIDE
    xpos -135
    ypos -374
   }
   Transform {
    scale {{0.05+(0.05*(((parent.DecimalTimeOffset1.decimal-0.5)*2)*ScaleVariationFlash))}}
    center {{root.width/2 x1015 2304} {root.height/2}}
    shutteroffset centred
    name random_size_side
    xpos -135
    ypos -137
   }
   Card3D {
    translate {{"\[if \{\[exists  parent.parent.parent.input0]\} \{return \[value \[topnode parent.parent.parent.input0].name].translate.x(ref)\} \{return 0\}]"} {"\[if \{\[exists  parent.parent.parent.input0]\} \{return \[value \[topnode parent.parent.parent.input0].name].translate.y(ref)\} \{return 0\}]"} {"\[if \{\[exists  parent.parent.parent.input0]\} \{return \[value \[topnode parent.parent.parent.input0].name].translate.z(ref)\} \{return -1\}]"}}
    rotate {{"\[if \{\[exists  parent.parent.parent.input0]\} \{return \[value \[topnode parent.parent.parent.input0].name].rotate.x(ref)\} \{return 0\}]"} {"\[if \{\[exists  parent.parent.parent.input0]\} \{return \[value \[topnode parent.parent.parent.input0].name].rotate.y(ref)\} \{return 0\}]"} {"\[if \{\[exists  parent.parent.parent.input0]\} \{return \[value \[topnode parent.parent.parent.input0].name].rotate.z(ref)\} \{return 0\}]"}}
    scaling {{"\[if \{\[exists  parent.parent.parent.input0]\} \{return \[value \[topnode parent.parent.parent.input0].name].scaling.x(ref)\} \{return 1\}]"} {"\[if \{\[exists  parent.parent.parent.input0]\} \{return \[value \[topnode parent.parent.parent.input0].name].scaling.y(ref)\} \{return 1\}]"} {"\[if \{\[exists  parent.parent.parent.input0]\} \{return \[value \[topnode parent.parent.parent.input0].name].scaling.z(ref)\} \{return 1\}]"}}
    uniform_scale {{"\[if \{\[exists  parent.parent.parent.input0]\} \{return (\[value \[topnode parent.parent.parent.input0].name].uniform_scale(ref)*25)\} \{return 25\}]"}}
    shutteroffset centred
    name cCard3D_1
    tile_color 0x7b1d1dff
    label "ref frame: \[value ref]"
    xpos -135
    ypos 147
    addUserKnob {20 User l parent}
    addUserKnob {22 python_button l "set parent" t "select parent node, and press this button to set the selected node as parent" +INVISIBLE T "n = nuke.selectedNode()\['name'].getValue()\nnuke.thisNode()\['string'].setValue(n)" +STARTLINE}
    addUserKnob {1 string l parent +INVISIBLE}
    string null
    addUserKnob {3 id l "id number"}
    id {{parent.CTimeOffset7.shotnmbr}}
    addUserKnob {3 ref l "ref frame"}
    ref {{parent.CTimeOffset7.ref}}
   }
   Transform {
    translate {{"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].translate.x(ref)\}]"} {"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].translate.y(ref)\}]"}}
    rotate {{"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].rotate-\[value parent_gun].rotate(ref)\}]"}}
    scale {{"\[if \{\[value parent_gun]==\"null\"\} \{return 1\} \{return 1+(\[value parent_gun].scale-\[value parent_gun].scale(ref))\}]"}}
    center {{"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].center.x(ref)\}]"} {"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].center.y(ref)\}]"}}
    name GUNMatchMove1
    label "\n"
    xpos -135
    ypos 241
    addUserKnob {20 User l parent}
    addUserKnob {3 ref}
    ref {{parent.CTimeOffset7.ref}}
   }
   Transform {
    translate {{"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].translate.x-\[value parent_env].translate.x(ref)\}]"} {"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].translate.y-\[value parent_env].translate.y(ref)\}]"}}
    rotate {{"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].rotate-\[value parent_env].rotate(ref)\}]"}}
    scale {{"\[if \{\[value parent_gun]==\"null\"\} \{return 1\} \{return 1+(\[value parent_env].scale-\[value parent_env].scale(ref))\}]"}}
    center {{"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].center.x(ref)\}]"} {"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].center.y(ref)\}]"}}
    motionblur {{(mode==2)*0.2}}
    shutter {{FlashMB*(0.175*0.3)}}
    shutteroffset centred
    name ENVMatchMove1
    xpos -135
    ypos 317
    addUserKnob {20 User l parent}
    addUserKnob {3 ref}
    ref {{parent.CTimeOffset7.ref}}
   }
   Transform {
    translate {{"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return -((root.width/2)-(\[value parent_gun].center.x(1)+\[value parent_gun].translate.x(1)))\}]"} {"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return -((root.height/2)-(\[value parent_gun].center.y(1)+\[value parent_gun].translate.y(1)))\}]"}}
    shutteroffset centred
    name Transform_GUNMatchMove3
    label "alignment correction"
    xpos -135
    ypos 405
    addUserKnob {20 User l parent}
    addUserKnob {22 python_button l "set parent" t "select parent node, and press this button to set the selected node as parent" T "n = nuke.selectedNode()\['name'].getValue()\nnuke.thisNode()\['string'].setValue(n)" +STARTLINE}
    addUserKnob {1 string l parent}
    string Transform_MatchMove10
    addUserKnob {3 ref +INVISIBLE}
    ref {{parent.cCard3D_8.ref}}
   }
   Remove {
    operation keep
    channels rgb
    name Remove12
    xpos -135
    ypos 489
   }
push 0
   Switch {
    inputs 2
    which {{ActivateSideFlash(CTimeOffset7.ref)}}
    name Switch3
    label "keyframeable disable "
    xpos -135
    ypos 587
   }
push 0
   Switch {
    inputs 2
    which {{parent.Angle_reveal_side.value!=0}}
    name Switch6
    label "disable based on angle"
    xpos -135
    ypos 671
   }
   Merge2 {
    inputs 3+1
    operation max
    name Merge1
    xpos -135
    ypos 745
   }
   Merge2 {
    inputs 2
    operation plus
    bbox intersection
    name Merge6
    xpos -135
    ypos 1196
   }
push 0
   Switch {
    inputs 2
    which {{"shot_\[value count]==0?0:(EnableExtraFrames==1?floor(((frame>=shot_\[value count])+(frame<=(shot_\[value count]+(4*((mode==1)+(mode==2))))))/2):frame==shot_\[value count])"}}
    name cSwitch_3
    selected true
    xpos -135
    ypos 1354
    addUserKnob {20 User}
    addUserKnob {3 count l "shot number"}
    count {{parent.CTimeOffset7.shotnmbr}}
   }
   Output {
    name Output1
    xpos -135
    ypos 1861
   }
  end_group
push $N52df2b50
push $N5d0f1910
  Group {
   inputs 2
   name gunshot17
   label "shot: \[value shotcount]\non frame: \[value shot_\[value shotcount]]\n"
   xpos 11077
   ypos -814
   addUserKnob {20 User}
   addUserKnob {3 shotcount l shot}
   shotcount 17
   addUserKnob {3 shotstart l frame +INVISIBLE}
   shotstart {{"shotcount==0 ? 0 : shot\[value shotcount]-1"}}
  }
   BackdropNode {
    inputs 0
    name BackdropNode3
    knobChanged "try:\n    listenedKnobs = \['text', 'position', 'name']\n    node = nuke.thisNode()\n    name = node.knob('name').value()\n    text = node.knob('text').value()\n    position = node.knob('position').value()\n    position = \"<\" + position + \">\"\n    label = node.knob('label').value()\n    \n    if nuke.thisKnob().name() in listenedKnobs:\n        if text == \"\":\n            if node.knob('position').value() == \"left\":\n                node.knob('label').setValue()\n            else:\n                node.knob('label').setValue(position + name)\n        else:\n            if node.knob('position').value() == \"left\":\n                node.knob('label').setValue(text)\n            else:\n                node.knob('label').setValue(position + text)\n                \n    elif nuke.thisKnob().name() == 'font_size':\n        fontSize = node.knob('font_size').value()\n        node.knob('note_font_size').setValue(fontSize)\nexcept:\n    pass"
    tile_color 0x232323ff
    label "<Left><h2> Gunshot"
    note_font_size 31.5
    xpos -698
    ypos -924
    bdwidth 1057
    bdheight 2343
    addUserKnob {20 F_VFX l BackdropNode}
    addUserKnob {43 text l Text}
    text "<h2> Gunshot"
    addUserKnob {7 font_size l "Font Size" R 10 100}
    font_size 31.5
    addUserKnob {4 position l "" -STARTLINE M {Left Center}}
    addUserKnob {26 S01 l " " T " "}
    addUserKnob {22 grow l " <img src=\"F_scalep.png\">" -STARTLINE T "n=nuke.thisNode()\n\ndef grow(node=None,step=50):\n    try:\n        if not node:\n            n=nuke.selectedNode()\n        else:\n            n=node\n            n\['xpos'].setValue(n\['xpos'].getValue()-step)\n            n\['ypos'].setValue(n\['ypos'].getValue()-step)\n            n\['bdwidth'].setValue(n\['bdwidth'].getValue()+step*2)\n            n\['bdheight'].setValue(n\['bdheight'].getValue()+step*2)\n    except:\n        pass\ngrow(n,50)"}
    addUserKnob {22 shrink l " <img src=\"F_scalem.png\">" -STARTLINE T "n=nuke.thisNode()\n\ndef shrink(node=None,step=50):\n    try:\n        if not node:\n            n=nuke.selectedNode()\n        else:\n            n=node\n            n\['xpos'].setValue(n\['xpos'].getValue()+step)\n            n\['ypos'].setValue(n\['ypos'].getValue()+step)\n            n\['bdwidth'].setValue(n\['bdwidth'].getValue()-step*2)\n            n\['bdheight'].setValue(n\['bdheight'].getValue()-step*2)\n    except:\n        pass\nshrink(n,50)"}
    addUserKnob {22 colorandom l " <img src=\"ColorBars.png\">" -STARTLINE T "import colorsys, random\nn=nuke.thisNode()\nR,G,B= colorsys.hsv_to_rgb(random.random(),.1+random.random()*.15,.15+random.random()*.15)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ) )"}
    addUserKnob {22 darkgrey l "<font color=\"#232323\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.0, 0.0, 0.14]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 lightgrey l "<font color=\"#383838\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.0, 0.0, 0.22]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 red l "<font color=\"#8c3838\" size=6>■</font>" T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.0, 0.6, 0.55]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n" +STARTLINE}
    addUserKnob {22 orange l "<font color=\"#b28e59\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.1, 0.5, 0.7]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 yellow l "<font color=\"#ccc766\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.16, 0.5, 0.8]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 green l "<font color=\"#5d995b\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.33, 0.4, 0.6]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 cyan l "<font color=\"#72998f\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.46, 0.25, 0.6]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 blue l "<font color=\"#59687f\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.6, 0.3, 0.5]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 darkblue l "<font color=\"#63628c\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.67, 0.3, 0.55]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 magenta l "<font color=\"#927a99\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.8, 0.2, 0.6]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 pink l "<font color=\"#997a89\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.92, 0.2, 0.6]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {26 S02 l " " T " "}
    addUserKnob {26 Ftools l "" +STARTLINE T "<font color=\"#1C1C1C\"> v1.2 - Franklin VFX - 2018"}
   }
   BackdropNode {
    inputs 0
    name BackdropNode1
    knobChanged "try:\n    listenedKnobs = \['text', 'position', 'name']\n    node = nuke.thisNode()\n    name = node.knob('name').value()\n    text = node.knob('text').value()\n    position = node.knob('position').value()\n    position = \"<\" + position + \">\"\n    label = node.knob('label').value()\n    \n    if nuke.thisKnob().name() in listenedKnobs:\n        if text == \"\":\n            if node.knob('position').value() == \"left\":\n                node.knob('label').setValue()\n            else:\n                node.knob('label').setValue(position + name)\n        else:\n            if node.knob('position').value() == \"left\":\n                node.knob('label').setValue(text)\n            else:\n                node.knob('label').setValue(position + text)\n                \n    elif nuke.thisKnob().name() == 'font_size':\n        fontSize = node.knob('font_size').value()\n        node.knob('note_font_size').setValue(fontSize)\nexcept:\n    pass"
    tile_color 0x927a99ff
    note_font_size 50
    xpos -460
    ypos -257
    bdwidth 435
    bdheight 786
    z_order 1
    addUserKnob {20 F_VFX l BackdropNode}
    addUserKnob {43 text l Text}
    addUserKnob {7 font_size l "Font Size" R 10 100}
    font_size 50
    addUserKnob {4 position l "" -STARTLINE M {Left Center}}
    addUserKnob {26 S01 l " " T " "}
    addUserKnob {22 grow l " <img src=\"F_scalep.png\">" -STARTLINE T "n=nuke.thisNode()\n\ndef grow(node=None,step=50):\n    try:\n        if not node:\n            n=nuke.selectedNode()\n        else:\n            n=node\n            n\['xpos'].setValue(n\['xpos'].getValue()-step)\n            n\['ypos'].setValue(n\['ypos'].getValue()-step)\n            n\['bdwidth'].setValue(n\['bdwidth'].getValue()+step*2)\n            n\['bdheight'].setValue(n\['bdheight'].getValue()+step*2)\n    except:\n        pass\ngrow(n,50)"}
    addUserKnob {22 shrink l " <img src=\"F_scalem.png\">" -STARTLINE T "n=nuke.thisNode()\n\ndef shrink(node=None,step=50):\n    try:\n        if not node:\n            n=nuke.selectedNode()\n        else:\n            n=node\n            n\['xpos'].setValue(n\['xpos'].getValue()+step)\n            n\['ypos'].setValue(n\['ypos'].getValue()+step)\n            n\['bdwidth'].setValue(n\['bdwidth'].getValue()-step*2)\n            n\['bdheight'].setValue(n\['bdheight'].getValue()-step*2)\n    except:\n        pass\nshrink(n,50)"}
    addUserKnob {22 colorandom l " <img src=\"ColorBars.png\">" -STARTLINE T "import colorsys, random\nn=nuke.thisNode()\nR,G,B= colorsys.hsv_to_rgb(random.random(),.1+random.random()*.15,.15+random.random()*.15)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ) )"}
    addUserKnob {22 darkgrey l "<font color=\"#232323\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.0, 0.0, 0.14]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 lightgrey l "<font color=\"#383838\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.0, 0.0, 0.22]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 red l "<font color=\"#8c3838\" size=6>■</font>" T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.0, 0.6, 0.55]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n" +STARTLINE}
    addUserKnob {22 orange l "<font color=\"#b28e59\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.1, 0.5, 0.7]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 yellow l "<font color=\"#ccc766\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.16, 0.5, 0.8]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 green l "<font color=\"#5d995b\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.33, 0.4, 0.6]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 cyan l "<font color=\"#72998f\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.46, 0.25, 0.6]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 blue l "<font color=\"#59687f\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.6, 0.3, 0.5]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 darkblue l "<font color=\"#63628c\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.67, 0.3, 0.55]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 magenta l "<font color=\"#927a99\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.8, 0.2, 0.6]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 pink l "<font color=\"#997a89\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.92, 0.2, 0.6]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {26 S02 l " " T " "}
    addUserKnob {26 Ftools l "" +STARTLINE T "<font color=\"#1C1C1C\"> v1.2 - Franklin VFX - 2018"}
   }
   Constant {
    inputs 0
    channels rgb
    name Constant4
    xpos -648
    ypos 987
   }
   AdjBBox {
    numpixels {{size_bbox}}
    name AdjBBox4
    xpos -648
    ypos 1120
   }
   Dot {
    name Dot19
    xpos -614
    ypos 1200
   }
   Axis3 {
    inputs 0
    useMatrix true
    matrix {
        {{parent.cCard3D_1.matrix} {parent.cCard3D_1.matrix} {parent.cCard3D_1.matrix} {parent.cCard3D_1.matrix}}
        {{parent.cCard3D_1.matrix} {parent.cCard3D_1.matrix} {parent.cCard3D_1.matrix} {parent.cCard3D_1.matrix}}
        {{parent.cCard3D_1.matrix} {parent.cCard3D_1.matrix} {parent.cCard3D_1.matrix} {parent.cCard3D_1.matrix}}
        {{parent.cCard3D_1.matrix} {parent.cCard3D_1.matrix} {parent.cCard3D_1.matrix} {parent.cCard3D_1.matrix}}
      }
    name Axis3
    xpos -207
    ypos 48
   }
set N5c7a2300 [stack 0]
push 0
   Input {
    inputs 0
    name Side
    xpos -135
    ypos -1101
   }
   TimeOffset {
    time_offset {{"shotnmbr==0 ? 0 : shot_\[value shotnmbr]-1"}}
    time ""
    name CTimeOffset7
    label "shot: \[value shotnmbr]\non frame \[value time_offset]"
    xpos -135
    ypos -853
    addUserKnob {20 User}
    addUserKnob {3 shotnmbr l "shot "}
    shotnmbr {{shotcount}}
    addUserKnob {3 ref}
    ref {{time_offset+1}}
   }
   Group {
    name DecimalTimeOffset1
    tile_color 0xafa35dff
    label "random asset\n(based on brighness)"
    note_font "Bitstream Vera Sans Bold"
    xpos -135
    ypos -690
    addUserKnob {20 User}
    addUserKnob {7 decimal l "time offset (decimal)"}
    decimal {{"floor\n(\n  (\n  (  ((((random((shotcount*823)+((seed+seed_offset_\[value shotcount])*212))-0.5)*  ((1-( abs(brighness_flare-0.5) )*2)+1)  )+0.5)*0.5)  * (1-brighness_flare)  )\n\n  +\n\n  (  (((((random((shotcount*823)+((seed+seed_offset_\[value shotcount])*212))-0.5)*  ((1-( abs(brighness_flare-0.5) )*2)+1)  )+0.5)*0.5)+0.5)  * (brighness_flare)  )\n  )\n  *1000\n)\n\n/1000"}}
    addUserKnob {26 ""}
    addUserKnob {26 _1 l "" +STARTLINE T "Chris Fryer | 2020\nupdated by Yorben Otto | 2024"}
   }
    Input {
     inputs 0
     name Input1
     xpos 426
     ypos -793
    }
    TimeOffset {
     time_offset {{(-floor(parent.decimal))*(DecimalTimeOffset1.decimal<0)}}
     time ""
     name TimeOffset1
     xpos 426
     ypos -674
    }
    Dot {
     name Dot6
     xpos 460
     ypos -635
    }
set N5c7e1cd0 [stack 0]
    Dot {
     name Dot5
     xpos 350
     ypos -635
    }
    Dot {
     name Dot7
     xpos 350
     ypos -365
    }
push $N5c7e1cd0
    Dot {
     name Dot1
     xpos 572
     ypos -635
    }
    TimeBlur {
     divisions 2
     shutter {{(parent.decimal-(floor(parent.decimal)))*2}}
     shutteroffset start
     shuttercustomoffset 0
     name TimeBlur1
     xpos 538
     ypos -558
    }
    Dot {
     name Dot2
     xpos 572
     ypos -490
    }
push $N5c7e1cd0
    TimeBlur {
     divisions 2
     shutter {{parent.decimal*2}}
     shutteroffset start
     shuttercustomoffset 0
     name TimeBlur8
     xpos 426
     ypos -556
    }
    Switch {
     inputs 2
     which {{parent.decimal<0}}
     name Switch1
     xpos 426
     ypos -494
    }
    Multiply {
     value {{parent.TimeBlur8.divisions}}
     name Multiply6
     xpos 426
     ypos -436
    }
    Merge2 {
     inputs 2
     operation from
     name Merge6
     xpos 426
     ypos -369
    }
set N5ca33b10 [stack 0]
    Output {
     name Output1
     xpos 426
     ypos -221
    }
push $N5ca33b10
push $N5ca33b10
    Viewer {
     inputs 2
     frame_range 1-100
     viewerProcess "sRGB (default)"
     name Viewer1
     xpos 675
     ypos -246
    }
   end_group
   NoTimeBlur {
    name NoTimeBlur6
    xpos -135
    ypos -608
   }
   Dot {
    name Dot21
    xpos -101
    ypos -449
   }
set N5cad2480 [stack 0]
   Dot {
    name Dot22
    xpos -245
    ypos -449
   }
   Multiply {
    value {{math_matrix.result_y_flash(parent.CTimeOffset7.ref)}}
    name Angle_reveal_top
    label TOP
    xpos -279
    ypos -371
   }
   Transform {
    scale {{0.05+(0.05*(((parent.DecimalTimeOffset1.decimal-0.5)*2)*ScaleVariationFlash))}}
    center {{root.width/2 x1015 2304} {root.height/2}}
    shutteroffset centred
    name random_size_top
    xpos -279
    ypos -136
   }
   Card3D {
    inputs 3
    rot_order ZYX
    translate {0 0 0}
    rotate {90 0 0}
    shutteroffset centred
    name cCard3D5
    tile_color 0x7b1d1dff
    xpos -279
    ypos 153
    addUserKnob {20 User l parent}
    addUserKnob {22 python_button l "set parent" t "select parent node, and press this button to set the selected node as parent" +INVISIBLE T "n = nuke.selectedNode()\['name'].getValue()\nnuke.thisNode()\['string'].setValue(n)" +STARTLINE}
    addUserKnob {1 string l parent +INVISIBLE}
    string null
    addUserKnob {3 ref l "ref frame"}
    ref 1015
   }
   Transform {
    translate {{"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].translate.x(ref)\}]"} {"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].translate.y(ref)\}]"}}
    rotate {{"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].rotate-\[value parent_gun].rotate(ref)\}]"}}
    scale {{"\[if \{\[value parent_gun]==\"null\"\} \{return 1\} \{return 1+(\[value parent_gun].scale-\[value parent_gun].scale(ref))\}]"}}
    center {{"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].center.x(ref)\}]"} {"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].center.y(ref)\}]"}}
    name GUNMatchMove
    label "\n"
    xpos -279
    ypos 247
    addUserKnob {20 User l parent}
    addUserKnob {3 ref}
    ref {{parent.CTimeOffset7.ref}}
   }
   Transform {
    translate {{"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].translate.x-\[value parent_env].translate.x(ref)\}]"} {"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].translate.y-\[value parent_env].translate.y(ref)\}]"}}
    rotate {{"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].rotate-\[value parent_env].rotate(ref)\}]"}}
    scale {{"\[if \{\[value parent_gun]==\"null\"\} \{return 1\} \{return 1+(\[value parent_env].scale-\[value parent_env].scale(ref))\}]"}}
    center {{"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].center.x(ref)\}]"} {"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].center.y(ref)\}]"}}
    motionblur {{(mode==2)*0.2}}
    shutter {{FlashMB*(0.175*0.3)}}
    shutteroffset centred
    name ENVMatchMove
    xpos -279
    ypos 321
    addUserKnob {20 User l parent}
    addUserKnob {3 ref}
    ref {{parent.CTimeOffset7.ref}}
   }
   Transform {
    translate {{"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return -((root.width/2)-(\[value parent_gun].center.x(1)+\[value parent_gun].translate.x(1)))\}]"} {"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return -((root.height/2)-(\[value parent_gun].center.y(1)+\[value parent_gun].translate.y(1)))\}]"}}
    shutteroffset centred
    name Transform_GUNMatchMove1
    label "alignment correction"
    xpos -279
    ypos 408
    addUserKnob {20 User l parent}
    addUserKnob {22 python_button l "set parent" t "select parent node, and press this button to set the selected node as parent" T "n = nuke.selectedNode()\['name'].getValue()\nnuke.thisNode()\['string'].setValue(n)" +STARTLINE}
    addUserKnob {1 string l parent}
    string Transform_MatchMove10
    addUserKnob {3 ref +INVISIBLE}
    ref {{parent.cCard3D_8.ref}}
   }
   Remove {
    operation keep
    channels rgb
    name Remove10
    xpos -279
    ypos 489
   }
push 0
   Switch {
    inputs 2
    which {{ActivateSideFlash(CTimeOffset7.ref)}}
    name Switch1
    label "keyframeable disable "
    xpos -279
    ypos 587
   }
push 0
   Switch {
    inputs 2
    which {{parent.Angle_reveal_top.value!=0}}
    name Switch4
    label "disable based on angle"
    xpos -279
    ypos 670
   }
   Dot {
    name Dot1
    xpos -245
    ypos 717
   }
push 0
push $N5c7a2300
push 0
   Input {
    inputs 0
    name Front
    xpos -430
    ypos -1102
    number 1
   }
   TimeOffset {
    time_offset {{"shotnmbr==0 ? 0 : shot_\[value shotnmbr]-1"}}
    time ""
    name CTimeOffset8
    xpos -430
    ypos -840
    addUserKnob {20 User}
    addUserKnob {3 shotnmbr l "shot "}
    shotnmbr {{parent.CTimeOffset7.shotnmbr}}
   }
   Group {
    name DecimalTimeOffset
    tile_color 0xafa35dff
    label "random asset\n(based on brighness)"
    note_font "Bitstream Vera Sans Bold"
    xpos -430
    ypos -693
    addUserKnob {20 User}
    addUserKnob {7 decimal l "time offset (decimal)"}
    decimal {{"floor\n(\n  (\n  (  ((((random((shotcount*823)+((seed+seed_offset_\[value shotcount])*212))-0.5)*  ((1-( abs(brighness_flare-0.5) )*2)+1)  )+0.5)*0.5)  * (1-brighness_flare)  )\n\n  +\n\n  (  (((((random((shotcount*823)+((seed+seed_offset_\[value shotcount])*212))-0.5)*  ((1-( abs(brighness_flare-0.5) )*2)+1)  )+0.5)*0.5)+0.5)  * (brighness_flare)  )\n  )\n  *1000\n)\n\n/1000"}}
    addUserKnob {26 ""}
    addUserKnob {26 _1 l "" +STARTLINE T "Chris Fryer | 2020\nupdated by Yorben Otto | 2024"}
   }
    Input {
     inputs 0
     name Input1
     xpos 426
     ypos -793
    }
    TimeOffset {
     time_offset {{(-floor(parent.decimal))*(DecimalTimeOffset.decimal<0)}}
     time ""
     name TimeOffset1
     xpos 426
     ypos -674
    }
    Dot {
     name Dot6
     xpos 460
     ypos -635
    }
set N5cb91f00 [stack 0]
    Dot {
     name Dot5
     xpos 350
     ypos -635
    }
    Dot {
     name Dot7
     xpos 350
     ypos -365
    }
push $N5cb91f00
    Dot {
     name Dot1
     xpos 572
     ypos -635
    }
    TimeBlur {
     divisions 2
     shutter {{(parent.decimal-(floor(parent.decimal)))*2}}
     shutteroffset start
     shuttercustomoffset 0
     name TimeBlur1
     xpos 538
     ypos -558
    }
    Dot {
     name Dot2
     xpos 572
     ypos -490
    }
push $N5cb91f00
    TimeBlur {
     divisions 2
     shutter {{parent.decimal*2}}
     shutteroffset start
     shuttercustomoffset 0
     name TimeBlur8
     xpos 426
     ypos -556
    }
    Switch {
     inputs 2
     which {{parent.decimal<0}}
     name Switch1
     xpos 426
     ypos -494
    }
    Multiply {
     value {{parent.TimeBlur8.divisions}}
     name Multiply6
     xpos 426
     ypos -436
    }
    Merge2 {
     inputs 2
     operation from
     name Merge6
     xpos 426
     ypos -369
    }
set N5cbd3e40 [stack 0]
    Output {
     name Output1
     xpos 426
     ypos -221
    }
push $N5cbd3e40
push $N5cbd3e40
    Viewer {
     inputs 2
     frame_range 1-100
     viewerProcess "sRGB (default)"
     name Viewer1
     xpos 675
     ypos -246
    }
   end_group
   NoTimeBlur {
    name NoTimeBlur7
    xpos -430
    ypos -617
   }
   Multiply {
    value {{math_matrix.result_x_flash(parent.CTimeOffset7.ref)}}
    name Angle_reveal_front
    label FRONT
    xpos -430
    ypos -375
   }
   Transform {
    scale {{0.05+(0.05*(((parent.DecimalTimeOffset1.decimal-0.5)*2)*ScaleVariationFlash))}}
    center {{root.width/2 x1015 2304} {root.height/2}}
    shutteroffset centred
    name random_size_front
    xpos -430
    ypos -134
   }
   Card3D {
    inputs 3
    rot_order ZYX
    translate {0 0 0}
    rotate {0 90 0}
    shutteroffset centred
    name cCard3D6
    tile_color 0x7b1d1dff
    xpos -430
    ypos 150
    addUserKnob {20 User l parent}
    addUserKnob {22 python_button l "set parent" t "select parent node, and press this button to set the selected node as parent" +INVISIBLE T "n = nuke.selectedNode()\['name'].getValue()\nnuke.thisNode()\['string'].setValue(n)" +STARTLINE}
    addUserKnob {1 string l parent +INVISIBLE}
    string null
    addUserKnob {3 ref l "ref frame"}
    ref 1015
   }
   Transform {
    translate {{"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].translate.x(ref)\}]"} {"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].translate.y(ref)\}]"}}
    rotate {{"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].rotate-\[value parent_gun].rotate(ref)\}]"}}
    scale {{"\[if \{\[value parent_gun]==\"null\"\} \{return 1\} \{return 1+(\[value parent_gun].scale-\[value parent_gun].scale(ref))\}]"}}
    center {{"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].center.x(ref)\}]"} {"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].center.y(ref)\}]"}}
    name GUNMatchMove2
    label "\n"
    xpos -430
    ypos 248
    addUserKnob {20 User l parent}
    addUserKnob {3 ref}
    ref {{parent.CTimeOffset7.ref}}
   }
   Transform {
    translate {{"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].translate.x-\[value parent_env].translate.x(ref)\}]"} {"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].translate.y-\[value parent_env].translate.y(ref)\}]"}}
    rotate {{"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].rotate-\[value parent_env].rotate(ref)\}]"}}
    scale {{"\[if \{\[value parent_gun]==\"null\"\} \{return 1\} \{return 1+(\[value parent_env].scale-\[value parent_env].scale(ref))\}]"}}
    center {{"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].center.x(ref)\}]"} {"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].center.y(ref)\}]"}}
    motionblur {{(mode==2)*0.2}}
    shutter {{FlashMB*(0.175*0.3)}}
    shutteroffset centred
    name ENVMatchMove2
    xpos -430
    ypos 320
    addUserKnob {20 User l parent}
    addUserKnob {3 ref}
    ref {{parent.CTimeOffset7.ref}}
   }
   Transform {
    translate {{"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return -((root.width/2)-(\[value parent_gun].center.x(1)+\[value parent_gun].translate.x(1)))\}]"} {"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return -((root.height/2)-(\[value parent_gun].center.y(1)+\[value parent_gun].translate.y(1)))\}]"}}
    shutteroffset centred
    name Transform_GUNMatchMove2
    label "alignment correction"
    xpos -430
    ypos 407
    addUserKnob {20 User l parent}
    addUserKnob {22 python_button l "set parent" t "select parent node, and press this button to set the selected node as parent" T "n = nuke.selectedNode()\['name'].getValue()\nnuke.thisNode()\['string'].setValue(n)" +STARTLINE}
    addUserKnob {1 string l parent}
    string Transform_MatchMove10
    addUserKnob {3 ref +INVISIBLE}
    ref {{parent.cCard3D_8.ref}}
   }
   Remove {
    operation keep
    channels rgb
    name Remove11
    xpos -430
    ypos 487
   }
push 0
   Switch {
    inputs 2
    which {{ActivateFrontFlash(CTimeOffset7.ref)}}
    name Switch7
    label "keyframeable disable "
    xpos -430
    ypos 586
   }
push 0
   Switch {
    inputs 2
    which {{parent.Angle_reveal_front.value!=0}}
    name Switch5
    label "disable based on angle"
    xpos -430
    ypos 670
   }
   Dot {
    name Dot2
    xpos -396
    ypos 749
   }
push $N5cad2480
   Multiply {
    value {{math_matrix.result_z_flash(parent.CTimeOffset7.ref)}}
    name Angle_reveal_side
    label SIDE
    xpos -135
    ypos -374
   }
   Transform {
    scale {{0.05+(0.05*(((parent.DecimalTimeOffset1.decimal-0.5)*2)*ScaleVariationFlash))}}
    center {{root.width/2 x1015 2304} {root.height/2}}
    shutteroffset centred
    name random_size_side
    xpos -135
    ypos -137
   }
   Card3D {
    translate {{"\[if \{\[exists  parent.parent.parent.input0]\} \{return \[value \[topnode parent.parent.parent.input0].name].translate.x(ref)\} \{return 0\}]"} {"\[if \{\[exists  parent.parent.parent.input0]\} \{return \[value \[topnode parent.parent.parent.input0].name].translate.y(ref)\} \{return 0\}]"} {"\[if \{\[exists  parent.parent.parent.input0]\} \{return \[value \[topnode parent.parent.parent.input0].name].translate.z(ref)\} \{return -1\}]"}}
    rotate {{"\[if \{\[exists  parent.parent.parent.input0]\} \{return \[value \[topnode parent.parent.parent.input0].name].rotate.x(ref)\} \{return 0\}]"} {"\[if \{\[exists  parent.parent.parent.input0]\} \{return \[value \[topnode parent.parent.parent.input0].name].rotate.y(ref)\} \{return 0\}]"} {"\[if \{\[exists  parent.parent.parent.input0]\} \{return \[value \[topnode parent.parent.parent.input0].name].rotate.z(ref)\} \{return 0\}]"}}
    scaling {{"\[if \{\[exists  parent.parent.parent.input0]\} \{return \[value \[topnode parent.parent.parent.input0].name].scaling.x(ref)\} \{return 1\}]"} {"\[if \{\[exists  parent.parent.parent.input0]\} \{return \[value \[topnode parent.parent.parent.input0].name].scaling.y(ref)\} \{return 1\}]"} {"\[if \{\[exists  parent.parent.parent.input0]\} \{return \[value \[topnode parent.parent.parent.input0].name].scaling.z(ref)\} \{return 1\}]"}}
    uniform_scale {{"\[if \{\[exists  parent.parent.parent.input0]\} \{return (\[value \[topnode parent.parent.parent.input0].name].uniform_scale(ref)*25)\} \{return 25\}]"}}
    shutteroffset centred
    name cCard3D_1
    tile_color 0x7b1d1dff
    label "ref frame: \[value ref]"
    xpos -135
    ypos 147
    addUserKnob {20 User l parent}
    addUserKnob {22 python_button l "set parent" t "select parent node, and press this button to set the selected node as parent" +INVISIBLE T "n = nuke.selectedNode()\['name'].getValue()\nnuke.thisNode()\['string'].setValue(n)" +STARTLINE}
    addUserKnob {1 string l parent +INVISIBLE}
    string null
    addUserKnob {3 id l "id number"}
    id {{parent.CTimeOffset7.shotnmbr}}
    addUserKnob {3 ref l "ref frame"}
    ref {{parent.CTimeOffset7.ref}}
   }
   Transform {
    translate {{"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].translate.x(ref)\}]"} {"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].translate.y(ref)\}]"}}
    rotate {{"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].rotate-\[value parent_gun].rotate(ref)\}]"}}
    scale {{"\[if \{\[value parent_gun]==\"null\"\} \{return 1\} \{return 1+(\[value parent_gun].scale-\[value parent_gun].scale(ref))\}]"}}
    center {{"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].center.x(ref)\}]"} {"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].center.y(ref)\}]"}}
    name GUNMatchMove1
    label "\n"
    xpos -135
    ypos 241
    addUserKnob {20 User l parent}
    addUserKnob {3 ref}
    ref {{parent.CTimeOffset7.ref}}
   }
   Transform {
    translate {{"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].translate.x-\[value parent_env].translate.x(ref)\}]"} {"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].translate.y-\[value parent_env].translate.y(ref)\}]"}}
    rotate {{"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].rotate-\[value parent_env].rotate(ref)\}]"}}
    scale {{"\[if \{\[value parent_gun]==\"null\"\} \{return 1\} \{return 1+(\[value parent_env].scale-\[value parent_env].scale(ref))\}]"}}
    center {{"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].center.x(ref)\}]"} {"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].center.y(ref)\}]"}}
    motionblur {{(mode==2)*0.2}}
    shutter {{FlashMB*(0.175*0.3)}}
    shutteroffset centred
    name ENVMatchMove1
    xpos -135
    ypos 317
    addUserKnob {20 User l parent}
    addUserKnob {3 ref}
    ref {{parent.CTimeOffset7.ref}}
   }
   Transform {
    translate {{"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return -((root.width/2)-(\[value parent_gun].center.x(1)+\[value parent_gun].translate.x(1)))\}]"} {"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return -((root.height/2)-(\[value parent_gun].center.y(1)+\[value parent_gun].translate.y(1)))\}]"}}
    shutteroffset centred
    name Transform_GUNMatchMove3
    label "alignment correction"
    xpos -135
    ypos 405
    addUserKnob {20 User l parent}
    addUserKnob {22 python_button l "set parent" t "select parent node, and press this button to set the selected node as parent" T "n = nuke.selectedNode()\['name'].getValue()\nnuke.thisNode()\['string'].setValue(n)" +STARTLINE}
    addUserKnob {1 string l parent}
    string Transform_MatchMove10
    addUserKnob {3 ref +INVISIBLE}
    ref {{parent.cCard3D_8.ref}}
   }
   Remove {
    operation keep
    channels rgb
    name Remove12
    xpos -135
    ypos 489
   }
push 0
   Switch {
    inputs 2
    which {{ActivateSideFlash(CTimeOffset7.ref)}}
    name Switch3
    label "keyframeable disable "
    xpos -135
    ypos 587
   }
push 0
   Switch {
    inputs 2
    which {{parent.Angle_reveal_side.value!=0}}
    name Switch6
    label "disable based on angle"
    xpos -135
    ypos 671
   }
   Merge2 {
    inputs 3+1
    operation max
    name Merge1
    xpos -135
    ypos 745
   }
   Merge2 {
    inputs 2
    operation plus
    bbox intersection
    name Merge6
    xpos -135
    ypos 1196
   }
push 0
   Switch {
    inputs 2
    which {{"shot_\[value count]==0?0:(EnableExtraFrames==1?floor(((frame>=shot_\[value count])+(frame<=(shot_\[value count]+(4*((mode==1)+(mode==2))))))/2):frame==shot_\[value count])"}}
    name cSwitch_3
    selected true
    xpos -135
    ypos 1354
    addUserKnob {20 User}
    addUserKnob {3 count l "shot number"}
    count {{parent.CTimeOffset7.shotnmbr}}
   }
   Output {
    name Output1
    xpos -135
    ypos 1861
   }
  end_group
push $Nca0614e0
push $N563f3640
  Group {
   inputs 2
   name gunshot18
   label "shot: \[value shotcount]\non frame: \[value shot_\[value shotcount]]\n"
   xpos 11271
   ypos -814
   addUserKnob {20 User}
   addUserKnob {3 shotcount l shot}
   shotcount 18
   addUserKnob {3 shotstart l frame +INVISIBLE}
   shotstart {{"shotcount==0 ? 0 : shot\[value shotcount]-1"}}
  }
   BackdropNode {
    inputs 0
    name BackdropNode3
    knobChanged "try:\n    listenedKnobs = \['text', 'position', 'name']\n    node = nuke.thisNode()\n    name = node.knob('name').value()\n    text = node.knob('text').value()\n    position = node.knob('position').value()\n    position = \"<\" + position + \">\"\n    label = node.knob('label').value()\n    \n    if nuke.thisKnob().name() in listenedKnobs:\n        if text == \"\":\n            if node.knob('position').value() == \"left\":\n                node.knob('label').setValue()\n            else:\n                node.knob('label').setValue(position + name)\n        else:\n            if node.knob('position').value() == \"left\":\n                node.knob('label').setValue(text)\n            else:\n                node.knob('label').setValue(position + text)\n                \n    elif nuke.thisKnob().name() == 'font_size':\n        fontSize = node.knob('font_size').value()\n        node.knob('note_font_size').setValue(fontSize)\nexcept:\n    pass"
    tile_color 0x232323ff
    label "<Left><h2> Gunshot"
    note_font_size 31.5
    xpos -698
    ypos -924
    bdwidth 1057
    bdheight 2343
    addUserKnob {20 F_VFX l BackdropNode}
    addUserKnob {43 text l Text}
    text "<h2> Gunshot"
    addUserKnob {7 font_size l "Font Size" R 10 100}
    font_size 31.5
    addUserKnob {4 position l "" -STARTLINE M {Left Center}}
    addUserKnob {26 S01 l " " T " "}
    addUserKnob {22 grow l " <img src=\"F_scalep.png\">" -STARTLINE T "n=nuke.thisNode()\n\ndef grow(node=None,step=50):\n    try:\n        if not node:\n            n=nuke.selectedNode()\n        else:\n            n=node\n            n\['xpos'].setValue(n\['xpos'].getValue()-step)\n            n\['ypos'].setValue(n\['ypos'].getValue()-step)\n            n\['bdwidth'].setValue(n\['bdwidth'].getValue()+step*2)\n            n\['bdheight'].setValue(n\['bdheight'].getValue()+step*2)\n    except:\n        pass\ngrow(n,50)"}
    addUserKnob {22 shrink l " <img src=\"F_scalem.png\">" -STARTLINE T "n=nuke.thisNode()\n\ndef shrink(node=None,step=50):\n    try:\n        if not node:\n            n=nuke.selectedNode()\n        else:\n            n=node\n            n\['xpos'].setValue(n\['xpos'].getValue()+step)\n            n\['ypos'].setValue(n\['ypos'].getValue()+step)\n            n\['bdwidth'].setValue(n\['bdwidth'].getValue()-step*2)\n            n\['bdheight'].setValue(n\['bdheight'].getValue()-step*2)\n    except:\n        pass\nshrink(n,50)"}
    addUserKnob {22 colorandom l " <img src=\"ColorBars.png\">" -STARTLINE T "import colorsys, random\nn=nuke.thisNode()\nR,G,B= colorsys.hsv_to_rgb(random.random(),.1+random.random()*.15,.15+random.random()*.15)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ) )"}
    addUserKnob {22 darkgrey l "<font color=\"#232323\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.0, 0.0, 0.14]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 lightgrey l "<font color=\"#383838\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.0, 0.0, 0.22]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 red l "<font color=\"#8c3838\" size=6>■</font>" T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.0, 0.6, 0.55]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n" +STARTLINE}
    addUserKnob {22 orange l "<font color=\"#b28e59\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.1, 0.5, 0.7]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 yellow l "<font color=\"#ccc766\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.16, 0.5, 0.8]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 green l "<font color=\"#5d995b\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.33, 0.4, 0.6]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 cyan l "<font color=\"#72998f\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.46, 0.25, 0.6]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 blue l "<font color=\"#59687f\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.6, 0.3, 0.5]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 darkblue l "<font color=\"#63628c\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.67, 0.3, 0.55]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 magenta l "<font color=\"#927a99\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.8, 0.2, 0.6]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 pink l "<font color=\"#997a89\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.92, 0.2, 0.6]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {26 S02 l " " T " "}
    addUserKnob {26 Ftools l "" +STARTLINE T "<font color=\"#1C1C1C\"> v1.2 - Franklin VFX - 2018"}
   }
   BackdropNode {
    inputs 0
    name BackdropNode1
    knobChanged "try:\n    listenedKnobs = \['text', 'position', 'name']\n    node = nuke.thisNode()\n    name = node.knob('name').value()\n    text = node.knob('text').value()\n    position = node.knob('position').value()\n    position = \"<\" + position + \">\"\n    label = node.knob('label').value()\n    \n    if nuke.thisKnob().name() in listenedKnobs:\n        if text == \"\":\n            if node.knob('position').value() == \"left\":\n                node.knob('label').setValue()\n            else:\n                node.knob('label').setValue(position + name)\n        else:\n            if node.knob('position').value() == \"left\":\n                node.knob('label').setValue(text)\n            else:\n                node.knob('label').setValue(position + text)\n                \n    elif nuke.thisKnob().name() == 'font_size':\n        fontSize = node.knob('font_size').value()\n        node.knob('note_font_size').setValue(fontSize)\nexcept:\n    pass"
    tile_color 0x927a99ff
    note_font_size 50
    xpos -460
    ypos -257
    bdwidth 435
    bdheight 786
    z_order 1
    addUserKnob {20 F_VFX l BackdropNode}
    addUserKnob {43 text l Text}
    addUserKnob {7 font_size l "Font Size" R 10 100}
    font_size 50
    addUserKnob {4 position l "" -STARTLINE M {Left Center}}
    addUserKnob {26 S01 l " " T " "}
    addUserKnob {22 grow l " <img src=\"F_scalep.png\">" -STARTLINE T "n=nuke.thisNode()\n\ndef grow(node=None,step=50):\n    try:\n        if not node:\n            n=nuke.selectedNode()\n        else:\n            n=node\n            n\['xpos'].setValue(n\['xpos'].getValue()-step)\n            n\['ypos'].setValue(n\['ypos'].getValue()-step)\n            n\['bdwidth'].setValue(n\['bdwidth'].getValue()+step*2)\n            n\['bdheight'].setValue(n\['bdheight'].getValue()+step*2)\n    except:\n        pass\ngrow(n,50)"}
    addUserKnob {22 shrink l " <img src=\"F_scalem.png\">" -STARTLINE T "n=nuke.thisNode()\n\ndef shrink(node=None,step=50):\n    try:\n        if not node:\n            n=nuke.selectedNode()\n        else:\n            n=node\n            n\['xpos'].setValue(n\['xpos'].getValue()+step)\n            n\['ypos'].setValue(n\['ypos'].getValue()+step)\n            n\['bdwidth'].setValue(n\['bdwidth'].getValue()-step*2)\n            n\['bdheight'].setValue(n\['bdheight'].getValue()-step*2)\n    except:\n        pass\nshrink(n,50)"}
    addUserKnob {22 colorandom l " <img src=\"ColorBars.png\">" -STARTLINE T "import colorsys, random\nn=nuke.thisNode()\nR,G,B= colorsys.hsv_to_rgb(random.random(),.1+random.random()*.15,.15+random.random()*.15)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ) )"}
    addUserKnob {22 darkgrey l "<font color=\"#232323\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.0, 0.0, 0.14]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 lightgrey l "<font color=\"#383838\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.0, 0.0, 0.22]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 red l "<font color=\"#8c3838\" size=6>■</font>" T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.0, 0.6, 0.55]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n" +STARTLINE}
    addUserKnob {22 orange l "<font color=\"#b28e59\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.1, 0.5, 0.7]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 yellow l "<font color=\"#ccc766\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.16, 0.5, 0.8]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 green l "<font color=\"#5d995b\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.33, 0.4, 0.6]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 cyan l "<font color=\"#72998f\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.46, 0.25, 0.6]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 blue l "<font color=\"#59687f\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.6, 0.3, 0.5]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 darkblue l "<font color=\"#63628c\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.67, 0.3, 0.55]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 magenta l "<font color=\"#927a99\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.8, 0.2, 0.6]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 pink l "<font color=\"#997a89\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.92, 0.2, 0.6]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {26 S02 l " " T " "}
    addUserKnob {26 Ftools l "" +STARTLINE T "<font color=\"#1C1C1C\"> v1.2 - Franklin VFX - 2018"}
   }
   Constant {
    inputs 0
    channels rgb
    name Constant4
    xpos -648
    ypos 987
   }
   AdjBBox {
    numpixels {{size_bbox}}
    name AdjBBox4
    xpos -648
    ypos 1120
   }
   Dot {
    name Dot19
    xpos -614
    ypos 1200
   }
   Axis3 {
    inputs 0
    useMatrix true
    matrix {
        {{parent.cCard3D_1.matrix} {parent.cCard3D_1.matrix} {parent.cCard3D_1.matrix} {parent.cCard3D_1.matrix}}
        {{parent.cCard3D_1.matrix} {parent.cCard3D_1.matrix} {parent.cCard3D_1.matrix} {parent.cCard3D_1.matrix}}
        {{parent.cCard3D_1.matrix} {parent.cCard3D_1.matrix} {parent.cCard3D_1.matrix} {parent.cCard3D_1.matrix}}
        {{parent.cCard3D_1.matrix} {parent.cCard3D_1.matrix} {parent.cCard3D_1.matrix} {parent.cCard3D_1.matrix}}
      }
    name Axis3
    xpos -207
    ypos 48
   }
set N5d206c20 [stack 0]
push 0
   Input {
    inputs 0
    name Side
    xpos -135
    ypos -1101
   }
   TimeOffset {
    time_offset {{"shotnmbr==0 ? 0 : shot_\[value shotnmbr]-1"}}
    time ""
    name CTimeOffset7
    label "shot: \[value shotnmbr]\non frame \[value time_offset]"
    xpos -135
    ypos -853
    addUserKnob {20 User}
    addUserKnob {3 shotnmbr l "shot "}
    shotnmbr {{shotcount}}
    addUserKnob {3 ref}
    ref {{time_offset+1}}
   }
   Group {
    name DecimalTimeOffset1
    tile_color 0xafa35dff
    label "random asset\n(based on brighness)"
    note_font "Bitstream Vera Sans Bold"
    xpos -135
    ypos -690
    addUserKnob {20 User}
    addUserKnob {7 decimal l "time offset (decimal)"}
    decimal {{"floor\n(\n  (\n  (  ((((random((shotcount*823)+((seed+seed_offset_\[value shotcount])*212))-0.5)*  ((1-( abs(brighness_flare-0.5) )*2)+1)  )+0.5)*0.5)  * (1-brighness_flare)  )\n\n  +\n\n  (  (((((random((shotcount*823)+((seed+seed_offset_\[value shotcount])*212))-0.5)*  ((1-( abs(brighness_flare-0.5) )*2)+1)  )+0.5)*0.5)+0.5)  * (brighness_flare)  )\n  )\n  *1000\n)\n\n/1000"}}
    addUserKnob {26 ""}
    addUserKnob {26 _1 l "" +STARTLINE T "Chris Fryer | 2020\nupdated by Yorben Otto | 2024"}
   }
    Input {
     inputs 0
     name Input1
     xpos 426
     ypos -793
    }
    TimeOffset {
     time_offset {{(-floor(parent.decimal))*(DecimalTimeOffset1.decimal<0)}}
     time ""
     name TimeOffset1
     xpos 426
     ypos -674
    }
    Dot {
     name Dot6
     xpos 460
     ypos -635
    }
set N5d2466b0 [stack 0]
    Dot {
     name Dot5
     xpos 350
     ypos -635
    }
    Dot {
     name Dot7
     xpos 350
     ypos -365
    }
push $N5d2466b0
    Dot {
     name Dot1
     xpos 572
     ypos -635
    }
    TimeBlur {
     divisions 2
     shutter {{(parent.decimal-(floor(parent.decimal)))*2}}
     shutteroffset start
     shuttercustomoffset 0
     name TimeBlur1
     xpos 538
     ypos -558
    }
    Dot {
     name Dot2
     xpos 572
     ypos -490
    }
push $N5d2466b0
    TimeBlur {
     divisions 2
     shutter {{parent.decimal*2}}
     shutteroffset start
     shuttercustomoffset 0
     name TimeBlur8
     xpos 426
     ypos -556
    }
    Switch {
     inputs 2
     which {{parent.decimal<0}}
     name Switch1
     xpos 426
     ypos -494
    }
    Multiply {
     value {{parent.TimeBlur8.divisions}}
     name Multiply6
     xpos 426
     ypos -436
    }
    Merge2 {
     inputs 2
     operation from
     name Merge6
     xpos 426
     ypos -369
    }
set N5d2885f0 [stack 0]
    Output {
     name Output1
     xpos 426
     ypos -221
    }
push $N5d2885f0
push $N5d2885f0
    Viewer {
     inputs 2
     frame_range 1-100
     viewerProcess "sRGB (default)"
     name Viewer1
     xpos 675
     ypos -246
    }
   end_group
   NoTimeBlur {
    name NoTimeBlur6
    xpos -135
    ypos -608
   }
   Dot {
    name Dot21
    xpos -101
    ypos -449
   }
set N5d436e60 [stack 0]
   Dot {
    name Dot22
    xpos -245
    ypos -449
   }
   Multiply {
    value {{math_matrix.result_y_flash(parent.CTimeOffset7.ref)}}
    name Angle_reveal_top
    label TOP
    xpos -279
    ypos -371
   }
   Transform {
    scale {{0.05+(0.05*(((parent.DecimalTimeOffset1.decimal-0.5)*2)*ScaleVariationFlash))}}
    center {{root.width/2 x1015 2304} {root.height/2}}
    shutteroffset centred
    name random_size_top
    xpos -279
    ypos -136
   }
   Card3D {
    inputs 3
    rot_order ZYX
    translate {0 0 0}
    rotate {90 0 0}
    shutteroffset centred
    name cCard3D5
    tile_color 0x7b1d1dff
    xpos -279
    ypos 153
    addUserKnob {20 User l parent}
    addUserKnob {22 python_button l "set parent" t "select parent node, and press this button to set the selected node as parent" +INVISIBLE T "n = nuke.selectedNode()\['name'].getValue()\nnuke.thisNode()\['string'].setValue(n)" +STARTLINE}
    addUserKnob {1 string l parent +INVISIBLE}
    string null
    addUserKnob {3 ref l "ref frame"}
    ref 1015
   }
   Transform {
    translate {{"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].translate.x(ref)\}]"} {"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].translate.y(ref)\}]"}}
    rotate {{"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].rotate-\[value parent_gun].rotate(ref)\}]"}}
    scale {{"\[if \{\[value parent_gun]==\"null\"\} \{return 1\} \{return 1+(\[value parent_gun].scale-\[value parent_gun].scale(ref))\}]"}}
    center {{"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].center.x(ref)\}]"} {"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].center.y(ref)\}]"}}
    name GUNMatchMove
    label "\n"
    xpos -279
    ypos 247
    addUserKnob {20 User l parent}
    addUserKnob {3 ref}
    ref {{parent.CTimeOffset7.ref}}
   }
   Transform {
    translate {{"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].translate.x-\[value parent_env].translate.x(ref)\}]"} {"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].translate.y-\[value parent_env].translate.y(ref)\}]"}}
    rotate {{"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].rotate-\[value parent_env].rotate(ref)\}]"}}
    scale {{"\[if \{\[value parent_gun]==\"null\"\} \{return 1\} \{return 1+(\[value parent_env].scale-\[value parent_env].scale(ref))\}]"}}
    center {{"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].center.x(ref)\}]"} {"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].center.y(ref)\}]"}}
    motionblur {{(mode==2)*0.2}}
    shutter {{FlashMB*(0.175*0.3)}}
    shutteroffset centred
    name ENVMatchMove
    xpos -279
    ypos 321
    addUserKnob {20 User l parent}
    addUserKnob {3 ref}
    ref {{parent.CTimeOffset7.ref}}
   }
   Transform {
    translate {{"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return -((root.width/2)-(\[value parent_gun].center.x(1)+\[value parent_gun].translate.x(1)))\}]"} {"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return -((root.height/2)-(\[value parent_gun].center.y(1)+\[value parent_gun].translate.y(1)))\}]"}}
    shutteroffset centred
    name Transform_GUNMatchMove1
    label "alignment correction"
    xpos -279
    ypos 408
    addUserKnob {20 User l parent}
    addUserKnob {22 python_button l "set parent" t "select parent node, and press this button to set the selected node as parent" T "n = nuke.selectedNode()\['name'].getValue()\nnuke.thisNode()\['string'].setValue(n)" +STARTLINE}
    addUserKnob {1 string l parent}
    string Transform_MatchMove10
    addUserKnob {3 ref +INVISIBLE}
    ref {{parent.cCard3D_8.ref}}
   }
   Remove {
    operation keep
    channels rgb
    name Remove10
    xpos -279
    ypos 489
   }
push 0
   Switch {
    inputs 2
    which {{ActivateSideFlash(CTimeOffset7.ref)}}
    name Switch1
    label "keyframeable disable "
    xpos -279
    ypos 587
   }
push 0
   Switch {
    inputs 2
    which {{parent.Angle_reveal_top.value!=0}}
    name Switch4
    label "disable based on angle"
    xpos -279
    ypos 670
   }
   Dot {
    name Dot1
    xpos -245
    ypos 717
   }
push 0
push $N5d206c20
push 0
   Input {
    inputs 0
    name Front
    xpos -430
    ypos -1102
    number 1
   }
   TimeOffset {
    time_offset {{"shotnmbr==0 ? 0 : shot_\[value shotnmbr]-1"}}
    time ""
    name CTimeOffset8
    xpos -430
    ypos -840
    addUserKnob {20 User}
    addUserKnob {3 shotnmbr l "shot "}
    shotnmbr {{parent.CTimeOffset7.shotnmbr}}
   }
   Group {
    name DecimalTimeOffset
    tile_color 0xafa35dff
    label "random asset\n(based on brighness)"
    note_font "Bitstream Vera Sans Bold"
    xpos -430
    ypos -693
    addUserKnob {20 User}
    addUserKnob {7 decimal l "time offset (decimal)"}
    decimal {{"floor\n(\n  (\n  (  ((((random((shotcount*823)+((seed+seed_offset_\[value shotcount])*212))-0.5)*  ((1-( abs(brighness_flare-0.5) )*2)+1)  )+0.5)*0.5)  * (1-brighness_flare)  )\n\n  +\n\n  (  (((((random((shotcount*823)+((seed+seed_offset_\[value shotcount])*212))-0.5)*  ((1-( abs(brighness_flare-0.5) )*2)+1)  )+0.5)*0.5)+0.5)  * (brighness_flare)  )\n  )\n  *1000\n)\n\n/1000"}}
    addUserKnob {26 ""}
    addUserKnob {26 _1 l "" +STARTLINE T "Chris Fryer | 2020\nupdated by Yorben Otto | 2024"}
   }
    Input {
     inputs 0
     name Input1
     xpos 426
     ypos -793
    }
    TimeOffset {
     time_offset {{(-floor(parent.decimal))*(DecimalTimeOffset.decimal<0)}}
     time ""
     name TimeOffset1
     xpos 426
     ypos -674
    }
    Dot {
     name Dot6
     xpos 460
     ypos -635
    }
set N5d4e69c0 [stack 0]
    Dot {
     name Dot5
     xpos 350
     ypos -635
    }
    Dot {
     name Dot7
     xpos 350
     ypos -365
    }
push $N5d4e69c0
    Dot {
     name Dot1
     xpos 572
     ypos -635
    }
    TimeBlur {
     divisions 2
     shutter {{(parent.decimal-(floor(parent.decimal)))*2}}
     shutteroffset start
     shuttercustomoffset 0
     name TimeBlur1
     xpos 538
     ypos -558
    }
    Dot {
     name Dot2
     xpos 572
     ypos -490
    }
push $N5d4e69c0
    TimeBlur {
     divisions 2
     shutter {{parent.decimal*2}}
     shutteroffset start
     shuttercustomoffset 0
     name TimeBlur8
     xpos 426
     ypos -556
    }
    Switch {
     inputs 2
     which {{parent.decimal<0}}
     name Switch1
     xpos 426
     ypos -494
    }
    Multiply {
     value {{parent.TimeBlur8.divisions}}
     name Multiply6
     xpos 426
     ypos -436
    }
    Merge2 {
     inputs 2
     operation from
     name Merge6
     xpos 426
     ypos -369
    }
set N5d638810 [stack 0]
    Output {
     name Output1
     xpos 426
     ypos -221
    }
push $N5d638810
push $N5d638810
    Viewer {
     inputs 2
     frame_range 1-100
     viewerProcess "sRGB (default)"
     name Viewer1
     xpos 675
     ypos -246
    }
   end_group
   NoTimeBlur {
    name NoTimeBlur7
    xpos -430
    ypos -617
   }
   Multiply {
    value {{math_matrix.result_x_flash(parent.CTimeOffset7.ref)}}
    name Angle_reveal_front
    label FRONT
    xpos -430
    ypos -375
   }
   Transform {
    scale {{0.05+(0.05*(((parent.DecimalTimeOffset1.decimal-0.5)*2)*ScaleVariationFlash))}}
    center {{root.width/2 x1015 2304} {root.height/2}}
    shutteroffset centred
    name random_size_front
    xpos -430
    ypos -134
   }
   Card3D {
    inputs 3
    rot_order ZYX
    translate {0 0 0}
    rotate {0 90 0}
    shutteroffset centred
    name cCard3D6
    tile_color 0x7b1d1dff
    xpos -430
    ypos 150
    addUserKnob {20 User l parent}
    addUserKnob {22 python_button l "set parent" t "select parent node, and press this button to set the selected node as parent" +INVISIBLE T "n = nuke.selectedNode()\['name'].getValue()\nnuke.thisNode()\['string'].setValue(n)" +STARTLINE}
    addUserKnob {1 string l parent +INVISIBLE}
    string null
    addUserKnob {3 ref l "ref frame"}
    ref 1015
   }
   Transform {
    translate {{"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].translate.x(ref)\}]"} {"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].translate.y(ref)\}]"}}
    rotate {{"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].rotate-\[value parent_gun].rotate(ref)\}]"}}
    scale {{"\[if \{\[value parent_gun]==\"null\"\} \{return 1\} \{return 1+(\[value parent_gun].scale-\[value parent_gun].scale(ref))\}]"}}
    center {{"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].center.x(ref)\}]"} {"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].center.y(ref)\}]"}}
    name GUNMatchMove2
    label "\n"
    xpos -430
    ypos 248
    addUserKnob {20 User l parent}
    addUserKnob {3 ref}
    ref {{parent.CTimeOffset7.ref}}
   }
   Transform {
    translate {{"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].translate.x-\[value parent_env].translate.x(ref)\}]"} {"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].translate.y-\[value parent_env].translate.y(ref)\}]"}}
    rotate {{"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].rotate-\[value parent_env].rotate(ref)\}]"}}
    scale {{"\[if \{\[value parent_gun]==\"null\"\} \{return 1\} \{return 1+(\[value parent_env].scale-\[value parent_env].scale(ref))\}]"}}
    center {{"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].center.x(ref)\}]"} {"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].center.y(ref)\}]"}}
    motionblur {{(mode==2)*0.2}}
    shutter {{FlashMB*(0.175*0.3)}}
    shutteroffset centred
    name ENVMatchMove2
    xpos -430
    ypos 320
    addUserKnob {20 User l parent}
    addUserKnob {3 ref}
    ref {{parent.CTimeOffset7.ref}}
   }
   Transform {
    translate {{"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return -((root.width/2)-(\[value parent_gun].center.x(1)+\[value parent_gun].translate.x(1)))\}]"} {"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return -((root.height/2)-(\[value parent_gun].center.y(1)+\[value parent_gun].translate.y(1)))\}]"}}
    shutteroffset centred
    name Transform_GUNMatchMove2
    label "alignment correction"
    xpos -430
    ypos 407
    addUserKnob {20 User l parent}
    addUserKnob {22 python_button l "set parent" t "select parent node, and press this button to set the selected node as parent" T "n = nuke.selectedNode()\['name'].getValue()\nnuke.thisNode()\['string'].setValue(n)" +STARTLINE}
    addUserKnob {1 string l parent}
    string Transform_MatchMove10
    addUserKnob {3 ref +INVISIBLE}
    ref {{parent.cCard3D_8.ref}}
   }
   Remove {
    operation keep
    channels rgb
    name Remove11
    xpos -430
    ypos 487
   }
push 0
   Switch {
    inputs 2
    which {{ActivateFrontFlash(CTimeOffset7.ref)}}
    name Switch7
    label "keyframeable disable "
    xpos -430
    ypos 586
   }
push 0
   Switch {
    inputs 2
    which {{parent.Angle_reveal_front.value!=0}}
    name Switch5
    label "disable based on angle"
    xpos -430
    ypos 670
   }
   Dot {
    name Dot2
    xpos -396
    ypos 749
   }
push $N5d436e60
   Multiply {
    value {{math_matrix.result_z_flash(parent.CTimeOffset7.ref)}}
    name Angle_reveal_side
    label SIDE
    xpos -135
    ypos -374
   }
   Transform {
    scale {{0.05+(0.05*(((parent.DecimalTimeOffset1.decimal-0.5)*2)*ScaleVariationFlash))}}
    center {{root.width/2 x1015 2304} {root.height/2}}
    shutteroffset centred
    name random_size_side
    xpos -135
    ypos -137
   }
   Card3D {
    translate {{"\[if \{\[exists  parent.parent.parent.input0]\} \{return \[value \[topnode parent.parent.parent.input0].name].translate.x(ref)\} \{return 0\}]"} {"\[if \{\[exists  parent.parent.parent.input0]\} \{return \[value \[topnode parent.parent.parent.input0].name].translate.y(ref)\} \{return 0\}]"} {"\[if \{\[exists  parent.parent.parent.input0]\} \{return \[value \[topnode parent.parent.parent.input0].name].translate.z(ref)\} \{return -1\}]"}}
    rotate {{"\[if \{\[exists  parent.parent.parent.input0]\} \{return \[value \[topnode parent.parent.parent.input0].name].rotate.x(ref)\} \{return 0\}]"} {"\[if \{\[exists  parent.parent.parent.input0]\} \{return \[value \[topnode parent.parent.parent.input0].name].rotate.y(ref)\} \{return 0\}]"} {"\[if \{\[exists  parent.parent.parent.input0]\} \{return \[value \[topnode parent.parent.parent.input0].name].rotate.z(ref)\} \{return 0\}]"}}
    scaling {{"\[if \{\[exists  parent.parent.parent.input0]\} \{return \[value \[topnode parent.parent.parent.input0].name].scaling.x(ref)\} \{return 1\}]"} {"\[if \{\[exists  parent.parent.parent.input0]\} \{return \[value \[topnode parent.parent.parent.input0].name].scaling.y(ref)\} \{return 1\}]"} {"\[if \{\[exists  parent.parent.parent.input0]\} \{return \[value \[topnode parent.parent.parent.input0].name].scaling.z(ref)\} \{return 1\}]"}}
    uniform_scale {{"\[if \{\[exists  parent.parent.parent.input0]\} \{return (\[value \[topnode parent.parent.parent.input0].name].uniform_scale(ref)*25)\} \{return 25\}]"}}
    shutteroffset centred
    name cCard3D_1
    tile_color 0x7b1d1dff
    label "ref frame: \[value ref]"
    xpos -135
    ypos 147
    addUserKnob {20 User l parent}
    addUserKnob {22 python_button l "set parent" t "select parent node, and press this button to set the selected node as parent" +INVISIBLE T "n = nuke.selectedNode()\['name'].getValue()\nnuke.thisNode()\['string'].setValue(n)" +STARTLINE}
    addUserKnob {1 string l parent +INVISIBLE}
    string null
    addUserKnob {3 id l "id number"}
    id {{parent.CTimeOffset7.shotnmbr}}
    addUserKnob {3 ref l "ref frame"}
    ref {{parent.CTimeOffset7.ref}}
   }
   Transform {
    translate {{"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].translate.x(ref)\}]"} {"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].translate.y(ref)\}]"}}
    rotate {{"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].rotate-\[value parent_gun].rotate(ref)\}]"}}
    scale {{"\[if \{\[value parent_gun]==\"null\"\} \{return 1\} \{return 1+(\[value parent_gun].scale-\[value parent_gun].scale(ref))\}]"}}
    center {{"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].center.x(ref)\}]"} {"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].center.y(ref)\}]"}}
    name GUNMatchMove1
    label "\n"
    xpos -135
    ypos 241
    addUserKnob {20 User l parent}
    addUserKnob {3 ref}
    ref {{parent.CTimeOffset7.ref}}
   }
   Transform {
    translate {{"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].translate.x-\[value parent_env].translate.x(ref)\}]"} {"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].translate.y-\[value parent_env].translate.y(ref)\}]"}}
    rotate {{"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].rotate-\[value parent_env].rotate(ref)\}]"}}
    scale {{"\[if \{\[value parent_gun]==\"null\"\} \{return 1\} \{return 1+(\[value parent_env].scale-\[value parent_env].scale(ref))\}]"}}
    center {{"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].center.x(ref)\}]"} {"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].center.y(ref)\}]"}}
    motionblur {{(mode==2)*0.2}}
    shutter {{FlashMB*(0.175*0.3)}}
    shutteroffset centred
    name ENVMatchMove1
    xpos -135
    ypos 317
    addUserKnob {20 User l parent}
    addUserKnob {3 ref}
    ref {{parent.CTimeOffset7.ref}}
   }
   Transform {
    translate {{"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return -((root.width/2)-(\[value parent_gun].center.x(1)+\[value parent_gun].translate.x(1)))\}]"} {"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return -((root.height/2)-(\[value parent_gun].center.y(1)+\[value parent_gun].translate.y(1)))\}]"}}
    shutteroffset centred
    name Transform_GUNMatchMove3
    label "alignment correction"
    xpos -135
    ypos 405
    addUserKnob {20 User l parent}
    addUserKnob {22 python_button l "set parent" t "select parent node, and press this button to set the selected node as parent" T "n = nuke.selectedNode()\['name'].getValue()\nnuke.thisNode()\['string'].setValue(n)" +STARTLINE}
    addUserKnob {1 string l parent}
    string Transform_MatchMove10
    addUserKnob {3 ref +INVISIBLE}
    ref {{parent.cCard3D_8.ref}}
   }
   Remove {
    operation keep
    channels rgb
    name Remove12
    xpos -135
    ypos 489
   }
push 0
   Switch {
    inputs 2
    which {{ActivateSideFlash(CTimeOffset7.ref)}}
    name Switch3
    label "keyframeable disable "
    xpos -135
    ypos 587
   }
push 0
   Switch {
    inputs 2
    which {{parent.Angle_reveal_side.value!=0}}
    name Switch6
    label "disable based on angle"
    xpos -135
    ypos 671
   }
   Merge2 {
    inputs 3+1
    operation max
    name Merge1
    xpos -135
    ypos 745
   }
   Merge2 {
    inputs 2
    operation plus
    bbox intersection
    name Merge6
    xpos -135
    ypos 1196
   }
push 0
   Switch {
    inputs 2
    which {{"shot_\[value count]==0?0:(EnableExtraFrames==1?floor(((frame>=shot_\[value count])+(frame<=(shot_\[value count]+(4*((mode==1)+(mode==2))))))/2):frame==shot_\[value count])"}}
    name cSwitch_3
    selected true
    xpos -135
    ypos 1354
    addUserKnob {20 User}
    addUserKnob {3 count l "shot number"}
    count {{parent.CTimeOffset7.shotnmbr}}
   }
   Output {
    name Output1
    xpos -135
    ypos 1861
   }
  end_group
push $N4b6f5100
push $N4d0f0b40
  Group {
   inputs 2
   name gunshot19
   label "shot: \[value shotcount]\non frame: \[value shot_\[value shotcount]]\n"
   xpos 11465
   ypos -814
   addUserKnob {20 User}
   addUserKnob {3 shotcount l shot}
   shotcount 19
   addUserKnob {3 shotstart l frame +INVISIBLE}
   shotstart {{"shotcount==0 ? 0 : shot\[value shotcount]-1"}}
  }
   BackdropNode {
    inputs 0
    name BackdropNode3
    knobChanged "try:\n    listenedKnobs = \['text', 'position', 'name']\n    node = nuke.thisNode()\n    name = node.knob('name').value()\n    text = node.knob('text').value()\n    position = node.knob('position').value()\n    position = \"<\" + position + \">\"\n    label = node.knob('label').value()\n    \n    if nuke.thisKnob().name() in listenedKnobs:\n        if text == \"\":\n            if node.knob('position').value() == \"left\":\n                node.knob('label').setValue()\n            else:\n                node.knob('label').setValue(position + name)\n        else:\n            if node.knob('position').value() == \"left\":\n                node.knob('label').setValue(text)\n            else:\n                node.knob('label').setValue(position + text)\n                \n    elif nuke.thisKnob().name() == 'font_size':\n        fontSize = node.knob('font_size').value()\n        node.knob('note_font_size').setValue(fontSize)\nexcept:\n    pass"
    tile_color 0x232323ff
    label "<Left><h2> Gunshot"
    note_font_size 31.5
    xpos -698
    ypos -924
    bdwidth 1057
    bdheight 2343
    addUserKnob {20 F_VFX l BackdropNode}
    addUserKnob {43 text l Text}
    text "<h2> Gunshot"
    addUserKnob {7 font_size l "Font Size" R 10 100}
    font_size 31.5
    addUserKnob {4 position l "" -STARTLINE M {Left Center}}
    addUserKnob {26 S01 l " " T " "}
    addUserKnob {22 grow l " <img src=\"F_scalep.png\">" -STARTLINE T "n=nuke.thisNode()\n\ndef grow(node=None,step=50):\n    try:\n        if not node:\n            n=nuke.selectedNode()\n        else:\n            n=node\n            n\['xpos'].setValue(n\['xpos'].getValue()-step)\n            n\['ypos'].setValue(n\['ypos'].getValue()-step)\n            n\['bdwidth'].setValue(n\['bdwidth'].getValue()+step*2)\n            n\['bdheight'].setValue(n\['bdheight'].getValue()+step*2)\n    except:\n        pass\ngrow(n,50)"}
    addUserKnob {22 shrink l " <img src=\"F_scalem.png\">" -STARTLINE T "n=nuke.thisNode()\n\ndef shrink(node=None,step=50):\n    try:\n        if not node:\n            n=nuke.selectedNode()\n        else:\n            n=node\n            n\['xpos'].setValue(n\['xpos'].getValue()+step)\n            n\['ypos'].setValue(n\['ypos'].getValue()+step)\n            n\['bdwidth'].setValue(n\['bdwidth'].getValue()-step*2)\n            n\['bdheight'].setValue(n\['bdheight'].getValue()-step*2)\n    except:\n        pass\nshrink(n,50)"}
    addUserKnob {22 colorandom l " <img src=\"ColorBars.png\">" -STARTLINE T "import colorsys, random\nn=nuke.thisNode()\nR,G,B= colorsys.hsv_to_rgb(random.random(),.1+random.random()*.15,.15+random.random()*.15)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ) )"}
    addUserKnob {22 darkgrey l "<font color=\"#232323\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.0, 0.0, 0.14]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 lightgrey l "<font color=\"#383838\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.0, 0.0, 0.22]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 red l "<font color=\"#8c3838\" size=6>■</font>" T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.0, 0.6, 0.55]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n" +STARTLINE}
    addUserKnob {22 orange l "<font color=\"#b28e59\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.1, 0.5, 0.7]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 yellow l "<font color=\"#ccc766\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.16, 0.5, 0.8]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 green l "<font color=\"#5d995b\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.33, 0.4, 0.6]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 cyan l "<font color=\"#72998f\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.46, 0.25, 0.6]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 blue l "<font color=\"#59687f\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.6, 0.3, 0.5]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 darkblue l "<font color=\"#63628c\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.67, 0.3, 0.55]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 magenta l "<font color=\"#927a99\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.8, 0.2, 0.6]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 pink l "<font color=\"#997a89\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.92, 0.2, 0.6]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {26 S02 l " " T " "}
    addUserKnob {26 Ftools l "" +STARTLINE T "<font color=\"#1C1C1C\"> v1.2 - Franklin VFX - 2018"}
   }
   BackdropNode {
    inputs 0
    name BackdropNode1
    knobChanged "try:\n    listenedKnobs = \['text', 'position', 'name']\n    node = nuke.thisNode()\n    name = node.knob('name').value()\n    text = node.knob('text').value()\n    position = node.knob('position').value()\n    position = \"<\" + position + \">\"\n    label = node.knob('label').value()\n    \n    if nuke.thisKnob().name() in listenedKnobs:\n        if text == \"\":\n            if node.knob('position').value() == \"left\":\n                node.knob('label').setValue()\n            else:\n                node.knob('label').setValue(position + name)\n        else:\n            if node.knob('position').value() == \"left\":\n                node.knob('label').setValue(text)\n            else:\n                node.knob('label').setValue(position + text)\n                \n    elif nuke.thisKnob().name() == 'font_size':\n        fontSize = node.knob('font_size').value()\n        node.knob('note_font_size').setValue(fontSize)\nexcept:\n    pass"
    tile_color 0x927a99ff
    note_font_size 50
    xpos -460
    ypos -257
    bdwidth 435
    bdheight 786
    z_order 1
    addUserKnob {20 F_VFX l BackdropNode}
    addUserKnob {43 text l Text}
    addUserKnob {7 font_size l "Font Size" R 10 100}
    font_size 50
    addUserKnob {4 position l "" -STARTLINE M {Left Center}}
    addUserKnob {26 S01 l " " T " "}
    addUserKnob {22 grow l " <img src=\"F_scalep.png\">" -STARTLINE T "n=nuke.thisNode()\n\ndef grow(node=None,step=50):\n    try:\n        if not node:\n            n=nuke.selectedNode()\n        else:\n            n=node\n            n\['xpos'].setValue(n\['xpos'].getValue()-step)\n            n\['ypos'].setValue(n\['ypos'].getValue()-step)\n            n\['bdwidth'].setValue(n\['bdwidth'].getValue()+step*2)\n            n\['bdheight'].setValue(n\['bdheight'].getValue()+step*2)\n    except:\n        pass\ngrow(n,50)"}
    addUserKnob {22 shrink l " <img src=\"F_scalem.png\">" -STARTLINE T "n=nuke.thisNode()\n\ndef shrink(node=None,step=50):\n    try:\n        if not node:\n            n=nuke.selectedNode()\n        else:\n            n=node\n            n\['xpos'].setValue(n\['xpos'].getValue()+step)\n            n\['ypos'].setValue(n\['ypos'].getValue()+step)\n            n\['bdwidth'].setValue(n\['bdwidth'].getValue()-step*2)\n            n\['bdheight'].setValue(n\['bdheight'].getValue()-step*2)\n    except:\n        pass\nshrink(n,50)"}
    addUserKnob {22 colorandom l " <img src=\"ColorBars.png\">" -STARTLINE T "import colorsys, random\nn=nuke.thisNode()\nR,G,B= colorsys.hsv_to_rgb(random.random(),.1+random.random()*.15,.15+random.random()*.15)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ) )"}
    addUserKnob {22 darkgrey l "<font color=\"#232323\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.0, 0.0, 0.14]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 lightgrey l "<font color=\"#383838\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.0, 0.0, 0.22]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 red l "<font color=\"#8c3838\" size=6>■</font>" T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.0, 0.6, 0.55]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n" +STARTLINE}
    addUserKnob {22 orange l "<font color=\"#b28e59\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.1, 0.5, 0.7]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 yellow l "<font color=\"#ccc766\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.16, 0.5, 0.8]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 green l "<font color=\"#5d995b\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.33, 0.4, 0.6]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 cyan l "<font color=\"#72998f\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.46, 0.25, 0.6]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 blue l "<font color=\"#59687f\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.6, 0.3, 0.5]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 darkblue l "<font color=\"#63628c\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.67, 0.3, 0.55]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 magenta l "<font color=\"#927a99\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.8, 0.2, 0.6]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 pink l "<font color=\"#997a89\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.92, 0.2, 0.6]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {26 S02 l " " T " "}
    addUserKnob {26 Ftools l "" +STARTLINE T "<font color=\"#1C1C1C\"> v1.2 - Franklin VFX - 2018"}
   }
   Constant {
    inputs 0
    channels rgb
    name Constant4
    xpos -648
    ypos 987
   }
   AdjBBox {
    numpixels {{size_bbox}}
    name AdjBBox4
    xpos -648
    ypos 1120
   }
   Dot {
    name Dot19
    xpos -614
    ypos 1200
   }
   Axis3 {
    inputs 0
    useMatrix true
    matrix {
        {{parent.cCard3D_1.matrix} {parent.cCard3D_1.matrix} {parent.cCard3D_1.matrix} {parent.cCard3D_1.matrix}}
        {{parent.cCard3D_1.matrix} {parent.cCard3D_1.matrix} {parent.cCard3D_1.matrix} {parent.cCard3D_1.matrix}}
        {{parent.cCard3D_1.matrix} {parent.cCard3D_1.matrix} {parent.cCard3D_1.matrix} {parent.cCard3D_1.matrix}}
        {{parent.cCard3D_1.matrix} {parent.cCard3D_1.matrix} {parent.cCard3D_1.matrix} {parent.cCard3D_1.matrix}}
      }
    name Axis3
    xpos -207
    ypos 48
   }
set N5da557c0 [stack 0]
push 0
   Input {
    inputs 0
    name Side
    xpos -135
    ypos -1101
   }
   TimeOffset {
    time_offset {{"shotnmbr==0 ? 0 : shot_\[value shotnmbr]-1"}}
    time ""
    name CTimeOffset7
    label "shot: \[value shotnmbr]\non frame \[value time_offset]"
    xpos -135
    ypos -853
    addUserKnob {20 User}
    addUserKnob {3 shotnmbr l "shot "}
    shotnmbr {{shotcount}}
    addUserKnob {3 ref}
    ref {{time_offset+1}}
   }
   Group {
    name DecimalTimeOffset1
    tile_color 0xafa35dff
    label "random asset\n(based on brighness)"
    note_font "Bitstream Vera Sans Bold"
    xpos -135
    ypos -690
    addUserKnob {20 User}
    addUserKnob {7 decimal l "time offset (decimal)"}
    decimal {{"floor\n(\n  (\n  (  ((((random((shotcount*823)+((seed+seed_offset_\[value shotcount])*212))-0.5)*  ((1-( abs(brighness_flare-0.5) )*2)+1)  )+0.5)*0.5)  * (1-brighness_flare)  )\n\n  +\n\n  (  (((((random((shotcount*823)+((seed+seed_offset_\[value shotcount])*212))-0.5)*  ((1-( abs(brighness_flare-0.5) )*2)+1)  )+0.5)*0.5)+0.5)  * (brighness_flare)  )\n  )\n  *1000\n)\n\n/1000"}}
    addUserKnob {26 ""}
    addUserKnob {26 _1 l "" +STARTLINE T "Chris Fryer | 2020\nupdated by Yorben Otto | 2024"}
   }
    Input {
     inputs 0
     name Input1
     xpos 426
     ypos -793
    }
    TimeOffset {
     time_offset {{(-floor(parent.decimal))*(DecimalTimeOffset1.decimal<0)}}
     time ""
     name TimeOffset1
     xpos 426
     ypos -674
    }
    Dot {
     name Dot6
     xpos 460
     ypos -635
    }
set N5da95190 [stack 0]
    Dot {
     name Dot5
     xpos 350
     ypos -635
    }
    Dot {
     name Dot7
     xpos 350
     ypos -365
    }
push $N5da95190
    Dot {
     name Dot1
     xpos 572
     ypos -635
    }
    TimeBlur {
     divisions 2
     shutter {{(parent.decimal-(floor(parent.decimal)))*2}}
     shutteroffset start
     shuttercustomoffset 0
     name TimeBlur1
     xpos 538
     ypos -558
    }
    Dot {
     name Dot2
     xpos 572
     ypos -490
    }
push $N5da95190
    TimeBlur {
     divisions 2
     shutter {{parent.decimal*2}}
     shutteroffset start
     shuttercustomoffset 0
     name TimeBlur8
     xpos 426
     ypos -556
    }
    Switch {
     inputs 2
     which {{parent.decimal<0}}
     name Switch1
     xpos 426
     ypos -494
    }
    Multiply {
     value {{parent.TimeBlur8.divisions}}
     name Multiply6
     xpos 426
     ypos -436
    }
    Merge2 {
     inputs 2
     operation from
     name Merge6
     xpos 426
     ypos -369
    }
set N5dad70d0 [stack 0]
    Output {
     name Output1
     xpos 426
     ypos -221
    }
push $N5dad70d0
push $N5dad70d0
    Viewer {
     inputs 2
     frame_range 1-100
     viewerProcess "sRGB (default)"
     name Viewer1
     xpos 675
     ypos -246
    }
   end_group
   NoTimeBlur {
    name NoTimeBlur6
    xpos -135
    ypos -608
   }
   Dot {
    name Dot21
    xpos -101
    ypos -449
   }
set N5db85960 [stack 0]
   Dot {
    name Dot22
    xpos -245
    ypos -449
   }
   Multiply {
    value {{math_matrix.result_y_flash(parent.CTimeOffset7.ref)}}
    name Angle_reveal_top
    label TOP
    xpos -279
    ypos -371
   }
   Transform {
    scale {{0.05+(0.05*(((parent.DecimalTimeOffset1.decimal-0.5)*2)*ScaleVariationFlash))}}
    center {{root.width/2 x1015 2304} {root.height/2}}
    shutteroffset centred
    name random_size_top
    xpos -279
    ypos -136
   }
   Card3D {
    inputs 3
    rot_order ZYX
    translate {0 0 0}
    rotate {90 0 0}
    shutteroffset centred
    name cCard3D5
    tile_color 0x7b1d1dff
    xpos -279
    ypos 153
    addUserKnob {20 User l parent}
    addUserKnob {22 python_button l "set parent" t "select parent node, and press this button to set the selected node as parent" +INVISIBLE T "n = nuke.selectedNode()\['name'].getValue()\nnuke.thisNode()\['string'].setValue(n)" +STARTLINE}
    addUserKnob {1 string l parent +INVISIBLE}
    string null
    addUserKnob {3 ref l "ref frame"}
    ref 1015
   }
   Transform {
    translate {{"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].translate.x(ref)\}]"} {"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].translate.y(ref)\}]"}}
    rotate {{"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].rotate-\[value parent_gun].rotate(ref)\}]"}}
    scale {{"\[if \{\[value parent_gun]==\"null\"\} \{return 1\} \{return 1+(\[value parent_gun].scale-\[value parent_gun].scale(ref))\}]"}}
    center {{"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].center.x(ref)\}]"} {"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].center.y(ref)\}]"}}
    name GUNMatchMove
    label "\n"
    xpos -279
    ypos 247
    addUserKnob {20 User l parent}
    addUserKnob {3 ref}
    ref {{parent.CTimeOffset7.ref}}
   }
   Transform {
    translate {{"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].translate.x-\[value parent_env].translate.x(ref)\}]"} {"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].translate.y-\[value parent_env].translate.y(ref)\}]"}}
    rotate {{"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].rotate-\[value parent_env].rotate(ref)\}]"}}
    scale {{"\[if \{\[value parent_gun]==\"null\"\} \{return 1\} \{return 1+(\[value parent_env].scale-\[value parent_env].scale(ref))\}]"}}
    center {{"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].center.x(ref)\}]"} {"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].center.y(ref)\}]"}}
    motionblur {{(mode==2)*0.2}}
    shutter {{FlashMB*(0.175*0.3)}}
    shutteroffset centred
    name ENVMatchMove
    xpos -279
    ypos 321
    addUserKnob {20 User l parent}
    addUserKnob {3 ref}
    ref {{parent.CTimeOffset7.ref}}
   }
   Transform {
    translate {{"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return -((root.width/2)-(\[value parent_gun].center.x(1)+\[value parent_gun].translate.x(1)))\}]"} {"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return -((root.height/2)-(\[value parent_gun].center.y(1)+\[value parent_gun].translate.y(1)))\}]"}}
    shutteroffset centred
    name Transform_GUNMatchMove1
    label "alignment correction"
    xpos -279
    ypos 408
    addUserKnob {20 User l parent}
    addUserKnob {22 python_button l "set parent" t "select parent node, and press this button to set the selected node as parent" T "n = nuke.selectedNode()\['name'].getValue()\nnuke.thisNode()\['string'].setValue(n)" +STARTLINE}
    addUserKnob {1 string l parent}
    string Transform_MatchMove10
    addUserKnob {3 ref +INVISIBLE}
    ref {{parent.cCard3D_8.ref}}
   }
   Remove {
    operation keep
    channels rgb
    name Remove10
    xpos -279
    ypos 489
   }
push 0
   Switch {
    inputs 2
    which {{ActivateSideFlash(CTimeOffset7.ref)}}
    name Switch1
    label "keyframeable disable "
    xpos -279
    ypos 587
   }
push 0
   Switch {
    inputs 2
    which {{parent.Angle_reveal_top.value!=0}}
    name Switch4
    label "disable based on angle"
    xpos -279
    ypos 670
   }
   Dot {
    name Dot1
    xpos -245
    ypos 717
   }
push 0
push $N5da557c0
push 0
   Input {
    inputs 0
    name Front
    xpos -430
    ypos -1102
    number 1
   }
   TimeOffset {
    time_offset {{"shotnmbr==0 ? 0 : shot_\[value shotnmbr]-1"}}
    time ""
    name CTimeOffset8
    xpos -430
    ypos -840
    addUserKnob {20 User}
    addUserKnob {3 shotnmbr l "shot "}
    shotnmbr {{parent.CTimeOffset7.shotnmbr}}
   }
   Group {
    name DecimalTimeOffset
    tile_color 0xafa35dff
    label "random asset\n(based on brighness)"
    note_font "Bitstream Vera Sans Bold"
    xpos -430
    ypos -693
    addUserKnob {20 User}
    addUserKnob {7 decimal l "time offset (decimal)"}
    decimal {{"floor\n(\n  (\n  (  ((((random((shotcount*823)+((seed+seed_offset_\[value shotcount])*212))-0.5)*  ((1-( abs(brighness_flare-0.5) )*2)+1)  )+0.5)*0.5)  * (1-brighness_flare)  )\n\n  +\n\n  (  (((((random((shotcount*823)+((seed+seed_offset_\[value shotcount])*212))-0.5)*  ((1-( abs(brighness_flare-0.5) )*2)+1)  )+0.5)*0.5)+0.5)  * (brighness_flare)  )\n  )\n  *1000\n)\n\n/1000"}}
    addUserKnob {26 ""}
    addUserKnob {26 _1 l "" +STARTLINE T "Chris Fryer | 2020\nupdated by Yorben Otto | 2024"}
   }
    Input {
     inputs 0
     name Input1
     xpos 426
     ypos -793
    }
    TimeOffset {
     time_offset {{(-floor(parent.decimal))*(DecimalTimeOffset.decimal<0)}}
     time ""
     name TimeOffset1
     xpos 426
     ypos -674
    }
    Dot {
     name Dot6
     xpos 460
     ypos -635
    }
set N5a1453f0 [stack 0]
    Dot {
     name Dot5
     xpos 350
     ypos -635
    }
    Dot {
     name Dot7
     xpos 350
     ypos -365
    }
push $N5a1453f0
    Dot {
     name Dot1
     xpos 572
     ypos -635
    }
    TimeBlur {
     divisions 2
     shutter {{(parent.decimal-(floor(parent.decimal)))*2}}
     shutteroffset start
     shuttercustomoffset 0
     name TimeBlur1
     xpos 538
     ypos -558
    }
    Dot {
     name Dot2
     xpos 572
     ypos -490
    }
push $N5a1453f0
    TimeBlur {
     divisions 2
     shutter {{parent.decimal*2}}
     shutteroffset start
     shuttercustomoffset 0
     name TimeBlur8
     xpos 426
     ypos -556
    }
    Switch {
     inputs 2
     which {{parent.decimal<0}}
     name Switch1
     xpos 426
     ypos -494
    }
    Multiply {
     value {{parent.TimeBlur8.divisions}}
     name Multiply6
     xpos 426
     ypos -436
    }
    Merge2 {
     inputs 2
     operation from
     name Merge6
     xpos 426
     ypos -369
    }
set N5a187330 [stack 0]
    Output {
     name Output1
     xpos 426
     ypos -221
    }
push $N5a187330
push $N5a187330
    Viewer {
     inputs 2
     frame_range 1-100
     viewerProcess "sRGB (default)"
     name Viewer1
     xpos 675
     ypos -246
    }
   end_group
   NoTimeBlur {
    name NoTimeBlur7
    xpos -430
    ypos -617
   }
   Multiply {
    value {{math_matrix.result_x_flash(parent.CTimeOffset7.ref)}}
    name Angle_reveal_front
    label FRONT
    xpos -430
    ypos -375
   }
   Transform {
    scale {{0.05+(0.05*(((parent.DecimalTimeOffset1.decimal-0.5)*2)*ScaleVariationFlash))}}
    center {{root.width/2 x1015 2304} {root.height/2}}
    shutteroffset centred
    name random_size_front
    xpos -430
    ypos -134
   }
   Card3D {
    inputs 3
    rot_order ZYX
    translate {0 0 0}
    rotate {0 90 0}
    shutteroffset centred
    name cCard3D6
    tile_color 0x7b1d1dff
    xpos -430
    ypos 150
    addUserKnob {20 User l parent}
    addUserKnob {22 python_button l "set parent" t "select parent node, and press this button to set the selected node as parent" +INVISIBLE T "n = nuke.selectedNode()\['name'].getValue()\nnuke.thisNode()\['string'].setValue(n)" +STARTLINE}
    addUserKnob {1 string l parent +INVISIBLE}
    string null
    addUserKnob {3 ref l "ref frame"}
    ref 1015
   }
   Transform {
    translate {{"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].translate.x(ref)\}]"} {"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].translate.y(ref)\}]"}}
    rotate {{"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].rotate-\[value parent_gun].rotate(ref)\}]"}}
    scale {{"\[if \{\[value parent_gun]==\"null\"\} \{return 1\} \{return 1+(\[value parent_gun].scale-\[value parent_gun].scale(ref))\}]"}}
    center {{"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].center.x(ref)\}]"} {"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].center.y(ref)\}]"}}
    name GUNMatchMove2
    label "\n"
    xpos -430
    ypos 248
    addUserKnob {20 User l parent}
    addUserKnob {3 ref}
    ref {{parent.CTimeOffset7.ref}}
   }
   Transform {
    translate {{"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].translate.x-\[value parent_env].translate.x(ref)\}]"} {"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].translate.y-\[value parent_env].translate.y(ref)\}]"}}
    rotate {{"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].rotate-\[value parent_env].rotate(ref)\}]"}}
    scale {{"\[if \{\[value parent_gun]==\"null\"\} \{return 1\} \{return 1+(\[value parent_env].scale-\[value parent_env].scale(ref))\}]"}}
    center {{"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].center.x(ref)\}]"} {"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].center.y(ref)\}]"}}
    motionblur {{(mode==2)*0.2}}
    shutter {{FlashMB*(0.175*0.3)}}
    shutteroffset centred
    name ENVMatchMove2
    xpos -430
    ypos 320
    addUserKnob {20 User l parent}
    addUserKnob {3 ref}
    ref {{parent.CTimeOffset7.ref}}
   }
   Transform {
    translate {{"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return -((root.width/2)-(\[value parent_gun].center.x(1)+\[value parent_gun].translate.x(1)))\}]"} {"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return -((root.height/2)-(\[value parent_gun].center.y(1)+\[value parent_gun].translate.y(1)))\}]"}}
    shutteroffset centred
    name Transform_GUNMatchMove2
    label "alignment correction"
    xpos -430
    ypos 407
    addUserKnob {20 User l parent}
    addUserKnob {22 python_button l "set parent" t "select parent node, and press this button to set the selected node as parent" T "n = nuke.selectedNode()\['name'].getValue()\nnuke.thisNode()\['string'].setValue(n)" +STARTLINE}
    addUserKnob {1 string l parent}
    string Transform_MatchMove10
    addUserKnob {3 ref +INVISIBLE}
    ref {{parent.cCard3D_8.ref}}
   }
   Remove {
    operation keep
    channels rgb
    name Remove11
    xpos -430
    ypos 487
   }
push 0
   Switch {
    inputs 2
    which {{ActivateFrontFlash(CTimeOffset7.ref)}}
    name Switch7
    label "keyframeable disable "
    xpos -430
    ypos 586
   }
push 0
   Switch {
    inputs 2
    which {{parent.Angle_reveal_front.value!=0}}
    name Switch5
    label "disable based on angle"
    xpos -430
    ypos 670
   }
   Dot {
    name Dot2
    xpos -396
    ypos 749
   }
push $N5db85960
   Multiply {
    value {{math_matrix.result_z_flash(parent.CTimeOffset7.ref)}}
    name Angle_reveal_side
    label SIDE
    xpos -135
    ypos -374
   }
   Transform {
    scale {{0.05+(0.05*(((parent.DecimalTimeOffset1.decimal-0.5)*2)*ScaleVariationFlash))}}
    center {{root.width/2 x1015 2304} {root.height/2}}
    shutteroffset centred
    name random_size_side
    xpos -135
    ypos -137
   }
   Card3D {
    translate {{"\[if \{\[exists  parent.parent.parent.input0]\} \{return \[value \[topnode parent.parent.parent.input0].name].translate.x(ref)\} \{return 0\}]"} {"\[if \{\[exists  parent.parent.parent.input0]\} \{return \[value \[topnode parent.parent.parent.input0].name].translate.y(ref)\} \{return 0\}]"} {"\[if \{\[exists  parent.parent.parent.input0]\} \{return \[value \[topnode parent.parent.parent.input0].name].translate.z(ref)\} \{return -1\}]"}}
    rotate {{"\[if \{\[exists  parent.parent.parent.input0]\} \{return \[value \[topnode parent.parent.parent.input0].name].rotate.x(ref)\} \{return 0\}]"} {"\[if \{\[exists  parent.parent.parent.input0]\} \{return \[value \[topnode parent.parent.parent.input0].name].rotate.y(ref)\} \{return 0\}]"} {"\[if \{\[exists  parent.parent.parent.input0]\} \{return \[value \[topnode parent.parent.parent.input0].name].rotate.z(ref)\} \{return 0\}]"}}
    scaling {{"\[if \{\[exists  parent.parent.parent.input0]\} \{return \[value \[topnode parent.parent.parent.input0].name].scaling.x(ref)\} \{return 1\}]"} {"\[if \{\[exists  parent.parent.parent.input0]\} \{return \[value \[topnode parent.parent.parent.input0].name].scaling.y(ref)\} \{return 1\}]"} {"\[if \{\[exists  parent.parent.parent.input0]\} \{return \[value \[topnode parent.parent.parent.input0].name].scaling.z(ref)\} \{return 1\}]"}}
    uniform_scale {{"\[if \{\[exists  parent.parent.parent.input0]\} \{return (\[value \[topnode parent.parent.parent.input0].name].uniform_scale(ref)*25)\} \{return 25\}]"}}
    shutteroffset centred
    name cCard3D_1
    tile_color 0x7b1d1dff
    label "ref frame: \[value ref]"
    xpos -135
    ypos 147
    addUserKnob {20 User l parent}
    addUserKnob {22 python_button l "set parent" t "select parent node, and press this button to set the selected node as parent" +INVISIBLE T "n = nuke.selectedNode()\['name'].getValue()\nnuke.thisNode()\['string'].setValue(n)" +STARTLINE}
    addUserKnob {1 string l parent +INVISIBLE}
    string null
    addUserKnob {3 id l "id number"}
    id {{parent.CTimeOffset7.shotnmbr}}
    addUserKnob {3 ref l "ref frame"}
    ref {{parent.CTimeOffset7.ref}}
   }
   Transform {
    translate {{"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].translate.x(ref)\}]"} {"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].translate.y(ref)\}]"}}
    rotate {{"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].rotate-\[value parent_gun].rotate(ref)\}]"}}
    scale {{"\[if \{\[value parent_gun]==\"null\"\} \{return 1\} \{return 1+(\[value parent_gun].scale-\[value parent_gun].scale(ref))\}]"}}
    center {{"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].center.x(ref)\}]"} {"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].center.y(ref)\}]"}}
    name GUNMatchMove1
    label "\n"
    xpos -135
    ypos 241
    addUserKnob {20 User l parent}
    addUserKnob {3 ref}
    ref {{parent.CTimeOffset7.ref}}
   }
   Transform {
    translate {{"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].translate.x-\[value parent_env].translate.x(ref)\}]"} {"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].translate.y-\[value parent_env].translate.y(ref)\}]"}}
    rotate {{"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].rotate-\[value parent_env].rotate(ref)\}]"}}
    scale {{"\[if \{\[value parent_gun]==\"null\"\} \{return 1\} \{return 1+(\[value parent_env].scale-\[value parent_env].scale(ref))\}]"}}
    center {{"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].center.x(ref)\}]"} {"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].center.y(ref)\}]"}}
    motionblur {{(mode==2)*0.2}}
    shutter {{FlashMB*(0.175*0.3)}}
    shutteroffset centred
    name ENVMatchMove1
    xpos -135
    ypos 317
    addUserKnob {20 User l parent}
    addUserKnob {3 ref}
    ref {{parent.CTimeOffset7.ref}}
   }
   Transform {
    translate {{"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return -((root.width/2)-(\[value parent_gun].center.x(1)+\[value parent_gun].translate.x(1)))\}]"} {"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return -((root.height/2)-(\[value parent_gun].center.y(1)+\[value parent_gun].translate.y(1)))\}]"}}
    shutteroffset centred
    name Transform_GUNMatchMove3
    label "alignment correction"
    xpos -135
    ypos 405
    addUserKnob {20 User l parent}
    addUserKnob {22 python_button l "set parent" t "select parent node, and press this button to set the selected node as parent" T "n = nuke.selectedNode()\['name'].getValue()\nnuke.thisNode()\['string'].setValue(n)" +STARTLINE}
    addUserKnob {1 string l parent}
    string Transform_MatchMove10
    addUserKnob {3 ref +INVISIBLE}
    ref {{parent.cCard3D_8.ref}}
   }
   Remove {
    operation keep
    channels rgb
    name Remove12
    xpos -135
    ypos 489
   }
push 0
   Switch {
    inputs 2
    which {{ActivateSideFlash(CTimeOffset7.ref)}}
    name Switch3
    label "keyframeable disable "
    xpos -135
    ypos 587
   }
push 0
   Switch {
    inputs 2
    which {{parent.Angle_reveal_side.value!=0}}
    name Switch6
    label "disable based on angle"
    xpos -135
    ypos 671
   }
   Merge2 {
    inputs 3+1
    operation max
    name Merge1
    xpos -135
    ypos 745
   }
   Merge2 {
    inputs 2
    operation plus
    bbox intersection
    name Merge6
    xpos -135
    ypos 1196
   }
push 0
   Switch {
    inputs 2
    which {{"shot_\[value count]==0?0:(EnableExtraFrames==1?floor(((frame>=shot_\[value count])+(frame<=(shot_\[value count]+(4*((mode==1)+(mode==2))))))/2):frame==shot_\[value count])"}}
    name cSwitch_3
    selected true
    xpos -135
    ypos 1354
    addUserKnob {20 User}
    addUserKnob {3 count l "shot number"}
    count {{parent.CTimeOffset7.shotnmbr}}
   }
   Output {
    name Output1
    xpos -135
    ypos 1861
   }
  end_group
push 0
push $N57df6650
push $N7c3e70c0
  Group {
   inputs 2
   name gunshot20
   label "shot: \[value shotcount]\non frame: \[value shot_\[value shotcount]]\n"
   xpos 11659
   ypos -814
   addUserKnob {20 User}
   addUserKnob {3 shotcount l shot}
   shotcount 20
   addUserKnob {3 shotstart l frame +INVISIBLE}
   shotstart {{"shotcount==0 ? 0 : shot\[value shotcount]-1"}}
  }
   BackdropNode {
    inputs 0
    name BackdropNode3
    knobChanged "try:\n    listenedKnobs = \['text', 'position', 'name']\n    node = nuke.thisNode()\n    name = node.knob('name').value()\n    text = node.knob('text').value()\n    position = node.knob('position').value()\n    position = \"<\" + position + \">\"\n    label = node.knob('label').value()\n    \n    if nuke.thisKnob().name() in listenedKnobs:\n        if text == \"\":\n            if node.knob('position').value() == \"left\":\n                node.knob('label').setValue()\n            else:\n                node.knob('label').setValue(position + name)\n        else:\n            if node.knob('position').value() == \"left\":\n                node.knob('label').setValue(text)\n            else:\n                node.knob('label').setValue(position + text)\n                \n    elif nuke.thisKnob().name() == 'font_size':\n        fontSize = node.knob('font_size').value()\n        node.knob('note_font_size').setValue(fontSize)\nexcept:\n    pass"
    tile_color 0x232323ff
    label "<Left><h2> Gunshot"
    note_font_size 31.5
    xpos -698
    ypos -924
    bdwidth 1057
    bdheight 2343
    addUserKnob {20 F_VFX l BackdropNode}
    addUserKnob {43 text l Text}
    text "<h2> Gunshot"
    addUserKnob {7 font_size l "Font Size" R 10 100}
    font_size 31.5
    addUserKnob {4 position l "" -STARTLINE M {Left Center}}
    addUserKnob {26 S01 l " " T " "}
    addUserKnob {22 grow l " <img src=\"F_scalep.png\">" -STARTLINE T "n=nuke.thisNode()\n\ndef grow(node=None,step=50):\n    try:\n        if not node:\n            n=nuke.selectedNode()\n        else:\n            n=node\n            n\['xpos'].setValue(n\['xpos'].getValue()-step)\n            n\['ypos'].setValue(n\['ypos'].getValue()-step)\n            n\['bdwidth'].setValue(n\['bdwidth'].getValue()+step*2)\n            n\['bdheight'].setValue(n\['bdheight'].getValue()+step*2)\n    except:\n        pass\ngrow(n,50)"}
    addUserKnob {22 shrink l " <img src=\"F_scalem.png\">" -STARTLINE T "n=nuke.thisNode()\n\ndef shrink(node=None,step=50):\n    try:\n        if not node:\n            n=nuke.selectedNode()\n        else:\n            n=node\n            n\['xpos'].setValue(n\['xpos'].getValue()+step)\n            n\['ypos'].setValue(n\['ypos'].getValue()+step)\n            n\['bdwidth'].setValue(n\['bdwidth'].getValue()-step*2)\n            n\['bdheight'].setValue(n\['bdheight'].getValue()-step*2)\n    except:\n        pass\nshrink(n,50)"}
    addUserKnob {22 colorandom l " <img src=\"ColorBars.png\">" -STARTLINE T "import colorsys, random\nn=nuke.thisNode()\nR,G,B= colorsys.hsv_to_rgb(random.random(),.1+random.random()*.15,.15+random.random()*.15)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ) )"}
    addUserKnob {22 darkgrey l "<font color=\"#232323\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.0, 0.0, 0.14]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 lightgrey l "<font color=\"#383838\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.0, 0.0, 0.22]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 red l "<font color=\"#8c3838\" size=6>■</font>" T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.0, 0.6, 0.55]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n" +STARTLINE}
    addUserKnob {22 orange l "<font color=\"#b28e59\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.1, 0.5, 0.7]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 yellow l "<font color=\"#ccc766\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.16, 0.5, 0.8]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 green l "<font color=\"#5d995b\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.33, 0.4, 0.6]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 cyan l "<font color=\"#72998f\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.46, 0.25, 0.6]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 blue l "<font color=\"#59687f\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.6, 0.3, 0.5]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 darkblue l "<font color=\"#63628c\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.67, 0.3, 0.55]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 magenta l "<font color=\"#927a99\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.8, 0.2, 0.6]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 pink l "<font color=\"#997a89\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.92, 0.2, 0.6]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {26 S02 l " " T " "}
    addUserKnob {26 Ftools l "" +STARTLINE T "<font color=\"#1C1C1C\"> v1.2 - Franklin VFX - 2018"}
   }
   BackdropNode {
    inputs 0
    name BackdropNode1
    knobChanged "try:\n    listenedKnobs = \['text', 'position', 'name']\n    node = nuke.thisNode()\n    name = node.knob('name').value()\n    text = node.knob('text').value()\n    position = node.knob('position').value()\n    position = \"<\" + position + \">\"\n    label = node.knob('label').value()\n    \n    if nuke.thisKnob().name() in listenedKnobs:\n        if text == \"\":\n            if node.knob('position').value() == \"left\":\n                node.knob('label').setValue()\n            else:\n                node.knob('label').setValue(position + name)\n        else:\n            if node.knob('position').value() == \"left\":\n                node.knob('label').setValue(text)\n            else:\n                node.knob('label').setValue(position + text)\n                \n    elif nuke.thisKnob().name() == 'font_size':\n        fontSize = node.knob('font_size').value()\n        node.knob('note_font_size').setValue(fontSize)\nexcept:\n    pass"
    tile_color 0x927a99ff
    note_font_size 50
    xpos -460
    ypos -257
    bdwidth 435
    bdheight 786
    z_order 1
    addUserKnob {20 F_VFX l BackdropNode}
    addUserKnob {43 text l Text}
    addUserKnob {7 font_size l "Font Size" R 10 100}
    font_size 50
    addUserKnob {4 position l "" -STARTLINE M {Left Center}}
    addUserKnob {26 S01 l " " T " "}
    addUserKnob {22 grow l " <img src=\"F_scalep.png\">" -STARTLINE T "n=nuke.thisNode()\n\ndef grow(node=None,step=50):\n    try:\n        if not node:\n            n=nuke.selectedNode()\n        else:\n            n=node\n            n\['xpos'].setValue(n\['xpos'].getValue()-step)\n            n\['ypos'].setValue(n\['ypos'].getValue()-step)\n            n\['bdwidth'].setValue(n\['bdwidth'].getValue()+step*2)\n            n\['bdheight'].setValue(n\['bdheight'].getValue()+step*2)\n    except:\n        pass\ngrow(n,50)"}
    addUserKnob {22 shrink l " <img src=\"F_scalem.png\">" -STARTLINE T "n=nuke.thisNode()\n\ndef shrink(node=None,step=50):\n    try:\n        if not node:\n            n=nuke.selectedNode()\n        else:\n            n=node\n            n\['xpos'].setValue(n\['xpos'].getValue()+step)\n            n\['ypos'].setValue(n\['ypos'].getValue()+step)\n            n\['bdwidth'].setValue(n\['bdwidth'].getValue()-step*2)\n            n\['bdheight'].setValue(n\['bdheight'].getValue()-step*2)\n    except:\n        pass\nshrink(n,50)"}
    addUserKnob {22 colorandom l " <img src=\"ColorBars.png\">" -STARTLINE T "import colorsys, random\nn=nuke.thisNode()\nR,G,B= colorsys.hsv_to_rgb(random.random(),.1+random.random()*.15,.15+random.random()*.15)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ) )"}
    addUserKnob {22 darkgrey l "<font color=\"#232323\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.0, 0.0, 0.14]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 lightgrey l "<font color=\"#383838\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.0, 0.0, 0.22]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 red l "<font color=\"#8c3838\" size=6>■</font>" T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.0, 0.6, 0.55]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n" +STARTLINE}
    addUserKnob {22 orange l "<font color=\"#b28e59\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.1, 0.5, 0.7]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 yellow l "<font color=\"#ccc766\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.16, 0.5, 0.8]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 green l "<font color=\"#5d995b\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.33, 0.4, 0.6]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 cyan l "<font color=\"#72998f\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.46, 0.25, 0.6]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 blue l "<font color=\"#59687f\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.6, 0.3, 0.5]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 darkblue l "<font color=\"#63628c\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.67, 0.3, 0.55]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 magenta l "<font color=\"#927a99\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.8, 0.2, 0.6]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 pink l "<font color=\"#997a89\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.92, 0.2, 0.6]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {26 S02 l " " T " "}
    addUserKnob {26 Ftools l "" +STARTLINE T "<font color=\"#1C1C1C\"> v1.2 - Franklin VFX - 2018"}
   }
   Constant {
    inputs 0
    channels rgb
    name Constant4
    xpos -648
    ypos 987
   }
   AdjBBox {
    numpixels {{size_bbox}}
    name AdjBBox4
    xpos -648
    ypos 1120
   }
   Dot {
    name Dot19
    xpos -614
    ypos 1200
   }
   Axis3 {
    inputs 0
    useMatrix true
    matrix {
        {{parent.cCard3D_1.matrix} {parent.cCard3D_1.matrix} {parent.cCard3D_1.matrix} {parent.cCard3D_1.matrix}}
        {{parent.cCard3D_1.matrix} {parent.cCard3D_1.matrix} {parent.cCard3D_1.matrix} {parent.cCard3D_1.matrix}}
        {{parent.cCard3D_1.matrix} {parent.cCard3D_1.matrix} {parent.cCard3D_1.matrix} {parent.cCard3D_1.matrix}}
        {{parent.cCard3D_1.matrix} {parent.cCard3D_1.matrix} {parent.cCard3D_1.matrix} {parent.cCard3D_1.matrix}}
      }
    name Axis3
    xpos -207
    ypos 48
   }
set N5a5a42e0 [stack 0]
push 0
   Input {
    inputs 0
    name Side
    xpos -135
    ypos -1101
   }
   TimeOffset {
    time_offset {{"shotnmbr==0 ? 0 : shot_\[value shotnmbr]-1"}}
    time ""
    name CTimeOffset7
    label "shot: \[value shotnmbr]\non frame \[value time_offset]"
    xpos -135
    ypos -853
    addUserKnob {20 User}
    addUserKnob {3 shotnmbr l "shot "}
    shotnmbr {{shotcount}}
    addUserKnob {3 ref}
    ref {{time_offset+1}}
   }
   Group {
    name DecimalTimeOffset1
    tile_color 0xafa35dff
    label "random asset\n(based on brighness)"
    note_font "Bitstream Vera Sans Bold"
    xpos -135
    ypos -690
    addUserKnob {20 User}
    addUserKnob {7 decimal l "time offset (decimal)"}
    decimal {{"floor\n(\n  (\n  (  ((((random((shotcount*823)+((seed+seed_offset_\[value shotcount])*212))-0.5)*  ((1-( abs(brighness_flare-0.5) )*2)+1)  )+0.5)*0.5)  * (1-brighness_flare)  )\n\n  +\n\n  (  (((((random((shotcount*823)+((seed+seed_offset_\[value shotcount])*212))-0.5)*  ((1-( abs(brighness_flare-0.5) )*2)+1)  )+0.5)*0.5)+0.5)  * (brighness_flare)  )\n  )\n  *1000\n)\n\n/1000"}}
    addUserKnob {26 ""}
    addUserKnob {26 _1 l "" +STARTLINE T "Chris Fryer | 2020\nupdated by Yorben Otto | 2024"}
   }
    Input {
     inputs 0
     name Input1
     xpos 426
     ypos -793
    }
    TimeOffset {
     time_offset {{(-floor(parent.decimal))*(DecimalTimeOffset1.decimal<0)}}
     time ""
     name TimeOffset1
     xpos 426
     ypos -674
    }
    Dot {
     name Dot6
     xpos 460
     ypos -635
    }
set N5a5e3cb0 [stack 0]
    Dot {
     name Dot5
     xpos 350
     ypos -635
    }
    Dot {
     name Dot7
     xpos 350
     ypos -365
    }
push $N5a5e3cb0
    Dot {
     name Dot1
     xpos 572
     ypos -635
    }
    TimeBlur {
     divisions 2
     shutter {{(parent.decimal-(floor(parent.decimal)))*2}}
     shutteroffset start
     shuttercustomoffset 0
     name TimeBlur1
     xpos 538
     ypos -558
    }
    Dot {
     name Dot2
     xpos 572
     ypos -490
    }
push $N5a5e3cb0
    TimeBlur {
     divisions 2
     shutter {{parent.decimal*2}}
     shutteroffset start
     shuttercustomoffset 0
     name TimeBlur8
     xpos 426
     ypos -556
    }
    Switch {
     inputs 2
     which {{parent.decimal<0}}
     name Switch1
     xpos 426
     ypos -494
    }
    Multiply {
     value {{parent.TimeBlur8.divisions}}
     name Multiply6
     xpos 426
     ypos -436
    }
    Merge2 {
     inputs 2
     operation from
     name Merge6
     xpos 426
     ypos -369
    }
set N5a635b00 [stack 0]
    Output {
     name Output1
     xpos 426
     ypos -221
    }
push $N5a635b00
push $N5a635b00
    Viewer {
     inputs 2
     frame_range 1-100
     viewerProcess "sRGB (default)"
     name Viewer1
     xpos 675
     ypos -246
    }
   end_group
   NoTimeBlur {
    name NoTimeBlur6
    xpos -135
    ypos -608
   }
   Dot {
    name Dot21
    xpos -101
    ypos -449
   }
set N5a6d4470 [stack 0]
   Dot {
    name Dot22
    xpos -245
    ypos -449
   }
   Multiply {
    value {{math_matrix.result_y_flash(parent.CTimeOffset7.ref)}}
    name Angle_reveal_top
    label TOP
    xpos -279
    ypos -371
   }
   Transform {
    scale {{0.05+(0.05*(((parent.DecimalTimeOffset1.decimal-0.5)*2)*ScaleVariationFlash))}}
    center {{root.width/2 x1015 2304} {root.height/2}}
    shutteroffset centred
    name random_size_top
    xpos -279
    ypos -136
   }
   Card3D {
    inputs 3
    rot_order ZYX
    translate {0 0 0}
    rotate {90 0 0}
    shutteroffset centred
    name cCard3D5
    tile_color 0x7b1d1dff
    xpos -279
    ypos 153
    addUserKnob {20 User l parent}
    addUserKnob {22 python_button l "set parent" t "select parent node, and press this button to set the selected node as parent" +INVISIBLE T "n = nuke.selectedNode()\['name'].getValue()\nnuke.thisNode()\['string'].setValue(n)" +STARTLINE}
    addUserKnob {1 string l parent +INVISIBLE}
    string null
    addUserKnob {3 ref l "ref frame"}
    ref 1015
   }
   Transform {
    translate {{"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].translate.x(ref)\}]"} {"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].translate.y(ref)\}]"}}
    rotate {{"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].rotate-\[value parent_gun].rotate(ref)\}]"}}
    scale {{"\[if \{\[value parent_gun]==\"null\"\} \{return 1\} \{return 1+(\[value parent_gun].scale-\[value parent_gun].scale(ref))\}]"}}
    center {{"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].center.x(ref)\}]"} {"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].center.y(ref)\}]"}}
    name GUNMatchMove
    label "\n"
    xpos -279
    ypos 247
    addUserKnob {20 User l parent}
    addUserKnob {3 ref}
    ref {{parent.CTimeOffset7.ref}}
   }
   Transform {
    translate {{"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].translate.x-\[value parent_env].translate.x(ref)\}]"} {"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].translate.y-\[value parent_env].translate.y(ref)\}]"}}
    rotate {{"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].rotate-\[value parent_env].rotate(ref)\}]"}}
    scale {{"\[if \{\[value parent_gun]==\"null\"\} \{return 1\} \{return 1+(\[value parent_env].scale-\[value parent_env].scale(ref))\}]"}}
    center {{"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].center.x(ref)\}]"} {"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].center.y(ref)\}]"}}
    motionblur {{(mode==2)*0.2}}
    shutter {{FlashMB*(0.175*0.3)}}
    shutteroffset centred
    name ENVMatchMove
    xpos -279
    ypos 321
    addUserKnob {20 User l parent}
    addUserKnob {3 ref}
    ref {{parent.CTimeOffset7.ref}}
   }
   Transform {
    translate {{"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return -((root.width/2)-(\[value parent_gun].center.x(1)+\[value parent_gun].translate.x(1)))\}]"} {"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return -((root.height/2)-(\[value parent_gun].center.y(1)+\[value parent_gun].translate.y(1)))\}]"}}
    shutteroffset centred
    name Transform_GUNMatchMove1
    label "alignment correction"
    xpos -279
    ypos 408
    addUserKnob {20 User l parent}
    addUserKnob {22 python_button l "set parent" t "select parent node, and press this button to set the selected node as parent" T "n = nuke.selectedNode()\['name'].getValue()\nnuke.thisNode()\['string'].setValue(n)" +STARTLINE}
    addUserKnob {1 string l parent}
    string Transform_MatchMove10
    addUserKnob {3 ref +INVISIBLE}
    ref {{parent.cCard3D_8.ref}}
   }
   Remove {
    operation keep
    channels rgb
    name Remove10
    xpos -279
    ypos 489
   }
push 0
   Switch {
    inputs 2
    which {{ActivateSideFlash(CTimeOffset7.ref)}}
    name Switch1
    label "keyframeable disable "
    xpos -279
    ypos 587
   }
push 0
   Switch {
    inputs 2
    which {{parent.Angle_reveal_top.value!=0}}
    name Switch4
    label "disable based on angle"
    xpos -279
    ypos 670
   }
   Dot {
    name Dot1
    xpos -245
    ypos 717
   }
push 0
push $N5a5a42e0
push 0
   Input {
    inputs 0
    name Front
    xpos -430
    ypos -1102
    number 1
   }
   TimeOffset {
    time_offset {{"shotnmbr==0 ? 0 : shot_\[value shotnmbr]-1"}}
    time ""
    name CTimeOffset8
    xpos -430
    ypos -840
    addUserKnob {20 User}
    addUserKnob {3 shotnmbr l "shot "}
    shotnmbr {{parent.CTimeOffset7.shotnmbr}}
   }
   Group {
    name DecimalTimeOffset
    tile_color 0xafa35dff
    label "random asset\n(based on brighness)"
    note_font "Bitstream Vera Sans Bold"
    xpos -430
    ypos -693
    addUserKnob {20 User}
    addUserKnob {7 decimal l "time offset (decimal)"}
    decimal {{"floor\n(\n  (\n  (  ((((random((shotcount*823)+((seed+seed_offset_\[value shotcount])*212))-0.5)*  ((1-( abs(brighness_flare-0.5) )*2)+1)  )+0.5)*0.5)  * (1-brighness_flare)  )\n\n  +\n\n  (  (((((random((shotcount*823)+((seed+seed_offset_\[value shotcount])*212))-0.5)*  ((1-( abs(brighness_flare-0.5) )*2)+1)  )+0.5)*0.5)+0.5)  * (brighness_flare)  )\n  )\n  *1000\n)\n\n/1000"}}
    addUserKnob {26 ""}
    addUserKnob {26 _1 l "" +STARTLINE T "Chris Fryer | 2020\nupdated by Yorben Otto | 2024"}
   }
    Input {
     inputs 0
     name Input1
     xpos 426
     ypos -793
    }
    TimeOffset {
     time_offset {{(-floor(parent.decimal))*(DecimalTimeOffset.decimal<0)}}
     time ""
     name TimeOffset1
     xpos 426
     ypos -674
    }
    Dot {
     name Dot6
     xpos 460
     ypos -635
    }
set N5a793ed0 [stack 0]
    Dot {
     name Dot5
     xpos 350
     ypos -635
    }
    Dot {
     name Dot7
     xpos 350
     ypos -365
    }
push $N5a793ed0
    Dot {
     name Dot1
     xpos 572
     ypos -635
    }
    TimeBlur {
     divisions 2
     shutter {{(parent.decimal-(floor(parent.decimal)))*2}}
     shutteroffset start
     shuttercustomoffset 0
     name TimeBlur1
     xpos 538
     ypos -558
    }
    Dot {
     name Dot2
     xpos 572
     ypos -490
    }
push $N5a793ed0
    TimeBlur {
     divisions 2
     shutter {{parent.decimal*2}}
     shutteroffset start
     shuttercustomoffset 0
     name TimeBlur8
     xpos 426
     ypos -556
    }
    Switch {
     inputs 2
     which {{parent.decimal<0}}
     name Switch1
     xpos 426
     ypos -494
    }
    Multiply {
     value {{parent.TimeBlur8.divisions}}
     name Multiply6
     xpos 426
     ypos -436
    }
    Merge2 {
     inputs 2
     operation from
     name Merge6
     xpos 426
     ypos -369
    }
set N5a7d5e10 [stack 0]
    Output {
     name Output1
     xpos 426
     ypos -221
    }
push $N5a7d5e10
push $N5a7d5e10
    Viewer {
     inputs 2
     frame_range 1-100
     viewerProcess "sRGB (default)"
     name Viewer1
     xpos 675
     ypos -246
    }
   end_group
   NoTimeBlur {
    name NoTimeBlur7
    xpos -430
    ypos -617
   }
   Multiply {
    value {{math_matrix.result_x_flash(parent.CTimeOffset7.ref)}}
    name Angle_reveal_front
    label FRONT
    xpos -430
    ypos -375
   }
   Transform {
    scale {{0.05+(0.05*(((parent.DecimalTimeOffset1.decimal-0.5)*2)*ScaleVariationFlash))}}
    center {{root.width/2 x1015 2304} {root.height/2}}
    shutteroffset centred
    name random_size_front
    xpos -430
    ypos -134
   }
   Card3D {
    inputs 3
    rot_order ZYX
    translate {0 0 0}
    rotate {0 90 0}
    shutteroffset centred
    name cCard3D6
    tile_color 0x7b1d1dff
    xpos -430
    ypos 150
    addUserKnob {20 User l parent}
    addUserKnob {22 python_button l "set parent" t "select parent node, and press this button to set the selected node as parent" +INVISIBLE T "n = nuke.selectedNode()\['name'].getValue()\nnuke.thisNode()\['string'].setValue(n)" +STARTLINE}
    addUserKnob {1 string l parent +INVISIBLE}
    string null
    addUserKnob {3 ref l "ref frame"}
    ref 1015
   }
   Transform {
    translate {{"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].translate.x(ref)\}]"} {"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].translate.y(ref)\}]"}}
    rotate {{"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].rotate-\[value parent_gun].rotate(ref)\}]"}}
    scale {{"\[if \{\[value parent_gun]==\"null\"\} \{return 1\} \{return 1+(\[value parent_gun].scale-\[value parent_gun].scale(ref))\}]"}}
    center {{"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].center.x(ref)\}]"} {"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].center.y(ref)\}]"}}
    name GUNMatchMove2
    label "\n"
    xpos -430
    ypos 248
    addUserKnob {20 User l parent}
    addUserKnob {3 ref}
    ref {{parent.CTimeOffset7.ref}}
   }
   Transform {
    translate {{"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].translate.x-\[value parent_env].translate.x(ref)\}]"} {"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].translate.y-\[value parent_env].translate.y(ref)\}]"}}
    rotate {{"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].rotate-\[value parent_env].rotate(ref)\}]"}}
    scale {{"\[if \{\[value parent_gun]==\"null\"\} \{return 1\} \{return 1+(\[value parent_env].scale-\[value parent_env].scale(ref))\}]"}}
    center {{"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].center.x(ref)\}]"} {"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].center.y(ref)\}]"}}
    motionblur {{(mode==2)*0.2}}
    shutter {{FlashMB*(0.175*0.3)}}
    shutteroffset centred
    name ENVMatchMove2
    xpos -430
    ypos 320
    addUserKnob {20 User l parent}
    addUserKnob {3 ref}
    ref {{parent.CTimeOffset7.ref}}
   }
   Transform {
    translate {{"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return -((root.width/2)-(\[value parent_gun].center.x(1)+\[value parent_gun].translate.x(1)))\}]"} {"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return -((root.height/2)-(\[value parent_gun].center.y(1)+\[value parent_gun].translate.y(1)))\}]"}}
    shutteroffset centred
    name Transform_GUNMatchMove2
    label "alignment correction"
    xpos -430
    ypos 407
    addUserKnob {20 User l parent}
    addUserKnob {22 python_button l "set parent" t "select parent node, and press this button to set the selected node as parent" T "n = nuke.selectedNode()\['name'].getValue()\nnuke.thisNode()\['string'].setValue(n)" +STARTLINE}
    addUserKnob {1 string l parent}
    string Transform_MatchMove10
    addUserKnob {3 ref +INVISIBLE}
    ref {{parent.cCard3D_8.ref}}
   }
   Remove {
    operation keep
    channels rgb
    name Remove11
    xpos -430
    ypos 487
   }
push 0
   Switch {
    inputs 2
    which {{ActivateFrontFlash(CTimeOffset7.ref)}}
    name Switch7
    label "keyframeable disable "
    xpos -430
    ypos 586
   }
push 0
   Switch {
    inputs 2
    which {{parent.Angle_reveal_front.value!=0}}
    name Switch5
    label "disable based on angle"
    xpos -430
    ypos 670
   }
   Dot {
    name Dot2
    xpos -396
    ypos 749
   }
push $N5a6d4470
   Multiply {
    value {{math_matrix.result_z_flash(parent.CTimeOffset7.ref)}}
    name Angle_reveal_side
    label SIDE
    xpos -135
    ypos -374
   }
   Transform {
    scale {{0.05+(0.05*(((parent.DecimalTimeOffset1.decimal-0.5)*2)*ScaleVariationFlash))}}
    center {{root.width/2 x1015 2304} {root.height/2}}
    shutteroffset centred
    name random_size_side
    xpos -135
    ypos -137
   }
   Card3D {
    translate {{"\[if \{\[exists  parent.parent.parent.input0]\} \{return \[value \[topnode parent.parent.parent.input0].name].translate.x(ref)\} \{return 0\}]"} {"\[if \{\[exists  parent.parent.parent.input0]\} \{return \[value \[topnode parent.parent.parent.input0].name].translate.y(ref)\} \{return 0\}]"} {"\[if \{\[exists  parent.parent.parent.input0]\} \{return \[value \[topnode parent.parent.parent.input0].name].translate.z(ref)\} \{return -1\}]"}}
    rotate {{"\[if \{\[exists  parent.parent.parent.input0]\} \{return \[value \[topnode parent.parent.parent.input0].name].rotate.x(ref)\} \{return 0\}]"} {"\[if \{\[exists  parent.parent.parent.input0]\} \{return \[value \[topnode parent.parent.parent.input0].name].rotate.y(ref)\} \{return 0\}]"} {"\[if \{\[exists  parent.parent.parent.input0]\} \{return \[value \[topnode parent.parent.parent.input0].name].rotate.z(ref)\} \{return 0\}]"}}
    scaling {{"\[if \{\[exists  parent.parent.parent.input0]\} \{return \[value \[topnode parent.parent.parent.input0].name].scaling.x(ref)\} \{return 1\}]"} {"\[if \{\[exists  parent.parent.parent.input0]\} \{return \[value \[topnode parent.parent.parent.input0].name].scaling.y(ref)\} \{return 1\}]"} {"\[if \{\[exists  parent.parent.parent.input0]\} \{return \[value \[topnode parent.parent.parent.input0].name].scaling.z(ref)\} \{return 1\}]"}}
    uniform_scale {{"\[if \{\[exists  parent.parent.parent.input0]\} \{return (\[value \[topnode parent.parent.parent.input0].name].uniform_scale(ref)*25)\} \{return 25\}]"}}
    shutteroffset centred
    name cCard3D_1
    tile_color 0x7b1d1dff
    label "ref frame: \[value ref]"
    xpos -135
    ypos 147
    addUserKnob {20 User l parent}
    addUserKnob {22 python_button l "set parent" t "select parent node, and press this button to set the selected node as parent" +INVISIBLE T "n = nuke.selectedNode()\['name'].getValue()\nnuke.thisNode()\['string'].setValue(n)" +STARTLINE}
    addUserKnob {1 string l parent +INVISIBLE}
    string null
    addUserKnob {3 id l "id number"}
    id {{parent.CTimeOffset7.shotnmbr}}
    addUserKnob {3 ref l "ref frame"}
    ref {{parent.CTimeOffset7.ref}}
   }
   Transform {
    translate {{"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].translate.x(ref)\}]"} {"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].translate.y(ref)\}]"}}
    rotate {{"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].rotate-\[value parent_gun].rotate(ref)\}]"}}
    scale {{"\[if \{\[value parent_gun]==\"null\"\} \{return 1\} \{return 1+(\[value parent_gun].scale-\[value parent_gun].scale(ref))\}]"}}
    center {{"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].center.x(ref)\}]"} {"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].center.y(ref)\}]"}}
    name GUNMatchMove1
    label "\n"
    xpos -135
    ypos 241
    addUserKnob {20 User l parent}
    addUserKnob {3 ref}
    ref {{parent.CTimeOffset7.ref}}
   }
   Transform {
    translate {{"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].translate.x-\[value parent_env].translate.x(ref)\}]"} {"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].translate.y-\[value parent_env].translate.y(ref)\}]"}}
    rotate {{"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].rotate-\[value parent_env].rotate(ref)\}]"}}
    scale {{"\[if \{\[value parent_gun]==\"null\"\} \{return 1\} \{return 1+(\[value parent_env].scale-\[value parent_env].scale(ref))\}]"}}
    center {{"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].center.x(ref)\}]"} {"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].center.y(ref)\}]"}}
    motionblur {{(mode==2)*0.2}}
    shutter {{FlashMB*(0.175*0.3)}}
    shutteroffset centred
    name ENVMatchMove1
    xpos -135
    ypos 317
    addUserKnob {20 User l parent}
    addUserKnob {3 ref}
    ref {{parent.CTimeOffset7.ref}}
   }
   Transform {
    translate {{"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return -((root.width/2)-(\[value parent_gun].center.x(1)+\[value parent_gun].translate.x(1)))\}]"} {"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return -((root.height/2)-(\[value parent_gun].center.y(1)+\[value parent_gun].translate.y(1)))\}]"}}
    shutteroffset centred
    name Transform_GUNMatchMove3
    label "alignment correction"
    xpos -135
    ypos 405
    addUserKnob {20 User l parent}
    addUserKnob {22 python_button l "set parent" t "select parent node, and press this button to set the selected node as parent" T "n = nuke.selectedNode()\['name'].getValue()\nnuke.thisNode()\['string'].setValue(n)" +STARTLINE}
    addUserKnob {1 string l parent}
    string Transform_MatchMove10
    addUserKnob {3 ref +INVISIBLE}
    ref {{parent.cCard3D_8.ref}}
   }
   Remove {
    operation keep
    channels rgb
    name Remove12
    xpos -135
    ypos 489
   }
push 0
   Switch {
    inputs 2
    which {{ActivateSideFlash(CTimeOffset7.ref)}}
    name Switch3
    label "keyframeable disable "
    xpos -135
    ypos 587
   }
push 0
   Switch {
    inputs 2
    which {{parent.Angle_reveal_side.value!=0}}
    name Switch6
    label "disable based on angle"
    xpos -135
    ypos 671
   }
   Merge2 {
    inputs 3+1
    operation max
    name Merge1
    xpos -135
    ypos 745
   }
   Merge2 {
    inputs 2
    operation plus
    bbox intersection
    name Merge6
    xpos -135
    ypos 1196
   }
push 0
   Switch {
    inputs 2
    which {{"shot_\[value count]==0?0:(EnableExtraFrames==1?floor(((frame>=shot_\[value count])+(frame<=(shot_\[value count]+(4*((mode==1)+(mode==2))))))/2):frame==shot_\[value count])"}}
    name cSwitch_3
    selected true
    xpos -135
    ypos 1354
    addUserKnob {20 User}
    addUserKnob {3 count l "shot number"}
    count {{parent.CTimeOffset7.shotnmbr}}
   }
   Output {
    name Output1
    xpos -135
    ypos 1861
   }
  end_group
push $N4b5f9cf0
push $N206270d0
  Group {
   inputs 2
   name gunshot22
   label "shot: \[value shotcount]\non frame: \[value shot_\[value shotcount]]\n"
   xpos 12090
   ypos -814
   addUserKnob {20 User}
   addUserKnob {3 shotcount l shot}
   shotcount 22
   addUserKnob {3 shotstart l frame +INVISIBLE}
   shotstart {{"shotcount==0 ? 0 : shot\[value shotcount]-1"}}
  }
   BackdropNode {
    inputs 0
    name BackdropNode3
    knobChanged "try:\n    listenedKnobs = \['text', 'position', 'name']\n    node = nuke.thisNode()\n    name = node.knob('name').value()\n    text = node.knob('text').value()\n    position = node.knob('position').value()\n    position = \"<\" + position + \">\"\n    label = node.knob('label').value()\n    \n    if nuke.thisKnob().name() in listenedKnobs:\n        if text == \"\":\n            if node.knob('position').value() == \"left\":\n                node.knob('label').setValue()\n            else:\n                node.knob('label').setValue(position + name)\n        else:\n            if node.knob('position').value() == \"left\":\n                node.knob('label').setValue(text)\n            else:\n                node.knob('label').setValue(position + text)\n                \n    elif nuke.thisKnob().name() == 'font_size':\n        fontSize = node.knob('font_size').value()\n        node.knob('note_font_size').setValue(fontSize)\nexcept:\n    pass"
    tile_color 0x232323ff
    label "<Left><h2> Gunshot"
    note_font_size 31.5
    xpos -698
    ypos -924
    bdwidth 1057
    bdheight 2343
    addUserKnob {20 F_VFX l BackdropNode}
    addUserKnob {43 text l Text}
    text "<h2> Gunshot"
    addUserKnob {7 font_size l "Font Size" R 10 100}
    font_size 31.5
    addUserKnob {4 position l "" -STARTLINE M {Left Center}}
    addUserKnob {26 S01 l " " T " "}
    addUserKnob {22 grow l " <img src=\"F_scalep.png\">" -STARTLINE T "n=nuke.thisNode()\n\ndef grow(node=None,step=50):\n    try:\n        if not node:\n            n=nuke.selectedNode()\n        else:\n            n=node\n            n\['xpos'].setValue(n\['xpos'].getValue()-step)\n            n\['ypos'].setValue(n\['ypos'].getValue()-step)\n            n\['bdwidth'].setValue(n\['bdwidth'].getValue()+step*2)\n            n\['bdheight'].setValue(n\['bdheight'].getValue()+step*2)\n    except:\n        pass\ngrow(n,50)"}
    addUserKnob {22 shrink l " <img src=\"F_scalem.png\">" -STARTLINE T "n=nuke.thisNode()\n\ndef shrink(node=None,step=50):\n    try:\n        if not node:\n            n=nuke.selectedNode()\n        else:\n            n=node\n            n\['xpos'].setValue(n\['xpos'].getValue()+step)\n            n\['ypos'].setValue(n\['ypos'].getValue()+step)\n            n\['bdwidth'].setValue(n\['bdwidth'].getValue()-step*2)\n            n\['bdheight'].setValue(n\['bdheight'].getValue()-step*2)\n    except:\n        pass\nshrink(n,50)"}
    addUserKnob {22 colorandom l " <img src=\"ColorBars.png\">" -STARTLINE T "import colorsys, random\nn=nuke.thisNode()\nR,G,B= colorsys.hsv_to_rgb(random.random(),.1+random.random()*.15,.15+random.random()*.15)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ) )"}
    addUserKnob {22 darkgrey l "<font color=\"#232323\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.0, 0.0, 0.14]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 lightgrey l "<font color=\"#383838\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.0, 0.0, 0.22]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 red l "<font color=\"#8c3838\" size=6>■</font>" T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.0, 0.6, 0.55]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n" +STARTLINE}
    addUserKnob {22 orange l "<font color=\"#b28e59\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.1, 0.5, 0.7]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 yellow l "<font color=\"#ccc766\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.16, 0.5, 0.8]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 green l "<font color=\"#5d995b\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.33, 0.4, 0.6]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 cyan l "<font color=\"#72998f\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.46, 0.25, 0.6]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 blue l "<font color=\"#59687f\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.6, 0.3, 0.5]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 darkblue l "<font color=\"#63628c\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.67, 0.3, 0.55]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 magenta l "<font color=\"#927a99\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.8, 0.2, 0.6]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 pink l "<font color=\"#997a89\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.92, 0.2, 0.6]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {26 S02 l " " T " "}
    addUserKnob {26 Ftools l "" +STARTLINE T "<font color=\"#1C1C1C\"> v1.2 - Franklin VFX - 2018"}
   }
   BackdropNode {
    inputs 0
    name BackdropNode1
    knobChanged "try:\n    listenedKnobs = \['text', 'position', 'name']\n    node = nuke.thisNode()\n    name = node.knob('name').value()\n    text = node.knob('text').value()\n    position = node.knob('position').value()\n    position = \"<\" + position + \">\"\n    label = node.knob('label').value()\n    \n    if nuke.thisKnob().name() in listenedKnobs:\n        if text == \"\":\n            if node.knob('position').value() == \"left\":\n                node.knob('label').setValue()\n            else:\n                node.knob('label').setValue(position + name)\n        else:\n            if node.knob('position').value() == \"left\":\n                node.knob('label').setValue(text)\n            else:\n                node.knob('label').setValue(position + text)\n                \n    elif nuke.thisKnob().name() == 'font_size':\n        fontSize = node.knob('font_size').value()\n        node.knob('note_font_size').setValue(fontSize)\nexcept:\n    pass"
    tile_color 0x927a99ff
    note_font_size 50
    xpos -460
    ypos -257
    bdwidth 435
    bdheight 786
    z_order 1
    addUserKnob {20 F_VFX l BackdropNode}
    addUserKnob {43 text l Text}
    addUserKnob {7 font_size l "Font Size" R 10 100}
    font_size 50
    addUserKnob {4 position l "" -STARTLINE M {Left Center}}
    addUserKnob {26 S01 l " " T " "}
    addUserKnob {22 grow l " <img src=\"F_scalep.png\">" -STARTLINE T "n=nuke.thisNode()\n\ndef grow(node=None,step=50):\n    try:\n        if not node:\n            n=nuke.selectedNode()\n        else:\n            n=node\n            n\['xpos'].setValue(n\['xpos'].getValue()-step)\n            n\['ypos'].setValue(n\['ypos'].getValue()-step)\n            n\['bdwidth'].setValue(n\['bdwidth'].getValue()+step*2)\n            n\['bdheight'].setValue(n\['bdheight'].getValue()+step*2)\n    except:\n        pass\ngrow(n,50)"}
    addUserKnob {22 shrink l " <img src=\"F_scalem.png\">" -STARTLINE T "n=nuke.thisNode()\n\ndef shrink(node=None,step=50):\n    try:\n        if not node:\n            n=nuke.selectedNode()\n        else:\n            n=node\n            n\['xpos'].setValue(n\['xpos'].getValue()+step)\n            n\['ypos'].setValue(n\['ypos'].getValue()+step)\n            n\['bdwidth'].setValue(n\['bdwidth'].getValue()-step*2)\n            n\['bdheight'].setValue(n\['bdheight'].getValue()-step*2)\n    except:\n        pass\nshrink(n,50)"}
    addUserKnob {22 colorandom l " <img src=\"ColorBars.png\">" -STARTLINE T "import colorsys, random\nn=nuke.thisNode()\nR,G,B= colorsys.hsv_to_rgb(random.random(),.1+random.random()*.15,.15+random.random()*.15)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ) )"}
    addUserKnob {22 darkgrey l "<font color=\"#232323\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.0, 0.0, 0.14]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 lightgrey l "<font color=\"#383838\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.0, 0.0, 0.22]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 red l "<font color=\"#8c3838\" size=6>■</font>" T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.0, 0.6, 0.55]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n" +STARTLINE}
    addUserKnob {22 orange l "<font color=\"#b28e59\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.1, 0.5, 0.7]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 yellow l "<font color=\"#ccc766\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.16, 0.5, 0.8]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 green l "<font color=\"#5d995b\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.33, 0.4, 0.6]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 cyan l "<font color=\"#72998f\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.46, 0.25, 0.6]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 blue l "<font color=\"#59687f\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.6, 0.3, 0.5]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 darkblue l "<font color=\"#63628c\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.67, 0.3, 0.55]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 magenta l "<font color=\"#927a99\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.8, 0.2, 0.6]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 pink l "<font color=\"#997a89\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.92, 0.2, 0.6]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {26 S02 l " " T " "}
    addUserKnob {26 Ftools l "" +STARTLINE T "<font color=\"#1C1C1C\"> v1.2 - Franklin VFX - 2018"}
   }
   Constant {
    inputs 0
    channels rgb
    name Constant4
    xpos -648
    ypos 987
   }
   AdjBBox {
    numpixels {{size_bbox}}
    name AdjBBox4
    xpos -648
    ypos 1120
   }
   Dot {
    name Dot19
    xpos -614
    ypos 1200
   }
   Axis3 {
    inputs 0
    useMatrix true
    matrix {
        {{parent.cCard3D_1.matrix} {parent.cCard3D_1.matrix} {parent.cCard3D_1.matrix} {parent.cCard3D_1.matrix}}
        {{parent.cCard3D_1.matrix} {parent.cCard3D_1.matrix} {parent.cCard3D_1.matrix} {parent.cCard3D_1.matrix}}
        {{parent.cCard3D_1.matrix} {parent.cCard3D_1.matrix} {parent.cCard3D_1.matrix} {parent.cCard3D_1.matrix}}
        {{parent.cCard3D_1.matrix} {parent.cCard3D_1.matrix} {parent.cCard3D_1.matrix} {parent.cCard3D_1.matrix}}
      }
    name Axis3
    xpos -207
    ypos 48
   }
set N5aa02bd0 [stack 0]
push 0
   Input {
    inputs 0
    name Side
    xpos -135
    ypos -1101
   }
   TimeOffset {
    time_offset {{"shotnmbr==0 ? 0 : shot_\[value shotnmbr]-1"}}
    time ""
    name CTimeOffset7
    label "shot: \[value shotnmbr]\non frame \[value time_offset]"
    xpos -135
    ypos -853
    addUserKnob {20 User}
    addUserKnob {3 shotnmbr l "shot "}
    shotnmbr {{shotcount}}
    addUserKnob {3 ref}
    ref {{time_offset+1}}
   }
   Group {
    name DecimalTimeOffset1
    tile_color 0xafa35dff
    label "random asset\n(based on brighness)"
    note_font "Bitstream Vera Sans Bold"
    xpos -135
    ypos -690
    addUserKnob {20 User}
    addUserKnob {7 decimal l "time offset (decimal)"}
    decimal {{"floor\n(\n  (\n  (  ((((random((shotcount*823)+((seed+seed_offset_\[value shotcount])*212))-0.5)*  ((1-( abs(brighness_flare-0.5) )*2)+1)  )+0.5)*0.5)  * (1-brighness_flare)  )\n\n  +\n\n  (  (((((random((shotcount*823)+((seed+seed_offset_\[value shotcount])*212))-0.5)*  ((1-( abs(brighness_flare-0.5) )*2)+1)  )+0.5)*0.5)+0.5)  * (brighness_flare)  )\n  )\n  *1000\n)\n\n/1000"}}
    addUserKnob {26 ""}
    addUserKnob {26 _1 l "" +STARTLINE T "Chris Fryer | 2020\nupdated by Yorben Otto | 2024"}
   }
    Input {
     inputs 0
     name Input1
     xpos 426
     ypos -793
    }
    TimeOffset {
     time_offset {{(-floor(parent.decimal))*(DecimalTimeOffset1.decimal<0)}}
     time ""
     name TimeOffset1
     xpos 426
     ypos -674
    }
    Dot {
     name Dot6
     xpos 460
     ypos -635
    }
set N5aa44670 [stack 0]
    Dot {
     name Dot5
     xpos 350
     ypos -635
    }
    Dot {
     name Dot7
     xpos 350
     ypos -365
    }
push $N5aa44670
    Dot {
     name Dot1
     xpos 572
     ypos -635
    }
    TimeBlur {
     divisions 2
     shutter {{(parent.decimal-(floor(parent.decimal)))*2}}
     shutteroffset start
     shuttercustomoffset 0
     name TimeBlur1
     xpos 538
     ypos -558
    }
    Dot {
     name Dot2
     xpos 572
     ypos -490
    }
push $N5aa44670
    TimeBlur {
     divisions 2
     shutter {{parent.decimal*2}}
     shutteroffset start
     shuttercustomoffset 0
     name TimeBlur8
     xpos 426
     ypos -556
    }
    Switch {
     inputs 2
     which {{parent.decimal<0}}
     name Switch1
     xpos 426
     ypos -494
    }
    Multiply {
     value {{parent.TimeBlur8.divisions}}
     name Multiply6
     xpos 426
     ypos -436
    }
    Merge2 {
     inputs 2
     operation from
     name Merge6
     xpos 426
     ypos -369
    }
set N5aa865b0 [stack 0]
    Output {
     name Output1
     xpos 426
     ypos -221
    }
push $N5aa865b0
push $N5aa865b0
    Viewer {
     inputs 2
     frame_range 1-100
     viewerProcess "sRGB (default)"
     name Viewer1
     xpos 675
     ypos -246
    }
   end_group
   NoTimeBlur {
    name NoTimeBlur6
    xpos -135
    ypos -608
   }
   Dot {
    name Dot21
    xpos -101
    ypos -449
   }
set N5ab34e30 [stack 0]
   Dot {
    name Dot22
    xpos -245
    ypos -449
   }
   Multiply {
    value {{math_matrix.result_y_flash(parent.CTimeOffset7.ref)}}
    name Angle_reveal_top
    label TOP
    xpos -279
    ypos -371
   }
   Transform {
    scale {{0.05+(0.05*(((parent.DecimalTimeOffset1.decimal-0.5)*2)*ScaleVariationFlash))}}
    center {{root.width/2 x1015 2304} {root.height/2}}
    shutteroffset centred
    name random_size_top
    xpos -279
    ypos -136
   }
   Card3D {
    inputs 3
    rot_order ZYX
    translate {0 0 0}
    rotate {90 0 0}
    shutteroffset centred
    name cCard3D5
    tile_color 0x7b1d1dff
    xpos -279
    ypos 153
    addUserKnob {20 User l parent}
    addUserKnob {22 python_button l "set parent" t "select parent node, and press this button to set the selected node as parent" +INVISIBLE T "n = nuke.selectedNode()\['name'].getValue()\nnuke.thisNode()\['string'].setValue(n)" +STARTLINE}
    addUserKnob {1 string l parent +INVISIBLE}
    string null
    addUserKnob {3 ref l "ref frame"}
    ref 1015
   }
   Transform {
    translate {{"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].translate.x(ref)\}]"} {"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].translate.y(ref)\}]"}}
    rotate {{"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].rotate-\[value parent_gun].rotate(ref)\}]"}}
    scale {{"\[if \{\[value parent_gun]==\"null\"\} \{return 1\} \{return 1+(\[value parent_gun].scale-\[value parent_gun].scale(ref))\}]"}}
    center {{"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].center.x(ref)\}]"} {"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].center.y(ref)\}]"}}
    name GUNMatchMove
    label "\n"
    xpos -279
    ypos 247
    addUserKnob {20 User l parent}
    addUserKnob {3 ref}
    ref {{parent.CTimeOffset7.ref}}
   }
   Transform {
    translate {{"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].translate.x-\[value parent_env].translate.x(ref)\}]"} {"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].translate.y-\[value parent_env].translate.y(ref)\}]"}}
    rotate {{"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].rotate-\[value parent_env].rotate(ref)\}]"}}
    scale {{"\[if \{\[value parent_gun]==\"null\"\} \{return 1\} \{return 1+(\[value parent_env].scale-\[value parent_env].scale(ref))\}]"}}
    center {{"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].center.x(ref)\}]"} {"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].center.y(ref)\}]"}}
    motionblur {{(mode==2)*0.2}}
    shutter {{FlashMB*(0.175*0.3)}}
    shutteroffset centred
    name ENVMatchMove
    xpos -279
    ypos 321
    addUserKnob {20 User l parent}
    addUserKnob {3 ref}
    ref {{parent.CTimeOffset7.ref}}
   }
   Transform {
    translate {{"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return -((root.width/2)-(\[value parent_gun].center.x(1)+\[value parent_gun].translate.x(1)))\}]"} {"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return -((root.height/2)-(\[value parent_gun].center.y(1)+\[value parent_gun].translate.y(1)))\}]"}}
    shutteroffset centred
    name Transform_GUNMatchMove1
    label "alignment correction"
    xpos -279
    ypos 408
    addUserKnob {20 User l parent}
    addUserKnob {22 python_button l "set parent" t "select parent node, and press this button to set the selected node as parent" T "n = nuke.selectedNode()\['name'].getValue()\nnuke.thisNode()\['string'].setValue(n)" +STARTLINE}
    addUserKnob {1 string l parent}
    string Transform_MatchMove10
    addUserKnob {3 ref +INVISIBLE}
    ref {{parent.cCard3D_8.ref}}
   }
   Remove {
    operation keep
    channels rgb
    name Remove10
    xpos -279
    ypos 489
   }
push 0
   Switch {
    inputs 2
    which {{ActivateSideFlash(CTimeOffset7.ref)}}
    name Switch1
    label "keyframeable disable "
    xpos -279
    ypos 587
   }
push 0
   Switch {
    inputs 2
    which {{parent.Angle_reveal_top.value!=0}}
    name Switch4
    label "disable based on angle"
    xpos -279
    ypos 670
   }
   Dot {
    name Dot1
    xpos -245
    ypos 717
   }
push 0
push $N5aa02bd0
push 0
   Input {
    inputs 0
    name Front
    xpos -430
    ypos -1102
    number 1
   }
   TimeOffset {
    time_offset {{"shotnmbr==0 ? 0 : shot_\[value shotnmbr]-1"}}
    time ""
    name CTimeOffset8
    xpos -430
    ypos -840
    addUserKnob {20 User}
    addUserKnob {3 shotnmbr l "shot "}
    shotnmbr {{parent.CTimeOffset7.shotnmbr}}
   }
   Group {
    name DecimalTimeOffset
    tile_color 0xafa35dff
    label "random asset\n(based on brighness)"
    note_font "Bitstream Vera Sans Bold"
    xpos -430
    ypos -693
    addUserKnob {20 User}
    addUserKnob {7 decimal l "time offset (decimal)"}
    decimal {{"floor\n(\n  (\n  (  ((((random((shotcount*823)+((seed+seed_offset_\[value shotcount])*212))-0.5)*  ((1-( abs(brighness_flare-0.5) )*2)+1)  )+0.5)*0.5)  * (1-brighness_flare)  )\n\n  +\n\n  (  (((((random((shotcount*823)+((seed+seed_offset_\[value shotcount])*212))-0.5)*  ((1-( abs(brighness_flare-0.5) )*2)+1)  )+0.5)*0.5)+0.5)  * (brighness_flare)  )\n  )\n  *1000\n)\n\n/1000"}}
    addUserKnob {26 ""}
    addUserKnob {26 _1 l "" +STARTLINE T "Chris Fryer | 2020\nupdated by Yorben Otto | 2024"}
   }
    Input {
     inputs 0
     name Input1
     xpos 426
     ypos -793
    }
    TimeOffset {
     time_offset {{(-floor(parent.decimal))*(DecimalTimeOffset.decimal<0)}}
     time ""
     name TimeOffset1
     xpos 426
     ypos -674
    }
    Dot {
     name Dot6
     xpos 460
     ypos -635
    }
set N5abe4990 [stack 0]
    Dot {
     name Dot5
     xpos 350
     ypos -635
    }
    Dot {
     name Dot7
     xpos 350
     ypos -365
    }
push $N5abe4990
    Dot {
     name Dot1
     xpos 572
     ypos -635
    }
    TimeBlur {
     divisions 2
     shutter {{(parent.decimal-(floor(parent.decimal)))*2}}
     shutteroffset start
     shuttercustomoffset 0
     name TimeBlur1
     xpos 538
     ypos -558
    }
    Dot {
     name Dot2
     xpos 572
     ypos -490
    }
push $N5abe4990
    TimeBlur {
     divisions 2
     shutter {{parent.decimal*2}}
     shutteroffset start
     shuttercustomoffset 0
     name TimeBlur8
     xpos 426
     ypos -556
    }
    Switch {
     inputs 2
     which {{parent.decimal<0}}
     name Switch1
     xpos 426
     ypos -494
    }
    Multiply {
     value {{parent.TimeBlur8.divisions}}
     name Multiply6
     xpos 426
     ypos -436
    }
    Merge2 {
     inputs 2
     operation from
     name Merge6
     xpos 426
     ypos -369
    }
set N5ac367e0 [stack 0]
    Output {
     name Output1
     xpos 426
     ypos -221
    }
push $N5ac367e0
push $N5ac367e0
    Viewer {
     inputs 2
     frame_range 1-100
     viewerProcess "sRGB (default)"
     name Viewer1
     xpos 675
     ypos -246
    }
   end_group
   NoTimeBlur {
    name NoTimeBlur7
    xpos -430
    ypos -617
   }
   Multiply {
    value {{math_matrix.result_x_flash(parent.CTimeOffset7.ref)}}
    name Angle_reveal_front
    label FRONT
    xpos -430
    ypos -375
   }
   Transform {
    scale {{0.05+(0.05*(((parent.DecimalTimeOffset1.decimal-0.5)*2)*ScaleVariationFlash))}}
    center {{root.width/2 x1015 2304} {root.height/2}}
    shutteroffset centred
    name random_size_front
    xpos -430
    ypos -134
   }
   Card3D {
    inputs 3
    rot_order ZYX
    translate {0 0 0}
    rotate {0 90 0}
    shutteroffset centred
    name cCard3D6
    tile_color 0x7b1d1dff
    xpos -430
    ypos 150
    addUserKnob {20 User l parent}
    addUserKnob {22 python_button l "set parent" t "select parent node, and press this button to set the selected node as parent" +INVISIBLE T "n = nuke.selectedNode()\['name'].getValue()\nnuke.thisNode()\['string'].setValue(n)" +STARTLINE}
    addUserKnob {1 string l parent +INVISIBLE}
    string null
    addUserKnob {3 ref l "ref frame"}
    ref 1015
   }
   Transform {
    translate {{"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].translate.x(ref)\}]"} {"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].translate.y(ref)\}]"}}
    rotate {{"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].rotate-\[value parent_gun].rotate(ref)\}]"}}
    scale {{"\[if \{\[value parent_gun]==\"null\"\} \{return 1\} \{return 1+(\[value parent_gun].scale-\[value parent_gun].scale(ref))\}]"}}
    center {{"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].center.x(ref)\}]"} {"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].center.y(ref)\}]"}}
    name GUNMatchMove2
    label "\n"
    xpos -430
    ypos 248
    addUserKnob {20 User l parent}
    addUserKnob {3 ref}
    ref {{parent.CTimeOffset7.ref}}
   }
   Transform {
    translate {{"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].translate.x-\[value parent_env].translate.x(ref)\}]"} {"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].translate.y-\[value parent_env].translate.y(ref)\}]"}}
    rotate {{"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].rotate-\[value parent_env].rotate(ref)\}]"}}
    scale {{"\[if \{\[value parent_gun]==\"null\"\} \{return 1\} \{return 1+(\[value parent_env].scale-\[value parent_env].scale(ref))\}]"}}
    center {{"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].center.x(ref)\}]"} {"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].center.y(ref)\}]"}}
    motionblur {{(mode==2)*0.2}}
    shutter {{FlashMB*(0.175*0.3)}}
    shutteroffset centred
    name ENVMatchMove2
    xpos -430
    ypos 320
    addUserKnob {20 User l parent}
    addUserKnob {3 ref}
    ref {{parent.CTimeOffset7.ref}}
   }
   Transform {
    translate {{"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return -((root.width/2)-(\[value parent_gun].center.x(1)+\[value parent_gun].translate.x(1)))\}]"} {"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return -((root.height/2)-(\[value parent_gun].center.y(1)+\[value parent_gun].translate.y(1)))\}]"}}
    shutteroffset centred
    name Transform_GUNMatchMove2
    label "alignment correction"
    xpos -430
    ypos 407
    addUserKnob {20 User l parent}
    addUserKnob {22 python_button l "set parent" t "select parent node, and press this button to set the selected node as parent" T "n = nuke.selectedNode()\['name'].getValue()\nnuke.thisNode()\['string'].setValue(n)" +STARTLINE}
    addUserKnob {1 string l parent}
    string Transform_MatchMove10
    addUserKnob {3 ref +INVISIBLE}
    ref {{parent.cCard3D_8.ref}}
   }
   Remove {
    operation keep
    channels rgb
    name Remove11
    xpos -430
    ypos 487
   }
push 0
   Switch {
    inputs 2
    which {{ActivateFrontFlash(CTimeOffset7.ref)}}
    name Switch7
    label "keyframeable disable "
    xpos -430
    ypos 586
   }
push 0
   Switch {
    inputs 2
    which {{parent.Angle_reveal_front.value!=0}}
    name Switch5
    label "disable based on angle"
    xpos -430
    ypos 670
   }
   Dot {
    name Dot2
    xpos -396
    ypos 749
   }
push $N5ab34e30
   Multiply {
    value {{math_matrix.result_z_flash(parent.CTimeOffset7.ref)}}
    name Angle_reveal_side
    label SIDE
    xpos -135
    ypos -374
   }
   Transform {
    scale {{0.05+(0.05*(((parent.DecimalTimeOffset1.decimal-0.5)*2)*ScaleVariationFlash))}}
    center {{root.width/2 x1015 2304} {root.height/2}}
    shutteroffset centred
    name random_size_side
    xpos -135
    ypos -137
   }
   Card3D {
    translate {{"\[if \{\[exists  parent.parent.parent.input0]\} \{return \[value \[topnode parent.parent.parent.input0].name].translate.x(ref)\} \{return 0\}]"} {"\[if \{\[exists  parent.parent.parent.input0]\} \{return \[value \[topnode parent.parent.parent.input0].name].translate.y(ref)\} \{return 0\}]"} {"\[if \{\[exists  parent.parent.parent.input0]\} \{return \[value \[topnode parent.parent.parent.input0].name].translate.z(ref)\} \{return -1\}]"}}
    rotate {{"\[if \{\[exists  parent.parent.parent.input0]\} \{return \[value \[topnode parent.parent.parent.input0].name].rotate.x(ref)\} \{return 0\}]"} {"\[if \{\[exists  parent.parent.parent.input0]\} \{return \[value \[topnode parent.parent.parent.input0].name].rotate.y(ref)\} \{return 0\}]"} {"\[if \{\[exists  parent.parent.parent.input0]\} \{return \[value \[topnode parent.parent.parent.input0].name].rotate.z(ref)\} \{return 0\}]"}}
    scaling {{"\[if \{\[exists  parent.parent.parent.input0]\} \{return \[value \[topnode parent.parent.parent.input0].name].scaling.x(ref)\} \{return 1\}]"} {"\[if \{\[exists  parent.parent.parent.input0]\} \{return \[value \[topnode parent.parent.parent.input0].name].scaling.y(ref)\} \{return 1\}]"} {"\[if \{\[exists  parent.parent.parent.input0]\} \{return \[value \[topnode parent.parent.parent.input0].name].scaling.z(ref)\} \{return 1\}]"}}
    uniform_scale {{"\[if \{\[exists  parent.parent.parent.input0]\} \{return (\[value \[topnode parent.parent.parent.input0].name].uniform_scale(ref)*25)\} \{return 25\}]"}}
    shutteroffset centred
    name cCard3D_1
    tile_color 0x7b1d1dff
    label "ref frame: \[value ref]"
    xpos -135
    ypos 147
    addUserKnob {20 User l parent}
    addUserKnob {22 python_button l "set parent" t "select parent node, and press this button to set the selected node as parent" +INVISIBLE T "n = nuke.selectedNode()\['name'].getValue()\nnuke.thisNode()\['string'].setValue(n)" +STARTLINE}
    addUserKnob {1 string l parent +INVISIBLE}
    string null
    addUserKnob {3 id l "id number"}
    id {{parent.CTimeOffset7.shotnmbr}}
    addUserKnob {3 ref l "ref frame"}
    ref {{parent.CTimeOffset7.ref}}
   }
   Transform {
    translate {{"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].translate.x(ref)\}]"} {"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].translate.y(ref)\}]"}}
    rotate {{"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].rotate-\[value parent_gun].rotate(ref)\}]"}}
    scale {{"\[if \{\[value parent_gun]==\"null\"\} \{return 1\} \{return 1+(\[value parent_gun].scale-\[value parent_gun].scale(ref))\}]"}}
    center {{"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].center.x(ref)\}]"} {"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].center.y(ref)\}]"}}
    name GUNMatchMove1
    label "\n"
    xpos -135
    ypos 241
    addUserKnob {20 User l parent}
    addUserKnob {3 ref}
    ref {{parent.CTimeOffset7.ref}}
   }
   Transform {
    translate {{"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].translate.x-\[value parent_env].translate.x(ref)\}]"} {"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].translate.y-\[value parent_env].translate.y(ref)\}]"}}
    rotate {{"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].rotate-\[value parent_env].rotate(ref)\}]"}}
    scale {{"\[if \{\[value parent_gun]==\"null\"\} \{return 1\} \{return 1+(\[value parent_env].scale-\[value parent_env].scale(ref))\}]"}}
    center {{"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].center.x(ref)\}]"} {"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].center.y(ref)\}]"}}
    motionblur {{(mode==2)*0.2}}
    shutter {{FlashMB*(0.175*0.3)}}
    shutteroffset centred
    name ENVMatchMove1
    xpos -135
    ypos 317
    addUserKnob {20 User l parent}
    addUserKnob {3 ref}
    ref {{parent.CTimeOffset7.ref}}
   }
   Transform {
    translate {{"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return -((root.width/2)-(\[value parent_gun].center.x(1)+\[value parent_gun].translate.x(1)))\}]"} {"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return -((root.height/2)-(\[value parent_gun].center.y(1)+\[value parent_gun].translate.y(1)))\}]"}}
    shutteroffset centred
    name Transform_GUNMatchMove3
    label "alignment correction"
    xpos -135
    ypos 405
    addUserKnob {20 User l parent}
    addUserKnob {22 python_button l "set parent" t "select parent node, and press this button to set the selected node as parent" T "n = nuke.selectedNode()\['name'].getValue()\nnuke.thisNode()\['string'].setValue(n)" +STARTLINE}
    addUserKnob {1 string l parent}
    string Transform_MatchMove10
    addUserKnob {3 ref +INVISIBLE}
    ref {{parent.cCard3D_8.ref}}
   }
   Remove {
    operation keep
    channels rgb
    name Remove12
    xpos -135
    ypos 489
   }
push 0
   Switch {
    inputs 2
    which {{ActivateSideFlash(CTimeOffset7.ref)}}
    name Switch3
    label "keyframeable disable "
    xpos -135
    ypos 587
   }
push 0
   Switch {
    inputs 2
    which {{parent.Angle_reveal_side.value!=0}}
    name Switch6
    label "disable based on angle"
    xpos -135
    ypos 671
   }
   Merge2 {
    inputs 3+1
    operation max
    name Merge1
    xpos -135
    ypos 745
   }
   Merge2 {
    inputs 2
    operation plus
    bbox intersection
    name Merge6
    xpos -135
    ypos 1196
   }
push 0
   Switch {
    inputs 2
    which {{"shot_\[value count]==0?0:(EnableExtraFrames==1?floor(((frame>=shot_\[value count])+(frame<=(shot_\[value count]+(4*((mode==1)+(mode==2))))))/2):frame==shot_\[value count])"}}
    name cSwitch_3
    selected true
    xpos -135
    ypos 1354
    addUserKnob {20 User}
    addUserKnob {3 count l "shot number"}
    count {{parent.CTimeOffset7.shotnmbr}}
   }
   Output {
    name Output1
    xpos -135
    ypos 1861
   }
  end_group
  Merge2 {
   inputs 24+1
   operation plus
   Achannels rgb
   Bchannels rgb
   output rgb
   name Merge1
   xpos 7893
   ypos -654
  }
  Output {
   name Output1
   xpos 7893
   ypos 370
  }
 end_group
add_layer {muzzleflash muzzleflash.red muzzleflash.green muzzleflash.blue}
 Shuffle2 {
  fromInput1 {{0} B}
  out1 muzzleflash
  fromInput2 {{0} B}
  mappings "3 rgba.red 0 0 muzzleflash.red 0 0 rgba.green 0 1 muzzleflash.green 0 1 rgba.blue 0 2 muzzleflash.blue 0 2"
  name Shuffle2
  xpos 1240
  ypos 387
 }
 Dot {
  name Dot7
  xpos 1274
  ypos 493
 }
set N5963c9c0 [stack 0]
 Dot {
  name Dot9
  xpos 1274
  ypos 657
 }
push $N3e642850
 Transform {
  scale {-1 1}
  center {1920 1080}
  shutteroffset centred
  name Transform1
  label "direction fix"
  xpos 470
  ypos -1276
 }
 Transform {
  scale 2
  center {1920 1080}
  shutteroffset centred
  name Transform3
  xpos 470
  ypos -1184
 }
 Reformat {
  resize height
  pbb true
  name Reformat1
  xpos 470
  ypos -606
 }
 FrameHold {
  firstFrame {{SelectRefGun}}
  name FrameHold1
  xpos 470
  ypos -559
 }
 Input {
  inputs 0
  name align
  xpos 265
  ypos -591
  number 1
 }
 Dot {
  name Dot3
  xpos 299
  ypos -449
 }
 Merge2 {
  inputs 2
  operation plus
  name Merge2
  xpos 470
  ypos -453
  disable {{parent.EnableRefGuns==0}}
 }
 Transform {
  scale 0.018
  center {{width/2} {height/2}}
  shutteroffset centred
  name Transform_scaling
  xpos 470
  ypos -294
 }
 Card3D {
  translate {{"\[if \{\[exists  parent.input0]\} \{return \[value \[topnode parent.input0].name].translate.x\} \{return 0\}]"} {"\[if \{\[exists  parent.input0]\} \{return \[value \[topnode parent.input0].name].translate.y\} \{return 0\}]"} {"\[if \{\[exists  parent.input0]\} \{return \[value \[topnode parent.input0].name].translate.z\} \{return -1\}]"}}
  rotate {{"\[if \{\[exists  parent.input0]\} \{return \[value \[topnode parent.input0].name].rotate.x\} \{return 0\}]"} {"\[if \{\[exists  parent.input0]\} \{return \[value \[topnode parent.input0].name].rotate.y\} \{return 0\}]"} {"\[if \{\[exists  parent.input0]\} \{return \[value \[topnode parent.input0].name].rotate.z\} \{return 0\}]"}}
  scaling {{"\[if \{\[exists  parent.input0]\} \{return \[value \[topnode parent.input0].name].scaling.x\} \{return 1\}]"} {"\[if \{\[exists  parent.input0]\} \{return \[value \[topnode parent.input0].name].scaling.y\} \{return 1\}]"} {"\[if \{\[exists  parent.input0]\} \{return \[value \[topnode parent.input0].name].scaling.z\} \{return 1\}]"}}
  uniform_scale {{"\[if \{\[exists  parent.input0]\} \{return (\[value \[topnode parent.input0].name].uniform_scale*25)\} \{return 25\}]"}}
  shutteroffset centred
  name cCard3D_3
  tile_color 0x7b1d1dff
  label "ref frame: \[value ref]"
  xpos 470
  ypos -217
  addUserKnob {20 User l parent}
  addUserKnob {22 python_button l "set parent" t "select parent node, and press this button to set the selected node as parent" +INVISIBLE T "n = nuke.selectedNode()\['name'].getValue()\nnuke.thisNode()\['string'].setValue(n)" +STARTLINE}
  addUserKnob {1 string l parent +INVISIBLE}
  string null
  addUserKnob {3 id l "id number"}
  id {{parent.CTimeOffset7.shotnmbr}}
  addUserKnob {3 ref l "ref frame"}
  ref {{parent.CTimeOffset7.time_offset}}
 }
set N596a6f80 [stack 0]
 Input {
  inputs 0
  name Card3D
  xpos 823
  ypos -601
 }
 CopyBBox {
  inputs 2
  name CopyBBox1
  xpos 823
  ypos -211
 }
 Dot {
  name Dot4
  xpos 857
  ypos -137
 }
set N596c8e90 [stack 0]
 Dot {
  name Dot5
  xpos 693
  ypos -137
 }
 Remove {
  name Remove2
  xpos 659
  ypos 81
 }
push $N596a6f80
 Merge2 {
  inputs 2
  operation plus
  bbox B
  name Merge3
  xpos 470
  ypos 87
 }
 Transform {
  translate {{"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].translate.x\}]"} {"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].translate.y\}]"}}
  rotate {{"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].rotate\}]"}}
  scale {{"\[if \{\[value parent_gun]==\"null\"\} \{return 1\} \{return \[value parent_gun].scale\}]"}}
  center {{"\[if \{\[value parent_gun]==\"null\"\} \{return root.width/2\} \{return \[value parent_gun].center.x\}]"} {"\[if \{\[value parent_gun]==\"null\"\} \{return root.height/2\} \{return \[value parent_gun].center.y\}]"}}
  name Transform_GUNMatchMove1
  label "(child of \[value string])\n"
  xpos 470
  ypos 169
  addUserKnob {20 User l parent}
  addUserKnob {22 python_button l "set parent" t "select parent node, and press this button to set the selected node as parent" T "n = nuke.selectedNode()\['name'].getValue()\nnuke.thisNode()\['string'].setValue(n)" +STARTLINE}
  addUserKnob {1 string l parent}
  string Transform_MatchMove10
  addUserKnob {3 ref +INVISIBLE}
  ref {{parent.cCard3D_8.ref}}
 }
 Transform {
  translate {{"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return -((root.width/2)-(\[value parent_gun].center.x(1)+\[value parent_gun].translate.x(1)))\}]"} {"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return -((root.height/2)-(\[value parent_gun].center.y(1)+\[value parent_gun].translate.y(1)))\}]"}}
  name Transform_GUNMatchMove3
  label "alignment correction"
  xpos 470
  ypos 257
  addUserKnob {20 User l parent}
  addUserKnob {22 python_button l "set parent" t "select parent node, and press this button to set the selected node as parent" T "n = nuke.selectedNode()\['name'].getValue()\nnuke.thisNode()\['string'].setValue(n)" +STARTLINE}
  addUserKnob {1 string l parent}
  string Transform_MatchMove10
  addUserKnob {3 ref +INVISIBLE}
  ref {{parent.cCard3D_8.ref}}
 }
 Shuffle2 {
  fromInput1 {{0} B}
  out1 smoke
  fromInput2 {{0} B}
  out2 alpha
  mappings "5 rgba.red 0 0 smoke.red 0 0 rgba.green 0 1 smoke.green 0 1 rgba.blue 0 2 smoke.blue 0 2 rgba.blue 0 2 smoke.alpha 0 3 rgba.blue 0 2 rgba.alpha 1 0"
  name Shuffle3
  xpos 470
  ypos 383
 }
 Merge2 {
  inputs 2
  also_merge muzzleflash
  name Merge5
  xpos 470
  ypos 653
 }
 Dot {
  name Dot14
  xpos 504
  ypos 783
 }
push $N5963c9c0
push $N596c8e90
 Transform {
  translate {{"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].translate.x\}]"} {"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].translate.y\}]"}}
  rotate {{"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].rotate\}]"}}
  scale {{"\[if \{\[value parent_gun]==\"null\"\} \{return 1\} \{return \[value parent_gun].scale\}]"}}
  center {{"\[if \{\[value parent_gun]==\"null\"\} \{return root.width/2\} \{return \[value parent_gun].center.x\}]"} {"\[if \{\[value parent_gun]==\"null\"\} \{return root.height/2\} \{return \[value parent_gun].center.y\}]"}}
  name Transform_GUNMatchMove23
  label "(child of \[value string])\n"
  xpos 823
  ypos -57
  addUserKnob {20 User l parent}
  addUserKnob {22 python_button l "set parent" t "select parent node, and press this button to set the selected node as parent" T "n = nuke.selectedNode()\['name'].getValue()\nnuke.thisNode()\['string'].setValue(n)" +STARTLINE}
  addUserKnob {1 string l parent}
  string Transform_MatchMove10
  addUserKnob {3 ref +INVISIBLE}
  ref {{parent.cCard3D_8.ref}}
 }
 Transform {
  translate {{"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return -((root.width/2)-(\[value parent_gun].center.x(1)+\[value parent_gun].translate.x(1)))\}]"} {"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return -((root.height/2)-(\[value parent_gun].center.y(1)+\[value parent_gun].translate.y(1)))\}]"}}
  name Transform_GUNMatchMove2
  label "alignment correction"
  xpos 823
  ypos -19
  addUserKnob {20 User l parent}
  addUserKnob {22 python_button l "set parent" t "select parent node, and press this button to set the selected node as parent" T "n = nuke.selectedNode()\['name'].getValue()\nnuke.thisNode()\['string'].setValue(n)" +STARTLINE}
  addUserKnob {1 string l parent}
  string Transform_MatchMove10
  addUserKnob {3 ref +INVISIBLE}
  ref {{parent.cCard3D_8.ref}}
 }
 Remove {
  name Remove1
  xpos 823
  ypos 79
 }
 Group {
  inputs 0
  name muzzleflash_maker_SMOKE
  xpos 1052
  ypos -591
  disable {{(mode==3||mode==4?0:1)+((ActivateFrontSmoke+ActivateSideSmoke)==0)}}
  addUserKnob {20 User}
  addUserKnob {26 _2 l "" +STARTLINE T "\n\n"}
  addUserKnob {26 _1 l "" +STARTLINE T "<i>All the settings are in the properties pannel of the main group"}
 }
  BackdropNode {
   inputs 0
   name BackdropNode1
   knobChanged "try:\n    listenedKnobs = \['text', 'position', 'name']\n    node = nuke.thisNode()\n    name = node.knob('name').value()\n    text = node.knob('text').value()\n    position = node.knob('position').value()\n    position = \"<\" + position + \">\"\n    label = node.knob('label').value()\n    \n    if nuke.thisKnob().name() in listenedKnobs:\n        if text == \"\":\n            if node.knob('position').value() == \"left\":\n                node.knob('label').setValue()\n            else:\n                node.knob('label').setValue(position + name)\n        else:\n            if node.knob('position').value() == \"left\":\n                node.knob('label').setValue(text)\n            else:\n                node.knob('label').setValue(position + text)\n                \n    elif nuke.thisKnob().name() == 'font_size':\n        fontSize = node.knob('font_size').value()\n        node.knob('note_font_size').setValue(fontSize)\nexcept:\n    pass"
   tile_color 0x232323ff
   label <Center>SMØKE
   note_font_size 200
   xpos -1163
   ypos -3739
   bdwidth 5777
   bdheight 1755
   addUserKnob {20 F_VFX l BackdropNode}
   addUserKnob {43 text l Text}
   text SMØKE
   addUserKnob {7 font_size l "Font Size" R 10 100}
   font_size 200
   addUserKnob {4 position l "" -STARTLINE M {Left Center}}
   position Center
   addUserKnob {26 S01 l " " T " "}
   addUserKnob {22 grow l " <img src=\"F_scalep.png\">" -STARTLINE T "n=nuke.thisNode()\n\ndef grow(node=None,step=50):\n    try:\n        if not node:\n            n=nuke.selectedNode()\n        else:\n            n=node\n            n\['xpos'].setValue(n\['xpos'].getValue()-step)\n            n\['ypos'].setValue(n\['ypos'].getValue()-step)\n            n\['bdwidth'].setValue(n\['bdwidth'].getValue()+step*2)\n            n\['bdheight'].setValue(n\['bdheight'].getValue()+step*2)\n    except:\n        pass\ngrow(n,50)"}
   addUserKnob {22 shrink l " <img src=\"F_scalem.png\">" -STARTLINE T "n=nuke.thisNode()\n\ndef shrink(node=None,step=50):\n    try:\n        if not node:\n            n=nuke.selectedNode()\n        else:\n            n=node\n            n\['xpos'].setValue(n\['xpos'].getValue()+step)\n            n\['ypos'].setValue(n\['ypos'].getValue()+step)\n            n\['bdwidth'].setValue(n\['bdwidth'].getValue()-step*2)\n            n\['bdheight'].setValue(n\['bdheight'].getValue()-step*2)\n    except:\n        pass\nshrink(n,50)"}
   addUserKnob {22 colorandom l " <img src=\"ColorBars.png\">" -STARTLINE T "import colorsys, random\nn=nuke.thisNode()\nR,G,B= colorsys.hsv_to_rgb(random.random(),.1+random.random()*.15,.15+random.random()*.15)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ) )"}
   addUserKnob {22 darkgrey l "<font color=\"#232323\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.0, 0.0, 0.14]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
   addUserKnob {22 lightgrey l "<font color=\"#383838\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.0, 0.0, 0.22]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
   addUserKnob {22 red l "<font color=\"#8c3838\" size=6>■</font>" T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.0, 0.6, 0.55]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n" +STARTLINE}
   addUserKnob {22 orange l "<font color=\"#b28e59\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.1, 0.5, 0.7]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
   addUserKnob {22 yellow l "<font color=\"#ccc766\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.16, 0.5, 0.8]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
   addUserKnob {22 green l "<font color=\"#5d995b\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.33, 0.4, 0.6]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
   addUserKnob {22 cyan l "<font color=\"#72998f\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.46, 0.25, 0.6]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
   addUserKnob {22 blue l "<font color=\"#59687f\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.6, 0.3, 0.5]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
   addUserKnob {22 darkblue l "<font color=\"#63628c\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.67, 0.3, 0.55]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
   addUserKnob {22 magenta l "<font color=\"#927a99\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.8, 0.2, 0.6]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
   addUserKnob {22 pink l "<font color=\"#997a89\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.92, 0.2, 0.6]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
   addUserKnob {26 S02 l " " T " "}
   addUserKnob {26 Ftools l "" +STARTLINE T "<font color=\"#1C1C1C\"> v1.2 - Franklin VFX - 2018"}
  }
  BackdropNode {
   inputs 0
   name BackdropNode18
   knobChanged "try:\n    listenedKnobs = \['text', 'position', 'name']\n    node = nuke.thisNode()\n    name = node.knob('name').value()\n    text = node.knob('text').value()\n    position = node.knob('position').value()\n    position = \"<\" + position + \">\"\n    label = node.knob('label').value()\n    \n    if nuke.thisKnob().name() in listenedKnobs:\n        if text == \"\":\n            if node.knob('position').value() == \"left\":\n                node.knob('label').setValue()\n            else:\n                node.knob('label').setValue(position + name)\n        else:\n            if node.knob('position').value() == \"left\":\n                node.knob('label').setValue(text)\n            else:\n                node.knob('label').setValue(position + text)\n                \n    elif nuke.thisKnob().name() == 'font_size':\n        fontSize = node.knob('font_size').value()\n        node.knob('note_font_size').setValue(fontSize)\nexcept:\n    pass"
   tile_color 0xb5b5b5ff
   label "<Left>before or after Flare"
   note_font_size 50
   xpos -499
   ypos -1872
   bdwidth 406
   bdheight 401
   addUserKnob {20 F_VFX l BackdropNode}
   addUserKnob {43 text l Text}
   text "before or after Flare"
   addUserKnob {7 font_size l "Font Size" R 10 100}
   font_size 50
   addUserKnob {4 position l "" -STARTLINE M {Left Center}}
   addUserKnob {26 S01 l " " T " "}
   addUserKnob {22 grow l " <img src=\"F_scalep.png\">" -STARTLINE T "n=nuke.thisNode()\n\ndef grow(node=None,step=50):\n    try:\n        if not node:\n            n=nuke.selectedNode()\n        else:\n            n=node\n            n\['xpos'].setValue(n\['xpos'].getValue()-step)\n            n\['ypos'].setValue(n\['ypos'].getValue()-step)\n            n\['bdwidth'].setValue(n\['bdwidth'].getValue()+step*2)\n            n\['bdheight'].setValue(n\['bdheight'].getValue()+step*2)\n    except:\n        pass\ngrow(n,50)"}
   addUserKnob {22 shrink l " <img src=\"F_scalem.png\">" -STARTLINE T "n=nuke.thisNode()\n\ndef shrink(node=None,step=50):\n    try:\n        if not node:\n            n=nuke.selectedNode()\n        else:\n            n=node\n            n\['xpos'].setValue(n\['xpos'].getValue()+step)\n            n\['ypos'].setValue(n\['ypos'].getValue()+step)\n            n\['bdwidth'].setValue(n\['bdwidth'].getValue()-step*2)\n            n\['bdheight'].setValue(n\['bdheight'].getValue()-step*2)\n    except:\n        pass\nshrink(n,50)"}
   addUserKnob {22 colorandom l " <img src=\"ColorBars.png\">" -STARTLINE T "import colorsys, random\nn=nuke.thisNode()\nR,G,B= colorsys.hsv_to_rgb(random.random(),.1+random.random()*.15,.15+random.random()*.15)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ) )"}
   addUserKnob {22 darkgrey l "<font color=\"#232323\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.0, 0.0, 0.14]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
   addUserKnob {22 lightgrey l "<font color=\"#383838\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.0, 0.0, 0.22]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
   addUserKnob {22 red l "<font color=\"#8c3838\" size=6>■</font>" T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.0, 0.6, 0.55]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n" +STARTLINE}
   addUserKnob {22 orange l "<font color=\"#b28e59\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.1, 0.5, 0.7]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
   addUserKnob {22 yellow l "<font color=\"#ccc766\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.16, 0.5, 0.8]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
   addUserKnob {22 green l "<font color=\"#5d995b\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.33, 0.4, 0.6]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
   addUserKnob {22 cyan l "<font color=\"#72998f\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.46, 0.25, 0.6]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
   addUserKnob {22 blue l "<font color=\"#59687f\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.6, 0.3, 0.5]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
   addUserKnob {22 darkblue l "<font color=\"#63628c\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.67, 0.3, 0.55]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
   addUserKnob {22 magenta l "<font color=\"#927a99\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.8, 0.2, 0.6]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
   addUserKnob {22 pink l "<font color=\"#997a89\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.92, 0.2, 0.6]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
   addUserKnob {26 S02 l " " T " "}
   addUserKnob {26 Ftools l "" +STARTLINE T "<font color=\"#1C1C1C\"> v1.2 - Franklin VFX - 2018"}
  }
  BackdropNode {
   inputs 0
   name BackdropNode2
   knobChanged "try:\n    listenedKnobs = \['text', 'position', 'name']\n    node = nuke.thisNode()\n    name = node.knob('name').value()\n    text = node.knob('text').value()\n    position = node.knob('position').value()\n    position = \"<\" + position + \">\"\n    label = node.knob('label').value()\n    \n    if nuke.thisKnob().name() in listenedKnobs:\n        if text == \"\":\n            if node.knob('position').value() == \"left\":\n                node.knob('label').setValue()\n            else:\n                node.knob('label').setValue(position + name)\n        else:\n            if node.knob('position').value() == \"left\":\n                node.knob('label').setValue(text)\n            else:\n                node.knob('label').setValue(position + text)\n                \n    elif nuke.thisKnob().name() == 'font_size':\n        fontSize = node.knob('font_size').value()\n        node.knob('note_font_size').setValue(fontSize)\nexcept:\n    pass"
   tile_color 0x232323ff
   label "<Left>smoke of every shot fired"
   note_font_size 50
   xpos -443
   ypos -746
   bdwidth 9623
   bdheight 652
   addUserKnob {20 F_VFX l BackdropNode}
   addUserKnob {43 text l Text}
   text "smoke of every shot fired"
   addUserKnob {7 font_size l "Font Size" R 10 100}
   font_size 50
   addUserKnob {4 position l "" -STARTLINE M {Left Center}}
   addUserKnob {26 S01 l " " T " "}
   addUserKnob {22 grow l " <img src=\"F_scalep.png\">" -STARTLINE T "n=nuke.thisNode()\n\ndef grow(node=None,step=50):\n    try:\n        if not node:\n            n=nuke.selectedNode()\n        else:\n            n=node\n            n\['xpos'].setValue(n\['xpos'].getValue()-step)\n            n\['ypos'].setValue(n\['ypos'].getValue()-step)\n            n\['bdwidth'].setValue(n\['bdwidth'].getValue()+step*2)\n            n\['bdheight'].setValue(n\['bdheight'].getValue()+step*2)\n    except:\n        pass\ngrow(n,50)"}
   addUserKnob {22 shrink l " <img src=\"F_scalem.png\">" -STARTLINE T "n=nuke.thisNode()\n\ndef shrink(node=None,step=50):\n    try:\n        if not node:\n            n=nuke.selectedNode()\n        else:\n            n=node\n            n\['xpos'].setValue(n\['xpos'].getValue()+step)\n            n\['ypos'].setValue(n\['ypos'].getValue()+step)\n            n\['bdwidth'].setValue(n\['bdwidth'].getValue()-step*2)\n            n\['bdheight'].setValue(n\['bdheight'].getValue()-step*2)\n    except:\n        pass\nshrink(n,50)"}
   addUserKnob {22 colorandom l " <img src=\"ColorBars.png\">" -STARTLINE T "import colorsys, random\nn=nuke.thisNode()\nR,G,B= colorsys.hsv_to_rgb(random.random(),.1+random.random()*.15,.15+random.random()*.15)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ) )"}
   addUserKnob {22 darkgrey l "<font color=\"#232323\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.0, 0.0, 0.14]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
   addUserKnob {22 lightgrey l "<font color=\"#383838\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.0, 0.0, 0.22]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
   addUserKnob {22 red l "<font color=\"#8c3838\" size=6>■</font>" T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.0, 0.6, 0.55]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n" +STARTLINE}
   addUserKnob {22 orange l "<font color=\"#b28e59\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.1, 0.5, 0.7]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
   addUserKnob {22 yellow l "<font color=\"#ccc766\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.16, 0.5, 0.8]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
   addUserKnob {22 green l "<font color=\"#5d995b\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.33, 0.4, 0.6]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
   addUserKnob {22 cyan l "<font color=\"#72998f\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.46, 0.25, 0.6]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
   addUserKnob {22 blue l "<font color=\"#59687f\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.6, 0.3, 0.5]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
   addUserKnob {22 darkblue l "<font color=\"#63628c\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.67, 0.3, 0.55]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
   addUserKnob {22 magenta l "<font color=\"#927a99\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.8, 0.2, 0.6]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
   addUserKnob {22 pink l "<font color=\"#997a89\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.92, 0.2, 0.6]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
   addUserKnob {26 S02 l " " T " "}
   addUserKnob {26 Ftools l "" +STARTLINE T "<font color=\"#1C1C1C\"> v1.2 - Franklin VFX - 2018"}
  }
  BackdropNode {
   inputs 0
   name BackdropNode3
   knobChanged "try:\n    listenedKnobs = \['text', 'position', 'name']\n    node = nuke.thisNode()\n    name = node.knob('name').value()\n    text = node.knob('text').value()\n    position = node.knob('position').value()\n    position = \"<\" + position + \">\"\n    label = node.knob('label').value()\n    \n    if nuke.thisKnob().name() in listenedKnobs:\n        if text == \"\":\n            if node.knob('position').value() == \"left\":\n                node.knob('label').setValue()\n            else:\n                node.knob('label').setValue(position + name)\n        else:\n            if node.knob('position').value() == \"left\":\n                node.knob('label').setValue(text)\n            else:\n                node.knob('label').setValue(position + text)\n                \n    elif nuke.thisKnob().name() == 'font_size':\n        fontSize = node.knob('font_size').value()\n        node.knob('note_font_size').setValue(fontSize)\nexcept:\n    pass"
   tile_color 0xb5b5b5ff
   label "<Left>before or after Flare"
   note_font_size 50
   xpos 1684
   ypos -1834
   bdwidth 406
   bdheight 401
   addUserKnob {20 F_VFX l BackdropNode}
   addUserKnob {43 text l Text}
   text "before or after Flare"
   addUserKnob {7 font_size l "Font Size" R 10 100}
   font_size 50
   addUserKnob {4 position l "" -STARTLINE M {Left Center}}
   addUserKnob {26 S01 l " " T " "}
   addUserKnob {22 grow l " <img src=\"F_scalep.png\">" -STARTLINE T "n=nuke.thisNode()\n\ndef grow(node=None,step=50):\n    try:\n        if not node:\n            n=nuke.selectedNode()\n        else:\n            n=node\n            n\['xpos'].setValue(n\['xpos'].getValue()-step)\n            n\['ypos'].setValue(n\['ypos'].getValue()-step)\n            n\['bdwidth'].setValue(n\['bdwidth'].getValue()+step*2)\n            n\['bdheight'].setValue(n\['bdheight'].getValue()+step*2)\n    except:\n        pass\ngrow(n,50)"}
   addUserKnob {22 shrink l " <img src=\"F_scalem.png\">" -STARTLINE T "n=nuke.thisNode()\n\ndef shrink(node=None,step=50):\n    try:\n        if not node:\n            n=nuke.selectedNode()\n        else:\n            n=node\n            n\['xpos'].setValue(n\['xpos'].getValue()+step)\n            n\['ypos'].setValue(n\['ypos'].getValue()+step)\n            n\['bdwidth'].setValue(n\['bdwidth'].getValue()-step*2)\n            n\['bdheight'].setValue(n\['bdheight'].getValue()-step*2)\n    except:\n        pass\nshrink(n,50)"}
   addUserKnob {22 colorandom l " <img src=\"ColorBars.png\">" -STARTLINE T "import colorsys, random\nn=nuke.thisNode()\nR,G,B= colorsys.hsv_to_rgb(random.random(),.1+random.random()*.15,.15+random.random()*.15)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ) )"}
   addUserKnob {22 darkgrey l "<font color=\"#232323\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.0, 0.0, 0.14]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
   addUserKnob {22 lightgrey l "<font color=\"#383838\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.0, 0.0, 0.22]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
   addUserKnob {22 red l "<font color=\"#8c3838\" size=6>■</font>" T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.0, 0.6, 0.55]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n" +STARTLINE}
   addUserKnob {22 orange l "<font color=\"#b28e59\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.1, 0.5, 0.7]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
   addUserKnob {22 yellow l "<font color=\"#ccc766\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.16, 0.5, 0.8]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
   addUserKnob {22 green l "<font color=\"#5d995b\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.33, 0.4, 0.6]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
   addUserKnob {22 cyan l "<font color=\"#72998f\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.46, 0.25, 0.6]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
   addUserKnob {22 blue l "<font color=\"#59687f\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.6, 0.3, 0.5]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
   addUserKnob {22 darkblue l "<font color=\"#63628c\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.67, 0.3, 0.55]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
   addUserKnob {22 magenta l "<font color=\"#927a99\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.8, 0.2, 0.6]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
   addUserKnob {22 pink l "<font color=\"#997a89\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.92, 0.2, 0.6]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
   addUserKnob {26 S02 l " " T " "}
   addUserKnob {26 Ftools l "" +STARTLINE T "<font color=\"#1C1C1C\"> v1.2 - Franklin VFX - 2018"}
  }
  BackdropNode {
   inputs 0
   name BackdropNode4
   knobChanged "try:\n    listenedKnobs = \['text', 'position', 'name']\n    node = nuke.thisNode()\n    name = node.knob('name').value()\n    text = node.knob('text').value()\n    position = node.knob('position').value()\n    position = \"<\" + position + \">\"\n    label = node.knob('label').value()\n    \n    if nuke.thisKnob().name() in listenedKnobs:\n        if text == \"\":\n            if node.knob('position').value() == \"left\":\n                node.knob('label').setValue()\n            else:\n                node.knob('label').setValue(position + name)\n        else:\n            if node.knob('position').value() == \"left\":\n                node.knob('label').setValue(text)\n            else:\n                node.knob('label').setValue(position + text)\n                \n    elif nuke.thisKnob().name() == 'font_size':\n        fontSize = node.knob('font_size').value()\n        node.knob('note_font_size').setValue(fontSize)\nexcept:\n    pass"
   tile_color 0xb5b5b5ff
   label "<Left>before or after Flare"
   note_font_size 50
   xpos 3654
   ypos -1791
   bdwidth 406
   bdheight 401
   addUserKnob {20 F_VFX l BackdropNode}
   addUserKnob {43 text l Text}
   text "before or after Flare"
   addUserKnob {7 font_size l "Font Size" R 10 100}
   font_size 50
   addUserKnob {4 position l "" -STARTLINE M {Left Center}}
   addUserKnob {26 S01 l " " T " "}
   addUserKnob {22 grow l " <img src=\"F_scalep.png\">" -STARTLINE T "n=nuke.thisNode()\n\ndef grow(node=None,step=50):\n    try:\n        if not node:\n            n=nuke.selectedNode()\n        else:\n            n=node\n            n\['xpos'].setValue(n\['xpos'].getValue()-step)\n            n\['ypos'].setValue(n\['ypos'].getValue()-step)\n            n\['bdwidth'].setValue(n\['bdwidth'].getValue()+step*2)\n            n\['bdheight'].setValue(n\['bdheight'].getValue()+step*2)\n    except:\n        pass\ngrow(n,50)"}
   addUserKnob {22 shrink l " <img src=\"F_scalem.png\">" -STARTLINE T "n=nuke.thisNode()\n\ndef shrink(node=None,step=50):\n    try:\n        if not node:\n            n=nuke.selectedNode()\n        else:\n            n=node\n            n\['xpos'].setValue(n\['xpos'].getValue()+step)\n            n\['ypos'].setValue(n\['ypos'].getValue()+step)\n            n\['bdwidth'].setValue(n\['bdwidth'].getValue()-step*2)\n            n\['bdheight'].setValue(n\['bdheight'].getValue()-step*2)\n    except:\n        pass\nshrink(n,50)"}
   addUserKnob {22 colorandom l " <img src=\"ColorBars.png\">" -STARTLINE T "import colorsys, random\nn=nuke.thisNode()\nR,G,B= colorsys.hsv_to_rgb(random.random(),.1+random.random()*.15,.15+random.random()*.15)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ) )"}
   addUserKnob {22 darkgrey l "<font color=\"#232323\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.0, 0.0, 0.14]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
   addUserKnob {22 lightgrey l "<font color=\"#383838\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.0, 0.0, 0.22]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
   addUserKnob {22 red l "<font color=\"#8c3838\" size=6>■</font>" T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.0, 0.6, 0.55]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n" +STARTLINE}
   addUserKnob {22 orange l "<font color=\"#b28e59\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.1, 0.5, 0.7]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
   addUserKnob {22 yellow l "<font color=\"#ccc766\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.16, 0.5, 0.8]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
   addUserKnob {22 green l "<font color=\"#5d995b\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.33, 0.4, 0.6]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
   addUserKnob {22 cyan l "<font color=\"#72998f\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.46, 0.25, 0.6]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
   addUserKnob {22 blue l "<font color=\"#59687f\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.6, 0.3, 0.5]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
   addUserKnob {22 darkblue l "<font color=\"#63628c\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.67, 0.3, 0.55]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
   addUserKnob {22 magenta l "<font color=\"#927a99\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.8, 0.2, 0.6]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
   addUserKnob {22 pink l "<font color=\"#997a89\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.92, 0.2, 0.6]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
   addUserKnob {26 S02 l " " T " "}
   addUserKnob {26 Ftools l "" +STARTLINE T "<font color=\"#1C1C1C\"> v1.2 - Franklin VFX - 2018"}
  }
  BackdropNode {
   inputs 0
   name BackdropNode8
   knobChanged "try:\n    listenedKnobs = \['text', 'position', 'name']\n    node = nuke.thisNode()\n    name = node.knob('name').value()\n    text = node.knob('text').value()\n    position = node.knob('position').value()\n    position = \"<\" + position + \">\"\n    label = node.knob('label').value()\n    \n    if nuke.thisKnob().name() in listenedKnobs:\n        if text == \"\":\n            if node.knob('position').value() == \"left\":\n                node.knob('label').setValue()\n            else:\n                node.knob('label').setValue(position + name)\n        else:\n            if node.knob('position').value() == \"left\":\n                node.knob('label').setValue(text)\n            else:\n                node.knob('label').setValue(position + text)\n                \n    elif nuke.thisKnob().name() == 'font_size':\n        fontSize = node.knob('font_size').value()\n        node.knob('note_font_size').setValue(fontSize)\nexcept:\n    pass"
   tile_color 0x3e4149ff
   label "<Left>LIGHT DIRECTION"
   note_font_size 50
   xpos 1269
   ypos -4375
   bdwidth 424
   bdheight 501
   addUserKnob {20 F_VFX l BackdropNode}
   addUserKnob {43 text l Text}
   text "LIGHT DIRECTION"
   addUserKnob {7 font_size l "Font Size" R 10 100}
   font_size 50
   addUserKnob {4 position l "" -STARTLINE M {Left Center}}
   addUserKnob {26 S01 l " " T " "}
   addUserKnob {22 grow l " <img src=\"F_scalep.png\">" -STARTLINE T "n=nuke.thisNode()\n\ndef grow(node=None,step=50):\n    try:\n        if not node:\n            n=nuke.selectedNode()\n        else:\n            n=node\n            n\['xpos'].setValue(n\['xpos'].getValue()-step)\n            n\['ypos'].setValue(n\['ypos'].getValue()-step)\n            n\['bdwidth'].setValue(n\['bdwidth'].getValue()+step*2)\n            n\['bdheight'].setValue(n\['bdheight'].getValue()+step*2)\n    except:\n        pass\ngrow(n,50)"}
   addUserKnob {22 shrink l " <img src=\"F_scalem.png\">" -STARTLINE T "n=nuke.thisNode()\n\ndef shrink(node=None,step=50):\n    try:\n        if not node:\n            n=nuke.selectedNode()\n        else:\n            n=node\n            n\['xpos'].setValue(n\['xpos'].getValue()+step)\n            n\['ypos'].setValue(n\['ypos'].getValue()+step)\n            n\['bdwidth'].setValue(n\['bdwidth'].getValue()-step*2)\n            n\['bdheight'].setValue(n\['bdheight'].getValue()-step*2)\n    except:\n        pass\nshrink(n,50)"}
   addUserKnob {22 colorandom l " <img src=\"ColorBars.png\">" -STARTLINE T "import colorsys, random\nn=nuke.thisNode()\nR,G,B= colorsys.hsv_to_rgb(random.random(),.1+random.random()*.15,.15+random.random()*.15)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ) )"}
   addUserKnob {22 darkgrey l "<font color=\"#232323\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.0, 0.0, 0.14]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
   addUserKnob {22 lightgrey l "<font color=\"#383838\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.0, 0.0, 0.22]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
   addUserKnob {22 red l "<font color=\"#8c3838\" size=6>■</font>" T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.0, 0.6, 0.55]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n" +STARTLINE}
   addUserKnob {22 orange l "<font color=\"#b28e59\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.1, 0.5, 0.7]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
   addUserKnob {22 yellow l "<font color=\"#ccc766\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.16, 0.5, 0.8]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
   addUserKnob {22 green l "<font color=\"#5d995b\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.33, 0.4, 0.6]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
   addUserKnob {22 cyan l "<font color=\"#72998f\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.46, 0.25, 0.6]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
   addUserKnob {22 blue l "<font color=\"#59687f\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.6, 0.3, 0.5]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
   addUserKnob {22 darkblue l "<font color=\"#63628c\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.67, 0.3, 0.55]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
   addUserKnob {22 magenta l "<font color=\"#927a99\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.8, 0.2, 0.6]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
   addUserKnob {22 pink l "<font color=\"#997a89\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.92, 0.2, 0.6]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
   addUserKnob {26 S02 l " " T " "}
   addUserKnob {26 Ftools l "" +STARTLINE T "<font color=\"#1C1C1C\"> v1.2 - Franklin VFX - 2018"}
  }
  BackdropNode {
   inputs 0
   name BackdropNode10
   knobChanged "try:\n    listenedKnobs = \['text', 'position', 'name']\n    node = nuke.thisNode()\n    name = node.knob('name').value()\n    text = node.knob('text').value()\n    position = node.knob('position').value()\n    position = \"<\" + position + \">\"\n    label = node.knob('label').value()\n    \n    if nuke.thisKnob().name() in listenedKnobs:\n        if text == \"\":\n            if node.knob('position').value() == \"left\":\n                node.knob('label').setValue()\n            else:\n                node.knob('label').setValue(position + name)\n        else:\n            if node.knob('position').value() == \"left\":\n                node.knob('label').setValue(text)\n            else:\n                node.knob('label').setValue(position + text)\n                \n    elif nuke.thisKnob().name() == 'font_size':\n        fontSize = node.knob('font_size').value()\n        node.knob('note_font_size').setValue(fontSize)\nexcept:\n    pass"
   tile_color 0x383838ff
   label <Center>direction
   note_font_size 21
   xpos -384
   ypos -3156
   bdwidth 165
   bdheight 193
   z_order 1
   addUserKnob {20 F_VFX l BackdropNode}
   addUserKnob {43 text l Text}
   text direction
   addUserKnob {7 font_size l "Font Size" R 10 100}
   font_size 21
   addUserKnob {4 position l "" -STARTLINE M {Left Center}}
   position Center
   addUserKnob {26 S01 l " " T " "}
   addUserKnob {22 grow l " <img src=\"F_scalep.png\">" -STARTLINE T "n=nuke.thisNode()\n\ndef grow(node=None,step=50):\n    try:\n        if not node:\n            n=nuke.selectedNode()\n        else:\n            n=node\n            n\['xpos'].setValue(n\['xpos'].getValue()-step)\n            n\['ypos'].setValue(n\['ypos'].getValue()-step)\n            n\['bdwidth'].setValue(n\['bdwidth'].getValue()+step*2)\n            n\['bdheight'].setValue(n\['bdheight'].getValue()+step*2)\n    except:\n        pass\ngrow(n,50)"}
   addUserKnob {22 shrink l " <img src=\"F_scalem.png\">" -STARTLINE T "n=nuke.thisNode()\n\ndef shrink(node=None,step=50):\n    try:\n        if not node:\n            n=nuke.selectedNode()\n        else:\n            n=node\n            n\['xpos'].setValue(n\['xpos'].getValue()+step)\n            n\['ypos'].setValue(n\['ypos'].getValue()+step)\n            n\['bdwidth'].setValue(n\['bdwidth'].getValue()-step*2)\n            n\['bdheight'].setValue(n\['bdheight'].getValue()-step*2)\n    except:\n        pass\nshrink(n,50)"}
   addUserKnob {22 colorandom l " <img src=\"ColorBars.png\">" -STARTLINE T "import colorsys, random\nn=nuke.thisNode()\nR,G,B= colorsys.hsv_to_rgb(random.random(),.1+random.random()*.15,.15+random.random()*.15)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ) )"}
   addUserKnob {22 darkgrey l "<font color=\"#232323\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.0, 0.0, 0.14]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
   addUserKnob {22 lightgrey l "<font color=\"#383838\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.0, 0.0, 0.22]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
   addUserKnob {22 red l "<font color=\"#8c3838\" size=6>■</font>" T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.0, 0.6, 0.55]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n" +STARTLINE}
   addUserKnob {22 orange l "<font color=\"#b28e59\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.1, 0.5, 0.7]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
   addUserKnob {22 yellow l "<font color=\"#ccc766\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.16, 0.5, 0.8]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
   addUserKnob {22 green l "<font color=\"#5d995b\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.33, 0.4, 0.6]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
   addUserKnob {22 cyan l "<font color=\"#72998f\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.46, 0.25, 0.6]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
   addUserKnob {22 blue l "<font color=\"#59687f\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.6, 0.3, 0.5]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
   addUserKnob {22 darkblue l "<font color=\"#63628c\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.67, 0.3, 0.55]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
   addUserKnob {22 magenta l "<font color=\"#927a99\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.8, 0.2, 0.6]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
   addUserKnob {22 pink l "<font color=\"#997a89\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.92, 0.2, 0.6]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
   addUserKnob {26 S02 l " " T " "}
   addUserKnob {26 Ftools l "" +STARTLINE T "<font color=\"#1C1C1C\"> v1.2 - Franklin VFX - 2018"}
  }
  BackdropNode {
   inputs 0
   name BackdropNode11
   knobChanged "try:\n    listenedKnobs = \['text', 'position', 'name']\n    node = nuke.thisNode()\n    name = node.knob('name').value()\n    text = node.knob('text').value()\n    position = node.knob('position').value()\n    position = \"<\" + position + \">\"\n    label = node.knob('label').value()\n    \n    if nuke.thisKnob().name() in listenedKnobs:\n        if text == \"\":\n            if node.knob('position').value() == \"left\":\n                node.knob('label').setValue()\n            else:\n                node.knob('label').setValue(position + name)\n        else:\n            if node.knob('position').value() == \"left\":\n                node.knob('label').setValue(text)\n            else:\n                node.knob('label').setValue(position + text)\n                \n    elif nuke.thisKnob().name() == 'font_size':\n        fontSize = node.knob('font_size').value()\n        node.knob('note_font_size').setValue(fontSize)\nexcept:\n    pass"
   tile_color 0x383838ff
   label <Center>direction
   note_font_size 21
   xpos 1802
   ypos -3124
   bdwidth 165
   bdheight 193
   z_order 1
   addUserKnob {20 F_VFX l BackdropNode}
   addUserKnob {43 text l Text}
   text direction
   addUserKnob {7 font_size l "Font Size" R 10 100}
   font_size 21
   addUserKnob {4 position l "" -STARTLINE M {Left Center}}
   position Center
   addUserKnob {26 S01 l " " T " "}
   addUserKnob {22 grow l " <img src=\"F_scalep.png\">" -STARTLINE T "n=nuke.thisNode()\n\ndef grow(node=None,step=50):\n    try:\n        if not node:\n            n=nuke.selectedNode()\n        else:\n            n=node\n            n\['xpos'].setValue(n\['xpos'].getValue()-step)\n            n\['ypos'].setValue(n\['ypos'].getValue()-step)\n            n\['bdwidth'].setValue(n\['bdwidth'].getValue()+step*2)\n            n\['bdheight'].setValue(n\['bdheight'].getValue()+step*2)\n    except:\n        pass\ngrow(n,50)"}
   addUserKnob {22 shrink l " <img src=\"F_scalem.png\">" -STARTLINE T "n=nuke.thisNode()\n\ndef shrink(node=None,step=50):\n    try:\n        if not node:\n            n=nuke.selectedNode()\n        else:\n            n=node\n            n\['xpos'].setValue(n\['xpos'].getValue()+step)\n            n\['ypos'].setValue(n\['ypos'].getValue()+step)\n            n\['bdwidth'].setValue(n\['bdwidth'].getValue()-step*2)\n            n\['bdheight'].setValue(n\['bdheight'].getValue()-step*2)\n    except:\n        pass\nshrink(n,50)"}
   addUserKnob {22 colorandom l " <img src=\"ColorBars.png\">" -STARTLINE T "import colorsys, random\nn=nuke.thisNode()\nR,G,B= colorsys.hsv_to_rgb(random.random(),.1+random.random()*.15,.15+random.random()*.15)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ) )"}
   addUserKnob {22 darkgrey l "<font color=\"#232323\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.0, 0.0, 0.14]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
   addUserKnob {22 lightgrey l "<font color=\"#383838\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.0, 0.0, 0.22]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
   addUserKnob {22 red l "<font color=\"#8c3838\" size=6>■</font>" T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.0, 0.6, 0.55]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n" +STARTLINE}
   addUserKnob {22 orange l "<font color=\"#b28e59\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.1, 0.5, 0.7]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
   addUserKnob {22 yellow l "<font color=\"#ccc766\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.16, 0.5, 0.8]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
   addUserKnob {22 green l "<font color=\"#5d995b\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.33, 0.4, 0.6]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
   addUserKnob {22 cyan l "<font color=\"#72998f\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.46, 0.25, 0.6]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
   addUserKnob {22 blue l "<font color=\"#59687f\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.6, 0.3, 0.5]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
   addUserKnob {22 darkblue l "<font color=\"#63628c\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.67, 0.3, 0.55]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
   addUserKnob {22 magenta l "<font color=\"#927a99\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.8, 0.2, 0.6]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
   addUserKnob {22 pink l "<font color=\"#997a89\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.92, 0.2, 0.6]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
   addUserKnob {26 S02 l " " T " "}
   addUserKnob {26 Ftools l "" +STARTLINE T "<font color=\"#1C1C1C\"> v1.2 - Franklin VFX - 2018"}
  }
  BackdropNode {
   inputs 0
   name BackdropNode12
   knobChanged "try:\n    listenedKnobs = \['text', 'position', 'name']\n    node = nuke.thisNode()\n    name = node.knob('name').value()\n    text = node.knob('text').value()\n    position = node.knob('position').value()\n    position = \"<\" + position + \">\"\n    label = node.knob('label').value()\n    \n    if nuke.thisKnob().name() in listenedKnobs:\n        if text == \"\":\n            if node.knob('position').value() == \"left\":\n                node.knob('label').setValue()\n            else:\n                node.knob('label').setValue(position + name)\n        else:\n            if node.knob('position').value() == \"left\":\n                node.knob('label').setValue(text)\n            else:\n                node.knob('label').setValue(position + text)\n                \n    elif nuke.thisKnob().name() == 'font_size':\n        fontSize = node.knob('font_size').value()\n        node.knob('note_font_size').setValue(fontSize)\nexcept:\n    pass"
   tile_color 0x383838ff
   label <Center>direction
   note_font_size 21
   xpos 3772
   ypos -3164
   bdwidth 165
   bdheight 193
   z_order 1
   addUserKnob {20 F_VFX l BackdropNode}
   addUserKnob {43 text l Text}
   text direction
   addUserKnob {7 font_size l "Font Size" R 10 100}
   font_size 21
   addUserKnob {4 position l "" -STARTLINE M {Left Center}}
   position Center
   addUserKnob {26 S01 l " " T " "}
   addUserKnob {22 grow l " <img src=\"F_scalep.png\">" -STARTLINE T "n=nuke.thisNode()\n\ndef grow(node=None,step=50):\n    try:\n        if not node:\n            n=nuke.selectedNode()\n        else:\n            n=node\n            n\['xpos'].setValue(n\['xpos'].getValue()-step)\n            n\['ypos'].setValue(n\['ypos'].getValue()-step)\n            n\['bdwidth'].setValue(n\['bdwidth'].getValue()+step*2)\n            n\['bdheight'].setValue(n\['bdheight'].getValue()+step*2)\n    except:\n        pass\ngrow(n,50)"}
   addUserKnob {22 shrink l " <img src=\"F_scalem.png\">" -STARTLINE T "n=nuke.thisNode()\n\ndef shrink(node=None,step=50):\n    try:\n        if not node:\n            n=nuke.selectedNode()\n        else:\n            n=node\n            n\['xpos'].setValue(n\['xpos'].getValue()+step)\n            n\['ypos'].setValue(n\['ypos'].getValue()+step)\n            n\['bdwidth'].setValue(n\['bdwidth'].getValue()-step*2)\n            n\['bdheight'].setValue(n\['bdheight'].getValue()-step*2)\n    except:\n        pass\nshrink(n,50)"}
   addUserKnob {22 colorandom l " <img src=\"ColorBars.png\">" -STARTLINE T "import colorsys, random\nn=nuke.thisNode()\nR,G,B= colorsys.hsv_to_rgb(random.random(),.1+random.random()*.15,.15+random.random()*.15)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ) )"}
   addUserKnob {22 darkgrey l "<font color=\"#232323\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.0, 0.0, 0.14]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
   addUserKnob {22 lightgrey l "<font color=\"#383838\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.0, 0.0, 0.22]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
   addUserKnob {22 red l "<font color=\"#8c3838\" size=6>■</font>" T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.0, 0.6, 0.55]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n" +STARTLINE}
   addUserKnob {22 orange l "<font color=\"#b28e59\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.1, 0.5, 0.7]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
   addUserKnob {22 yellow l "<font color=\"#ccc766\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.16, 0.5, 0.8]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
   addUserKnob {22 green l "<font color=\"#5d995b\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.33, 0.4, 0.6]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
   addUserKnob {22 cyan l "<font color=\"#72998f\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.46, 0.25, 0.6]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
   addUserKnob {22 blue l "<font color=\"#59687f\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.6, 0.3, 0.5]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
   addUserKnob {22 darkblue l "<font color=\"#63628c\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.67, 0.3, 0.55]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
   addUserKnob {22 magenta l "<font color=\"#927a99\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.8, 0.2, 0.6]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
   addUserKnob {22 pink l "<font color=\"#997a89\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.92, 0.2, 0.6]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
   addUserKnob {26 S02 l " " T " "}
   addUserKnob {26 Ftools l "" +STARTLINE T "<font color=\"#1C1C1C\"> v1.2 - Franklin VFX - 2018"}
  }
  Axis3 {
   inputs 0
   rotate {{SmokeLightDirection*110} {SmokeLightDirection*110} {SmokeLightDirection*110}}
   name Axis4
   label "recalculate \nposition matrix"
   xpos 1442
   ypos -4113
  }
  Read {
   inputs 0
   file_type exr
   file "\[value filepath]CG_smoke/Front/gunsmoke_front_14.%08d.exr"
   localizationPolicy on
   first 1300
   last 1398
   origfirst 1300
   origlast 1398
   origset true
   version 36
   colorspace scene_linear
   in_colorspace scene_linear
   out_colorspace scene_linear
   name Read88
   xpos 395
   ypos -3483
   postage_stamp false
  }
  TimeClip {
   time ""
   first 1300
   last 1398
   frame_mode "start at"
   frame 1
   origfirst 1300
   origlast 1398
   origset true
   mask_metadata true
   name TimeClip88
   xpos 395
   ypos -3387
  }
  Read {
   inputs 0
   file_type exr
   file "\[value filepath]CG_smoke/Front/gunsmoke_front_01.%08d.exr"
   localizationPolicy on
   last 99
   origlast 99
   origset true
   version 45
   colorspace scene_linear
   in_colorspace scene_linear
   out_colorspace scene_linear
   name Read6
   xpos 285
   ypos -3483
   postage_stamp false
  }
  TimeClip {
   time ""
   last 99
   frame_mode "start at"
   frame 1
   origlast 99
   origset true
   mask_metadata true
   name TimeClip45
   xpos 285
   ypos -3387
  }
  Read {
   inputs 0
   file_type exr
   file "\[value filepath]CG_smoke/Front/gunsmoke_front_02.%08d.exr"
   localizationPolicy on
   first 100
   last 199
   origfirst 100
   origlast 199
   origset true
   version 42
   colorspace scene_linear
   in_colorspace scene_linear
   out_colorspace scene_linear
   name Read8
   xpos 175
   ypos -3483
   postage_stamp false
  }
  TimeClip {
   time ""
   first 100
   last 199
   frame_mode "start at"
   frame 1
   origfirst 100
   origlast 199
   origset true
   mask_metadata true
   name TimeClip46
   xpos 175
   ypos -3387
  }
  Read {
   inputs 0
   file_type exr
   file "\[value filepath]CG_smoke/Front/gunsmoke_front_13.%08d.exr"
   localizationPolicy on
   first 1200
   last 1299
   origfirst 1200
   origlast 1299
   origset true
   version 30
   colorspace scene_linear
   in_colorspace scene_linear
   out_colorspace scene_linear
   name Read26
   xpos 65
   ypos -3483
   postage_stamp false
  }
  TimeClip {
   time ""
   first 1200
   last 1299
   frame_mode "start at"
   frame 1
   origfirst 1200
   origlast 1299
   origset true
   mask_metadata true
   name TimeClip57
   xpos 65
   ypos -3387
  }
  Read {
   inputs 0
   file_type exr
   file "\[value filepath]CG_smoke/Front/gunsmoke_front_12.%08d.exr"
   localizationPolicy on
   first 1100
   last 1199
   origfirst 1100
   origlast 1199
   origset true
   version 28
   colorspace scene_linear
   in_colorspace scene_linear
   out_colorspace scene_linear
   name Read24
   xpos -45
   ypos -3484
   postage_stamp false
  }
  TimeClip {
   time ""
   first 1100
   last 1199
   frame_mode "start at"
   frame 1
   origfirst 1100
   origlast 1199
   origset true
   mask_metadata true
   name TimeClip56
   xpos -45
   ypos -3387
  }
  Read {
   inputs 0
   file_type exr
   file "\[value filepath]CG_smoke/Front/gunsmoke_front_11.%08d.exr"
   localizationPolicy on
   first 1000
   last 1099
   origfirst 1000
   origlast 1099
   origset true
   version 28
   colorspace scene_linear
   in_colorspace scene_linear
   out_colorspace scene_linear
   name Read22
   xpos -155
   ypos -3483
   postage_stamp false
  }
  TimeClip {
   time ""
   first 1000
   last 1099
   frame_mode "start at"
   frame 1
   origfirst 1000
   origlast 1099
   origset true
   mask_metadata true
   name TimeClip55
   xpos -155
   ypos -3387
  }
  Read {
   inputs 0
   file_type exr
   file "\[value filepath]CG_smoke/Front/gunsmoke_front_10.%08d.exr"
   localizationPolicy on
   first 900
   last 999
   origfirst 900
   origlast 999
   origset true
   version 32
   colorspace scene_linear
   in_colorspace scene_linear
   out_colorspace scene_linear
   name Read20
   xpos -265
   ypos -3483
   postage_stamp false
  }
  TimeClip {
   time ""
   first 900
   last 999
   frame_mode "start at"
   frame 1
   origfirst 900
   origlast 999
   origset true
   mask_metadata true
   name TimeClip54
   xpos -265
   ypos -3387
  }
  Read {
   inputs 0
   file_type exr
   file "\[value filepath]CG_smoke/Front/gunsmoke_front_09.%08d.exr"
   localizationPolicy on
   first 800
   last 899
   origfirst 800
   origlast 899
   origset true
   version 32
   colorspace scene_linear
   in_colorspace scene_linear
   out_colorspace scene_linear
   name Read19
   xpos -375
   ypos -3483
   postage_stamp false
  }
  TimeClip {
   time ""
   first 800
   last 899
   frame_mode "start at"
   frame 1
   origfirst 800
   origlast 899
   origset true
   mask_metadata true
   name TimeClip53
   xpos -375
   ypos -3387
  }
  Read {
   inputs 0
   file_type exr
   file "\[value filepath]CG_smoke/Front/gunsmoke_front_08.%08d.exr"
   localizationPolicy on
   first 700
   last 799
   origfirst 700
   origlast 799
   origset true
   version 34
   in_colorspace scene_linear
   out_colorspace scene_linear
   name Read18
   xpos -485
   ypos -3483
   postage_stamp false
  }
  TimeClip {
   time ""
   first 700
   last 799
   frame_mode "start at"
   frame 1
   origfirst 700
   origlast 799
   origset true
   mask_metadata true
   name TimeClip52
   xpos -485
   ypos -3387
  }
  Read {
   inputs 0
   file_type exr
   file "\[value filepath]CG_smoke/Front/gunsmoke_front_07.%08d.exr"
   localizationPolicy on
   first 600
   last 699
   origfirst 600
   origlast 699
   origset true
   version 34
   colorspace scene_linear
   in_colorspace scene_linear
   out_colorspace scene_linear
   name Read16
   xpos -595
   ypos -3483
   postage_stamp false
  }
  TimeClip {
   time ""
   first 600
   last 699
   frame_mode "start at"
   frame 1
   origfirst 600
   origlast 699
   origset true
   mask_metadata true
   name TimeClip51
   xpos -595
   ypos -3387
  }
  Read {
   inputs 0
   file_type exr
   file "\[value filepath]CG_smoke/Front/gunsmoke_front_06.%08d.exr"
   localizationPolicy on
   first 500
   last 599
   origfirst 500
   origlast 599
   origset true
   version 32
   colorspace scene_linear
   in_colorspace scene_linear
   out_colorspace scene_linear
   name Read14
   xpos -705
   ypos -3483
   postage_stamp false
  }
  TimeClip {
   time ""
   first 500
   last 599
   frame_mode "start at"
   frame 1
   origfirst 500
   origlast 599
   origset true
   mask_metadata true
   name TimeClip50
   xpos -705
   ypos -3387
  }
  Read {
   inputs 0
   file_type exr
   file "\[value filepath]CG_smoke/Front/gunsmoke_front_05.%08d.exr"
   localizationPolicy on
   first 400
   last 499
   origfirst 400
   origlast 499
   origset true
   version 40
   colorspace scene_linear
   in_colorspace scene_linear
   out_colorspace scene_linear
   name Read12
   xpos -815
   ypos -3483
   postage_stamp false
  }
  TimeClip {
   time ""
   first 400
   last 499
   frame_mode "start at"
   frame 1
   origfirst 400
   origlast 499
   origset true
   mask_metadata true
   name TimeClip49
   xpos -815
   ypos -3387
  }
  Read {
   inputs 0
   file_type exr
   file "\[value filepath]CG_smoke/Front/gunsmoke_front_04.%08d.exr"
   localizationPolicy on
   first 300
   last 399
   origfirst 300
   origlast 399
   origset true
   version 46
   colorspace scene_linear
   in_colorspace scene_linear
   out_colorspace scene_linear
   name Read11
   xpos -925
   ypos -3483
   postage_stamp false
  }
  TimeClip {
   time ""
   first 300
   last 399
   frame_mode "start at"
   frame 1
   origfirst 300
   origlast 399
   origset true
   mask_metadata true
   name TimeClip48
   xpos -925
   ypos -3387
  }
  Read {
   inputs 0
   file_type exr
   file "\[value filepath]CG_smoke/Front/gunsmoke_front_03.%08d.exr"
   localizationPolicy on
   first 200
   last 299
   origfirst 200
   origlast 299
   origset true
   version 48
   colorspace scene_linear
   in_colorspace scene_linear
   out_colorspace scene_linear
   name Read10
   xpos -1035
   ypos -3483
   postage_stamp false
  }
  TimeClip {
   time ""
   first 200
   last 299
   frame_mode "start at"
   frame 1
   origfirst 200
   origlast 299
   origset true
   mask_metadata true
   name TimeClip47
   xpos -1035
   ypos -3387
  }
  Switch {
   inputs 14
   which {{floor((frame%1)*13)}}
   name Switch10
   xpos -338
   ypos -3206
  }
  ColorMatrix {
   matrix {
       {{parent.Axis4.matrix.0(1)} {parent.Axis4.matrix.1(1)} {parent.Axis4.matrix.2(1)}}
       {{parent.Axis4.matrix.4(1)} {parent.Axis4.matrix.5(1)} {parent.Axis4.matrix.6(1)}}
       {{parent.Axis4.matrix.8(1)} {parent.Axis4.matrix.9(1)} {parent.Axis4.matrix.10(1)}}
     }
   name ColorMatrix1
   xpos -338
   ypos -3086
  }
  Saturation {
   saturation 0
   mode Average
   name Saturation1
   xpos -338
   ypos -3060
  }
  Clamp {
   channels rgba
   maximum_enable false
   name BlackClamp
   tile_color 0x37455eff
   xpos -338
   ypos -3014
  }
  Multiply {
   channels {rgba.red -rgba.green -rgba.blue none}
   value {{brighnesFrontSmoke}}
   name Multiply56
   xpos -338
   ypos -2916
  }
  Multiply {
   channels rgb
   value {{curve i x1 1 x6 6.685837269 15.73209286 28.1184845 42.99360657 62.65167618 86.59205627 118.5989609 157.6932526 207.0376129 268.3499146 346.7086487 454.8128052 685.1777954 1183.574829 2584.395264 4748.094238 23418}}
   mix {{curve*FadeSpeedSmoke x1 1 s0 L x86 0 s0}}
   name Multiply61
   label "fade out counter"
   xpos -338
   ypos -2854
  }
  Transform {
   scale {{ScaleFrontSmoke.w} {ScaleFrontSmoke.h}}
   center {960 540}
   shutteroffset centred
   name Transform22
   xpos -338
   ypos -2745
  }
  Transform {
   scale {{1+((curve-1)*ScaleAnimationFrontSmoke) x1 1 x16 1.405771905 x50 1.507072179 s0}}
   center {960 540}
   shutteroffset centred
   name Transform38
   label "scale animation"
   xpos -338
   ypos -2645
  }
  Reformat {
   resize height
   pbb true
   name Reformat1
   xpos -338
   ypos -2530
  }
push 0
  Switch {
   inputs 2
   which {{ActivateFrontSmoke}}
   name Switch9
   xpos -338
   ypos -2416
  }
  TimeOffset {
   time_offset {{StartOfSmoke}}
   time ""
   name TimeOffset13
   xpos -338
   ypos -1594
  }
  NoOp {
   name Anchor_220a2be282
   help "Stamps by Adrian Pueyo and Alexey Kuchinski.\nUpdated May 18 2021"
   onCreate "if nuke.GUI:\n    try:\n        import stamps; stamps.anchorOnCreate()\n    except:\n        pass"
   knobChanged stamps.anchorKnobChanged()
   autolabel "nuke.thisNode().knob(\"title\").value()"
   tile_color 0xffffff01
   note_font_size 20
   xpos -338
   ypos -1548
   addUserKnob {20 anchor_tab l "Anchor Stamp"}
   addUserKnob {26 identifier -STARTLINE +HIDDEN T anchor}
   addUserKnob {1 title l Title: t "Displayed name on the Node Graph for this Stamp and its Anchor.\nIMPORTANT: This is only for display purposes, and is different from the real/internal name of the Stamps."}
   title smoke_FRONT
   addUserKnob {26 prev_title l "" +STARTLINE +HIDDEN T smoke_FRONT}
   addUserKnob {26 prev_name l "" +STARTLINE +HIDDEN T Anchor_220a2be282}
   addUserKnob {3 showing l "" +STARTLINE +HIDDEN}
   addUserKnob {1 tags l Tags t "Comma-separated tags you can define for each Anchor, that will help you find it when invoking the Stamp Selector by pressing the Stamps shortkey with nothing selected."}
   tags 2D,
   addUserKnob {26 line1 l "" +STARTLINE}
   addUserKnob {26 stamps_label l Stamps: T " "}
   addUserKnob {22 createStamp l new t "Create a new Stamp for this Anchor." -STARTLINE T stamps.stampCreateWired(nuke.thisNode())}
   addUserKnob {22 selectStamps l select t "Reconnect all of this Anchor's Stamps." -STARTLINE T stamps.wiredSelectSimilar(nuke.thisNode().name())}
   addUserKnob {22 reconnectStamps l reconnect -STARTLINE T stamps.anchorReconnectWired()}
   addUserKnob {22 zoomNext l "zoom next" t "Navigate to this Anchor's next Stamp on the Node Graph." -STARTLINE T stamps.wiredZoomNext(nuke.thisNode().name())}
   addUserKnob {26 line2 l "" +STARTLINE}
   addUserKnob {22 buttonHelp l Help -STARTLINE T stamps.showHelp()}
   addUserKnob {26 version l " " t "Stamps by Adrian Pueyo and Alexey Kuchinski.\nUpdated May 18 2021." -STARTLINE T "<a href=\"http://www.nukepedia.com/gizmos/other/stamps\" style=\"color:#666;text-decoration: none;\"><span style=\"color:#666\"> <big>Stamps v1.1</big></b></a>"}
  }
set N586971d0 [stack 0]
  PostageStamp {
   name Stamp4
   help "Stamps by Adrian Pueyo and Alexey Kuchinski.\nUpdated May 18 2021"
   onCreate "if nuke.GUI:\n    try:\n        import stamps; stamps.wiredOnCreate()\n    except:\n        pass\n"
   knobChanged "import stamps; stamps.wiredKnobChanged()"
   autolabel "nuke.thisNode().knob(\"title\").value()"
   tile_color 0x1000001
   note_font "Bitstream Vera Sans"
   note_font_size 20
   xpos -4
   ypos -652
   hide_input true
   addUserKnob {20 wired_tab l "Wired Stamp"}
   addUserKnob {26 identifier -STARTLINE +HIDDEN T wired}
   addUserKnob {3 lockCallbacks l "" +STARTLINE +HIDDEN}
   addUserKnob {6 toReconnect -STARTLINE +HIDDEN}
   addUserKnob {1 title l Title: t "Displayed name on the Node Graph for this Stamp and its Anchor.\nIMPORTANT: This is only for display purposes, and is different from the real/internal name of the Stamps."}
   title smoke_FRONT
   addUserKnob {26 prev_title l "" +STARTLINE +HIDDEN T smoke_FRONT}
   addUserKnob {26 tags l Tags: t "Tags of this stamp's Anchor, for information purpose only.\nClick \"show anchor\" to change them." T <i>2D</i>}
   addUserKnob {26 backdrops l Backdrops: t "Labels of backdrop nodes which contain this stamp's Anchor." T "<i><Left>before or after Flare</i>"}
   addUserKnob {26 line1 l "" +STARTLINE}
   addUserKnob {6 postageStamp_show l "postage stamp" t "Enable the postage stamp thumbnail in this node.\nYou're seeing this because the class of this node includes the postage_stamp knob." +STARTLINE}
   addUserKnob {26 anchor_label l Anchor: T " "}
   addUserKnob {22 show_anchor l " show anchor " t "Show the properties panel for this Stamp's Anchor." -STARTLINE T stamps.wiredShowAnchor()}
   addUserKnob {22 zoom_anchor l "zoom anchor" t "Navigate to this Stamp's Anchor on the Node Graph." -STARTLINE T stamps.wiredZoomAnchor()}
   addUserKnob {26 stamps_label l Stamps: T " "}
   addUserKnob {22 zoomNext l " zoom next " t "Navigate to this Stamp's next sibling on the Node Graph." -STARTLINE T stamps.wiredZoomNext()}
   addUserKnob {22 selectSimilar l " select similar " t "Select all similar Stamps to this one on the Node Graph." -STARTLINE T stamps.wiredSelectSimilar()}
   addUserKnob {26 space_1 l "" +STARTLINE T " "}
   addUserKnob {26 reconnect_label l Reconnect: t "Reconnect by the stored Anchor name." T " "}
   addUserKnob {22 reconnect_this l this t "Reconnect this Stamp to its Anchor, by its stored Anchor name." -STARTLINE T "n = nuke.thisNode()\ntry:\n    n.setInput(0,nuke.toNode(n.knob(\"anchor\").value()))\nexcept:\n    nuke.message(\"Unable to reconnect.\")\ntry:\n    import stamps\n    stamps.wiredGetStyle(n)\nexcept:\n    pass\n"}
   addUserKnob {22 reconnect_similar l similar t "Reconnect this Stamp and similar ones to their Anchor, by their stored anchor name." -STARTLINE T stamps.wiredReconnectSimilar()}
   addUserKnob {22 reconnect_all l all t "Reconnect all the Stamps to their Anchors, by their stored anchor names." -STARTLINE T stamps.wiredReconnectAll()}
   addUserKnob {26 space_2 l "" +STARTLINE T " "}
   addUserKnob {20 advanced_reconnection l "Advanced Reconnection" n 2}
   addUserKnob {26 reconnect_by_title_label l "<font color=gold>By Title:" t "Reconnect by searching for a matching title." T " "}
   addUserKnob {22 reconnect_by_title_this l this t "Look for an Anchor that shares this Stamp's title, and connect this Stamp to it.\nIMPORTANT: Use this carefully, and only when the normal reconnection doesn't work." -STARTLINE T stamps.wiredReconnectByTitle()}
   addUserKnob {22 reconnect_by_title_similar l similar t "Look for an Anchor that shares this Stamp's title, and connect this Stamp and similar ones to it.\nIMPORTANT: Use this carefully, and only when the normal reconnection doesn't work." -STARTLINE T stamps.wiredReconnectByTitleSimilar()}
   addUserKnob {22 reconnect_by_title_selected l selected t "For each Stamp selected, look for an Anchor that shares its title, and connect to it.\nIMPORTANT: Use this carefully, and only when the normal reconnection doesn't work." -STARTLINE T stamps.wiredReconnectByTitleSelected()}
   addUserKnob {26 reconnect_by_selection_label l "<font color=orangered>By Selection:" t "Force reconnect to a selected Anchor." T " "}
   addUserKnob {22 reconnect_by_selection_this l this t "Force reconnect this Stamp to a selected Anchor, whatever its name or title.\nIMPORTANT: Use this carefully, and only when the normal reconnection doesn't work." -STARTLINE T stamps.wiredReconnectBySelection()}
   addUserKnob {22 reconnect_by_selection_similar l similar t "Force reconnect this Stamp and similar ones to a selected Anchor, whatever its name or title.\nIMPORTANT: Use this carefully, and only when the normal reconnection doesn't work." -STARTLINE T stamps.wiredReconnectBySelectionSimilar()}
   addUserKnob {22 reconnect_by_selection_selected l selected t "Force reconnect all selected Stamps to an also selected Anchor, whatever its name or title.\nIMPORTANT: Use this carefully, and only when the normal reconnection doesn't work." -STARTLINE T stamps.wiredReconnectBySelectionSelected()}
   addUserKnob {1 anchor l Anchor}
   anchor Anchor_220a2be282
   addUserKnob {6 auto_reconnect_by_title l "<font color=#ED9977>&nbsp; auto-reconnect by title" t "When creating this stamp again (like on copy-paste), auto-reconnect it by title instead of doing it by the saved anchor's name, and auto-turn this off immediately.\nIMPORTANT: Should be off by default. Only use this for setting up templates." +STARTLINE}
   addUserKnob {26 line2 l "" +STARTLINE}
   addUserKnob {22 buttonHelp l Help -STARTLINE T stamps.showHelp()}
   addUserKnob {26 version l " " t "Stamps by Adrian Pueyo and Alexey Kuchinski.\nUpdated May 18 2021." -STARTLINE T "<a href=\"http://www.nukepedia.com/gizmos/other/stamps\" style=\"color:#666;text-decoration: none;\"><span style=\"color:#666\"> <big>Stamps v1.1</big></b></a>"}
  }
  Dot {
   name Dot1
   xpos 30
   ypos -604
  }
  Read {
   inputs 0
   file_type exr
   file "\[value filepath]CG_smoke/Top/gunsmoke_top_14.%08d.exr"
   localizationPolicy on
   first 1300
   last 1398
   origfirst 1300
   origlast 1398
   origset true
   version 28
   colorspace scene_linear
   in_colorspace scene_linear
   out_colorspace scene_linear
   name Read90
   xpos 4512
   ypos -3451
   postage_stamp false
  }
  TimeClip {
   time ""
   first 1300
   last 1398
   frame_mode "start at"
   frame 1
   origfirst 1300
   origlast 1398
   origset true
   mask_metadata true
   name TimeClip89
   xpos 4512
   ypos -3353
  }
  Read {
   inputs 0
   file_type exr
   file "\[value filepath]CG_smoke/Top/gunsmoke_top_13.%08d.exr"
   localizationPolicy on
   first 1200
   last 1299
   origfirst 1200
   origlast 1299
   origset true
   version 28
   colorspace scene_linear
   in_colorspace scene_linear
   out_colorspace scene_linear
   name Read78
   xpos 4402
   ypos -3449
   postage_stamp false
  }
  TimeClip {
   time ""
   first 1200
   last 1299
   frame_mode "start at"
   frame 1
   origfirst 1200
   origlast 1299
   origset true
   mask_metadata true
   name TimeClip83
   xpos 4402
   ypos -3353
  }
  Read {
   inputs 0
   file_type exr
   file "\[value filepath]CG_smoke/Top/gunsmoke_top_12.%08d.exr"
   localizationPolicy on
   first 1100
   last 1199
   origfirst 1100
   origlast 1199
   origset true
   version 32
   colorspace scene_linear
   in_colorspace scene_linear
   out_colorspace scene_linear
   name Read76
   xpos 4292
   ypos -3449
   postage_stamp false
  }
  TimeClip {
   time ""
   first 1100
   last 1199
   frame_mode "start at"
   frame 1
   origfirst 1100
   origlast 1199
   origset true
   mask_metadata true
   name TimeClip82
   xpos 4292
   ypos -3353
  }
  Read {
   inputs 0
   file_type exr
   file "\[value filepath]CG_smoke/Top/gunsmoke_top_11.%08d.exr"
   localizationPolicy on
   first 1000
   last 1099
   origfirst 1000
   origlast 1099
   origset true
   version 30
   colorspace scene_linear
   in_colorspace scene_linear
   out_colorspace scene_linear
   name Read74
   xpos 4182
   ypos -3449
   postage_stamp false
  }
  TimeClip {
   time ""
   first 1000
   last 1099
   frame_mode "start at"
   frame 1
   origfirst 1000
   origlast 1099
   origset true
   mask_metadata true
   name TimeClip81
   xpos 4182
   ypos -3353
  }
  Read {
   inputs 0
   file_type exr
   file "\[value filepath]CG_smoke/Top/gunsmoke_top_10.%08d.exr"
   localizationPolicy on
   first 900
   last 999
   origfirst 900
   origlast 999
   origset true
   version 30
   colorspace scene_linear
   in_colorspace scene_linear
   out_colorspace scene_linear
   name Read72
   xpos 4072
   ypos -3449
   postage_stamp false
  }
  TimeClip {
   time ""
   first 900
   last 999
   frame_mode "start at"
   frame 1
   origfirst 900
   origlast 999
   origset true
   mask_metadata true
   name TimeClip80
   xpos 4072
   ypos -3353
  }
  Read {
   inputs 0
   file_type exr
   file "\[value filepath]CG_smoke/Top/gunsmoke_top_09.%08d.exr"
   localizationPolicy on
   first 800
   last 899
   origfirst 800
   origlast 899
   origset true
   version 33
   colorspace scene_linear
   in_colorspace scene_linear
   out_colorspace scene_linear
   name Read70
   xpos 3962
   ypos -3451
   postage_stamp false
  }
  TimeClip {
   time ""
   first 800
   last 899
   frame_mode "start at"
   frame 1
   origfirst 800
   origlast 899
   origset true
   mask_metadata true
   name TimeClip79
   xpos 3962
   ypos -3353
  }
  Read {
   inputs 0
   file_type exr
   file "\[value filepath]CG_smoke/Top/gunsmoke_top_08.%08d.exr"
   localizationPolicy on
   first 700
   last 799
   origfirst 700
   origlast 799
   origset true
   version 30
   colorspace scene_linear
   in_colorspace scene_linear
   out_colorspace scene_linear
   name Read68
   xpos 3852
   ypos -3449
   postage_stamp false
  }
  TimeClip {
   time ""
   first 700
   last 799
   frame_mode "start at"
   frame 1
   origfirst 700
   origlast 799
   origset true
   mask_metadata true
   name TimeClip78
   xpos 3852
   ypos -3353
  }
  Read {
   inputs 0
   file_type exr
   file "\[value filepath]CG_smoke/Top/gunsmoke_top_07.%08d.exr"
   localizationPolicy on
   first 600
   last 699
   origfirst 600
   origlast 699
   origset true
   version 30
   colorspace scene_linear
   in_colorspace scene_linear
   out_colorspace scene_linear
   name Read66
   xpos 3742
   ypos -3449
   postage_stamp false
  }
  TimeClip {
   time ""
   first 600
   last 699
   frame_mode "start at"
   frame 1
   origfirst 600
   origlast 699
   origset true
   mask_metadata true
   name TimeClip77
   xpos 3742
   ypos -3353
  }
  Read {
   inputs 0
   file_type exr
   file "\[value filepath]CG_smoke/Top/gunsmoke_top_06.%08d.exr"
   localizationPolicy on
   first 500
   last 599
   origfirst 500
   origlast 599
   origset true
   version 34
   colorspace scene_linear
   in_colorspace scene_linear
   out_colorspace scene_linear
   name Read64
   xpos 3632
   ypos -3449
   postage_stamp false
  }
  TimeClip {
   time ""
   first 500
   last 599
   frame_mode "start at"
   frame 1
   origfirst 500
   origlast 599
   origset true
   mask_metadata true
   name TimeClip76
   xpos 3632
   ypos -3353
  }
  Read {
   inputs 0
   file_type exr
   file "\[value filepath]CG_smoke/Top/gunsmoke_top_05.%08d.exr"
   localizationPolicy on
   first 400
   last 499
   origfirst 400
   origlast 499
   origset true
   version 30
   colorspace scene_linear
   in_colorspace scene_linear
   out_colorspace scene_linear
   name Read62
   xpos 3522
   ypos -3450
   postage_stamp false
  }
  TimeClip {
   time ""
   first 400
   last 499
   frame_mode "start at"
   frame 1
   origfirst 400
   origlast 499
   origset true
   mask_metadata true
   name TimeClip75
   xpos 3522
   ypos -3353
  }
  Read {
   inputs 0
   file_type exr
   file "\[value filepath]CG_smoke/Top/gunsmoke_top_04.%08d.exr"
   localizationPolicy on
   first 300
   last 399
   origfirst 300
   origlast 399
   origset true
   version 32
   colorspace scene_linear
   in_colorspace scene_linear
   out_colorspace scene_linear
   name Read60
   xpos 3412
   ypos -3449
   postage_stamp false
  }
  TimeClip {
   time ""
   first 300
   last 399
   frame_mode "start at"
   frame 1
   origfirst 300
   origlast 399
   origset true
   mask_metadata true
   name TimeClip74
   xpos 3412
   ypos -3353
  }
  Read {
   inputs 0
   file_type exr
   file "\[value filepath]CG_smoke/Top/gunsmoke_top_03.%08d.exr"
   localizationPolicy on
   first 200
   last 299
   origfirst 200
   origlast 299
   origset true
   version 32
   colorspace scene_linear
   in_colorspace scene_linear
   out_colorspace scene_linear
   name Read58
   xpos 3302
   ypos -3449
   postage_stamp false
  }
  TimeClip {
   time ""
   first 200
   last 299
   frame_mode "start at"
   frame 1
   origfirst 200
   origlast 299
   origset true
   mask_metadata true
   name TimeClip73
   xpos 3302
   ypos -3353
  }
  Read {
   inputs 0
   file_type exr
   file "\[value filepath]CG_smoke/Top/gunsmoke_top_02.%08d.exr"
   localizationPolicy on
   first 100
   last 199
   origfirst 100
   origlast 199
   origset true
   version 34
   colorspace scene_linear
   in_colorspace scene_linear
   out_colorspace scene_linear
   name Read56
   xpos 3192
   ypos -3449
   postage_stamp false
  }
  TimeClip {
   time ""
   first 100
   last 199
   frame_mode "start at"
   frame 1
   origfirst 100
   origlast 199
   origset true
   mask_metadata true
   name TimeClip72
   xpos 3192
   ypos -3353
  }
  Read {
   inputs 0
   file_type exr
   file "\[value filepath]CG_smoke/Top/gunsmoke_top_01.%08d.exr"
   localizationPolicy on
   last 99
   origlast 99
   origset true
   version 40
   colorspace scene_linear
   in_colorspace scene_linear
   out_colorspace scene_linear
   name Read54
   xpos 3082
   ypos -3449
   postage_stamp false
  }
  TimeClip {
   time ""
   last 99
   frame_mode "start at"
   frame 1
   origlast 99
   origset true
   mask_metadata true
   name TimeClip71
   xpos 3082
   ypos -3353
  }
  Switch {
   inputs 14
   which {{floor((frame%1)*13)}}
   name Switch13
   xpos 3815
   ypos -3206
  }
  ColorMatrix {
   matrix {
       {{parent.Axis4.matrix.0(1)} {parent.Axis4.matrix.1(1)} {parent.Axis4.matrix.2(1)}}
       {{parent.Axis4.matrix.4(1)} {parent.Axis4.matrix.5(1)} {parent.Axis4.matrix.6(1)}}
       {{parent.Axis4.matrix.8(1)} {parent.Axis4.matrix.9(1)} {parent.Axis4.matrix.10(1)}}
     }
   name ColorMatrix3
   xpos 3815
   ypos -3082
  }
  Saturation {
   saturation 0
   mode Average
   name Saturation3
   xpos 3815
   ypos -3050
  }
  Clamp {
   channels rgba
   maximum_enable false
   name BlackClamp2
   tile_color 0x37455eff
   xpos 3815
   ypos -3024
  }
  Multiply {
   channels {-rgba.red -rgba.green rgba.blue none}
   value {{brightnesSideSmoke}}
   name Multiply58
   xpos 3815
   ypos -2922
  }
  Multiply {
   channels rgb
   value {{curve i x1 1 x6 6.685837269 15.73209286 28.1184845 42.99360657 62.65167618 86.59205627 118.5989609 157.6932526 207.0376129 268.3499146 346.7086487 454.8128052 685.1777954 1183.574829 2584.395264 4748.094238 23418}}
   mix {{curve*FadeSpeedSmoke x1 1 s0 L x86 0 s0}}
   name Multiply2
   label "fade out counter"
   xpos 3815
   ypos -2851
  }
  Transform {
   scale {-1 1}
   center {960 540}
   shutteroffset centred
   name Transform2
   xpos 3815
   ypos -2694
  }
  Transform {
   scale {{ScaleSideSmoke.w} {ScaleSideSmoke.h}}
   center {960 540}
   shutteroffset centred
   name Transform40
   xpos 3815
   ypos -2659
  }
  Transform {
   scale {{1+((curve-1)*ScaleAnimationSideSmoke) x1 1 x16 1.405771905 x50 1.507072179 s0}}
   center {960 540}
   shutteroffset centred
   name Transform42
   label "scale animation"
   xpos 3815
   ypos -2598
  }
  Reformat {
   resize height
   pbb true
   name Reformat3
   xpos 3815
   ypos -2530
  }
push 0
  Switch {
   inputs 2
   which {{ActivateSideSmoke}}
   name Switch7
   xpos 3815
   ypos -2401
  }
  TimeOffset {
   time_offset {{StartOfSmoke}}
   time ""
   name TimeOffset2
   xpos 3815
   ypos -1513
  }
  NoOp {
   name Anchor_25b668170c
   help "Stamps by Adrian Pueyo and Alexey Kuchinski.\nUpdated May 18 2021"
   onCreate "if nuke.GUI:\n    try:\n        import stamps; stamps.anchorOnCreate()\n    except:\n        pass"
   knobChanged stamps.anchorKnobChanged()
   autolabel "nuke.thisNode().knob(\"title\").value()"
   tile_color 0xffffff01
   note_font_size 20
   xpos 3815
   ypos -1467
   addUserKnob {20 anchor_tab l "Anchor Stamp"}
   addUserKnob {26 identifier -STARTLINE +HIDDEN T anchor}
   addUserKnob {1 title l Title: t "Displayed name on the Node Graph for this Stamp and its Anchor.\nIMPORTANT: This is only for display purposes, and is different from the real/internal name of the Stamps."}
   title smoke_TOP
   addUserKnob {26 prev_title l "" +STARTLINE +HIDDEN T smoke_TOP}
   addUserKnob {26 prev_name l "" +STARTLINE +HIDDEN T Anchor_25b668170c}
   addUserKnob {3 showing l "" +STARTLINE +HIDDEN}
   addUserKnob {1 tags l Tags t "Comma-separated tags you can define for each Anchor, that will help you find it when invoking the Stamp Selector by pressing the Stamps shortkey with nothing selected."}
   tags 2D,
   addUserKnob {26 line1 l "" +STARTLINE}
   addUserKnob {26 stamps_label l Stamps: T " "}
   addUserKnob {22 createStamp l new t "Create a new Stamp for this Anchor." -STARTLINE T stamps.stampCreateWired(nuke.thisNode())}
   addUserKnob {22 selectStamps l select t "Reconnect all of this Anchor's Stamps." -STARTLINE T stamps.wiredSelectSimilar(nuke.thisNode().name())}
   addUserKnob {22 reconnectStamps l reconnect -STARTLINE T stamps.anchorReconnectWired()}
   addUserKnob {22 zoomNext l "zoom next" t "Navigate to this Anchor's next Stamp on the Node Graph." -STARTLINE T stamps.wiredZoomNext(nuke.thisNode().name())}
   addUserKnob {26 line2 l "" +STARTLINE}
   addUserKnob {22 buttonHelp l Help -STARTLINE T stamps.showHelp()}
   addUserKnob {26 version l " " t "Stamps by Adrian Pueyo and Alexey Kuchinski.\nUpdated May 18 2021." -STARTLINE T "<a href=\"http://www.nukepedia.com/gizmos/other/stamps\" style=\"color:#666;text-decoration: none;\"><span style=\"color:#666\"> <big>Stamps v1.1</big></b></a>"}
  }
set N58d70c10 [stack 0]
  PostageStamp {
   name Stamp5
   help "Stamps by Adrian Pueyo and Alexey Kuchinski.\nUpdated May 18 2021"
   onCreate "if nuke.GUI:\n    try:\n        import stamps; stamps.wiredOnCreate()\n    except:\n        pass\n"
   knobChanged "import stamps; stamps.wiredKnobChanged()"
   autolabel "nuke.thisNode().knob(\"title\").value()"
   tile_color 0x1000001
   note_font "Bitstream Vera Sans"
   note_font_size 20
   xpos 121
   ypos -652
   hide_input true
   addUserKnob {20 wired_tab l "Wired Stamp"}
   addUserKnob {26 identifier -STARTLINE +HIDDEN T wired}
   addUserKnob {3 lockCallbacks l "" +STARTLINE +HIDDEN}
   addUserKnob {6 toReconnect -STARTLINE +HIDDEN}
   addUserKnob {1 title l Title: t "Displayed name on the Node Graph for this Stamp and its Anchor.\nIMPORTANT: This is only for display purposes, and is different from the real/internal name of the Stamps."}
   title smoke_TOP
   addUserKnob {26 prev_title l "" +STARTLINE +HIDDEN T smoke_TOP}
   addUserKnob {26 tags l Tags: t "Tags of this stamp's Anchor, for information purpose only.\nClick \"show anchor\" to change them." T <i>2D</i>}
   addUserKnob {26 backdrops l Backdrops: t "Labels of backdrop nodes which contain this stamp's Anchor." T "<i><Left>before or after Flare</i>"}
   addUserKnob {26 line1 l "" +STARTLINE}
   addUserKnob {6 postageStamp_show l "postage stamp" t "Enable the postage stamp thumbnail in this node.\nYou're seeing this because the class of this node includes the postage_stamp knob." +STARTLINE}
   addUserKnob {26 anchor_label l Anchor: T " "}
   addUserKnob {22 show_anchor l " show anchor " t "Show the properties panel for this Stamp's Anchor." -STARTLINE T stamps.wiredShowAnchor()}
   addUserKnob {22 zoom_anchor l "zoom anchor" t "Navigate to this Stamp's Anchor on the Node Graph." -STARTLINE T stamps.wiredZoomAnchor()}
   addUserKnob {26 stamps_label l Stamps: T " "}
   addUserKnob {22 zoomNext l " zoom next " t "Navigate to this Stamp's next sibling on the Node Graph." -STARTLINE T stamps.wiredZoomNext()}
   addUserKnob {22 selectSimilar l " select similar " t "Select all similar Stamps to this one on the Node Graph." -STARTLINE T stamps.wiredSelectSimilar()}
   addUserKnob {26 space_1 l "" +STARTLINE T " "}
   addUserKnob {26 reconnect_label l Reconnect: t "Reconnect by the stored Anchor name." T " "}
   addUserKnob {22 reconnect_this l this t "Reconnect this Stamp to its Anchor, by its stored Anchor name." -STARTLINE T "n = nuke.thisNode()\ntry:\n    n.setInput(0,nuke.toNode(n.knob(\"anchor\").value()))\nexcept:\n    nuke.message(\"Unable to reconnect.\")\ntry:\n    import stamps\n    stamps.wiredGetStyle(n)\nexcept:\n    pass\n"}
   addUserKnob {22 reconnect_similar l similar t "Reconnect this Stamp and similar ones to their Anchor, by their stored anchor name." -STARTLINE T stamps.wiredReconnectSimilar()}
   addUserKnob {22 reconnect_all l all t "Reconnect all the Stamps to their Anchors, by their stored anchor names." -STARTLINE T stamps.wiredReconnectAll()}
   addUserKnob {26 space_2 l "" +STARTLINE T " "}
   addUserKnob {20 advanced_reconnection l "Advanced Reconnection" n 2}
   addUserKnob {26 reconnect_by_title_label l "<font color=gold>By Title:" t "Reconnect by searching for a matching title." T " "}
   addUserKnob {22 reconnect_by_title_this l this t "Look for an Anchor that shares this Stamp's title, and connect this Stamp to it.\nIMPORTANT: Use this carefully, and only when the normal reconnection doesn't work." -STARTLINE T stamps.wiredReconnectByTitle()}
   addUserKnob {22 reconnect_by_title_similar l similar t "Look for an Anchor that shares this Stamp's title, and connect this Stamp and similar ones to it.\nIMPORTANT: Use this carefully, and only when the normal reconnection doesn't work." -STARTLINE T stamps.wiredReconnectByTitleSimilar()}
   addUserKnob {22 reconnect_by_title_selected l selected t "For each Stamp selected, look for an Anchor that shares its title, and connect to it.\nIMPORTANT: Use this carefully, and only when the normal reconnection doesn't work." -STARTLINE T stamps.wiredReconnectByTitleSelected()}
   addUserKnob {26 reconnect_by_selection_label l "<font color=orangered>By Selection:" t "Force reconnect to a selected Anchor." T " "}
   addUserKnob {22 reconnect_by_selection_this l this t "Force reconnect this Stamp to a selected Anchor, whatever its name or title.\nIMPORTANT: Use this carefully, and only when the normal reconnection doesn't work." -STARTLINE T stamps.wiredReconnectBySelection()}
   addUserKnob {22 reconnect_by_selection_similar l similar t "Force reconnect this Stamp and similar ones to a selected Anchor, whatever its name or title.\nIMPORTANT: Use this carefully, and only when the normal reconnection doesn't work." -STARTLINE T stamps.wiredReconnectBySelectionSimilar()}
   addUserKnob {22 reconnect_by_selection_selected l selected t "Force reconnect all selected Stamps to an also selected Anchor, whatever its name or title.\nIMPORTANT: Use this carefully, and only when the normal reconnection doesn't work." -STARTLINE T stamps.wiredReconnectBySelectionSelected()}
   addUserKnob {1 anchor l Anchor}
   anchor Anchor_25b668170c
   addUserKnob {6 auto_reconnect_by_title l "<font color=#ED9977>&nbsp; auto-reconnect by title" t "When creating this stamp again (like on copy-paste), auto-reconnect it by title instead of doing it by the saved anchor's name, and auto-turn this off immediately.\nIMPORTANT: Should be off by default. Only use this for setting up templates." +STARTLINE}
   addUserKnob {26 line2 l "" +STARTLINE}
   addUserKnob {22 buttonHelp l Help -STARTLINE T stamps.showHelp()}
   addUserKnob {26 version l " " t "Stamps by Adrian Pueyo and Alexey Kuchinski.\nUpdated May 18 2021." -STARTLINE T "<a href=\"http://www.nukepedia.com/gizmos/other/stamps\" style=\"color:#666;text-decoration: none;\"><span style=\"color:#666\"> <big>Stamps v1.1</big></b></a>"}
  }
  Read {
   inputs 0
   file_type exr
   file "\[value filepath]CG_smoke/Side/gunsmoke_side_14.%08d.exr"
   localizationPolicy on
   first 1300
   last 1398
   origfirst 1300
   origlast 1398
   origset true
   version 42
   colorspace scene_linear
   in_colorspace scene_linear
   out_colorspace scene_linear
   name Read86
   xpos 2610
   ypos -3470
   postage_stamp false
  }
  TimeClip {
   time ""
   first 1300
   last 1398
   frame_mode "start at"
   frame 1
   origfirst 1300
   origlast 1398
   origset true
   mask_metadata true
   name TimeClip87
   xpos 2610
   ypos -3374
  }
  Read {
   inputs 0
   file_type exr
   file "\[value filepath]CG_smoke/Side/gunsmoke_side_13.%08d.exr"
   localizationPolicy on
   first 1200
   last 1299
   origfirst 1200
   origlast 1299
   origset true
   version 46
   colorspace scene_linear
   name Read52
   xpos 2500
   ypos -3470
   postage_stamp false
  }
  TimeClip {
   time ""
   first 1200
   last 1299
   frame_mode "start at"
   frame 1
   origfirst 1200
   origlast 1299
   origset true
   mask_metadata true
   name TimeClip70
   xpos 2500
   ypos -3374
  }
  Read {
   inputs 0
   file_type exr
   file "\[value filepath]CG_smoke/Side/gunsmoke_side_12.%08d.exr"
   localizationPolicy on
   first 1100
   last 1199
   origfirst 1100
   origlast 1199
   origset true
   version 46
   colorspace scene_linear
   in_colorspace scene_linear
   out_colorspace scene_linear
   name Read50
   xpos 2390
   ypos -3470
   postage_stamp false
  }
  TimeClip {
   time ""
   first 1100
   last 1199
   frame_mode "start at"
   frame 1
   origfirst 1100
   origlast 1199
   origset true
   mask_metadata true
   name TimeClip69
   xpos 2390
   ypos -3374
  }
  Read {
   inputs 0
   file_type exr
   file "\[value filepath]CG_smoke/Side/gunsmoke_side_11.%08d.exr"
   localizationPolicy on
   first 1000
   last 1099
   origfirst 1000
   origlast 1099
   origset true
   version 48
   colorspace scene_linear
   name Read48
   xpos 2280
   ypos -3470
   postage_stamp false
  }
  TimeClip {
   time ""
   first 1000
   last 1099
   frame_mode "start at"
   frame 1
   origfirst 1000
   origlast 1099
   origset true
   mask_metadata true
   name TimeClip68
   xpos 2280
   ypos -3374
  }
  Read {
   inputs 0
   file_type exr
   file "\[value filepath]CG_smoke/Side/gunsmoke_side_10.%08d.exr"
   localizationPolicy on
   first 900
   last 999
   origfirst 900
   origlast 999
   origset true
   version 46
   colorspace scene_linear
   name Read46
   xpos 2170
   ypos -3469
   postage_stamp false
  }
  TimeClip {
   time ""
   first 900
   last 999
   frame_mode "start at"
   frame 1
   origfirst 900
   origlast 999
   origset true
   mask_metadata true
   name TimeClip67
   xpos 2170
   ypos -3374
  }
  Read {
   inputs 0
   file_type exr
   file "\[value filepath]CG_smoke/Side/gunsmoke_side_09.%08d.exr"
   localizationPolicy on
   first 800
   last 899
   origfirst 800
   origlast 899
   origset true
   version 46
   colorspace scene_linear
   name Read44
   xpos 2060
   ypos -3470
   postage_stamp false
  }
  TimeClip {
   time ""
   first 800
   last 899
   frame_mode "start at"
   frame 1
   origfirst 800
   origlast 899
   origset true
   mask_metadata true
   name TimeClip66
   xpos 2060
   ypos -3374
  }
  Read {
   inputs 0
   file_type exr
   file "\[value filepath]CG_smoke/Side/gunsmoke_side_08.%08d.exr"
   localizationPolicy on
   first 700
   last 799
   origfirst 700
   origlast 799
   origset true
   version 46
   colorspace scene_linear
   name Read42
   xpos 1950
   ypos -3471
   postage_stamp false
  }
  TimeClip {
   time ""
   first 700
   last 799
   frame_mode "start at"
   frame 1
   origfirst 700
   origlast 799
   origset true
   mask_metadata true
   name TimeClip65
   xpos 1950
   ypos -3374
  }
  Read {
   inputs 0
   file_type exr
   file "\[value filepath]CG_smoke/Side/gunsmoke_side_07.%08d.exr"
   localizationPolicy on
   first 600
   last 699
   origfirst 600
   origlast 699
   origset true
   version 44
   colorspace scene_linear
   name Read40
   xpos 1840
   ypos -3470
   postage_stamp false
  }
  TimeClip {
   time ""
   first 600
   last 699
   frame_mode "start at"
   frame 1
   origfirst 600
   origlast 699
   origset true
   mask_metadata true
   name TimeClip64
   xpos 1840
   ypos -3374
  }
  Read {
   inputs 0
   file_type exr
   file "\[value filepath]CG_smoke/Side/gunsmoke_side_06.%08d.exr"
   localizationPolicy on
   first 500
   last 599
   origfirst 500
   origlast 599
   origset true
   version 50
   colorspace scene_linear
   name Read38
   xpos 1730
   ypos -3470
   postage_stamp false
  }
  TimeClip {
   time ""
   first 500
   last 599
   frame_mode "start at"
   frame 1
   origfirst 500
   origlast 599
   origset true
   mask_metadata true
   name TimeClip63
   xpos 1730
   ypos -3374
  }
  Read {
   inputs 0
   file_type exr
   file "\[value filepath]CG_smoke/Side/gunsmoke_side_05.%08d.exr"
   localizationPolicy on
   first 400
   last 499
   origfirst 400
   origlast 499
   origset true
   version 56
   colorspace scene_linear
   name Read36
   xpos 1620
   ypos -3470
   postage_stamp false
  }
  TimeClip {
   time ""
   first 400
   last 499
   frame_mode "start at"
   frame 1
   origfirst 400
   origlast 499
   origset true
   mask_metadata true
   name TimeClip62
   xpos 1620
   ypos -3374
  }
  Read {
   inputs 0
   file_type exr
   file "\[value filepath]CG_smoke/Side/gunsmoke_side_04.%08d.exr"
   localizationPolicy on
   first 300
   last 399
   origfirst 300
   origlast 399
   origset true
   version 44
   colorspace scene_linear
   name Read34
   xpos 1510
   ypos -3470
   postage_stamp false
  }
  TimeClip {
   time ""
   first 300
   last 399
   frame_mode "start at"
   frame 1
   origfirst 300
   origlast 399
   origset true
   mask_metadata true
   name TimeClip61
   xpos 1510
   ypos -3374
  }
  Read {
   inputs 0
   file_type exr
   file "\[value filepath]CG_smoke/Side/gunsmoke_side_03.%08d.exr"
   localizationPolicy on
   first 200
   last 299
   origfirst 200
   origlast 299
   origset true
   version 48
   colorspace scene_linear
   name Read32
   xpos 1400
   ypos -3470
   postage_stamp false
  }
  TimeClip {
   time ""
   first 200
   last 299
   frame_mode "start at"
   frame 1
   origfirst 200
   origlast 299
   origset true
   mask_metadata true
   name TimeClip60
   xpos 1400
   ypos -3374
  }
  Read {
   inputs 0
   file_type exr
   file "\[value filepath]CG_smoke/Side/gunsmoke_side_02.%08d.exr"
   localizationPolicy on
   first 100
   last 199
   origfirst 100
   origlast 199
   origset true
   version 47
   colorspace scene_linear
   name Read30
   xpos 1290
   ypos -3470
   postage_stamp false
  }
  TimeClip {
   time ""
   first 100
   last 199
   frame_mode "start at"
   frame 1
   origfirst 100
   origlast 199
   origset true
   mask_metadata true
   name TimeClip59
   xpos 1290
   ypos -3374
  }
  Read {
   inputs 0
   file_type exr
   file "\[value filepath]CG_smoke/Side/gunsmoke_side_01.%08d.exr"
   localizationPolicy on
   last 99
   origlast 99
   origset true
   version 46
   colorspace scene_linear
   name Read28
   xpos 1180
   ypos -3470
   postage_stamp false
  }
  TimeClip {
   time ""
   last 99
   frame_mode "start at"
   frame 1
   origlast 99
   origset true
   mask_metadata true
   name TimeClip58
   xpos 1180
   ypos -3374
  }
  Switch {
   inputs 14
   which {{floor((frame%1)*13)}}
   name Switch12
   xpos 1845
   ypos -3233
  }
  ColorMatrix {
   matrix {
       {{parent.Axis4.matrix.0(1)} {parent.Axis4.matrix.1(1)} {parent.Axis4.matrix.2(1)}}
       {{parent.Axis4.matrix.4(1)} {parent.Axis4.matrix.5(1)} {parent.Axis4.matrix.6(1)}}
       {{parent.Axis4.matrix.8(1)} {parent.Axis4.matrix.9(1)} {parent.Axis4.matrix.10(1)}}
     }
   name ColorMatrix2
   xpos 1845
   ypos -3050
  }
  Saturation {
   saturation 0
   mode Average
   name Saturation2
   xpos 1845
   ypos -3024
  }
  Clamp {
   channels rgba
   maximum_enable false
   name BlackClamp1
   tile_color 0x37455eff
   xpos 1845
   ypos -2998
  }
  Multiply {
   channels {-rgba.red rgba.green -rgba.blue none}
   value {{brightnesSideSmoke}}
   name Multiply57
   xpos 1845
   ypos -2858
  }
  Multiply {
   channels rgb
   value {{curve i x1 1 x6 6.685837269 15.73209286 28.1184845 42.99360657 62.65167618 86.59205627 118.5989609 157.6932526 207.0376129 268.3499146 346.7086487 454.8128052 685.1777954 1183.574829 2584.395264 4748.094238 23418}}
   mix {{curve*FadeSpeedSmoke x1 1 s0 L x86 0 s0}}
   name Multiply1
   label "fade out counter"
   xpos 1845
   ypos -2786
  }
  Transform {
   scale {-1 1}
   center {960 540}
   shutteroffset centred
   name Transform1
   selected true
   xpos 1845
   ypos -2639
  }
set N560e4d50 [stack 0]
  Transform {
   scale {{ScaleSideSmoke.w} {ScaleSideSmoke.h}}
   center {960 540}
   shutteroffset centred
   name Transform39
   xpos 1845
   ypos -2589
  }
  Transform {
   scale {{1+((curve-1)*ScaleAnimationSideSmoke) x1 1 x16 1.405771905 x50 1.507072179 s0}}
   center {960 540}
   shutteroffset centred
   name Transform41
   label "scale animation"
   xpos 1845
   ypos -2524
  }
  Reformat {
   resize height
   pbb true
   name Reformat2
   xpos 1845
   ypos -2452
  }
push 0
  Switch {
   inputs 2
   which {{ActivateSideSmoke}}
   name Switch6
   xpos 1845
   ypos -2296
  }
  TimeOffset {
   time_offset {{StartOfSmoke}}
   time ""
   name TimeOffset1
   xpos 1845
   ypos -1556
  }
  NoOp {
   name Anchor_232c9aab88
   help "Stamps by Adrian Pueyo and Alexey Kuchinski.\nUpdated May 18 2021"
   onCreate "if nuke.GUI:\n    try:\n        import stamps; stamps.anchorOnCreate()\n    except:\n        pass"
   knobChanged stamps.anchorKnobChanged()
   autolabel "nuke.thisNode().knob(\"title\").value()"
   tile_color 0xffffff01
   note_font_size 20
   xpos 1845
   ypos -1510
   addUserKnob {20 anchor_tab l "Anchor Stamp"}
   addUserKnob {26 identifier -STARTLINE +HIDDEN T anchor}
   addUserKnob {1 title l Title: t "Displayed name on the Node Graph for this Stamp and its Anchor.\nIMPORTANT: This is only for display purposes, and is different from the real/internal name of the Stamps."}
   title smoke_SIDE
   addUserKnob {26 prev_title l "" +STARTLINE +HIDDEN T smoke_SIDE}
   addUserKnob {26 prev_name l "" +STARTLINE +HIDDEN T Anchor_232c9aab88}
   addUserKnob {3 showing l "" +STARTLINE +HIDDEN}
   addUserKnob {1 tags l Tags t "Comma-separated tags you can define for each Anchor, that will help you find it when invoking the Stamp Selector by pressing the Stamps shortkey with nothing selected."}
   tags 2D,
   addUserKnob {26 line1 l "" +STARTLINE}
   addUserKnob {26 stamps_label l Stamps: T " "}
   addUserKnob {22 createStamp l new t "Create a new Stamp for this Anchor." -STARTLINE T stamps.stampCreateWired(nuke.thisNode())}
   addUserKnob {22 selectStamps l select t "Reconnect all of this Anchor's Stamps." -STARTLINE T stamps.wiredSelectSimilar(nuke.thisNode().name())}
   addUserKnob {22 reconnectStamps l reconnect -STARTLINE T stamps.anchorReconnectWired()}
   addUserKnob {22 zoomNext l "zoom next" t "Navigate to this Anchor's next Stamp on the Node Graph." -STARTLINE T stamps.wiredZoomNext(nuke.thisNode().name())}
   addUserKnob {26 line2 l "" +STARTLINE}
   addUserKnob {22 buttonHelp l Help -STARTLINE T stamps.showHelp()}
   addUserKnob {26 version l " " t "Stamps by Adrian Pueyo and Alexey Kuchinski.\nUpdated May 18 2021." -STARTLINE T "<a href=\"http://www.nukepedia.com/gizmos/other/stamps\" style=\"color:#666;text-decoration: none;\"><span style=\"color:#666\"> <big>Stamps v1.1</big></b></a>"}
  }
set N56244930 [stack 0]
  PostageStamp {
   name Stamp6
   help "Stamps by Adrian Pueyo and Alexey Kuchinski.\nUpdated May 18 2021"
   onCreate "if nuke.GUI:\n    try:\n        import stamps; stamps.wiredOnCreate()\n    except:\n        pass\n"
   knobChanged "import stamps; stamps.wiredKnobChanged()"
   autolabel "nuke.thisNode().knob(\"title\").value()"
   tile_color 0x1000001
   note_font "Bitstream Vera Sans"
   note_font_size 20
   xpos 239
   ypos -654
   hide_input true
   addUserKnob {20 wired_tab l "Wired Stamp"}
   addUserKnob {26 identifier -STARTLINE +HIDDEN T wired}
   addUserKnob {3 lockCallbacks l "" +STARTLINE +HIDDEN}
   addUserKnob {6 toReconnect -STARTLINE +HIDDEN}
   addUserKnob {1 title l Title: t "Displayed name on the Node Graph for this Stamp and its Anchor.\nIMPORTANT: This is only for display purposes, and is different from the real/internal name of the Stamps."}
   title smoke_SIDE
   addUserKnob {26 prev_title l "" +STARTLINE +HIDDEN T smoke_SIDE}
   addUserKnob {26 tags l Tags: t "Tags of this stamp's Anchor, for information purpose only.\nClick \"show anchor\" to change them." T <i>2D</i>}
   addUserKnob {26 backdrops l Backdrops: t "Labels of backdrop nodes which contain this stamp's Anchor." T "<i><Left>before or after Flare</i>"}
   addUserKnob {26 line1 l "" +STARTLINE}
   addUserKnob {6 postageStamp_show l "postage stamp" t "Enable the postage stamp thumbnail in this node.\nYou're seeing this because the class of this node includes the postage_stamp knob." +STARTLINE}
   addUserKnob {26 anchor_label l Anchor: T " "}
   addUserKnob {22 show_anchor l " show anchor " t "Show the properties panel for this Stamp's Anchor." -STARTLINE T stamps.wiredShowAnchor()}
   addUserKnob {22 zoom_anchor l "zoom anchor" t "Navigate to this Stamp's Anchor on the Node Graph." -STARTLINE T stamps.wiredZoomAnchor()}
   addUserKnob {26 stamps_label l Stamps: T " "}
   addUserKnob {22 zoomNext l " zoom next " t "Navigate to this Stamp's next sibling on the Node Graph." -STARTLINE T stamps.wiredZoomNext()}
   addUserKnob {22 selectSimilar l " select similar " t "Select all similar Stamps to this one on the Node Graph." -STARTLINE T stamps.wiredSelectSimilar()}
   addUserKnob {26 space_1 l "" +STARTLINE T " "}
   addUserKnob {26 reconnect_label l Reconnect: t "Reconnect by the stored Anchor name." T " "}
   addUserKnob {22 reconnect_this l this t "Reconnect this Stamp to its Anchor, by its stored Anchor name." -STARTLINE T "n = nuke.thisNode()\ntry:\n    n.setInput(0,nuke.toNode(n.knob(\"anchor\").value()))\nexcept:\n    nuke.message(\"Unable to reconnect.\")\ntry:\n    import stamps\n    stamps.wiredGetStyle(n)\nexcept:\n    pass\n"}
   addUserKnob {22 reconnect_similar l similar t "Reconnect this Stamp and similar ones to their Anchor, by their stored anchor name." -STARTLINE T stamps.wiredReconnectSimilar()}
   addUserKnob {22 reconnect_all l all t "Reconnect all the Stamps to their Anchors, by their stored anchor names." -STARTLINE T stamps.wiredReconnectAll()}
   addUserKnob {26 space_2 l "" +STARTLINE T " "}
   addUserKnob {20 advanced_reconnection l "Advanced Reconnection" n 2}
   addUserKnob {26 reconnect_by_title_label l "<font color=gold>By Title:" t "Reconnect by searching for a matching title." T " "}
   addUserKnob {22 reconnect_by_title_this l this t "Look for an Anchor that shares this Stamp's title, and connect this Stamp to it.\nIMPORTANT: Use this carefully, and only when the normal reconnection doesn't work." -STARTLINE T stamps.wiredReconnectByTitle()}
   addUserKnob {22 reconnect_by_title_similar l similar t "Look for an Anchor that shares this Stamp's title, and connect this Stamp and similar ones to it.\nIMPORTANT: Use this carefully, and only when the normal reconnection doesn't work." -STARTLINE T stamps.wiredReconnectByTitleSimilar()}
   addUserKnob {22 reconnect_by_title_selected l selected t "For each Stamp selected, look for an Anchor that shares its title, and connect to it.\nIMPORTANT: Use this carefully, and only when the normal reconnection doesn't work." -STARTLINE T stamps.wiredReconnectByTitleSelected()}
   addUserKnob {26 reconnect_by_selection_label l "<font color=orangered>By Selection:" t "Force reconnect to a selected Anchor." T " "}
   addUserKnob {22 reconnect_by_selection_this l this t "Force reconnect this Stamp to a selected Anchor, whatever its name or title.\nIMPORTANT: Use this carefully, and only when the normal reconnection doesn't work." -STARTLINE T stamps.wiredReconnectBySelection()}
   addUserKnob {22 reconnect_by_selection_similar l similar t "Force reconnect this Stamp and similar ones to a selected Anchor, whatever its name or title.\nIMPORTANT: Use this carefully, and only when the normal reconnection doesn't work." -STARTLINE T stamps.wiredReconnectBySelectionSimilar()}
   addUserKnob {22 reconnect_by_selection_selected l selected t "Force reconnect all selected Stamps to an also selected Anchor, whatever its name or title.\nIMPORTANT: Use this carefully, and only when the normal reconnection doesn't work." -STARTLINE T stamps.wiredReconnectBySelectionSelected()}
   addUserKnob {1 anchor l Anchor}
   anchor Anchor_232c9aab88
   addUserKnob {6 auto_reconnect_by_title l "<font color=#ED9977>&nbsp; auto-reconnect by title" t "When creating this stamp again (like on copy-paste), auto-reconnect it by title instead of doing it by the saved anchor's name, and auto-turn this off immediately.\nIMPORTANT: Should be off by default. Only use this for setting up templates." +STARTLINE}
   addUserKnob {26 line2 l "" +STARTLINE}
   addUserKnob {22 buttonHelp l Help -STARTLINE T stamps.showHelp()}
   addUserKnob {26 version l " " t "Stamps by Adrian Pueyo and Alexey Kuchinski.\nUpdated May 18 2021." -STARTLINE T "<a href=\"http://www.nukepedia.com/gizmos/other/stamps\" style=\"color:#666;text-decoration: none;\"><span style=\"color:#666\"> <big>Stamps v1.1</big></b></a>"}
  }
  Dot {
   name Dot4
   xpos 273
   ypos -604
  }
  Group {
   inputs 3
   name gunshot2
   label "shot: \[value shotcount]\non frame: \[value shotstart]\n"
   xpos 121
   ypos -578
   addUserKnob {20 User}
   addUserKnob {3 shotcount l shot}
   shotcount 2
   addUserKnob {3 shotstart l frame +INVISIBLE}
   shotstart {{"shotcount==0 ? 0 : shot\[value shotcount]-1" i}}
  }
   BackdropNode {
    inputs 0
    name BackdropNode19
    knobChanged "try:\n    listenedKnobs = \['text', 'position', 'name']\n    node = nuke.thisNode()\n    name = node.knob('name').value()\n    text = node.knob('text').value()\n    position = node.knob('position').value()\n    position = \"<\" + position + \">\"\n    label = node.knob('label').value()\n    \n    if nuke.thisKnob().name() in listenedKnobs:\n        if text == \"\":\n            if node.knob('position').value() == \"left\":\n                node.knob('label').setValue()\n            else:\n                node.knob('label').setValue(position + name)\n        else:\n            if node.knob('position').value() == \"left\":\n                node.knob('label').setValue(text)\n            else:\n                node.knob('label').setValue(position + text)\n                \n    elif nuke.thisKnob().name() == 'font_size':\n        fontSize = node.knob('font_size').value()\n        node.knob('note_font_size').setValue(fontSize)\nexcept:\n    pass"
    tile_color 0x232323ff
    label "<Left><h2> Gunshot"
    note_font_size 31.5
    xpos -693
    ypos -554
    bdwidth 876
    bdheight 1682
    addUserKnob {20 F_VFX l BackdropNode}
    addUserKnob {43 text l Text}
    text "<h2> Gunshot"
    addUserKnob {7 font_size l "Font Size" R 10 100}
    font_size 31.5
    addUserKnob {4 position l "" -STARTLINE M {Left Center}}
    addUserKnob {26 S01 l " " T " "}
    addUserKnob {22 grow l " <img src=\"F_scalep.png\">" -STARTLINE T "n=nuke.thisNode()\n\ndef grow(node=None,step=50):\n    try:\n        if not node:\n            n=nuke.selectedNode()\n        else:\n            n=node\n            n\['xpos'].setValue(n\['xpos'].getValue()-step)\n            n\['ypos'].setValue(n\['ypos'].getValue()-step)\n            n\['bdwidth'].setValue(n\['bdwidth'].getValue()+step*2)\n            n\['bdheight'].setValue(n\['bdheight'].getValue()+step*2)\n    except:\n        pass\ngrow(n,50)"}
    addUserKnob {22 shrink l " <img src=\"F_scalem.png\">" -STARTLINE T "n=nuke.thisNode()\n\ndef shrink(node=None,step=50):\n    try:\n        if not node:\n            n=nuke.selectedNode()\n        else:\n            n=node\n            n\['xpos'].setValue(n\['xpos'].getValue()+step)\n            n\['ypos'].setValue(n\['ypos'].getValue()+step)\n            n\['bdwidth'].setValue(n\['bdwidth'].getValue()-step*2)\n            n\['bdheight'].setValue(n\['bdheight'].getValue()-step*2)\n    except:\n        pass\nshrink(n,50)"}
    addUserKnob {22 colorandom l " <img src=\"ColorBars.png\">" -STARTLINE T "import colorsys, random\nn=nuke.thisNode()\nR,G,B= colorsys.hsv_to_rgb(random.random(),.1+random.random()*.15,.15+random.random()*.15)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ) )"}
    addUserKnob {22 darkgrey l "<font color=\"#232323\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.0, 0.0, 0.14]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 lightgrey l "<font color=\"#383838\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.0, 0.0, 0.22]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 red l "<font color=\"#8c3838\" size=6>■</font>" T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.0, 0.6, 0.55]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n" +STARTLINE}
    addUserKnob {22 orange l "<font color=\"#b28e59\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.1, 0.5, 0.7]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 yellow l "<font color=\"#ccc766\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.16, 0.5, 0.8]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 green l "<font color=\"#5d995b\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.33, 0.4, 0.6]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 cyan l "<font color=\"#72998f\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.46, 0.25, 0.6]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 blue l "<font color=\"#59687f\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.6, 0.3, 0.5]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 darkblue l "<font color=\"#63628c\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.67, 0.3, 0.55]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 magenta l "<font color=\"#927a99\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.8, 0.2, 0.6]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 pink l "<font color=\"#997a89\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.92, 0.2, 0.6]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {26 S02 l " " T " "}
    addUserKnob {26 Ftools l "" +STARTLINE T "<font color=\"#1C1C1C\"> v1.2 - Franklin VFX - 2018"}
   }
   BackdropNode {
    inputs 0
    name BackdropNode2
    knobChanged "try:\n    listenedKnobs = \['text', 'position', 'name']\n    node = nuke.thisNode()\n    name = node.knob('name').value()\n    text = node.knob('text').value()\n    position = node.knob('position').value()\n    position = \"<\" + position + \">\"\n    label = node.knob('label').value()\n    \n    if nuke.thisKnob().name() in listenedKnobs:\n        if text == \"\":\n            if node.knob('position').value() == \"left\":\n                node.knob('label').setValue()\n            else:\n                node.knob('label').setValue(position + name)\n        else:\n            if node.knob('position').value() == \"left\":\n                node.knob('label').setValue(text)\n            else:\n                node.knob('label').setValue(position + text)\n                \n    elif nuke.thisKnob().name() == 'font_size':\n        fontSize = node.knob('font_size').value()\n        node.knob('note_font_size').setValue(fontSize)\nexcept:\n    pass"
    tile_color 0x927a99ff
    note_font_size 50
    xpos -473
    ypos -221
    bdwidth 435
    bdheight 786
    z_order 1
    addUserKnob {20 F_VFX l BackdropNode}
    addUserKnob {43 text l Text}
    addUserKnob {7 font_size l "Font Size" R 10 100}
    font_size 50
    addUserKnob {4 position l "" -STARTLINE M {Left Center}}
    addUserKnob {26 S01 l " " T " "}
    addUserKnob {22 grow l " <img src=\"F_scalep.png\">" -STARTLINE T "n=nuke.thisNode()\n\ndef grow(node=None,step=50):\n    try:\n        if not node:\n            n=nuke.selectedNode()\n        else:\n            n=node\n            n\['xpos'].setValue(n\['xpos'].getValue()-step)\n            n\['ypos'].setValue(n\['ypos'].getValue()-step)\n            n\['bdwidth'].setValue(n\['bdwidth'].getValue()+step*2)\n            n\['bdheight'].setValue(n\['bdheight'].getValue()+step*2)\n    except:\n        pass\ngrow(n,50)"}
    addUserKnob {22 shrink l " <img src=\"F_scalem.png\">" -STARTLINE T "n=nuke.thisNode()\n\ndef shrink(node=None,step=50):\n    try:\n        if not node:\n            n=nuke.selectedNode()\n        else:\n            n=node\n            n\['xpos'].setValue(n\['xpos'].getValue()+step)\n            n\['ypos'].setValue(n\['ypos'].getValue()+step)\n            n\['bdwidth'].setValue(n\['bdwidth'].getValue()-step*2)\n            n\['bdheight'].setValue(n\['bdheight'].getValue()-step*2)\n    except:\n        pass\nshrink(n,50)"}
    addUserKnob {22 colorandom l " <img src=\"ColorBars.png\">" -STARTLINE T "import colorsys, random\nn=nuke.thisNode()\nR,G,B= colorsys.hsv_to_rgb(random.random(),.1+random.random()*.15,.15+random.random()*.15)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ) )"}
    addUserKnob {22 darkgrey l "<font color=\"#232323\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.0, 0.0, 0.14]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 lightgrey l "<font color=\"#383838\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.0, 0.0, 0.22]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 red l "<font color=\"#8c3838\" size=6>■</font>" T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.0, 0.6, 0.55]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n" +STARTLINE}
    addUserKnob {22 orange l "<font color=\"#b28e59\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.1, 0.5, 0.7]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 yellow l "<font color=\"#ccc766\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.16, 0.5, 0.8]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 green l "<font color=\"#5d995b\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.33, 0.4, 0.6]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 cyan l "<font color=\"#72998f\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.46, 0.25, 0.6]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 blue l "<font color=\"#59687f\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.6, 0.3, 0.5]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 darkblue l "<font color=\"#63628c\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.67, 0.3, 0.55]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 magenta l "<font color=\"#927a99\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.8, 0.2, 0.6]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 pink l "<font color=\"#997a89\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.92, 0.2, 0.6]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {26 S02 l " " T " "}
    addUserKnob {26 Ftools l "" +STARTLINE T "<font color=\"#1C1C1C\"> v1.2 - Franklin VFX - 2018"}
   }
   Constant {
    inputs 0
    channels rgb
    name Constant13
    xpos -643
    ypos 714
   }
   AdjBBox {
    numpixels {{size_bbox}}
    name AdjBBox13
    xpos -643
    ypos 849
   }
   Dot {
    name Dot78
    xpos -609
    ypos 987
   }
   Axis3 {
    inputs 0
    useMatrix true
    matrix {
        {{parent.cCard3D_1.matrix} {parent.cCard3D_1.matrix} {parent.cCard3D_1.matrix} {parent.cCard3D_1.matrix}}
        {{parent.cCard3D_1.matrix} {parent.cCard3D_1.matrix} {parent.cCard3D_1.matrix} {parent.cCard3D_1.matrix}}
        {{parent.cCard3D_1.matrix} {parent.cCard3D_1.matrix} {parent.cCard3D_1.matrix} {parent.cCard3D_1.matrix}}
        {{parent.cCard3D_1.matrix} {parent.cCard3D_1.matrix} {parent.cCard3D_1.matrix} {parent.cCard3D_1.matrix}}
      }
    name Axis14
    xpos -203
    ypos -90
   }
set N56295d30 [stack 0]
push 0
   Input {
    inputs 0
    name top
    xpos -283
    ypos -1243
    number 1
   }
   TimeOffset {
    time_offset {{"shot_\[value shotnmbr]==0 ? 0 : shot_\[value shotnmbr]-1"}}
    time ""
    name CTimeOffset1
    label "shot: \[value shotnmbr]\non frame \[value time_offset]"
    xpos -283
    ypos -924
    addUserKnob {20 User}
    addUserKnob {3 shotnmbr l "shot "}
    shotnmbr {{shotcount}}
    addUserKnob {3 ref}
    ref {{time_offset+1}}
   }
   Group {
    name DecimalTimeOffset1
    tile_color 0xafa35dff
    label "random asset"
    note_font "Bitstream Vera Sans Bold"
    xpos -283
    ypos -841
    addUserKnob {20 User}
    addUserKnob {7 decimal l "time offset (decimal)"}
    decimal {{random(shotcount*seed)}}
    addUserKnob {26 ""}
    addUserKnob {26 _1 l "" +STARTLINE T "Chris Fryer | 2020\nupdated by Yorben Otto | 2024"}
   }
    Input {
     inputs 0
     name Input1
     xpos 426
     ypos -793
    }
    TimeOffset {
     time_offset {{(-floor(parent.decimal))*(DecimalTimeOffset1.decimal<0)}}
     time ""
     name TimeOffset1
     xpos 426
     ypos -675
    }
    Dot {
     name Dot6
     xpos 460
     ypos -635
    }
set N562d5590 [stack 0]
    Dot {
     name Dot5
     xpos 350
     ypos -635
    }
    Dot {
     name Dot7
     xpos 350
     ypos -365
    }
push $N562d5590
    Dot {
     name Dot1
     xpos 572
     ypos -635
    }
    TimeBlur {
     divisions 2
     shutter {{(parent.decimal-(floor(parent.decimal)))*2}}
     shutteroffset start
     shuttercustomoffset 0
     name TimeBlur1
     xpos 538
     ypos -558
    }
    Dot {
     name Dot2
     xpos 572
     ypos -490
    }
push $N562d5590
    TimeBlur {
     divisions 2
     shutter {{parent.decimal*2}}
     shutteroffset start
     shuttercustomoffset 0
     name TimeBlur8
     xpos 426
     ypos -556
    }
    Switch {
     inputs 2
     which {{parent.decimal<0}}
     name Switch1
     xpos 426
     ypos -494
    }
    Multiply {
     value {{parent.TimeBlur8.divisions}}
     name Multiply6
     xpos 426
     ypos -436
    }
    Merge2 {
     inputs 2
     operation from
     name Merge6
     xpos 426
     ypos -369
    }
set N566273e0 [stack 0]
    Output {
     name Output1
     xpos 426
     ypos -221
    }
push $N566273e0
push $N566273e0
    Viewer {
     inputs 2
     frame_range 1-100
     name Viewer1
     xpos 675
     ypos -246
    }
   end_group
   NoTimeBlur {
    name NoTimeBlur1
    xpos -283
    ypos -779
   }
   Transform {
    scale {{0.05+(0.05*(((parent.DecimalTimeOffset13.decimal-0.5)*2)*ScaleVariationSmoke))}}
    center {{root.width/2 x1015 2304} {root.height/2}}
    shutteroffset centred
    name Transform44
    xpos -283
    ypos -152
   }
   Card3D {
    inputs 3
    rot_order ZYX
    translate {0 0 0}
    rotate {90 0 0}
    shutteroffset centred
    name cCard3D25
    tile_color 0x7b1d1dff
    xpos -283
    ypos 11
    addUserKnob {20 User l parent}
    addUserKnob {22 python_button l "set parent" t "select parent node, and press this button to set the selected node as parent" +INVISIBLE T "n = nuke.selectedNode()\['name'].getValue()\nnuke.thisNode()\['string'].setValue(n)" +STARTLINE}
    addUserKnob {1 string l parent +INVISIBLE}
    string null
    addUserKnob {3 ref l "ref frame"}
    ref 1015
   }
   Transform {
    translate {{"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].translate.x(ref)\}]"} {"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].translate.y(ref)\}]"}}
    rotate {{"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].rotate-\[value parent_gun].rotate(ref)\}]"}}
    scale {{"\[if \{\[value parent_gun]==\"null\"\} \{return 1\} \{return 1+(\[value parent_gun].scale-\[value parent_gun].scale(ref))\}]"}}
    center {{"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].center.x(ref)\}]"} {"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].center.y(ref)\}]"}}
    name Transform_GUNMatchMove37
    xpos -283
    ypos 126
    addUserKnob {20 User l parent}
    addUserKnob {3 ref}
    ref {{parent.CTimeOffset.ref}}
   }
   Transform {
    translate {{"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].translate.x-\[value parent_env].translate.x(ref)\}]"} {"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].translate.y-\[value parent_env].translate.y(ref)\}]"}}
    rotate {{"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].rotate-\[value parent_env].rotate(ref)\}]"}}
    scale {{"\[if \{\[value parent_gun]==\"null\"\} \{return 1\} \{return 1+(\[value parent_env].scale-\[value parent_env].scale(ref))\}]"}}
    center {{"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].center.x(ref)\}]"} {"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].center.y(ref)\}]"}}
    motionblur 0.2
    shutter {{SmokeMB*0.5}}
    shutteroffset centred
    name Transform_ENVMatchMove37
    label "\n"
    xpos -283
    ypos 255
    addUserKnob {20 User l parent}
    addUserKnob {3 ref}
    ref {{parent.CTimeOffset.ref}}
   }
   Transform {
    translate {{"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return -((root.width/2)-(\[value parent_gun].center.x(1)+\[value parent_gun].translate.x(1)))\}]"} {"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return -((root.height/2)-(\[value parent_gun].center.y(1)+\[value parent_gun].translate.y(1)))\}]"}}
    name Transform_GUNMatchMove6
    label "alignment correction"
    xpos -283
    ypos 344
    addUserKnob {20 User l parent}
    addUserKnob {22 python_button l "set parent" t "select parent node, and press this button to set the selected node as parent" T "n = nuke.selectedNode()\['name'].getValue()\nnuke.thisNode()\['string'].setValue(n)" +STARTLINE}
    addUserKnob {1 string l parent}
    string Transform_MatchMove10
    addUserKnob {3 ref +INVISIBLE}
    ref {{parent.cCard3D_8.ref}}
   }
   Multiply {
    value {{math_matrix.result_y_smoke(parent.CTimeOffset.ref)}}
    name Angle_reveal_top1
    label TOP
    xpos -283
    ypos 403
   }
   Remove {
    operation keep
    channels rgb
    name Remove1
    xpos -283
    ypos 514
   }
push 0
   Switch {
    inputs 2
    which {{parent.Angle_reveal_top1.value>0.001}}
    name Switch1
    xpos -283
    ypos 660
   }
   Dot {
    name Dot82
    xpos -249
    ypos 705
   }
push 0
push $N56295d30
push 0
   Input {
    inputs 0
    name front
    xpos -436
    ypos -1243
    number 2
   }
   TimeOffset {
    time_offset {{"shot_\[value shotnmbr]==0 ? 0 : shot_\[value shotnmbr]-1"}}
    time ""
    name CTimeOffset2
    label "shot: \[value shotnmbr]\non frame \[value time_offset]"
    xpos -436
    ypos -925
    addUserKnob {20 User}
    addUserKnob {3 shotnmbr l "shot "}
    shotnmbr {{shotcount}}
    addUserKnob {3 ref}
    ref {{time_offset+1}}
   }
   Group {
    name DecimalTimeOffset2
    tile_color 0xafa35dff
    label "random asset"
    note_font "Bitstream Vera Sans Bold"
    xpos -436
    ypos -842
    addUserKnob {20 User}
    addUserKnob {7 decimal l "time offset (decimal)"}
    decimal {{random(shotcount*seed)}}
    addUserKnob {26 ""}
    addUserKnob {26 _1 l "" +STARTLINE T "Chris Fryer | 2020\nupdated by Yorben Otto | 2024"}
   }
    Input {
     inputs 0
     name Input1
     xpos 426
     ypos -793
    }
    TimeOffset {
     time_offset {{(-floor(parent.decimal))*(DecimalTimeOffset2.decimal<0)}}
     time ""
     name TimeOffset1
     xpos 426
     ypos -675
    }
    Dot {
     name Dot6
     xpos 460
     ypos -635
    }
set N56b73320 [stack 0]
    Dot {
     name Dot5
     xpos 350
     ypos -635
    }
    Dot {
     name Dot7
     xpos 350
     ypos -365
    }
push $N56b73320
    Dot {
     name Dot1
     xpos 572
     ypos -635
    }
    TimeBlur {
     divisions 2
     shutter {{(parent.decimal-(floor(parent.decimal)))*2}}
     shutteroffset start
     shuttercustomoffset 0
     name TimeBlur1
     xpos 538
     ypos -558
    }
    Dot {
     name Dot2
     xpos 572
     ypos -490
    }
push $N56b73320
    TimeBlur {
     divisions 2
     shutter {{parent.decimal*2}}
     shutteroffset start
     shuttercustomoffset 0
     name TimeBlur8
     xpos 426
     ypos -556
    }
    Switch {
     inputs 2
     which {{parent.decimal<0}}
     name Switch1
     xpos 426
     ypos -494
    }
    Multiply {
     value {{parent.TimeBlur8.divisions}}
     name Multiply6
     xpos 426
     ypos -436
    }
    Merge2 {
     inputs 2
     operation from
     name Merge6
     xpos 426
     ypos -369
    }
set N56bb5260 [stack 0]
    Output {
     name Output1
     xpos 426
     ypos -221
    }
push $N56bb5260
push $N56bb5260
    Viewer {
     inputs 2
     frame_range 1-100
     name Viewer1
     xpos 675
     ypos -246
    }
   end_group
   NoTimeBlur {
    name NoTimeBlur5
    xpos -436
    ypos -780
   }
   Transform {
    scale {{0.05+(0.05*(((parent.DecimalTimeOffset13.decimal-0.5)*2)*ScaleVariationSmoke))}}
    center {{root.width/2 x1015 2304} {root.height/2}}
    shutteroffset centred
    name Transform45
    xpos -436
    ypos -151
   }
   Card3D {
    inputs 3
    rot_order ZYX
    translate {0 0 0}
    rotate {0 90 0}
    shutteroffset centred
    name cCard3D26
    tile_color 0x7b1d1dff
    xpos -436
    ypos 15
    addUserKnob {20 User l parent}
    addUserKnob {22 python_button l "set parent" t "select parent node, and press this button to set the selected node as parent" +INVISIBLE T "n = nuke.selectedNode()\['name'].getValue()\nnuke.thisNode()\['string'].setValue(n)" +STARTLINE}
    addUserKnob {1 string l parent +INVISIBLE}
    string null
    addUserKnob {3 ref l "ref frame"}
    ref 1015
   }
   Transform {
    translate {{"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].translate.x(ref)\}]"} {"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].translate.y(ref)\}]"}}
    rotate {{"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].rotate-\[value parent_gun].rotate(ref)\}]"}}
    scale {{"\[if \{\[value parent_gun]==\"null\"\} \{return 1\} \{return 1+(\[value parent_gun].scale-\[value parent_gun].scale(ref))\}]"}}
    center {{"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].center.x(ref)\}]"} {"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].center.y(ref)\}]"}}
    name Transform_GUNMatchMove38
    label "\n"
    xpos -436
    ypos 124
    addUserKnob {20 User l parent}
    addUserKnob {3 ref}
    ref {{parent.CTimeOffset.ref}}
   }
   Transform {
    translate {{"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].translate.x-\[value parent_env].translate.x(ref)\}]"} {"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].translate.y-\[value parent_env].translate.y(ref)\}]"}}
    rotate {{"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].rotate-\[value parent_env].rotate(ref)\}]"}}
    scale {{"\[if \{\[value parent_gun]==\"null\"\} \{return 1\} \{return 1+(\[value parent_env].scale-\[value parent_env].scale(ref))\}]"}}
    center {{"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].center.x(ref)\}]"} {"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].center.y(ref)\}]"}}
    motionblur 0.2
    shutter {{SmokeMB*0.5}}
    shutteroffset centred
    name Transform_ENVMatchMove38
    xpos -436
    ypos 254
    addUserKnob {20 User l parent}
    addUserKnob {3 ref}
    ref {{parent.CTimeOffset.ref}}
   }
   Transform {
    translate {{"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return -((root.width/2)-(\[value parent_gun].center.x(1)+\[value parent_gun].translate.x(1)))\}]"} {"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return -((root.height/2)-(\[value parent_gun].center.y(1)+\[value parent_gun].translate.y(1)))\}]"}}
    name Transform_GUNMatchMove7
    label "alignment correction"
    xpos -436
    ypos 343
    addUserKnob {20 User l parent}
    addUserKnob {22 python_button l "set parent" t "select parent node, and press this button to set the selected node as parent" T "n = nuke.selectedNode()\['name'].getValue()\nnuke.thisNode()\['string'].setValue(n)" +STARTLINE}
    addUserKnob {1 string l parent}
    string Transform_MatchMove10
    addUserKnob {3 ref +INVISIBLE}
    ref {{parent.cCard3D_8.ref}}
   }
   Multiply {
    value {{math_matrix.result_x_smoke(parent.CTimeOffset.ref)}}
    name Angle_reveal_front1
    label FRONT
    xpos -436
    ypos 401
   }
   Remove {
    operation keep
    channels rgb
    name Remove2
    xpos -436
    ypos 511
   }
push 0
   Switch {
    inputs 2
    which {{parent.Angle_reveal_front1.value>0.001}}
    name Switch2
    xpos -436
    ypos 660
   }
   Dot {
    name Dot83
    xpos -402
    ypos 735
   }
   Input {
    inputs 0
    name side
    xpos -130
    ypos -1242
   }
   TimeOffset {
    time_offset {{"shot_\[value shotnmbr]==0 ? 0 : shot_\[value shotnmbr]-1"}}
    time ""
    name CTimeOffset
    label "shot: \[value shotnmbr]\non frame \[value time_offset]"
    xpos -130
    ypos -927
    addUserKnob {20 User}
    addUserKnob {3 shotnmbr l "shot "}
    shotnmbr {{shotcount}}
    addUserKnob {3 ref}
    ref {{time_offset+1}}
   }
   Group {
    name DecimalTimeOffset13
    tile_color 0xafa35dff
    label "random asset"
    note_font "Bitstream Vera Sans Bold"
    xpos -130
    ypos -844
    addUserKnob {20 User}
    addUserKnob {7 decimal l "time offset (decimal)"}
    decimal {{random(shotcount*seed)}}
    addUserKnob {26 ""}
    addUserKnob {26 _1 l "" +STARTLINE T "Chris Fryer | 2020\nupdated by Yorben Otto | 2024"}
   }
    Input {
     inputs 0
     name Input1
     xpos 426
     ypos -793
    }
    TimeOffset {
     time_offset {{(-floor(parent.decimal))*(DecimalTimeOffset13.decimal<0)}}
     time ""
     name TimeOffset1
     xpos 426
     ypos -675
    }
    Dot {
     name Dot6
     xpos 460
     ypos -635
    }
set N56e110e0 [stack 0]
    Dot {
     name Dot5
     xpos 350
     ypos -635
    }
    Dot {
     name Dot7
     xpos 350
     ypos -365
    }
push $N56e110e0
    Dot {
     name Dot1
     xpos 572
     ypos -635
    }
    TimeBlur {
     divisions 2
     shutter {{(parent.decimal-(floor(parent.decimal)))*2}}
     shutteroffset start
     shuttercustomoffset 0
     name TimeBlur1
     xpos 538
     ypos -558
    }
    Dot {
     name Dot2
     xpos 572
     ypos -490
    }
push $N56e110e0
    TimeBlur {
     divisions 2
     shutter {{parent.decimal*2}}
     shutteroffset start
     shuttercustomoffset 0
     name TimeBlur8
     xpos 426
     ypos -556
    }
    Switch {
     inputs 2
     which {{parent.decimal<0}}
     name Switch1
     xpos 426
     ypos -494
    }
    Multiply {
     value {{parent.TimeBlur8.divisions}}
     name Multiply6
     xpos 426
     ypos -436
    }
    Merge2 {
     inputs 2
     operation from
     name Merge6
     xpos 426
     ypos -369
    }
set N56e53020 [stack 0]
    Output {
     name Output1
     xpos 426
     ypos -221
    }
push $N56e53020
push $N56e53020
    Viewer {
     inputs 2
     frame_range 1-100
     name Viewer1
     xpos 675
     ypos -246
    }
   end_group
   NoTimeBlur {
    name NoTimeBlur13
    xpos -130
    ypos -782
   }
   Transform {
    scale {{0.05+(0.05*(((parent.DecimalTimeOffset13.decimal-0.5)*2)*ScaleVariationSmoke))}}
    center {{root.width/2 x1015 2304} {root.height/2}}
    shutteroffset centred
    name Transform46
    xpos -130
    ypos -155
   }
   Card3D {
    translate {{"\[if \{\[exists  parent.parent.parent.input0]\} \{return \[value \[topnode parent.parent.parent.input0].name].translate.x(ref)\} \{return 0\}]"} {"\[if \{\[exists  parent.parent.parent.input0]\} \{return \[value \[topnode parent.parent.parent.input0].name].translate.y(ref)\} \{return 0\}]"} {"\[if \{\[exists  parent.parent.parent.input0]\} \{return \[value \[topnode parent.parent.parent.input0].name].translate.z(ref)\} \{return -1\}]"}}
    rotate {{"\[if \{\[exists  parent.parent.parent.input0]\} \{return \[value \[topnode parent.parent.parent.input0].name].rotate.x(ref)\} \{return 0\}]"} {"\[if \{\[exists  parent.parent.parent.input0]\} \{return \[value \[topnode parent.parent.parent.input0].name].rotate.y(ref)\} \{return 0\}]"} {"\[if \{\[exists  parent.parent.parent.input0]\} \{return \[value \[topnode parent.parent.parent.input0].name].rotate.z(ref)\} \{return 0\}]"}}
    scaling {{"\[if \{\[exists  parent.parent.parent.input0]\} \{return \[value \[topnode parent.parent.parent.input0].name].scaling.x(ref)\} \{return 1\}]"} {"\[if \{\[exists  parent.parent.parent.input0]\} \{return \[value \[topnode parent.parent.parent.input0].name].scaling.y(ref)\} \{return 1\}]"} {"\[if \{\[exists  parent.parent.parent.input0]\} \{return \[value \[topnode parent.parent.parent.input0].name].scaling.z(ref)\} \{return 1\}]"}}
    uniform_scale {{"\[if \{\[exists  parent.parent.parent.input0]\} \{return (\[value \[topnode parent.parent.parent.input0].name].uniform_scale(ref)*25)\} \{return 25\}]"}}
    shutteroffset centred
    name cCard3D_1
    tile_color 0x7b1d1dff
    label "ref frame: \[value ref]"
    xpos -130
    ypos 2
    addUserKnob {20 User l parent}
    addUserKnob {22 python_button l "set parent" t "select parent node, and press this button to set the selected node as parent" +INVISIBLE T "n = nuke.selectedNode()\['name'].getValue()\nnuke.thisNode()\['string'].setValue(n)" +STARTLINE}
    addUserKnob {1 string l parent +INVISIBLE}
    string null
    addUserKnob {3 id l "id number"}
    id {{parent.CTimeOffset.shotnmbr}}
    addUserKnob {3 ref l "ref frame"}
    ref {{parent.CTimeOffset.ref}}
   }
   Transform {
    translate {{"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].translate.x(ref)\}]"} {"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].translate.y(ref)\}]"}}
    rotate {{"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].rotate-\[value parent_gun].rotate(ref)\}]"}}
    scale {{"\[if \{\[value parent_gun]==\"null\"\} \{return 1\} \{return 1+(\[value parent_gun].scale-\[value parent_gun].scale(ref))\}]"}}
    center {{"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].center.x(ref)\}]"} {"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].center.y(ref)\}]"}}
    name Transform_GUNMatchMove39
    label "\n"
    xpos -130
    ypos 124
    addUserKnob {20 User l parent}
    addUserKnob {3 ref}
    ref {{parent.CTimeOffset.ref}}
   }
   Transform {
    translate {{"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].translate.x-\[value parent_env].translate.x(ref)\}]"} {"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].translate.y-\[value parent_env].translate.y(ref)\}]"}}
    rotate {{"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].rotate-\[value parent_env].rotate(ref)\}]"}}
    scale {{"\[if \{\[value parent_gun]==\"null\"\} \{return 1\} \{return 1+(\[value parent_env].scale-\[value parent_env].scale(ref))\}]"}}
    center {{"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].center.x(ref)\}]"} {"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].center.y(ref)\}]"}}
    motionblur 0.2
    shutter {{SmokeMB*0.5}}
    shutteroffset centred
    name Transform_ENVMatchMove39
    xpos -130
    ypos 258
    addUserKnob {20 User l parent}
    addUserKnob {3 ref}
    ref {{parent.CTimeOffset.ref}}
   }
   Transform {
    translate {{"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return -((root.width/2)-(\[value parent_gun].center.x(1)+\[value parent_gun].translate.x(1)))\}]"} {"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return -((root.height/2)-(\[value parent_gun].center.y(1)+\[value parent_gun].translate.y(1)))\}]"}}
    name Transform_GUNMatchMove5
    label "alignment correction"
    xpos -130
    ypos 340
    addUserKnob {20 User l parent}
    addUserKnob {22 python_button l "set parent" t "select parent node, and press this button to set the selected node as parent" T "n = nuke.selectedNode()\['name'].getValue()\nnuke.thisNode()\['string'].setValue(n)" +STARTLINE}
    addUserKnob {1 string l parent}
    string Transform_MatchMove10
    addUserKnob {3 ref +INVISIBLE}
    ref {{parent.cCard3D_8.ref}}
   }
   Multiply {
    value {{math_matrix.result_z_smoke(parent.CTimeOffset.ref)}}
    name Angle_reveal_side1
    label SIDE
    xpos -130
    ypos 404
   }
   Remove {
    operation keep
    channels rgb
    name Remove39
    xpos -130
    ypos 514
   }
push 0
   Switch {
    inputs 2
    which {{parent.Angle_reveal_side1.value>0.001}}
    name Switch3
    xpos -130
    ypos 658
   }
   Merge2 {
    inputs 3+1
    operation max
    Achannels rgb
    Bchannels rgb
    output rgb
    name Merge28
    xpos -130
    ypos 731
   }
   Merge2 {
    inputs 2
    operation plus
    bbox intersection
    Achannels rgb
    Bchannels rgb
    output rgb
    name Merge29
    xpos -130
    ypos 983
   }
   Shuffle2 {
    fromInput1 {{0} B}
    fromInput2 {{0} B}
    mappings "4 rgba.red 0 0 rgba.red 0 0 rgba.green 0 1 rgba.green 0 1 rgba.blue 0 2 rgba.alpha 0 3 rgba.blue 0 2 rgba.blue 0 2"
    name Shuffle1
    xpos -130
    ypos 1021
   }
push 0
   Switch {
    inputs 2
    which {{"shot_\[value count]==0?0:frame>=shot_\[value count]"}}
    name cSwitch_13
    xpos -130
    ypos 1078
    addUserKnob {20 User}
    addUserKnob {3 count}
    count {{parent.CTimeOffset.shotnmbr}}
   }
   Output {
    name Output1
    xpos -130
    ypos 1323
   }
   StickyNote {
    inputs 0
    name StickyNote1
    label "<-- handy to break concatonation?  "
    xpos -39
    ypos 193
   }
  end_group
push $N586971d0
  PostageStamp {
   name Stamp1
   help "Stamps by Adrian Pueyo and Alexey Kuchinski.\nUpdated May 18 2021"
   onCreate "if nuke.GUI:\n    try:\n        import stamps; stamps.wiredOnCreate()\n    except:\n        pass\n"
   knobChanged "import stamps; stamps.wiredKnobChanged()"
   autolabel "nuke.thisNode().knob(\"title\").value()"
   tile_color 0x1000001
   note_font "Bitstream Vera Sans"
   note_font_size 20
   xpos -393
   ypos -649
   hide_input true
   addUserKnob {20 wired_tab l "Wired Stamp"}
   addUserKnob {26 identifier -STARTLINE +HIDDEN T wired}
   addUserKnob {3 lockCallbacks l "" +STARTLINE +HIDDEN}
   addUserKnob {6 toReconnect -STARTLINE +HIDDEN}
   addUserKnob {1 title l Title: t "Displayed name on the Node Graph for this Stamp and its Anchor.\nIMPORTANT: This is only for display purposes, and is different from the real/internal name of the Stamps."}
   title smoke_FRONT
   addUserKnob {26 prev_title l "" +STARTLINE +HIDDEN T smoke_FRONT}
   addUserKnob {26 tags l Tags: t "Tags of this stamp's Anchor, for information purpose only.\nClick \"show anchor\" to change them." T <i>2D</i>}
   addUserKnob {26 backdrops l Backdrops: t "Labels of backdrop nodes which contain this stamp's Anchor." T "<i><Left>before or after Flare</i>"}
   addUserKnob {26 line1 l "" +STARTLINE}
   addUserKnob {6 postageStamp_show l "postage stamp" t "Enable the postage stamp thumbnail in this node.\nYou're seeing this because the class of this node includes the postage_stamp knob." +STARTLINE}
   addUserKnob {26 anchor_label l Anchor: T " "}
   addUserKnob {22 show_anchor l " show anchor " t "Show the properties panel for this Stamp's Anchor." -STARTLINE T stamps.wiredShowAnchor()}
   addUserKnob {22 zoom_anchor l "zoom anchor" t "Navigate to this Stamp's Anchor on the Node Graph." -STARTLINE T stamps.wiredZoomAnchor()}
   addUserKnob {26 stamps_label l Stamps: T " "}
   addUserKnob {22 zoomNext l " zoom next " t "Navigate to this Stamp's next sibling on the Node Graph." -STARTLINE T stamps.wiredZoomNext()}
   addUserKnob {22 selectSimilar l " select similar " t "Select all similar Stamps to this one on the Node Graph." -STARTLINE T stamps.wiredSelectSimilar()}
   addUserKnob {26 space_1 l "" +STARTLINE T " "}
   addUserKnob {26 reconnect_label l Reconnect: t "Reconnect by the stored Anchor name." T " "}
   addUserKnob {22 reconnect_this l this t "Reconnect this Stamp to its Anchor, by its stored Anchor name." -STARTLINE T "n = nuke.thisNode()\ntry:\n    n.setInput(0,nuke.toNode(n.knob(\"anchor\").value()))\nexcept:\n    nuke.message(\"Unable to reconnect.\")\ntry:\n    import stamps\n    stamps.wiredGetStyle(n)\nexcept:\n    pass\n"}
   addUserKnob {22 reconnect_similar l similar t "Reconnect this Stamp and similar ones to their Anchor, by their stored anchor name." -STARTLINE T stamps.wiredReconnectSimilar()}
   addUserKnob {22 reconnect_all l all t "Reconnect all the Stamps to their Anchors, by their stored anchor names." -STARTLINE T stamps.wiredReconnectAll()}
   addUserKnob {26 space_2 l "" +STARTLINE T " "}
   addUserKnob {20 advanced_reconnection l "Advanced Reconnection" n 2}
   addUserKnob {26 reconnect_by_title_label l "<font color=gold>By Title:" t "Reconnect by searching for a matching title." T " "}
   addUserKnob {22 reconnect_by_title_this l this t "Look for an Anchor that shares this Stamp's title, and connect this Stamp to it.\nIMPORTANT: Use this carefully, and only when the normal reconnection doesn't work." -STARTLINE T stamps.wiredReconnectByTitle()}
   addUserKnob {22 reconnect_by_title_similar l similar t "Look for an Anchor that shares this Stamp's title, and connect this Stamp and similar ones to it.\nIMPORTANT: Use this carefully, and only when the normal reconnection doesn't work." -STARTLINE T stamps.wiredReconnectByTitleSimilar()}
   addUserKnob {22 reconnect_by_title_selected l selected t "For each Stamp selected, look for an Anchor that shares its title, and connect to it.\nIMPORTANT: Use this carefully, and only when the normal reconnection doesn't work." -STARTLINE T stamps.wiredReconnectByTitleSelected()}
   addUserKnob {26 reconnect_by_selection_label l "<font color=orangered>By Selection:" t "Force reconnect to a selected Anchor." T " "}
   addUserKnob {22 reconnect_by_selection_this l this t "Force reconnect this Stamp to a selected Anchor, whatever its name or title.\nIMPORTANT: Use this carefully, and only when the normal reconnection doesn't work." -STARTLINE T stamps.wiredReconnectBySelection()}
   addUserKnob {22 reconnect_by_selection_similar l similar t "Force reconnect this Stamp and similar ones to a selected Anchor, whatever its name or title.\nIMPORTANT: Use this carefully, and only when the normal reconnection doesn't work." -STARTLINE T stamps.wiredReconnectBySelectionSimilar()}
   addUserKnob {22 reconnect_by_selection_selected l selected t "Force reconnect all selected Stamps to an also selected Anchor, whatever its name or title.\nIMPORTANT: Use this carefully, and only when the normal reconnection doesn't work." -STARTLINE T stamps.wiredReconnectBySelectionSelected()}
   addUserKnob {1 anchor l Anchor}
   anchor Anchor_220a2be282
   addUserKnob {6 auto_reconnect_by_title l "<font color=#ED9977>&nbsp; auto-reconnect by title" t "When creating this stamp again (like on copy-paste), auto-reconnect it by title instead of doing it by the saved anchor's name, and auto-turn this off immediately.\nIMPORTANT: Should be off by default. Only use this for setting up templates." +STARTLINE}
   addUserKnob {26 line2 l "" +STARTLINE}
   addUserKnob {22 buttonHelp l Help -STARTLINE T stamps.showHelp()}
   addUserKnob {26 version l " " t "Stamps by Adrian Pueyo and Alexey Kuchinski.\nUpdated May 18 2021." -STARTLINE T "<a href=\"http://www.nukepedia.com/gizmos/other/stamps\" style=\"color:#666;text-decoration: none;\"><span style=\"color:#666\"> <big>Stamps v1.1</big></b></a>"}
  }
  Dot {
   name Dot2
   xpos -359
   ypos -601
  }
push $N58d70c10
  PostageStamp {
   name Stamp3
   help "Stamps by Adrian Pueyo and Alexey Kuchinski.\nUpdated May 18 2021"
   onCreate "if nuke.GUI:\n    try:\n        import stamps; stamps.wiredOnCreate()\n    except:\n        pass\n"
   knobChanged "import stamps; stamps.wiredKnobChanged()"
   autolabel "nuke.thisNode().knob(\"title\").value()"
   tile_color 0x1000001
   note_font "Bitstream Vera Sans"
   note_font_size 20
   xpos -268
   ypos -649
   hide_input true
   addUserKnob {20 wired_tab l "Wired Stamp"}
   addUserKnob {26 identifier -STARTLINE +HIDDEN T wired}
   addUserKnob {3 lockCallbacks l "" +STARTLINE +HIDDEN}
   addUserKnob {6 toReconnect -STARTLINE +HIDDEN}
   addUserKnob {1 title l Title: t "Displayed name on the Node Graph for this Stamp and its Anchor.\nIMPORTANT: This is only for display purposes, and is different from the real/internal name of the Stamps."}
   title smoke_TOP
   addUserKnob {26 prev_title l "" +STARTLINE +HIDDEN T smoke_TOP}
   addUserKnob {26 tags l Tags: t "Tags of this stamp's Anchor, for information purpose only.\nClick \"show anchor\" to change them." T <i>2D</i>}
   addUserKnob {26 backdrops l Backdrops: t "Labels of backdrop nodes which contain this stamp's Anchor." T "<i><Left>before or after Flare</i>"}
   addUserKnob {26 line1 l "" +STARTLINE}
   addUserKnob {6 postageStamp_show l "postage stamp" t "Enable the postage stamp thumbnail in this node.\nYou're seeing this because the class of this node includes the postage_stamp knob." +STARTLINE}
   addUserKnob {26 anchor_label l Anchor: T " "}
   addUserKnob {22 show_anchor l " show anchor " t "Show the properties panel for this Stamp's Anchor." -STARTLINE T stamps.wiredShowAnchor()}
   addUserKnob {22 zoom_anchor l "zoom anchor" t "Navigate to this Stamp's Anchor on the Node Graph." -STARTLINE T stamps.wiredZoomAnchor()}
   addUserKnob {26 stamps_label l Stamps: T " "}
   addUserKnob {22 zoomNext l " zoom next " t "Navigate to this Stamp's next sibling on the Node Graph." -STARTLINE T stamps.wiredZoomNext()}
   addUserKnob {22 selectSimilar l " select similar " t "Select all similar Stamps to this one on the Node Graph." -STARTLINE T stamps.wiredSelectSimilar()}
   addUserKnob {26 space_1 l "" +STARTLINE T " "}
   addUserKnob {26 reconnect_label l Reconnect: t "Reconnect by the stored Anchor name." T " "}
   addUserKnob {22 reconnect_this l this t "Reconnect this Stamp to its Anchor, by its stored Anchor name." -STARTLINE T "n = nuke.thisNode()\ntry:\n    n.setInput(0,nuke.toNode(n.knob(\"anchor\").value()))\nexcept:\n    nuke.message(\"Unable to reconnect.\")\ntry:\n    import stamps\n    stamps.wiredGetStyle(n)\nexcept:\n    pass\n"}
   addUserKnob {22 reconnect_similar l similar t "Reconnect this Stamp and similar ones to their Anchor, by their stored anchor name." -STARTLINE T stamps.wiredReconnectSimilar()}
   addUserKnob {22 reconnect_all l all t "Reconnect all the Stamps to their Anchors, by their stored anchor names." -STARTLINE T stamps.wiredReconnectAll()}
   addUserKnob {26 space_2 l "" +STARTLINE T " "}
   addUserKnob {20 advanced_reconnection l "Advanced Reconnection" n 2}
   addUserKnob {26 reconnect_by_title_label l "<font color=gold>By Title:" t "Reconnect by searching for a matching title." T " "}
   addUserKnob {22 reconnect_by_title_this l this t "Look for an Anchor that shares this Stamp's title, and connect this Stamp to it.\nIMPORTANT: Use this carefully, and only when the normal reconnection doesn't work." -STARTLINE T stamps.wiredReconnectByTitle()}
   addUserKnob {22 reconnect_by_title_similar l similar t "Look for an Anchor that shares this Stamp's title, and connect this Stamp and similar ones to it.\nIMPORTANT: Use this carefully, and only when the normal reconnection doesn't work." -STARTLINE T stamps.wiredReconnectByTitleSimilar()}
   addUserKnob {22 reconnect_by_title_selected l selected t "For each Stamp selected, look for an Anchor that shares its title, and connect to it.\nIMPORTANT: Use this carefully, and only when the normal reconnection doesn't work." -STARTLINE T stamps.wiredReconnectByTitleSelected()}
   addUserKnob {26 reconnect_by_selection_label l "<font color=orangered>By Selection:" t "Force reconnect to a selected Anchor." T " "}
   addUserKnob {22 reconnect_by_selection_this l this t "Force reconnect this Stamp to a selected Anchor, whatever its name or title.\nIMPORTANT: Use this carefully, and only when the normal reconnection doesn't work." -STARTLINE T stamps.wiredReconnectBySelection()}
   addUserKnob {22 reconnect_by_selection_similar l similar t "Force reconnect this Stamp and similar ones to a selected Anchor, whatever its name or title.\nIMPORTANT: Use this carefully, and only when the normal reconnection doesn't work." -STARTLINE T stamps.wiredReconnectBySelectionSimilar()}
   addUserKnob {22 reconnect_by_selection_selected l selected t "Force reconnect all selected Stamps to an also selected Anchor, whatever its name or title.\nIMPORTANT: Use this carefully, and only when the normal reconnection doesn't work." -STARTLINE T stamps.wiredReconnectBySelectionSelected()}
   addUserKnob {1 anchor l Anchor}
   anchor Anchor_25b668170c
   addUserKnob {6 auto_reconnect_by_title l "<font color=#ED9977>&nbsp; auto-reconnect by title" t "When creating this stamp again (like on copy-paste), auto-reconnect it by title instead of doing it by the saved anchor's name, and auto-turn this off immediately.\nIMPORTANT: Should be off by default. Only use this for setting up templates." +STARTLINE}
   addUserKnob {26 line2 l "" +STARTLINE}
   addUserKnob {22 buttonHelp l Help -STARTLINE T stamps.showHelp()}
   addUserKnob {26 version l " " t "Stamps by Adrian Pueyo and Alexey Kuchinski.\nUpdated May 18 2021." -STARTLINE T "<a href=\"http://www.nukepedia.com/gizmos/other/stamps\" style=\"color:#666;text-decoration: none;\"><span style=\"color:#666\"> <big>Stamps v1.1</big></b></a>"}
  }
push $N56244930
  PostageStamp {
   name Stamp2
   help "Stamps by Adrian Pueyo and Alexey Kuchinski.\nUpdated May 18 2021"
   onCreate "if nuke.GUI:\n    try:\n        import stamps; stamps.wiredOnCreate()\n    except:\n        pass\n"
   knobChanged "import stamps; stamps.wiredKnobChanged()"
   autolabel "nuke.thisNode().knob(\"title\").value()"
   tile_color 0x1000001
   note_font "Bitstream Vera Sans"
   note_font_size 20
   xpos -150
   ypos -651
   hide_input true
   addUserKnob {20 wired_tab l "Wired Stamp"}
   addUserKnob {26 identifier -STARTLINE +HIDDEN T wired}
   addUserKnob {3 lockCallbacks l "" +STARTLINE +HIDDEN}
   addUserKnob {6 toReconnect -STARTLINE +HIDDEN}
   addUserKnob {1 title l Title: t "Displayed name on the Node Graph for this Stamp and its Anchor.\nIMPORTANT: This is only for display purposes, and is different from the real/internal name of the Stamps."}
   title smoke_SIDE
   addUserKnob {26 prev_title l "" +STARTLINE +HIDDEN T smoke_SIDE}
   addUserKnob {26 tags l Tags: t "Tags of this stamp's Anchor, for information purpose only.\nClick \"show anchor\" to change them." T <i>2D</i>}
   addUserKnob {26 backdrops l Backdrops: t "Labels of backdrop nodes which contain this stamp's Anchor." T "<i><Left>before or after Flare</i>"}
   addUserKnob {26 line1 l "" +STARTLINE}
   addUserKnob {6 postageStamp_show l "postage stamp" t "Enable the postage stamp thumbnail in this node.\nYou're seeing this because the class of this node includes the postage_stamp knob." +STARTLINE}
   addUserKnob {26 anchor_label l Anchor: T " "}
   addUserKnob {22 show_anchor l " show anchor " t "Show the properties panel for this Stamp's Anchor." -STARTLINE T stamps.wiredShowAnchor()}
   addUserKnob {22 zoom_anchor l "zoom anchor" t "Navigate to this Stamp's Anchor on the Node Graph." -STARTLINE T stamps.wiredZoomAnchor()}
   addUserKnob {26 stamps_label l Stamps: T " "}
   addUserKnob {22 zoomNext l " zoom next " t "Navigate to this Stamp's next sibling on the Node Graph." -STARTLINE T stamps.wiredZoomNext()}
   addUserKnob {22 selectSimilar l " select similar " t "Select all similar Stamps to this one on the Node Graph." -STARTLINE T stamps.wiredSelectSimilar()}
   addUserKnob {26 space_1 l "" +STARTLINE T " "}
   addUserKnob {26 reconnect_label l Reconnect: t "Reconnect by the stored Anchor name." T " "}
   addUserKnob {22 reconnect_this l this t "Reconnect this Stamp to its Anchor, by its stored Anchor name." -STARTLINE T "n = nuke.thisNode()\ntry:\n    n.setInput(0,nuke.toNode(n.knob(\"anchor\").value()))\nexcept:\n    nuke.message(\"Unable to reconnect.\")\ntry:\n    import stamps\n    stamps.wiredGetStyle(n)\nexcept:\n    pass\n"}
   addUserKnob {22 reconnect_similar l similar t "Reconnect this Stamp and similar ones to their Anchor, by their stored anchor name." -STARTLINE T stamps.wiredReconnectSimilar()}
   addUserKnob {22 reconnect_all l all t "Reconnect all the Stamps to their Anchors, by their stored anchor names." -STARTLINE T stamps.wiredReconnectAll()}
   addUserKnob {26 space_2 l "" +STARTLINE T " "}
   addUserKnob {20 advanced_reconnection l "Advanced Reconnection" n 2}
   addUserKnob {26 reconnect_by_title_label l "<font color=gold>By Title:" t "Reconnect by searching for a matching title." T " "}
   addUserKnob {22 reconnect_by_title_this l this t "Look for an Anchor that shares this Stamp's title, and connect this Stamp to it.\nIMPORTANT: Use this carefully, and only when the normal reconnection doesn't work." -STARTLINE T stamps.wiredReconnectByTitle()}
   addUserKnob {22 reconnect_by_title_similar l similar t "Look for an Anchor that shares this Stamp's title, and connect this Stamp and similar ones to it.\nIMPORTANT: Use this carefully, and only when the normal reconnection doesn't work." -STARTLINE T stamps.wiredReconnectByTitleSimilar()}
   addUserKnob {22 reconnect_by_title_selected l selected t "For each Stamp selected, look for an Anchor that shares its title, and connect to it.\nIMPORTANT: Use this carefully, and only when the normal reconnection doesn't work." -STARTLINE T stamps.wiredReconnectByTitleSelected()}
   addUserKnob {26 reconnect_by_selection_label l "<font color=orangered>By Selection:" t "Force reconnect to a selected Anchor." T " "}
   addUserKnob {22 reconnect_by_selection_this l this t "Force reconnect this Stamp to a selected Anchor, whatever its name or title.\nIMPORTANT: Use this carefully, and only when the normal reconnection doesn't work." -STARTLINE T stamps.wiredReconnectBySelection()}
   addUserKnob {22 reconnect_by_selection_similar l similar t "Force reconnect this Stamp and similar ones to a selected Anchor, whatever its name or title.\nIMPORTANT: Use this carefully, and only when the normal reconnection doesn't work." -STARTLINE T stamps.wiredReconnectBySelectionSimilar()}
   addUserKnob {22 reconnect_by_selection_selected l selected t "Force reconnect all selected Stamps to an also selected Anchor, whatever its name or title.\nIMPORTANT: Use this carefully, and only when the normal reconnection doesn't work." -STARTLINE T stamps.wiredReconnectBySelectionSelected()}
   addUserKnob {1 anchor l Anchor}
   anchor Anchor_232c9aab88
   addUserKnob {6 auto_reconnect_by_title l "<font color=#ED9977>&nbsp; auto-reconnect by title" t "When creating this stamp again (like on copy-paste), auto-reconnect it by title instead of doing it by the saved anchor's name, and auto-turn this off immediately.\nIMPORTANT: Should be off by default. Only use this for setting up templates." +STARTLINE}
   addUserKnob {26 line2 l "" +STARTLINE}
   addUserKnob {22 buttonHelp l Help -STARTLINE T stamps.showHelp()}
   addUserKnob {26 version l " " t "Stamps by Adrian Pueyo and Alexey Kuchinski.\nUpdated May 18 2021." -STARTLINE T "<a href=\"http://www.nukepedia.com/gizmos/other/stamps\" style=\"color:#666;text-decoration: none;\"><span style=\"color:#666\"> <big>Stamps v1.1</big></b></a>"}
  }
  Dot {
   name Dot3
   xpos -116
   ypos -601
  }
  Group {
   inputs 3
   name gunshot1
   label "shot: \[value shotcount]\non frame: \[value shotstart]\n"
   xpos -268
   ypos -574
   addUserKnob {20 User}
   addUserKnob {3 shotcount l shot}
   shotcount 1
   addUserKnob {3 shotstart l frame +INVISIBLE}
   shotstart {{"shotcount==0 ? 0 : shot\[value shotcount]-1" i}}
  }
   BackdropNode {
    inputs 0
    name BackdropNode19
    knobChanged "try:\n    listenedKnobs = \['text', 'position', 'name']\n    node = nuke.thisNode()\n    name = node.knob('name').value()\n    text = node.knob('text').value()\n    position = node.knob('position').value()\n    position = \"<\" + position + \">\"\n    label = node.knob('label').value()\n    \n    if nuke.thisKnob().name() in listenedKnobs:\n        if text == \"\":\n            if node.knob('position').value() == \"left\":\n                node.knob('label').setValue()\n            else:\n                node.knob('label').setValue(position + name)\n        else:\n            if node.knob('position').value() == \"left\":\n                node.knob('label').setValue(text)\n            else:\n                node.knob('label').setValue(position + text)\n                \n    elif nuke.thisKnob().name() == 'font_size':\n        fontSize = node.knob('font_size').value()\n        node.knob('note_font_size').setValue(fontSize)\nexcept:\n    pass"
    tile_color 0x232323ff
    label "<Left><h2> Gunshot"
    note_font_size 31.5
    xpos -693
    ypos -554
    bdwidth 876
    bdheight 1682
    addUserKnob {20 F_VFX l BackdropNode}
    addUserKnob {43 text l Text}
    text "<h2> Gunshot"
    addUserKnob {7 font_size l "Font Size" R 10 100}
    font_size 31.5
    addUserKnob {4 position l "" -STARTLINE M {Left Center}}
    addUserKnob {26 S01 l " " T " "}
    addUserKnob {22 grow l " <img src=\"F_scalep.png\">" -STARTLINE T "n=nuke.thisNode()\n\ndef grow(node=None,step=50):\n    try:\n        if not node:\n            n=nuke.selectedNode()\n        else:\n            n=node\n            n\['xpos'].setValue(n\['xpos'].getValue()-step)\n            n\['ypos'].setValue(n\['ypos'].getValue()-step)\n            n\['bdwidth'].setValue(n\['bdwidth'].getValue()+step*2)\n            n\['bdheight'].setValue(n\['bdheight'].getValue()+step*2)\n    except:\n        pass\ngrow(n,50)"}
    addUserKnob {22 shrink l " <img src=\"F_scalem.png\">" -STARTLINE T "n=nuke.thisNode()\n\ndef shrink(node=None,step=50):\n    try:\n        if not node:\n            n=nuke.selectedNode()\n        else:\n            n=node\n            n\['xpos'].setValue(n\['xpos'].getValue()+step)\n            n\['ypos'].setValue(n\['ypos'].getValue()+step)\n            n\['bdwidth'].setValue(n\['bdwidth'].getValue()-step*2)\n            n\['bdheight'].setValue(n\['bdheight'].getValue()-step*2)\n    except:\n        pass\nshrink(n,50)"}
    addUserKnob {22 colorandom l " <img src=\"ColorBars.png\">" -STARTLINE T "import colorsys, random\nn=nuke.thisNode()\nR,G,B= colorsys.hsv_to_rgb(random.random(),.1+random.random()*.15,.15+random.random()*.15)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ) )"}
    addUserKnob {22 darkgrey l "<font color=\"#232323\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.0, 0.0, 0.14]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 lightgrey l "<font color=\"#383838\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.0, 0.0, 0.22]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 red l "<font color=\"#8c3838\" size=6>■</font>" T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.0, 0.6, 0.55]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n" +STARTLINE}
    addUserKnob {22 orange l "<font color=\"#b28e59\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.1, 0.5, 0.7]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 yellow l "<font color=\"#ccc766\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.16, 0.5, 0.8]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 green l "<font color=\"#5d995b\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.33, 0.4, 0.6]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 cyan l "<font color=\"#72998f\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.46, 0.25, 0.6]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 blue l "<font color=\"#59687f\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.6, 0.3, 0.5]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 darkblue l "<font color=\"#63628c\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.67, 0.3, 0.55]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 magenta l "<font color=\"#927a99\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.8, 0.2, 0.6]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 pink l "<font color=\"#997a89\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.92, 0.2, 0.6]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {26 S02 l " " T " "}
    addUserKnob {26 Ftools l "" +STARTLINE T "<font color=\"#1C1C1C\"> v1.2 - Franklin VFX - 2018"}
   }
   BackdropNode {
    inputs 0
    name BackdropNode2
    knobChanged "try:\n    listenedKnobs = \['text', 'position', 'name']\n    node = nuke.thisNode()\n    name = node.knob('name').value()\n    text = node.knob('text').value()\n    position = node.knob('position').value()\n    position = \"<\" + position + \">\"\n    label = node.knob('label').value()\n    \n    if nuke.thisKnob().name() in listenedKnobs:\n        if text == \"\":\n            if node.knob('position').value() == \"left\":\n                node.knob('label').setValue()\n            else:\n                node.knob('label').setValue(position + name)\n        else:\n            if node.knob('position').value() == \"left\":\n                node.knob('label').setValue(text)\n            else:\n                node.knob('label').setValue(position + text)\n                \n    elif nuke.thisKnob().name() == 'font_size':\n        fontSize = node.knob('font_size').value()\n        node.knob('note_font_size').setValue(fontSize)\nexcept:\n    pass"
    tile_color 0x927a99ff
    note_font_size 50
    xpos -473
    ypos -221
    bdwidth 435
    bdheight 786
    z_order 1
    addUserKnob {20 F_VFX l BackdropNode}
    addUserKnob {43 text l Text}
    addUserKnob {7 font_size l "Font Size" R 10 100}
    font_size 50
    addUserKnob {4 position l "" -STARTLINE M {Left Center}}
    addUserKnob {26 S01 l " " T " "}
    addUserKnob {22 grow l " <img src=\"F_scalep.png\">" -STARTLINE T "n=nuke.thisNode()\n\ndef grow(node=None,step=50):\n    try:\n        if not node:\n            n=nuke.selectedNode()\n        else:\n            n=node\n            n\['xpos'].setValue(n\['xpos'].getValue()-step)\n            n\['ypos'].setValue(n\['ypos'].getValue()-step)\n            n\['bdwidth'].setValue(n\['bdwidth'].getValue()+step*2)\n            n\['bdheight'].setValue(n\['bdheight'].getValue()+step*2)\n    except:\n        pass\ngrow(n,50)"}
    addUserKnob {22 shrink l " <img src=\"F_scalem.png\">" -STARTLINE T "n=nuke.thisNode()\n\ndef shrink(node=None,step=50):\n    try:\n        if not node:\n            n=nuke.selectedNode()\n        else:\n            n=node\n            n\['xpos'].setValue(n\['xpos'].getValue()+step)\n            n\['ypos'].setValue(n\['ypos'].getValue()+step)\n            n\['bdwidth'].setValue(n\['bdwidth'].getValue()-step*2)\n            n\['bdheight'].setValue(n\['bdheight'].getValue()-step*2)\n    except:\n        pass\nshrink(n,50)"}
    addUserKnob {22 colorandom l " <img src=\"ColorBars.png\">" -STARTLINE T "import colorsys, random\nn=nuke.thisNode()\nR,G,B= colorsys.hsv_to_rgb(random.random(),.1+random.random()*.15,.15+random.random()*.15)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ) )"}
    addUserKnob {22 darkgrey l "<font color=\"#232323\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.0, 0.0, 0.14]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 lightgrey l "<font color=\"#383838\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.0, 0.0, 0.22]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 red l "<font color=\"#8c3838\" size=6>■</font>" T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.0, 0.6, 0.55]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n" +STARTLINE}
    addUserKnob {22 orange l "<font color=\"#b28e59\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.1, 0.5, 0.7]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 yellow l "<font color=\"#ccc766\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.16, 0.5, 0.8]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 green l "<font color=\"#5d995b\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.33, 0.4, 0.6]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 cyan l "<font color=\"#72998f\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.46, 0.25, 0.6]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 blue l "<font color=\"#59687f\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.6, 0.3, 0.5]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 darkblue l "<font color=\"#63628c\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.67, 0.3, 0.55]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 magenta l "<font color=\"#927a99\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.8, 0.2, 0.6]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 pink l "<font color=\"#997a89\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.92, 0.2, 0.6]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {26 S02 l " " T " "}
    addUserKnob {26 Ftools l "" +STARTLINE T "<font color=\"#1C1C1C\"> v1.2 - Franklin VFX - 2018"}
   }
   Constant {
    inputs 0
    channels rgb
    name Constant13
    xpos -643
    ypos 714
   }
   AdjBBox {
    numpixels {{size_bbox}}
    name AdjBBox13
    xpos -643
    ypos 849
   }
   Dot {
    name Dot78
    xpos -609
    ypos 987
   }
   Axis3 {
    inputs 0
    useMatrix true
    matrix {
        {{parent.cCard3D_1.matrix} {parent.cCard3D_1.matrix} {parent.cCard3D_1.matrix} {parent.cCard3D_1.matrix}}
        {{parent.cCard3D_1.matrix} {parent.cCard3D_1.matrix} {parent.cCard3D_1.matrix} {parent.cCard3D_1.matrix}}
        {{parent.cCard3D_1.matrix} {parent.cCard3D_1.matrix} {parent.cCard3D_1.matrix} {parent.cCard3D_1.matrix}}
        {{parent.cCard3D_1.matrix} {parent.cCard3D_1.matrix} {parent.cCard3D_1.matrix} {parent.cCard3D_1.matrix}}
      }
    name Axis14
    xpos -203
    ypos -90
   }
set N5752d760 [stack 0]
push 0
   Input {
    inputs 0
    name top
    xpos -283
    ypos -1243
    number 1
   }
   TimeOffset {
    time_offset {{"shot_\[value shotnmbr]==0 ? 0 : shot_\[value shotnmbr]-1"}}
    time ""
    name CTimeOffset1
    label "shot: \[value shotnmbr]\non frame \[value time_offset]"
    xpos -283
    ypos -924
    addUserKnob {20 User}
    addUserKnob {3 shotnmbr l "shot "}
    shotnmbr {{shotcount}}
    addUserKnob {3 ref}
    ref {{time_offset+1}}
   }
   Group {
    name DecimalTimeOffset1
    tile_color 0xafa35dff
    label "random asset"
    note_font "Bitstream Vera Sans Bold"
    xpos -283
    ypos -841
    addUserKnob {20 User}
    addUserKnob {7 decimal l "time offset (decimal)"}
    decimal {{random(shotcount*seed)}}
    addUserKnob {26 ""}
    addUserKnob {26 _1 l "" +STARTLINE T "Chris Fryer | 2020\nupdated by Yorben Otto | 2024"}
   }
    Input {
     inputs 0
     name Input1
     xpos 426
     ypos -793
    }
    TimeOffset {
     time_offset {{(-floor(parent.decimal))*(DecimalTimeOffset1.decimal<0)}}
     time ""
     name TimeOffset1
     xpos 426
     ypos -675
    }
    Dot {
     name Dot6
     xpos 460
     ypos -635
    }
set N5756cfc0 [stack 0]
    Dot {
     name Dot5
     xpos 350
     ypos -635
    }
    Dot {
     name Dot7
     xpos 350
     ypos -365
    }
push $N5756cfc0
    Dot {
     name Dot1
     xpos 572
     ypos -635
    }
    TimeBlur {
     divisions 2
     shutter {{(parent.decimal-(floor(parent.decimal)))*2}}
     shutteroffset start
     shuttercustomoffset 0
     name TimeBlur1
     xpos 538
     ypos -558
    }
    Dot {
     name Dot2
     xpos 572
     ypos -490
    }
push $N5756cfc0
    TimeBlur {
     divisions 2
     shutter {{parent.decimal*2}}
     shutteroffset start
     shuttercustomoffset 0
     name TimeBlur8
     xpos 426
     ypos -556
    }
    Switch {
     inputs 2
     which {{parent.decimal<0}}
     name Switch1
     xpos 426
     ypos -494
    }
    Multiply {
     value {{parent.TimeBlur8.divisions}}
     name Multiply6
     xpos 426
     ypos -436
    }
    Merge2 {
     inputs 2
     operation from
     name Merge6
     xpos 426
     ypos -369
    }
set N575aef00 [stack 0]
    Output {
     name Output1
     xpos 426
     ypos -221
    }
push $N575aef00
push $N575aef00
    Viewer {
     inputs 2
     frame_range 1-100
     name Viewer1
     xpos 675
     ypos -246
    }
   end_group
   NoTimeBlur {
    name NoTimeBlur1
    xpos -283
    ypos -779
   }
   Transform {
    scale {{0.05+(0.05*(((parent.DecimalTimeOffset13.decimal-0.5)*2)*ScaleVariationSmoke))}}
    center {{root.width/2 x1015 2304} {root.height/2}}
    shutteroffset centred
    name Transform44
    xpos -283
    ypos -152
   }
   Card3D {
    inputs 3
    rot_order ZYX
    translate {0 0 0}
    rotate {90 0 0}
    shutteroffset centred
    name cCard3D25
    tile_color 0x7b1d1dff
    xpos -283
    ypos 11
    addUserKnob {20 User l parent}
    addUserKnob {22 python_button l "set parent" t "select parent node, and press this button to set the selected node as parent" +INVISIBLE T "n = nuke.selectedNode()\['name'].getValue()\nnuke.thisNode()\['string'].setValue(n)" +STARTLINE}
    addUserKnob {1 string l parent +INVISIBLE}
    string null
    addUserKnob {3 ref l "ref frame"}
    ref 1015
   }
   Transform {
    translate {{"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].translate.x(ref)\}]"} {"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].translate.y(ref)\}]"}}
    rotate {{"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].rotate-\[value parent_gun].rotate(ref)\}]"}}
    scale {{"\[if \{\[value parent_gun]==\"null\"\} \{return 1\} \{return 1+(\[value parent_gun].scale-\[value parent_gun].scale(ref))\}]"}}
    center {{"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].center.x(ref)\}]"} {"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].center.y(ref)\}]"}}
    name Transform_GUNMatchMove37
    xpos -283
    ypos 126
    addUserKnob {20 User l parent}
    addUserKnob {3 ref}
    ref {{parent.CTimeOffset.ref}}
   }
   Transform {
    translate {{"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].translate.x-\[value parent_env].translate.x(ref)\}]"} {"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].translate.y-\[value parent_env].translate.y(ref)\}]"}}
    rotate {{"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].rotate-\[value parent_env].rotate(ref)\}]"}}
    scale {{"\[if \{\[value parent_gun]==\"null\"\} \{return 1\} \{return 1+(\[value parent_env].scale-\[value parent_env].scale(ref))\}]"}}
    center {{"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].center.x(ref)\}]"} {"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].center.y(ref)\}]"}}
    motionblur 0.2
    shutter {{SmokeMB*0.5}}
    shutteroffset centred
    name Transform_ENVMatchMove37
    label "\n"
    xpos -283
    ypos 255
    addUserKnob {20 User l parent}
    addUserKnob {3 ref}
    ref {{parent.CTimeOffset.ref}}
   }
   Transform {
    translate {{"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return -((root.width/2)-(\[value parent_gun].center.x(1)+\[value parent_gun].translate.x(1)))\}]"} {"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return -((root.height/2)-(\[value parent_gun].center.y(1)+\[value parent_gun].translate.y(1)))\}]"}}
    name Transform_GUNMatchMove6
    label "alignment correction"
    xpos -283
    ypos 344
    addUserKnob {20 User l parent}
    addUserKnob {22 python_button l "set parent" t "select parent node, and press this button to set the selected node as parent" T "n = nuke.selectedNode()\['name'].getValue()\nnuke.thisNode()\['string'].setValue(n)" +STARTLINE}
    addUserKnob {1 string l parent}
    string Transform_MatchMove10
    addUserKnob {3 ref +INVISIBLE}
    ref {{parent.cCard3D_8.ref}}
   }
   Multiply {
    value {{math_matrix.result_y_smoke(parent.CTimeOffset.ref)}}
    name Angle_reveal_top1
    label TOP
    xpos -283
    ypos 403
   }
   Remove {
    operation keep
    channels rgb
    name Remove1
    xpos -283
    ypos 514
   }
push 0
   Switch {
    inputs 2
    which {{parent.Angle_reveal_top1.value>0.001}}
    name Switch1
    xpos -283
    ypos 660
   }
   Dot {
    name Dot82
    xpos -249
    ypos 705
   }
push 0
push $N5752d760
push 0
   Input {
    inputs 0
    name front
    xpos -436
    ypos -1243
    number 2
   }
   TimeOffset {
    time_offset {{"shot_\[value shotnmbr]==0 ? 0 : shot_\[value shotnmbr]-1"}}
    time ""
    name CTimeOffset2
    label "shot: \[value shotnmbr]\non frame \[value time_offset]"
    xpos -436
    ypos -925
    addUserKnob {20 User}
    addUserKnob {3 shotnmbr l "shot "}
    shotnmbr {{shotcount}}
    addUserKnob {3 ref}
    ref {{time_offset+1}}
   }
   Group {
    name DecimalTimeOffset2
    tile_color 0xafa35dff
    label "random asset"
    note_font "Bitstream Vera Sans Bold"
    xpos -436
    ypos -842
    addUserKnob {20 User}
    addUserKnob {7 decimal l "time offset (decimal)"}
    decimal {{random(shotcount*seed)}}
    addUserKnob {26 ""}
    addUserKnob {26 _1 l "" +STARTLINE T "Chris Fryer | 2020\nupdated by Yorben Otto | 2024"}
   }
    Input {
     inputs 0
     name Input1
     xpos 426
     ypos -793
    }
    TimeOffset {
     time_offset {{(-floor(parent.decimal))*(DecimalTimeOffset2.decimal<0)}}
     time ""
     name TimeOffset1
     xpos 426
     ypos -675
    }
    Dot {
     name Dot6
     xpos 460
     ypos -635
    }
set N5780ad00 [stack 0]
    Dot {
     name Dot5
     xpos 350
     ypos -635
    }
    Dot {
     name Dot7
     xpos 350
     ypos -365
    }
push $N5780ad00
    Dot {
     name Dot1
     xpos 572
     ypos -635
    }
    TimeBlur {
     divisions 2
     shutter {{(parent.decimal-(floor(parent.decimal)))*2}}
     shutteroffset start
     shuttercustomoffset 0
     name TimeBlur1
     xpos 538
     ypos -558
    }
    Dot {
     name Dot2
     xpos 572
     ypos -490
    }
push $N5780ad00
    TimeBlur {
     divisions 2
     shutter {{parent.decimal*2}}
     shutteroffset start
     shuttercustomoffset 0
     name TimeBlur8
     xpos 426
     ypos -556
    }
    Switch {
     inputs 2
     which {{parent.decimal<0}}
     name Switch1
     xpos 426
     ypos -494
    }
    Multiply {
     value {{parent.TimeBlur8.divisions}}
     name Multiply6
     xpos 426
     ypos -436
    }
    Merge2 {
     inputs 2
     operation from
     name Merge6
     xpos 426
     ypos -369
    }
set N5784cc40 [stack 0]
    Output {
     name Output1
     xpos 426
     ypos -221
    }
push $N5784cc40
push $N5784cc40
    Viewer {
     inputs 2
     frame_range 1-100
     name Viewer1
     xpos 675
     ypos -246
    }
   end_group
   NoTimeBlur {
    name NoTimeBlur5
    xpos -436
    ypos -780
   }
   Transform {
    scale {{0.05+(0.05*(((parent.DecimalTimeOffset13.decimal-0.5)*2)*ScaleVariationSmoke))}}
    center {{root.width/2 x1015 2304} {root.height/2}}
    shutteroffset centred
    name Transform45
    xpos -436
    ypos -151
   }
   Card3D {
    inputs 3
    rot_order ZYX
    translate {0 0 0}
    rotate {0 90 0}
    shutteroffset centred
    name cCard3D26
    tile_color 0x7b1d1dff
    xpos -436
    ypos 15
    addUserKnob {20 User l parent}
    addUserKnob {22 python_button l "set parent" t "select parent node, and press this button to set the selected node as parent" +INVISIBLE T "n = nuke.selectedNode()\['name'].getValue()\nnuke.thisNode()\['string'].setValue(n)" +STARTLINE}
    addUserKnob {1 string l parent +INVISIBLE}
    string null
    addUserKnob {3 ref l "ref frame"}
    ref 1015
   }
   Transform {
    translate {{"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].translate.x(ref)\}]"} {"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].translate.y(ref)\}]"}}
    rotate {{"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].rotate-\[value parent_gun].rotate(ref)\}]"}}
    scale {{"\[if \{\[value parent_gun]==\"null\"\} \{return 1\} \{return 1+(\[value parent_gun].scale-\[value parent_gun].scale(ref))\}]"}}
    center {{"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].center.x(ref)\}]"} {"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].center.y(ref)\}]"}}
    name Transform_GUNMatchMove38
    label "\n"
    xpos -436
    ypos 124
    addUserKnob {20 User l parent}
    addUserKnob {3 ref}
    ref {{parent.CTimeOffset.ref}}
   }
   Transform {
    translate {{"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].translate.x-\[value parent_env].translate.x(ref)\}]"} {"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].translate.y-\[value parent_env].translate.y(ref)\}]"}}
    rotate {{"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].rotate-\[value parent_env].rotate(ref)\}]"}}
    scale {{"\[if \{\[value parent_gun]==\"null\"\} \{return 1\} \{return 1+(\[value parent_env].scale-\[value parent_env].scale(ref))\}]"}}
    center {{"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].center.x(ref)\}]"} {"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].center.y(ref)\}]"}}
    motionblur 0.2
    shutter {{SmokeMB*0.5}}
    shutteroffset centred
    name Transform_ENVMatchMove38
    xpos -436
    ypos 254
    addUserKnob {20 User l parent}
    addUserKnob {3 ref}
    ref {{parent.CTimeOffset.ref}}
   }
   Transform {
    translate {{"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return -((root.width/2)-(\[value parent_gun].center.x(1)+\[value parent_gun].translate.x(1)))\}]"} {"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return -((root.height/2)-(\[value parent_gun].center.y(1)+\[value parent_gun].translate.y(1)))\}]"}}
    name Transform_GUNMatchMove7
    label "alignment correction"
    xpos -436
    ypos 343
    addUserKnob {20 User l parent}
    addUserKnob {22 python_button l "set parent" t "select parent node, and press this button to set the selected node as parent" T "n = nuke.selectedNode()\['name'].getValue()\nnuke.thisNode()\['string'].setValue(n)" +STARTLINE}
    addUserKnob {1 string l parent}
    string Transform_MatchMove10
    addUserKnob {3 ref +INVISIBLE}
    ref {{parent.cCard3D_8.ref}}
   }
   Multiply {
    value {{math_matrix.result_x_smoke(parent.CTimeOffset.ref)}}
    name Angle_reveal_front1
    label FRONT
    xpos -436
    ypos 401
   }
   Remove {
    operation keep
    channels rgb
    name Remove2
    xpos -436
    ypos 511
   }
push 0
   Switch {
    inputs 2
    which {{parent.Angle_reveal_front1.value>0.001}}
    name Switch2
    xpos -436
    ypos 660
   }
   Dot {
    name Dot83
    xpos -402
    ypos 735
   }
   Input {
    inputs 0
    name side
    xpos -130
    ypos -1242
   }
   TimeOffset {
    time_offset {{"shot_\[value shotnmbr]==0 ? 0 : shot_\[value shotnmbr]-1"}}
    time ""
    name CTimeOffset
    label "shot: \[value shotnmbr]\non frame \[value time_offset]"
    selected true
    xpos -130
    ypos -927
    addUserKnob {20 User}
    addUserKnob {3 shotnmbr l "shot "}
    shotnmbr {{shotcount}}
    addUserKnob {3 ref}
    ref {{time_offset+1}}
   }
   Group {
    name DecimalTimeOffset13
    tile_color 0xafa35dff
    label "random asset"
    note_font "Bitstream Vera Sans Bold"
    xpos -130
    ypos -844
    addUserKnob {20 User}
    addUserKnob {7 decimal l "time offset (decimal)"}
    decimal {{random(shotcount*seed)}}
    addUserKnob {26 ""}
    addUserKnob {26 _1 l "" +STARTLINE T "Chris Fryer | 2020\nupdated by Yorben Otto | 2024"}
   }
    Input {
     inputs 0
     name Input1
     xpos 426
     ypos -793
    }
    TimeOffset {
     time_offset {{(-floor(parent.decimal))*(DecimalTimeOffset13.decimal<0)}}
     time ""
     name TimeOffset1
     xpos 426
     ypos -675
    }
    Dot {
     name Dot6
     xpos 460
     ypos -635
    }
set N52698bb0 [stack 0]
    Dot {
     name Dot5
     xpos 350
     ypos -635
    }
    Dot {
     name Dot7
     xpos 350
     ypos -365
    }
push $N52698bb0
    Dot {
     name Dot1
     xpos 572
     ypos -635
    }
    TimeBlur {
     divisions 2
     shutter {{(parent.decimal-(floor(parent.decimal)))*2}}
     shutteroffset start
     shuttercustomoffset 0
     name TimeBlur1
     xpos 538
     ypos -558
    }
    Dot {
     name Dot2
     xpos 572
     ypos -490
    }
push $N52698bb0
    TimeBlur {
     divisions 2
     shutter {{parent.decimal*2}}
     shutteroffset start
     shuttercustomoffset 0
     name TimeBlur8
     xpos 426
     ypos -556
    }
    Switch {
     inputs 2
     which {{parent.decimal<0}}
     name Switch1
     xpos 426
     ypos -494
    }
    Multiply {
     value {{parent.TimeBlur8.divisions}}
     name Multiply6
     xpos 426
     ypos -436
    }
    Merge2 {
     inputs 2
     operation from
     name Merge6
     xpos 426
     ypos -369
    }
set N526daaf0 [stack 0]
    Output {
     name Output1
     xpos 426
     ypos -221
    }
push $N526daaf0
push $N526daaf0
    Viewer {
     inputs 2
     frame_range 1-100
     name Viewer1
     xpos 675
     ypos -246
    }
   end_group
   NoTimeBlur {
    name NoTimeBlur13
    xpos -130
    ypos -782
   }
   Transform {
    scale {{0.05+(0.05*(((parent.DecimalTimeOffset13.decimal-0.5)*2)*ScaleVariationSmoke))}}
    center {{root.width/2 x1015 2304} {root.height/2}}
    shutteroffset centred
    name Transform46
    xpos -130
    ypos -155
   }
   Card3D {
    translate {{"\[if \{\[exists  parent.parent.parent.input0]\} \{return \[value \[topnode parent.parent.parent.input0].name].translate.x(ref)\} \{return 0\}]"} {"\[if \{\[exists  parent.parent.parent.input0]\} \{return \[value \[topnode parent.parent.parent.input0].name].translate.y(ref)\} \{return 0\}]"} {"\[if \{\[exists  parent.parent.parent.input0]\} \{return \[value \[topnode parent.parent.parent.input0].name].translate.z(ref)\} \{return -1\}]"}}
    rotate {{"\[if \{\[exists  parent.parent.parent.input0]\} \{return \[value \[topnode parent.parent.parent.input0].name].rotate.x(ref)\} \{return 0\}]"} {"\[if \{\[exists  parent.parent.parent.input0]\} \{return \[value \[topnode parent.parent.parent.input0].name].rotate.y(ref)\} \{return 0\}]"} {"\[if \{\[exists  parent.parent.parent.input0]\} \{return \[value \[topnode parent.parent.parent.input0].name].rotate.z(ref)\} \{return 0\}]"}}
    scaling {{"\[if \{\[exists  parent.parent.parent.input0]\} \{return \[value \[topnode parent.parent.parent.input0].name].scaling.x(ref)\} \{return 1\}]"} {"\[if \{\[exists  parent.parent.parent.input0]\} \{return \[value \[topnode parent.parent.parent.input0].name].scaling.y(ref)\} \{return 1\}]"} {"\[if \{\[exists  parent.parent.parent.input0]\} \{return \[value \[topnode parent.parent.parent.input0].name].scaling.z(ref)\} \{return 1\}]"}}
    uniform_scale {{"\[if \{\[exists  parent.parent.parent.input0]\} \{return (\[value \[topnode parent.parent.parent.input0].name].uniform_scale(ref)*25)\} \{return 25\}]"}}
    shutteroffset centred
    name cCard3D_1
    tile_color 0x7b1d1dff
    label "ref frame: \[value ref]"
    xpos -130
    ypos 2
    addUserKnob {20 User l parent}
    addUserKnob {22 python_button l "set parent" t "select parent node, and press this button to set the selected node as parent" +INVISIBLE T "n = nuke.selectedNode()\['name'].getValue()\nnuke.thisNode()\['string'].setValue(n)" +STARTLINE}
    addUserKnob {1 string l parent +INVISIBLE}
    string null
    addUserKnob {3 id l "id number"}
    id {{parent.CTimeOffset.shotnmbr}}
    addUserKnob {3 ref l "ref frame"}
    ref {{parent.CTimeOffset.ref}}
   }
   Transform {
    translate {{"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].translate.x(ref)\}]"} {"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].translate.y(ref)\}]"}}
    rotate {{"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].rotate-\[value parent_gun].rotate(ref)\}]"}}
    scale {{"\[if \{\[value parent_gun]==\"null\"\} \{return 1\} \{return 1+(\[value parent_gun].scale-\[value parent_gun].scale(ref))\}]"}}
    center {{"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].center.x(ref)\}]"} {"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].center.y(ref)\}]"}}
    name Transform_GUNMatchMove39
    label "\n"
    xpos -130
    ypos 124
    addUserKnob {20 User l parent}
    addUserKnob {3 ref}
    ref {{parent.CTimeOffset.ref}}
   }
   Transform {
    translate {{"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].translate.x-\[value parent_env].translate.x(ref)\}]"} {"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].translate.y-\[value parent_env].translate.y(ref)\}]"}}
    rotate {{"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].rotate-\[value parent_env].rotate(ref)\}]"}}
    scale {{"\[if \{\[value parent_gun]==\"null\"\} \{return 1\} \{return 1+(\[value parent_env].scale-\[value parent_env].scale(ref))\}]"}}
    center {{"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].center.x(ref)\}]"} {"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].center.y(ref)\}]"}}
    motionblur 0.2
    shutter {{SmokeMB*0.5}}
    shutteroffset centred
    name Transform_ENVMatchMove39
    xpos -130
    ypos 258
    addUserKnob {20 User l parent}
    addUserKnob {3 ref}
    ref {{parent.CTimeOffset.ref}}
   }
   Transform {
    translate {{"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return -((root.width/2)-(\[value parent_gun].center.x(1)+\[value parent_gun].translate.x(1)))\}]"} {"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return -((root.height/2)-(\[value parent_gun].center.y(1)+\[value parent_gun].translate.y(1)))\}]"}}
    name Transform_GUNMatchMove5
    label "alignment correction"
    xpos -130
    ypos 340
    addUserKnob {20 User l parent}
    addUserKnob {22 python_button l "set parent" t "select parent node, and press this button to set the selected node as parent" T "n = nuke.selectedNode()\['name'].getValue()\nnuke.thisNode()\['string'].setValue(n)" +STARTLINE}
    addUserKnob {1 string l parent}
    string Transform_MatchMove10
    addUserKnob {3 ref +INVISIBLE}
    ref {{parent.cCard3D_8.ref}}
   }
   Multiply {
    value {{math_matrix.result_z_smoke(parent.CTimeOffset.ref)}}
    name Angle_reveal_side1
    label SIDE
    xpos -130
    ypos 404
   }
   Remove {
    operation keep
    channels rgb
    name Remove39
    xpos -130
    ypos 514
   }
push 0
   Switch {
    inputs 2
    which {{parent.Angle_reveal_side1.value>0.001}}
    name Switch3
    xpos -130
    ypos 658
   }
   Merge2 {
    inputs 3+1
    operation max
    Achannels rgb
    Bchannels rgb
    output rgb
    name Merge28
    xpos -130
    ypos 731
   }
   Merge2 {
    inputs 2
    operation plus
    bbox intersection
    Achannels rgb
    Bchannels rgb
    output rgb
    name Merge29
    xpos -130
    ypos 983
   }
   Shuffle2 {
    fromInput1 {{0} B}
    fromInput2 {{0} B}
    mappings "4 rgba.red 0 0 rgba.red 0 0 rgba.green 0 1 rgba.green 0 1 rgba.blue 0 2 rgba.alpha 0 3 rgba.blue 0 2 rgba.blue 0 2"
    name Shuffle1
    xpos -130
    ypos 1021
   }
push 0
   Switch {
    inputs 2
    which {{"shot_\[value count]==0?0:frame>=shot_\[value count]"}}
    name cSwitch_13
    xpos -130
    ypos 1078
    addUserKnob {20 User}
    addUserKnob {3 count}
    count {{parent.CTimeOffset.shotnmbr}}
   }
   Output {
    name Output1
    xpos -130
    ypos 1323
   }
   StickyNote {
    inputs 0
    name StickyNote1
    label "<-- handy to break concatonation?  "
    xpos -39
    ypos 193
   }
  end_group
push $N586971d0
  PostageStamp {
   name Stamp7
   help "Stamps by Adrian Pueyo and Alexey Kuchinski.\nUpdated May 18 2021"
   onCreate "if nuke.GUI:\n    try:\n        import stamps; stamps.wiredOnCreate()\n    except:\n        pass\n"
   knobChanged "import stamps; stamps.wiredKnobChanged()"
   autolabel "nuke.thisNode().knob(\"title\").value()"
   tile_color 0x1000001
   note_font "Bitstream Vera Sans"
   note_font_size 20
   xpos 376
   ypos -656
   hide_input true
   addUserKnob {20 wired_tab l "Wired Stamp"}
   addUserKnob {26 identifier -STARTLINE +HIDDEN T wired}
   addUserKnob {3 lockCallbacks l "" +STARTLINE +HIDDEN}
   addUserKnob {6 toReconnect -STARTLINE +HIDDEN}
   addUserKnob {1 title l Title: t "Displayed name on the Node Graph for this Stamp and its Anchor.\nIMPORTANT: This is only for display purposes, and is different from the real/internal name of the Stamps."}
   title smoke_FRONT
   addUserKnob {26 prev_title l "" +STARTLINE +HIDDEN T smoke_FRONT}
   addUserKnob {26 tags l Tags: t "Tags of this stamp's Anchor, for information purpose only.\nClick \"show anchor\" to change them." T <i>2D</i>}
   addUserKnob {26 backdrops l Backdrops: t "Labels of backdrop nodes which contain this stamp's Anchor." T "<i><Left>before or after Flare</i>"}
   addUserKnob {26 line1 l "" +STARTLINE}
   addUserKnob {6 postageStamp_show l "postage stamp" t "Enable the postage stamp thumbnail in this node.\nYou're seeing this because the class of this node includes the postage_stamp knob." +STARTLINE}
   addUserKnob {26 anchor_label l Anchor: T " "}
   addUserKnob {22 show_anchor l " show anchor " t "Show the properties panel for this Stamp's Anchor." -STARTLINE T stamps.wiredShowAnchor()}
   addUserKnob {22 zoom_anchor l "zoom anchor" t "Navigate to this Stamp's Anchor on the Node Graph." -STARTLINE T stamps.wiredZoomAnchor()}
   addUserKnob {26 stamps_label l Stamps: T " "}
   addUserKnob {22 zoomNext l " zoom next " t "Navigate to this Stamp's next sibling on the Node Graph." -STARTLINE T stamps.wiredZoomNext()}
   addUserKnob {22 selectSimilar l " select similar " t "Select all similar Stamps to this one on the Node Graph." -STARTLINE T stamps.wiredSelectSimilar()}
   addUserKnob {26 space_1 l "" +STARTLINE T " "}
   addUserKnob {26 reconnect_label l Reconnect: t "Reconnect by the stored Anchor name." T " "}
   addUserKnob {22 reconnect_this l this t "Reconnect this Stamp to its Anchor, by its stored Anchor name." -STARTLINE T "n = nuke.thisNode()\ntry:\n    n.setInput(0,nuke.toNode(n.knob(\"anchor\").value()))\nexcept:\n    nuke.message(\"Unable to reconnect.\")\ntry:\n    import stamps\n    stamps.wiredGetStyle(n)\nexcept:\n    pass\n"}
   addUserKnob {22 reconnect_similar l similar t "Reconnect this Stamp and similar ones to their Anchor, by their stored anchor name." -STARTLINE T stamps.wiredReconnectSimilar()}
   addUserKnob {22 reconnect_all l all t "Reconnect all the Stamps to their Anchors, by their stored anchor names." -STARTLINE T stamps.wiredReconnectAll()}
   addUserKnob {26 space_2 l "" +STARTLINE T " "}
   addUserKnob {20 advanced_reconnection l "Advanced Reconnection" n 2}
   addUserKnob {26 reconnect_by_title_label l "<font color=gold>By Title:" t "Reconnect by searching for a matching title." T " "}
   addUserKnob {22 reconnect_by_title_this l this t "Look for an Anchor that shares this Stamp's title, and connect this Stamp to it.\nIMPORTANT: Use this carefully, and only when the normal reconnection doesn't work." -STARTLINE T stamps.wiredReconnectByTitle()}
   addUserKnob {22 reconnect_by_title_similar l similar t "Look for an Anchor that shares this Stamp's title, and connect this Stamp and similar ones to it.\nIMPORTANT: Use this carefully, and only when the normal reconnection doesn't work." -STARTLINE T stamps.wiredReconnectByTitleSimilar()}
   addUserKnob {22 reconnect_by_title_selected l selected t "For each Stamp selected, look for an Anchor that shares its title, and connect to it.\nIMPORTANT: Use this carefully, and only when the normal reconnection doesn't work." -STARTLINE T stamps.wiredReconnectByTitleSelected()}
   addUserKnob {26 reconnect_by_selection_label l "<font color=orangered>By Selection:" t "Force reconnect to a selected Anchor." T " "}
   addUserKnob {22 reconnect_by_selection_this l this t "Force reconnect this Stamp to a selected Anchor, whatever its name or title.\nIMPORTANT: Use this carefully, and only when the normal reconnection doesn't work." -STARTLINE T stamps.wiredReconnectBySelection()}
   addUserKnob {22 reconnect_by_selection_similar l similar t "Force reconnect this Stamp and similar ones to a selected Anchor, whatever its name or title.\nIMPORTANT: Use this carefully, and only when the normal reconnection doesn't work." -STARTLINE T stamps.wiredReconnectBySelectionSimilar()}
   addUserKnob {22 reconnect_by_selection_selected l selected t "Force reconnect all selected Stamps to an also selected Anchor, whatever its name or title.\nIMPORTANT: Use this carefully, and only when the normal reconnection doesn't work." -STARTLINE T stamps.wiredReconnectBySelectionSelected()}
   addUserKnob {1 anchor l Anchor}
   anchor Anchor_220a2be282
   addUserKnob {6 auto_reconnect_by_title l "<font color=#ED9977>&nbsp; auto-reconnect by title" t "When creating this stamp again (like on copy-paste), auto-reconnect it by title instead of doing it by the saved anchor's name, and auto-turn this off immediately.\nIMPORTANT: Should be off by default. Only use this for setting up templates." +STARTLINE}
   addUserKnob {26 line2 l "" +STARTLINE}
   addUserKnob {22 buttonHelp l Help -STARTLINE T stamps.showHelp()}
   addUserKnob {26 version l " " t "Stamps by Adrian Pueyo and Alexey Kuchinski.\nUpdated May 18 2021." -STARTLINE T "<a href=\"http://www.nukepedia.com/gizmos/other/stamps\" style=\"color:#666;text-decoration: none;\"><span style=\"color:#666\"> <big>Stamps v1.1</big></b></a>"}
  }
  Dot {
   name Dot5
   xpos 410
   ypos -608
  }
push $N58d70c10
  PostageStamp {
   name Stamp8
   help "Stamps by Adrian Pueyo and Alexey Kuchinski.\nUpdated May 18 2021"
   onCreate "if nuke.GUI:\n    try:\n        import stamps; stamps.wiredOnCreate()\n    except:\n        pass\n"
   knobChanged "import stamps; stamps.wiredKnobChanged()"
   autolabel "nuke.thisNode().knob(\"title\").value()"
   tile_color 0x1000001
   note_font "Bitstream Vera Sans"
   note_font_size 20
   xpos 501
   ypos -656
   hide_input true
   addUserKnob {20 wired_tab l "Wired Stamp"}
   addUserKnob {26 identifier -STARTLINE +HIDDEN T wired}
   addUserKnob {3 lockCallbacks l "" +STARTLINE +HIDDEN}
   addUserKnob {6 toReconnect -STARTLINE +HIDDEN}
   addUserKnob {1 title l Title: t "Displayed name on the Node Graph for this Stamp and its Anchor.\nIMPORTANT: This is only for display purposes, and is different from the real/internal name of the Stamps."}
   title smoke_TOP
   addUserKnob {26 prev_title l "" +STARTLINE +HIDDEN T smoke_TOP}
   addUserKnob {26 tags l Tags: t "Tags of this stamp's Anchor, for information purpose only.\nClick \"show anchor\" to change them." T <i>2D</i>}
   addUserKnob {26 backdrops l Backdrops: t "Labels of backdrop nodes which contain this stamp's Anchor." T "<i><Left>before or after Flare</i>"}
   addUserKnob {26 line1 l "" +STARTLINE}
   addUserKnob {6 postageStamp_show l "postage stamp" t "Enable the postage stamp thumbnail in this node.\nYou're seeing this because the class of this node includes the postage_stamp knob." +STARTLINE}
   addUserKnob {26 anchor_label l Anchor: T " "}
   addUserKnob {22 show_anchor l " show anchor " t "Show the properties panel for this Stamp's Anchor." -STARTLINE T stamps.wiredShowAnchor()}
   addUserKnob {22 zoom_anchor l "zoom anchor" t "Navigate to this Stamp's Anchor on the Node Graph." -STARTLINE T stamps.wiredZoomAnchor()}
   addUserKnob {26 stamps_label l Stamps: T " "}
   addUserKnob {22 zoomNext l " zoom next " t "Navigate to this Stamp's next sibling on the Node Graph." -STARTLINE T stamps.wiredZoomNext()}
   addUserKnob {22 selectSimilar l " select similar " t "Select all similar Stamps to this one on the Node Graph." -STARTLINE T stamps.wiredSelectSimilar()}
   addUserKnob {26 space_1 l "" +STARTLINE T " "}
   addUserKnob {26 reconnect_label l Reconnect: t "Reconnect by the stored Anchor name." T " "}
   addUserKnob {22 reconnect_this l this t "Reconnect this Stamp to its Anchor, by its stored Anchor name." -STARTLINE T "n = nuke.thisNode()\ntry:\n    n.setInput(0,nuke.toNode(n.knob(\"anchor\").value()))\nexcept:\n    nuke.message(\"Unable to reconnect.\")\ntry:\n    import stamps\n    stamps.wiredGetStyle(n)\nexcept:\n    pass\n"}
   addUserKnob {22 reconnect_similar l similar t "Reconnect this Stamp and similar ones to their Anchor, by their stored anchor name." -STARTLINE T stamps.wiredReconnectSimilar()}
   addUserKnob {22 reconnect_all l all t "Reconnect all the Stamps to their Anchors, by their stored anchor names." -STARTLINE T stamps.wiredReconnectAll()}
   addUserKnob {26 space_2 l "" +STARTLINE T " "}
   addUserKnob {20 advanced_reconnection l "Advanced Reconnection" n 2}
   addUserKnob {26 reconnect_by_title_label l "<font color=gold>By Title:" t "Reconnect by searching for a matching title." T " "}
   addUserKnob {22 reconnect_by_title_this l this t "Look for an Anchor that shares this Stamp's title, and connect this Stamp to it.\nIMPORTANT: Use this carefully, and only when the normal reconnection doesn't work." -STARTLINE T stamps.wiredReconnectByTitle()}
   addUserKnob {22 reconnect_by_title_similar l similar t "Look for an Anchor that shares this Stamp's title, and connect this Stamp and similar ones to it.\nIMPORTANT: Use this carefully, and only when the normal reconnection doesn't work." -STARTLINE T stamps.wiredReconnectByTitleSimilar()}
   addUserKnob {22 reconnect_by_title_selected l selected t "For each Stamp selected, look for an Anchor that shares its title, and connect to it.\nIMPORTANT: Use this carefully, and only when the normal reconnection doesn't work." -STARTLINE T stamps.wiredReconnectByTitleSelected()}
   addUserKnob {26 reconnect_by_selection_label l "<font color=orangered>By Selection:" t "Force reconnect to a selected Anchor." T " "}
   addUserKnob {22 reconnect_by_selection_this l this t "Force reconnect this Stamp to a selected Anchor, whatever its name or title.\nIMPORTANT: Use this carefully, and only when the normal reconnection doesn't work." -STARTLINE T stamps.wiredReconnectBySelection()}
   addUserKnob {22 reconnect_by_selection_similar l similar t "Force reconnect this Stamp and similar ones to a selected Anchor, whatever its name or title.\nIMPORTANT: Use this carefully, and only when the normal reconnection doesn't work." -STARTLINE T stamps.wiredReconnectBySelectionSimilar()}
   addUserKnob {22 reconnect_by_selection_selected l selected t "Force reconnect all selected Stamps to an also selected Anchor, whatever its name or title.\nIMPORTANT: Use this carefully, and only when the normal reconnection doesn't work." -STARTLINE T stamps.wiredReconnectBySelectionSelected()}
   addUserKnob {1 anchor l Anchor}
   anchor Anchor_25b668170c
   addUserKnob {6 auto_reconnect_by_title l "<font color=#ED9977>&nbsp; auto-reconnect by title" t "When creating this stamp again (like on copy-paste), auto-reconnect it by title instead of doing it by the saved anchor's name, and auto-turn this off immediately.\nIMPORTANT: Should be off by default. Only use this for setting up templates." +STARTLINE}
   addUserKnob {26 line2 l "" +STARTLINE}
   addUserKnob {22 buttonHelp l Help -STARTLINE T stamps.showHelp()}
   addUserKnob {26 version l " " t "Stamps by Adrian Pueyo and Alexey Kuchinski.\nUpdated May 18 2021." -STARTLINE T "<a href=\"http://www.nukepedia.com/gizmos/other/stamps\" style=\"color:#666;text-decoration: none;\"><span style=\"color:#666\"> <big>Stamps v1.1</big></b></a>"}
  }
push $N56244930
  PostageStamp {
   name Stamp9
   help "Stamps by Adrian Pueyo and Alexey Kuchinski.\nUpdated May 18 2021"
   onCreate "if nuke.GUI:\n    try:\n        import stamps; stamps.wiredOnCreate()\n    except:\n        pass\n"
   knobChanged "import stamps; stamps.wiredKnobChanged()"
   autolabel "nuke.thisNode().knob(\"title\").value()"
   tile_color 0x1000001
   note_font "Bitstream Vera Sans"
   note_font_size 20
   xpos 619
   ypos -658
   hide_input true
   addUserKnob {20 wired_tab l "Wired Stamp"}
   addUserKnob {26 identifier -STARTLINE +HIDDEN T wired}
   addUserKnob {3 lockCallbacks l "" +STARTLINE +HIDDEN}
   addUserKnob {6 toReconnect -STARTLINE +HIDDEN}
   addUserKnob {1 title l Title: t "Displayed name on the Node Graph for this Stamp and its Anchor.\nIMPORTANT: This is only for display purposes, and is different from the real/internal name of the Stamps."}
   title smoke_SIDE
   addUserKnob {26 prev_title l "" +STARTLINE +HIDDEN T smoke_SIDE}
   addUserKnob {26 tags l Tags: t "Tags of this stamp's Anchor, for information purpose only.\nClick \"show anchor\" to change them." T <i>2D</i>}
   addUserKnob {26 backdrops l Backdrops: t "Labels of backdrop nodes which contain this stamp's Anchor." T "<i><Left>before or after Flare</i>"}
   addUserKnob {26 line1 l "" +STARTLINE}
   addUserKnob {6 postageStamp_show l "postage stamp" t "Enable the postage stamp thumbnail in this node.\nYou're seeing this because the class of this node includes the postage_stamp knob." +STARTLINE}
   addUserKnob {26 anchor_label l Anchor: T " "}
   addUserKnob {22 show_anchor l " show anchor " t "Show the properties panel for this Stamp's Anchor." -STARTLINE T stamps.wiredShowAnchor()}
   addUserKnob {22 zoom_anchor l "zoom anchor" t "Navigate to this Stamp's Anchor on the Node Graph." -STARTLINE T stamps.wiredZoomAnchor()}
   addUserKnob {26 stamps_label l Stamps: T " "}
   addUserKnob {22 zoomNext l " zoom next " t "Navigate to this Stamp's next sibling on the Node Graph." -STARTLINE T stamps.wiredZoomNext()}
   addUserKnob {22 selectSimilar l " select similar " t "Select all similar Stamps to this one on the Node Graph." -STARTLINE T stamps.wiredSelectSimilar()}
   addUserKnob {26 space_1 l "" +STARTLINE T " "}
   addUserKnob {26 reconnect_label l Reconnect: t "Reconnect by the stored Anchor name." T " "}
   addUserKnob {22 reconnect_this l this t "Reconnect this Stamp to its Anchor, by its stored Anchor name." -STARTLINE T "n = nuke.thisNode()\ntry:\n    n.setInput(0,nuke.toNode(n.knob(\"anchor\").value()))\nexcept:\n    nuke.message(\"Unable to reconnect.\")\ntry:\n    import stamps\n    stamps.wiredGetStyle(n)\nexcept:\n    pass\n"}
   addUserKnob {22 reconnect_similar l similar t "Reconnect this Stamp and similar ones to their Anchor, by their stored anchor name." -STARTLINE T stamps.wiredReconnectSimilar()}
   addUserKnob {22 reconnect_all l all t "Reconnect all the Stamps to their Anchors, by their stored anchor names." -STARTLINE T stamps.wiredReconnectAll()}
   addUserKnob {26 space_2 l "" +STARTLINE T " "}
   addUserKnob {20 advanced_reconnection l "Advanced Reconnection" n 2}
   addUserKnob {26 reconnect_by_title_label l "<font color=gold>By Title:" t "Reconnect by searching for a matching title." T " "}
   addUserKnob {22 reconnect_by_title_this l this t "Look for an Anchor that shares this Stamp's title, and connect this Stamp to it.\nIMPORTANT: Use this carefully, and only when the normal reconnection doesn't work." -STARTLINE T stamps.wiredReconnectByTitle()}
   addUserKnob {22 reconnect_by_title_similar l similar t "Look for an Anchor that shares this Stamp's title, and connect this Stamp and similar ones to it.\nIMPORTANT: Use this carefully, and only when the normal reconnection doesn't work." -STARTLINE T stamps.wiredReconnectByTitleSimilar()}
   addUserKnob {22 reconnect_by_title_selected l selected t "For each Stamp selected, look for an Anchor that shares its title, and connect to it.\nIMPORTANT: Use this carefully, and only when the normal reconnection doesn't work." -STARTLINE T stamps.wiredReconnectByTitleSelected()}
   addUserKnob {26 reconnect_by_selection_label l "<font color=orangered>By Selection:" t "Force reconnect to a selected Anchor." T " "}
   addUserKnob {22 reconnect_by_selection_this l this t "Force reconnect this Stamp to a selected Anchor, whatever its name or title.\nIMPORTANT: Use this carefully, and only when the normal reconnection doesn't work." -STARTLINE T stamps.wiredReconnectBySelection()}
   addUserKnob {22 reconnect_by_selection_similar l similar t "Force reconnect this Stamp and similar ones to a selected Anchor, whatever its name or title.\nIMPORTANT: Use this carefully, and only when the normal reconnection doesn't work." -STARTLINE T stamps.wiredReconnectBySelectionSimilar()}
   addUserKnob {22 reconnect_by_selection_selected l selected t "Force reconnect all selected Stamps to an also selected Anchor, whatever its name or title.\nIMPORTANT: Use this carefully, and only when the normal reconnection doesn't work." -STARTLINE T stamps.wiredReconnectBySelectionSelected()}
   addUserKnob {1 anchor l Anchor}
   anchor Anchor_232c9aab88
   addUserKnob {6 auto_reconnect_by_title l "<font color=#ED9977>&nbsp; auto-reconnect by title" t "When creating this stamp again (like on copy-paste), auto-reconnect it by title instead of doing it by the saved anchor's name, and auto-turn this off immediately.\nIMPORTANT: Should be off by default. Only use this for setting up templates." +STARTLINE}
   addUserKnob {26 line2 l "" +STARTLINE}
   addUserKnob {22 buttonHelp l Help -STARTLINE T stamps.showHelp()}
   addUserKnob {26 version l " " t "Stamps by Adrian Pueyo and Alexey Kuchinski.\nUpdated May 18 2021." -STARTLINE T "<a href=\"http://www.nukepedia.com/gizmos/other/stamps\" style=\"color:#666;text-decoration: none;\"><span style=\"color:#666\"> <big>Stamps v1.1</big></b></a>"}
  }
  Dot {
   name Dot6
   xpos 653
   ypos -608
  }
  Group {
   inputs 3
   name gunshot3
   label "shot: \[value shotcount]\non frame: \[value shotstart]\n"
   xpos 501
   ypos -581
   addUserKnob {20 User}
   addUserKnob {3 shotcount l shot}
   shotcount 3
   addUserKnob {3 shotstart l frame +INVISIBLE}
   shotstart {{"shotcount==0 ? 0 : shot\[value shotcount]-1" i}}
  }
   BackdropNode {
    inputs 0
    name BackdropNode19
    knobChanged "try:\n    listenedKnobs = \['text', 'position', 'name']\n    node = nuke.thisNode()\n    name = node.knob('name').value()\n    text = node.knob('text').value()\n    position = node.knob('position').value()\n    position = \"<\" + position + \">\"\n    label = node.knob('label').value()\n    \n    if nuke.thisKnob().name() in listenedKnobs:\n        if text == \"\":\n            if node.knob('position').value() == \"left\":\n                node.knob('label').setValue()\n            else:\n                node.knob('label').setValue(position + name)\n        else:\n            if node.knob('position').value() == \"left\":\n                node.knob('label').setValue(text)\n            else:\n                node.knob('label').setValue(position + text)\n                \n    elif nuke.thisKnob().name() == 'font_size':\n        fontSize = node.knob('font_size').value()\n        node.knob('note_font_size').setValue(fontSize)\nexcept:\n    pass"
    tile_color 0x232323ff
    label "<Left><h2> Gunshot"
    note_font_size 31.5
    xpos -693
    ypos -554
    bdwidth 876
    bdheight 1682
    addUserKnob {20 F_VFX l BackdropNode}
    addUserKnob {43 text l Text}
    text "<h2> Gunshot"
    addUserKnob {7 font_size l "Font Size" R 10 100}
    font_size 31.5
    addUserKnob {4 position l "" -STARTLINE M {Left Center}}
    addUserKnob {26 S01 l " " T " "}
    addUserKnob {22 grow l " <img src=\"F_scalep.png\">" -STARTLINE T "n=nuke.thisNode()\n\ndef grow(node=None,step=50):\n    try:\n        if not node:\n            n=nuke.selectedNode()\n        else:\n            n=node\n            n\['xpos'].setValue(n\['xpos'].getValue()-step)\n            n\['ypos'].setValue(n\['ypos'].getValue()-step)\n            n\['bdwidth'].setValue(n\['bdwidth'].getValue()+step*2)\n            n\['bdheight'].setValue(n\['bdheight'].getValue()+step*2)\n    except:\n        pass\ngrow(n,50)"}
    addUserKnob {22 shrink l " <img src=\"F_scalem.png\">" -STARTLINE T "n=nuke.thisNode()\n\ndef shrink(node=None,step=50):\n    try:\n        if not node:\n            n=nuke.selectedNode()\n        else:\n            n=node\n            n\['xpos'].setValue(n\['xpos'].getValue()+step)\n            n\['ypos'].setValue(n\['ypos'].getValue()+step)\n            n\['bdwidth'].setValue(n\['bdwidth'].getValue()-step*2)\n            n\['bdheight'].setValue(n\['bdheight'].getValue()-step*2)\n    except:\n        pass\nshrink(n,50)"}
    addUserKnob {22 colorandom l " <img src=\"ColorBars.png\">" -STARTLINE T "import colorsys, random\nn=nuke.thisNode()\nR,G,B= colorsys.hsv_to_rgb(random.random(),.1+random.random()*.15,.15+random.random()*.15)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ) )"}
    addUserKnob {22 darkgrey l "<font color=\"#232323\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.0, 0.0, 0.14]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 lightgrey l "<font color=\"#383838\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.0, 0.0, 0.22]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 red l "<font color=\"#8c3838\" size=6>■</font>" T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.0, 0.6, 0.55]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n" +STARTLINE}
    addUserKnob {22 orange l "<font color=\"#b28e59\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.1, 0.5, 0.7]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 yellow l "<font color=\"#ccc766\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.16, 0.5, 0.8]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 green l "<font color=\"#5d995b\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.33, 0.4, 0.6]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 cyan l "<font color=\"#72998f\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.46, 0.25, 0.6]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 blue l "<font color=\"#59687f\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.6, 0.3, 0.5]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 darkblue l "<font color=\"#63628c\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.67, 0.3, 0.55]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 magenta l "<font color=\"#927a99\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.8, 0.2, 0.6]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 pink l "<font color=\"#997a89\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.92, 0.2, 0.6]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {26 S02 l " " T " "}
    addUserKnob {26 Ftools l "" +STARTLINE T "<font color=\"#1C1C1C\"> v1.2 - Franklin VFX - 2018"}
   }
   BackdropNode {
    inputs 0
    name BackdropNode2
    knobChanged "try:\n    listenedKnobs = \['text', 'position', 'name']\n    node = nuke.thisNode()\n    name = node.knob('name').value()\n    text = node.knob('text').value()\n    position = node.knob('position').value()\n    position = \"<\" + position + \">\"\n    label = node.knob('label').value()\n    \n    if nuke.thisKnob().name() in listenedKnobs:\n        if text == \"\":\n            if node.knob('position').value() == \"left\":\n                node.knob('label').setValue()\n            else:\n                node.knob('label').setValue(position + name)\n        else:\n            if node.knob('position').value() == \"left\":\n                node.knob('label').setValue(text)\n            else:\n                node.knob('label').setValue(position + text)\n                \n    elif nuke.thisKnob().name() == 'font_size':\n        fontSize = node.knob('font_size').value()\n        node.knob('note_font_size').setValue(fontSize)\nexcept:\n    pass"
    tile_color 0x927a99ff
    note_font_size 50
    xpos -473
    ypos -221
    bdwidth 435
    bdheight 786
    z_order 1
    addUserKnob {20 F_VFX l BackdropNode}
    addUserKnob {43 text l Text}
    addUserKnob {7 font_size l "Font Size" R 10 100}
    font_size 50
    addUserKnob {4 position l "" -STARTLINE M {Left Center}}
    addUserKnob {26 S01 l " " T " "}
    addUserKnob {22 grow l " <img src=\"F_scalep.png\">" -STARTLINE T "n=nuke.thisNode()\n\ndef grow(node=None,step=50):\n    try:\n        if not node:\n            n=nuke.selectedNode()\n        else:\n            n=node\n            n\['xpos'].setValue(n\['xpos'].getValue()-step)\n            n\['ypos'].setValue(n\['ypos'].getValue()-step)\n            n\['bdwidth'].setValue(n\['bdwidth'].getValue()+step*2)\n            n\['bdheight'].setValue(n\['bdheight'].getValue()+step*2)\n    except:\n        pass\ngrow(n,50)"}
    addUserKnob {22 shrink l " <img src=\"F_scalem.png\">" -STARTLINE T "n=nuke.thisNode()\n\ndef shrink(node=None,step=50):\n    try:\n        if not node:\n            n=nuke.selectedNode()\n        else:\n            n=node\n            n\['xpos'].setValue(n\['xpos'].getValue()+step)\n            n\['ypos'].setValue(n\['ypos'].getValue()+step)\n            n\['bdwidth'].setValue(n\['bdwidth'].getValue()-step*2)\n            n\['bdheight'].setValue(n\['bdheight'].getValue()-step*2)\n    except:\n        pass\nshrink(n,50)"}
    addUserKnob {22 colorandom l " <img src=\"ColorBars.png\">" -STARTLINE T "import colorsys, random\nn=nuke.thisNode()\nR,G,B= colorsys.hsv_to_rgb(random.random(),.1+random.random()*.15,.15+random.random()*.15)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ) )"}
    addUserKnob {22 darkgrey l "<font color=\"#232323\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.0, 0.0, 0.14]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 lightgrey l "<font color=\"#383838\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.0, 0.0, 0.22]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 red l "<font color=\"#8c3838\" size=6>■</font>" T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.0, 0.6, 0.55]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n" +STARTLINE}
    addUserKnob {22 orange l "<font color=\"#b28e59\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.1, 0.5, 0.7]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 yellow l "<font color=\"#ccc766\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.16, 0.5, 0.8]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 green l "<font color=\"#5d995b\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.33, 0.4, 0.6]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 cyan l "<font color=\"#72998f\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.46, 0.25, 0.6]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 blue l "<font color=\"#59687f\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.6, 0.3, 0.5]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 darkblue l "<font color=\"#63628c\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.67, 0.3, 0.55]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 magenta l "<font color=\"#927a99\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.8, 0.2, 0.6]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 pink l "<font color=\"#997a89\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.92, 0.2, 0.6]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {26 S02 l " " T " "}
    addUserKnob {26 Ftools l "" +STARTLINE T "<font color=\"#1C1C1C\"> v1.2 - Franklin VFX - 2018"}
   }
   Constant {
    inputs 0
    channels rgb
    name Constant13
    xpos -643
    ypos 714
   }
   AdjBBox {
    numpixels {{size_bbox}}
    name AdjBBox13
    xpos -643
    ypos 849
   }
   Dot {
    name Dot78
    xpos -609
    ypos 987
   }
   Axis3 {
    inputs 0
    useMatrix true
    matrix {
        {{parent.cCard3D_1.matrix} {parent.cCard3D_1.matrix} {parent.cCard3D_1.matrix} {parent.cCard3D_1.matrix}}
        {{parent.cCard3D_1.matrix} {parent.cCard3D_1.matrix} {parent.cCard3D_1.matrix} {parent.cCard3D_1.matrix}}
        {{parent.cCard3D_1.matrix} {parent.cCard3D_1.matrix} {parent.cCard3D_1.matrix} {parent.cCard3D_1.matrix}}
        {{parent.cCard3D_1.matrix} {parent.cCard3D_1.matrix} {parent.cCard3D_1.matrix} {parent.cCard3D_1.matrix}}
      }
    name Axis14
    xpos -203
    ypos -90
   }
set N53fb5220 [stack 0]
push 0
   Input {
    inputs 0
    name top
    xpos -283
    ypos -1243
    number 1
   }
   TimeOffset {
    time_offset {{"shot_\[value shotnmbr]==0 ? 0 : shot_\[value shotnmbr]-1"}}
    time ""
    name CTimeOffset1
    label "shot: \[value shotnmbr]\non frame \[value time_offset]"
    xpos -283
    ypos -924
    addUserKnob {20 User}
    addUserKnob {3 shotnmbr l "shot "}
    shotnmbr {{shotcount}}
    addUserKnob {3 ref}
    ref {{time_offset+1}}
   }
   Group {
    name DecimalTimeOffset1
    tile_color 0xafa35dff
    label "random asset"
    note_font "Bitstream Vera Sans Bold"
    xpos -283
    ypos -841
    addUserKnob {20 User}
    addUserKnob {7 decimal l "time offset (decimal)"}
    decimal {{random(shotcount*seed)}}
    addUserKnob {26 ""}
    addUserKnob {26 _1 l "" +STARTLINE T "Chris Fryer | 2020\nupdated by Yorben Otto | 2024"}
   }
    Input {
     inputs 0
     name Input1
     xpos 426
     ypos -793
    }
    TimeOffset {
     time_offset {{(-floor(parent.decimal))*(DecimalTimeOffset1.decimal<0)}}
     time ""
     name TimeOffset1
     xpos 426
     ypos -675
    }
    Dot {
     name Dot6
     xpos 460
     ypos -635
    }
set N54204990 [stack 0]
    Dot {
     name Dot5
     xpos 350
     ypos -635
    }
    Dot {
     name Dot7
     xpos 350
     ypos -365
    }
push $N54204990
    Dot {
     name Dot1
     xpos 572
     ypos -635
    }
    TimeBlur {
     divisions 2
     shutter {{(parent.decimal-(floor(parent.decimal)))*2}}
     shutteroffset start
     shuttercustomoffset 0
     name TimeBlur1
     xpos 538
     ypos -558
    }
    Dot {
     name Dot2
     xpos 572
     ypos -490
    }
push $N54204990
    TimeBlur {
     divisions 2
     shutter {{parent.decimal*2}}
     shutteroffset start
     shuttercustomoffset 0
     name TimeBlur8
     xpos 426
     ypos -556
    }
    Switch {
     inputs 2
     which {{parent.decimal<0}}
     name Switch1
     xpos 426
     ypos -494
    }
    Multiply {
     value {{parent.TimeBlur8.divisions}}
     name Multiply6
     xpos 426
     ypos -436
    }
    Merge2 {
     inputs 2
     operation from
     name Merge6
     xpos 426
     ypos -369
    }
set N542468d0 [stack 0]
    Output {
     name Output1
     xpos 426
     ypos -221
    }
push $N542468d0
push $N542468d0
    Viewer {
     inputs 2
     frame_range 1-100
     name Viewer1
     xpos 675
     ypos -246
    }
   end_group
   NoTimeBlur {
    name NoTimeBlur1
    xpos -283
    ypos -779
   }
   Transform {
    scale {{0.05+(0.05*(((parent.DecimalTimeOffset13.decimal-0.5)*2)*ScaleVariationSmoke))}}
    center {{root.width/2 x1015 2304} {root.height/2}}
    shutteroffset centred
    name Transform44
    xpos -283
    ypos -152
   }
   Card3D {
    inputs 3
    rot_order ZYX
    translate {0 0 0}
    rotate {90 0 0}
    shutteroffset centred
    name cCard3D25
    tile_color 0x7b1d1dff
    xpos -283
    ypos 11
    addUserKnob {20 User l parent}
    addUserKnob {22 python_button l "set parent" t "select parent node, and press this button to set the selected node as parent" +INVISIBLE T "n = nuke.selectedNode()\['name'].getValue()\nnuke.thisNode()\['string'].setValue(n)" +STARTLINE}
    addUserKnob {1 string l parent +INVISIBLE}
    string null
    addUserKnob {3 ref l "ref frame"}
    ref 1015
   }
   Transform {
    translate {{"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].translate.x(ref)\}]"} {"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].translate.y(ref)\}]"}}
    rotate {{"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].rotate-\[value parent_gun].rotate(ref)\}]"}}
    scale {{"\[if \{\[value parent_gun]==\"null\"\} \{return 1\} \{return 1+(\[value parent_gun].scale-\[value parent_gun].scale(ref))\}]"}}
    center {{"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].center.x(ref)\}]"} {"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].center.y(ref)\}]"}}
    name Transform_GUNMatchMove37
    xpos -283
    ypos 126
    addUserKnob {20 User l parent}
    addUserKnob {3 ref}
    ref {{parent.CTimeOffset.ref}}
   }
   Transform {
    translate {{"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].translate.x-\[value parent_env].translate.x(ref)\}]"} {"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].translate.y-\[value parent_env].translate.y(ref)\}]"}}
    rotate {{"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].rotate-\[value parent_env].rotate(ref)\}]"}}
    scale {{"\[if \{\[value parent_gun]==\"null\"\} \{return 1\} \{return 1+(\[value parent_env].scale-\[value parent_env].scale(ref))\}]"}}
    center {{"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].center.x(ref)\}]"} {"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].center.y(ref)\}]"}}
    motionblur 0.2
    shutter {{SmokeMB*0.5}}
    shutteroffset centred
    name Transform_ENVMatchMove37
    label "\n"
    xpos -283
    ypos 255
    addUserKnob {20 User l parent}
    addUserKnob {3 ref}
    ref {{parent.CTimeOffset.ref}}
   }
   Transform {
    translate {{"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return -((root.width/2)-(\[value parent_gun].center.x(1)+\[value parent_gun].translate.x(1)))\}]"} {"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return -((root.height/2)-(\[value parent_gun].center.y(1)+\[value parent_gun].translate.y(1)))\}]"}}
    name Transform_GUNMatchMove6
    label "alignment correction"
    xpos -283
    ypos 344
    addUserKnob {20 User l parent}
    addUserKnob {22 python_button l "set parent" t "select parent node, and press this button to set the selected node as parent" T "n = nuke.selectedNode()\['name'].getValue()\nnuke.thisNode()\['string'].setValue(n)" +STARTLINE}
    addUserKnob {1 string l parent}
    string Transform_MatchMove10
    addUserKnob {3 ref +INVISIBLE}
    ref {{parent.cCard3D_8.ref}}
   }
   Multiply {
    value {{math_matrix.result_y_smoke(parent.CTimeOffset.ref)}}
    name Angle_reveal_top1
    label TOP
    xpos -283
    ypos 403
   }
   Remove {
    operation keep
    channels rgb
    name Remove1
    xpos -283
    ypos 514
   }
push 0
   Switch {
    inputs 2
    which {{parent.Angle_reveal_top1.value>0.001}}
    name Switch1
    xpos -283
    ypos 660
   }
   Dot {
    name Dot82
    xpos -249
    ypos 705
   }
push 0
push $N53fb5220
push 0
   Input {
    inputs 0
    name front
    xpos -436
    ypos -1243
    number 2
   }
   TimeOffset {
    time_offset {{"shot_\[value shotnmbr]==0 ? 0 : shot_\[value shotnmbr]-1"}}
    time ""
    name CTimeOffset2
    label "shot: \[value shotnmbr]\non frame \[value time_offset]"
    xpos -436
    ypos -925
    addUserKnob {20 User}
    addUserKnob {3 shotnmbr l "shot "}
    shotnmbr {{shotcount}}
    addUserKnob {3 ref}
    ref {{time_offset+1}}
   }
   Group {
    name DecimalTimeOffset2
    tile_color 0xafa35dff
    label "random asset"
    note_font "Bitstream Vera Sans Bold"
    xpos -436
    ypos -842
    addUserKnob {20 User}
    addUserKnob {7 decimal l "time offset (decimal)"}
    decimal {{random(shotcount*seed)}}
    addUserKnob {26 ""}
    addUserKnob {26 _1 l "" +STARTLINE T "Chris Fryer | 2020\nupdated by Yorben Otto | 2024"}
   }
    Input {
     inputs 0
     name Input1
     xpos 426
     ypos -793
    }
    TimeOffset {
     time_offset {{(-floor(parent.decimal))*(DecimalTimeOffset2.decimal<0)}}
     time ""
     name TimeOffset1
     xpos 426
     ypos -675
    }
    Dot {
     name Dot6
     xpos 460
     ypos -635
    }
set N51d927d0 [stack 0]
    Dot {
     name Dot5
     xpos 350
     ypos -635
    }
    Dot {
     name Dot7
     xpos 350
     ypos -365
    }
push $N51d927d0
    Dot {
     name Dot1
     xpos 572
     ypos -635
    }
    TimeBlur {
     divisions 2
     shutter {{(parent.decimal-(floor(parent.decimal)))*2}}
     shutteroffset start
     shuttercustomoffset 0
     name TimeBlur1
     xpos 538
     ypos -558
    }
    Dot {
     name Dot2
     xpos 572
     ypos -490
    }
push $N51d927d0
    TimeBlur {
     divisions 2
     shutter {{parent.decimal*2}}
     shutteroffset start
     shuttercustomoffset 0
     name TimeBlur8
     xpos 426
     ypos -556
    }
    Switch {
     inputs 2
     which {{parent.decimal<0}}
     name Switch1
     xpos 426
     ypos -494
    }
    Multiply {
     value {{parent.TimeBlur8.divisions}}
     name Multiply6
     xpos 426
     ypos -436
    }
    Merge2 {
     inputs 2
     operation from
     name Merge6
     xpos 426
     ypos -369
    }
set N51dd4710 [stack 0]
    Output {
     name Output1
     xpos 426
     ypos -221
    }
push $N51dd4710
push $N51dd4710
    Viewer {
     inputs 2
     frame_range 1-100
     name Viewer1
     xpos 675
     ypos -246
    }
   end_group
   NoTimeBlur {
    name NoTimeBlur5
    xpos -436
    ypos -780
   }
   Transform {
    scale {{0.05+(0.05*(((parent.DecimalTimeOffset13.decimal-0.5)*2)*ScaleVariationSmoke))}}
    center {{root.width/2 x1015 2304} {root.height/2}}
    shutteroffset centred
    name Transform45
    xpos -436
    ypos -151
   }
   Card3D {
    inputs 3
    rot_order ZYX
    translate {0 0 0}
    rotate {0 90 0}
    shutteroffset centred
    name cCard3D26
    tile_color 0x7b1d1dff
    xpos -436
    ypos 15
    addUserKnob {20 User l parent}
    addUserKnob {22 python_button l "set parent" t "select parent node, and press this button to set the selected node as parent" +INVISIBLE T "n = nuke.selectedNode()\['name'].getValue()\nnuke.thisNode()\['string'].setValue(n)" +STARTLINE}
    addUserKnob {1 string l parent +INVISIBLE}
    string null
    addUserKnob {3 ref l "ref frame"}
    ref 1015
   }
   Transform {
    translate {{"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].translate.x(ref)\}]"} {"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].translate.y(ref)\}]"}}
    rotate {{"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].rotate-\[value parent_gun].rotate(ref)\}]"}}
    scale {{"\[if \{\[value parent_gun]==\"null\"\} \{return 1\} \{return 1+(\[value parent_gun].scale-\[value parent_gun].scale(ref))\}]"}}
    center {{"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].center.x(ref)\}]"} {"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].center.y(ref)\}]"}}
    name Transform_GUNMatchMove38
    label "\n"
    xpos -436
    ypos 124
    addUserKnob {20 User l parent}
    addUserKnob {3 ref}
    ref {{parent.CTimeOffset.ref}}
   }
   Transform {
    translate {{"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].translate.x-\[value parent_env].translate.x(ref)\}]"} {"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].translate.y-\[value parent_env].translate.y(ref)\}]"}}
    rotate {{"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].rotate-\[value parent_env].rotate(ref)\}]"}}
    scale {{"\[if \{\[value parent_gun]==\"null\"\} \{return 1\} \{return 1+(\[value parent_env].scale-\[value parent_env].scale(ref))\}]"}}
    center {{"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].center.x(ref)\}]"} {"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].center.y(ref)\}]"}}
    motionblur 0.2
    shutter {{SmokeMB*0.5}}
    shutteroffset centred
    name Transform_ENVMatchMove38
    xpos -436
    ypos 254
    addUserKnob {20 User l parent}
    addUserKnob {3 ref}
    ref {{parent.CTimeOffset.ref}}
   }
   Transform {
    translate {{"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return -((root.width/2)-(\[value parent_gun].center.x(1)+\[value parent_gun].translate.x(1)))\}]"} {"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return -((root.height/2)-(\[value parent_gun].center.y(1)+\[value parent_gun].translate.y(1)))\}]"}}
    name Transform_GUNMatchMove7
    label "alignment correction"
    xpos -436
    ypos 343
    addUserKnob {20 User l parent}
    addUserKnob {22 python_button l "set parent" t "select parent node, and press this button to set the selected node as parent" T "n = nuke.selectedNode()\['name'].getValue()\nnuke.thisNode()\['string'].setValue(n)" +STARTLINE}
    addUserKnob {1 string l parent}
    string Transform_MatchMove10
    addUserKnob {3 ref +INVISIBLE}
    ref {{parent.cCard3D_8.ref}}
   }
   Multiply {
    value {{math_matrix.result_x_smoke(parent.CTimeOffset.ref)}}
    name Angle_reveal_front1
    label FRONT
    xpos -436
    ypos 401
   }
   Remove {
    operation keep
    channels rgb
    name Remove2
    xpos -436
    ypos 511
   }
push 0
   Switch {
    inputs 2
    which {{parent.Angle_reveal_front1.value>0.001}}
    name Switch2
    xpos -436
    ypos 660
   }
   Dot {
    name Dot83
    xpos -402
    ypos 735
   }
   Input {
    inputs 0
    name side
    xpos -130
    ypos -1242
   }
   TimeOffset {
    time_offset {{"shot_\[value shotnmbr]==0 ? 0 : shot_\[value shotnmbr]-1"}}
    time ""
    name CTimeOffset
    label "shot: \[value shotnmbr]\non frame \[value time_offset]"
    xpos -130
    ypos -927
    addUserKnob {20 User}
    addUserKnob {3 shotnmbr l "shot "}
    shotnmbr {{shotcount}}
    addUserKnob {3 ref}
    ref {{time_offset+1}}
   }
   Group {
    name DecimalTimeOffset13
    tile_color 0xafa35dff
    label "random asset"
    note_font "Bitstream Vera Sans Bold"
    xpos -130
    ypos -844
    addUserKnob {20 User}
    addUserKnob {7 decimal l "time offset (decimal)"}
    decimal {{random(shotcount*seed)}}
    addUserKnob {26 ""}
    addUserKnob {26 _1 l "" +STARTLINE T "Chris Fryer | 2020\nupdated by Yorben Otto | 2024"}
   }
    Input {
     inputs 0
     name Input1
     xpos 426
     ypos -793
    }
    TimeOffset {
     time_offset {{(-floor(parent.decimal))*(DecimalTimeOffset13.decimal<0)}}
     time ""
     name TimeOffset1
     xpos 426
     ypos -675
    }
    Dot {
     name Dot6
     xpos 460
     ypos -635
    }
set N4f430580 [stack 0]
    Dot {
     name Dot5
     xpos 350
     ypos -635
    }
    Dot {
     name Dot7
     xpos 350
     ypos -365
    }
push $N4f430580
    Dot {
     name Dot1
     xpos 572
     ypos -635
    }
    TimeBlur {
     divisions 2
     shutter {{(parent.decimal-(floor(parent.decimal)))*2}}
     shutteroffset start
     shuttercustomoffset 0
     name TimeBlur1
     xpos 538
     ypos -558
    }
    Dot {
     name Dot2
     xpos 572
     ypos -490
    }
push $N4f430580
    TimeBlur {
     divisions 2
     shutter {{parent.decimal*2}}
     shutteroffset start
     shuttercustomoffset 0
     name TimeBlur8
     xpos 426
     ypos -556
    }
    Switch {
     inputs 2
     which {{parent.decimal<0}}
     name Switch1
     xpos 426
     ypos -494
    }
    Multiply {
     value {{parent.TimeBlur8.divisions}}
     name Multiply6
     xpos 426
     ypos -436
    }
    Merge2 {
     inputs 2
     operation from
     name Merge6
     xpos 426
     ypos -369
    }
set N4f4724c0 [stack 0]
    Output {
     name Output1
     xpos 426
     ypos -221
    }
push $N4f4724c0
push $N4f4724c0
    Viewer {
     inputs 2
     frame_range 1-100
     name Viewer1
     xpos 675
     ypos -246
    }
   end_group
   NoTimeBlur {
    name NoTimeBlur13
    xpos -130
    ypos -782
   }
   Transform {
    scale {{0.05+(0.05*(((parent.DecimalTimeOffset13.decimal-0.5)*2)*ScaleVariationSmoke))}}
    center {{root.width/2 x1015 2304} {root.height/2}}
    shutteroffset centred
    name Transform46
    xpos -130
    ypos -155
   }
   Card3D {
    translate {{"\[if \{\[exists  parent.parent.parent.input0]\} \{return \[value \[topnode parent.parent.parent.input0].name].translate.x(ref)\} \{return 0\}]"} {"\[if \{\[exists  parent.parent.parent.input0]\} \{return \[value \[topnode parent.parent.parent.input0].name].translate.y(ref)\} \{return 0\}]"} {"\[if \{\[exists  parent.parent.parent.input0]\} \{return \[value \[topnode parent.parent.parent.input0].name].translate.z(ref)\} \{return -1\}]"}}
    rotate {{"\[if \{\[exists  parent.parent.parent.input0]\} \{return \[value \[topnode parent.parent.parent.input0].name].rotate.x(ref)\} \{return 0\}]"} {"\[if \{\[exists  parent.parent.parent.input0]\} \{return \[value \[topnode parent.parent.parent.input0].name].rotate.y(ref)\} \{return 0\}]"} {"\[if \{\[exists  parent.parent.parent.input0]\} \{return \[value \[topnode parent.parent.parent.input0].name].rotate.z(ref)\} \{return 0\}]"}}
    scaling {{"\[if \{\[exists  parent.parent.parent.input0]\} \{return \[value \[topnode parent.parent.parent.input0].name].scaling.x(ref)\} \{return 1\}]"} {"\[if \{\[exists  parent.parent.parent.input0]\} \{return \[value \[topnode parent.parent.parent.input0].name].scaling.y(ref)\} \{return 1\}]"} {"\[if \{\[exists  parent.parent.parent.input0]\} \{return \[value \[topnode parent.parent.parent.input0].name].scaling.z(ref)\} \{return 1\}]"}}
    uniform_scale {{"\[if \{\[exists  parent.parent.parent.input0]\} \{return (\[value \[topnode parent.parent.parent.input0].name].uniform_scale(ref)*25)\} \{return 25\}]"}}
    shutteroffset centred
    name cCard3D_1
    tile_color 0x7b1d1dff
    label "ref frame: \[value ref]"
    xpos -130
    ypos 2
    addUserKnob {20 User l parent}
    addUserKnob {22 python_button l "set parent" t "select parent node, and press this button to set the selected node as parent" +INVISIBLE T "n = nuke.selectedNode()\['name'].getValue()\nnuke.thisNode()\['string'].setValue(n)" +STARTLINE}
    addUserKnob {1 string l parent +INVISIBLE}
    string null
    addUserKnob {3 id l "id number"}
    id {{parent.CTimeOffset.shotnmbr}}
    addUserKnob {3 ref l "ref frame"}
    ref {{parent.CTimeOffset.ref}}
   }
   Transform {
    translate {{"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].translate.x(ref)\}]"} {"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].translate.y(ref)\}]"}}
    rotate {{"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].rotate-\[value parent_gun].rotate(ref)\}]"}}
    scale {{"\[if \{\[value parent_gun]==\"null\"\} \{return 1\} \{return 1+(\[value parent_gun].scale-\[value parent_gun].scale(ref))\}]"}}
    center {{"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].center.x(ref)\}]"} {"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].center.y(ref)\}]"}}
    name Transform_GUNMatchMove39
    label "\n"
    xpos -130
    ypos 124
    addUserKnob {20 User l parent}
    addUserKnob {3 ref}
    ref {{parent.CTimeOffset.ref}}
   }
   Transform {
    translate {{"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].translate.x-\[value parent_env].translate.x(ref)\}]"} {"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].translate.y-\[value parent_env].translate.y(ref)\}]"}}
    rotate {{"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].rotate-\[value parent_env].rotate(ref)\}]"}}
    scale {{"\[if \{\[value parent_gun]==\"null\"\} \{return 1\} \{return 1+(\[value parent_env].scale-\[value parent_env].scale(ref))\}]"}}
    center {{"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].center.x(ref)\}]"} {"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].center.y(ref)\}]"}}
    motionblur 0.2
    shutter {{SmokeMB*0.5}}
    shutteroffset centred
    name Transform_ENVMatchMove39
    xpos -130
    ypos 258
    addUserKnob {20 User l parent}
    addUserKnob {3 ref}
    ref {{parent.CTimeOffset.ref}}
   }
   Transform {
    translate {{"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return -((root.width/2)-(\[value parent_gun].center.x(1)+\[value parent_gun].translate.x(1)))\}]"} {"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return -((root.height/2)-(\[value parent_gun].center.y(1)+\[value parent_gun].translate.y(1)))\}]"}}
    name Transform_GUNMatchMove5
    label "alignment correction"
    xpos -130
    ypos 340
    addUserKnob {20 User l parent}
    addUserKnob {22 python_button l "set parent" t "select parent node, and press this button to set the selected node as parent" T "n = nuke.selectedNode()\['name'].getValue()\nnuke.thisNode()\['string'].setValue(n)" +STARTLINE}
    addUserKnob {1 string l parent}
    string Transform_MatchMove10
    addUserKnob {3 ref +INVISIBLE}
    ref {{parent.cCard3D_8.ref}}
   }
   Multiply {
    value {{math_matrix.result_z_smoke(parent.CTimeOffset.ref)}}
    name Angle_reveal_side1
    label SIDE
    xpos -130
    ypos 404
   }
   Remove {
    operation keep
    channels rgb
    name Remove39
    xpos -130
    ypos 514
   }
push 0
   Switch {
    inputs 2
    which {{parent.Angle_reveal_side1.value>0.001}}
    name Switch3
    xpos -130
    ypos 658
   }
   Merge2 {
    inputs 3+1
    operation max
    Achannels rgb
    Bchannels rgb
    output rgb
    name Merge28
    xpos -130
    ypos 731
   }
   Merge2 {
    inputs 2
    operation plus
    bbox intersection
    Achannels rgb
    Bchannels rgb
    output rgb
    name Merge29
    xpos -130
    ypos 983
   }
   Shuffle2 {
    fromInput1 {{0} B}
    fromInput2 {{0} B}
    mappings "4 rgba.red 0 0 rgba.red 0 0 rgba.green 0 1 rgba.green 0 1 rgba.blue 0 2 rgba.alpha 0 3 rgba.blue 0 2 rgba.blue 0 2"
    name Shuffle1
    xpos -130
    ypos 1021
   }
push 0
   Switch {
    inputs 2
    which {{"shot_\[value count]==0?0:frame>=shot_\[value count]"}}
    name cSwitch_13
    xpos -130
    ypos 1078
    addUserKnob {20 User}
    addUserKnob {3 count}
    count {{parent.CTimeOffset.shotnmbr}}
   }
   Output {
    name Output1
    xpos -130
    ypos 1323
   }
   StickyNote {
    inputs 0
    name StickyNote1
    label "<-- handy to break concatonation?  "
    xpos -39
    ypos 193
   }
  end_group
push $N586971d0
  PostageStamp {
   name Stamp13
   help "Stamps by Adrian Pueyo and Alexey Kuchinski.\nUpdated May 18 2021"
   onCreate "if nuke.GUI:\n    try:\n        import stamps; stamps.wiredOnCreate()\n    except:\n        pass\n"
   knobChanged "import stamps; stamps.wiredKnobChanged()"
   autolabel "nuke.thisNode().knob(\"title\").value()"
   tile_color 0x1000001
   note_font "Bitstream Vera Sans"
   note_font_size 20
   xpos 1164
   ypos -663
   hide_input true
   addUserKnob {20 wired_tab l "Wired Stamp"}
   addUserKnob {26 identifier -STARTLINE +HIDDEN T wired}
   addUserKnob {3 lockCallbacks l "" +STARTLINE +HIDDEN}
   addUserKnob {6 toReconnect -STARTLINE +HIDDEN}
   addUserKnob {1 title l Title: t "Displayed name on the Node Graph for this Stamp and its Anchor.\nIMPORTANT: This is only for display purposes, and is different from the real/internal name of the Stamps."}
   title smoke_FRONT
   addUserKnob {26 prev_title l "" +STARTLINE +HIDDEN T smoke_FRONT}
   addUserKnob {26 tags l Tags: t "Tags of this stamp's Anchor, for information purpose only.\nClick \"show anchor\" to change them." T <i>2D</i>}
   addUserKnob {26 backdrops l Backdrops: t "Labels of backdrop nodes which contain this stamp's Anchor." T "<i><Left>before or after Flare</i>"}
   addUserKnob {26 line1 l "" +STARTLINE}
   addUserKnob {6 postageStamp_show l "postage stamp" t "Enable the postage stamp thumbnail in this node.\nYou're seeing this because the class of this node includes the postage_stamp knob." +STARTLINE}
   addUserKnob {26 anchor_label l Anchor: T " "}
   addUserKnob {22 show_anchor l " show anchor " t "Show the properties panel for this Stamp's Anchor." -STARTLINE T stamps.wiredShowAnchor()}
   addUserKnob {22 zoom_anchor l "zoom anchor" t "Navigate to this Stamp's Anchor on the Node Graph." -STARTLINE T stamps.wiredZoomAnchor()}
   addUserKnob {26 stamps_label l Stamps: T " "}
   addUserKnob {22 zoomNext l " zoom next " t "Navigate to this Stamp's next sibling on the Node Graph." -STARTLINE T stamps.wiredZoomNext()}
   addUserKnob {22 selectSimilar l " select similar " t "Select all similar Stamps to this one on the Node Graph." -STARTLINE T stamps.wiredSelectSimilar()}
   addUserKnob {26 space_1 l "" +STARTLINE T " "}
   addUserKnob {26 reconnect_label l Reconnect: t "Reconnect by the stored Anchor name." T " "}
   addUserKnob {22 reconnect_this l this t "Reconnect this Stamp to its Anchor, by its stored Anchor name." -STARTLINE T "n = nuke.thisNode()\ntry:\n    n.setInput(0,nuke.toNode(n.knob(\"anchor\").value()))\nexcept:\n    nuke.message(\"Unable to reconnect.\")\ntry:\n    import stamps\n    stamps.wiredGetStyle(n)\nexcept:\n    pass\n"}
   addUserKnob {22 reconnect_similar l similar t "Reconnect this Stamp and similar ones to their Anchor, by their stored anchor name." -STARTLINE T stamps.wiredReconnectSimilar()}
   addUserKnob {22 reconnect_all l all t "Reconnect all the Stamps to their Anchors, by their stored anchor names." -STARTLINE T stamps.wiredReconnectAll()}
   addUserKnob {26 space_2 l "" +STARTLINE T " "}
   addUserKnob {20 advanced_reconnection l "Advanced Reconnection" n 2}
   addUserKnob {26 reconnect_by_title_label l "<font color=gold>By Title:" t "Reconnect by searching for a matching title." T " "}
   addUserKnob {22 reconnect_by_title_this l this t "Look for an Anchor that shares this Stamp's title, and connect this Stamp to it.\nIMPORTANT: Use this carefully, and only when the normal reconnection doesn't work." -STARTLINE T stamps.wiredReconnectByTitle()}
   addUserKnob {22 reconnect_by_title_similar l similar t "Look for an Anchor that shares this Stamp's title, and connect this Stamp and similar ones to it.\nIMPORTANT: Use this carefully, and only when the normal reconnection doesn't work." -STARTLINE T stamps.wiredReconnectByTitleSimilar()}
   addUserKnob {22 reconnect_by_title_selected l selected t "For each Stamp selected, look for an Anchor that shares its title, and connect to it.\nIMPORTANT: Use this carefully, and only when the normal reconnection doesn't work." -STARTLINE T stamps.wiredReconnectByTitleSelected()}
   addUserKnob {26 reconnect_by_selection_label l "<font color=orangered>By Selection:" t "Force reconnect to a selected Anchor." T " "}
   addUserKnob {22 reconnect_by_selection_this l this t "Force reconnect this Stamp to a selected Anchor, whatever its name or title.\nIMPORTANT: Use this carefully, and only when the normal reconnection doesn't work." -STARTLINE T stamps.wiredReconnectBySelection()}
   addUserKnob {22 reconnect_by_selection_similar l similar t "Force reconnect this Stamp and similar ones to a selected Anchor, whatever its name or title.\nIMPORTANT: Use this carefully, and only when the normal reconnection doesn't work." -STARTLINE T stamps.wiredReconnectBySelectionSimilar()}
   addUserKnob {22 reconnect_by_selection_selected l selected t "Force reconnect all selected Stamps to an also selected Anchor, whatever its name or title.\nIMPORTANT: Use this carefully, and only when the normal reconnection doesn't work." -STARTLINE T stamps.wiredReconnectBySelectionSelected()}
   addUserKnob {1 anchor l Anchor}
   anchor Anchor_220a2be282
   addUserKnob {6 auto_reconnect_by_title l "<font color=#ED9977>&nbsp; auto-reconnect by title" t "When creating this stamp again (like on copy-paste), auto-reconnect it by title instead of doing it by the saved anchor's name, and auto-turn this off immediately.\nIMPORTANT: Should be off by default. Only use this for setting up templates." +STARTLINE}
   addUserKnob {26 line2 l "" +STARTLINE}
   addUserKnob {22 buttonHelp l Help -STARTLINE T stamps.showHelp()}
   addUserKnob {26 version l " " t "Stamps by Adrian Pueyo and Alexey Kuchinski.\nUpdated May 18 2021." -STARTLINE T "<a href=\"http://www.nukepedia.com/gizmos/other/stamps\" style=\"color:#666;text-decoration: none;\"><span style=\"color:#666\"> <big>Stamps v1.1</big></b></a>"}
  }
  Dot {
   name Dot9
   xpos 1198
   ypos -615
  }
push $N58d70c10
  PostageStamp {
   name Stamp14
   help "Stamps by Adrian Pueyo and Alexey Kuchinski.\nUpdated May 18 2021"
   onCreate "if nuke.GUI:\n    try:\n        import stamps; stamps.wiredOnCreate()\n    except:\n        pass\n"
   knobChanged "import stamps; stamps.wiredKnobChanged()"
   autolabel "nuke.thisNode().knob(\"title\").value()"
   tile_color 0x1000001
   note_font "Bitstream Vera Sans"
   note_font_size 20
   xpos 1289
   ypos -663
   hide_input true
   addUserKnob {20 wired_tab l "Wired Stamp"}
   addUserKnob {26 identifier -STARTLINE +HIDDEN T wired}
   addUserKnob {3 lockCallbacks l "" +STARTLINE +HIDDEN}
   addUserKnob {6 toReconnect -STARTLINE +HIDDEN}
   addUserKnob {1 title l Title: t "Displayed name on the Node Graph for this Stamp and its Anchor.\nIMPORTANT: This is only for display purposes, and is different from the real/internal name of the Stamps."}
   title smoke_TOP
   addUserKnob {26 prev_title l "" +STARTLINE +HIDDEN T smoke_TOP}
   addUserKnob {26 tags l Tags: t "Tags of this stamp's Anchor, for information purpose only.\nClick \"show anchor\" to change them." T <i>2D</i>}
   addUserKnob {26 backdrops l Backdrops: t "Labels of backdrop nodes which contain this stamp's Anchor." T "<i><Left>before or after Flare</i>"}
   addUserKnob {26 line1 l "" +STARTLINE}
   addUserKnob {6 postageStamp_show l "postage stamp" t "Enable the postage stamp thumbnail in this node.\nYou're seeing this because the class of this node includes the postage_stamp knob." +STARTLINE}
   addUserKnob {26 anchor_label l Anchor: T " "}
   addUserKnob {22 show_anchor l " show anchor " t "Show the properties panel for this Stamp's Anchor." -STARTLINE T stamps.wiredShowAnchor()}
   addUserKnob {22 zoom_anchor l "zoom anchor" t "Navigate to this Stamp's Anchor on the Node Graph." -STARTLINE T stamps.wiredZoomAnchor()}
   addUserKnob {26 stamps_label l Stamps: T " "}
   addUserKnob {22 zoomNext l " zoom next " t "Navigate to this Stamp's next sibling on the Node Graph." -STARTLINE T stamps.wiredZoomNext()}
   addUserKnob {22 selectSimilar l " select similar " t "Select all similar Stamps to this one on the Node Graph." -STARTLINE T stamps.wiredSelectSimilar()}
   addUserKnob {26 space_1 l "" +STARTLINE T " "}
   addUserKnob {26 reconnect_label l Reconnect: t "Reconnect by the stored Anchor name." T " "}
   addUserKnob {22 reconnect_this l this t "Reconnect this Stamp to its Anchor, by its stored Anchor name." -STARTLINE T "n = nuke.thisNode()\ntry:\n    n.setInput(0,nuke.toNode(n.knob(\"anchor\").value()))\nexcept:\n    nuke.message(\"Unable to reconnect.\")\ntry:\n    import stamps\n    stamps.wiredGetStyle(n)\nexcept:\n    pass\n"}
   addUserKnob {22 reconnect_similar l similar t "Reconnect this Stamp and similar ones to their Anchor, by their stored anchor name." -STARTLINE T stamps.wiredReconnectSimilar()}
   addUserKnob {22 reconnect_all l all t "Reconnect all the Stamps to their Anchors, by their stored anchor names." -STARTLINE T stamps.wiredReconnectAll()}
   addUserKnob {26 space_2 l "" +STARTLINE T " "}
   addUserKnob {20 advanced_reconnection l "Advanced Reconnection" n 2}
   addUserKnob {26 reconnect_by_title_label l "<font color=gold>By Title:" t "Reconnect by searching for a matching title." T " "}
   addUserKnob {22 reconnect_by_title_this l this t "Look for an Anchor that shares this Stamp's title, and connect this Stamp to it.\nIMPORTANT: Use this carefully, and only when the normal reconnection doesn't work." -STARTLINE T stamps.wiredReconnectByTitle()}
   addUserKnob {22 reconnect_by_title_similar l similar t "Look for an Anchor that shares this Stamp's title, and connect this Stamp and similar ones to it.\nIMPORTANT: Use this carefully, and only when the normal reconnection doesn't work." -STARTLINE T stamps.wiredReconnectByTitleSimilar()}
   addUserKnob {22 reconnect_by_title_selected l selected t "For each Stamp selected, look for an Anchor that shares its title, and connect to it.\nIMPORTANT: Use this carefully, and only when the normal reconnection doesn't work." -STARTLINE T stamps.wiredReconnectByTitleSelected()}
   addUserKnob {26 reconnect_by_selection_label l "<font color=orangered>By Selection:" t "Force reconnect to a selected Anchor." T " "}
   addUserKnob {22 reconnect_by_selection_this l this t "Force reconnect this Stamp to a selected Anchor, whatever its name or title.\nIMPORTANT: Use this carefully, and only when the normal reconnection doesn't work." -STARTLINE T stamps.wiredReconnectBySelection()}
   addUserKnob {22 reconnect_by_selection_similar l similar t "Force reconnect this Stamp and similar ones to a selected Anchor, whatever its name or title.\nIMPORTANT: Use this carefully, and only when the normal reconnection doesn't work." -STARTLINE T stamps.wiredReconnectBySelectionSimilar()}
   addUserKnob {22 reconnect_by_selection_selected l selected t "Force reconnect all selected Stamps to an also selected Anchor, whatever its name or title.\nIMPORTANT: Use this carefully, and only when the normal reconnection doesn't work." -STARTLINE T stamps.wiredReconnectBySelectionSelected()}
   addUserKnob {1 anchor l Anchor}
   anchor Anchor_25b668170c
   addUserKnob {6 auto_reconnect_by_title l "<font color=#ED9977>&nbsp; auto-reconnect by title" t "When creating this stamp again (like on copy-paste), auto-reconnect it by title instead of doing it by the saved anchor's name, and auto-turn this off immediately.\nIMPORTANT: Should be off by default. Only use this for setting up templates." +STARTLINE}
   addUserKnob {26 line2 l "" +STARTLINE}
   addUserKnob {22 buttonHelp l Help -STARTLINE T stamps.showHelp()}
   addUserKnob {26 version l " " t "Stamps by Adrian Pueyo and Alexey Kuchinski.\nUpdated May 18 2021." -STARTLINE T "<a href=\"http://www.nukepedia.com/gizmos/other/stamps\" style=\"color:#666;text-decoration: none;\"><span style=\"color:#666\"> <big>Stamps v1.1</big></b></a>"}
  }
push $N56244930
  PostageStamp {
   name Stamp15
   help "Stamps by Adrian Pueyo and Alexey Kuchinski.\nUpdated May 18 2021"
   onCreate "if nuke.GUI:\n    try:\n        import stamps; stamps.wiredOnCreate()\n    except:\n        pass\n"
   knobChanged "import stamps; stamps.wiredKnobChanged()"
   autolabel "nuke.thisNode().knob(\"title\").value()"
   tile_color 0x1000001
   note_font "Bitstream Vera Sans"
   note_font_size 20
   xpos 1407
   ypos -665
   hide_input true
   addUserKnob {20 wired_tab l "Wired Stamp"}
   addUserKnob {26 identifier -STARTLINE +HIDDEN T wired}
   addUserKnob {3 lockCallbacks l "" +STARTLINE +HIDDEN}
   addUserKnob {6 toReconnect -STARTLINE +HIDDEN}
   addUserKnob {1 title l Title: t "Displayed name on the Node Graph for this Stamp and its Anchor.\nIMPORTANT: This is only for display purposes, and is different from the real/internal name of the Stamps."}
   title smoke_SIDE
   addUserKnob {26 prev_title l "" +STARTLINE +HIDDEN T smoke_SIDE}
   addUserKnob {26 tags l Tags: t "Tags of this stamp's Anchor, for information purpose only.\nClick \"show anchor\" to change them." T <i>2D</i>}
   addUserKnob {26 backdrops l Backdrops: t "Labels of backdrop nodes which contain this stamp's Anchor." T "<i><Left>before or after Flare</i>"}
   addUserKnob {26 line1 l "" +STARTLINE}
   addUserKnob {6 postageStamp_show l "postage stamp" t "Enable the postage stamp thumbnail in this node.\nYou're seeing this because the class of this node includes the postage_stamp knob." +STARTLINE}
   addUserKnob {26 anchor_label l Anchor: T " "}
   addUserKnob {22 show_anchor l " show anchor " t "Show the properties panel for this Stamp's Anchor." -STARTLINE T stamps.wiredShowAnchor()}
   addUserKnob {22 zoom_anchor l "zoom anchor" t "Navigate to this Stamp's Anchor on the Node Graph." -STARTLINE T stamps.wiredZoomAnchor()}
   addUserKnob {26 stamps_label l Stamps: T " "}
   addUserKnob {22 zoomNext l " zoom next " t "Navigate to this Stamp's next sibling on the Node Graph." -STARTLINE T stamps.wiredZoomNext()}
   addUserKnob {22 selectSimilar l " select similar " t "Select all similar Stamps to this one on the Node Graph." -STARTLINE T stamps.wiredSelectSimilar()}
   addUserKnob {26 space_1 l "" +STARTLINE T " "}
   addUserKnob {26 reconnect_label l Reconnect: t "Reconnect by the stored Anchor name." T " "}
   addUserKnob {22 reconnect_this l this t "Reconnect this Stamp to its Anchor, by its stored Anchor name." -STARTLINE T "n = nuke.thisNode()\ntry:\n    n.setInput(0,nuke.toNode(n.knob(\"anchor\").value()))\nexcept:\n    nuke.message(\"Unable to reconnect.\")\ntry:\n    import stamps\n    stamps.wiredGetStyle(n)\nexcept:\n    pass\n"}
   addUserKnob {22 reconnect_similar l similar t "Reconnect this Stamp and similar ones to their Anchor, by their stored anchor name." -STARTLINE T stamps.wiredReconnectSimilar()}
   addUserKnob {22 reconnect_all l all t "Reconnect all the Stamps to their Anchors, by their stored anchor names." -STARTLINE T stamps.wiredReconnectAll()}
   addUserKnob {26 space_2 l "" +STARTLINE T " "}
   addUserKnob {20 advanced_reconnection l "Advanced Reconnection" n 2}
   addUserKnob {26 reconnect_by_title_label l "<font color=gold>By Title:" t "Reconnect by searching for a matching title." T " "}
   addUserKnob {22 reconnect_by_title_this l this t "Look for an Anchor that shares this Stamp's title, and connect this Stamp to it.\nIMPORTANT: Use this carefully, and only when the normal reconnection doesn't work." -STARTLINE T stamps.wiredReconnectByTitle()}
   addUserKnob {22 reconnect_by_title_similar l similar t "Look for an Anchor that shares this Stamp's title, and connect this Stamp and similar ones to it.\nIMPORTANT: Use this carefully, and only when the normal reconnection doesn't work." -STARTLINE T stamps.wiredReconnectByTitleSimilar()}
   addUserKnob {22 reconnect_by_title_selected l selected t "For each Stamp selected, look for an Anchor that shares its title, and connect to it.\nIMPORTANT: Use this carefully, and only when the normal reconnection doesn't work." -STARTLINE T stamps.wiredReconnectByTitleSelected()}
   addUserKnob {26 reconnect_by_selection_label l "<font color=orangered>By Selection:" t "Force reconnect to a selected Anchor." T " "}
   addUserKnob {22 reconnect_by_selection_this l this t "Force reconnect this Stamp to a selected Anchor, whatever its name or title.\nIMPORTANT: Use this carefully, and only when the normal reconnection doesn't work." -STARTLINE T stamps.wiredReconnectBySelection()}
   addUserKnob {22 reconnect_by_selection_similar l similar t "Force reconnect this Stamp and similar ones to a selected Anchor, whatever its name or title.\nIMPORTANT: Use this carefully, and only when the normal reconnection doesn't work." -STARTLINE T stamps.wiredReconnectBySelectionSimilar()}
   addUserKnob {22 reconnect_by_selection_selected l selected t "Force reconnect all selected Stamps to an also selected Anchor, whatever its name or title.\nIMPORTANT: Use this carefully, and only when the normal reconnection doesn't work." -STARTLINE T stamps.wiredReconnectBySelectionSelected()}
   addUserKnob {1 anchor l Anchor}
   anchor Anchor_232c9aab88
   addUserKnob {6 auto_reconnect_by_title l "<font color=#ED9977>&nbsp; auto-reconnect by title" t "When creating this stamp again (like on copy-paste), auto-reconnect it by title instead of doing it by the saved anchor's name, and auto-turn this off immediately.\nIMPORTANT: Should be off by default. Only use this for setting up templates." +STARTLINE}
   addUserKnob {26 line2 l "" +STARTLINE}
   addUserKnob {22 buttonHelp l Help -STARTLINE T stamps.showHelp()}
   addUserKnob {26 version l " " t "Stamps by Adrian Pueyo and Alexey Kuchinski.\nUpdated May 18 2021." -STARTLINE T "<a href=\"http://www.nukepedia.com/gizmos/other/stamps\" style=\"color:#666;text-decoration: none;\"><span style=\"color:#666\"> <big>Stamps v1.1</big></b></a>"}
  }
  Dot {
   name Dot10
   xpos 1441
   ypos -615
  }
  Group {
   inputs 3
   name gunshot5
   label "shot: \[value shotcount]\non frame: \[value shotstart]\n"
   xpos 1289
   ypos -588
   addUserKnob {20 User}
   addUserKnob {3 shotcount l shot}
   shotcount 5
   addUserKnob {3 shotstart l frame +INVISIBLE}
   shotstart {{"shotcount==0 ? 0 : shot\[value shotcount]-1" i}}
  }
   BackdropNode {
    inputs 0
    name BackdropNode19
    knobChanged "try:\n    listenedKnobs = \['text', 'position', 'name']\n    node = nuke.thisNode()\n    name = node.knob('name').value()\n    text = node.knob('text').value()\n    position = node.knob('position').value()\n    position = \"<\" + position + \">\"\n    label = node.knob('label').value()\n    \n    if nuke.thisKnob().name() in listenedKnobs:\n        if text == \"\":\n            if node.knob('position').value() == \"left\":\n                node.knob('label').setValue()\n            else:\n                node.knob('label').setValue(position + name)\n        else:\n            if node.knob('position').value() == \"left\":\n                node.knob('label').setValue(text)\n            else:\n                node.knob('label').setValue(position + text)\n                \n    elif nuke.thisKnob().name() == 'font_size':\n        fontSize = node.knob('font_size').value()\n        node.knob('note_font_size').setValue(fontSize)\nexcept:\n    pass"
    tile_color 0x232323ff
    label "<Left><h2> Gunshot"
    note_font_size 31.5
    xpos -693
    ypos -554
    bdwidth 876
    bdheight 1682
    addUserKnob {20 F_VFX l BackdropNode}
    addUserKnob {43 text l Text}
    text "<h2> Gunshot"
    addUserKnob {7 font_size l "Font Size" R 10 100}
    font_size 31.5
    addUserKnob {4 position l "" -STARTLINE M {Left Center}}
    addUserKnob {26 S01 l " " T " "}
    addUserKnob {22 grow l " <img src=\"F_scalep.png\">" -STARTLINE T "n=nuke.thisNode()\n\ndef grow(node=None,step=50):\n    try:\n        if not node:\n            n=nuke.selectedNode()\n        else:\n            n=node\n            n\['xpos'].setValue(n\['xpos'].getValue()-step)\n            n\['ypos'].setValue(n\['ypos'].getValue()-step)\n            n\['bdwidth'].setValue(n\['bdwidth'].getValue()+step*2)\n            n\['bdheight'].setValue(n\['bdheight'].getValue()+step*2)\n    except:\n        pass\ngrow(n,50)"}
    addUserKnob {22 shrink l " <img src=\"F_scalem.png\">" -STARTLINE T "n=nuke.thisNode()\n\ndef shrink(node=None,step=50):\n    try:\n        if not node:\n            n=nuke.selectedNode()\n        else:\n            n=node\n            n\['xpos'].setValue(n\['xpos'].getValue()+step)\n            n\['ypos'].setValue(n\['ypos'].getValue()+step)\n            n\['bdwidth'].setValue(n\['bdwidth'].getValue()-step*2)\n            n\['bdheight'].setValue(n\['bdheight'].getValue()-step*2)\n    except:\n        pass\nshrink(n,50)"}
    addUserKnob {22 colorandom l " <img src=\"ColorBars.png\">" -STARTLINE T "import colorsys, random\nn=nuke.thisNode()\nR,G,B= colorsys.hsv_to_rgb(random.random(),.1+random.random()*.15,.15+random.random()*.15)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ) )"}
    addUserKnob {22 darkgrey l "<font color=\"#232323\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.0, 0.0, 0.14]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 lightgrey l "<font color=\"#383838\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.0, 0.0, 0.22]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 red l "<font color=\"#8c3838\" size=6>■</font>" T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.0, 0.6, 0.55]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n" +STARTLINE}
    addUserKnob {22 orange l "<font color=\"#b28e59\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.1, 0.5, 0.7]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 yellow l "<font color=\"#ccc766\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.16, 0.5, 0.8]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 green l "<font color=\"#5d995b\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.33, 0.4, 0.6]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 cyan l "<font color=\"#72998f\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.46, 0.25, 0.6]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 blue l "<font color=\"#59687f\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.6, 0.3, 0.5]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 darkblue l "<font color=\"#63628c\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.67, 0.3, 0.55]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 magenta l "<font color=\"#927a99\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.8, 0.2, 0.6]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 pink l "<font color=\"#997a89\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.92, 0.2, 0.6]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {26 S02 l " " T " "}
    addUserKnob {26 Ftools l "" +STARTLINE T "<font color=\"#1C1C1C\"> v1.2 - Franklin VFX - 2018"}
   }
   BackdropNode {
    inputs 0
    name BackdropNode2
    knobChanged "try:\n    listenedKnobs = \['text', 'position', 'name']\n    node = nuke.thisNode()\n    name = node.knob('name').value()\n    text = node.knob('text').value()\n    position = node.knob('position').value()\n    position = \"<\" + position + \">\"\n    label = node.knob('label').value()\n    \n    if nuke.thisKnob().name() in listenedKnobs:\n        if text == \"\":\n            if node.knob('position').value() == \"left\":\n                node.knob('label').setValue()\n            else:\n                node.knob('label').setValue(position + name)\n        else:\n            if node.knob('position').value() == \"left\":\n                node.knob('label').setValue(text)\n            else:\n                node.knob('label').setValue(position + text)\n                \n    elif nuke.thisKnob().name() == 'font_size':\n        fontSize = node.knob('font_size').value()\n        node.knob('note_font_size').setValue(fontSize)\nexcept:\n    pass"
    tile_color 0x927a99ff
    note_font_size 50
    xpos -473
    ypos -221
    bdwidth 435
    bdheight 786
    z_order 1
    addUserKnob {20 F_VFX l BackdropNode}
    addUserKnob {43 text l Text}
    addUserKnob {7 font_size l "Font Size" R 10 100}
    font_size 50
    addUserKnob {4 position l "" -STARTLINE M {Left Center}}
    addUserKnob {26 S01 l " " T " "}
    addUserKnob {22 grow l " <img src=\"F_scalep.png\">" -STARTLINE T "n=nuke.thisNode()\n\ndef grow(node=None,step=50):\n    try:\n        if not node:\n            n=nuke.selectedNode()\n        else:\n            n=node\n            n\['xpos'].setValue(n\['xpos'].getValue()-step)\n            n\['ypos'].setValue(n\['ypos'].getValue()-step)\n            n\['bdwidth'].setValue(n\['bdwidth'].getValue()+step*2)\n            n\['bdheight'].setValue(n\['bdheight'].getValue()+step*2)\n    except:\n        pass\ngrow(n,50)"}
    addUserKnob {22 shrink l " <img src=\"F_scalem.png\">" -STARTLINE T "n=nuke.thisNode()\n\ndef shrink(node=None,step=50):\n    try:\n        if not node:\n            n=nuke.selectedNode()\n        else:\n            n=node\n            n\['xpos'].setValue(n\['xpos'].getValue()+step)\n            n\['ypos'].setValue(n\['ypos'].getValue()+step)\n            n\['bdwidth'].setValue(n\['bdwidth'].getValue()-step*2)\n            n\['bdheight'].setValue(n\['bdheight'].getValue()-step*2)\n    except:\n        pass\nshrink(n,50)"}
    addUserKnob {22 colorandom l " <img src=\"ColorBars.png\">" -STARTLINE T "import colorsys, random\nn=nuke.thisNode()\nR,G,B= colorsys.hsv_to_rgb(random.random(),.1+random.random()*.15,.15+random.random()*.15)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ) )"}
    addUserKnob {22 darkgrey l "<font color=\"#232323\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.0, 0.0, 0.14]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 lightgrey l "<font color=\"#383838\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.0, 0.0, 0.22]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 red l "<font color=\"#8c3838\" size=6>■</font>" T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.0, 0.6, 0.55]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n" +STARTLINE}
    addUserKnob {22 orange l "<font color=\"#b28e59\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.1, 0.5, 0.7]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 yellow l "<font color=\"#ccc766\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.16, 0.5, 0.8]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 green l "<font color=\"#5d995b\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.33, 0.4, 0.6]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 cyan l "<font color=\"#72998f\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.46, 0.25, 0.6]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 blue l "<font color=\"#59687f\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.6, 0.3, 0.5]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 darkblue l "<font color=\"#63628c\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.67, 0.3, 0.55]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 magenta l "<font color=\"#927a99\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.8, 0.2, 0.6]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 pink l "<font color=\"#997a89\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.92, 0.2, 0.6]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {26 S02 l " " T " "}
    addUserKnob {26 Ftools l "" +STARTLINE T "<font color=\"#1C1C1C\"> v1.2 - Franklin VFX - 2018"}
   }
   Constant {
    inputs 0
    channels rgb
    name Constant13
    xpos -643
    ypos 714
   }
   AdjBBox {
    numpixels {{size_bbox}}
    name AdjBBox13
    xpos -643
    ypos 849
   }
   Dot {
    name Dot78
    xpos -609
    ypos 987
   }
   Axis3 {
    inputs 0
    useMatrix true
    matrix {
        {{parent.cCard3D_1.matrix} {parent.cCard3D_1.matrix} {parent.cCard3D_1.matrix} {parent.cCard3D_1.matrix}}
        {{parent.cCard3D_1.matrix} {parent.cCard3D_1.matrix} {parent.cCard3D_1.matrix} {parent.cCard3D_1.matrix}}
        {{parent.cCard3D_1.matrix} {parent.cCard3D_1.matrix} {parent.cCard3D_1.matrix} {parent.cCard3D_1.matrix}}
        {{parent.cCard3D_1.matrix} {parent.cCard3D_1.matrix} {parent.cCard3D_1.matrix} {parent.cCard3D_1.matrix}}
      }
    name Axis14
    xpos -203
    ypos -90
   }
set N4d04cbf0 [stack 0]
push 0
   Input {
    inputs 0
    name top
    xpos -283
    ypos -1243
    number 1
   }
   TimeOffset {
    time_offset {{"shot_\[value shotnmbr]==0 ? 0 : shot_\[value shotnmbr]-1"}}
    time ""
    name CTimeOffset1
    label "shot: \[value shotnmbr]\non frame \[value time_offset]"
    xpos -283
    ypos -924
    addUserKnob {20 User}
    addUserKnob {3 shotnmbr l "shot "}
    shotnmbr {{shotcount}}
    addUserKnob {3 ref}
    ref {{time_offset+1}}
   }
   Group {
    name DecimalTimeOffset1
    tile_color 0xafa35dff
    label "random asset"
    note_font "Bitstream Vera Sans Bold"
    xpos -283
    ypos -841
    addUserKnob {20 User}
    addUserKnob {7 decimal l "time offset (decimal)"}
    decimal {{random(shotcount*seed)}}
    addUserKnob {26 ""}
    addUserKnob {26 _1 l "" +STARTLINE T "Chris Fryer | 2020\nupdated by Yorben Otto | 2024"}
   }
    Input {
     inputs 0
     name Input1
     xpos 426
     ypos -793
    }
    TimeOffset {
     time_offset {{(-floor(parent.decimal))*(DecimalTimeOffset1.decimal<0)}}
     time ""
     name TimeOffset1
     xpos 426
     ypos -675
    }
    Dot {
     name Dot6
     xpos 460
     ypos -635
    }
set N4d08c450 [stack 0]
    Dot {
     name Dot5
     xpos 350
     ypos -635
    }
    Dot {
     name Dot7
     xpos 350
     ypos -365
    }
push $N4d08c450
    Dot {
     name Dot1
     xpos 572
     ypos -635
    }
    TimeBlur {
     divisions 2
     shutter {{(parent.decimal-(floor(parent.decimal)))*2}}
     shutteroffset start
     shuttercustomoffset 0
     name TimeBlur1
     xpos 538
     ypos -558
    }
    Dot {
     name Dot2
     xpos 572
     ypos -490
    }
push $N4d08c450
    TimeBlur {
     divisions 2
     shutter {{parent.decimal*2}}
     shutteroffset start
     shuttercustomoffset 0
     name TimeBlur8
     xpos 426
     ypos -556
    }
    Switch {
     inputs 2
     which {{parent.decimal<0}}
     name Switch1
     xpos 426
     ypos -494
    }
    Multiply {
     value {{parent.TimeBlur8.divisions}}
     name Multiply6
     xpos 426
     ypos -436
    }
    Merge2 {
     inputs 2
     operation from
     name Merge6
     xpos 426
     ypos -369
    }
set N4d0ce390 [stack 0]
    Output {
     name Output1
     xpos 426
     ypos -221
    }
push $N4d0ce390
push $N4d0ce390
    Viewer {
     inputs 2
     frame_range 1-100
     name Viewer1
     xpos 675
     ypos -246
    }
   end_group
   NoTimeBlur {
    name NoTimeBlur1
    xpos -283
    ypos -779
   }
   Transform {
    scale {{0.05+(0.05*(((parent.DecimalTimeOffset13.decimal-0.5)*2)*ScaleVariationSmoke))}}
    center {{root.width/2 x1015 2304} {root.height/2}}
    shutteroffset centred
    name Transform44
    xpos -283
    ypos -152
   }
   Card3D {
    inputs 3
    rot_order ZYX
    translate {0 0 0}
    rotate {90 0 0}
    shutteroffset centred
    name cCard3D25
    tile_color 0x7b1d1dff
    xpos -283
    ypos 11
    addUserKnob {20 User l parent}
    addUserKnob {22 python_button l "set parent" t "select parent node, and press this button to set the selected node as parent" +INVISIBLE T "n = nuke.selectedNode()\['name'].getValue()\nnuke.thisNode()\['string'].setValue(n)" +STARTLINE}
    addUserKnob {1 string l parent +INVISIBLE}
    string null
    addUserKnob {3 ref l "ref frame"}
    ref 1015
   }
   Transform {
    translate {{"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].translate.x(ref)\}]"} {"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].translate.y(ref)\}]"}}
    rotate {{"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].rotate-\[value parent_gun].rotate(ref)\}]"}}
    scale {{"\[if \{\[value parent_gun]==\"null\"\} \{return 1\} \{return 1+(\[value parent_gun].scale-\[value parent_gun].scale(ref))\}]"}}
    center {{"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].center.x(ref)\}]"} {"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].center.y(ref)\}]"}}
    name Transform_GUNMatchMove37
    xpos -283
    ypos 126
    addUserKnob {20 User l parent}
    addUserKnob {3 ref}
    ref {{parent.CTimeOffset.ref}}
   }
   Transform {
    translate {{"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].translate.x-\[value parent_env].translate.x(ref)\}]"} {"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].translate.y-\[value parent_env].translate.y(ref)\}]"}}
    rotate {{"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].rotate-\[value parent_env].rotate(ref)\}]"}}
    scale {{"\[if \{\[value parent_gun]==\"null\"\} \{return 1\} \{return 1+(\[value parent_env].scale-\[value parent_env].scale(ref))\}]"}}
    center {{"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].center.x(ref)\}]"} {"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].center.y(ref)\}]"}}
    motionblur 0.2
    shutter {{SmokeMB*0.5}}
    shutteroffset centred
    name Transform_ENVMatchMove37
    label "\n"
    xpos -283
    ypos 255
    addUserKnob {20 User l parent}
    addUserKnob {3 ref}
    ref {{parent.CTimeOffset.ref}}
   }
   Transform {
    translate {{"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return -((root.width/2)-(\[value parent_gun].center.x(1)+\[value parent_gun].translate.x(1)))\}]"} {"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return -((root.height/2)-(\[value parent_gun].center.y(1)+\[value parent_gun].translate.y(1)))\}]"}}
    name Transform_GUNMatchMove6
    label "alignment correction"
    xpos -283
    ypos 344
    addUserKnob {20 User l parent}
    addUserKnob {22 python_button l "set parent" t "select parent node, and press this button to set the selected node as parent" T "n = nuke.selectedNode()\['name'].getValue()\nnuke.thisNode()\['string'].setValue(n)" +STARTLINE}
    addUserKnob {1 string l parent}
    string Transform_MatchMove10
    addUserKnob {3 ref +INVISIBLE}
    ref {{parent.cCard3D_8.ref}}
   }
   Multiply {
    value {{math_matrix.result_y_smoke(parent.CTimeOffset.ref)}}
    name Angle_reveal_top1
    label TOP
    xpos -283
    ypos 403
   }
   Remove {
    operation keep
    channels rgb
    name Remove1
    xpos -283
    ypos 514
   }
push 0
   Switch {
    inputs 2
    which {{parent.Angle_reveal_top1.value>0.001}}
    name Switch1
    xpos -283
    ypos 660
   }
   Dot {
    name Dot82
    xpos -249
    ypos 705
   }
push 0
push $N4d04cbf0
push 0
   Input {
    inputs 0
    name front
    xpos -436
    ypos -1243
    number 2
   }
   TimeOffset {
    time_offset {{"shot_\[value shotnmbr]==0 ? 0 : shot_\[value shotnmbr]-1"}}
    time ""
    name CTimeOffset2
    label "shot: \[value shotnmbr]\non frame \[value time_offset]"
    xpos -436
    ypos -925
    addUserKnob {20 User}
    addUserKnob {3 shotnmbr l "shot "}
    shotnmbr {{shotcount}}
    addUserKnob {3 ref}
    ref {{time_offset+1}}
   }
   Group {
    name DecimalTimeOffset2
    tile_color 0xafa35dff
    label "random asset"
    note_font "Bitstream Vera Sans Bold"
    xpos -436
    ypos -842
    addUserKnob {20 User}
    addUserKnob {7 decimal l "time offset (decimal)"}
    decimal {{random(shotcount*seed)}}
    addUserKnob {26 ""}
    addUserKnob {26 _1 l "" +STARTLINE T "Chris Fryer | 2020\nupdated by Yorben Otto | 2024"}
   }
    Input {
     inputs 0
     name Input1
     xpos 426
     ypos -793
    }
    TimeOffset {
     time_offset {{(-floor(parent.decimal))*(DecimalTimeOffset2.decimal<0)}}
     time ""
     name TimeOffset1
     xpos 426
     ypos -675
    }
    Dot {
     name Dot6
     xpos 460
     ypos -635
    }
set N4cb2a180 [stack 0]
    Dot {
     name Dot5
     xpos 350
     ypos -635
    }
    Dot {
     name Dot7
     xpos 350
     ypos -365
    }
push $N4cb2a180
    Dot {
     name Dot1
     xpos 572
     ypos -635
    }
    TimeBlur {
     divisions 2
     shutter {{(parent.decimal-(floor(parent.decimal)))*2}}
     shutteroffset start
     shuttercustomoffset 0
     name TimeBlur1
     xpos 538
     ypos -558
    }
    Dot {
     name Dot2
     xpos 572
     ypos -490
    }
push $N4cb2a180
    TimeBlur {
     divisions 2
     shutter {{parent.decimal*2}}
     shutteroffset start
     shuttercustomoffset 0
     name TimeBlur8
     xpos 426
     ypos -556
    }
    Switch {
     inputs 2
     which {{parent.decimal<0}}
     name Switch1
     xpos 426
     ypos -494
    }
    Multiply {
     value {{parent.TimeBlur8.divisions}}
     name Multiply6
     xpos 426
     ypos -436
    }
    Merge2 {
     inputs 2
     operation from
     name Merge6
     xpos 426
     ypos -369
    }
set N4cb6c0c0 [stack 0]
    Output {
     name Output1
     xpos 426
     ypos -221
    }
push $N4cb6c0c0
push $N4cb6c0c0
    Viewer {
     inputs 2
     frame_range 1-100
     name Viewer1
     xpos 675
     ypos -246
    }
   end_group
   NoTimeBlur {
    name NoTimeBlur5
    xpos -436
    ypos -780
   }
   Transform {
    scale {{0.05+(0.05*(((parent.DecimalTimeOffset13.decimal-0.5)*2)*ScaleVariationSmoke))}}
    center {{root.width/2 x1015 2304} {root.height/2}}
    shutteroffset centred
    name Transform45
    xpos -436
    ypos -151
   }
   Card3D {
    inputs 3
    rot_order ZYX
    translate {0 0 0}
    rotate {0 90 0}
    shutteroffset centred
    name cCard3D26
    tile_color 0x7b1d1dff
    xpos -436
    ypos 15
    addUserKnob {20 User l parent}
    addUserKnob {22 python_button l "set parent" t "select parent node, and press this button to set the selected node as parent" +INVISIBLE T "n = nuke.selectedNode()\['name'].getValue()\nnuke.thisNode()\['string'].setValue(n)" +STARTLINE}
    addUserKnob {1 string l parent +INVISIBLE}
    string null
    addUserKnob {3 ref l "ref frame"}
    ref 1015
   }
   Transform {
    translate {{"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].translate.x(ref)\}]"} {"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].translate.y(ref)\}]"}}
    rotate {{"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].rotate-\[value parent_gun].rotate(ref)\}]"}}
    scale {{"\[if \{\[value parent_gun]==\"null\"\} \{return 1\} \{return 1+(\[value parent_gun].scale-\[value parent_gun].scale(ref))\}]"}}
    center {{"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].center.x(ref)\}]"} {"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].center.y(ref)\}]"}}
    name Transform_GUNMatchMove38
    label "\n"
    xpos -436
    ypos 124
    addUserKnob {20 User l parent}
    addUserKnob {3 ref}
    ref {{parent.CTimeOffset.ref}}
   }
   Transform {
    translate {{"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].translate.x-\[value parent_env].translate.x(ref)\}]"} {"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].translate.y-\[value parent_env].translate.y(ref)\}]"}}
    rotate {{"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].rotate-\[value parent_env].rotate(ref)\}]"}}
    scale {{"\[if \{\[value parent_gun]==\"null\"\} \{return 1\} \{return 1+(\[value parent_env].scale-\[value parent_env].scale(ref))\}]"}}
    center {{"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].center.x(ref)\}]"} {"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].center.y(ref)\}]"}}
    motionblur 0.2
    shutter {{SmokeMB*0.5}}
    shutteroffset centred
    name Transform_ENVMatchMove38
    xpos -436
    ypos 254
    addUserKnob {20 User l parent}
    addUserKnob {3 ref}
    ref {{parent.CTimeOffset.ref}}
   }
   Transform {
    translate {{"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return -((root.width/2)-(\[value parent_gun].center.x(1)+\[value parent_gun].translate.x(1)))\}]"} {"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return -((root.height/2)-(\[value parent_gun].center.y(1)+\[value parent_gun].translate.y(1)))\}]"}}
    name Transform_GUNMatchMove7
    label "alignment correction"
    xpos -436
    ypos 343
    addUserKnob {20 User l parent}
    addUserKnob {22 python_button l "set parent" t "select parent node, and press this button to set the selected node as parent" T "n = nuke.selectedNode()\['name'].getValue()\nnuke.thisNode()\['string'].setValue(n)" +STARTLINE}
    addUserKnob {1 string l parent}
    string Transform_MatchMove10
    addUserKnob {3 ref +INVISIBLE}
    ref {{parent.cCard3D_8.ref}}
   }
   Multiply {
    value {{math_matrix.result_x_smoke(parent.CTimeOffset.ref)}}
    name Angle_reveal_front1
    label FRONT
    xpos -436
    ypos 401
   }
   Remove {
    operation keep
    channels rgb
    name Remove2
    xpos -436
    ypos 511
   }
push 0
   Switch {
    inputs 2
    which {{parent.Angle_reveal_front1.value>0.001}}
    name Switch2
    xpos -436
    ypos 660
   }
   Dot {
    name Dot83
    xpos -402
    ypos 735
   }
   Input {
    inputs 0
    name side
    xpos -130
    ypos -1242
   }
   TimeOffset {
    time_offset {{"shot_\[value shotnmbr]==0 ? 0 : shot_\[value shotnmbr]-1"}}
    time ""
    name CTimeOffset
    label "shot: \[value shotnmbr]\non frame \[value time_offset]"
    xpos -130
    ypos -927
    addUserKnob {20 User}
    addUserKnob {3 shotnmbr l "shot "}
    shotnmbr {{shotcount}}
    addUserKnob {3 ref}
    ref {{time_offset+1}}
   }
   Group {
    name DecimalTimeOffset13
    tile_color 0xafa35dff
    label "random asset"
    note_font "Bitstream Vera Sans Bold"
    xpos -130
    ypos -844
    addUserKnob {20 User}
    addUserKnob {7 decimal l "time offset (decimal)"}
    decimal {{random(shotcount*seed)}}
    addUserKnob {26 ""}
    addUserKnob {26 _1 l "" +STARTLINE T "Chris Fryer | 2020\nupdated by Yorben Otto | 2024"}
   }
    Input {
     inputs 0
     name Input1
     xpos 426
     ypos -793
    }
    TimeOffset {
     time_offset {{(-floor(parent.decimal))*(DecimalTimeOffset13.decimal<0)}}
     time ""
     name TimeOffset1
     xpos 426
     ypos -675
    }
    Dot {
     name Dot6
     xpos 460
     ypos -635
    }
set N4e2b8030 [stack 0]
    Dot {
     name Dot5
     xpos 350
     ypos -635
    }
    Dot {
     name Dot7
     xpos 350
     ypos -365
    }
push $N4e2b8030
    Dot {
     name Dot1
     xpos 572
     ypos -635
    }
    TimeBlur {
     divisions 2
     shutter {{(parent.decimal-(floor(parent.decimal)))*2}}
     shutteroffset start
     shuttercustomoffset 0
     name TimeBlur1
     xpos 538
     ypos -558
    }
    Dot {
     name Dot2
     xpos 572
     ypos -490
    }
push $N4e2b8030
    TimeBlur {
     divisions 2
     shutter {{parent.decimal*2}}
     shutteroffset start
     shuttercustomoffset 0
     name TimeBlur8
     xpos 426
     ypos -556
    }
    Switch {
     inputs 2
     which {{parent.decimal<0}}
     name Switch1
     xpos 426
     ypos -494
    }
    Multiply {
     value {{parent.TimeBlur8.divisions}}
     name Multiply6
     xpos 426
     ypos -436
    }
    Merge2 {
     inputs 2
     operation from
     name Merge6
     xpos 426
     ypos -369
    }
set N50c09e80 [stack 0]
    Output {
     name Output1
     xpos 426
     ypos -221
    }
push $N50c09e80
push $N50c09e80
    Viewer {
     inputs 2
     frame_range 1-100
     name Viewer1
     xpos 675
     ypos -246
    }
   end_group
   NoTimeBlur {
    name NoTimeBlur13
    xpos -130
    ypos -782
   }
   Transform {
    scale {{0.05+(0.05*(((parent.DecimalTimeOffset13.decimal-0.5)*2)*ScaleVariationSmoke))}}
    center {{root.width/2 x1015 2304} {root.height/2}}
    shutteroffset centred
    name Transform46
    xpos -130
    ypos -155
   }
   Card3D {
    translate {{"\[if \{\[exists  parent.parent.parent.input0]\} \{return \[value \[topnode parent.parent.parent.input0].name].translate.x(ref)\} \{return 0\}]"} {"\[if \{\[exists  parent.parent.parent.input0]\} \{return \[value \[topnode parent.parent.parent.input0].name].translate.y(ref)\} \{return 0\}]"} {"\[if \{\[exists  parent.parent.parent.input0]\} \{return \[value \[topnode parent.parent.parent.input0].name].translate.z(ref)\} \{return -1\}]"}}
    rotate {{"\[if \{\[exists  parent.parent.parent.input0]\} \{return \[value \[topnode parent.parent.parent.input0].name].rotate.x(ref)\} \{return 0\}]"} {"\[if \{\[exists  parent.parent.parent.input0]\} \{return \[value \[topnode parent.parent.parent.input0].name].rotate.y(ref)\} \{return 0\}]"} {"\[if \{\[exists  parent.parent.parent.input0]\} \{return \[value \[topnode parent.parent.parent.input0].name].rotate.z(ref)\} \{return 0\}]"}}
    scaling {{"\[if \{\[exists  parent.parent.parent.input0]\} \{return \[value \[topnode parent.parent.parent.input0].name].scaling.x(ref)\} \{return 1\}]"} {"\[if \{\[exists  parent.parent.parent.input0]\} \{return \[value \[topnode parent.parent.parent.input0].name].scaling.y(ref)\} \{return 1\}]"} {"\[if \{\[exists  parent.parent.parent.input0]\} \{return \[value \[topnode parent.parent.parent.input0].name].scaling.z(ref)\} \{return 1\}]"}}
    uniform_scale {{"\[if \{\[exists  parent.parent.parent.input0]\} \{return (\[value \[topnode parent.parent.parent.input0].name].uniform_scale(ref)*25)\} \{return 25\}]"}}
    shutteroffset centred
    name cCard3D_1
    tile_color 0x7b1d1dff
    label "ref frame: \[value ref]"
    xpos -130
    ypos 2
    addUserKnob {20 User l parent}
    addUserKnob {22 python_button l "set parent" t "select parent node, and press this button to set the selected node as parent" +INVISIBLE T "n = nuke.selectedNode()\['name'].getValue()\nnuke.thisNode()\['string'].setValue(n)" +STARTLINE}
    addUserKnob {1 string l parent +INVISIBLE}
    string null
    addUserKnob {3 id l "id number"}
    id {{parent.CTimeOffset.shotnmbr}}
    addUserKnob {3 ref l "ref frame"}
    ref {{parent.CTimeOffset.ref}}
   }
   Transform {
    translate {{"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].translate.x(ref)\}]"} {"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].translate.y(ref)\}]"}}
    rotate {{"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].rotate-\[value parent_gun].rotate(ref)\}]"}}
    scale {{"\[if \{\[value parent_gun]==\"null\"\} \{return 1\} \{return 1+(\[value parent_gun].scale-\[value parent_gun].scale(ref))\}]"}}
    center {{"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].center.x(ref)\}]"} {"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].center.y(ref)\}]"}}
    name Transform_GUNMatchMove39
    label "\n"
    xpos -130
    ypos 124
    addUserKnob {20 User l parent}
    addUserKnob {3 ref}
    ref {{parent.CTimeOffset.ref}}
   }
   Transform {
    translate {{"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].translate.x-\[value parent_env].translate.x(ref)\}]"} {"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].translate.y-\[value parent_env].translate.y(ref)\}]"}}
    rotate {{"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].rotate-\[value parent_env].rotate(ref)\}]"}}
    scale {{"\[if \{\[value parent_gun]==\"null\"\} \{return 1\} \{return 1+(\[value parent_env].scale-\[value parent_env].scale(ref))\}]"}}
    center {{"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].center.x(ref)\}]"} {"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].center.y(ref)\}]"}}
    motionblur 0.2
    shutter {{SmokeMB*0.5}}
    shutteroffset centred
    name Transform_ENVMatchMove39
    xpos -130
    ypos 258
    addUserKnob {20 User l parent}
    addUserKnob {3 ref}
    ref {{parent.CTimeOffset.ref}}
   }
   Transform {
    translate {{"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return -((root.width/2)-(\[value parent_gun].center.x(1)+\[value parent_gun].translate.x(1)))\}]"} {"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return -((root.height/2)-(\[value parent_gun].center.y(1)+\[value parent_gun].translate.y(1)))\}]"}}
    name Transform_GUNMatchMove5
    label "alignment correction"
    xpos -130
    ypos 340
    addUserKnob {20 User l parent}
    addUserKnob {22 python_button l "set parent" t "select parent node, and press this button to set the selected node as parent" T "n = nuke.selectedNode()\['name'].getValue()\nnuke.thisNode()\['string'].setValue(n)" +STARTLINE}
    addUserKnob {1 string l parent}
    string Transform_MatchMove10
    addUserKnob {3 ref +INVISIBLE}
    ref {{parent.cCard3D_8.ref}}
   }
   Multiply {
    value {{math_matrix.result_z_smoke(parent.CTimeOffset.ref)}}
    name Angle_reveal_side1
    label SIDE
    xpos -130
    ypos 404
   }
   Remove {
    operation keep
    channels rgb
    name Remove39
    xpos -130
    ypos 514
   }
push 0
   Switch {
    inputs 2
    which {{parent.Angle_reveal_side1.value>0.001}}
    name Switch3
    xpos -130
    ypos 658
   }
   Merge2 {
    inputs 3+1
    operation max
    Achannels rgb
    Bchannels rgb
    output rgb
    name Merge28
    xpos -130
    ypos 731
   }
   Merge2 {
    inputs 2
    operation plus
    bbox intersection
    Achannels rgb
    Bchannels rgb
    output rgb
    name Merge29
    xpos -130
    ypos 983
   }
   Shuffle2 {
    fromInput1 {{0} B}
    fromInput2 {{0} B}
    mappings "4 rgba.red 0 0 rgba.red 0 0 rgba.green 0 1 rgba.green 0 1 rgba.blue 0 2 rgba.alpha 0 3 rgba.blue 0 2 rgba.blue 0 2"
    name Shuffle1
    xpos -130
    ypos 1021
   }
push 0
   Switch {
    inputs 2
    which {{"shot_\[value count]==0?0:frame>=shot_\[value count]"}}
    name cSwitch_13
    xpos -130
    ypos 1078
    addUserKnob {20 User}
    addUserKnob {3 count}
    count {{parent.CTimeOffset.shotnmbr}}
   }
   Output {
    name Output1
    xpos -130
    ypos 1323
   }
   StickyNote {
    inputs 0
    name StickyNote1
    label "<-- handy to break concatonation?  "
    xpos -39
    ypos 193
   }
  end_group
push $N586971d0
  PostageStamp {
   name Stamp10
   help "Stamps by Adrian Pueyo and Alexey Kuchinski.\nUpdated May 18 2021"
   onCreate "if nuke.GUI:\n    try:\n        import stamps; stamps.wiredOnCreate()\n    except:\n        pass\n"
   knobChanged "import stamps; stamps.wiredKnobChanged()"
   autolabel "nuke.thisNode().knob(\"title\").value()"
   tile_color 0x1000001
   note_font "Bitstream Vera Sans"
   note_font_size 20
   xpos 775
   ypos -660
   hide_input true
   addUserKnob {20 wired_tab l "Wired Stamp"}
   addUserKnob {26 identifier -STARTLINE +HIDDEN T wired}
   addUserKnob {3 lockCallbacks l "" +STARTLINE +HIDDEN}
   addUserKnob {6 toReconnect -STARTLINE +HIDDEN}
   addUserKnob {1 title l Title: t "Displayed name on the Node Graph for this Stamp and its Anchor.\nIMPORTANT: This is only for display purposes, and is different from the real/internal name of the Stamps."}
   title smoke_FRONT
   addUserKnob {26 prev_title l "" +STARTLINE +HIDDEN T smoke_FRONT}
   addUserKnob {26 tags l Tags: t "Tags of this stamp's Anchor, for information purpose only.\nClick \"show anchor\" to change them." T <i>2D</i>}
   addUserKnob {26 backdrops l Backdrops: t "Labels of backdrop nodes which contain this stamp's Anchor." T "<i><Left>before or after Flare</i>"}
   addUserKnob {26 line1 l "" +STARTLINE}
   addUserKnob {6 postageStamp_show l "postage stamp" t "Enable the postage stamp thumbnail in this node.\nYou're seeing this because the class of this node includes the postage_stamp knob." +STARTLINE}
   addUserKnob {26 anchor_label l Anchor: T " "}
   addUserKnob {22 show_anchor l " show anchor " t "Show the properties panel for this Stamp's Anchor." -STARTLINE T stamps.wiredShowAnchor()}
   addUserKnob {22 zoom_anchor l "zoom anchor" t "Navigate to this Stamp's Anchor on the Node Graph." -STARTLINE T stamps.wiredZoomAnchor()}
   addUserKnob {26 stamps_label l Stamps: T " "}
   addUserKnob {22 zoomNext l " zoom next " t "Navigate to this Stamp's next sibling on the Node Graph." -STARTLINE T stamps.wiredZoomNext()}
   addUserKnob {22 selectSimilar l " select similar " t "Select all similar Stamps to this one on the Node Graph." -STARTLINE T stamps.wiredSelectSimilar()}
   addUserKnob {26 space_1 l "" +STARTLINE T " "}
   addUserKnob {26 reconnect_label l Reconnect: t "Reconnect by the stored Anchor name." T " "}
   addUserKnob {22 reconnect_this l this t "Reconnect this Stamp to its Anchor, by its stored Anchor name." -STARTLINE T "n = nuke.thisNode()\ntry:\n    n.setInput(0,nuke.toNode(n.knob(\"anchor\").value()))\nexcept:\n    nuke.message(\"Unable to reconnect.\")\ntry:\n    import stamps\n    stamps.wiredGetStyle(n)\nexcept:\n    pass\n"}
   addUserKnob {22 reconnect_similar l similar t "Reconnect this Stamp and similar ones to their Anchor, by their stored anchor name." -STARTLINE T stamps.wiredReconnectSimilar()}
   addUserKnob {22 reconnect_all l all t "Reconnect all the Stamps to their Anchors, by their stored anchor names." -STARTLINE T stamps.wiredReconnectAll()}
   addUserKnob {26 space_2 l "" +STARTLINE T " "}
   addUserKnob {20 advanced_reconnection l "Advanced Reconnection" n 2}
   addUserKnob {26 reconnect_by_title_label l "<font color=gold>By Title:" t "Reconnect by searching for a matching title." T " "}
   addUserKnob {22 reconnect_by_title_this l this t "Look for an Anchor that shares this Stamp's title, and connect this Stamp to it.\nIMPORTANT: Use this carefully, and only when the normal reconnection doesn't work." -STARTLINE T stamps.wiredReconnectByTitle()}
   addUserKnob {22 reconnect_by_title_similar l similar t "Look for an Anchor that shares this Stamp's title, and connect this Stamp and similar ones to it.\nIMPORTANT: Use this carefully, and only when the normal reconnection doesn't work." -STARTLINE T stamps.wiredReconnectByTitleSimilar()}
   addUserKnob {22 reconnect_by_title_selected l selected t "For each Stamp selected, look for an Anchor that shares its title, and connect to it.\nIMPORTANT: Use this carefully, and only when the normal reconnection doesn't work." -STARTLINE T stamps.wiredReconnectByTitleSelected()}
   addUserKnob {26 reconnect_by_selection_label l "<font color=orangered>By Selection:" t "Force reconnect to a selected Anchor." T " "}
   addUserKnob {22 reconnect_by_selection_this l this t "Force reconnect this Stamp to a selected Anchor, whatever its name or title.\nIMPORTANT: Use this carefully, and only when the normal reconnection doesn't work." -STARTLINE T stamps.wiredReconnectBySelection()}
   addUserKnob {22 reconnect_by_selection_similar l similar t "Force reconnect this Stamp and similar ones to a selected Anchor, whatever its name or title.\nIMPORTANT: Use this carefully, and only when the normal reconnection doesn't work." -STARTLINE T stamps.wiredReconnectBySelectionSimilar()}
   addUserKnob {22 reconnect_by_selection_selected l selected t "Force reconnect all selected Stamps to an also selected Anchor, whatever its name or title.\nIMPORTANT: Use this carefully, and only when the normal reconnection doesn't work." -STARTLINE T stamps.wiredReconnectBySelectionSelected()}
   addUserKnob {1 anchor l Anchor}
   anchor Anchor_220a2be282
   addUserKnob {6 auto_reconnect_by_title l "<font color=#ED9977>&nbsp; auto-reconnect by title" t "When creating this stamp again (like on copy-paste), auto-reconnect it by title instead of doing it by the saved anchor's name, and auto-turn this off immediately.\nIMPORTANT: Should be off by default. Only use this for setting up templates." +STARTLINE}
   addUserKnob {26 line2 l "" +STARTLINE}
   addUserKnob {22 buttonHelp l Help -STARTLINE T stamps.showHelp()}
   addUserKnob {26 version l " " t "Stamps by Adrian Pueyo and Alexey Kuchinski.\nUpdated May 18 2021." -STARTLINE T "<a href=\"http://www.nukepedia.com/gizmos/other/stamps\" style=\"color:#666;text-decoration: none;\"><span style=\"color:#666\"> <big>Stamps v1.1</big></b></a>"}
  }
  Dot {
   name Dot7
   xpos 809
   ypos -612
  }
push $N58d70c10
  PostageStamp {
   name Stamp11
   help "Stamps by Adrian Pueyo and Alexey Kuchinski.\nUpdated May 18 2021"
   onCreate "if nuke.GUI:\n    try:\n        import stamps; stamps.wiredOnCreate()\n    except:\n        pass\n"
   knobChanged "import stamps; stamps.wiredKnobChanged()"
   autolabel "nuke.thisNode().knob(\"title\").value()"
   tile_color 0x1000001
   note_font "Bitstream Vera Sans"
   note_font_size 20
   xpos 900
   ypos -660
   hide_input true
   addUserKnob {20 wired_tab l "Wired Stamp"}
   addUserKnob {26 identifier -STARTLINE +HIDDEN T wired}
   addUserKnob {3 lockCallbacks l "" +STARTLINE +HIDDEN}
   addUserKnob {6 toReconnect -STARTLINE +HIDDEN}
   addUserKnob {1 title l Title: t "Displayed name on the Node Graph for this Stamp and its Anchor.\nIMPORTANT: This is only for display purposes, and is different from the real/internal name of the Stamps."}
   title smoke_TOP
   addUserKnob {26 prev_title l "" +STARTLINE +HIDDEN T smoke_TOP}
   addUserKnob {26 tags l Tags: t "Tags of this stamp's Anchor, for information purpose only.\nClick \"show anchor\" to change them." T <i>2D</i>}
   addUserKnob {26 backdrops l Backdrops: t "Labels of backdrop nodes which contain this stamp's Anchor." T "<i><Left>before or after Flare</i>"}
   addUserKnob {26 line1 l "" +STARTLINE}
   addUserKnob {6 postageStamp_show l "postage stamp" t "Enable the postage stamp thumbnail in this node.\nYou're seeing this because the class of this node includes the postage_stamp knob." +STARTLINE}
   addUserKnob {26 anchor_label l Anchor: T " "}
   addUserKnob {22 show_anchor l " show anchor " t "Show the properties panel for this Stamp's Anchor." -STARTLINE T stamps.wiredShowAnchor()}
   addUserKnob {22 zoom_anchor l "zoom anchor" t "Navigate to this Stamp's Anchor on the Node Graph." -STARTLINE T stamps.wiredZoomAnchor()}
   addUserKnob {26 stamps_label l Stamps: T " "}
   addUserKnob {22 zoomNext l " zoom next " t "Navigate to this Stamp's next sibling on the Node Graph." -STARTLINE T stamps.wiredZoomNext()}
   addUserKnob {22 selectSimilar l " select similar " t "Select all similar Stamps to this one on the Node Graph." -STARTLINE T stamps.wiredSelectSimilar()}
   addUserKnob {26 space_1 l "" +STARTLINE T " "}
   addUserKnob {26 reconnect_label l Reconnect: t "Reconnect by the stored Anchor name." T " "}
   addUserKnob {22 reconnect_this l this t "Reconnect this Stamp to its Anchor, by its stored Anchor name." -STARTLINE T "n = nuke.thisNode()\ntry:\n    n.setInput(0,nuke.toNode(n.knob(\"anchor\").value()))\nexcept:\n    nuke.message(\"Unable to reconnect.\")\ntry:\n    import stamps\n    stamps.wiredGetStyle(n)\nexcept:\n    pass\n"}
   addUserKnob {22 reconnect_similar l similar t "Reconnect this Stamp and similar ones to their Anchor, by their stored anchor name." -STARTLINE T stamps.wiredReconnectSimilar()}
   addUserKnob {22 reconnect_all l all t "Reconnect all the Stamps to their Anchors, by their stored anchor names." -STARTLINE T stamps.wiredReconnectAll()}
   addUserKnob {26 space_2 l "" +STARTLINE T " "}
   addUserKnob {20 advanced_reconnection l "Advanced Reconnection" n 2}
   addUserKnob {26 reconnect_by_title_label l "<font color=gold>By Title:" t "Reconnect by searching for a matching title." T " "}
   addUserKnob {22 reconnect_by_title_this l this t "Look for an Anchor that shares this Stamp's title, and connect this Stamp to it.\nIMPORTANT: Use this carefully, and only when the normal reconnection doesn't work." -STARTLINE T stamps.wiredReconnectByTitle()}
   addUserKnob {22 reconnect_by_title_similar l similar t "Look for an Anchor that shares this Stamp's title, and connect this Stamp and similar ones to it.\nIMPORTANT: Use this carefully, and only when the normal reconnection doesn't work." -STARTLINE T stamps.wiredReconnectByTitleSimilar()}
   addUserKnob {22 reconnect_by_title_selected l selected t "For each Stamp selected, look for an Anchor that shares its title, and connect to it.\nIMPORTANT: Use this carefully, and only when the normal reconnection doesn't work." -STARTLINE T stamps.wiredReconnectByTitleSelected()}
   addUserKnob {26 reconnect_by_selection_label l "<font color=orangered>By Selection:" t "Force reconnect to a selected Anchor." T " "}
   addUserKnob {22 reconnect_by_selection_this l this t "Force reconnect this Stamp to a selected Anchor, whatever its name or title.\nIMPORTANT: Use this carefully, and only when the normal reconnection doesn't work." -STARTLINE T stamps.wiredReconnectBySelection()}
   addUserKnob {22 reconnect_by_selection_similar l similar t "Force reconnect this Stamp and similar ones to a selected Anchor, whatever its name or title.\nIMPORTANT: Use this carefully, and only when the normal reconnection doesn't work." -STARTLINE T stamps.wiredReconnectBySelectionSimilar()}
   addUserKnob {22 reconnect_by_selection_selected l selected t "Force reconnect all selected Stamps to an also selected Anchor, whatever its name or title.\nIMPORTANT: Use this carefully, and only when the normal reconnection doesn't work." -STARTLINE T stamps.wiredReconnectBySelectionSelected()}
   addUserKnob {1 anchor l Anchor}
   anchor Anchor_25b668170c
   addUserKnob {6 auto_reconnect_by_title l "<font color=#ED9977>&nbsp; auto-reconnect by title" t "When creating this stamp again (like on copy-paste), auto-reconnect it by title instead of doing it by the saved anchor's name, and auto-turn this off immediately.\nIMPORTANT: Should be off by default. Only use this for setting up templates." +STARTLINE}
   addUserKnob {26 line2 l "" +STARTLINE}
   addUserKnob {22 buttonHelp l Help -STARTLINE T stamps.showHelp()}
   addUserKnob {26 version l " " t "Stamps by Adrian Pueyo and Alexey Kuchinski.\nUpdated May 18 2021." -STARTLINE T "<a href=\"http://www.nukepedia.com/gizmos/other/stamps\" style=\"color:#666;text-decoration: none;\"><span style=\"color:#666\"> <big>Stamps v1.1</big></b></a>"}
  }
push $N56244930
  PostageStamp {
   name Stamp12
   help "Stamps by Adrian Pueyo and Alexey Kuchinski.\nUpdated May 18 2021"
   onCreate "if nuke.GUI:\n    try:\n        import stamps; stamps.wiredOnCreate()\n    except:\n        pass\n"
   knobChanged "import stamps; stamps.wiredKnobChanged()"
   autolabel "nuke.thisNode().knob(\"title\").value()"
   tile_color 0x1000001
   note_font "Bitstream Vera Sans"
   note_font_size 20
   xpos 1018
   ypos -662
   hide_input true
   addUserKnob {20 wired_tab l "Wired Stamp"}
   addUserKnob {26 identifier -STARTLINE +HIDDEN T wired}
   addUserKnob {3 lockCallbacks l "" +STARTLINE +HIDDEN}
   addUserKnob {6 toReconnect -STARTLINE +HIDDEN}
   addUserKnob {1 title l Title: t "Displayed name on the Node Graph for this Stamp and its Anchor.\nIMPORTANT: This is only for display purposes, and is different from the real/internal name of the Stamps."}
   title smoke_SIDE
   addUserKnob {26 prev_title l "" +STARTLINE +HIDDEN T smoke_SIDE}
   addUserKnob {26 tags l Tags: t "Tags of this stamp's Anchor, for information purpose only.\nClick \"show anchor\" to change them." T <i>2D</i>}
   addUserKnob {26 backdrops l Backdrops: t "Labels of backdrop nodes which contain this stamp's Anchor." T "<i><Left>before or after Flare</i>"}
   addUserKnob {26 line1 l "" +STARTLINE}
   addUserKnob {6 postageStamp_show l "postage stamp" t "Enable the postage stamp thumbnail in this node.\nYou're seeing this because the class of this node includes the postage_stamp knob." +STARTLINE}
   addUserKnob {26 anchor_label l Anchor: T " "}
   addUserKnob {22 show_anchor l " show anchor " t "Show the properties panel for this Stamp's Anchor." -STARTLINE T stamps.wiredShowAnchor()}
   addUserKnob {22 zoom_anchor l "zoom anchor" t "Navigate to this Stamp's Anchor on the Node Graph." -STARTLINE T stamps.wiredZoomAnchor()}
   addUserKnob {26 stamps_label l Stamps: T " "}
   addUserKnob {22 zoomNext l " zoom next " t "Navigate to this Stamp's next sibling on the Node Graph." -STARTLINE T stamps.wiredZoomNext()}
   addUserKnob {22 selectSimilar l " select similar " t "Select all similar Stamps to this one on the Node Graph." -STARTLINE T stamps.wiredSelectSimilar()}
   addUserKnob {26 space_1 l "" +STARTLINE T " "}
   addUserKnob {26 reconnect_label l Reconnect: t "Reconnect by the stored Anchor name." T " "}
   addUserKnob {22 reconnect_this l this t "Reconnect this Stamp to its Anchor, by its stored Anchor name." -STARTLINE T "n = nuke.thisNode()\ntry:\n    n.setInput(0,nuke.toNode(n.knob(\"anchor\").value()))\nexcept:\n    nuke.message(\"Unable to reconnect.\")\ntry:\n    import stamps\n    stamps.wiredGetStyle(n)\nexcept:\n    pass\n"}
   addUserKnob {22 reconnect_similar l similar t "Reconnect this Stamp and similar ones to their Anchor, by their stored anchor name." -STARTLINE T stamps.wiredReconnectSimilar()}
   addUserKnob {22 reconnect_all l all t "Reconnect all the Stamps to their Anchors, by their stored anchor names." -STARTLINE T stamps.wiredReconnectAll()}
   addUserKnob {26 space_2 l "" +STARTLINE T " "}
   addUserKnob {20 advanced_reconnection l "Advanced Reconnection" n 2}
   addUserKnob {26 reconnect_by_title_label l "<font color=gold>By Title:" t "Reconnect by searching for a matching title." T " "}
   addUserKnob {22 reconnect_by_title_this l this t "Look for an Anchor that shares this Stamp's title, and connect this Stamp to it.\nIMPORTANT: Use this carefully, and only when the normal reconnection doesn't work." -STARTLINE T stamps.wiredReconnectByTitle()}
   addUserKnob {22 reconnect_by_title_similar l similar t "Look for an Anchor that shares this Stamp's title, and connect this Stamp and similar ones to it.\nIMPORTANT: Use this carefully, and only when the normal reconnection doesn't work." -STARTLINE T stamps.wiredReconnectByTitleSimilar()}
   addUserKnob {22 reconnect_by_title_selected l selected t "For each Stamp selected, look for an Anchor that shares its title, and connect to it.\nIMPORTANT: Use this carefully, and only when the normal reconnection doesn't work." -STARTLINE T stamps.wiredReconnectByTitleSelected()}
   addUserKnob {26 reconnect_by_selection_label l "<font color=orangered>By Selection:" t "Force reconnect to a selected Anchor." T " "}
   addUserKnob {22 reconnect_by_selection_this l this t "Force reconnect this Stamp to a selected Anchor, whatever its name or title.\nIMPORTANT: Use this carefully, and only when the normal reconnection doesn't work." -STARTLINE T stamps.wiredReconnectBySelection()}
   addUserKnob {22 reconnect_by_selection_similar l similar t "Force reconnect this Stamp and similar ones to a selected Anchor, whatever its name or title.\nIMPORTANT: Use this carefully, and only when the normal reconnection doesn't work." -STARTLINE T stamps.wiredReconnectBySelectionSimilar()}
   addUserKnob {22 reconnect_by_selection_selected l selected t "Force reconnect all selected Stamps to an also selected Anchor, whatever its name or title.\nIMPORTANT: Use this carefully, and only when the normal reconnection doesn't work." -STARTLINE T stamps.wiredReconnectBySelectionSelected()}
   addUserKnob {1 anchor l Anchor}
   anchor Anchor_232c9aab88
   addUserKnob {6 auto_reconnect_by_title l "<font color=#ED9977>&nbsp; auto-reconnect by title" t "When creating this stamp again (like on copy-paste), auto-reconnect it by title instead of doing it by the saved anchor's name, and auto-turn this off immediately.\nIMPORTANT: Should be off by default. Only use this for setting up templates." +STARTLINE}
   addUserKnob {26 line2 l "" +STARTLINE}
   addUserKnob {22 buttonHelp l Help -STARTLINE T stamps.showHelp()}
   addUserKnob {26 version l " " t "Stamps by Adrian Pueyo and Alexey Kuchinski.\nUpdated May 18 2021." -STARTLINE T "<a href=\"http://www.nukepedia.com/gizmos/other/stamps\" style=\"color:#666;text-decoration: none;\"><span style=\"color:#666\"> <big>Stamps v1.1</big></b></a>"}
  }
  Dot {
   name Dot8
   xpos 1052
   ypos -612
  }
  Group {
   inputs 3
   name gunshot4
   label "shot: \[value shotcount]\non frame: \[value shotstart]\n"
   xpos 900
   ypos -585
   addUserKnob {20 User}
   addUserKnob {3 shotcount l shot}
   shotcount 4
   addUserKnob {3 shotstart l frame +INVISIBLE}
   shotstart {{"shotcount==0 ? 0 : shot\[value shotcount]-1" i}}
  }
   BackdropNode {
    inputs 0
    name BackdropNode19
    knobChanged "try:\n    listenedKnobs = \['text', 'position', 'name']\n    node = nuke.thisNode()\n    name = node.knob('name').value()\n    text = node.knob('text').value()\n    position = node.knob('position').value()\n    position = \"<\" + position + \">\"\n    label = node.knob('label').value()\n    \n    if nuke.thisKnob().name() in listenedKnobs:\n        if text == \"\":\n            if node.knob('position').value() == \"left\":\n                node.knob('label').setValue()\n            else:\n                node.knob('label').setValue(position + name)\n        else:\n            if node.knob('position').value() == \"left\":\n                node.knob('label').setValue(text)\n            else:\n                node.knob('label').setValue(position + text)\n                \n    elif nuke.thisKnob().name() == 'font_size':\n        fontSize = node.knob('font_size').value()\n        node.knob('note_font_size').setValue(fontSize)\nexcept:\n    pass"
    tile_color 0x232323ff
    label "<Left><h2> Gunshot"
    note_font_size 31.5
    xpos -693
    ypos -554
    bdwidth 876
    bdheight 1682
    addUserKnob {20 F_VFX l BackdropNode}
    addUserKnob {43 text l Text}
    text "<h2> Gunshot"
    addUserKnob {7 font_size l "Font Size" R 10 100}
    font_size 31.5
    addUserKnob {4 position l "" -STARTLINE M {Left Center}}
    addUserKnob {26 S01 l " " T " "}
    addUserKnob {22 grow l " <img src=\"F_scalep.png\">" -STARTLINE T "n=nuke.thisNode()\n\ndef grow(node=None,step=50):\n    try:\n        if not node:\n            n=nuke.selectedNode()\n        else:\n            n=node\n            n\['xpos'].setValue(n\['xpos'].getValue()-step)\n            n\['ypos'].setValue(n\['ypos'].getValue()-step)\n            n\['bdwidth'].setValue(n\['bdwidth'].getValue()+step*2)\n            n\['bdheight'].setValue(n\['bdheight'].getValue()+step*2)\n    except:\n        pass\ngrow(n,50)"}
    addUserKnob {22 shrink l " <img src=\"F_scalem.png\">" -STARTLINE T "n=nuke.thisNode()\n\ndef shrink(node=None,step=50):\n    try:\n        if not node:\n            n=nuke.selectedNode()\n        else:\n            n=node\n            n\['xpos'].setValue(n\['xpos'].getValue()+step)\n            n\['ypos'].setValue(n\['ypos'].getValue()+step)\n            n\['bdwidth'].setValue(n\['bdwidth'].getValue()-step*2)\n            n\['bdheight'].setValue(n\['bdheight'].getValue()-step*2)\n    except:\n        pass\nshrink(n,50)"}
    addUserKnob {22 colorandom l " <img src=\"ColorBars.png\">" -STARTLINE T "import colorsys, random\nn=nuke.thisNode()\nR,G,B= colorsys.hsv_to_rgb(random.random(),.1+random.random()*.15,.15+random.random()*.15)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ) )"}
    addUserKnob {22 darkgrey l "<font color=\"#232323\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.0, 0.0, 0.14]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 lightgrey l "<font color=\"#383838\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.0, 0.0, 0.22]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 red l "<font color=\"#8c3838\" size=6>■</font>" T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.0, 0.6, 0.55]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n" +STARTLINE}
    addUserKnob {22 orange l "<font color=\"#b28e59\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.1, 0.5, 0.7]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 yellow l "<font color=\"#ccc766\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.16, 0.5, 0.8]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 green l "<font color=\"#5d995b\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.33, 0.4, 0.6]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 cyan l "<font color=\"#72998f\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.46, 0.25, 0.6]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 blue l "<font color=\"#59687f\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.6, 0.3, 0.5]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 darkblue l "<font color=\"#63628c\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.67, 0.3, 0.55]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 magenta l "<font color=\"#927a99\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.8, 0.2, 0.6]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 pink l "<font color=\"#997a89\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.92, 0.2, 0.6]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {26 S02 l " " T " "}
    addUserKnob {26 Ftools l "" +STARTLINE T "<font color=\"#1C1C1C\"> v1.2 - Franklin VFX - 2018"}
   }
   BackdropNode {
    inputs 0
    name BackdropNode2
    knobChanged "try:\n    listenedKnobs = \['text', 'position', 'name']\n    node = nuke.thisNode()\n    name = node.knob('name').value()\n    text = node.knob('text').value()\n    position = node.knob('position').value()\n    position = \"<\" + position + \">\"\n    label = node.knob('label').value()\n    \n    if nuke.thisKnob().name() in listenedKnobs:\n        if text == \"\":\n            if node.knob('position').value() == \"left\":\n                node.knob('label').setValue()\n            else:\n                node.knob('label').setValue(position + name)\n        else:\n            if node.knob('position').value() == \"left\":\n                node.knob('label').setValue(text)\n            else:\n                node.knob('label').setValue(position + text)\n                \n    elif nuke.thisKnob().name() == 'font_size':\n        fontSize = node.knob('font_size').value()\n        node.knob('note_font_size').setValue(fontSize)\nexcept:\n    pass"
    tile_color 0x927a99ff
    note_font_size 50
    xpos -473
    ypos -221
    bdwidth 435
    bdheight 786
    z_order 1
    addUserKnob {20 F_VFX l BackdropNode}
    addUserKnob {43 text l Text}
    addUserKnob {7 font_size l "Font Size" R 10 100}
    font_size 50
    addUserKnob {4 position l "" -STARTLINE M {Left Center}}
    addUserKnob {26 S01 l " " T " "}
    addUserKnob {22 grow l " <img src=\"F_scalep.png\">" -STARTLINE T "n=nuke.thisNode()\n\ndef grow(node=None,step=50):\n    try:\n        if not node:\n            n=nuke.selectedNode()\n        else:\n            n=node\n            n\['xpos'].setValue(n\['xpos'].getValue()-step)\n            n\['ypos'].setValue(n\['ypos'].getValue()-step)\n            n\['bdwidth'].setValue(n\['bdwidth'].getValue()+step*2)\n            n\['bdheight'].setValue(n\['bdheight'].getValue()+step*2)\n    except:\n        pass\ngrow(n,50)"}
    addUserKnob {22 shrink l " <img src=\"F_scalem.png\">" -STARTLINE T "n=nuke.thisNode()\n\ndef shrink(node=None,step=50):\n    try:\n        if not node:\n            n=nuke.selectedNode()\n        else:\n            n=node\n            n\['xpos'].setValue(n\['xpos'].getValue()+step)\n            n\['ypos'].setValue(n\['ypos'].getValue()+step)\n            n\['bdwidth'].setValue(n\['bdwidth'].getValue()-step*2)\n            n\['bdheight'].setValue(n\['bdheight'].getValue()-step*2)\n    except:\n        pass\nshrink(n,50)"}
    addUserKnob {22 colorandom l " <img src=\"ColorBars.png\">" -STARTLINE T "import colorsys, random\nn=nuke.thisNode()\nR,G,B= colorsys.hsv_to_rgb(random.random(),.1+random.random()*.15,.15+random.random()*.15)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ) )"}
    addUserKnob {22 darkgrey l "<font color=\"#232323\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.0, 0.0, 0.14]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 lightgrey l "<font color=\"#383838\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.0, 0.0, 0.22]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 red l "<font color=\"#8c3838\" size=6>■</font>" T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.0, 0.6, 0.55]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n" +STARTLINE}
    addUserKnob {22 orange l "<font color=\"#b28e59\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.1, 0.5, 0.7]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 yellow l "<font color=\"#ccc766\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.16, 0.5, 0.8]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 green l "<font color=\"#5d995b\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.33, 0.4, 0.6]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 cyan l "<font color=\"#72998f\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.46, 0.25, 0.6]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 blue l "<font color=\"#59687f\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.6, 0.3, 0.5]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 darkblue l "<font color=\"#63628c\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.67, 0.3, 0.55]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 magenta l "<font color=\"#927a99\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.8, 0.2, 0.6]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 pink l "<font color=\"#997a89\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.92, 0.2, 0.6]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {26 S02 l " " T " "}
    addUserKnob {26 Ftools l "" +STARTLINE T "<font color=\"#1C1C1C\"> v1.2 - Franklin VFX - 2018"}
   }
   Constant {
    inputs 0
    channels rgb
    name Constant13
    xpos -643
    ypos 714
   }
   AdjBBox {
    numpixels {{size_bbox}}
    name AdjBBox13
    xpos -643
    ypos 849
   }
   Dot {
    name Dot78
    xpos -609
    ypos 987
   }
   Axis3 {
    inputs 0
    useMatrix true
    matrix {
        {{parent.cCard3D_1.matrix} {parent.cCard3D_1.matrix} {parent.cCard3D_1.matrix} {parent.cCard3D_1.matrix}}
        {{parent.cCard3D_1.matrix} {parent.cCard3D_1.matrix} {parent.cCard3D_1.matrix} {parent.cCard3D_1.matrix}}
        {{parent.cCard3D_1.matrix} {parent.cCard3D_1.matrix} {parent.cCard3D_1.matrix} {parent.cCard3D_1.matrix}}
        {{parent.cCard3D_1.matrix} {parent.cCard3D_1.matrix} {parent.cCard3D_1.matrix} {parent.cCard3D_1.matrix}}
      }
    name Axis14
    xpos -203
    ypos -90
   }
set N4e7d4690 [stack 0]
push 0
   Input {
    inputs 0
    name top
    xpos -283
    ypos -1243
    number 1
   }
   TimeOffset {
    time_offset {{"shot_\[value shotnmbr]==0 ? 0 : shot_\[value shotnmbr]-1"}}
    time ""
    name CTimeOffset1
    label "shot: \[value shotnmbr]\non frame \[value time_offset]"
    xpos -283
    ypos -924
    addUserKnob {20 User}
    addUserKnob {3 shotnmbr l "shot "}
    shotnmbr {{shotcount}}
    addUserKnob {3 ref}
    ref {{time_offset+1}}
   }
   Group {
    name DecimalTimeOffset1
    tile_color 0xafa35dff
    label "random asset"
    note_font "Bitstream Vera Sans Bold"
    xpos -283
    ypos -841
    addUserKnob {20 User}
    addUserKnob {7 decimal l "time offset (decimal)"}
    decimal {{random(shotcount*seed)}}
    addUserKnob {26 ""}
    addUserKnob {26 _1 l "" +STARTLINE T "Chris Fryer | 2020\nupdated by Yorben Otto | 2024"}
   }
    Input {
     inputs 0
     name Input1
     xpos 426
     ypos -793
    }
    TimeOffset {
     time_offset {{(-floor(parent.decimal))*(DecimalTimeOffset1.decimal<0)}}
     time ""
     name TimeOffset1
     xpos 426
     ypos -675
    }
    Dot {
     name Dot6
     xpos 460
     ypos -635
    }
set N4df23dc0 [stack 0]
    Dot {
     name Dot5
     xpos 350
     ypos -635
    }
    Dot {
     name Dot7
     xpos 350
     ypos -365
    }
push $N4df23dc0
    Dot {
     name Dot1
     xpos 572
     ypos -635
    }
    TimeBlur {
     divisions 2
     shutter {{(parent.decimal-(floor(parent.decimal)))*2}}
     shutteroffset start
     shuttercustomoffset 0
     name TimeBlur1
     xpos 538
     ypos -558
    }
    Dot {
     name Dot2
     xpos 572
     ypos -490
    }
push $N4df23dc0
    TimeBlur {
     divisions 2
     shutter {{parent.decimal*2}}
     shutteroffset start
     shuttercustomoffset 0
     name TimeBlur8
     xpos 426
     ypos -556
    }
    Switch {
     inputs 2
     which {{parent.decimal<0}}
     name Switch1
     xpos 426
     ypos -494
    }
    Multiply {
     value {{parent.TimeBlur8.divisions}}
     name Multiply6
     xpos 426
     ypos -436
    }
    Merge2 {
     inputs 2
     operation from
     name Merge6
     xpos 426
     ypos -369
    }
set N4df65d00 [stack 0]
    Output {
     name Output1
     xpos 426
     ypos -221
    }
push $N4df65d00
push $N4df65d00
    Viewer {
     inputs 2
     frame_range 1-100
     name Viewer1
     xpos 675
     ypos -246
    }
   end_group
   NoTimeBlur {
    name NoTimeBlur1
    xpos -283
    ypos -779
   }
   Transform {
    scale {{0.05+(0.05*(((parent.DecimalTimeOffset13.decimal-0.5)*2)*ScaleVariationSmoke))}}
    center {{root.width/2 x1015 2304} {root.height/2}}
    shutteroffset centred
    name Transform44
    xpos -283
    ypos -152
   }
   Card3D {
    inputs 3
    rot_order ZYX
    translate {0 0 0}
    rotate {90 0 0}
    shutteroffset centred
    name cCard3D25
    tile_color 0x7b1d1dff
    xpos -283
    ypos 11
    addUserKnob {20 User l parent}
    addUserKnob {22 python_button l "set parent" t "select parent node, and press this button to set the selected node as parent" +INVISIBLE T "n = nuke.selectedNode()\['name'].getValue()\nnuke.thisNode()\['string'].setValue(n)" +STARTLINE}
    addUserKnob {1 string l parent +INVISIBLE}
    string null
    addUserKnob {3 ref l "ref frame"}
    ref 1015
   }
   Transform {
    translate {{"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].translate.x(ref)\}]"} {"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].translate.y(ref)\}]"}}
    rotate {{"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].rotate-\[value parent_gun].rotate(ref)\}]"}}
    scale {{"\[if \{\[value parent_gun]==\"null\"\} \{return 1\} \{return 1+(\[value parent_gun].scale-\[value parent_gun].scale(ref))\}]"}}
    center {{"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].center.x(ref)\}]"} {"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].center.y(ref)\}]"}}
    name Transform_GUNMatchMove37
    xpos -283
    ypos 126
    addUserKnob {20 User l parent}
    addUserKnob {3 ref}
    ref {{parent.CTimeOffset.ref}}
   }
   Transform {
    translate {{"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].translate.x-\[value parent_env].translate.x(ref)\}]"} {"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].translate.y-\[value parent_env].translate.y(ref)\}]"}}
    rotate {{"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].rotate-\[value parent_env].rotate(ref)\}]"}}
    scale {{"\[if \{\[value parent_gun]==\"null\"\} \{return 1\} \{return 1+(\[value parent_env].scale-\[value parent_env].scale(ref))\}]"}}
    center {{"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].center.x(ref)\}]"} {"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].center.y(ref)\}]"}}
    motionblur 0.2
    shutter {{SmokeMB*0.5}}
    shutteroffset centred
    name Transform_ENVMatchMove37
    label "\n"
    xpos -283
    ypos 255
    addUserKnob {20 User l parent}
    addUserKnob {3 ref}
    ref {{parent.CTimeOffset.ref}}
   }
   Transform {
    translate {{"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return -((root.width/2)-(\[value parent_gun].center.x(1)+\[value parent_gun].translate.x(1)))\}]"} {"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return -((root.height/2)-(\[value parent_gun].center.y(1)+\[value parent_gun].translate.y(1)))\}]"}}
    name Transform_GUNMatchMove6
    label "alignment correction"
    xpos -283
    ypos 344
    addUserKnob {20 User l parent}
    addUserKnob {22 python_button l "set parent" t "select parent node, and press this button to set the selected node as parent" T "n = nuke.selectedNode()\['name'].getValue()\nnuke.thisNode()\['string'].setValue(n)" +STARTLINE}
    addUserKnob {1 string l parent}
    string Transform_MatchMove10
    addUserKnob {3 ref +INVISIBLE}
    ref {{parent.cCard3D_8.ref}}
   }
   Multiply {
    value {{math_matrix.result_y_smoke(parent.CTimeOffset.ref)}}
    name Angle_reveal_top1
    label TOP
    xpos -283
    ypos 403
   }
   Remove {
    operation keep
    channels rgb
    name Remove1
    xpos -283
    ypos 514
   }
push 0
   Switch {
    inputs 2
    which {{parent.Angle_reveal_top1.value>0.001}}
    name Switch1
    xpos -283
    ypos 660
   }
   Dot {
    name Dot82
    xpos -249
    ypos 705
   }
push 0
push $N4e7d4690
push 0
   Input {
    inputs 0
    name front
    xpos -436
    ypos -1243
    number 2
   }
   TimeOffset {
    time_offset {{"shot_\[value shotnmbr]==0 ? 0 : shot_\[value shotnmbr]-1"}}
    time ""
    name CTimeOffset2
    label "shot: \[value shotnmbr]\non frame \[value time_offset]"
    xpos -436
    ypos -925
    addUserKnob {20 User}
    addUserKnob {3 shotnmbr l "shot "}
    shotnmbr {{shotcount}}
    addUserKnob {3 ref}
    ref {{time_offset+1}}
   }
   Group {
    name DecimalTimeOffset2
    tile_color 0xafa35dff
    label "random asset"
    note_font "Bitstream Vera Sans Bold"
    xpos -436
    ypos -842
    addUserKnob {20 User}
    addUserKnob {7 decimal l "time offset (decimal)"}
    decimal {{random(shotcount*seed)}}
    addUserKnob {26 ""}
    addUserKnob {26 _1 l "" +STARTLINE T "Chris Fryer | 2020\nupdated by Yorben Otto | 2024"}
   }
    Input {
     inputs 0
     name Input1
     xpos 426
     ypos -793
    }
    TimeOffset {
     time_offset {{(-floor(parent.decimal))*(DecimalTimeOffset2.decimal<0)}}
     time ""
     name TimeOffset1
     xpos 426
     ypos -675
    }
    Dot {
     name Dot6
     xpos 460
     ypos -635
    }
set N4c0b1bf0 [stack 0]
    Dot {
     name Dot5
     xpos 350
     ypos -635
    }
    Dot {
     name Dot7
     xpos 350
     ypos -365
    }
push $N4c0b1bf0
    Dot {
     name Dot1
     xpos 572
     ypos -635
    }
    TimeBlur {
     divisions 2
     shutter {{(parent.decimal-(floor(parent.decimal)))*2}}
     shutteroffset start
     shuttercustomoffset 0
     name TimeBlur1
     xpos 538
     ypos -558
    }
    Dot {
     name Dot2
     xpos 572
     ypos -490
    }
push $N4c0b1bf0
    TimeBlur {
     divisions 2
     shutter {{parent.decimal*2}}
     shutteroffset start
     shuttercustomoffset 0
     name TimeBlur8
     xpos 426
     ypos -556
    }
    Switch {
     inputs 2
     which {{parent.decimal<0}}
     name Switch1
     xpos 426
     ypos -494
    }
    Multiply {
     value {{parent.TimeBlur8.divisions}}
     name Multiply6
     xpos 426
     ypos -436
    }
    Merge2 {
     inputs 2
     operation from
     name Merge6
     xpos 426
     ypos -369
    }
set N4e803a40 [stack 0]
    Output {
     name Output1
     xpos 426
     ypos -221
    }
push $N4e803a40
push $N4e803a40
    Viewer {
     inputs 2
     frame_range 1-100
     name Viewer1
     xpos 675
     ypos -246
    }
   end_group
   NoTimeBlur {
    name NoTimeBlur5
    xpos -436
    ypos -780
   }
   Transform {
    scale {{0.05+(0.05*(((parent.DecimalTimeOffset13.decimal-0.5)*2)*ScaleVariationSmoke))}}
    center {{root.width/2 x1015 2304} {root.height/2}}
    shutteroffset centred
    name Transform45
    xpos -436
    ypos -151
   }
   Card3D {
    inputs 3
    rot_order ZYX
    translate {0 0 0}
    rotate {0 90 0}
    shutteroffset centred
    name cCard3D26
    tile_color 0x7b1d1dff
    xpos -436
    ypos 15
    addUserKnob {20 User l parent}
    addUserKnob {22 python_button l "set parent" t "select parent node, and press this button to set the selected node as parent" +INVISIBLE T "n = nuke.selectedNode()\['name'].getValue()\nnuke.thisNode()\['string'].setValue(n)" +STARTLINE}
    addUserKnob {1 string l parent +INVISIBLE}
    string null
    addUserKnob {3 ref l "ref frame"}
    ref 1015
   }
   Transform {
    translate {{"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].translate.x(ref)\}]"} {"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].translate.y(ref)\}]"}}
    rotate {{"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].rotate-\[value parent_gun].rotate(ref)\}]"}}
    scale {{"\[if \{\[value parent_gun]==\"null\"\} \{return 1\} \{return 1+(\[value parent_gun].scale-\[value parent_gun].scale(ref))\}]"}}
    center {{"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].center.x(ref)\}]"} {"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].center.y(ref)\}]"}}
    name Transform_GUNMatchMove38
    label "\n"
    xpos -436
    ypos 124
    addUserKnob {20 User l parent}
    addUserKnob {3 ref}
    ref {{parent.CTimeOffset.ref}}
   }
   Transform {
    translate {{"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].translate.x-\[value parent_env].translate.x(ref)\}]"} {"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].translate.y-\[value parent_env].translate.y(ref)\}]"}}
    rotate {{"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].rotate-\[value parent_env].rotate(ref)\}]"}}
    scale {{"\[if \{\[value parent_gun]==\"null\"\} \{return 1\} \{return 1+(\[value parent_env].scale-\[value parent_env].scale(ref))\}]"}}
    center {{"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].center.x(ref)\}]"} {"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].center.y(ref)\}]"}}
    motionblur 0.2
    shutter {{SmokeMB*0.5}}
    shutteroffset centred
    name Transform_ENVMatchMove38
    xpos -436
    ypos 254
    addUserKnob {20 User l parent}
    addUserKnob {3 ref}
    ref {{parent.CTimeOffset.ref}}
   }
   Transform {
    translate {{"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return -((root.width/2)-(\[value parent_gun].center.x(1)+\[value parent_gun].translate.x(1)))\}]"} {"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return -((root.height/2)-(\[value parent_gun].center.y(1)+\[value parent_gun].translate.y(1)))\}]"}}
    name Transform_GUNMatchMove7
    label "alignment correction"
    xpos -436
    ypos 343
    addUserKnob {20 User l parent}
    addUserKnob {22 python_button l "set parent" t "select parent node, and press this button to set the selected node as parent" T "n = nuke.selectedNode()\['name'].getValue()\nnuke.thisNode()\['string'].setValue(n)" +STARTLINE}
    addUserKnob {1 string l parent}
    string Transform_MatchMove10
    addUserKnob {3 ref +INVISIBLE}
    ref {{parent.cCard3D_8.ref}}
   }
   Multiply {
    value {{math_matrix.result_x_smoke(parent.CTimeOffset.ref)}}
    name Angle_reveal_front1
    label FRONT
    xpos -436
    ypos 401
   }
   Remove {
    operation keep
    channels rgb
    name Remove2
    xpos -436
    ypos 511
   }
push 0
   Switch {
    inputs 2
    which {{parent.Angle_reveal_front1.value>0.001}}
    name Switch2
    xpos -436
    ypos 660
   }
   Dot {
    name Dot83
    xpos -402
    ypos 735
   }
   Input {
    inputs 0
    name side
    xpos -130
    ypos -1242
   }
   TimeOffset {
    time_offset {{"shot_\[value shotnmbr]==0 ? 0 : shot_\[value shotnmbr]-1"}}
    time ""
    name CTimeOffset
    label "shot: \[value shotnmbr]\non frame \[value time_offset]"
    xpos -130
    ypos -927
    addUserKnob {20 User}
    addUserKnob {3 shotnmbr l "shot "}
    shotnmbr {{shotcount}}
    addUserKnob {3 ref}
    ref {{time_offset+1}}
   }
   Group {
    name DecimalTimeOffset13
    tile_color 0xafa35dff
    label "random asset"
    note_font "Bitstream Vera Sans Bold"
    xpos -130
    ypos -844
    addUserKnob {20 User}
    addUserKnob {7 decimal l "time offset (decimal)"}
    decimal {{random(shotcount*seed)}}
    addUserKnob {26 ""}
    addUserKnob {26 _1 l "" +STARTLINE T "Chris Fryer | 2020\nupdated by Yorben Otto | 2024"}
   }
    Input {
     inputs 0
     name Input1
     xpos 426
     ypos -793
    }
    TimeOffset {
     time_offset {{(-floor(parent.decimal))*(DecimalTimeOffset13.decimal<0)}}
     time ""
     name TimeOffset1
     xpos 426
     ypos -675
    }
    Dot {
     name Dot6
     xpos 460
     ypos -635
    }
set N4a84f9b0 [stack 0]
    Dot {
     name Dot5
     xpos 350
     ypos -635
    }
    Dot {
     name Dot7
     xpos 350
     ypos -365
    }
push $N4a84f9b0
    Dot {
     name Dot1
     xpos 572
     ypos -635
    }
    TimeBlur {
     divisions 2
     shutter {{(parent.decimal-(floor(parent.decimal)))*2}}
     shutteroffset start
     shuttercustomoffset 0
     name TimeBlur1
     xpos 538
     ypos -558
    }
    Dot {
     name Dot2
     xpos 572
     ypos -490
    }
push $N4a84f9b0
    TimeBlur {
     divisions 2
     shutter {{parent.decimal*2}}
     shutteroffset start
     shuttercustomoffset 0
     name TimeBlur8
     xpos 426
     ypos -556
    }
    Switch {
     inputs 2
     which {{parent.decimal<0}}
     name Switch1
     xpos 426
     ypos -494
    }
    Multiply {
     value {{parent.TimeBlur8.divisions}}
     name Multiply6
     xpos 426
     ypos -436
    }
    Merge2 {
     inputs 2
     operation from
     name Merge6
     xpos 426
     ypos -369
    }
set N4a8918f0 [stack 0]
    Output {
     name Output1
     xpos 426
     ypos -221
    }
push $N4a8918f0
push $N4a8918f0
    Viewer {
     inputs 2
     frame_range 1-100
     name Viewer1
     xpos 675
     ypos -246
    }
   end_group
   NoTimeBlur {
    name NoTimeBlur13
    xpos -130
    ypos -782
   }
   Transform {
    scale {{0.05+(0.05*(((parent.DecimalTimeOffset13.decimal-0.5)*2)*ScaleVariationSmoke))}}
    center {{root.width/2 x1015 2304} {root.height/2}}
    shutteroffset centred
    name Transform46
    xpos -130
    ypos -155
   }
   Card3D {
    translate {{"\[if \{\[exists  parent.parent.parent.input0]\} \{return \[value \[topnode parent.parent.parent.input0].name].translate.x(ref)\} \{return 0\}]"} {"\[if \{\[exists  parent.parent.parent.input0]\} \{return \[value \[topnode parent.parent.parent.input0].name].translate.y(ref)\} \{return 0\}]"} {"\[if \{\[exists  parent.parent.parent.input0]\} \{return \[value \[topnode parent.parent.parent.input0].name].translate.z(ref)\} \{return -1\}]"}}
    rotate {{"\[if \{\[exists  parent.parent.parent.input0]\} \{return \[value \[topnode parent.parent.parent.input0].name].rotate.x(ref)\} \{return 0\}]"} {"\[if \{\[exists  parent.parent.parent.input0]\} \{return \[value \[topnode parent.parent.parent.input0].name].rotate.y(ref)\} \{return 0\}]"} {"\[if \{\[exists  parent.parent.parent.input0]\} \{return \[value \[topnode parent.parent.parent.input0].name].rotate.z(ref)\} \{return 0\}]"}}
    scaling {{"\[if \{\[exists  parent.parent.parent.input0]\} \{return \[value \[topnode parent.parent.parent.input0].name].scaling.x(ref)\} \{return 1\}]"} {"\[if \{\[exists  parent.parent.parent.input0]\} \{return \[value \[topnode parent.parent.parent.input0].name].scaling.y(ref)\} \{return 1\}]"} {"\[if \{\[exists  parent.parent.parent.input0]\} \{return \[value \[topnode parent.parent.parent.input0].name].scaling.z(ref)\} \{return 1\}]"}}
    uniform_scale {{"\[if \{\[exists  parent.parent.parent.input0]\} \{return (\[value \[topnode parent.parent.parent.input0].name].uniform_scale(ref)*25)\} \{return 25\}]"}}
    shutteroffset centred
    name cCard3D_1
    tile_color 0x7b1d1dff
    label "ref frame: \[value ref]"
    xpos -130
    ypos 2
    addUserKnob {20 User l parent}
    addUserKnob {22 python_button l "set parent" t "select parent node, and press this button to set the selected node as parent" +INVISIBLE T "n = nuke.selectedNode()\['name'].getValue()\nnuke.thisNode()\['string'].setValue(n)" +STARTLINE}
    addUserKnob {1 string l parent +INVISIBLE}
    string null
    addUserKnob {3 id l "id number"}
    id {{parent.CTimeOffset.shotnmbr}}
    addUserKnob {3 ref l "ref frame"}
    ref {{parent.CTimeOffset.ref}}
   }
   Transform {
    translate {{"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].translate.x(ref)\}]"} {"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].translate.y(ref)\}]"}}
    rotate {{"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].rotate-\[value parent_gun].rotate(ref)\}]"}}
    scale {{"\[if \{\[value parent_gun]==\"null\"\} \{return 1\} \{return 1+(\[value parent_gun].scale-\[value parent_gun].scale(ref))\}]"}}
    center {{"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].center.x(ref)\}]"} {"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].center.y(ref)\}]"}}
    name Transform_GUNMatchMove39
    label "\n"
    xpos -130
    ypos 124
    addUserKnob {20 User l parent}
    addUserKnob {3 ref}
    ref {{parent.CTimeOffset.ref}}
   }
   Transform {
    translate {{"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].translate.x-\[value parent_env].translate.x(ref)\}]"} {"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].translate.y-\[value parent_env].translate.y(ref)\}]"}}
    rotate {{"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].rotate-\[value parent_env].rotate(ref)\}]"}}
    scale {{"\[if \{\[value parent_gun]==\"null\"\} \{return 1\} \{return 1+(\[value parent_env].scale-\[value parent_env].scale(ref))\}]"}}
    center {{"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].center.x(ref)\}]"} {"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].center.y(ref)\}]"}}
    motionblur 0.2
    shutter {{SmokeMB*0.5}}
    shutteroffset centred
    name Transform_ENVMatchMove39
    xpos -130
    ypos 258
    addUserKnob {20 User l parent}
    addUserKnob {3 ref}
    ref {{parent.CTimeOffset.ref}}
   }
   Transform {
    translate {{"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return -((root.width/2)-(\[value parent_gun].center.x(1)+\[value parent_gun].translate.x(1)))\}]"} {"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return -((root.height/2)-(\[value parent_gun].center.y(1)+\[value parent_gun].translate.y(1)))\}]"}}
    name Transform_GUNMatchMove5
    label "alignment correction"
    xpos -130
    ypos 340
    addUserKnob {20 User l parent}
    addUserKnob {22 python_button l "set parent" t "select parent node, and press this button to set the selected node as parent" T "n = nuke.selectedNode()\['name'].getValue()\nnuke.thisNode()\['string'].setValue(n)" +STARTLINE}
    addUserKnob {1 string l parent}
    string Transform_MatchMove10
    addUserKnob {3 ref +INVISIBLE}
    ref {{parent.cCard3D_8.ref}}
   }
   Multiply {
    value {{math_matrix.result_z_smoke(parent.CTimeOffset.ref)}}
    name Angle_reveal_side1
    label SIDE
    xpos -130
    ypos 404
   }
   Remove {
    operation keep
    channels rgb
    name Remove39
    xpos -130
    ypos 514
   }
push 0
   Switch {
    inputs 2
    which {{parent.Angle_reveal_side1.value>0.001}}
    name Switch3
    xpos -130
    ypos 658
   }
   Merge2 {
    inputs 3+1
    operation max
    Achannels rgb
    Bchannels rgb
    output rgb
    name Merge28
    xpos -130
    ypos 731
   }
   Merge2 {
    inputs 2
    operation plus
    bbox intersection
    Achannels rgb
    Bchannels rgb
    output rgb
    name Merge29
    xpos -130
    ypos 983
   }
   Shuffle2 {
    fromInput1 {{0} B}
    fromInput2 {{0} B}
    mappings "4 rgba.red 0 0 rgba.red 0 0 rgba.green 0 1 rgba.green 0 1 rgba.blue 0 2 rgba.alpha 0 3 rgba.blue 0 2 rgba.blue 0 2"
    name Shuffle1
    xpos -130
    ypos 1021
   }
push 0
   Switch {
    inputs 2
    which {{"shot_\[value count]==0?0:frame>=shot_\[value count]"}}
    name cSwitch_13
    xpos -130
    ypos 1078
    addUserKnob {20 User}
    addUserKnob {3 count}
    count {{parent.CTimeOffset.shotnmbr}}
   }
   Output {
    name Output1
    xpos -130
    ypos 1323
   }
   StickyNote {
    inputs 0
    name StickyNote1
    label "<-- handy to break concatonation?  "
    xpos -39
    ypos 193
   }
  end_group
push $N586971d0
  PostageStamp {
   name Stamp19
   help "Stamps by Adrian Pueyo and Alexey Kuchinski.\nUpdated May 18 2021"
   onCreate "if nuke.GUI:\n    try:\n        import stamps; stamps.wiredOnCreate()\n    except:\n        pass\n"
   knobChanged "import stamps; stamps.wiredKnobChanged()"
   autolabel "nuke.thisNode().knob(\"title\").value()"
   tile_color 0x1000001
   note_font "Bitstream Vera Sans"
   note_font_size 20
   xpos 1918
   ypos -670
   hide_input true
   addUserKnob {20 wired_tab l "Wired Stamp"}
   addUserKnob {26 identifier -STARTLINE +HIDDEN T wired}
   addUserKnob {3 lockCallbacks l "" +STARTLINE +HIDDEN}
   addUserKnob {6 toReconnect -STARTLINE +HIDDEN}
   addUserKnob {1 title l Title: t "Displayed name on the Node Graph for this Stamp and its Anchor.\nIMPORTANT: This is only for display purposes, and is different from the real/internal name of the Stamps."}
   title smoke_FRONT
   addUserKnob {26 prev_title l "" +STARTLINE +HIDDEN T smoke_FRONT}
   addUserKnob {26 tags l Tags: t "Tags of this stamp's Anchor, for information purpose only.\nClick \"show anchor\" to change them." T <i>2D</i>}
   addUserKnob {26 backdrops l Backdrops: t "Labels of backdrop nodes which contain this stamp's Anchor." T "<i><Left>before or after Flare</i>"}
   addUserKnob {26 line1 l "" +STARTLINE}
   addUserKnob {6 postageStamp_show l "postage stamp" t "Enable the postage stamp thumbnail in this node.\nYou're seeing this because the class of this node includes the postage_stamp knob." +STARTLINE}
   addUserKnob {26 anchor_label l Anchor: T " "}
   addUserKnob {22 show_anchor l " show anchor " t "Show the properties panel for this Stamp's Anchor." -STARTLINE T stamps.wiredShowAnchor()}
   addUserKnob {22 zoom_anchor l "zoom anchor" t "Navigate to this Stamp's Anchor on the Node Graph." -STARTLINE T stamps.wiredZoomAnchor()}
   addUserKnob {26 stamps_label l Stamps: T " "}
   addUserKnob {22 zoomNext l " zoom next " t "Navigate to this Stamp's next sibling on the Node Graph." -STARTLINE T stamps.wiredZoomNext()}
   addUserKnob {22 selectSimilar l " select similar " t "Select all similar Stamps to this one on the Node Graph." -STARTLINE T stamps.wiredSelectSimilar()}
   addUserKnob {26 space_1 l "" +STARTLINE T " "}
   addUserKnob {26 reconnect_label l Reconnect: t "Reconnect by the stored Anchor name." T " "}
   addUserKnob {22 reconnect_this l this t "Reconnect this Stamp to its Anchor, by its stored Anchor name." -STARTLINE T "n = nuke.thisNode()\ntry:\n    n.setInput(0,nuke.toNode(n.knob(\"anchor\").value()))\nexcept:\n    nuke.message(\"Unable to reconnect.\")\ntry:\n    import stamps\n    stamps.wiredGetStyle(n)\nexcept:\n    pass\n"}
   addUserKnob {22 reconnect_similar l similar t "Reconnect this Stamp and similar ones to their Anchor, by their stored anchor name." -STARTLINE T stamps.wiredReconnectSimilar()}
   addUserKnob {22 reconnect_all l all t "Reconnect all the Stamps to their Anchors, by their stored anchor names." -STARTLINE T stamps.wiredReconnectAll()}
   addUserKnob {26 space_2 l "" +STARTLINE T " "}
   addUserKnob {20 advanced_reconnection l "Advanced Reconnection" n 2}
   addUserKnob {26 reconnect_by_title_label l "<font color=gold>By Title:" t "Reconnect by searching for a matching title." T " "}
   addUserKnob {22 reconnect_by_title_this l this t "Look for an Anchor that shares this Stamp's title, and connect this Stamp to it.\nIMPORTANT: Use this carefully, and only when the normal reconnection doesn't work." -STARTLINE T stamps.wiredReconnectByTitle()}
   addUserKnob {22 reconnect_by_title_similar l similar t "Look for an Anchor that shares this Stamp's title, and connect this Stamp and similar ones to it.\nIMPORTANT: Use this carefully, and only when the normal reconnection doesn't work." -STARTLINE T stamps.wiredReconnectByTitleSimilar()}
   addUserKnob {22 reconnect_by_title_selected l selected t "For each Stamp selected, look for an Anchor that shares its title, and connect to it.\nIMPORTANT: Use this carefully, and only when the normal reconnection doesn't work." -STARTLINE T stamps.wiredReconnectByTitleSelected()}
   addUserKnob {26 reconnect_by_selection_label l "<font color=orangered>By Selection:" t "Force reconnect to a selected Anchor." T " "}
   addUserKnob {22 reconnect_by_selection_this l this t "Force reconnect this Stamp to a selected Anchor, whatever its name or title.\nIMPORTANT: Use this carefully, and only when the normal reconnection doesn't work." -STARTLINE T stamps.wiredReconnectBySelection()}
   addUserKnob {22 reconnect_by_selection_similar l similar t "Force reconnect this Stamp and similar ones to a selected Anchor, whatever its name or title.\nIMPORTANT: Use this carefully, and only when the normal reconnection doesn't work." -STARTLINE T stamps.wiredReconnectBySelectionSimilar()}
   addUserKnob {22 reconnect_by_selection_selected l selected t "Force reconnect all selected Stamps to an also selected Anchor, whatever its name or title.\nIMPORTANT: Use this carefully, and only when the normal reconnection doesn't work." -STARTLINE T stamps.wiredReconnectBySelectionSelected()}
   addUserKnob {1 anchor l Anchor}
   anchor Anchor_220a2be282
   addUserKnob {6 auto_reconnect_by_title l "<font color=#ED9977>&nbsp; auto-reconnect by title" t "When creating this stamp again (like on copy-paste), auto-reconnect it by title instead of doing it by the saved anchor's name, and auto-turn this off immediately.\nIMPORTANT: Should be off by default. Only use this for setting up templates." +STARTLINE}
   addUserKnob {26 line2 l "" +STARTLINE}
   addUserKnob {22 buttonHelp l Help -STARTLINE T stamps.showHelp()}
   addUserKnob {26 version l " " t "Stamps by Adrian Pueyo and Alexey Kuchinski.\nUpdated May 18 2021." -STARTLINE T "<a href=\"http://www.nukepedia.com/gizmos/other/stamps\" style=\"color:#666;text-decoration: none;\"><span style=\"color:#666\"> <big>Stamps v1.1</big></b></a>"}
  }
  Dot {
   name Dot13
   xpos 1952
   ypos -622
  }
push $N58d70c10
  PostageStamp {
   name Stamp20
   help "Stamps by Adrian Pueyo and Alexey Kuchinski.\nUpdated May 18 2021"
   onCreate "if nuke.GUI:\n    try:\n        import stamps; stamps.wiredOnCreate()\n    except:\n        pass\n"
   knobChanged "import stamps; stamps.wiredKnobChanged()"
   autolabel "nuke.thisNode().knob(\"title\").value()"
   tile_color 0x1000001
   note_font "Bitstream Vera Sans"
   note_font_size 20
   xpos 2043
   ypos -670
   hide_input true
   addUserKnob {20 wired_tab l "Wired Stamp"}
   addUserKnob {26 identifier -STARTLINE +HIDDEN T wired}
   addUserKnob {3 lockCallbacks l "" +STARTLINE +HIDDEN}
   addUserKnob {6 toReconnect -STARTLINE +HIDDEN}
   addUserKnob {1 title l Title: t "Displayed name on the Node Graph for this Stamp and its Anchor.\nIMPORTANT: This is only for display purposes, and is different from the real/internal name of the Stamps."}
   title smoke_TOP
   addUserKnob {26 prev_title l "" +STARTLINE +HIDDEN T smoke_TOP}
   addUserKnob {26 tags l Tags: t "Tags of this stamp's Anchor, for information purpose only.\nClick \"show anchor\" to change them." T <i>2D</i>}
   addUserKnob {26 backdrops l Backdrops: t "Labels of backdrop nodes which contain this stamp's Anchor." T "<i><Left>before or after Flare</i>"}
   addUserKnob {26 line1 l "" +STARTLINE}
   addUserKnob {6 postageStamp_show l "postage stamp" t "Enable the postage stamp thumbnail in this node.\nYou're seeing this because the class of this node includes the postage_stamp knob." +STARTLINE}
   addUserKnob {26 anchor_label l Anchor: T " "}
   addUserKnob {22 show_anchor l " show anchor " t "Show the properties panel for this Stamp's Anchor." -STARTLINE T stamps.wiredShowAnchor()}
   addUserKnob {22 zoom_anchor l "zoom anchor" t "Navigate to this Stamp's Anchor on the Node Graph." -STARTLINE T stamps.wiredZoomAnchor()}
   addUserKnob {26 stamps_label l Stamps: T " "}
   addUserKnob {22 zoomNext l " zoom next " t "Navigate to this Stamp's next sibling on the Node Graph." -STARTLINE T stamps.wiredZoomNext()}
   addUserKnob {22 selectSimilar l " select similar " t "Select all similar Stamps to this one on the Node Graph." -STARTLINE T stamps.wiredSelectSimilar()}
   addUserKnob {26 space_1 l "" +STARTLINE T " "}
   addUserKnob {26 reconnect_label l Reconnect: t "Reconnect by the stored Anchor name." T " "}
   addUserKnob {22 reconnect_this l this t "Reconnect this Stamp to its Anchor, by its stored Anchor name." -STARTLINE T "n = nuke.thisNode()\ntry:\n    n.setInput(0,nuke.toNode(n.knob(\"anchor\").value()))\nexcept:\n    nuke.message(\"Unable to reconnect.\")\ntry:\n    import stamps\n    stamps.wiredGetStyle(n)\nexcept:\n    pass\n"}
   addUserKnob {22 reconnect_similar l similar t "Reconnect this Stamp and similar ones to their Anchor, by their stored anchor name." -STARTLINE T stamps.wiredReconnectSimilar()}
   addUserKnob {22 reconnect_all l all t "Reconnect all the Stamps to their Anchors, by their stored anchor names." -STARTLINE T stamps.wiredReconnectAll()}
   addUserKnob {26 space_2 l "" +STARTLINE T " "}
   addUserKnob {20 advanced_reconnection l "Advanced Reconnection" n 2}
   addUserKnob {26 reconnect_by_title_label l "<font color=gold>By Title:" t "Reconnect by searching for a matching title." T " "}
   addUserKnob {22 reconnect_by_title_this l this t "Look for an Anchor that shares this Stamp's title, and connect this Stamp to it.\nIMPORTANT: Use this carefully, and only when the normal reconnection doesn't work." -STARTLINE T stamps.wiredReconnectByTitle()}
   addUserKnob {22 reconnect_by_title_similar l similar t "Look for an Anchor that shares this Stamp's title, and connect this Stamp and similar ones to it.\nIMPORTANT: Use this carefully, and only when the normal reconnection doesn't work." -STARTLINE T stamps.wiredReconnectByTitleSimilar()}
   addUserKnob {22 reconnect_by_title_selected l selected t "For each Stamp selected, look for an Anchor that shares its title, and connect to it.\nIMPORTANT: Use this carefully, and only when the normal reconnection doesn't work." -STARTLINE T stamps.wiredReconnectByTitleSelected()}
   addUserKnob {26 reconnect_by_selection_label l "<font color=orangered>By Selection:" t "Force reconnect to a selected Anchor." T " "}
   addUserKnob {22 reconnect_by_selection_this l this t "Force reconnect this Stamp to a selected Anchor, whatever its name or title.\nIMPORTANT: Use this carefully, and only when the normal reconnection doesn't work." -STARTLINE T stamps.wiredReconnectBySelection()}
   addUserKnob {22 reconnect_by_selection_similar l similar t "Force reconnect this Stamp and similar ones to a selected Anchor, whatever its name or title.\nIMPORTANT: Use this carefully, and only when the normal reconnection doesn't work." -STARTLINE T stamps.wiredReconnectBySelectionSimilar()}
   addUserKnob {22 reconnect_by_selection_selected l selected t "Force reconnect all selected Stamps to an also selected Anchor, whatever its name or title.\nIMPORTANT: Use this carefully, and only when the normal reconnection doesn't work." -STARTLINE T stamps.wiredReconnectBySelectionSelected()}
   addUserKnob {1 anchor l Anchor}
   anchor Anchor_25b668170c
   addUserKnob {6 auto_reconnect_by_title l "<font color=#ED9977>&nbsp; auto-reconnect by title" t "When creating this stamp again (like on copy-paste), auto-reconnect it by title instead of doing it by the saved anchor's name, and auto-turn this off immediately.\nIMPORTANT: Should be off by default. Only use this for setting up templates." +STARTLINE}
   addUserKnob {26 line2 l "" +STARTLINE}
   addUserKnob {22 buttonHelp l Help -STARTLINE T stamps.showHelp()}
   addUserKnob {26 version l " " t "Stamps by Adrian Pueyo and Alexey Kuchinski.\nUpdated May 18 2021." -STARTLINE T "<a href=\"http://www.nukepedia.com/gizmos/other/stamps\" style=\"color:#666;text-decoration: none;\"><span style=\"color:#666\"> <big>Stamps v1.1</big></b></a>"}
  }
push $N56244930
  PostageStamp {
   name Stamp21
   help "Stamps by Adrian Pueyo and Alexey Kuchinski.\nUpdated May 18 2021"
   onCreate "if nuke.GUI:\n    try:\n        import stamps; stamps.wiredOnCreate()\n    except:\n        pass\n"
   knobChanged "import stamps; stamps.wiredKnobChanged()"
   autolabel "nuke.thisNode().knob(\"title\").value()"
   tile_color 0x1000001
   note_font "Bitstream Vera Sans"
   note_font_size 20
   xpos 2161
   ypos -672
   hide_input true
   addUserKnob {20 wired_tab l "Wired Stamp"}
   addUserKnob {26 identifier -STARTLINE +HIDDEN T wired}
   addUserKnob {3 lockCallbacks l "" +STARTLINE +HIDDEN}
   addUserKnob {6 toReconnect -STARTLINE +HIDDEN}
   addUserKnob {1 title l Title: t "Displayed name on the Node Graph for this Stamp and its Anchor.\nIMPORTANT: This is only for display purposes, and is different from the real/internal name of the Stamps."}
   title smoke_SIDE
   addUserKnob {26 prev_title l "" +STARTLINE +HIDDEN T smoke_SIDE}
   addUserKnob {26 tags l Tags: t "Tags of this stamp's Anchor, for information purpose only.\nClick \"show anchor\" to change them." T <i>2D</i>}
   addUserKnob {26 backdrops l Backdrops: t "Labels of backdrop nodes which contain this stamp's Anchor." T "<i><Left>before or after Flare</i>"}
   addUserKnob {26 line1 l "" +STARTLINE}
   addUserKnob {6 postageStamp_show l "postage stamp" t "Enable the postage stamp thumbnail in this node.\nYou're seeing this because the class of this node includes the postage_stamp knob." +STARTLINE}
   addUserKnob {26 anchor_label l Anchor: T " "}
   addUserKnob {22 show_anchor l " show anchor " t "Show the properties panel for this Stamp's Anchor." -STARTLINE T stamps.wiredShowAnchor()}
   addUserKnob {22 zoom_anchor l "zoom anchor" t "Navigate to this Stamp's Anchor on the Node Graph." -STARTLINE T stamps.wiredZoomAnchor()}
   addUserKnob {26 stamps_label l Stamps: T " "}
   addUserKnob {22 zoomNext l " zoom next " t "Navigate to this Stamp's next sibling on the Node Graph." -STARTLINE T stamps.wiredZoomNext()}
   addUserKnob {22 selectSimilar l " select similar " t "Select all similar Stamps to this one on the Node Graph." -STARTLINE T stamps.wiredSelectSimilar()}
   addUserKnob {26 space_1 l "" +STARTLINE T " "}
   addUserKnob {26 reconnect_label l Reconnect: t "Reconnect by the stored Anchor name." T " "}
   addUserKnob {22 reconnect_this l this t "Reconnect this Stamp to its Anchor, by its stored Anchor name." -STARTLINE T "n = nuke.thisNode()\ntry:\n    n.setInput(0,nuke.toNode(n.knob(\"anchor\").value()))\nexcept:\n    nuke.message(\"Unable to reconnect.\")\ntry:\n    import stamps\n    stamps.wiredGetStyle(n)\nexcept:\n    pass\n"}
   addUserKnob {22 reconnect_similar l similar t "Reconnect this Stamp and similar ones to their Anchor, by their stored anchor name." -STARTLINE T stamps.wiredReconnectSimilar()}
   addUserKnob {22 reconnect_all l all t "Reconnect all the Stamps to their Anchors, by their stored anchor names." -STARTLINE T stamps.wiredReconnectAll()}
   addUserKnob {26 space_2 l "" +STARTLINE T " "}
   addUserKnob {20 advanced_reconnection l "Advanced Reconnection" n 2}
   addUserKnob {26 reconnect_by_title_label l "<font color=gold>By Title:" t "Reconnect by searching for a matching title." T " "}
   addUserKnob {22 reconnect_by_title_this l this t "Look for an Anchor that shares this Stamp's title, and connect this Stamp to it.\nIMPORTANT: Use this carefully, and only when the normal reconnection doesn't work." -STARTLINE T stamps.wiredReconnectByTitle()}
   addUserKnob {22 reconnect_by_title_similar l similar t "Look for an Anchor that shares this Stamp's title, and connect this Stamp and similar ones to it.\nIMPORTANT: Use this carefully, and only when the normal reconnection doesn't work." -STARTLINE T stamps.wiredReconnectByTitleSimilar()}
   addUserKnob {22 reconnect_by_title_selected l selected t "For each Stamp selected, look for an Anchor that shares its title, and connect to it.\nIMPORTANT: Use this carefully, and only when the normal reconnection doesn't work." -STARTLINE T stamps.wiredReconnectByTitleSelected()}
   addUserKnob {26 reconnect_by_selection_label l "<font color=orangered>By Selection:" t "Force reconnect to a selected Anchor." T " "}
   addUserKnob {22 reconnect_by_selection_this l this t "Force reconnect this Stamp to a selected Anchor, whatever its name or title.\nIMPORTANT: Use this carefully, and only when the normal reconnection doesn't work." -STARTLINE T stamps.wiredReconnectBySelection()}
   addUserKnob {22 reconnect_by_selection_similar l similar t "Force reconnect this Stamp and similar ones to a selected Anchor, whatever its name or title.\nIMPORTANT: Use this carefully, and only when the normal reconnection doesn't work." -STARTLINE T stamps.wiredReconnectBySelectionSimilar()}
   addUserKnob {22 reconnect_by_selection_selected l selected t "Force reconnect all selected Stamps to an also selected Anchor, whatever its name or title.\nIMPORTANT: Use this carefully, and only when the normal reconnection doesn't work." -STARTLINE T stamps.wiredReconnectBySelectionSelected()}
   addUserKnob {1 anchor l Anchor}
   anchor Anchor_232c9aab88
   addUserKnob {6 auto_reconnect_by_title l "<font color=#ED9977>&nbsp; auto-reconnect by title" t "When creating this stamp again (like on copy-paste), auto-reconnect it by title instead of doing it by the saved anchor's name, and auto-turn this off immediately.\nIMPORTANT: Should be off by default. Only use this for setting up templates." +STARTLINE}
   addUserKnob {26 line2 l "" +STARTLINE}
   addUserKnob {22 buttonHelp l Help -STARTLINE T stamps.showHelp()}
   addUserKnob {26 version l " " t "Stamps by Adrian Pueyo and Alexey Kuchinski.\nUpdated May 18 2021." -STARTLINE T "<a href=\"http://www.nukepedia.com/gizmos/other/stamps\" style=\"color:#666;text-decoration: none;\"><span style=\"color:#666\"> <big>Stamps v1.1</big></b></a>"}
  }
  Dot {
   name Dot14
   xpos 2195
   ypos -622
  }
  Group {
   inputs 3
   name gunshot7
   label "shot: \[value shotcount]\non frame: \[value shotstart]\n"
   xpos 2043
   ypos -595
   addUserKnob {20 User}
   addUserKnob {3 shotcount l shot}
   shotcount 7
   addUserKnob {3 shotstart l frame +INVISIBLE}
   shotstart {{"shotcount==0 ? 0 : shot\[value shotcount]-1" i}}
  }
   BackdropNode {
    inputs 0
    name BackdropNode19
    knobChanged "try:\n    listenedKnobs = \['text', 'position', 'name']\n    node = nuke.thisNode()\n    name = node.knob('name').value()\n    text = node.knob('text').value()\n    position = node.knob('position').value()\n    position = \"<\" + position + \">\"\n    label = node.knob('label').value()\n    \n    if nuke.thisKnob().name() in listenedKnobs:\n        if text == \"\":\n            if node.knob('position').value() == \"left\":\n                node.knob('label').setValue()\n            else:\n                node.knob('label').setValue(position + name)\n        else:\n            if node.knob('position').value() == \"left\":\n                node.knob('label').setValue(text)\n            else:\n                node.knob('label').setValue(position + text)\n                \n    elif nuke.thisKnob().name() == 'font_size':\n        fontSize = node.knob('font_size').value()\n        node.knob('note_font_size').setValue(fontSize)\nexcept:\n    pass"
    tile_color 0x232323ff
    label "<Left><h2> Gunshot"
    note_font_size 31.5
    xpos -693
    ypos -554
    bdwidth 876
    bdheight 1682
    addUserKnob {20 F_VFX l BackdropNode}
    addUserKnob {43 text l Text}
    text "<h2> Gunshot"
    addUserKnob {7 font_size l "Font Size" R 10 100}
    font_size 31.5
    addUserKnob {4 position l "" -STARTLINE M {Left Center}}
    addUserKnob {26 S01 l " " T " "}
    addUserKnob {22 grow l " <img src=\"F_scalep.png\">" -STARTLINE T "n=nuke.thisNode()\n\ndef grow(node=None,step=50):\n    try:\n        if not node:\n            n=nuke.selectedNode()\n        else:\n            n=node\n            n\['xpos'].setValue(n\['xpos'].getValue()-step)\n            n\['ypos'].setValue(n\['ypos'].getValue()-step)\n            n\['bdwidth'].setValue(n\['bdwidth'].getValue()+step*2)\n            n\['bdheight'].setValue(n\['bdheight'].getValue()+step*2)\n    except:\n        pass\ngrow(n,50)"}
    addUserKnob {22 shrink l " <img src=\"F_scalem.png\">" -STARTLINE T "n=nuke.thisNode()\n\ndef shrink(node=None,step=50):\n    try:\n        if not node:\n            n=nuke.selectedNode()\n        else:\n            n=node\n            n\['xpos'].setValue(n\['xpos'].getValue()+step)\n            n\['ypos'].setValue(n\['ypos'].getValue()+step)\n            n\['bdwidth'].setValue(n\['bdwidth'].getValue()-step*2)\n            n\['bdheight'].setValue(n\['bdheight'].getValue()-step*2)\n    except:\n        pass\nshrink(n,50)"}
    addUserKnob {22 colorandom l " <img src=\"ColorBars.png\">" -STARTLINE T "import colorsys, random\nn=nuke.thisNode()\nR,G,B= colorsys.hsv_to_rgb(random.random(),.1+random.random()*.15,.15+random.random()*.15)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ) )"}
    addUserKnob {22 darkgrey l "<font color=\"#232323\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.0, 0.0, 0.14]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 lightgrey l "<font color=\"#383838\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.0, 0.0, 0.22]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 red l "<font color=\"#8c3838\" size=6>■</font>" T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.0, 0.6, 0.55]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n" +STARTLINE}
    addUserKnob {22 orange l "<font color=\"#b28e59\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.1, 0.5, 0.7]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 yellow l "<font color=\"#ccc766\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.16, 0.5, 0.8]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 green l "<font color=\"#5d995b\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.33, 0.4, 0.6]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 cyan l "<font color=\"#72998f\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.46, 0.25, 0.6]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 blue l "<font color=\"#59687f\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.6, 0.3, 0.5]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 darkblue l "<font color=\"#63628c\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.67, 0.3, 0.55]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 magenta l "<font color=\"#927a99\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.8, 0.2, 0.6]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 pink l "<font color=\"#997a89\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.92, 0.2, 0.6]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {26 S02 l " " T " "}
    addUserKnob {26 Ftools l "" +STARTLINE T "<font color=\"#1C1C1C\"> v1.2 - Franklin VFX - 2018"}
   }
   BackdropNode {
    inputs 0
    name BackdropNode2
    knobChanged "try:\n    listenedKnobs = \['text', 'position', 'name']\n    node = nuke.thisNode()\n    name = node.knob('name').value()\n    text = node.knob('text').value()\n    position = node.knob('position').value()\n    position = \"<\" + position + \">\"\n    label = node.knob('label').value()\n    \n    if nuke.thisKnob().name() in listenedKnobs:\n        if text == \"\":\n            if node.knob('position').value() == \"left\":\n                node.knob('label').setValue()\n            else:\n                node.knob('label').setValue(position + name)\n        else:\n            if node.knob('position').value() == \"left\":\n                node.knob('label').setValue(text)\n            else:\n                node.knob('label').setValue(position + text)\n                \n    elif nuke.thisKnob().name() == 'font_size':\n        fontSize = node.knob('font_size').value()\n        node.knob('note_font_size').setValue(fontSize)\nexcept:\n    pass"
    tile_color 0x927a99ff
    note_font_size 50
    xpos -473
    ypos -221
    bdwidth 435
    bdheight 786
    z_order 1
    addUserKnob {20 F_VFX l BackdropNode}
    addUserKnob {43 text l Text}
    addUserKnob {7 font_size l "Font Size" R 10 100}
    font_size 50
    addUserKnob {4 position l "" -STARTLINE M {Left Center}}
    addUserKnob {26 S01 l " " T " "}
    addUserKnob {22 grow l " <img src=\"F_scalep.png\">" -STARTLINE T "n=nuke.thisNode()\n\ndef grow(node=None,step=50):\n    try:\n        if not node:\n            n=nuke.selectedNode()\n        else:\n            n=node\n            n\['xpos'].setValue(n\['xpos'].getValue()-step)\n            n\['ypos'].setValue(n\['ypos'].getValue()-step)\n            n\['bdwidth'].setValue(n\['bdwidth'].getValue()+step*2)\n            n\['bdheight'].setValue(n\['bdheight'].getValue()+step*2)\n    except:\n        pass\ngrow(n,50)"}
    addUserKnob {22 shrink l " <img src=\"F_scalem.png\">" -STARTLINE T "n=nuke.thisNode()\n\ndef shrink(node=None,step=50):\n    try:\n        if not node:\n            n=nuke.selectedNode()\n        else:\n            n=node\n            n\['xpos'].setValue(n\['xpos'].getValue()+step)\n            n\['ypos'].setValue(n\['ypos'].getValue()+step)\n            n\['bdwidth'].setValue(n\['bdwidth'].getValue()-step*2)\n            n\['bdheight'].setValue(n\['bdheight'].getValue()-step*2)\n    except:\n        pass\nshrink(n,50)"}
    addUserKnob {22 colorandom l " <img src=\"ColorBars.png\">" -STARTLINE T "import colorsys, random\nn=nuke.thisNode()\nR,G,B= colorsys.hsv_to_rgb(random.random(),.1+random.random()*.15,.15+random.random()*.15)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ) )"}
    addUserKnob {22 darkgrey l "<font color=\"#232323\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.0, 0.0, 0.14]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 lightgrey l "<font color=\"#383838\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.0, 0.0, 0.22]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 red l "<font color=\"#8c3838\" size=6>■</font>" T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.0, 0.6, 0.55]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n" +STARTLINE}
    addUserKnob {22 orange l "<font color=\"#b28e59\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.1, 0.5, 0.7]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 yellow l "<font color=\"#ccc766\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.16, 0.5, 0.8]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 green l "<font color=\"#5d995b\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.33, 0.4, 0.6]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 cyan l "<font color=\"#72998f\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.46, 0.25, 0.6]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 blue l "<font color=\"#59687f\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.6, 0.3, 0.5]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 darkblue l "<font color=\"#63628c\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.67, 0.3, 0.55]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 magenta l "<font color=\"#927a99\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.8, 0.2, 0.6]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 pink l "<font color=\"#997a89\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.92, 0.2, 0.6]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {26 S02 l " " T " "}
    addUserKnob {26 Ftools l "" +STARTLINE T "<font color=\"#1C1C1C\"> v1.2 - Franklin VFX - 2018"}
   }
   Constant {
    inputs 0
    channels rgb
    name Constant13
    xpos -643
    ypos 714
   }
   AdjBBox {
    numpixels {{size_bbox}}
    name AdjBBox13
    xpos -643
    ypos 849
   }
   Dot {
    name Dot78
    xpos -609
    ypos 987
   }
   Axis3 {
    inputs 0
    useMatrix true
    matrix {
        {{parent.cCard3D_1.matrix} {parent.cCard3D_1.matrix} {parent.cCard3D_1.matrix} {parent.cCard3D_1.matrix}}
        {{parent.cCard3D_1.matrix} {parent.cCard3D_1.matrix} {parent.cCard3D_1.matrix} {parent.cCard3D_1.matrix}}
        {{parent.cCard3D_1.matrix} {parent.cCard3D_1.matrix} {parent.cCard3D_1.matrix} {parent.cCard3D_1.matrix}}
        {{parent.cCard3D_1.matrix} {parent.cCard3D_1.matrix} {parent.cCard3D_1.matrix} {parent.cCard3D_1.matrix}}
      }
    name Axis14
    xpos -203
    ypos -90
   }
set N4c36c020 [stack 0]
push 0
   Input {
    inputs 0
    name top
    xpos -283
    ypos -1243
    number 1
   }
   TimeOffset {
    time_offset {{"shot_\[value shotnmbr]==0 ? 0 : shot_\[value shotnmbr]-1"}}
    time ""
    name CTimeOffset1
    label "shot: \[value shotnmbr]\non frame \[value time_offset]"
    xpos -283
    ypos -924
    addUserKnob {20 User}
    addUserKnob {3 shotnmbr l "shot "}
    shotnmbr {{shotcount}}
    addUserKnob {3 ref}
    ref {{time_offset+1}}
   }
   Group {
    name DecimalTimeOffset1
    tile_color 0xafa35dff
    label "random asset"
    note_font "Bitstream Vera Sans Bold"
    xpos -283
    ypos -841
    addUserKnob {20 User}
    addUserKnob {7 decimal l "time offset (decimal)"}
    decimal {{random(shotcount*seed)}}
    addUserKnob {26 ""}
    addUserKnob {26 _1 l "" +STARTLINE T "Chris Fryer | 2020\nupdated by Yorben Otto | 2024"}
   }
    Input {
     inputs 0
     name Input1
     xpos 426
     ypos -793
    }
    TimeOffset {
     time_offset {{(-floor(parent.decimal))*(DecimalTimeOffset1.decimal<0)}}
     time ""
     name TimeOffset1
     xpos 426
     ypos -675
    }
    Dot {
     name Dot6
     xpos 460
     ypos -635
    }
set N4c3ab880 [stack 0]
    Dot {
     name Dot5
     xpos 350
     ypos -635
    }
    Dot {
     name Dot7
     xpos 350
     ypos -365
    }
push $N4c3ab880
    Dot {
     name Dot1
     xpos 572
     ypos -635
    }
    TimeBlur {
     divisions 2
     shutter {{(parent.decimal-(floor(parent.decimal)))*2}}
     shutteroffset start
     shuttercustomoffset 0
     name TimeBlur1
     xpos 538
     ypos -558
    }
    Dot {
     name Dot2
     xpos 572
     ypos -490
    }
push $N4c3ab880
    TimeBlur {
     divisions 2
     shutter {{parent.decimal*2}}
     shutteroffset start
     shuttercustomoffset 0
     name TimeBlur8
     xpos 426
     ypos -556
    }
    Switch {
     inputs 2
     which {{parent.decimal<0}}
     name Switch1
     xpos 426
     ypos -494
    }
    Multiply {
     value {{parent.TimeBlur8.divisions}}
     name Multiply6
     xpos 426
     ypos -436
    }
    Merge2 {
     inputs 2
     operation from
     name Merge6
     xpos 426
     ypos -369
    }
set N4c3ed7c0 [stack 0]
    Output {
     name Output1
     xpos 426
     ypos -221
    }
push $N4c3ed7c0
push $N4c3ed7c0
    Viewer {
     inputs 2
     frame_range 1-100
     name Viewer1
     xpos 675
     ypos -246
    }
   end_group
   NoTimeBlur {
    name NoTimeBlur1
    xpos -283
    ypos -779
   }
   Transform {
    scale {{0.05+(0.05*(((parent.DecimalTimeOffset13.decimal-0.5)*2)*ScaleVariationSmoke))}}
    center {{root.width/2 x1015 2304} {root.height/2}}
    shutteroffset centred
    name Transform44
    xpos -283
    ypos -152
   }
   Card3D {
    inputs 3
    rot_order ZYX
    translate {0 0 0}
    rotate {90 0 0}
    shutteroffset centred
    name cCard3D25
    tile_color 0x7b1d1dff
    xpos -283
    ypos 11
    addUserKnob {20 User l parent}
    addUserKnob {22 python_button l "set parent" t "select parent node, and press this button to set the selected node as parent" +INVISIBLE T "n = nuke.selectedNode()\['name'].getValue()\nnuke.thisNode()\['string'].setValue(n)" +STARTLINE}
    addUserKnob {1 string l parent +INVISIBLE}
    string null
    addUserKnob {3 ref l "ref frame"}
    ref 1015
   }
   Transform {
    translate {{"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].translate.x(ref)\}]"} {"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].translate.y(ref)\}]"}}
    rotate {{"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].rotate-\[value parent_gun].rotate(ref)\}]"}}
    scale {{"\[if \{\[value parent_gun]==\"null\"\} \{return 1\} \{return 1+(\[value parent_gun].scale-\[value parent_gun].scale(ref))\}]"}}
    center {{"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].center.x(ref)\}]"} {"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].center.y(ref)\}]"}}
    name Transform_GUNMatchMove37
    xpos -283
    ypos 126
    addUserKnob {20 User l parent}
    addUserKnob {3 ref}
    ref {{parent.CTimeOffset.ref}}
   }
   Transform {
    translate {{"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].translate.x-\[value parent_env].translate.x(ref)\}]"} {"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].translate.y-\[value parent_env].translate.y(ref)\}]"}}
    rotate {{"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].rotate-\[value parent_env].rotate(ref)\}]"}}
    scale {{"\[if \{\[value parent_gun]==\"null\"\} \{return 1\} \{return 1+(\[value parent_env].scale-\[value parent_env].scale(ref))\}]"}}
    center {{"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].center.x(ref)\}]"} {"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].center.y(ref)\}]"}}
    motionblur 0.2
    shutter {{SmokeMB*0.5}}
    shutteroffset centred
    name Transform_ENVMatchMove37
    label "\n"
    xpos -283
    ypos 255
    addUserKnob {20 User l parent}
    addUserKnob {3 ref}
    ref {{parent.CTimeOffset.ref}}
   }
   Transform {
    translate {{"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return -((root.width/2)-(\[value parent_gun].center.x(1)+\[value parent_gun].translate.x(1)))\}]"} {"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return -((root.height/2)-(\[value parent_gun].center.y(1)+\[value parent_gun].translate.y(1)))\}]"}}
    name Transform_GUNMatchMove6
    label "alignment correction"
    xpos -283
    ypos 344
    addUserKnob {20 User l parent}
    addUserKnob {22 python_button l "set parent" t "select parent node, and press this button to set the selected node as parent" T "n = nuke.selectedNode()\['name'].getValue()\nnuke.thisNode()\['string'].setValue(n)" +STARTLINE}
    addUserKnob {1 string l parent}
    string Transform_MatchMove10
    addUserKnob {3 ref +INVISIBLE}
    ref {{parent.cCard3D_8.ref}}
   }
   Multiply {
    value {{math_matrix.result_y_smoke(parent.CTimeOffset.ref)}}
    name Angle_reveal_top1
    label TOP
    xpos -283
    ypos 403
   }
   Remove {
    operation keep
    channels rgb
    name Remove1
    xpos -283
    ypos 514
   }
push 0
   Switch {
    inputs 2
    which {{parent.Angle_reveal_top1.value>0.001}}
    name Switch1
    xpos -283
    ypos 660
   }
   Dot {
    name Dot82
    xpos -249
    ypos 705
   }
push 0
push $N4c36c020
push 0
   Input {
    inputs 0
    name front
    xpos -436
    ypos -1243
    number 2
   }
   TimeOffset {
    time_offset {{"shot_\[value shotnmbr]==0 ? 0 : shot_\[value shotnmbr]-1"}}
    time ""
    name CTimeOffset2
    label "shot: \[value shotnmbr]\non frame \[value time_offset]"
    xpos -436
    ypos -925
    addUserKnob {20 User}
    addUserKnob {3 shotnmbr l "shot "}
    shotnmbr {{shotcount}}
    addUserKnob {3 ref}
    ref {{time_offset+1}}
   }
   Group {
    name DecimalTimeOffset2
    tile_color 0xafa35dff
    label "random asset"
    note_font "Bitstream Vera Sans Bold"
    xpos -436
    ypos -842
    addUserKnob {20 User}
    addUserKnob {7 decimal l "time offset (decimal)"}
    decimal {{random(shotcount*seed)}}
    addUserKnob {26 ""}
    addUserKnob {26 _1 l "" +STARTLINE T "Chris Fryer | 2020\nupdated by Yorben Otto | 2024"}
   }
    Input {
     inputs 0
     name Input1
     xpos 426
     ypos -793
    }
    TimeOffset {
     time_offset {{(-floor(parent.decimal))*(DecimalTimeOffset2.decimal<0)}}
     time ""
     name TimeOffset1
     xpos 426
     ypos -675
    }
    Dot {
     name Dot6
     xpos 460
     ypos -635
    }
set N4c7495c0 [stack 0]
    Dot {
     name Dot5
     xpos 350
     ypos -635
    }
    Dot {
     name Dot7
     xpos 350
     ypos -365
    }
push $N4c7495c0
    Dot {
     name Dot1
     xpos 572
     ypos -635
    }
    TimeBlur {
     divisions 2
     shutter {{(parent.decimal-(floor(parent.decimal)))*2}}
     shutteroffset start
     shuttercustomoffset 0
     name TimeBlur1
     xpos 538
     ypos -558
    }
    Dot {
     name Dot2
     xpos 572
     ypos -490
    }
push $N4c7495c0
    TimeBlur {
     divisions 2
     shutter {{parent.decimal*2}}
     shutteroffset start
     shuttercustomoffset 0
     name TimeBlur8
     xpos 426
     ypos -556
    }
    Switch {
     inputs 2
     which {{parent.decimal<0}}
     name Switch1
     xpos 426
     ypos -494
    }
    Multiply {
     value {{parent.TimeBlur8.divisions}}
     name Multiply6
     xpos 426
     ypos -436
    }
    Merge2 {
     inputs 2
     operation from
     name Merge6
     xpos 426
     ypos -369
    }
set N4c78b500 [stack 0]
    Output {
     name Output1
     xpos 426
     ypos -221
    }
push $N4c78b500
push $N4c78b500
    Viewer {
     inputs 2
     frame_range 1-100
     name Viewer1
     xpos 675
     ypos -246
    }
   end_group
   NoTimeBlur {
    name NoTimeBlur5
    xpos -436
    ypos -780
   }
   Transform {
    scale {{0.05+(0.05*(((parent.DecimalTimeOffset13.decimal-0.5)*2)*ScaleVariationSmoke))}}
    center {{root.width/2 x1015 2304} {root.height/2}}
    shutteroffset centred
    name Transform45
    xpos -436
    ypos -151
   }
   Card3D {
    inputs 3
    rot_order ZYX
    translate {0 0 0}
    rotate {0 90 0}
    shutteroffset centred
    name cCard3D26
    tile_color 0x7b1d1dff
    xpos -436
    ypos 15
    addUserKnob {20 User l parent}
    addUserKnob {22 python_button l "set parent" t "select parent node, and press this button to set the selected node as parent" +INVISIBLE T "n = nuke.selectedNode()\['name'].getValue()\nnuke.thisNode()\['string'].setValue(n)" +STARTLINE}
    addUserKnob {1 string l parent +INVISIBLE}
    string null
    addUserKnob {3 ref l "ref frame"}
    ref 1015
   }
   Transform {
    translate {{"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].translate.x(ref)\}]"} {"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].translate.y(ref)\}]"}}
    rotate {{"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].rotate-\[value parent_gun].rotate(ref)\}]"}}
    scale {{"\[if \{\[value parent_gun]==\"null\"\} \{return 1\} \{return 1+(\[value parent_gun].scale-\[value parent_gun].scale(ref))\}]"}}
    center {{"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].center.x(ref)\}]"} {"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].center.y(ref)\}]"}}
    name Transform_GUNMatchMove38
    label "\n"
    xpos -436
    ypos 124
    addUserKnob {20 User l parent}
    addUserKnob {3 ref}
    ref {{parent.CTimeOffset.ref}}
   }
   Transform {
    translate {{"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].translate.x-\[value parent_env].translate.x(ref)\}]"} {"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].translate.y-\[value parent_env].translate.y(ref)\}]"}}
    rotate {{"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].rotate-\[value parent_env].rotate(ref)\}]"}}
    scale {{"\[if \{\[value parent_gun]==\"null\"\} \{return 1\} \{return 1+(\[value parent_env].scale-\[value parent_env].scale(ref))\}]"}}
    center {{"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].center.x(ref)\}]"} {"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].center.y(ref)\}]"}}
    motionblur 0.2
    shutter {{SmokeMB*0.5}}
    shutteroffset centred
    name Transform_ENVMatchMove38
    xpos -436
    ypos 254
    addUserKnob {20 User l parent}
    addUserKnob {3 ref}
    ref {{parent.CTimeOffset.ref}}
   }
   Transform {
    translate {{"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return -((root.width/2)-(\[value parent_gun].center.x(1)+\[value parent_gun].translate.x(1)))\}]"} {"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return -((root.height/2)-(\[value parent_gun].center.y(1)+\[value parent_gun].translate.y(1)))\}]"}}
    name Transform_GUNMatchMove7
    label "alignment correction"
    xpos -436
    ypos 343
    addUserKnob {20 User l parent}
    addUserKnob {22 python_button l "set parent" t "select parent node, and press this button to set the selected node as parent" T "n = nuke.selectedNode()\['name'].getValue()\nnuke.thisNode()\['string'].setValue(n)" +STARTLINE}
    addUserKnob {1 string l parent}
    string Transform_MatchMove10
    addUserKnob {3 ref +INVISIBLE}
    ref {{parent.cCard3D_8.ref}}
   }
   Multiply {
    value {{math_matrix.result_x_smoke(parent.CTimeOffset.ref)}}
    name Angle_reveal_front1
    label FRONT
    xpos -436
    ypos 401
   }
   Remove {
    operation keep
    channels rgb
    name Remove2
    xpos -436
    ypos 511
   }
push 0
   Switch {
    inputs 2
    which {{parent.Angle_reveal_front1.value>0.001}}
    name Switch2
    xpos -436
    ypos 660
   }
   Dot {
    name Dot83
    xpos -402
    ypos 735
   }
   Input {
    inputs 0
    name side
    xpos -130
    ypos -1242
   }
   TimeOffset {
    time_offset {{"shot_\[value shotnmbr]==0 ? 0 : shot_\[value shotnmbr]-1"}}
    time ""
    name CTimeOffset
    label "shot: \[value shotnmbr]\non frame \[value time_offset]"
    xpos -130
    ypos -927
    addUserKnob {20 User}
    addUserKnob {3 shotnmbr l "shot "}
    shotnmbr {{shotcount}}
    addUserKnob {3 ref}
    ref {{time_offset+1}}
   }
   Group {
    name DecimalTimeOffset13
    tile_color 0xafa35dff
    label "random asset"
    note_font "Bitstream Vera Sans Bold"
    xpos -130
    ypos -844
    addUserKnob {20 User}
    addUserKnob {7 decimal l "time offset (decimal)"}
    decimal {{random(shotcount*seed)}}
    addUserKnob {26 ""}
    addUserKnob {26 _1 l "" +STARTLINE T "Chris Fryer | 2020\nupdated by Yorben Otto | 2024"}
   }
    Input {
     inputs 0
     name Input1
     xpos 426
     ypos -793
    }
    TimeOffset {
     time_offset {{(-floor(parent.decimal))*(DecimalTimeOffset13.decimal<0)}}
     time ""
     name TimeOffset1
     xpos 426
     ypos -675
    }
    Dot {
     name Dot6
     xpos 460
     ypos -635
    }
set N4c9d7460 [stack 0]
    Dot {
     name Dot5
     xpos 350
     ypos -635
    }
    Dot {
     name Dot7
     xpos 350
     ypos -365
    }
push $N4c9d7460
    Dot {
     name Dot1
     xpos 572
     ypos -635
    }
    TimeBlur {
     divisions 2
     shutter {{(parent.decimal-(floor(parent.decimal)))*2}}
     shutteroffset start
     shuttercustomoffset 0
     name TimeBlur1
     xpos 538
     ypos -558
    }
    Dot {
     name Dot2
     xpos 572
     ypos -490
    }
push $N4c9d7460
    TimeBlur {
     divisions 2
     shutter {{parent.decimal*2}}
     shutteroffset start
     shuttercustomoffset 0
     name TimeBlur8
     xpos 426
     ypos -556
    }
    Switch {
     inputs 2
     which {{parent.decimal<0}}
     name Switch1
     xpos 426
     ypos -494
    }
    Multiply {
     value {{parent.TimeBlur8.divisions}}
     name Multiply6
     xpos 426
     ypos -436
    }
    Merge2 {
     inputs 2
     operation from
     name Merge6
     xpos 426
     ypos -369
    }
set N4cf292c0 [stack 0]
    Output {
     name Output1
     xpos 426
     ypos -221
    }
push $N4cf292c0
push $N4cf292c0
    Viewer {
     inputs 2
     frame_range 1-100
     name Viewer1
     xpos 675
     ypos -246
    }
   end_group
   NoTimeBlur {
    name NoTimeBlur13
    xpos -130
    ypos -782
   }
   Transform {
    scale {{0.05+(0.05*(((parent.DecimalTimeOffset13.decimal-0.5)*2)*ScaleVariationSmoke))}}
    center {{root.width/2 x1015 2304} {root.height/2}}
    shutteroffset centred
    name Transform46
    xpos -130
    ypos -155
   }
   Card3D {
    translate {{"\[if \{\[exists  parent.parent.parent.input0]\} \{return \[value \[topnode parent.parent.parent.input0].name].translate.x(ref)\} \{return 0\}]"} {"\[if \{\[exists  parent.parent.parent.input0]\} \{return \[value \[topnode parent.parent.parent.input0].name].translate.y(ref)\} \{return 0\}]"} {"\[if \{\[exists  parent.parent.parent.input0]\} \{return \[value \[topnode parent.parent.parent.input0].name].translate.z(ref)\} \{return -1\}]"}}
    rotate {{"\[if \{\[exists  parent.parent.parent.input0]\} \{return \[value \[topnode parent.parent.parent.input0].name].rotate.x(ref)\} \{return 0\}]"} {"\[if \{\[exists  parent.parent.parent.input0]\} \{return \[value \[topnode parent.parent.parent.input0].name].rotate.y(ref)\} \{return 0\}]"} {"\[if \{\[exists  parent.parent.parent.input0]\} \{return \[value \[topnode parent.parent.parent.input0].name].rotate.z(ref)\} \{return 0\}]"}}
    scaling {{"\[if \{\[exists  parent.parent.parent.input0]\} \{return \[value \[topnode parent.parent.parent.input0].name].scaling.x(ref)\} \{return 1\}]"} {"\[if \{\[exists  parent.parent.parent.input0]\} \{return \[value \[topnode parent.parent.parent.input0].name].scaling.y(ref)\} \{return 1\}]"} {"\[if \{\[exists  parent.parent.parent.input0]\} \{return \[value \[topnode parent.parent.parent.input0].name].scaling.z(ref)\} \{return 1\}]"}}
    uniform_scale {{"\[if \{\[exists  parent.parent.parent.input0]\} \{return (\[value \[topnode parent.parent.parent.input0].name].uniform_scale(ref)*25)\} \{return 25\}]"}}
    shutteroffset centred
    name cCard3D_1
    tile_color 0x7b1d1dff
    label "ref frame: \[value ref]"
    xpos -130
    ypos 2
    addUserKnob {20 User l parent}
    addUserKnob {22 python_button l "set parent" t "select parent node, and press this button to set the selected node as parent" +INVISIBLE T "n = nuke.selectedNode()\['name'].getValue()\nnuke.thisNode()\['string'].setValue(n)" +STARTLINE}
    addUserKnob {1 string l parent +INVISIBLE}
    string null
    addUserKnob {3 id l "id number"}
    id {{parent.CTimeOffset.shotnmbr}}
    addUserKnob {3 ref l "ref frame"}
    ref {{parent.CTimeOffset.ref}}
   }
   Transform {
    translate {{"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].translate.x(ref)\}]"} {"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].translate.y(ref)\}]"}}
    rotate {{"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].rotate-\[value parent_gun].rotate(ref)\}]"}}
    scale {{"\[if \{\[value parent_gun]==\"null\"\} \{return 1\} \{return 1+(\[value parent_gun].scale-\[value parent_gun].scale(ref))\}]"}}
    center {{"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].center.x(ref)\}]"} {"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].center.y(ref)\}]"}}
    name Transform_GUNMatchMove39
    label "\n"
    xpos -130
    ypos 124
    addUserKnob {20 User l parent}
    addUserKnob {3 ref}
    ref {{parent.CTimeOffset.ref}}
   }
   Transform {
    translate {{"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].translate.x-\[value parent_env].translate.x(ref)\}]"} {"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].translate.y-\[value parent_env].translate.y(ref)\}]"}}
    rotate {{"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].rotate-\[value parent_env].rotate(ref)\}]"}}
    scale {{"\[if \{\[value parent_gun]==\"null\"\} \{return 1\} \{return 1+(\[value parent_env].scale-\[value parent_env].scale(ref))\}]"}}
    center {{"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].center.x(ref)\}]"} {"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].center.y(ref)\}]"}}
    motionblur 0.2
    shutter {{SmokeMB*0.5}}
    shutteroffset centred
    name Transform_ENVMatchMove39
    xpos -130
    ypos 258
    addUserKnob {20 User l parent}
    addUserKnob {3 ref}
    ref {{parent.CTimeOffset.ref}}
   }
   Transform {
    translate {{"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return -((root.width/2)-(\[value parent_gun].center.x(1)+\[value parent_gun].translate.x(1)))\}]"} {"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return -((root.height/2)-(\[value parent_gun].center.y(1)+\[value parent_gun].translate.y(1)))\}]"}}
    name Transform_GUNMatchMove5
    label "alignment correction"
    xpos -130
    ypos 340
    addUserKnob {20 User l parent}
    addUserKnob {22 python_button l "set parent" t "select parent node, and press this button to set the selected node as parent" T "n = nuke.selectedNode()\['name'].getValue()\nnuke.thisNode()\['string'].setValue(n)" +STARTLINE}
    addUserKnob {1 string l parent}
    string Transform_MatchMove10
    addUserKnob {3 ref +INVISIBLE}
    ref {{parent.cCard3D_8.ref}}
   }
   Multiply {
    value {{math_matrix.result_z_smoke(parent.CTimeOffset.ref)}}
    name Angle_reveal_side1
    label SIDE
    xpos -130
    ypos 404
   }
   Remove {
    operation keep
    channels rgb
    name Remove39
    xpos -130
    ypos 514
   }
push 0
   Switch {
    inputs 2
    which {{parent.Angle_reveal_side1.value>0.001}}
    name Switch3
    xpos -130
    ypos 658
   }
   Merge2 {
    inputs 3+1
    operation max
    Achannels rgb
    Bchannels rgb
    output rgb
    name Merge28
    xpos -130
    ypos 731
   }
   Merge2 {
    inputs 2
    operation plus
    bbox intersection
    Achannels rgb
    Bchannels rgb
    output rgb
    name Merge29
    xpos -130
    ypos 983
   }
   Shuffle2 {
    fromInput1 {{0} B}
    fromInput2 {{0} B}
    mappings "4 rgba.red 0 0 rgba.red 0 0 rgba.green 0 1 rgba.green 0 1 rgba.blue 0 2 rgba.alpha 0 3 rgba.blue 0 2 rgba.blue 0 2"
    name Shuffle1
    xpos -130
    ypos 1021
   }
push 0
   Switch {
    inputs 2
    which {{"shot_\[value count]==0?0:frame>=shot_\[value count]"}}
    name cSwitch_13
    xpos -130
    ypos 1078
    addUserKnob {20 User}
    addUserKnob {3 count}
    count {{parent.CTimeOffset.shotnmbr}}
   }
   Output {
    name Output1
    xpos -130
    ypos 1323
   }
   StickyNote {
    inputs 0
    name StickyNote1
    label "<-- handy to break concatonation?  "
    xpos -39
    ypos 193
   }
  end_group
push $N586971d0
  PostageStamp {
   name Stamp22
   help "Stamps by Adrian Pueyo and Alexey Kuchinski.\nUpdated May 18 2021"
   onCreate "if nuke.GUI:\n    try:\n        import stamps; stamps.wiredOnCreate()\n    except:\n        pass\n"
   knobChanged "import stamps; stamps.wiredKnobChanged()"
   autolabel "nuke.thisNode().knob(\"title\").value()"
   tile_color 0x1000001
   note_font "Bitstream Vera Sans"
   note_font_size 20
   xpos 2307
   ypos -673
   hide_input true
   addUserKnob {20 wired_tab l "Wired Stamp"}
   addUserKnob {26 identifier -STARTLINE +HIDDEN T wired}
   addUserKnob {3 lockCallbacks l "" +STARTLINE +HIDDEN}
   addUserKnob {6 toReconnect -STARTLINE +HIDDEN}
   addUserKnob {1 title l Title: t "Displayed name on the Node Graph for this Stamp and its Anchor.\nIMPORTANT: This is only for display purposes, and is different from the real/internal name of the Stamps."}
   title smoke_FRONT
   addUserKnob {26 prev_title l "" +STARTLINE +HIDDEN T smoke_FRONT}
   addUserKnob {26 tags l Tags: t "Tags of this stamp's Anchor, for information purpose only.\nClick \"show anchor\" to change them." T <i>2D</i>}
   addUserKnob {26 backdrops l Backdrops: t "Labels of backdrop nodes which contain this stamp's Anchor." T "<i><Left>before or after Flare</i>"}
   addUserKnob {26 line1 l "" +STARTLINE}
   addUserKnob {6 postageStamp_show l "postage stamp" t "Enable the postage stamp thumbnail in this node.\nYou're seeing this because the class of this node includes the postage_stamp knob." +STARTLINE}
   addUserKnob {26 anchor_label l Anchor: T " "}
   addUserKnob {22 show_anchor l " show anchor " t "Show the properties panel for this Stamp's Anchor." -STARTLINE T stamps.wiredShowAnchor()}
   addUserKnob {22 zoom_anchor l "zoom anchor" t "Navigate to this Stamp's Anchor on the Node Graph." -STARTLINE T stamps.wiredZoomAnchor()}
   addUserKnob {26 stamps_label l Stamps: T " "}
   addUserKnob {22 zoomNext l " zoom next " t "Navigate to this Stamp's next sibling on the Node Graph." -STARTLINE T stamps.wiredZoomNext()}
   addUserKnob {22 selectSimilar l " select similar " t "Select all similar Stamps to this one on the Node Graph." -STARTLINE T stamps.wiredSelectSimilar()}
   addUserKnob {26 space_1 l "" +STARTLINE T " "}
   addUserKnob {26 reconnect_label l Reconnect: t "Reconnect by the stored Anchor name." T " "}
   addUserKnob {22 reconnect_this l this t "Reconnect this Stamp to its Anchor, by its stored Anchor name." -STARTLINE T "n = nuke.thisNode()\ntry:\n    n.setInput(0,nuke.toNode(n.knob(\"anchor\").value()))\nexcept:\n    nuke.message(\"Unable to reconnect.\")\ntry:\n    import stamps\n    stamps.wiredGetStyle(n)\nexcept:\n    pass\n"}
   addUserKnob {22 reconnect_similar l similar t "Reconnect this Stamp and similar ones to their Anchor, by their stored anchor name." -STARTLINE T stamps.wiredReconnectSimilar()}
   addUserKnob {22 reconnect_all l all t "Reconnect all the Stamps to their Anchors, by their stored anchor names." -STARTLINE T stamps.wiredReconnectAll()}
   addUserKnob {26 space_2 l "" +STARTLINE T " "}
   addUserKnob {20 advanced_reconnection l "Advanced Reconnection" n 2}
   addUserKnob {26 reconnect_by_title_label l "<font color=gold>By Title:" t "Reconnect by searching for a matching title." T " "}
   addUserKnob {22 reconnect_by_title_this l this t "Look for an Anchor that shares this Stamp's title, and connect this Stamp to it.\nIMPORTANT: Use this carefully, and only when the normal reconnection doesn't work." -STARTLINE T stamps.wiredReconnectByTitle()}
   addUserKnob {22 reconnect_by_title_similar l similar t "Look for an Anchor that shares this Stamp's title, and connect this Stamp and similar ones to it.\nIMPORTANT: Use this carefully, and only when the normal reconnection doesn't work." -STARTLINE T stamps.wiredReconnectByTitleSimilar()}
   addUserKnob {22 reconnect_by_title_selected l selected t "For each Stamp selected, look for an Anchor that shares its title, and connect to it.\nIMPORTANT: Use this carefully, and only when the normal reconnection doesn't work." -STARTLINE T stamps.wiredReconnectByTitleSelected()}
   addUserKnob {26 reconnect_by_selection_label l "<font color=orangered>By Selection:" t "Force reconnect to a selected Anchor." T " "}
   addUserKnob {22 reconnect_by_selection_this l this t "Force reconnect this Stamp to a selected Anchor, whatever its name or title.\nIMPORTANT: Use this carefully, and only when the normal reconnection doesn't work." -STARTLINE T stamps.wiredReconnectBySelection()}
   addUserKnob {22 reconnect_by_selection_similar l similar t "Force reconnect this Stamp and similar ones to a selected Anchor, whatever its name or title.\nIMPORTANT: Use this carefully, and only when the normal reconnection doesn't work." -STARTLINE T stamps.wiredReconnectBySelectionSimilar()}
   addUserKnob {22 reconnect_by_selection_selected l selected t "Force reconnect all selected Stamps to an also selected Anchor, whatever its name or title.\nIMPORTANT: Use this carefully, and only when the normal reconnection doesn't work." -STARTLINE T stamps.wiredReconnectBySelectionSelected()}
   addUserKnob {1 anchor l Anchor}
   anchor Anchor_220a2be282
   addUserKnob {6 auto_reconnect_by_title l "<font color=#ED9977>&nbsp; auto-reconnect by title" t "When creating this stamp again (like on copy-paste), auto-reconnect it by title instead of doing it by the saved anchor's name, and auto-turn this off immediately.\nIMPORTANT: Should be off by default. Only use this for setting up templates." +STARTLINE}
   addUserKnob {26 line2 l "" +STARTLINE}
   addUserKnob {22 buttonHelp l Help -STARTLINE T stamps.showHelp()}
   addUserKnob {26 version l " " t "Stamps by Adrian Pueyo and Alexey Kuchinski.\nUpdated May 18 2021." -STARTLINE T "<a href=\"http://www.nukepedia.com/gizmos/other/stamps\" style=\"color:#666;text-decoration: none;\"><span style=\"color:#666\"> <big>Stamps v1.1</big></b></a>"}
  }
  Dot {
   name Dot15
   xpos 2341
   ypos -625
  }
push $N58d70c10
  PostageStamp {
   name Stamp23
   help "Stamps by Adrian Pueyo and Alexey Kuchinski.\nUpdated May 18 2021"
   onCreate "if nuke.GUI:\n    try:\n        import stamps; stamps.wiredOnCreate()\n    except:\n        pass\n"
   knobChanged "import stamps; stamps.wiredKnobChanged()"
   autolabel "nuke.thisNode().knob(\"title\").value()"
   tile_color 0x1000001
   note_font "Bitstream Vera Sans"
   note_font_size 20
   xpos 2432
   ypos -673
   hide_input true
   addUserKnob {20 wired_tab l "Wired Stamp"}
   addUserKnob {26 identifier -STARTLINE +HIDDEN T wired}
   addUserKnob {3 lockCallbacks l "" +STARTLINE +HIDDEN}
   addUserKnob {6 toReconnect -STARTLINE +HIDDEN}
   addUserKnob {1 title l Title: t "Displayed name on the Node Graph for this Stamp and its Anchor.\nIMPORTANT: This is only for display purposes, and is different from the real/internal name of the Stamps."}
   title smoke_TOP
   addUserKnob {26 prev_title l "" +STARTLINE +HIDDEN T smoke_TOP}
   addUserKnob {26 tags l Tags: t "Tags of this stamp's Anchor, for information purpose only.\nClick \"show anchor\" to change them." T <i>2D</i>}
   addUserKnob {26 backdrops l Backdrops: t "Labels of backdrop nodes which contain this stamp's Anchor." T "<i><Left>before or after Flare</i>"}
   addUserKnob {26 line1 l "" +STARTLINE}
   addUserKnob {6 postageStamp_show l "postage stamp" t "Enable the postage stamp thumbnail in this node.\nYou're seeing this because the class of this node includes the postage_stamp knob." +STARTLINE}
   addUserKnob {26 anchor_label l Anchor: T " "}
   addUserKnob {22 show_anchor l " show anchor " t "Show the properties panel for this Stamp's Anchor." -STARTLINE T stamps.wiredShowAnchor()}
   addUserKnob {22 zoom_anchor l "zoom anchor" t "Navigate to this Stamp's Anchor on the Node Graph." -STARTLINE T stamps.wiredZoomAnchor()}
   addUserKnob {26 stamps_label l Stamps: T " "}
   addUserKnob {22 zoomNext l " zoom next " t "Navigate to this Stamp's next sibling on the Node Graph." -STARTLINE T stamps.wiredZoomNext()}
   addUserKnob {22 selectSimilar l " select similar " t "Select all similar Stamps to this one on the Node Graph." -STARTLINE T stamps.wiredSelectSimilar()}
   addUserKnob {26 space_1 l "" +STARTLINE T " "}
   addUserKnob {26 reconnect_label l Reconnect: t "Reconnect by the stored Anchor name." T " "}
   addUserKnob {22 reconnect_this l this t "Reconnect this Stamp to its Anchor, by its stored Anchor name." -STARTLINE T "n = nuke.thisNode()\ntry:\n    n.setInput(0,nuke.toNode(n.knob(\"anchor\").value()))\nexcept:\n    nuke.message(\"Unable to reconnect.\")\ntry:\n    import stamps\n    stamps.wiredGetStyle(n)\nexcept:\n    pass\n"}
   addUserKnob {22 reconnect_similar l similar t "Reconnect this Stamp and similar ones to their Anchor, by their stored anchor name." -STARTLINE T stamps.wiredReconnectSimilar()}
   addUserKnob {22 reconnect_all l all t "Reconnect all the Stamps to their Anchors, by their stored anchor names." -STARTLINE T stamps.wiredReconnectAll()}
   addUserKnob {26 space_2 l "" +STARTLINE T " "}
   addUserKnob {20 advanced_reconnection l "Advanced Reconnection" n 2}
   addUserKnob {26 reconnect_by_title_label l "<font color=gold>By Title:" t "Reconnect by searching for a matching title." T " "}
   addUserKnob {22 reconnect_by_title_this l this t "Look for an Anchor that shares this Stamp's title, and connect this Stamp to it.\nIMPORTANT: Use this carefully, and only when the normal reconnection doesn't work." -STARTLINE T stamps.wiredReconnectByTitle()}
   addUserKnob {22 reconnect_by_title_similar l similar t "Look for an Anchor that shares this Stamp's title, and connect this Stamp and similar ones to it.\nIMPORTANT: Use this carefully, and only when the normal reconnection doesn't work." -STARTLINE T stamps.wiredReconnectByTitleSimilar()}
   addUserKnob {22 reconnect_by_title_selected l selected t "For each Stamp selected, look for an Anchor that shares its title, and connect to it.\nIMPORTANT: Use this carefully, and only when the normal reconnection doesn't work." -STARTLINE T stamps.wiredReconnectByTitleSelected()}
   addUserKnob {26 reconnect_by_selection_label l "<font color=orangered>By Selection:" t "Force reconnect to a selected Anchor." T " "}
   addUserKnob {22 reconnect_by_selection_this l this t "Force reconnect this Stamp to a selected Anchor, whatever its name or title.\nIMPORTANT: Use this carefully, and only when the normal reconnection doesn't work." -STARTLINE T stamps.wiredReconnectBySelection()}
   addUserKnob {22 reconnect_by_selection_similar l similar t "Force reconnect this Stamp and similar ones to a selected Anchor, whatever its name or title.\nIMPORTANT: Use this carefully, and only when the normal reconnection doesn't work." -STARTLINE T stamps.wiredReconnectBySelectionSimilar()}
   addUserKnob {22 reconnect_by_selection_selected l selected t "Force reconnect all selected Stamps to an also selected Anchor, whatever its name or title.\nIMPORTANT: Use this carefully, and only when the normal reconnection doesn't work." -STARTLINE T stamps.wiredReconnectBySelectionSelected()}
   addUserKnob {1 anchor l Anchor}
   anchor Anchor_25b668170c
   addUserKnob {6 auto_reconnect_by_title l "<font color=#ED9977>&nbsp; auto-reconnect by title" t "When creating this stamp again (like on copy-paste), auto-reconnect it by title instead of doing it by the saved anchor's name, and auto-turn this off immediately.\nIMPORTANT: Should be off by default. Only use this for setting up templates." +STARTLINE}
   addUserKnob {26 line2 l "" +STARTLINE}
   addUserKnob {22 buttonHelp l Help -STARTLINE T stamps.showHelp()}
   addUserKnob {26 version l " " t "Stamps by Adrian Pueyo and Alexey Kuchinski.\nUpdated May 18 2021." -STARTLINE T "<a href=\"http://www.nukepedia.com/gizmos/other/stamps\" style=\"color:#666;text-decoration: none;\"><span style=\"color:#666\"> <big>Stamps v1.1</big></b></a>"}
  }
push $N56244930
  PostageStamp {
   name Stamp24
   help "Stamps by Adrian Pueyo and Alexey Kuchinski.\nUpdated May 18 2021"
   onCreate "if nuke.GUI:\n    try:\n        import stamps; stamps.wiredOnCreate()\n    except:\n        pass\n"
   knobChanged "import stamps; stamps.wiredKnobChanged()"
   autolabel "nuke.thisNode().knob(\"title\").value()"
   tile_color 0x1000001
   note_font "Bitstream Vera Sans"
   note_font_size 20
   xpos 2550
   ypos -675
   hide_input true
   addUserKnob {20 wired_tab l "Wired Stamp"}
   addUserKnob {26 identifier -STARTLINE +HIDDEN T wired}
   addUserKnob {3 lockCallbacks l "" +STARTLINE +HIDDEN}
   addUserKnob {6 toReconnect -STARTLINE +HIDDEN}
   addUserKnob {1 title l Title: t "Displayed name on the Node Graph for this Stamp and its Anchor.\nIMPORTANT: This is only for display purposes, and is different from the real/internal name of the Stamps."}
   title smoke_SIDE
   addUserKnob {26 prev_title l "" +STARTLINE +HIDDEN T smoke_SIDE}
   addUserKnob {26 tags l Tags: t "Tags of this stamp's Anchor, for information purpose only.\nClick \"show anchor\" to change them." T <i>2D</i>}
   addUserKnob {26 backdrops l Backdrops: t "Labels of backdrop nodes which contain this stamp's Anchor." T "<i><Left>before or after Flare</i>"}
   addUserKnob {26 line1 l "" +STARTLINE}
   addUserKnob {6 postageStamp_show l "postage stamp" t "Enable the postage stamp thumbnail in this node.\nYou're seeing this because the class of this node includes the postage_stamp knob." +STARTLINE}
   addUserKnob {26 anchor_label l Anchor: T " "}
   addUserKnob {22 show_anchor l " show anchor " t "Show the properties panel for this Stamp's Anchor." -STARTLINE T stamps.wiredShowAnchor()}
   addUserKnob {22 zoom_anchor l "zoom anchor" t "Navigate to this Stamp's Anchor on the Node Graph." -STARTLINE T stamps.wiredZoomAnchor()}
   addUserKnob {26 stamps_label l Stamps: T " "}
   addUserKnob {22 zoomNext l " zoom next " t "Navigate to this Stamp's next sibling on the Node Graph." -STARTLINE T stamps.wiredZoomNext()}
   addUserKnob {22 selectSimilar l " select similar " t "Select all similar Stamps to this one on the Node Graph." -STARTLINE T stamps.wiredSelectSimilar()}
   addUserKnob {26 space_1 l "" +STARTLINE T " "}
   addUserKnob {26 reconnect_label l Reconnect: t "Reconnect by the stored Anchor name." T " "}
   addUserKnob {22 reconnect_this l this t "Reconnect this Stamp to its Anchor, by its stored Anchor name." -STARTLINE T "n = nuke.thisNode()\ntry:\n    n.setInput(0,nuke.toNode(n.knob(\"anchor\").value()))\nexcept:\n    nuke.message(\"Unable to reconnect.\")\ntry:\n    import stamps\n    stamps.wiredGetStyle(n)\nexcept:\n    pass\n"}
   addUserKnob {22 reconnect_similar l similar t "Reconnect this Stamp and similar ones to their Anchor, by their stored anchor name." -STARTLINE T stamps.wiredReconnectSimilar()}
   addUserKnob {22 reconnect_all l all t "Reconnect all the Stamps to their Anchors, by their stored anchor names." -STARTLINE T stamps.wiredReconnectAll()}
   addUserKnob {26 space_2 l "" +STARTLINE T " "}
   addUserKnob {20 advanced_reconnection l "Advanced Reconnection" n 2}
   addUserKnob {26 reconnect_by_title_label l "<font color=gold>By Title:" t "Reconnect by searching for a matching title." T " "}
   addUserKnob {22 reconnect_by_title_this l this t "Look for an Anchor that shares this Stamp's title, and connect this Stamp to it.\nIMPORTANT: Use this carefully, and only when the normal reconnection doesn't work." -STARTLINE T stamps.wiredReconnectByTitle()}
   addUserKnob {22 reconnect_by_title_similar l similar t "Look for an Anchor that shares this Stamp's title, and connect this Stamp and similar ones to it.\nIMPORTANT: Use this carefully, and only when the normal reconnection doesn't work." -STARTLINE T stamps.wiredReconnectByTitleSimilar()}
   addUserKnob {22 reconnect_by_title_selected l selected t "For each Stamp selected, look for an Anchor that shares its title, and connect to it.\nIMPORTANT: Use this carefully, and only when the normal reconnection doesn't work." -STARTLINE T stamps.wiredReconnectByTitleSelected()}
   addUserKnob {26 reconnect_by_selection_label l "<font color=orangered>By Selection:" t "Force reconnect to a selected Anchor." T " "}
   addUserKnob {22 reconnect_by_selection_this l this t "Force reconnect this Stamp to a selected Anchor, whatever its name or title.\nIMPORTANT: Use this carefully, and only when the normal reconnection doesn't work." -STARTLINE T stamps.wiredReconnectBySelection()}
   addUserKnob {22 reconnect_by_selection_similar l similar t "Force reconnect this Stamp and similar ones to a selected Anchor, whatever its name or title.\nIMPORTANT: Use this carefully, and only when the normal reconnection doesn't work." -STARTLINE T stamps.wiredReconnectBySelectionSimilar()}
   addUserKnob {22 reconnect_by_selection_selected l selected t "Force reconnect all selected Stamps to an also selected Anchor, whatever its name or title.\nIMPORTANT: Use this carefully, and only when the normal reconnection doesn't work." -STARTLINE T stamps.wiredReconnectBySelectionSelected()}
   addUserKnob {1 anchor l Anchor}
   anchor Anchor_232c9aab88
   addUserKnob {6 auto_reconnect_by_title l "<font color=#ED9977>&nbsp; auto-reconnect by title" t "When creating this stamp again (like on copy-paste), auto-reconnect it by title instead of doing it by the saved anchor's name, and auto-turn this off immediately.\nIMPORTANT: Should be off by default. Only use this for setting up templates." +STARTLINE}
   addUserKnob {26 line2 l "" +STARTLINE}
   addUserKnob {22 buttonHelp l Help -STARTLINE T stamps.showHelp()}
   addUserKnob {26 version l " " t "Stamps by Adrian Pueyo and Alexey Kuchinski.\nUpdated May 18 2021." -STARTLINE T "<a href=\"http://www.nukepedia.com/gizmos/other/stamps\" style=\"color:#666;text-decoration: none;\"><span style=\"color:#666\"> <big>Stamps v1.1</big></b></a>"}
  }
  Dot {
   name Dot16
   xpos 2584
   ypos -625
  }
  Group {
   inputs 3
   name gunshot8
   label "shot: \[value shotcount]\non frame: \[value shotstart]\n"
   xpos 2432
   ypos -598
   addUserKnob {20 User}
   addUserKnob {3 shotcount l shot}
   shotcount 8
   addUserKnob {3 shotstart l frame +INVISIBLE}
   shotstart {{"shotcount==0 ? 0 : shot\[value shotcount]-1" i}}
  }
   BackdropNode {
    inputs 0
    name BackdropNode19
    knobChanged "try:\n    listenedKnobs = \['text', 'position', 'name']\n    node = nuke.thisNode()\n    name = node.knob('name').value()\n    text = node.knob('text').value()\n    position = node.knob('position').value()\n    position = \"<\" + position + \">\"\n    label = node.knob('label').value()\n    \n    if nuke.thisKnob().name() in listenedKnobs:\n        if text == \"\":\n            if node.knob('position').value() == \"left\":\n                node.knob('label').setValue()\n            else:\n                node.knob('label').setValue(position + name)\n        else:\n            if node.knob('position').value() == \"left\":\n                node.knob('label').setValue(text)\n            else:\n                node.knob('label').setValue(position + text)\n                \n    elif nuke.thisKnob().name() == 'font_size':\n        fontSize = node.knob('font_size').value()\n        node.knob('note_font_size').setValue(fontSize)\nexcept:\n    pass"
    tile_color 0x232323ff
    label "<Left><h2> Gunshot"
    note_font_size 31.5
    xpos -693
    ypos -554
    bdwidth 876
    bdheight 1682
    addUserKnob {20 F_VFX l BackdropNode}
    addUserKnob {43 text l Text}
    text "<h2> Gunshot"
    addUserKnob {7 font_size l "Font Size" R 10 100}
    font_size 31.5
    addUserKnob {4 position l "" -STARTLINE M {Left Center}}
    addUserKnob {26 S01 l " " T " "}
    addUserKnob {22 grow l " <img src=\"F_scalep.png\">" -STARTLINE T "n=nuke.thisNode()\n\ndef grow(node=None,step=50):\n    try:\n        if not node:\n            n=nuke.selectedNode()\n        else:\n            n=node\n            n\['xpos'].setValue(n\['xpos'].getValue()-step)\n            n\['ypos'].setValue(n\['ypos'].getValue()-step)\n            n\['bdwidth'].setValue(n\['bdwidth'].getValue()+step*2)\n            n\['bdheight'].setValue(n\['bdheight'].getValue()+step*2)\n    except:\n        pass\ngrow(n,50)"}
    addUserKnob {22 shrink l " <img src=\"F_scalem.png\">" -STARTLINE T "n=nuke.thisNode()\n\ndef shrink(node=None,step=50):\n    try:\n        if not node:\n            n=nuke.selectedNode()\n        else:\n            n=node\n            n\['xpos'].setValue(n\['xpos'].getValue()+step)\n            n\['ypos'].setValue(n\['ypos'].getValue()+step)\n            n\['bdwidth'].setValue(n\['bdwidth'].getValue()-step*2)\n            n\['bdheight'].setValue(n\['bdheight'].getValue()-step*2)\n    except:\n        pass\nshrink(n,50)"}
    addUserKnob {22 colorandom l " <img src=\"ColorBars.png\">" -STARTLINE T "import colorsys, random\nn=nuke.thisNode()\nR,G,B= colorsys.hsv_to_rgb(random.random(),.1+random.random()*.15,.15+random.random()*.15)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ) )"}
    addUserKnob {22 darkgrey l "<font color=\"#232323\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.0, 0.0, 0.14]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 lightgrey l "<font color=\"#383838\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.0, 0.0, 0.22]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 red l "<font color=\"#8c3838\" size=6>■</font>" T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.0, 0.6, 0.55]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n" +STARTLINE}
    addUserKnob {22 orange l "<font color=\"#b28e59\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.1, 0.5, 0.7]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 yellow l "<font color=\"#ccc766\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.16, 0.5, 0.8]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 green l "<font color=\"#5d995b\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.33, 0.4, 0.6]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 cyan l "<font color=\"#72998f\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.46, 0.25, 0.6]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 blue l "<font color=\"#59687f\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.6, 0.3, 0.5]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 darkblue l "<font color=\"#63628c\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.67, 0.3, 0.55]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 magenta l "<font color=\"#927a99\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.8, 0.2, 0.6]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 pink l "<font color=\"#997a89\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.92, 0.2, 0.6]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {26 S02 l " " T " "}
    addUserKnob {26 Ftools l "" +STARTLINE T "<font color=\"#1C1C1C\"> v1.2 - Franklin VFX - 2018"}
   }
   BackdropNode {
    inputs 0
    name BackdropNode2
    knobChanged "try:\n    listenedKnobs = \['text', 'position', 'name']\n    node = nuke.thisNode()\n    name = node.knob('name').value()\n    text = node.knob('text').value()\n    position = node.knob('position').value()\n    position = \"<\" + position + \">\"\n    label = node.knob('label').value()\n    \n    if nuke.thisKnob().name() in listenedKnobs:\n        if text == \"\":\n            if node.knob('position').value() == \"left\":\n                node.knob('label').setValue()\n            else:\n                node.knob('label').setValue(position + name)\n        else:\n            if node.knob('position').value() == \"left\":\n                node.knob('label').setValue(text)\n            else:\n                node.knob('label').setValue(position + text)\n                \n    elif nuke.thisKnob().name() == 'font_size':\n        fontSize = node.knob('font_size').value()\n        node.knob('note_font_size').setValue(fontSize)\nexcept:\n    pass"
    tile_color 0x927a99ff
    note_font_size 50
    xpos -473
    ypos -221
    bdwidth 435
    bdheight 786
    z_order 1
    addUserKnob {20 F_VFX l BackdropNode}
    addUserKnob {43 text l Text}
    addUserKnob {7 font_size l "Font Size" R 10 100}
    font_size 50
    addUserKnob {4 position l "" -STARTLINE M {Left Center}}
    addUserKnob {26 S01 l " " T " "}
    addUserKnob {22 grow l " <img src=\"F_scalep.png\">" -STARTLINE T "n=nuke.thisNode()\n\ndef grow(node=None,step=50):\n    try:\n        if not node:\n            n=nuke.selectedNode()\n        else:\n            n=node\n            n\['xpos'].setValue(n\['xpos'].getValue()-step)\n            n\['ypos'].setValue(n\['ypos'].getValue()-step)\n            n\['bdwidth'].setValue(n\['bdwidth'].getValue()+step*2)\n            n\['bdheight'].setValue(n\['bdheight'].getValue()+step*2)\n    except:\n        pass\ngrow(n,50)"}
    addUserKnob {22 shrink l " <img src=\"F_scalem.png\">" -STARTLINE T "n=nuke.thisNode()\n\ndef shrink(node=None,step=50):\n    try:\n        if not node:\n            n=nuke.selectedNode()\n        else:\n            n=node\n            n\['xpos'].setValue(n\['xpos'].getValue()+step)\n            n\['ypos'].setValue(n\['ypos'].getValue()+step)\n            n\['bdwidth'].setValue(n\['bdwidth'].getValue()-step*2)\n            n\['bdheight'].setValue(n\['bdheight'].getValue()-step*2)\n    except:\n        pass\nshrink(n,50)"}
    addUserKnob {22 colorandom l " <img src=\"ColorBars.png\">" -STARTLINE T "import colorsys, random\nn=nuke.thisNode()\nR,G,B= colorsys.hsv_to_rgb(random.random(),.1+random.random()*.15,.15+random.random()*.15)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ) )"}
    addUserKnob {22 darkgrey l "<font color=\"#232323\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.0, 0.0, 0.14]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 lightgrey l "<font color=\"#383838\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.0, 0.0, 0.22]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 red l "<font color=\"#8c3838\" size=6>■</font>" T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.0, 0.6, 0.55]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n" +STARTLINE}
    addUserKnob {22 orange l "<font color=\"#b28e59\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.1, 0.5, 0.7]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 yellow l "<font color=\"#ccc766\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.16, 0.5, 0.8]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 green l "<font color=\"#5d995b\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.33, 0.4, 0.6]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 cyan l "<font color=\"#72998f\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.46, 0.25, 0.6]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 blue l "<font color=\"#59687f\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.6, 0.3, 0.5]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 darkblue l "<font color=\"#63628c\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.67, 0.3, 0.55]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 magenta l "<font color=\"#927a99\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.8, 0.2, 0.6]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 pink l "<font color=\"#997a89\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.92, 0.2, 0.6]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {26 S02 l " " T " "}
    addUserKnob {26 Ftools l "" +STARTLINE T "<font color=\"#1C1C1C\"> v1.2 - Franklin VFX - 2018"}
   }
   Constant {
    inputs 0
    channels rgb
    name Constant13
    xpos -643
    ypos 714
   }
   AdjBBox {
    numpixels {{size_bbox}}
    name AdjBBox13
    xpos -643
    ypos 849
   }
   Dot {
    name Dot78
    xpos -609
    ypos 987
   }
   Axis3 {
    inputs 0
    useMatrix true
    matrix {
        {{parent.cCard3D_1.matrix} {parent.cCard3D_1.matrix} {parent.cCard3D_1.matrix} {parent.cCard3D_1.matrix}}
        {{parent.cCard3D_1.matrix} {parent.cCard3D_1.matrix} {parent.cCard3D_1.matrix} {parent.cCard3D_1.matrix}}
        {{parent.cCard3D_1.matrix} {parent.cCard3D_1.matrix} {parent.cCard3D_1.matrix} {parent.cCard3D_1.matrix}}
        {{parent.cCard3D_1.matrix} {parent.cCard3D_1.matrix} {parent.cCard3D_1.matrix} {parent.cCard3D_1.matrix}}
      }
    name Axis14
    xpos -203
    ypos -90
   }
set N4f0038e0 [stack 0]
push 0
   Input {
    inputs 0
    name top
    xpos -283
    ypos -1243
    number 1
   }
   TimeOffset {
    time_offset {{"shot_\[value shotnmbr]==0 ? 0 : shot_\[value shotnmbr]-1"}}
    time ""
    name CTimeOffset1
    label "shot: \[value shotnmbr]\non frame \[value time_offset]"
    xpos -283
    ypos -924
    addUserKnob {20 User}
    addUserKnob {3 shotnmbr l "shot "}
    shotnmbr {{shotcount}}
    addUserKnob {3 ref}
    ref {{time_offset+1}}
   }
   Group {
    name DecimalTimeOffset1
    tile_color 0xafa35dff
    label "random asset"
    note_font "Bitstream Vera Sans Bold"
    xpos -283
    ypos -841
    addUserKnob {20 User}
    addUserKnob {7 decimal l "time offset (decimal)"}
    decimal {{random(shotcount*seed)}}
    addUserKnob {26 ""}
    addUserKnob {26 _1 l "" +STARTLINE T "Chris Fryer | 2020\nupdated by Yorben Otto | 2024"}
   }
    Input {
     inputs 0
     name Input1
     xpos 426
     ypos -793
    }
    TimeOffset {
     time_offset {{(-floor(parent.decimal))*(DecimalTimeOffset1.decimal<0)}}
     time ""
     name TimeOffset1
     xpos 426
     ypos -675
    }
    Dot {
     name Dot6
     xpos 460
     ypos -635
    }
set N4f043200 [stack 0]
    Dot {
     name Dot5
     xpos 350
     ypos -635
    }
    Dot {
     name Dot7
     xpos 350
     ypos -365
    }
push $N4f043200
    Dot {
     name Dot1
     xpos 572
     ypos -635
    }
    TimeBlur {
     divisions 2
     shutter {{(parent.decimal-(floor(parent.decimal)))*2}}
     shutteroffset start
     shuttercustomoffset 0
     name TimeBlur1
     xpos 538
     ypos -558
    }
    Dot {
     name Dot2
     xpos 572
     ypos -490
    }
push $N4f043200
    TimeBlur {
     divisions 2
     shutter {{parent.decimal*2}}
     shutteroffset start
     shuttercustomoffset 0
     name TimeBlur8
     xpos 426
     ypos -556
    }
    Switch {
     inputs 2
     which {{parent.decimal<0}}
     name Switch1
     xpos 426
     ypos -494
    }
    Multiply {
     value {{parent.TimeBlur8.divisions}}
     name Multiply6
     xpos 426
     ypos -436
    }
    Merge2 {
     inputs 2
     operation from
     name Merge6
     xpos 426
     ypos -369
    }
set N4f085140 [stack 0]
    Output {
     name Output1
     xpos 426
     ypos -221
    }
push $N4f085140
push $N4f085140
    Viewer {
     inputs 2
     frame_range 1-100
     name Viewer1
     xpos 675
     ypos -246
    }
   end_group
   NoTimeBlur {
    name NoTimeBlur1
    xpos -283
    ypos -779
   }
   Transform {
    scale {{0.05+(0.05*(((parent.DecimalTimeOffset13.decimal-0.5)*2)*ScaleVariationSmoke))}}
    center {{root.width/2 x1015 2304} {root.height/2}}
    shutteroffset centred
    name Transform44
    xpos -283
    ypos -152
   }
   Card3D {
    inputs 3
    rot_order ZYX
    translate {0 0 0}
    rotate {90 0 0}
    shutteroffset centred
    name cCard3D25
    tile_color 0x7b1d1dff
    xpos -283
    ypos 11
    addUserKnob {20 User l parent}
    addUserKnob {22 python_button l "set parent" t "select parent node, and press this button to set the selected node as parent" +INVISIBLE T "n = nuke.selectedNode()\['name'].getValue()\nnuke.thisNode()\['string'].setValue(n)" +STARTLINE}
    addUserKnob {1 string l parent +INVISIBLE}
    string null
    addUserKnob {3 ref l "ref frame"}
    ref 1015
   }
   Transform {
    translate {{"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].translate.x(ref)\}]"} {"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].translate.y(ref)\}]"}}
    rotate {{"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].rotate-\[value parent_gun].rotate(ref)\}]"}}
    scale {{"\[if \{\[value parent_gun]==\"null\"\} \{return 1\} \{return 1+(\[value parent_gun].scale-\[value parent_gun].scale(ref))\}]"}}
    center {{"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].center.x(ref)\}]"} {"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].center.y(ref)\}]"}}
    name Transform_GUNMatchMove37
    xpos -283
    ypos 126
    addUserKnob {20 User l parent}
    addUserKnob {3 ref}
    ref {{parent.CTimeOffset.ref}}
   }
   Transform {
    translate {{"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].translate.x-\[value parent_env].translate.x(ref)\}]"} {"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].translate.y-\[value parent_env].translate.y(ref)\}]"}}
    rotate {{"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].rotate-\[value parent_env].rotate(ref)\}]"}}
    scale {{"\[if \{\[value parent_gun]==\"null\"\} \{return 1\} \{return 1+(\[value parent_env].scale-\[value parent_env].scale(ref))\}]"}}
    center {{"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].center.x(ref)\}]"} {"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].center.y(ref)\}]"}}
    motionblur 0.2
    shutter {{SmokeMB*0.5}}
    shutteroffset centred
    name Transform_ENVMatchMove37
    label "\n"
    xpos -283
    ypos 255
    addUserKnob {20 User l parent}
    addUserKnob {3 ref}
    ref {{parent.CTimeOffset.ref}}
   }
   Transform {
    translate {{"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return -((root.width/2)-(\[value parent_gun].center.x(1)+\[value parent_gun].translate.x(1)))\}]"} {"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return -((root.height/2)-(\[value parent_gun].center.y(1)+\[value parent_gun].translate.y(1)))\}]"}}
    name Transform_GUNMatchMove6
    label "alignment correction"
    xpos -283
    ypos 344
    addUserKnob {20 User l parent}
    addUserKnob {22 python_button l "set parent" t "select parent node, and press this button to set the selected node as parent" T "n = nuke.selectedNode()\['name'].getValue()\nnuke.thisNode()\['string'].setValue(n)" +STARTLINE}
    addUserKnob {1 string l parent}
    string Transform_MatchMove10
    addUserKnob {3 ref +INVISIBLE}
    ref {{parent.cCard3D_8.ref}}
   }
   Multiply {
    value {{math_matrix.result_y_smoke(parent.CTimeOffset.ref)}}
    name Angle_reveal_top1
    label TOP
    xpos -283
    ypos 403
   }
   Remove {
    operation keep
    channels rgb
    name Remove1
    xpos -283
    ypos 514
   }
push 0
   Switch {
    inputs 2
    which {{parent.Angle_reveal_top1.value>0.001}}
    name Switch1
    xpos -283
    ypos 660
   }
   Dot {
    name Dot82
    xpos -249
    ypos 705
   }
push 0
push $N4f0038e0
push 0
   Input {
    inputs 0
    name front
    xpos -436
    ypos -1243
    number 2
   }
   TimeOffset {
    time_offset {{"shot_\[value shotnmbr]==0 ? 0 : shot_\[value shotnmbr]-1"}}
    time ""
    name CTimeOffset2
    label "shot: \[value shotnmbr]\non frame \[value time_offset]"
    xpos -436
    ypos -925
    addUserKnob {20 User}
    addUserKnob {3 shotnmbr l "shot "}
    shotnmbr {{shotcount}}
    addUserKnob {3 ref}
    ref {{time_offset+1}}
   }
   Group {
    name DecimalTimeOffset2
    tile_color 0xafa35dff
    label "random asset"
    note_font "Bitstream Vera Sans Bold"
    xpos -436
    ypos -842
    addUserKnob {20 User}
    addUserKnob {7 decimal l "time offset (decimal)"}
    decimal {{random(shotcount*seed)}}
    addUserKnob {26 ""}
    addUserKnob {26 _1 l "" +STARTLINE T "Chris Fryer | 2020\nupdated by Yorben Otto | 2024"}
   }
    Input {
     inputs 0
     name Input1
     xpos 426
     ypos -793
    }
    TimeOffset {
     time_offset {{(-floor(parent.decimal))*(DecimalTimeOffset2.decimal<0)}}
     time ""
     name TimeOffset1
     xpos 426
     ypos -675
    }
    Dot {
     name Dot6
     xpos 460
     ypos -635
    }
set N4f3d1020 [stack 0]
    Dot {
     name Dot5
     xpos 350
     ypos -635
    }
    Dot {
     name Dot7
     xpos 350
     ypos -365
    }
push $N4f3d1020
    Dot {
     name Dot1
     xpos 572
     ypos -635
    }
    TimeBlur {
     divisions 2
     shutter {{(parent.decimal-(floor(parent.decimal)))*2}}
     shutteroffset start
     shuttercustomoffset 0
     name TimeBlur1
     xpos 538
     ypos -558
    }
    Dot {
     name Dot2
     xpos 572
     ypos -490
    }
push $N4f3d1020
    TimeBlur {
     divisions 2
     shutter {{parent.decimal*2}}
     shutteroffset start
     shuttercustomoffset 0
     name TimeBlur8
     xpos 426
     ypos -556
    }
    Switch {
     inputs 2
     which {{parent.decimal<0}}
     name Switch1
     xpos 426
     ypos -494
    }
    Multiply {
     value {{parent.TimeBlur8.divisions}}
     name Multiply6
     xpos 426
     ypos -436
    }
    Merge2 {
     inputs 2
     operation from
     name Merge6
     xpos 426
     ypos -369
    }
set N4ae22e70 [stack 0]
    Output {
     name Output1
     xpos 426
     ypos -221
    }
push $N4ae22e70
push $N4ae22e70
    Viewer {
     inputs 2
     frame_range 1-100
     name Viewer1
     xpos 675
     ypos -246
    }
   end_group
   NoTimeBlur {
    name NoTimeBlur5
    xpos -436
    ypos -780
   }
   Transform {
    scale {{0.05+(0.05*(((parent.DecimalTimeOffset13.decimal-0.5)*2)*ScaleVariationSmoke))}}
    center {{root.width/2 x1015 2304} {root.height/2}}
    shutteroffset centred
    name Transform45
    xpos -436
    ypos -151
   }
   Card3D {
    inputs 3
    rot_order ZYX
    translate {0 0 0}
    rotate {0 90 0}
    shutteroffset centred
    name cCard3D26
    tile_color 0x7b1d1dff
    xpos -436
    ypos 15
    addUserKnob {20 User l parent}
    addUserKnob {22 python_button l "set parent" t "select parent node, and press this button to set the selected node as parent" +INVISIBLE T "n = nuke.selectedNode()\['name'].getValue()\nnuke.thisNode()\['string'].setValue(n)" +STARTLINE}
    addUserKnob {1 string l parent +INVISIBLE}
    string null
    addUserKnob {3 ref l "ref frame"}
    ref 1015
   }
   Transform {
    translate {{"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].translate.x(ref)\}]"} {"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].translate.y(ref)\}]"}}
    rotate {{"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].rotate-\[value parent_gun].rotate(ref)\}]"}}
    scale {{"\[if \{\[value parent_gun]==\"null\"\} \{return 1\} \{return 1+(\[value parent_gun].scale-\[value parent_gun].scale(ref))\}]"}}
    center {{"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].center.x(ref)\}]"} {"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].center.y(ref)\}]"}}
    name Transform_GUNMatchMove38
    label "\n"
    xpos -436
    ypos 124
    addUserKnob {20 User l parent}
    addUserKnob {3 ref}
    ref {{parent.CTimeOffset.ref}}
   }
   Transform {
    translate {{"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].translate.x-\[value parent_env].translate.x(ref)\}]"} {"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].translate.y-\[value parent_env].translate.y(ref)\}]"}}
    rotate {{"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].rotate-\[value parent_env].rotate(ref)\}]"}}
    scale {{"\[if \{\[value parent_gun]==\"null\"\} \{return 1\} \{return 1+(\[value parent_env].scale-\[value parent_env].scale(ref))\}]"}}
    center {{"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].center.x(ref)\}]"} {"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].center.y(ref)\}]"}}
    motionblur 0.2
    shutter {{SmokeMB*0.5}}
    shutteroffset centred
    name Transform_ENVMatchMove38
    xpos -436
    ypos 254
    addUserKnob {20 User l parent}
    addUserKnob {3 ref}
    ref {{parent.CTimeOffset.ref}}
   }
   Transform {
    translate {{"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return -((root.width/2)-(\[value parent_gun].center.x(1)+\[value parent_gun].translate.x(1)))\}]"} {"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return -((root.height/2)-(\[value parent_gun].center.y(1)+\[value parent_gun].translate.y(1)))\}]"}}
    name Transform_GUNMatchMove7
    label "alignment correction"
    xpos -436
    ypos 343
    addUserKnob {20 User l parent}
    addUserKnob {22 python_button l "set parent" t "select parent node, and press this button to set the selected node as parent" T "n = nuke.selectedNode()\['name'].getValue()\nnuke.thisNode()\['string'].setValue(n)" +STARTLINE}
    addUserKnob {1 string l parent}
    string Transform_MatchMove10
    addUserKnob {3 ref +INVISIBLE}
    ref {{parent.cCard3D_8.ref}}
   }
   Multiply {
    value {{math_matrix.result_x_smoke(parent.CTimeOffset.ref)}}
    name Angle_reveal_front1
    label FRONT
    xpos -436
    ypos 401
   }
   Remove {
    operation keep
    channels rgb
    name Remove2
    xpos -436
    ypos 511
   }
push 0
   Switch {
    inputs 2
    which {{parent.Angle_reveal_front1.value>0.001}}
    name Switch2
    xpos -436
    ypos 660
   }
   Dot {
    name Dot83
    xpos -402
    ypos 735
   }
   Input {
    inputs 0
    name side
    xpos -130
    ypos -1242
   }
   TimeOffset {
    time_offset {{"shot_\[value shotnmbr]==0 ? 0 : shot_\[value shotnmbr]-1"}}
    time ""
    name CTimeOffset
    label "shot: \[value shotnmbr]\non frame \[value time_offset]"
    xpos -130
    ypos -927
    addUserKnob {20 User}
    addUserKnob {3 shotnmbr l "shot "}
    shotnmbr {{shotcount}}
    addUserKnob {3 ref}
    ref {{time_offset+1}}
   }
   Group {
    name DecimalTimeOffset13
    tile_color 0xafa35dff
    label "random asset"
    note_font "Bitstream Vera Sans Bold"
    xpos -130
    ypos -844
    addUserKnob {20 User}
    addUserKnob {7 decimal l "time offset (decimal)"}
    decimal {{random(shotcount*seed)}}
    addUserKnob {26 ""}
    addUserKnob {26 _1 l "" +STARTLINE T "Chris Fryer | 2020\nupdated by Yorben Otto | 2024"}
   }
    Input {
     inputs 0
     name Input1
     xpos 426
     ypos -793
    }
    TimeOffset {
     time_offset {{(-floor(parent.decimal))*(DecimalTimeOffset13.decimal<0)}}
     time ""
     name TimeOffset1
     xpos 426
     ypos -675
    }
    Dot {
     name Dot6
     xpos 460
     ypos -635
    }
set N4a46edd0 [stack 0]
    Dot {
     name Dot5
     xpos 350
     ypos -635
    }
    Dot {
     name Dot7
     xpos 350
     ypos -365
    }
push $N4a46edd0
    Dot {
     name Dot1
     xpos 572
     ypos -635
    }
    TimeBlur {
     divisions 2
     shutter {{(parent.decimal-(floor(parent.decimal)))*2}}
     shutteroffset start
     shuttercustomoffset 0
     name TimeBlur1
     xpos 538
     ypos -558
    }
    Dot {
     name Dot2
     xpos 572
     ypos -490
    }
push $N4a46edd0
    TimeBlur {
     divisions 2
     shutter {{parent.decimal*2}}
     shutteroffset start
     shuttercustomoffset 0
     name TimeBlur8
     xpos 426
     ypos -556
    }
    Switch {
     inputs 2
     which {{parent.decimal<0}}
     name Switch1
     xpos 426
     ypos -494
    }
    Multiply {
     value {{parent.TimeBlur8.divisions}}
     name Multiply6
     xpos 426
     ypos -436
    }
    Merge2 {
     inputs 2
     operation from
     name Merge6
     xpos 426
     ypos -369
    }
set N4a4b0d10 [stack 0]
    Output {
     name Output1
     xpos 426
     ypos -221
    }
push $N4a4b0d10
push $N4a4b0d10
    Viewer {
     inputs 2
     frame_range 1-100
     name Viewer1
     xpos 675
     ypos -246
    }
   end_group
   NoTimeBlur {
    name NoTimeBlur13
    xpos -130
    ypos -782
   }
   Transform {
    scale {{0.05+(0.05*(((parent.DecimalTimeOffset13.decimal-0.5)*2)*ScaleVariationSmoke))}}
    center {{root.width/2 x1015 2304} {root.height/2}}
    shutteroffset centred
    name Transform46
    xpos -130
    ypos -155
   }
   Card3D {
    translate {{"\[if \{\[exists  parent.parent.parent.input0]\} \{return \[value \[topnode parent.parent.parent.input0].name].translate.x(ref)\} \{return 0\}]"} {"\[if \{\[exists  parent.parent.parent.input0]\} \{return \[value \[topnode parent.parent.parent.input0].name].translate.y(ref)\} \{return 0\}]"} {"\[if \{\[exists  parent.parent.parent.input0]\} \{return \[value \[topnode parent.parent.parent.input0].name].translate.z(ref)\} \{return -1\}]"}}
    rotate {{"\[if \{\[exists  parent.parent.parent.input0]\} \{return \[value \[topnode parent.parent.parent.input0].name].rotate.x(ref)\} \{return 0\}]"} {"\[if \{\[exists  parent.parent.parent.input0]\} \{return \[value \[topnode parent.parent.parent.input0].name].rotate.y(ref)\} \{return 0\}]"} {"\[if \{\[exists  parent.parent.parent.input0]\} \{return \[value \[topnode parent.parent.parent.input0].name].rotate.z(ref)\} \{return 0\}]"}}
    scaling {{"\[if \{\[exists  parent.parent.parent.input0]\} \{return \[value \[topnode parent.parent.parent.input0].name].scaling.x(ref)\} \{return 1\}]"} {"\[if \{\[exists  parent.parent.parent.input0]\} \{return \[value \[topnode parent.parent.parent.input0].name].scaling.y(ref)\} \{return 1\}]"} {"\[if \{\[exists  parent.parent.parent.input0]\} \{return \[value \[topnode parent.parent.parent.input0].name].scaling.z(ref)\} \{return 1\}]"}}
    uniform_scale {{"\[if \{\[exists  parent.parent.parent.input0]\} \{return (\[value \[topnode parent.parent.parent.input0].name].uniform_scale(ref)*25)\} \{return 25\}]"}}
    shutteroffset centred
    name cCard3D_1
    tile_color 0x7b1d1dff
    label "ref frame: \[value ref]"
    xpos -130
    ypos 2
    addUserKnob {20 User l parent}
    addUserKnob {22 python_button l "set parent" t "select parent node, and press this button to set the selected node as parent" +INVISIBLE T "n = nuke.selectedNode()\['name'].getValue()\nnuke.thisNode()\['string'].setValue(n)" +STARTLINE}
    addUserKnob {1 string l parent +INVISIBLE}
    string null
    addUserKnob {3 id l "id number"}
    id {{parent.CTimeOffset.shotnmbr}}
    addUserKnob {3 ref l "ref frame"}
    ref {{parent.CTimeOffset.ref}}
   }
   Transform {
    translate {{"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].translate.x(ref)\}]"} {"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].translate.y(ref)\}]"}}
    rotate {{"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].rotate-\[value parent_gun].rotate(ref)\}]"}}
    scale {{"\[if \{\[value parent_gun]==\"null\"\} \{return 1\} \{return 1+(\[value parent_gun].scale-\[value parent_gun].scale(ref))\}]"}}
    center {{"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].center.x(ref)\}]"} {"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].center.y(ref)\}]"}}
    name Transform_GUNMatchMove39
    label "\n"
    xpos -130
    ypos 124
    addUserKnob {20 User l parent}
    addUserKnob {3 ref}
    ref {{parent.CTimeOffset.ref}}
   }
   Transform {
    translate {{"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].translate.x-\[value parent_env].translate.x(ref)\}]"} {"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].translate.y-\[value parent_env].translate.y(ref)\}]"}}
    rotate {{"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].rotate-\[value parent_env].rotate(ref)\}]"}}
    scale {{"\[if \{\[value parent_gun]==\"null\"\} \{return 1\} \{return 1+(\[value parent_env].scale-\[value parent_env].scale(ref))\}]"}}
    center {{"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].center.x(ref)\}]"} {"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].center.y(ref)\}]"}}
    motionblur 0.2
    shutter {{SmokeMB*0.5}}
    shutteroffset centred
    name Transform_ENVMatchMove39
    xpos -130
    ypos 258
    addUserKnob {20 User l parent}
    addUserKnob {3 ref}
    ref {{parent.CTimeOffset.ref}}
   }
   Transform {
    translate {{"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return -((root.width/2)-(\[value parent_gun].center.x(1)+\[value parent_gun].translate.x(1)))\}]"} {"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return -((root.height/2)-(\[value parent_gun].center.y(1)+\[value parent_gun].translate.y(1)))\}]"}}
    name Transform_GUNMatchMove5
    label "alignment correction"
    xpos -130
    ypos 340
    addUserKnob {20 User l parent}
    addUserKnob {22 python_button l "set parent" t "select parent node, and press this button to set the selected node as parent" T "n = nuke.selectedNode()\['name'].getValue()\nnuke.thisNode()\['string'].setValue(n)" +STARTLINE}
    addUserKnob {1 string l parent}
    string Transform_MatchMove10
    addUserKnob {3 ref +INVISIBLE}
    ref {{parent.cCard3D_8.ref}}
   }
   Multiply {
    value {{math_matrix.result_z_smoke(parent.CTimeOffset.ref)}}
    name Angle_reveal_side1
    label SIDE
    xpos -130
    ypos 404
   }
   Remove {
    operation keep
    channels rgb
    name Remove39
    xpos -130
    ypos 514
   }
push 0
   Switch {
    inputs 2
    which {{parent.Angle_reveal_side1.value>0.001}}
    name Switch3
    xpos -130
    ypos 658
   }
   Merge2 {
    inputs 3+1
    operation max
    Achannels rgb
    Bchannels rgb
    output rgb
    name Merge28
    xpos -130
    ypos 731
   }
   Merge2 {
    inputs 2
    operation plus
    bbox intersection
    Achannels rgb
    Bchannels rgb
    output rgb
    name Merge29
    xpos -130
    ypos 983
   }
   Shuffle2 {
    fromInput1 {{0} B}
    fromInput2 {{0} B}
    mappings "4 rgba.red 0 0 rgba.red 0 0 rgba.green 0 1 rgba.green 0 1 rgba.blue 0 2 rgba.alpha 0 3 rgba.blue 0 2 rgba.blue 0 2"
    name Shuffle1
    xpos -130
    ypos 1021
   }
push 0
   Switch {
    inputs 2
    which {{"shot_\[value count]==0?0:frame>=shot_\[value count]"}}
    name cSwitch_13
    xpos -130
    ypos 1078
    addUserKnob {20 User}
    addUserKnob {3 count}
    count {{parent.CTimeOffset.shotnmbr}}
   }
   Output {
    name Output1
    xpos -130
    ypos 1323
   }
   StickyNote {
    inputs 0
    name StickyNote1
    label "<-- handy to break concatonation?  "
    xpos -39
    ypos 193
   }
  end_group
push $N586971d0
  PostageStamp {
   name Stamp16
   help "Stamps by Adrian Pueyo and Alexey Kuchinski.\nUpdated May 18 2021"
   onCreate "if nuke.GUI:\n    try:\n        import stamps; stamps.wiredOnCreate()\n    except:\n        pass\n"
   knobChanged "import stamps; stamps.wiredKnobChanged()"
   autolabel "nuke.thisNode().knob(\"title\").value()"
   tile_color 0x1000001
   note_font "Bitstream Vera Sans"
   note_font_size 20
   xpos 1544
   ypos -667
   hide_input true
   addUserKnob {20 wired_tab l "Wired Stamp"}
   addUserKnob {26 identifier -STARTLINE +HIDDEN T wired}
   addUserKnob {3 lockCallbacks l "" +STARTLINE +HIDDEN}
   addUserKnob {6 toReconnect -STARTLINE +HIDDEN}
   addUserKnob {1 title l Title: t "Displayed name on the Node Graph for this Stamp and its Anchor.\nIMPORTANT: This is only for display purposes, and is different from the real/internal name of the Stamps."}
   title smoke_FRONT
   addUserKnob {26 prev_title l "" +STARTLINE +HIDDEN T smoke_FRONT}
   addUserKnob {26 tags l Tags: t "Tags of this stamp's Anchor, for information purpose only.\nClick \"show anchor\" to change them." T <i>2D</i>}
   addUserKnob {26 backdrops l Backdrops: t "Labels of backdrop nodes which contain this stamp's Anchor." T "<i><Left>before or after Flare</i>"}
   addUserKnob {26 line1 l "" +STARTLINE}
   addUserKnob {6 postageStamp_show l "postage stamp" t "Enable the postage stamp thumbnail in this node.\nYou're seeing this because the class of this node includes the postage_stamp knob." +STARTLINE}
   addUserKnob {26 anchor_label l Anchor: T " "}
   addUserKnob {22 show_anchor l " show anchor " t "Show the properties panel for this Stamp's Anchor." -STARTLINE T stamps.wiredShowAnchor()}
   addUserKnob {22 zoom_anchor l "zoom anchor" t "Navigate to this Stamp's Anchor on the Node Graph." -STARTLINE T stamps.wiredZoomAnchor()}
   addUserKnob {26 stamps_label l Stamps: T " "}
   addUserKnob {22 zoomNext l " zoom next " t "Navigate to this Stamp's next sibling on the Node Graph." -STARTLINE T stamps.wiredZoomNext()}
   addUserKnob {22 selectSimilar l " select similar " t "Select all similar Stamps to this one on the Node Graph." -STARTLINE T stamps.wiredSelectSimilar()}
   addUserKnob {26 space_1 l "" +STARTLINE T " "}
   addUserKnob {26 reconnect_label l Reconnect: t "Reconnect by the stored Anchor name." T " "}
   addUserKnob {22 reconnect_this l this t "Reconnect this Stamp to its Anchor, by its stored Anchor name." -STARTLINE T "n = nuke.thisNode()\ntry:\n    n.setInput(0,nuke.toNode(n.knob(\"anchor\").value()))\nexcept:\n    nuke.message(\"Unable to reconnect.\")\ntry:\n    import stamps\n    stamps.wiredGetStyle(n)\nexcept:\n    pass\n"}
   addUserKnob {22 reconnect_similar l similar t "Reconnect this Stamp and similar ones to their Anchor, by their stored anchor name." -STARTLINE T stamps.wiredReconnectSimilar()}
   addUserKnob {22 reconnect_all l all t "Reconnect all the Stamps to their Anchors, by their stored anchor names." -STARTLINE T stamps.wiredReconnectAll()}
   addUserKnob {26 space_2 l "" +STARTLINE T " "}
   addUserKnob {20 advanced_reconnection l "Advanced Reconnection" n 2}
   addUserKnob {26 reconnect_by_title_label l "<font color=gold>By Title:" t "Reconnect by searching for a matching title." T " "}
   addUserKnob {22 reconnect_by_title_this l this t "Look for an Anchor that shares this Stamp's title, and connect this Stamp to it.\nIMPORTANT: Use this carefully, and only when the normal reconnection doesn't work." -STARTLINE T stamps.wiredReconnectByTitle()}
   addUserKnob {22 reconnect_by_title_similar l similar t "Look for an Anchor that shares this Stamp's title, and connect this Stamp and similar ones to it.\nIMPORTANT: Use this carefully, and only when the normal reconnection doesn't work." -STARTLINE T stamps.wiredReconnectByTitleSimilar()}
   addUserKnob {22 reconnect_by_title_selected l selected t "For each Stamp selected, look for an Anchor that shares its title, and connect to it.\nIMPORTANT: Use this carefully, and only when the normal reconnection doesn't work." -STARTLINE T stamps.wiredReconnectByTitleSelected()}
   addUserKnob {26 reconnect_by_selection_label l "<font color=orangered>By Selection:" t "Force reconnect to a selected Anchor." T " "}
   addUserKnob {22 reconnect_by_selection_this l this t "Force reconnect this Stamp to a selected Anchor, whatever its name or title.\nIMPORTANT: Use this carefully, and only when the normal reconnection doesn't work." -STARTLINE T stamps.wiredReconnectBySelection()}
   addUserKnob {22 reconnect_by_selection_similar l similar t "Force reconnect this Stamp and similar ones to a selected Anchor, whatever its name or title.\nIMPORTANT: Use this carefully, and only when the normal reconnection doesn't work." -STARTLINE T stamps.wiredReconnectBySelectionSimilar()}
   addUserKnob {22 reconnect_by_selection_selected l selected t "Force reconnect all selected Stamps to an also selected Anchor, whatever its name or title.\nIMPORTANT: Use this carefully, and only when the normal reconnection doesn't work." -STARTLINE T stamps.wiredReconnectBySelectionSelected()}
   addUserKnob {1 anchor l Anchor}
   anchor Anchor_220a2be282
   addUserKnob {6 auto_reconnect_by_title l "<font color=#ED9977>&nbsp; auto-reconnect by title" t "When creating this stamp again (like on copy-paste), auto-reconnect it by title instead of doing it by the saved anchor's name, and auto-turn this off immediately.\nIMPORTANT: Should be off by default. Only use this for setting up templates." +STARTLINE}
   addUserKnob {26 line2 l "" +STARTLINE}
   addUserKnob {22 buttonHelp l Help -STARTLINE T stamps.showHelp()}
   addUserKnob {26 version l " " t "Stamps by Adrian Pueyo and Alexey Kuchinski.\nUpdated May 18 2021." -STARTLINE T "<a href=\"http://www.nukepedia.com/gizmos/other/stamps\" style=\"color:#666;text-decoration: none;\"><span style=\"color:#666\"> <big>Stamps v1.1</big></b></a>"}
  }
  Dot {
   name Dot11
   xpos 1578
   ypos -619
  }
push $N58d70c10
  PostageStamp {
   name Stamp17
   help "Stamps by Adrian Pueyo and Alexey Kuchinski.\nUpdated May 18 2021"
   onCreate "if nuke.GUI:\n    try:\n        import stamps; stamps.wiredOnCreate()\n    except:\n        pass\n"
   knobChanged "import stamps; stamps.wiredKnobChanged()"
   autolabel "nuke.thisNode().knob(\"title\").value()"
   tile_color 0x1000001
   note_font "Bitstream Vera Sans"
   note_font_size 20
   xpos 1669
   ypos -667
   hide_input true
   addUserKnob {20 wired_tab l "Wired Stamp"}
   addUserKnob {26 identifier -STARTLINE +HIDDEN T wired}
   addUserKnob {3 lockCallbacks l "" +STARTLINE +HIDDEN}
   addUserKnob {6 toReconnect -STARTLINE +HIDDEN}
   addUserKnob {1 title l Title: t "Displayed name on the Node Graph for this Stamp and its Anchor.\nIMPORTANT: This is only for display purposes, and is different from the real/internal name of the Stamps."}
   title smoke_TOP
   addUserKnob {26 prev_title l "" +STARTLINE +HIDDEN T smoke_TOP}
   addUserKnob {26 tags l Tags: t "Tags of this stamp's Anchor, for information purpose only.\nClick \"show anchor\" to change them." T <i>2D</i>}
   addUserKnob {26 backdrops l Backdrops: t "Labels of backdrop nodes which contain this stamp's Anchor." T "<i><Left>before or after Flare</i>"}
   addUserKnob {26 line1 l "" +STARTLINE}
   addUserKnob {6 postageStamp_show l "postage stamp" t "Enable the postage stamp thumbnail in this node.\nYou're seeing this because the class of this node includes the postage_stamp knob." +STARTLINE}
   addUserKnob {26 anchor_label l Anchor: T " "}
   addUserKnob {22 show_anchor l " show anchor " t "Show the properties panel for this Stamp's Anchor." -STARTLINE T stamps.wiredShowAnchor()}
   addUserKnob {22 zoom_anchor l "zoom anchor" t "Navigate to this Stamp's Anchor on the Node Graph." -STARTLINE T stamps.wiredZoomAnchor()}
   addUserKnob {26 stamps_label l Stamps: T " "}
   addUserKnob {22 zoomNext l " zoom next " t "Navigate to this Stamp's next sibling on the Node Graph." -STARTLINE T stamps.wiredZoomNext()}
   addUserKnob {22 selectSimilar l " select similar " t "Select all similar Stamps to this one on the Node Graph." -STARTLINE T stamps.wiredSelectSimilar()}
   addUserKnob {26 space_1 l "" +STARTLINE T " "}
   addUserKnob {26 reconnect_label l Reconnect: t "Reconnect by the stored Anchor name." T " "}
   addUserKnob {22 reconnect_this l this t "Reconnect this Stamp to its Anchor, by its stored Anchor name." -STARTLINE T "n = nuke.thisNode()\ntry:\n    n.setInput(0,nuke.toNode(n.knob(\"anchor\").value()))\nexcept:\n    nuke.message(\"Unable to reconnect.\")\ntry:\n    import stamps\n    stamps.wiredGetStyle(n)\nexcept:\n    pass\n"}
   addUserKnob {22 reconnect_similar l similar t "Reconnect this Stamp and similar ones to their Anchor, by their stored anchor name." -STARTLINE T stamps.wiredReconnectSimilar()}
   addUserKnob {22 reconnect_all l all t "Reconnect all the Stamps to their Anchors, by their stored anchor names." -STARTLINE T stamps.wiredReconnectAll()}
   addUserKnob {26 space_2 l "" +STARTLINE T " "}
   addUserKnob {20 advanced_reconnection l "Advanced Reconnection" n 2}
   addUserKnob {26 reconnect_by_title_label l "<font color=gold>By Title:" t "Reconnect by searching for a matching title." T " "}
   addUserKnob {22 reconnect_by_title_this l this t "Look for an Anchor that shares this Stamp's title, and connect this Stamp to it.\nIMPORTANT: Use this carefully, and only when the normal reconnection doesn't work." -STARTLINE T stamps.wiredReconnectByTitle()}
   addUserKnob {22 reconnect_by_title_similar l similar t "Look for an Anchor that shares this Stamp's title, and connect this Stamp and similar ones to it.\nIMPORTANT: Use this carefully, and only when the normal reconnection doesn't work." -STARTLINE T stamps.wiredReconnectByTitleSimilar()}
   addUserKnob {22 reconnect_by_title_selected l selected t "For each Stamp selected, look for an Anchor that shares its title, and connect to it.\nIMPORTANT: Use this carefully, and only when the normal reconnection doesn't work." -STARTLINE T stamps.wiredReconnectByTitleSelected()}
   addUserKnob {26 reconnect_by_selection_label l "<font color=orangered>By Selection:" t "Force reconnect to a selected Anchor." T " "}
   addUserKnob {22 reconnect_by_selection_this l this t "Force reconnect this Stamp to a selected Anchor, whatever its name or title.\nIMPORTANT: Use this carefully, and only when the normal reconnection doesn't work." -STARTLINE T stamps.wiredReconnectBySelection()}
   addUserKnob {22 reconnect_by_selection_similar l similar t "Force reconnect this Stamp and similar ones to a selected Anchor, whatever its name or title.\nIMPORTANT: Use this carefully, and only when the normal reconnection doesn't work." -STARTLINE T stamps.wiredReconnectBySelectionSimilar()}
   addUserKnob {22 reconnect_by_selection_selected l selected t "Force reconnect all selected Stamps to an also selected Anchor, whatever its name or title.\nIMPORTANT: Use this carefully, and only when the normal reconnection doesn't work." -STARTLINE T stamps.wiredReconnectBySelectionSelected()}
   addUserKnob {1 anchor l Anchor}
   anchor Anchor_25b668170c
   addUserKnob {6 auto_reconnect_by_title l "<font color=#ED9977>&nbsp; auto-reconnect by title" t "When creating this stamp again (like on copy-paste), auto-reconnect it by title instead of doing it by the saved anchor's name, and auto-turn this off immediately.\nIMPORTANT: Should be off by default. Only use this for setting up templates." +STARTLINE}
   addUserKnob {26 line2 l "" +STARTLINE}
   addUserKnob {22 buttonHelp l Help -STARTLINE T stamps.showHelp()}
   addUserKnob {26 version l " " t "Stamps by Adrian Pueyo and Alexey Kuchinski.\nUpdated May 18 2021." -STARTLINE T "<a href=\"http://www.nukepedia.com/gizmos/other/stamps\" style=\"color:#666;text-decoration: none;\"><span style=\"color:#666\"> <big>Stamps v1.1</big></b></a>"}
  }
push $N56244930
  PostageStamp {
   name Stamp18
   help "Stamps by Adrian Pueyo and Alexey Kuchinski.\nUpdated May 18 2021"
   onCreate "if nuke.GUI:\n    try:\n        import stamps; stamps.wiredOnCreate()\n    except:\n        pass\n"
   knobChanged "import stamps; stamps.wiredKnobChanged()"
   autolabel "nuke.thisNode().knob(\"title\").value()"
   tile_color 0x1000001
   note_font "Bitstream Vera Sans"
   note_font_size 20
   xpos 1787
   ypos -669
   hide_input true
   addUserKnob {20 wired_tab l "Wired Stamp"}
   addUserKnob {26 identifier -STARTLINE +HIDDEN T wired}
   addUserKnob {3 lockCallbacks l "" +STARTLINE +HIDDEN}
   addUserKnob {6 toReconnect -STARTLINE +HIDDEN}
   addUserKnob {1 title l Title: t "Displayed name on the Node Graph for this Stamp and its Anchor.\nIMPORTANT: This is only for display purposes, and is different from the real/internal name of the Stamps."}
   title smoke_SIDE
   addUserKnob {26 prev_title l "" +STARTLINE +HIDDEN T smoke_SIDE}
   addUserKnob {26 tags l Tags: t "Tags of this stamp's Anchor, for information purpose only.\nClick \"show anchor\" to change them." T <i>2D</i>}
   addUserKnob {26 backdrops l Backdrops: t "Labels of backdrop nodes which contain this stamp's Anchor." T "<i><Left>before or after Flare</i>"}
   addUserKnob {26 line1 l "" +STARTLINE}
   addUserKnob {6 postageStamp_show l "postage stamp" t "Enable the postage stamp thumbnail in this node.\nYou're seeing this because the class of this node includes the postage_stamp knob." +STARTLINE}
   addUserKnob {26 anchor_label l Anchor: T " "}
   addUserKnob {22 show_anchor l " show anchor " t "Show the properties panel for this Stamp's Anchor." -STARTLINE T stamps.wiredShowAnchor()}
   addUserKnob {22 zoom_anchor l "zoom anchor" t "Navigate to this Stamp's Anchor on the Node Graph." -STARTLINE T stamps.wiredZoomAnchor()}
   addUserKnob {26 stamps_label l Stamps: T " "}
   addUserKnob {22 zoomNext l " zoom next " t "Navigate to this Stamp's next sibling on the Node Graph." -STARTLINE T stamps.wiredZoomNext()}
   addUserKnob {22 selectSimilar l " select similar " t "Select all similar Stamps to this one on the Node Graph." -STARTLINE T stamps.wiredSelectSimilar()}
   addUserKnob {26 space_1 l "" +STARTLINE T " "}
   addUserKnob {26 reconnect_label l Reconnect: t "Reconnect by the stored Anchor name." T " "}
   addUserKnob {22 reconnect_this l this t "Reconnect this Stamp to its Anchor, by its stored Anchor name." -STARTLINE T "n = nuke.thisNode()\ntry:\n    n.setInput(0,nuke.toNode(n.knob(\"anchor\").value()))\nexcept:\n    nuke.message(\"Unable to reconnect.\")\ntry:\n    import stamps\n    stamps.wiredGetStyle(n)\nexcept:\n    pass\n"}
   addUserKnob {22 reconnect_similar l similar t "Reconnect this Stamp and similar ones to their Anchor, by their stored anchor name." -STARTLINE T stamps.wiredReconnectSimilar()}
   addUserKnob {22 reconnect_all l all t "Reconnect all the Stamps to their Anchors, by their stored anchor names." -STARTLINE T stamps.wiredReconnectAll()}
   addUserKnob {26 space_2 l "" +STARTLINE T " "}
   addUserKnob {20 advanced_reconnection l "Advanced Reconnection" n 2}
   addUserKnob {26 reconnect_by_title_label l "<font color=gold>By Title:" t "Reconnect by searching for a matching title." T " "}
   addUserKnob {22 reconnect_by_title_this l this t "Look for an Anchor that shares this Stamp's title, and connect this Stamp to it.\nIMPORTANT: Use this carefully, and only when the normal reconnection doesn't work." -STARTLINE T stamps.wiredReconnectByTitle()}
   addUserKnob {22 reconnect_by_title_similar l similar t "Look for an Anchor that shares this Stamp's title, and connect this Stamp and similar ones to it.\nIMPORTANT: Use this carefully, and only when the normal reconnection doesn't work." -STARTLINE T stamps.wiredReconnectByTitleSimilar()}
   addUserKnob {22 reconnect_by_title_selected l selected t "For each Stamp selected, look for an Anchor that shares its title, and connect to it.\nIMPORTANT: Use this carefully, and only when the normal reconnection doesn't work." -STARTLINE T stamps.wiredReconnectByTitleSelected()}
   addUserKnob {26 reconnect_by_selection_label l "<font color=orangered>By Selection:" t "Force reconnect to a selected Anchor." T " "}
   addUserKnob {22 reconnect_by_selection_this l this t "Force reconnect this Stamp to a selected Anchor, whatever its name or title.\nIMPORTANT: Use this carefully, and only when the normal reconnection doesn't work." -STARTLINE T stamps.wiredReconnectBySelection()}
   addUserKnob {22 reconnect_by_selection_similar l similar t "Force reconnect this Stamp and similar ones to a selected Anchor, whatever its name or title.\nIMPORTANT: Use this carefully, and only when the normal reconnection doesn't work." -STARTLINE T stamps.wiredReconnectBySelectionSimilar()}
   addUserKnob {22 reconnect_by_selection_selected l selected t "Force reconnect all selected Stamps to an also selected Anchor, whatever its name or title.\nIMPORTANT: Use this carefully, and only when the normal reconnection doesn't work." -STARTLINE T stamps.wiredReconnectBySelectionSelected()}
   addUserKnob {1 anchor l Anchor}
   anchor Anchor_232c9aab88
   addUserKnob {6 auto_reconnect_by_title l "<font color=#ED9977>&nbsp; auto-reconnect by title" t "When creating this stamp again (like on copy-paste), auto-reconnect it by title instead of doing it by the saved anchor's name, and auto-turn this off immediately.\nIMPORTANT: Should be off by default. Only use this for setting up templates." +STARTLINE}
   addUserKnob {26 line2 l "" +STARTLINE}
   addUserKnob {22 buttonHelp l Help -STARTLINE T stamps.showHelp()}
   addUserKnob {26 version l " " t "Stamps by Adrian Pueyo and Alexey Kuchinski.\nUpdated May 18 2021." -STARTLINE T "<a href=\"http://www.nukepedia.com/gizmos/other/stamps\" style=\"color:#666;text-decoration: none;\"><span style=\"color:#666\"> <big>Stamps v1.1</big></b></a>"}
  }
  Dot {
   name Dot12
   xpos 1821
   ypos -619
  }
  Group {
   inputs 3
   name gunshot6
   label "shot: \[value shotcount]\non frame: \[value shotstart]\n"
   xpos 1669
   ypos -592
   addUserKnob {20 User}
   addUserKnob {3 shotcount l shot}
   shotcount 6
   addUserKnob {3 shotstart l frame +INVISIBLE}
   shotstart {{"shotcount==0 ? 0 : shot\[value shotcount]-1" i}}
  }
   BackdropNode {
    inputs 0
    name BackdropNode19
    knobChanged "try:\n    listenedKnobs = \['text', 'position', 'name']\n    node = nuke.thisNode()\n    name = node.knob('name').value()\n    text = node.knob('text').value()\n    position = node.knob('position').value()\n    position = \"<\" + position + \">\"\n    label = node.knob('label').value()\n    \n    if nuke.thisKnob().name() in listenedKnobs:\n        if text == \"\":\n            if node.knob('position').value() == \"left\":\n                node.knob('label').setValue()\n            else:\n                node.knob('label').setValue(position + name)\n        else:\n            if node.knob('position').value() == \"left\":\n                node.knob('label').setValue(text)\n            else:\n                node.knob('label').setValue(position + text)\n                \n    elif nuke.thisKnob().name() == 'font_size':\n        fontSize = node.knob('font_size').value()\n        node.knob('note_font_size').setValue(fontSize)\nexcept:\n    pass"
    tile_color 0x232323ff
    label "<Left><h2> Gunshot"
    note_font_size 31.5
    xpos -693
    ypos -554
    bdwidth 876
    bdheight 1682
    addUserKnob {20 F_VFX l BackdropNode}
    addUserKnob {43 text l Text}
    text "<h2> Gunshot"
    addUserKnob {7 font_size l "Font Size" R 10 100}
    font_size 31.5
    addUserKnob {4 position l "" -STARTLINE M {Left Center}}
    addUserKnob {26 S01 l " " T " "}
    addUserKnob {22 grow l " <img src=\"F_scalep.png\">" -STARTLINE T "n=nuke.thisNode()\n\ndef grow(node=None,step=50):\n    try:\n        if not node:\n            n=nuke.selectedNode()\n        else:\n            n=node\n            n\['xpos'].setValue(n\['xpos'].getValue()-step)\n            n\['ypos'].setValue(n\['ypos'].getValue()-step)\n            n\['bdwidth'].setValue(n\['bdwidth'].getValue()+step*2)\n            n\['bdheight'].setValue(n\['bdheight'].getValue()+step*2)\n    except:\n        pass\ngrow(n,50)"}
    addUserKnob {22 shrink l " <img src=\"F_scalem.png\">" -STARTLINE T "n=nuke.thisNode()\n\ndef shrink(node=None,step=50):\n    try:\n        if not node:\n            n=nuke.selectedNode()\n        else:\n            n=node\n            n\['xpos'].setValue(n\['xpos'].getValue()+step)\n            n\['ypos'].setValue(n\['ypos'].getValue()+step)\n            n\['bdwidth'].setValue(n\['bdwidth'].getValue()-step*2)\n            n\['bdheight'].setValue(n\['bdheight'].getValue()-step*2)\n    except:\n        pass\nshrink(n,50)"}
    addUserKnob {22 colorandom l " <img src=\"ColorBars.png\">" -STARTLINE T "import colorsys, random\nn=nuke.thisNode()\nR,G,B= colorsys.hsv_to_rgb(random.random(),.1+random.random()*.15,.15+random.random()*.15)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ) )"}
    addUserKnob {22 darkgrey l "<font color=\"#232323\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.0, 0.0, 0.14]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 lightgrey l "<font color=\"#383838\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.0, 0.0, 0.22]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 red l "<font color=\"#8c3838\" size=6>■</font>" T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.0, 0.6, 0.55]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n" +STARTLINE}
    addUserKnob {22 orange l "<font color=\"#b28e59\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.1, 0.5, 0.7]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 yellow l "<font color=\"#ccc766\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.16, 0.5, 0.8]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 green l "<font color=\"#5d995b\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.33, 0.4, 0.6]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 cyan l "<font color=\"#72998f\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.46, 0.25, 0.6]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 blue l "<font color=\"#59687f\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.6, 0.3, 0.5]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 darkblue l "<font color=\"#63628c\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.67, 0.3, 0.55]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 magenta l "<font color=\"#927a99\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.8, 0.2, 0.6]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 pink l "<font color=\"#997a89\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.92, 0.2, 0.6]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {26 S02 l " " T " "}
    addUserKnob {26 Ftools l "" +STARTLINE T "<font color=\"#1C1C1C\"> v1.2 - Franklin VFX - 2018"}
   }
   BackdropNode {
    inputs 0
    name BackdropNode2
    knobChanged "try:\n    listenedKnobs = \['text', 'position', 'name']\n    node = nuke.thisNode()\n    name = node.knob('name').value()\n    text = node.knob('text').value()\n    position = node.knob('position').value()\n    position = \"<\" + position + \">\"\n    label = node.knob('label').value()\n    \n    if nuke.thisKnob().name() in listenedKnobs:\n        if text == \"\":\n            if node.knob('position').value() == \"left\":\n                node.knob('label').setValue()\n            else:\n                node.knob('label').setValue(position + name)\n        else:\n            if node.knob('position').value() == \"left\":\n                node.knob('label').setValue(text)\n            else:\n                node.knob('label').setValue(position + text)\n                \n    elif nuke.thisKnob().name() == 'font_size':\n        fontSize = node.knob('font_size').value()\n        node.knob('note_font_size').setValue(fontSize)\nexcept:\n    pass"
    tile_color 0x927a99ff
    note_font_size 50
    xpos -473
    ypos -221
    bdwidth 435
    bdheight 786
    z_order 1
    addUserKnob {20 F_VFX l BackdropNode}
    addUserKnob {43 text l Text}
    addUserKnob {7 font_size l "Font Size" R 10 100}
    font_size 50
    addUserKnob {4 position l "" -STARTLINE M {Left Center}}
    addUserKnob {26 S01 l " " T " "}
    addUserKnob {22 grow l " <img src=\"F_scalep.png\">" -STARTLINE T "n=nuke.thisNode()\n\ndef grow(node=None,step=50):\n    try:\n        if not node:\n            n=nuke.selectedNode()\n        else:\n            n=node\n            n\['xpos'].setValue(n\['xpos'].getValue()-step)\n            n\['ypos'].setValue(n\['ypos'].getValue()-step)\n            n\['bdwidth'].setValue(n\['bdwidth'].getValue()+step*2)\n            n\['bdheight'].setValue(n\['bdheight'].getValue()+step*2)\n    except:\n        pass\ngrow(n,50)"}
    addUserKnob {22 shrink l " <img src=\"F_scalem.png\">" -STARTLINE T "n=nuke.thisNode()\n\ndef shrink(node=None,step=50):\n    try:\n        if not node:\n            n=nuke.selectedNode()\n        else:\n            n=node\n            n\['xpos'].setValue(n\['xpos'].getValue()+step)\n            n\['ypos'].setValue(n\['ypos'].getValue()+step)\n            n\['bdwidth'].setValue(n\['bdwidth'].getValue()-step*2)\n            n\['bdheight'].setValue(n\['bdheight'].getValue()-step*2)\n    except:\n        pass\nshrink(n,50)"}
    addUserKnob {22 colorandom l " <img src=\"ColorBars.png\">" -STARTLINE T "import colorsys, random\nn=nuke.thisNode()\nR,G,B= colorsys.hsv_to_rgb(random.random(),.1+random.random()*.15,.15+random.random()*.15)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ) )"}
    addUserKnob {22 darkgrey l "<font color=\"#232323\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.0, 0.0, 0.14]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 lightgrey l "<font color=\"#383838\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.0, 0.0, 0.22]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 red l "<font color=\"#8c3838\" size=6>■</font>" T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.0, 0.6, 0.55]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n" +STARTLINE}
    addUserKnob {22 orange l "<font color=\"#b28e59\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.1, 0.5, 0.7]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 yellow l "<font color=\"#ccc766\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.16, 0.5, 0.8]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 green l "<font color=\"#5d995b\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.33, 0.4, 0.6]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 cyan l "<font color=\"#72998f\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.46, 0.25, 0.6]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 blue l "<font color=\"#59687f\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.6, 0.3, 0.5]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 darkblue l "<font color=\"#63628c\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.67, 0.3, 0.55]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 magenta l "<font color=\"#927a99\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.8, 0.2, 0.6]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 pink l "<font color=\"#997a89\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.92, 0.2, 0.6]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {26 S02 l " " T " "}
    addUserKnob {26 Ftools l "" +STARTLINE T "<font color=\"#1C1C1C\"> v1.2 - Franklin VFX - 2018"}
   }
   Constant {
    inputs 0
    channels rgb
    name Constant13
    xpos -643
    ypos 714
   }
   AdjBBox {
    numpixels {{size_bbox}}
    name AdjBBox13
    xpos -643
    ypos 849
   }
   Dot {
    name Dot78
    xpos -609
    ypos 987
   }
   Axis3 {
    inputs 0
    useMatrix true
    matrix {
        {{parent.cCard3D_1.matrix} {parent.cCard3D_1.matrix} {parent.cCard3D_1.matrix} {parent.cCard3D_1.matrix}}
        {{parent.cCard3D_1.matrix} {parent.cCard3D_1.matrix} {parent.cCard3D_1.matrix} {parent.cCard3D_1.matrix}}
        {{parent.cCard3D_1.matrix} {parent.cCard3D_1.matrix} {parent.cCard3D_1.matrix} {parent.cCard3D_1.matrix}}
        {{parent.cCard3D_1.matrix} {parent.cCard3D_1.matrix} {parent.cCard3D_1.matrix} {parent.cCard3D_1.matrix}}
      }
    name Axis14
    xpos -203
    ypos -90
   }
set N4d88b410 [stack 0]
push 0
   Input {
    inputs 0
    name top
    xpos -283
    ypos -1243
    number 1
   }
   TimeOffset {
    time_offset {{"shot_\[value shotnmbr]==0 ? 0 : shot_\[value shotnmbr]-1"}}
    time ""
    name CTimeOffset1
    label "shot: \[value shotnmbr]\non frame \[value time_offset]"
    xpos -283
    ypos -924
    addUserKnob {20 User}
    addUserKnob {3 shotnmbr l "shot "}
    shotnmbr {{shotcount}}
    addUserKnob {3 ref}
    ref {{time_offset+1}}
   }
   Group {
    name DecimalTimeOffset1
    tile_color 0xafa35dff
    label "random asset"
    note_font "Bitstream Vera Sans Bold"
    xpos -283
    ypos -841
    addUserKnob {20 User}
    addUserKnob {7 decimal l "time offset (decimal)"}
    decimal {{random(shotcount*seed)}}
    addUserKnob {26 ""}
    addUserKnob {26 _1 l "" +STARTLINE T "Chris Fryer | 2020\nupdated by Yorben Otto | 2024"}
   }
    Input {
     inputs 0
     name Input1
     xpos 426
     ypos -793
    }
    TimeOffset {
     time_offset {{(-floor(parent.decimal))*(DecimalTimeOffset1.decimal<0)}}
     time ""
     name TimeOffset1
     xpos 426
     ypos -675
    }
    Dot {
     name Dot6
     xpos 460
     ypos -635
    }
set N4d8cac70 [stack 0]
    Dot {
     name Dot5
     xpos 350
     ypos -635
    }
    Dot {
     name Dot7
     xpos 350
     ypos -365
    }
push $N4d8cac70
    Dot {
     name Dot1
     xpos 572
     ypos -635
    }
    TimeBlur {
     divisions 2
     shutter {{(parent.decimal-(floor(parent.decimal)))*2}}
     shutteroffset start
     shuttercustomoffset 0
     name TimeBlur1
     xpos 538
     ypos -558
    }
    Dot {
     name Dot2
     xpos 572
     ypos -490
    }
push $N4d8cac70
    TimeBlur {
     divisions 2
     shutter {{parent.decimal*2}}
     shutteroffset start
     shuttercustomoffset 0
     name TimeBlur8
     xpos 426
     ypos -556
    }
    Switch {
     inputs 2
     which {{parent.decimal<0}}
     name Switch1
     xpos 426
     ypos -494
    }
    Multiply {
     value {{parent.TimeBlur8.divisions}}
     name Multiply6
     xpos 426
     ypos -436
    }
    Merge2 {
     inputs 2
     operation from
     name Merge6
     xpos 426
     ypos -369
    }
set N4ee1cad0 [stack 0]
    Output {
     name Output1
     xpos 426
     ypos -221
    }
push $N4ee1cad0
push $N4ee1cad0
    Viewer {
     inputs 2
     frame_range 1-100
     name Viewer1
     xpos 675
     ypos -246
    }
   end_group
   NoTimeBlur {
    name NoTimeBlur1
    xpos -283
    ypos -779
   }
   Transform {
    scale {{0.05+(0.05*(((parent.DecimalTimeOffset13.decimal-0.5)*2)*ScaleVariationSmoke))}}
    center {{root.width/2 x1015 2304} {root.height/2}}
    shutteroffset centred
    name Transform44
    xpos -283
    ypos -152
   }
   Card3D {
    inputs 3
    rot_order ZYX
    translate {0 0 0}
    rotate {90 0 0}
    shutteroffset centred
    name cCard3D25
    tile_color 0x7b1d1dff
    xpos -283
    ypos 11
    addUserKnob {20 User l parent}
    addUserKnob {22 python_button l "set parent" t "select parent node, and press this button to set the selected node as parent" +INVISIBLE T "n = nuke.selectedNode()\['name'].getValue()\nnuke.thisNode()\['string'].setValue(n)" +STARTLINE}
    addUserKnob {1 string l parent +INVISIBLE}
    string null
    addUserKnob {3 ref l "ref frame"}
    ref 1015
   }
   Transform {
    translate {{"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].translate.x(ref)\}]"} {"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].translate.y(ref)\}]"}}
    rotate {{"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].rotate-\[value parent_gun].rotate(ref)\}]"}}
    scale {{"\[if \{\[value parent_gun]==\"null\"\} \{return 1\} \{return 1+(\[value parent_gun].scale-\[value parent_gun].scale(ref))\}]"}}
    center {{"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].center.x(ref)\}]"} {"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].center.y(ref)\}]"}}
    name Transform_GUNMatchMove37
    xpos -283
    ypos 126
    addUserKnob {20 User l parent}
    addUserKnob {3 ref}
    ref {{parent.CTimeOffset.ref}}
   }
   Transform {
    translate {{"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].translate.x-\[value parent_env].translate.x(ref)\}]"} {"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].translate.y-\[value parent_env].translate.y(ref)\}]"}}
    rotate {{"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].rotate-\[value parent_env].rotate(ref)\}]"}}
    scale {{"\[if \{\[value parent_gun]==\"null\"\} \{return 1\} \{return 1+(\[value parent_env].scale-\[value parent_env].scale(ref))\}]"}}
    center {{"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].center.x(ref)\}]"} {"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].center.y(ref)\}]"}}
    motionblur 0.2
    shutter {{SmokeMB*0.5}}
    shutteroffset centred
    name Transform_ENVMatchMove37
    label "\n"
    xpos -283
    ypos 255
    addUserKnob {20 User l parent}
    addUserKnob {3 ref}
    ref {{parent.CTimeOffset.ref}}
   }
   Transform {
    translate {{"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return -((root.width/2)-(\[value parent_gun].center.x(1)+\[value parent_gun].translate.x(1)))\}]"} {"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return -((root.height/2)-(\[value parent_gun].center.y(1)+\[value parent_gun].translate.y(1)))\}]"}}
    name Transform_GUNMatchMove6
    label "alignment correction"
    xpos -283
    ypos 344
    addUserKnob {20 User l parent}
    addUserKnob {22 python_button l "set parent" t "select parent node, and press this button to set the selected node as parent" T "n = nuke.selectedNode()\['name'].getValue()\nnuke.thisNode()\['string'].setValue(n)" +STARTLINE}
    addUserKnob {1 string l parent}
    string Transform_MatchMove10
    addUserKnob {3 ref +INVISIBLE}
    ref {{parent.cCard3D_8.ref}}
   }
   Multiply {
    value {{math_matrix.result_y_smoke(parent.CTimeOffset.ref)}}
    name Angle_reveal_top1
    label TOP
    xpos -283
    ypos 403
   }
   Remove {
    operation keep
    channels rgb
    name Remove1
    xpos -283
    ypos 514
   }
push 0
   Switch {
    inputs 2
    which {{parent.Angle_reveal_top1.value>0.001}}
    name Switch1
    xpos -283
    ypos 660
   }
   Dot {
    name Dot82
    xpos -249
    ypos 705
   }
push 0
push $N4d88b410
push 0
   Input {
    inputs 0
    name front
    xpos -436
    ypos -1243
    number 2
   }
   TimeOffset {
    time_offset {{"shot_\[value shotnmbr]==0 ? 0 : shot_\[value shotnmbr]-1"}}
    time ""
    name CTimeOffset2
    label "shot: \[value shotnmbr]\non frame \[value time_offset]"
    xpos -436
    ypos -925
    addUserKnob {20 User}
    addUserKnob {3 shotnmbr l "shot "}
    shotnmbr {{shotcount}}
    addUserKnob {3 ref}
    ref {{time_offset+1}}
   }
   Group {
    name DecimalTimeOffset2
    tile_color 0xafa35dff
    label "random asset"
    note_font "Bitstream Vera Sans Bold"
    xpos -436
    ypos -842
    addUserKnob {20 User}
    addUserKnob {7 decimal l "time offset (decimal)"}
    decimal {{random(shotcount*seed)}}
    addUserKnob {26 ""}
    addUserKnob {26 _1 l "" +STARTLINE T "Chris Fryer | 2020\nupdated by Yorben Otto | 2024"}
   }
    Input {
     inputs 0
     name Input1
     xpos 426
     ypos -793
    }
    TimeOffset {
     time_offset {{(-floor(parent.decimal))*(DecimalTimeOffset2.decimal<0)}}
     time ""
     name TimeOffset1
     xpos 426
     ypos -675
    }
    Dot {
     name Dot6
     xpos 460
     ypos -635
    }
set N49f689d0 [stack 0]
    Dot {
     name Dot5
     xpos 350
     ypos -635
    }
    Dot {
     name Dot7
     xpos 350
     ypos -365
    }
push $N49f689d0
    Dot {
     name Dot1
     xpos 572
     ypos -635
    }
    TimeBlur {
     divisions 2
     shutter {{(parent.decimal-(floor(parent.decimal)))*2}}
     shutteroffset start
     shuttercustomoffset 0
     name TimeBlur1
     xpos 538
     ypos -558
    }
    Dot {
     name Dot2
     xpos 572
     ypos -490
    }
push $N49f689d0
    TimeBlur {
     divisions 2
     shutter {{parent.decimal*2}}
     shutteroffset start
     shuttercustomoffset 0
     name TimeBlur8
     xpos 426
     ypos -556
    }
    Switch {
     inputs 2
     which {{parent.decimal<0}}
     name Switch1
     xpos 426
     ypos -494
    }
    Multiply {
     value {{parent.TimeBlur8.divisions}}
     name Multiply6
     xpos 426
     ypos -436
    }
    Merge2 {
     inputs 2
     operation from
     name Merge6
     xpos 426
     ypos -369
    }
set N49faa910 [stack 0]
    Output {
     name Output1
     xpos 426
     ypos -221
    }
push $N49faa910
push $N49faa910
    Viewer {
     inputs 2
     frame_range 1-100
     name Viewer1
     xpos 675
     ypos -246
    }
   end_group
   NoTimeBlur {
    name NoTimeBlur5
    xpos -436
    ypos -780
   }
   Transform {
    scale {{0.05+(0.05*(((parent.DecimalTimeOffset13.decimal-0.5)*2)*ScaleVariationSmoke))}}
    center {{root.width/2 x1015 2304} {root.height/2}}
    shutteroffset centred
    name Transform45
    xpos -436
    ypos -151
   }
   Card3D {
    inputs 3
    rot_order ZYX
    translate {0 0 0}
    rotate {0 90 0}
    shutteroffset centred
    name cCard3D26
    tile_color 0x7b1d1dff
    xpos -436
    ypos 15
    addUserKnob {20 User l parent}
    addUserKnob {22 python_button l "set parent" t "select parent node, and press this button to set the selected node as parent" +INVISIBLE T "n = nuke.selectedNode()\['name'].getValue()\nnuke.thisNode()\['string'].setValue(n)" +STARTLINE}
    addUserKnob {1 string l parent +INVISIBLE}
    string null
    addUserKnob {3 ref l "ref frame"}
    ref 1015
   }
   Transform {
    translate {{"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].translate.x(ref)\}]"} {"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].translate.y(ref)\}]"}}
    rotate {{"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].rotate-\[value parent_gun].rotate(ref)\}]"}}
    scale {{"\[if \{\[value parent_gun]==\"null\"\} \{return 1\} \{return 1+(\[value parent_gun].scale-\[value parent_gun].scale(ref))\}]"}}
    center {{"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].center.x(ref)\}]"} {"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].center.y(ref)\}]"}}
    name Transform_GUNMatchMove38
    label "\n"
    xpos -436
    ypos 124
    addUserKnob {20 User l parent}
    addUserKnob {3 ref}
    ref {{parent.CTimeOffset.ref}}
   }
   Transform {
    translate {{"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].translate.x-\[value parent_env].translate.x(ref)\}]"} {"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].translate.y-\[value parent_env].translate.y(ref)\}]"}}
    rotate {{"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].rotate-\[value parent_env].rotate(ref)\}]"}}
    scale {{"\[if \{\[value parent_gun]==\"null\"\} \{return 1\} \{return 1+(\[value parent_env].scale-\[value parent_env].scale(ref))\}]"}}
    center {{"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].center.x(ref)\}]"} {"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].center.y(ref)\}]"}}
    motionblur 0.2
    shutter {{SmokeMB*0.5}}
    shutteroffset centred
    name Transform_ENVMatchMove38
    xpos -436
    ypos 254
    addUserKnob {20 User l parent}
    addUserKnob {3 ref}
    ref {{parent.CTimeOffset.ref}}
   }
   Transform {
    translate {{"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return -((root.width/2)-(\[value parent_gun].center.x(1)+\[value parent_gun].translate.x(1)))\}]"} {"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return -((root.height/2)-(\[value parent_gun].center.y(1)+\[value parent_gun].translate.y(1)))\}]"}}
    name Transform_GUNMatchMove7
    label "alignment correction"
    xpos -436
    ypos 343
    addUserKnob {20 User l parent}
    addUserKnob {22 python_button l "set parent" t "select parent node, and press this button to set the selected node as parent" T "n = nuke.selectedNode()\['name'].getValue()\nnuke.thisNode()\['string'].setValue(n)" +STARTLINE}
    addUserKnob {1 string l parent}
    string Transform_MatchMove10
    addUserKnob {3 ref +INVISIBLE}
    ref {{parent.cCard3D_8.ref}}
   }
   Multiply {
    value {{math_matrix.result_x_smoke(parent.CTimeOffset.ref)}}
    name Angle_reveal_front1
    label FRONT
    xpos -436
    ypos 401
   }
   Remove {
    operation keep
    channels rgb
    name Remove2
    xpos -436
    ypos 511
   }
push 0
   Switch {
    inputs 2
    which {{parent.Angle_reveal_front1.value>0.001}}
    name Switch2
    xpos -436
    ypos 660
   }
   Dot {
    name Dot83
    xpos -402
    ypos 735
   }
   Input {
    inputs 0
    name side
    xpos -130
    ypos -1242
   }
   TimeOffset {
    time_offset {{"shot_\[value shotnmbr]==0 ? 0 : shot_\[value shotnmbr]-1"}}
    time ""
    name CTimeOffset
    label "shot: \[value shotnmbr]\non frame \[value time_offset]"
    xpos -130
    ypos -927
    addUserKnob {20 User}
    addUserKnob {3 shotnmbr l "shot "}
    shotnmbr {{shotcount}}
    addUserKnob {3 ref}
    ref {{time_offset+1}}
   }
   Group {
    name DecimalTimeOffset13
    tile_color 0xafa35dff
    label "random asset"
    note_font "Bitstream Vera Sans Bold"
    xpos -130
    ypos -844
    addUserKnob {20 User}
    addUserKnob {7 decimal l "time offset (decimal)"}
    decimal {{random(shotcount*seed)}}
    addUserKnob {26 ""}
    addUserKnob {26 _1 l "" +STARTLINE T "Chris Fryer | 2020\nupdated by Yorben Otto | 2024"}
   }
    Input {
     inputs 0
     name Input1
     xpos 426
     ypos -793
    }
    TimeOffset {
     time_offset {{(-floor(parent.decimal))*(DecimalTimeOffset13.decimal<0)}}
     time ""
     name TimeOffset1
     xpos 426
     ypos -675
    }
    Dot {
     name Dot6
     xpos 460
     ypos -635
    }
set N4d606790 [stack 0]
    Dot {
     name Dot5
     xpos 350
     ypos -635
    }
    Dot {
     name Dot7
     xpos 350
     ypos -365
    }
push $N4d606790
    Dot {
     name Dot1
     xpos 572
     ypos -635
    }
    TimeBlur {
     divisions 2
     shutter {{(parent.decimal-(floor(parent.decimal)))*2}}
     shutteroffset start
     shuttercustomoffset 0
     name TimeBlur1
     xpos 538
     ypos -558
    }
    Dot {
     name Dot2
     xpos 572
     ypos -490
    }
push $N4d606790
    TimeBlur {
     divisions 2
     shutter {{parent.decimal*2}}
     shutteroffset start
     shuttercustomoffset 0
     name TimeBlur8
     xpos 426
     ypos -556
    }
    Switch {
     inputs 2
     which {{parent.decimal<0}}
     name Switch1
     xpos 426
     ypos -494
    }
    Multiply {
     value {{parent.TimeBlur8.divisions}}
     name Multiply6
     xpos 426
     ypos -436
    }
    Merge2 {
     inputs 2
     operation from
     name Merge6
     xpos 426
     ypos -369
    }
set N4d6486d0 [stack 0]
    Output {
     name Output1
     xpos 426
     ypos -221
    }
push $N4d6486d0
push $N4d6486d0
    Viewer {
     inputs 2
     frame_range 1-100
     name Viewer1
     xpos 675
     ypos -246
    }
   end_group
   NoTimeBlur {
    name NoTimeBlur13
    xpos -130
    ypos -782
   }
   Transform {
    scale {{0.05+(0.05*(((parent.DecimalTimeOffset13.decimal-0.5)*2)*ScaleVariationSmoke))}}
    center {{root.width/2 x1015 2304} {root.height/2}}
    shutteroffset centred
    name Transform46
    xpos -130
    ypos -155
   }
   Card3D {
    translate {{"\[if \{\[exists  parent.parent.parent.input0]\} \{return \[value \[topnode parent.parent.parent.input0].name].translate.x(ref)\} \{return 0\}]"} {"\[if \{\[exists  parent.parent.parent.input0]\} \{return \[value \[topnode parent.parent.parent.input0].name].translate.y(ref)\} \{return 0\}]"} {"\[if \{\[exists  parent.parent.parent.input0]\} \{return \[value \[topnode parent.parent.parent.input0].name].translate.z(ref)\} \{return -1\}]"}}
    rotate {{"\[if \{\[exists  parent.parent.parent.input0]\} \{return \[value \[topnode parent.parent.parent.input0].name].rotate.x(ref)\} \{return 0\}]"} {"\[if \{\[exists  parent.parent.parent.input0]\} \{return \[value \[topnode parent.parent.parent.input0].name].rotate.y(ref)\} \{return 0\}]"} {"\[if \{\[exists  parent.parent.parent.input0]\} \{return \[value \[topnode parent.parent.parent.input0].name].rotate.z(ref)\} \{return 0\}]"}}
    scaling {{"\[if \{\[exists  parent.parent.parent.input0]\} \{return \[value \[topnode parent.parent.parent.input0].name].scaling.x(ref)\} \{return 1\}]"} {"\[if \{\[exists  parent.parent.parent.input0]\} \{return \[value \[topnode parent.parent.parent.input0].name].scaling.y(ref)\} \{return 1\}]"} {"\[if \{\[exists  parent.parent.parent.input0]\} \{return \[value \[topnode parent.parent.parent.input0].name].scaling.z(ref)\} \{return 1\}]"}}
    uniform_scale {{"\[if \{\[exists  parent.parent.parent.input0]\} \{return (\[value \[topnode parent.parent.parent.input0].name].uniform_scale(ref)*25)\} \{return 25\}]"}}
    shutteroffset centred
    name cCard3D_1
    tile_color 0x7b1d1dff
    label "ref frame: \[value ref]"
    xpos -130
    ypos 2
    addUserKnob {20 User l parent}
    addUserKnob {22 python_button l "set parent" t "select parent node, and press this button to set the selected node as parent" +INVISIBLE T "n = nuke.selectedNode()\['name'].getValue()\nnuke.thisNode()\['string'].setValue(n)" +STARTLINE}
    addUserKnob {1 string l parent +INVISIBLE}
    string null
    addUserKnob {3 id l "id number"}
    id {{parent.CTimeOffset.shotnmbr}}
    addUserKnob {3 ref l "ref frame"}
    ref {{parent.CTimeOffset.ref}}
   }
   Transform {
    translate {{"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].translate.x(ref)\}]"} {"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].translate.y(ref)\}]"}}
    rotate {{"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].rotate-\[value parent_gun].rotate(ref)\}]"}}
    scale {{"\[if \{\[value parent_gun]==\"null\"\} \{return 1\} \{return 1+(\[value parent_gun].scale-\[value parent_gun].scale(ref))\}]"}}
    center {{"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].center.x(ref)\}]"} {"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].center.y(ref)\}]"}}
    name Transform_GUNMatchMove39
    label "\n"
    xpos -130
    ypos 124
    addUserKnob {20 User l parent}
    addUserKnob {3 ref}
    ref {{parent.CTimeOffset.ref}}
   }
   Transform {
    translate {{"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].translate.x-\[value parent_env].translate.x(ref)\}]"} {"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].translate.y-\[value parent_env].translate.y(ref)\}]"}}
    rotate {{"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].rotate-\[value parent_env].rotate(ref)\}]"}}
    scale {{"\[if \{\[value parent_gun]==\"null\"\} \{return 1\} \{return 1+(\[value parent_env].scale-\[value parent_env].scale(ref))\}]"}}
    center {{"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].center.x(ref)\}]"} {"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].center.y(ref)\}]"}}
    motionblur 0.2
    shutter {{SmokeMB*0.5}}
    shutteroffset centred
    name Transform_ENVMatchMove39
    xpos -130
    ypos 258
    addUserKnob {20 User l parent}
    addUserKnob {3 ref}
    ref {{parent.CTimeOffset.ref}}
   }
   Transform {
    translate {{"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return -((root.width/2)-(\[value parent_gun].center.x(1)+\[value parent_gun].translate.x(1)))\}]"} {"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return -((root.height/2)-(\[value parent_gun].center.y(1)+\[value parent_gun].translate.y(1)))\}]"}}
    name Transform_GUNMatchMove5
    label "alignment correction"
    xpos -130
    ypos 340
    addUserKnob {20 User l parent}
    addUserKnob {22 python_button l "set parent" t "select parent node, and press this button to set the selected node as parent" T "n = nuke.selectedNode()\['name'].getValue()\nnuke.thisNode()\['string'].setValue(n)" +STARTLINE}
    addUserKnob {1 string l parent}
    string Transform_MatchMove10
    addUserKnob {3 ref +INVISIBLE}
    ref {{parent.cCard3D_8.ref}}
   }
   Multiply {
    value {{math_matrix.result_z_smoke(parent.CTimeOffset.ref)}}
    name Angle_reveal_side1
    label SIDE
    xpos -130
    ypos 404
   }
   Remove {
    operation keep
    channels rgb
    name Remove39
    xpos -130
    ypos 514
   }
push 0
   Switch {
    inputs 2
    which {{parent.Angle_reveal_side1.value>0.001}}
    name Switch3
    xpos -130
    ypos 658
   }
   Merge2 {
    inputs 3+1
    operation max
    Achannels rgb
    Bchannels rgb
    output rgb
    name Merge28
    xpos -130
    ypos 731
   }
   Merge2 {
    inputs 2
    operation plus
    bbox intersection
    Achannels rgb
    Bchannels rgb
    output rgb
    name Merge29
    xpos -130
    ypos 983
   }
   Shuffle2 {
    fromInput1 {{0} B}
    fromInput2 {{0} B}
    mappings "4 rgba.red 0 0 rgba.red 0 0 rgba.green 0 1 rgba.green 0 1 rgba.blue 0 2 rgba.alpha 0 3 rgba.blue 0 2 rgba.blue 0 2"
    name Shuffle1
    xpos -130
    ypos 1021
   }
push 0
   Switch {
    inputs 2
    which {{"shot_\[value count]==0?0:frame>=shot_\[value count]"}}
    name cSwitch_13
    xpos -130
    ypos 1078
    addUserKnob {20 User}
    addUserKnob {3 count}
    count {{parent.CTimeOffset.shotnmbr}}
   }
   Output {
    name Output1
    xpos -130
    ypos 1323
   }
   StickyNote {
    inputs 0
    name StickyNote1
    label "<-- handy to break concatonation?  "
    xpos -39
    ypos 193
   }
  end_group
push $N586971d0
  PostageStamp {
   name Stamp31
   help "Stamps by Adrian Pueyo and Alexey Kuchinski.\nUpdated May 18 2021"
   onCreate "if nuke.GUI:\n    try:\n        import stamps; stamps.wiredOnCreate()\n    except:\n        pass\n"
   knobChanged "import stamps; stamps.wiredKnobChanged()"
   autolabel "nuke.thisNode().knob(\"title\").value()"
   tile_color 0x1000001
   note_font "Bitstream Vera Sans"
   note_font_size 20
   xpos 3475
   ypos -684
   hide_input true
   addUserKnob {20 wired_tab l "Wired Stamp"}
   addUserKnob {26 identifier -STARTLINE +HIDDEN T wired}
   addUserKnob {3 lockCallbacks l "" +STARTLINE +HIDDEN}
   addUserKnob {6 toReconnect -STARTLINE +HIDDEN}
   addUserKnob {1 title l Title: t "Displayed name on the Node Graph for this Stamp and its Anchor.\nIMPORTANT: This is only for display purposes, and is different from the real/internal name of the Stamps."}
   title smoke_FRONT
   addUserKnob {26 prev_title l "" +STARTLINE +HIDDEN T smoke_FRONT}
   addUserKnob {26 tags l Tags: t "Tags of this stamp's Anchor, for information purpose only.\nClick \"show anchor\" to change them." T <i>2D</i>}
   addUserKnob {26 backdrops l Backdrops: t "Labels of backdrop nodes which contain this stamp's Anchor." T "<i><Left>before or after Flare</i>"}
   addUserKnob {26 line1 l "" +STARTLINE}
   addUserKnob {6 postageStamp_show l "postage stamp" t "Enable the postage stamp thumbnail in this node.\nYou're seeing this because the class of this node includes the postage_stamp knob." +STARTLINE}
   addUserKnob {26 anchor_label l Anchor: T " "}
   addUserKnob {22 show_anchor l " show anchor " t "Show the properties panel for this Stamp's Anchor." -STARTLINE T stamps.wiredShowAnchor()}
   addUserKnob {22 zoom_anchor l "zoom anchor" t "Navigate to this Stamp's Anchor on the Node Graph." -STARTLINE T stamps.wiredZoomAnchor()}
   addUserKnob {26 stamps_label l Stamps: T " "}
   addUserKnob {22 zoomNext l " zoom next " t "Navigate to this Stamp's next sibling on the Node Graph." -STARTLINE T stamps.wiredZoomNext()}
   addUserKnob {22 selectSimilar l " select similar " t "Select all similar Stamps to this one on the Node Graph." -STARTLINE T stamps.wiredSelectSimilar()}
   addUserKnob {26 space_1 l "" +STARTLINE T " "}
   addUserKnob {26 reconnect_label l Reconnect: t "Reconnect by the stored Anchor name." T " "}
   addUserKnob {22 reconnect_this l this t "Reconnect this Stamp to its Anchor, by its stored Anchor name." -STARTLINE T "n = nuke.thisNode()\ntry:\n    n.setInput(0,nuke.toNode(n.knob(\"anchor\").value()))\nexcept:\n    nuke.message(\"Unable to reconnect.\")\ntry:\n    import stamps\n    stamps.wiredGetStyle(n)\nexcept:\n    pass\n"}
   addUserKnob {22 reconnect_similar l similar t "Reconnect this Stamp and similar ones to their Anchor, by their stored anchor name." -STARTLINE T stamps.wiredReconnectSimilar()}
   addUserKnob {22 reconnect_all l all t "Reconnect all the Stamps to their Anchors, by their stored anchor names." -STARTLINE T stamps.wiredReconnectAll()}
   addUserKnob {26 space_2 l "" +STARTLINE T " "}
   addUserKnob {20 advanced_reconnection l "Advanced Reconnection" n 2}
   addUserKnob {26 reconnect_by_title_label l "<font color=gold>By Title:" t "Reconnect by searching for a matching title." T " "}
   addUserKnob {22 reconnect_by_title_this l this t "Look for an Anchor that shares this Stamp's title, and connect this Stamp to it.\nIMPORTANT: Use this carefully, and only when the normal reconnection doesn't work." -STARTLINE T stamps.wiredReconnectByTitle()}
   addUserKnob {22 reconnect_by_title_similar l similar t "Look for an Anchor that shares this Stamp's title, and connect this Stamp and similar ones to it.\nIMPORTANT: Use this carefully, and only when the normal reconnection doesn't work." -STARTLINE T stamps.wiredReconnectByTitleSimilar()}
   addUserKnob {22 reconnect_by_title_selected l selected t "For each Stamp selected, look for an Anchor that shares its title, and connect to it.\nIMPORTANT: Use this carefully, and only when the normal reconnection doesn't work." -STARTLINE T stamps.wiredReconnectByTitleSelected()}
   addUserKnob {26 reconnect_by_selection_label l "<font color=orangered>By Selection:" t "Force reconnect to a selected Anchor." T " "}
   addUserKnob {22 reconnect_by_selection_this l this t "Force reconnect this Stamp to a selected Anchor, whatever its name or title.\nIMPORTANT: Use this carefully, and only when the normal reconnection doesn't work." -STARTLINE T stamps.wiredReconnectBySelection()}
   addUserKnob {22 reconnect_by_selection_similar l similar t "Force reconnect this Stamp and similar ones to a selected Anchor, whatever its name or title.\nIMPORTANT: Use this carefully, and only when the normal reconnection doesn't work." -STARTLINE T stamps.wiredReconnectBySelectionSimilar()}
   addUserKnob {22 reconnect_by_selection_selected l selected t "Force reconnect all selected Stamps to an also selected Anchor, whatever its name or title.\nIMPORTANT: Use this carefully, and only when the normal reconnection doesn't work." -STARTLINE T stamps.wiredReconnectBySelectionSelected()}
   addUserKnob {1 anchor l Anchor}
   anchor Anchor_220a2be282
   addUserKnob {6 auto_reconnect_by_title l "<font color=#ED9977>&nbsp; auto-reconnect by title" t "When creating this stamp again (like on copy-paste), auto-reconnect it by title instead of doing it by the saved anchor's name, and auto-turn this off immediately.\nIMPORTANT: Should be off by default. Only use this for setting up templates." +STARTLINE}
   addUserKnob {26 line2 l "" +STARTLINE}
   addUserKnob {22 buttonHelp l Help -STARTLINE T stamps.showHelp()}
   addUserKnob {26 version l " " t "Stamps by Adrian Pueyo and Alexey Kuchinski.\nUpdated May 18 2021." -STARTLINE T "<a href=\"http://www.nukepedia.com/gizmos/other/stamps\" style=\"color:#666;text-decoration: none;\"><span style=\"color:#666\"> <big>Stamps v1.1</big></b></a>"}
  }
  Dot {
   name Dot21
   xpos 3509
   ypos -636
  }
push $N58d70c10
  PostageStamp {
   name Stamp32
   help "Stamps by Adrian Pueyo and Alexey Kuchinski.\nUpdated May 18 2021"
   onCreate "if nuke.GUI:\n    try:\n        import stamps; stamps.wiredOnCreate()\n    except:\n        pass\n"
   knobChanged "import stamps; stamps.wiredKnobChanged()"
   autolabel "nuke.thisNode().knob(\"title\").value()"
   tile_color 0x1000001
   note_font "Bitstream Vera Sans"
   note_font_size 20
   xpos 3600
   ypos -684
   hide_input true
   addUserKnob {20 wired_tab l "Wired Stamp"}
   addUserKnob {26 identifier -STARTLINE +HIDDEN T wired}
   addUserKnob {3 lockCallbacks l "" +STARTLINE +HIDDEN}
   addUserKnob {6 toReconnect -STARTLINE +HIDDEN}
   addUserKnob {1 title l Title: t "Displayed name on the Node Graph for this Stamp and its Anchor.\nIMPORTANT: This is only for display purposes, and is different from the real/internal name of the Stamps."}
   title smoke_TOP
   addUserKnob {26 prev_title l "" +STARTLINE +HIDDEN T smoke_TOP}
   addUserKnob {26 tags l Tags: t "Tags of this stamp's Anchor, for information purpose only.\nClick \"show anchor\" to change them." T <i>2D</i>}
   addUserKnob {26 backdrops l Backdrops: t "Labels of backdrop nodes which contain this stamp's Anchor." T "<i><Left>before or after Flare</i>"}
   addUserKnob {26 line1 l "" +STARTLINE}
   addUserKnob {6 postageStamp_show l "postage stamp" t "Enable the postage stamp thumbnail in this node.\nYou're seeing this because the class of this node includes the postage_stamp knob." +STARTLINE}
   addUserKnob {26 anchor_label l Anchor: T " "}
   addUserKnob {22 show_anchor l " show anchor " t "Show the properties panel for this Stamp's Anchor." -STARTLINE T stamps.wiredShowAnchor()}
   addUserKnob {22 zoom_anchor l "zoom anchor" t "Navigate to this Stamp's Anchor on the Node Graph." -STARTLINE T stamps.wiredZoomAnchor()}
   addUserKnob {26 stamps_label l Stamps: T " "}
   addUserKnob {22 zoomNext l " zoom next " t "Navigate to this Stamp's next sibling on the Node Graph." -STARTLINE T stamps.wiredZoomNext()}
   addUserKnob {22 selectSimilar l " select similar " t "Select all similar Stamps to this one on the Node Graph." -STARTLINE T stamps.wiredSelectSimilar()}
   addUserKnob {26 space_1 l "" +STARTLINE T " "}
   addUserKnob {26 reconnect_label l Reconnect: t "Reconnect by the stored Anchor name." T " "}
   addUserKnob {22 reconnect_this l this t "Reconnect this Stamp to its Anchor, by its stored Anchor name." -STARTLINE T "n = nuke.thisNode()\ntry:\n    n.setInput(0,nuke.toNode(n.knob(\"anchor\").value()))\nexcept:\n    nuke.message(\"Unable to reconnect.\")\ntry:\n    import stamps\n    stamps.wiredGetStyle(n)\nexcept:\n    pass\n"}
   addUserKnob {22 reconnect_similar l similar t "Reconnect this Stamp and similar ones to their Anchor, by their stored anchor name." -STARTLINE T stamps.wiredReconnectSimilar()}
   addUserKnob {22 reconnect_all l all t "Reconnect all the Stamps to their Anchors, by their stored anchor names." -STARTLINE T stamps.wiredReconnectAll()}
   addUserKnob {26 space_2 l "" +STARTLINE T " "}
   addUserKnob {20 advanced_reconnection l "Advanced Reconnection" n 2}
   addUserKnob {26 reconnect_by_title_label l "<font color=gold>By Title:" t "Reconnect by searching for a matching title." T " "}
   addUserKnob {22 reconnect_by_title_this l this t "Look for an Anchor that shares this Stamp's title, and connect this Stamp to it.\nIMPORTANT: Use this carefully, and only when the normal reconnection doesn't work." -STARTLINE T stamps.wiredReconnectByTitle()}
   addUserKnob {22 reconnect_by_title_similar l similar t "Look for an Anchor that shares this Stamp's title, and connect this Stamp and similar ones to it.\nIMPORTANT: Use this carefully, and only when the normal reconnection doesn't work." -STARTLINE T stamps.wiredReconnectByTitleSimilar()}
   addUserKnob {22 reconnect_by_title_selected l selected t "For each Stamp selected, look for an Anchor that shares its title, and connect to it.\nIMPORTANT: Use this carefully, and only when the normal reconnection doesn't work." -STARTLINE T stamps.wiredReconnectByTitleSelected()}
   addUserKnob {26 reconnect_by_selection_label l "<font color=orangered>By Selection:" t "Force reconnect to a selected Anchor." T " "}
   addUserKnob {22 reconnect_by_selection_this l this t "Force reconnect this Stamp to a selected Anchor, whatever its name or title.\nIMPORTANT: Use this carefully, and only when the normal reconnection doesn't work." -STARTLINE T stamps.wiredReconnectBySelection()}
   addUserKnob {22 reconnect_by_selection_similar l similar t "Force reconnect this Stamp and similar ones to a selected Anchor, whatever its name or title.\nIMPORTANT: Use this carefully, and only when the normal reconnection doesn't work." -STARTLINE T stamps.wiredReconnectBySelectionSimilar()}
   addUserKnob {22 reconnect_by_selection_selected l selected t "Force reconnect all selected Stamps to an also selected Anchor, whatever its name or title.\nIMPORTANT: Use this carefully, and only when the normal reconnection doesn't work." -STARTLINE T stamps.wiredReconnectBySelectionSelected()}
   addUserKnob {1 anchor l Anchor}
   anchor Anchor_25b668170c
   addUserKnob {6 auto_reconnect_by_title l "<font color=#ED9977>&nbsp; auto-reconnect by title" t "When creating this stamp again (like on copy-paste), auto-reconnect it by title instead of doing it by the saved anchor's name, and auto-turn this off immediately.\nIMPORTANT: Should be off by default. Only use this for setting up templates." +STARTLINE}
   addUserKnob {26 line2 l "" +STARTLINE}
   addUserKnob {22 buttonHelp l Help -STARTLINE T stamps.showHelp()}
   addUserKnob {26 version l " " t "Stamps by Adrian Pueyo and Alexey Kuchinski.\nUpdated May 18 2021." -STARTLINE T "<a href=\"http://www.nukepedia.com/gizmos/other/stamps\" style=\"color:#666;text-decoration: none;\"><span style=\"color:#666\"> <big>Stamps v1.1</big></b></a>"}
  }
push $N56244930
  PostageStamp {
   name Stamp33
   help "Stamps by Adrian Pueyo and Alexey Kuchinski.\nUpdated May 18 2021"
   onCreate "if nuke.GUI:\n    try:\n        import stamps; stamps.wiredOnCreate()\n    except:\n        pass\n"
   knobChanged "import stamps; stamps.wiredKnobChanged()"
   autolabel "nuke.thisNode().knob(\"title\").value()"
   tile_color 0x1000001
   note_font "Bitstream Vera Sans"
   note_font_size 20
   xpos 3718
   ypos -686
   hide_input true
   addUserKnob {20 wired_tab l "Wired Stamp"}
   addUserKnob {26 identifier -STARTLINE +HIDDEN T wired}
   addUserKnob {3 lockCallbacks l "" +STARTLINE +HIDDEN}
   addUserKnob {6 toReconnect -STARTLINE +HIDDEN}
   addUserKnob {1 title l Title: t "Displayed name on the Node Graph for this Stamp and its Anchor.\nIMPORTANT: This is only for display purposes, and is different from the real/internal name of the Stamps."}
   title smoke_SIDE
   addUserKnob {26 prev_title l "" +STARTLINE +HIDDEN T smoke_SIDE}
   addUserKnob {26 tags l Tags: t "Tags of this stamp's Anchor, for information purpose only.\nClick \"show anchor\" to change them." T <i>2D</i>}
   addUserKnob {26 backdrops l Backdrops: t "Labels of backdrop nodes which contain this stamp's Anchor." T "<i><Left>before or after Flare</i>"}
   addUserKnob {26 line1 l "" +STARTLINE}
   addUserKnob {6 postageStamp_show l "postage stamp" t "Enable the postage stamp thumbnail in this node.\nYou're seeing this because the class of this node includes the postage_stamp knob." +STARTLINE}
   addUserKnob {26 anchor_label l Anchor: T " "}
   addUserKnob {22 show_anchor l " show anchor " t "Show the properties panel for this Stamp's Anchor." -STARTLINE T stamps.wiredShowAnchor()}
   addUserKnob {22 zoom_anchor l "zoom anchor" t "Navigate to this Stamp's Anchor on the Node Graph." -STARTLINE T stamps.wiredZoomAnchor()}
   addUserKnob {26 stamps_label l Stamps: T " "}
   addUserKnob {22 zoomNext l " zoom next " t "Navigate to this Stamp's next sibling on the Node Graph." -STARTLINE T stamps.wiredZoomNext()}
   addUserKnob {22 selectSimilar l " select similar " t "Select all similar Stamps to this one on the Node Graph." -STARTLINE T stamps.wiredSelectSimilar()}
   addUserKnob {26 space_1 l "" +STARTLINE T " "}
   addUserKnob {26 reconnect_label l Reconnect: t "Reconnect by the stored Anchor name." T " "}
   addUserKnob {22 reconnect_this l this t "Reconnect this Stamp to its Anchor, by its stored Anchor name." -STARTLINE T "n = nuke.thisNode()\ntry:\n    n.setInput(0,nuke.toNode(n.knob(\"anchor\").value()))\nexcept:\n    nuke.message(\"Unable to reconnect.\")\ntry:\n    import stamps\n    stamps.wiredGetStyle(n)\nexcept:\n    pass\n"}
   addUserKnob {22 reconnect_similar l similar t "Reconnect this Stamp and similar ones to their Anchor, by their stored anchor name." -STARTLINE T stamps.wiredReconnectSimilar()}
   addUserKnob {22 reconnect_all l all t "Reconnect all the Stamps to their Anchors, by their stored anchor names." -STARTLINE T stamps.wiredReconnectAll()}
   addUserKnob {26 space_2 l "" +STARTLINE T " "}
   addUserKnob {20 advanced_reconnection l "Advanced Reconnection" n 2}
   addUserKnob {26 reconnect_by_title_label l "<font color=gold>By Title:" t "Reconnect by searching for a matching title." T " "}
   addUserKnob {22 reconnect_by_title_this l this t "Look for an Anchor that shares this Stamp's title, and connect this Stamp to it.\nIMPORTANT: Use this carefully, and only when the normal reconnection doesn't work." -STARTLINE T stamps.wiredReconnectByTitle()}
   addUserKnob {22 reconnect_by_title_similar l similar t "Look for an Anchor that shares this Stamp's title, and connect this Stamp and similar ones to it.\nIMPORTANT: Use this carefully, and only when the normal reconnection doesn't work." -STARTLINE T stamps.wiredReconnectByTitleSimilar()}
   addUserKnob {22 reconnect_by_title_selected l selected t "For each Stamp selected, look for an Anchor that shares its title, and connect to it.\nIMPORTANT: Use this carefully, and only when the normal reconnection doesn't work." -STARTLINE T stamps.wiredReconnectByTitleSelected()}
   addUserKnob {26 reconnect_by_selection_label l "<font color=orangered>By Selection:" t "Force reconnect to a selected Anchor." T " "}
   addUserKnob {22 reconnect_by_selection_this l this t "Force reconnect this Stamp to a selected Anchor, whatever its name or title.\nIMPORTANT: Use this carefully, and only when the normal reconnection doesn't work." -STARTLINE T stamps.wiredReconnectBySelection()}
   addUserKnob {22 reconnect_by_selection_similar l similar t "Force reconnect this Stamp and similar ones to a selected Anchor, whatever its name or title.\nIMPORTANT: Use this carefully, and only when the normal reconnection doesn't work." -STARTLINE T stamps.wiredReconnectBySelectionSimilar()}
   addUserKnob {22 reconnect_by_selection_selected l selected t "Force reconnect all selected Stamps to an also selected Anchor, whatever its name or title.\nIMPORTANT: Use this carefully, and only when the normal reconnection doesn't work." -STARTLINE T stamps.wiredReconnectBySelectionSelected()}
   addUserKnob {1 anchor l Anchor}
   anchor Anchor_232c9aab88
   addUserKnob {6 auto_reconnect_by_title l "<font color=#ED9977>&nbsp; auto-reconnect by title" t "When creating this stamp again (like on copy-paste), auto-reconnect it by title instead of doing it by the saved anchor's name, and auto-turn this off immediately.\nIMPORTANT: Should be off by default. Only use this for setting up templates." +STARTLINE}
   addUserKnob {26 line2 l "" +STARTLINE}
   addUserKnob {22 buttonHelp l Help -STARTLINE T stamps.showHelp()}
   addUserKnob {26 version l " " t "Stamps by Adrian Pueyo and Alexey Kuchinski.\nUpdated May 18 2021." -STARTLINE T "<a href=\"http://www.nukepedia.com/gizmos/other/stamps\" style=\"color:#666;text-decoration: none;\"><span style=\"color:#666\"> <big>Stamps v1.1</big></b></a>"}
  }
  Dot {
   name Dot22
   xpos 3752
   ypos -636
  }
  Group {
   inputs 3
   name gunshot11
   label "shot: \[value shotcount]\non frame: \[value shotstart]\n"
   xpos 3600
   ypos -609
   addUserKnob {20 User}
   addUserKnob {3 shotcount l shot}
   shotcount 11
   addUserKnob {3 shotstart l frame +INVISIBLE}
   shotstart {{"shotcount==0 ? 0 : shot\[value shotcount]-1" i}}
  }
   BackdropNode {
    inputs 0
    name BackdropNode19
    knobChanged "try:\n    listenedKnobs = \['text', 'position', 'name']\n    node = nuke.thisNode()\n    name = node.knob('name').value()\n    text = node.knob('text').value()\n    position = node.knob('position').value()\n    position = \"<\" + position + \">\"\n    label = node.knob('label').value()\n    \n    if nuke.thisKnob().name() in listenedKnobs:\n        if text == \"\":\n            if node.knob('position').value() == \"left\":\n                node.knob('label').setValue()\n            else:\n                node.knob('label').setValue(position + name)\n        else:\n            if node.knob('position').value() == \"left\":\n                node.knob('label').setValue(text)\n            else:\n                node.knob('label').setValue(position + text)\n                \n    elif nuke.thisKnob().name() == 'font_size':\n        fontSize = node.knob('font_size').value()\n        node.knob('note_font_size').setValue(fontSize)\nexcept:\n    pass"
    tile_color 0x232323ff
    label "<Left><h2> Gunshot"
    note_font_size 31.5
    xpos -693
    ypos -554
    bdwidth 876
    bdheight 1682
    addUserKnob {20 F_VFX l BackdropNode}
    addUserKnob {43 text l Text}
    text "<h2> Gunshot"
    addUserKnob {7 font_size l "Font Size" R 10 100}
    font_size 31.5
    addUserKnob {4 position l "" -STARTLINE M {Left Center}}
    addUserKnob {26 S01 l " " T " "}
    addUserKnob {22 grow l " <img src=\"F_scalep.png\">" -STARTLINE T "n=nuke.thisNode()\n\ndef grow(node=None,step=50):\n    try:\n        if not node:\n            n=nuke.selectedNode()\n        else:\n            n=node\n            n\['xpos'].setValue(n\['xpos'].getValue()-step)\n            n\['ypos'].setValue(n\['ypos'].getValue()-step)\n            n\['bdwidth'].setValue(n\['bdwidth'].getValue()+step*2)\n            n\['bdheight'].setValue(n\['bdheight'].getValue()+step*2)\n    except:\n        pass\ngrow(n,50)"}
    addUserKnob {22 shrink l " <img src=\"F_scalem.png\">" -STARTLINE T "n=nuke.thisNode()\n\ndef shrink(node=None,step=50):\n    try:\n        if not node:\n            n=nuke.selectedNode()\n        else:\n            n=node\n            n\['xpos'].setValue(n\['xpos'].getValue()+step)\n            n\['ypos'].setValue(n\['ypos'].getValue()+step)\n            n\['bdwidth'].setValue(n\['bdwidth'].getValue()-step*2)\n            n\['bdheight'].setValue(n\['bdheight'].getValue()-step*2)\n    except:\n        pass\nshrink(n,50)"}
    addUserKnob {22 colorandom l " <img src=\"ColorBars.png\">" -STARTLINE T "import colorsys, random\nn=nuke.thisNode()\nR,G,B= colorsys.hsv_to_rgb(random.random(),.1+random.random()*.15,.15+random.random()*.15)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ) )"}
    addUserKnob {22 darkgrey l "<font color=\"#232323\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.0, 0.0, 0.14]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 lightgrey l "<font color=\"#383838\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.0, 0.0, 0.22]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 red l "<font color=\"#8c3838\" size=6>■</font>" T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.0, 0.6, 0.55]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n" +STARTLINE}
    addUserKnob {22 orange l "<font color=\"#b28e59\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.1, 0.5, 0.7]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 yellow l "<font color=\"#ccc766\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.16, 0.5, 0.8]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 green l "<font color=\"#5d995b\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.33, 0.4, 0.6]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 cyan l "<font color=\"#72998f\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.46, 0.25, 0.6]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 blue l "<font color=\"#59687f\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.6, 0.3, 0.5]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 darkblue l "<font color=\"#63628c\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.67, 0.3, 0.55]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 magenta l "<font color=\"#927a99\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.8, 0.2, 0.6]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 pink l "<font color=\"#997a89\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.92, 0.2, 0.6]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {26 S02 l " " T " "}
    addUserKnob {26 Ftools l "" +STARTLINE T "<font color=\"#1C1C1C\"> v1.2 - Franklin VFX - 2018"}
   }
   BackdropNode {
    inputs 0
    name BackdropNode2
    knobChanged "try:\n    listenedKnobs = \['text', 'position', 'name']\n    node = nuke.thisNode()\n    name = node.knob('name').value()\n    text = node.knob('text').value()\n    position = node.knob('position').value()\n    position = \"<\" + position + \">\"\n    label = node.knob('label').value()\n    \n    if nuke.thisKnob().name() in listenedKnobs:\n        if text == \"\":\n            if node.knob('position').value() == \"left\":\n                node.knob('label').setValue()\n            else:\n                node.knob('label').setValue(position + name)\n        else:\n            if node.knob('position').value() == \"left\":\n                node.knob('label').setValue(text)\n            else:\n                node.knob('label').setValue(position + text)\n                \n    elif nuke.thisKnob().name() == 'font_size':\n        fontSize = node.knob('font_size').value()\n        node.knob('note_font_size').setValue(fontSize)\nexcept:\n    pass"
    tile_color 0x927a99ff
    note_font_size 50
    xpos -473
    ypos -221
    bdwidth 435
    bdheight 786
    z_order 1
    addUserKnob {20 F_VFX l BackdropNode}
    addUserKnob {43 text l Text}
    addUserKnob {7 font_size l "Font Size" R 10 100}
    font_size 50
    addUserKnob {4 position l "" -STARTLINE M {Left Center}}
    addUserKnob {26 S01 l " " T " "}
    addUserKnob {22 grow l " <img src=\"F_scalep.png\">" -STARTLINE T "n=nuke.thisNode()\n\ndef grow(node=None,step=50):\n    try:\n        if not node:\n            n=nuke.selectedNode()\n        else:\n            n=node\n            n\['xpos'].setValue(n\['xpos'].getValue()-step)\n            n\['ypos'].setValue(n\['ypos'].getValue()-step)\n            n\['bdwidth'].setValue(n\['bdwidth'].getValue()+step*2)\n            n\['bdheight'].setValue(n\['bdheight'].getValue()+step*2)\n    except:\n        pass\ngrow(n,50)"}
    addUserKnob {22 shrink l " <img src=\"F_scalem.png\">" -STARTLINE T "n=nuke.thisNode()\n\ndef shrink(node=None,step=50):\n    try:\n        if not node:\n            n=nuke.selectedNode()\n        else:\n            n=node\n            n\['xpos'].setValue(n\['xpos'].getValue()+step)\n            n\['ypos'].setValue(n\['ypos'].getValue()+step)\n            n\['bdwidth'].setValue(n\['bdwidth'].getValue()-step*2)\n            n\['bdheight'].setValue(n\['bdheight'].getValue()-step*2)\n    except:\n        pass\nshrink(n,50)"}
    addUserKnob {22 colorandom l " <img src=\"ColorBars.png\">" -STARTLINE T "import colorsys, random\nn=nuke.thisNode()\nR,G,B= colorsys.hsv_to_rgb(random.random(),.1+random.random()*.15,.15+random.random()*.15)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ) )"}
    addUserKnob {22 darkgrey l "<font color=\"#232323\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.0, 0.0, 0.14]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 lightgrey l "<font color=\"#383838\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.0, 0.0, 0.22]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 red l "<font color=\"#8c3838\" size=6>■</font>" T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.0, 0.6, 0.55]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n" +STARTLINE}
    addUserKnob {22 orange l "<font color=\"#b28e59\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.1, 0.5, 0.7]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 yellow l "<font color=\"#ccc766\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.16, 0.5, 0.8]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 green l "<font color=\"#5d995b\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.33, 0.4, 0.6]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 cyan l "<font color=\"#72998f\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.46, 0.25, 0.6]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 blue l "<font color=\"#59687f\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.6, 0.3, 0.5]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 darkblue l "<font color=\"#63628c\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.67, 0.3, 0.55]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 magenta l "<font color=\"#927a99\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.8, 0.2, 0.6]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 pink l "<font color=\"#997a89\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.92, 0.2, 0.6]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {26 S02 l " " T " "}
    addUserKnob {26 Ftools l "" +STARTLINE T "<font color=\"#1C1C1C\"> v1.2 - Franklin VFX - 2018"}
   }
   Constant {
    inputs 0
    channels rgb
    name Constant13
    xpos -643
    ypos 714
   }
   AdjBBox {
    numpixels {{size_bbox}}
    name AdjBBox13
    xpos -643
    ypos 849
   }
   Dot {
    name Dot78
    xpos -609
    ypos 987
   }
   Axis3 {
    inputs 0
    useMatrix true
    matrix {
        {{parent.cCard3D_1.matrix} {parent.cCard3D_1.matrix} {parent.cCard3D_1.matrix} {parent.cCard3D_1.matrix}}
        {{parent.cCard3D_1.matrix} {parent.cCard3D_1.matrix} {parent.cCard3D_1.matrix} {parent.cCard3D_1.matrix}}
        {{parent.cCard3D_1.matrix} {parent.cCard3D_1.matrix} {parent.cCard3D_1.matrix} {parent.cCard3D_1.matrix}}
        {{parent.cCard3D_1.matrix} {parent.cCard3D_1.matrix} {parent.cCard3D_1.matrix} {parent.cCard3D_1.matrix}}
      }
    name Axis14
    xpos -203
    ypos -90
   }
set N53122e10 [stack 0]
push 0
   Input {
    inputs 0
    name top
    xpos -283
    ypos -1243
    number 1
   }
   TimeOffset {
    time_offset {{"shot_\[value shotnmbr]==0 ? 0 : shot_\[value shotnmbr]-1"}}
    time ""
    name CTimeOffset1
    label "shot: \[value shotnmbr]\non frame \[value time_offset]"
    xpos -283
    ypos -924
    addUserKnob {20 User}
    addUserKnob {3 shotnmbr l "shot "}
    shotnmbr {{shotcount}}
    addUserKnob {3 ref}
    ref {{time_offset+1}}
   }
   Group {
    name DecimalTimeOffset1
    tile_color 0xafa35dff
    label "random asset"
    note_font "Bitstream Vera Sans Bold"
    xpos -283
    ypos -841
    addUserKnob {20 User}
    addUserKnob {7 decimal l "time offset (decimal)"}
    decimal {{random(shotcount*seed)}}
    addUserKnob {26 ""}
    addUserKnob {26 _1 l "" +STARTLINE T "Chris Fryer | 2020\nupdated by Yorben Otto | 2024"}
   }
    Input {
     inputs 0
     name Input1
     xpos 426
     ypos -793
    }
    TimeOffset {
     time_offset {{(-floor(parent.decimal))*(DecimalTimeOffset1.decimal<0)}}
     time ""
     name TimeOffset1
     xpos 426
     ypos -675
    }
    Dot {
     name Dot6
     xpos 460
     ypos -635
    }
set N53162670 [stack 0]
    Dot {
     name Dot5
     xpos 350
     ypos -635
    }
    Dot {
     name Dot7
     xpos 350
     ypos -365
    }
push $N53162670
    Dot {
     name Dot1
     xpos 572
     ypos -635
    }
    TimeBlur {
     divisions 2
     shutter {{(parent.decimal-(floor(parent.decimal)))*2}}
     shutteroffset start
     shuttercustomoffset 0
     name TimeBlur1
     xpos 538
     ypos -558
    }
    Dot {
     name Dot2
     xpos 572
     ypos -490
    }
push $N53162670
    TimeBlur {
     divisions 2
     shutter {{parent.decimal*2}}
     shutteroffset start
     shuttercustomoffset 0
     name TimeBlur8
     xpos 426
     ypos -556
    }
    Switch {
     inputs 2
     which {{parent.decimal<0}}
     name Switch1
     xpos 426
     ypos -494
    }
    Multiply {
     value {{parent.TimeBlur8.divisions}}
     name Multiply6
     xpos 426
     ypos -436
    }
    Merge2 {
     inputs 2
     operation from
     name Merge6
     xpos 426
     ypos -369
    }
set N531a45b0 [stack 0]
    Output {
     name Output1
     xpos 426
     ypos -221
    }
push $N531a45b0
push $N531a45b0
    Viewer {
     inputs 2
     frame_range 1-100
     name Viewer1
     xpos 675
     ypos -246
    }
   end_group
   NoTimeBlur {
    name NoTimeBlur1
    xpos -283
    ypos -779
   }
   Transform {
    scale {{0.05+(0.05*(((parent.DecimalTimeOffset13.decimal-0.5)*2)*ScaleVariationSmoke))}}
    center {{root.width/2 x1015 2304} {root.height/2}}
    shutteroffset centred
    name Transform44
    xpos -283
    ypos -152
   }
   Card3D {
    inputs 3
    rot_order ZYX
    translate {0 0 0}
    rotate {90 0 0}
    shutteroffset centred
    name cCard3D25
    tile_color 0x7b1d1dff
    xpos -283
    ypos 11
    addUserKnob {20 User l parent}
    addUserKnob {22 python_button l "set parent" t "select parent node, and press this button to set the selected node as parent" +INVISIBLE T "n = nuke.selectedNode()\['name'].getValue()\nnuke.thisNode()\['string'].setValue(n)" +STARTLINE}
    addUserKnob {1 string l parent +INVISIBLE}
    string null
    addUserKnob {3 ref l "ref frame"}
    ref 1015
   }
   Transform {
    translate {{"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].translate.x(ref)\}]"} {"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].translate.y(ref)\}]"}}
    rotate {{"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].rotate-\[value parent_gun].rotate(ref)\}]"}}
    scale {{"\[if \{\[value parent_gun]==\"null\"\} \{return 1\} \{return 1+(\[value parent_gun].scale-\[value parent_gun].scale(ref))\}]"}}
    center {{"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].center.x(ref)\}]"} {"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].center.y(ref)\}]"}}
    name Transform_GUNMatchMove37
    xpos -283
    ypos 126
    addUserKnob {20 User l parent}
    addUserKnob {3 ref}
    ref {{parent.CTimeOffset.ref}}
   }
   Transform {
    translate {{"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].translate.x-\[value parent_env].translate.x(ref)\}]"} {"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].translate.y-\[value parent_env].translate.y(ref)\}]"}}
    rotate {{"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].rotate-\[value parent_env].rotate(ref)\}]"}}
    scale {{"\[if \{\[value parent_gun]==\"null\"\} \{return 1\} \{return 1+(\[value parent_env].scale-\[value parent_env].scale(ref))\}]"}}
    center {{"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].center.x(ref)\}]"} {"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].center.y(ref)\}]"}}
    motionblur 0.2
    shutter {{SmokeMB*0.5}}
    shutteroffset centred
    name Transform_ENVMatchMove37
    label "\n"
    xpos -283
    ypos 255
    addUserKnob {20 User l parent}
    addUserKnob {3 ref}
    ref {{parent.CTimeOffset.ref}}
   }
   Transform {
    translate {{"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return -((root.width/2)-(\[value parent_gun].center.x(1)+\[value parent_gun].translate.x(1)))\}]"} {"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return -((root.height/2)-(\[value parent_gun].center.y(1)+\[value parent_gun].translate.y(1)))\}]"}}
    name Transform_GUNMatchMove6
    label "alignment correction"
    xpos -283
    ypos 344
    addUserKnob {20 User l parent}
    addUserKnob {22 python_button l "set parent" t "select parent node, and press this button to set the selected node as parent" T "n = nuke.selectedNode()\['name'].getValue()\nnuke.thisNode()\['string'].setValue(n)" +STARTLINE}
    addUserKnob {1 string l parent}
    string Transform_MatchMove10
    addUserKnob {3 ref +INVISIBLE}
    ref {{parent.cCard3D_8.ref}}
   }
   Multiply {
    value {{math_matrix.result_y_smoke(parent.CTimeOffset.ref)}}
    name Angle_reveal_top1
    label TOP
    xpos -283
    ypos 403
   }
   Remove {
    operation keep
    channels rgb
    name Remove1
    xpos -283
    ypos 514
   }
push 0
   Switch {
    inputs 2
    which {{parent.Angle_reveal_top1.value>0.001}}
    name Switch1
    xpos -283
    ypos 660
   }
   Dot {
    name Dot82
    xpos -249
    ypos 705
   }
push 0
push $N53122e10
push 0
   Input {
    inputs 0
    name front
    xpos -436
    ypos -1243
    number 2
   }
   TimeOffset {
    time_offset {{"shot_\[value shotnmbr]==0 ? 0 : shot_\[value shotnmbr]-1"}}
    time ""
    name CTimeOffset2
    label "shot: \[value shotnmbr]\non frame \[value time_offset]"
    xpos -436
    ypos -925
    addUserKnob {20 User}
    addUserKnob {3 shotnmbr l "shot "}
    shotnmbr {{shotcount}}
    addUserKnob {3 ref}
    ref {{time_offset+1}}
   }
   Group {
    name DecimalTimeOffset2
    tile_color 0xafa35dff
    label "random asset"
    note_font "Bitstream Vera Sans Bold"
    xpos -436
    ypos -842
    addUserKnob {20 User}
    addUserKnob {7 decimal l "time offset (decimal)"}
    decimal {{random(shotcount*seed)}}
    addUserKnob {26 ""}
    addUserKnob {26 _1 l "" +STARTLINE T "Chris Fryer | 2020\nupdated by Yorben Otto | 2024"}
   }
    Input {
     inputs 0
     name Input1
     xpos 426
     ypos -793
    }
    TimeOffset {
     time_offset {{(-floor(parent.decimal))*(DecimalTimeOffset2.decimal<0)}}
     time ""
     name TimeOffset1
     xpos 426
     ypos -675
    }
    Dot {
     name Dot6
     xpos 460
     ypos -635
    }
set N4d7003a0 [stack 0]
    Dot {
     name Dot5
     xpos 350
     ypos -635
    }
    Dot {
     name Dot7
     xpos 350
     ypos -365
    }
push $N4d7003a0
    Dot {
     name Dot1
     xpos 572
     ypos -635
    }
    TimeBlur {
     divisions 2
     shutter {{(parent.decimal-(floor(parent.decimal)))*2}}
     shutteroffset start
     shuttercustomoffset 0
     name TimeBlur1
     xpos 538
     ypos -558
    }
    Dot {
     name Dot2
     xpos 572
     ypos -490
    }
push $N4d7003a0
    TimeBlur {
     divisions 2
     shutter {{parent.decimal*2}}
     shutteroffset start
     shuttercustomoffset 0
     name TimeBlur8
     xpos 426
     ypos -556
    }
    Switch {
     inputs 2
     which {{parent.decimal<0}}
     name Switch1
     xpos 426
     ypos -494
    }
    Multiply {
     value {{parent.TimeBlur8.divisions}}
     name Multiply6
     xpos 426
     ypos -436
    }
    Merge2 {
     inputs 2
     operation from
     name Merge6
     xpos 426
     ypos -369
    }
set N4d7422e0 [stack 0]
    Output {
     name Output1
     xpos 426
     ypos -221
    }
push $N4d7422e0
push $N4d7422e0
    Viewer {
     inputs 2
     frame_range 1-100
     name Viewer1
     xpos 675
     ypos -246
    }
   end_group
   NoTimeBlur {
    name NoTimeBlur5
    xpos -436
    ypos -780
   }
   Transform {
    scale {{0.05+(0.05*(((parent.DecimalTimeOffset13.decimal-0.5)*2)*ScaleVariationSmoke))}}
    center {{root.width/2 x1015 2304} {root.height/2}}
    shutteroffset centred
    name Transform45
    xpos -436
    ypos -151
   }
   Card3D {
    inputs 3
    rot_order ZYX
    translate {0 0 0}
    rotate {0 90 0}
    shutteroffset centred
    name cCard3D26
    tile_color 0x7b1d1dff
    xpos -436
    ypos 15
    addUserKnob {20 User l parent}
    addUserKnob {22 python_button l "set parent" t "select parent node, and press this button to set the selected node as parent" +INVISIBLE T "n = nuke.selectedNode()\['name'].getValue()\nnuke.thisNode()\['string'].setValue(n)" +STARTLINE}
    addUserKnob {1 string l parent +INVISIBLE}
    string null
    addUserKnob {3 ref l "ref frame"}
    ref 1015
   }
   Transform {
    translate {{"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].translate.x(ref)\}]"} {"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].translate.y(ref)\}]"}}
    rotate {{"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].rotate-\[value parent_gun].rotate(ref)\}]"}}
    scale {{"\[if \{\[value parent_gun]==\"null\"\} \{return 1\} \{return 1+(\[value parent_gun].scale-\[value parent_gun].scale(ref))\}]"}}
    center {{"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].center.x(ref)\}]"} {"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].center.y(ref)\}]"}}
    name Transform_GUNMatchMove38
    label "\n"
    xpos -436
    ypos 124
    addUserKnob {20 User l parent}
    addUserKnob {3 ref}
    ref {{parent.CTimeOffset.ref}}
   }
   Transform {
    translate {{"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].translate.x-\[value parent_env].translate.x(ref)\}]"} {"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].translate.y-\[value parent_env].translate.y(ref)\}]"}}
    rotate {{"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].rotate-\[value parent_env].rotate(ref)\}]"}}
    scale {{"\[if \{\[value parent_gun]==\"null\"\} \{return 1\} \{return 1+(\[value parent_env].scale-\[value parent_env].scale(ref))\}]"}}
    center {{"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].center.x(ref)\}]"} {"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].center.y(ref)\}]"}}
    motionblur 0.2
    shutter {{SmokeMB*0.5}}
    shutteroffset centred
    name Transform_ENVMatchMove38
    xpos -436
    ypos 254
    addUserKnob {20 User l parent}
    addUserKnob {3 ref}
    ref {{parent.CTimeOffset.ref}}
   }
   Transform {
    translate {{"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return -((root.width/2)-(\[value parent_gun].center.x(1)+\[value parent_gun].translate.x(1)))\}]"} {"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return -((root.height/2)-(\[value parent_gun].center.y(1)+\[value parent_gun].translate.y(1)))\}]"}}
    name Transform_GUNMatchMove7
    label "alignment correction"
    xpos -436
    ypos 343
    addUserKnob {20 User l parent}
    addUserKnob {22 python_button l "set parent" t "select parent node, and press this button to set the selected node as parent" T "n = nuke.selectedNode()\['name'].getValue()\nnuke.thisNode()\['string'].setValue(n)" +STARTLINE}
    addUserKnob {1 string l parent}
    string Transform_MatchMove10
    addUserKnob {3 ref +INVISIBLE}
    ref {{parent.cCard3D_8.ref}}
   }
   Multiply {
    value {{math_matrix.result_x_smoke(parent.CTimeOffset.ref)}}
    name Angle_reveal_front1
    label FRONT
    xpos -436
    ypos 401
   }
   Remove {
    operation keep
    channels rgb
    name Remove2
    xpos -436
    ypos 511
   }
push 0
   Switch {
    inputs 2
    which {{parent.Angle_reveal_front1.value>0.001}}
    name Switch2
    xpos -436
    ypos 660
   }
   Dot {
    name Dot83
    xpos -402
    ypos 735
   }
   Input {
    inputs 0
    name side
    xpos -130
    ypos -1242
   }
   TimeOffset {
    time_offset {{"shot_\[value shotnmbr]==0 ? 0 : shot_\[value shotnmbr]-1"}}
    time ""
    name CTimeOffset
    label "shot: \[value shotnmbr]\non frame \[value time_offset]"
    xpos -130
    ypos -927
    addUserKnob {20 User}
    addUserKnob {3 shotnmbr l "shot "}
    shotnmbr {{shotcount}}
    addUserKnob {3 ref}
    ref {{time_offset+1}}
   }
   Group {
    name DecimalTimeOffset13
    tile_color 0xafa35dff
    label "random asset"
    note_font "Bitstream Vera Sans Bold"
    xpos -130
    ypos -844
    addUserKnob {20 User}
    addUserKnob {7 decimal l "time offset (decimal)"}
    decimal {{random(shotcount*seed)}}
    addUserKnob {26 ""}
    addUserKnob {26 _1 l "" +STARTLINE T "Chris Fryer | 2020\nupdated by Yorben Otto | 2024"}
   }
    Input {
     inputs 0
     name Input1
     xpos 426
     ypos -793
    }
    TimeOffset {
     time_offset {{(-floor(parent.decimal))*(DecimalTimeOffset13.decimal<0)}}
     time ""
     name TimeOffset1
     xpos 426
     ypos -675
    }
    Dot {
     name Dot6
     xpos 460
     ypos -635
    }
set N4d58e280 [stack 0]
    Dot {
     name Dot5
     xpos 350
     ypos -635
    }
    Dot {
     name Dot7
     xpos 350
     ypos -365
    }
push $N4d58e280
    Dot {
     name Dot1
     xpos 572
     ypos -635
    }
    TimeBlur {
     divisions 2
     shutter {{(parent.decimal-(floor(parent.decimal)))*2}}
     shutteroffset start
     shuttercustomoffset 0
     name TimeBlur1
     xpos 538
     ypos -558
    }
    Dot {
     name Dot2
     xpos 572
     ypos -490
    }
push $N4d58e280
    TimeBlur {
     divisions 2
     shutter {{parent.decimal*2}}
     shutteroffset start
     shuttercustomoffset 0
     name TimeBlur8
     xpos 426
     ypos -556
    }
    Switch {
     inputs 2
     which {{parent.decimal<0}}
     name Switch1
     xpos 426
     ypos -494
    }
    Multiply {
     value {{parent.TimeBlur8.divisions}}
     name Multiply6
     xpos 426
     ypos -436
    }
    Merge2 {
     inputs 2
     operation from
     name Merge6
     xpos 426
     ypos -369
    }
set N4d5d01c0 [stack 0]
    Output {
     name Output1
     xpos 426
     ypos -221
    }
push $N4d5d01c0
push $N4d5d01c0
    Viewer {
     inputs 2
     frame_range 1-100
     name Viewer1
     xpos 675
     ypos -246
    }
   end_group
   NoTimeBlur {
    name NoTimeBlur13
    xpos -130
    ypos -782
   }
   Transform {
    scale {{0.05+(0.05*(((parent.DecimalTimeOffset13.decimal-0.5)*2)*ScaleVariationSmoke))}}
    center {{root.width/2 x1015 2304} {root.height/2}}
    shutteroffset centred
    name Transform46
    xpos -130
    ypos -155
   }
   Card3D {
    translate {{"\[if \{\[exists  parent.parent.parent.input0]\} \{return \[value \[topnode parent.parent.parent.input0].name].translate.x(ref)\} \{return 0\}]"} {"\[if \{\[exists  parent.parent.parent.input0]\} \{return \[value \[topnode parent.parent.parent.input0].name].translate.y(ref)\} \{return 0\}]"} {"\[if \{\[exists  parent.parent.parent.input0]\} \{return \[value \[topnode parent.parent.parent.input0].name].translate.z(ref)\} \{return -1\}]"}}
    rotate {{"\[if \{\[exists  parent.parent.parent.input0]\} \{return \[value \[topnode parent.parent.parent.input0].name].rotate.x(ref)\} \{return 0\}]"} {"\[if \{\[exists  parent.parent.parent.input0]\} \{return \[value \[topnode parent.parent.parent.input0].name].rotate.y(ref)\} \{return 0\}]"} {"\[if \{\[exists  parent.parent.parent.input0]\} \{return \[value \[topnode parent.parent.parent.input0].name].rotate.z(ref)\} \{return 0\}]"}}
    scaling {{"\[if \{\[exists  parent.parent.parent.input0]\} \{return \[value \[topnode parent.parent.parent.input0].name].scaling.x(ref)\} \{return 1\}]"} {"\[if \{\[exists  parent.parent.parent.input0]\} \{return \[value \[topnode parent.parent.parent.input0].name].scaling.y(ref)\} \{return 1\}]"} {"\[if \{\[exists  parent.parent.parent.input0]\} \{return \[value \[topnode parent.parent.parent.input0].name].scaling.z(ref)\} \{return 1\}]"}}
    uniform_scale {{"\[if \{\[exists  parent.parent.parent.input0]\} \{return (\[value \[topnode parent.parent.parent.input0].name].uniform_scale(ref)*25)\} \{return 25\}]"}}
    shutteroffset centred
    name cCard3D_1
    tile_color 0x7b1d1dff
    label "ref frame: \[value ref]"
    xpos -130
    ypos 2
    addUserKnob {20 User l parent}
    addUserKnob {22 python_button l "set parent" t "select parent node, and press this button to set the selected node as parent" +INVISIBLE T "n = nuke.selectedNode()\['name'].getValue()\nnuke.thisNode()\['string'].setValue(n)" +STARTLINE}
    addUserKnob {1 string l parent +INVISIBLE}
    string null
    addUserKnob {3 id l "id number"}
    id {{parent.CTimeOffset.shotnmbr}}
    addUserKnob {3 ref l "ref frame"}
    ref {{parent.CTimeOffset.ref}}
   }
   Transform {
    translate {{"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].translate.x(ref)\}]"} {"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].translate.y(ref)\}]"}}
    rotate {{"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].rotate-\[value parent_gun].rotate(ref)\}]"}}
    scale {{"\[if \{\[value parent_gun]==\"null\"\} \{return 1\} \{return 1+(\[value parent_gun].scale-\[value parent_gun].scale(ref))\}]"}}
    center {{"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].center.x(ref)\}]"} {"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].center.y(ref)\}]"}}
    name Transform_GUNMatchMove39
    label "\n"
    xpos -130
    ypos 124
    addUserKnob {20 User l parent}
    addUserKnob {3 ref}
    ref {{parent.CTimeOffset.ref}}
   }
   Transform {
    translate {{"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].translate.x-\[value parent_env].translate.x(ref)\}]"} {"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].translate.y-\[value parent_env].translate.y(ref)\}]"}}
    rotate {{"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].rotate-\[value parent_env].rotate(ref)\}]"}}
    scale {{"\[if \{\[value parent_gun]==\"null\"\} \{return 1\} \{return 1+(\[value parent_env].scale-\[value parent_env].scale(ref))\}]"}}
    center {{"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].center.x(ref)\}]"} {"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].center.y(ref)\}]"}}
    motionblur 0.2
    shutter {{SmokeMB*0.5}}
    shutteroffset centred
    name Transform_ENVMatchMove39
    xpos -130
    ypos 258
    addUserKnob {20 User l parent}
    addUserKnob {3 ref}
    ref {{parent.CTimeOffset.ref}}
   }
   Transform {
    translate {{"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return -((root.width/2)-(\[value parent_gun].center.x(1)+\[value parent_gun].translate.x(1)))\}]"} {"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return -((root.height/2)-(\[value parent_gun].center.y(1)+\[value parent_gun].translate.y(1)))\}]"}}
    name Transform_GUNMatchMove5
    label "alignment correction"
    xpos -130
    ypos 340
    addUserKnob {20 User l parent}
    addUserKnob {22 python_button l "set parent" t "select parent node, and press this button to set the selected node as parent" T "n = nuke.selectedNode()\['name'].getValue()\nnuke.thisNode()\['string'].setValue(n)" +STARTLINE}
    addUserKnob {1 string l parent}
    string Transform_MatchMove10
    addUserKnob {3 ref +INVISIBLE}
    ref {{parent.cCard3D_8.ref}}
   }
   Multiply {
    value {{math_matrix.result_z_smoke(parent.CTimeOffset.ref)}}
    name Angle_reveal_side1
    label SIDE
    xpos -130
    ypos 404
   }
   Remove {
    operation keep
    channels rgb
    name Remove39
    xpos -130
    ypos 514
   }
push 0
   Switch {
    inputs 2
    which {{parent.Angle_reveal_side1.value>0.001}}
    name Switch3
    xpos -130
    ypos 658
   }
   Merge2 {
    inputs 3+1
    operation max
    Achannels rgb
    Bchannels rgb
    output rgb
    name Merge28
    xpos -130
    ypos 731
   }
   Merge2 {
    inputs 2
    operation plus
    bbox intersection
    Achannels rgb
    Bchannels rgb
    output rgb
    name Merge29
    xpos -130
    ypos 983
   }
   Shuffle2 {
    fromInput1 {{0} B}
    fromInput2 {{0} B}
    mappings "4 rgba.red 0 0 rgba.red 0 0 rgba.green 0 1 rgba.green 0 1 rgba.blue 0 2 rgba.alpha 0 3 rgba.blue 0 2 rgba.blue 0 2"
    name Shuffle1
    xpos -130
    ypos 1021
   }
push 0
   Switch {
    inputs 2
    which {{"shot_\[value count]==0?0:frame>=shot_\[value count]"}}
    name cSwitch_13
    xpos -130
    ypos 1078
    addUserKnob {20 User}
    addUserKnob {3 count}
    count {{parent.CTimeOffset.shotnmbr}}
   }
   Output {
    name Output1
    xpos -130
    ypos 1323
   }
   StickyNote {
    inputs 0
    name StickyNote1
    label "<-- handy to break concatonation?  "
    xpos -39
    ypos 193
   }
  end_group
push $N586971d0
  PostageStamp {
   name Stamp28
   help "Stamps by Adrian Pueyo and Alexey Kuchinski.\nUpdated May 18 2021"
   onCreate "if nuke.GUI:\n    try:\n        import stamps; stamps.wiredOnCreate()\n    except:\n        pass\n"
   knobChanged "import stamps; stamps.wiredKnobChanged()"
   autolabel "nuke.thisNode().knob(\"title\").value()"
   tile_color 0x1000001
   note_font "Bitstream Vera Sans"
   note_font_size 20
   xpos 3086
   ypos -681
   hide_input true
   addUserKnob {20 wired_tab l "Wired Stamp"}
   addUserKnob {26 identifier -STARTLINE +HIDDEN T wired}
   addUserKnob {3 lockCallbacks l "" +STARTLINE +HIDDEN}
   addUserKnob {6 toReconnect -STARTLINE +HIDDEN}
   addUserKnob {1 title l Title: t "Displayed name on the Node Graph for this Stamp and its Anchor.\nIMPORTANT: This is only for display purposes, and is different from the real/internal name of the Stamps."}
   title smoke_FRONT
   addUserKnob {26 prev_title l "" +STARTLINE +HIDDEN T smoke_FRONT}
   addUserKnob {26 tags l Tags: t "Tags of this stamp's Anchor, for information purpose only.\nClick \"show anchor\" to change them." T <i>2D</i>}
   addUserKnob {26 backdrops l Backdrops: t "Labels of backdrop nodes which contain this stamp's Anchor." T "<i><Left>before or after Flare</i>"}
   addUserKnob {26 line1 l "" +STARTLINE}
   addUserKnob {6 postageStamp_show l "postage stamp" t "Enable the postage stamp thumbnail in this node.\nYou're seeing this because the class of this node includes the postage_stamp knob." +STARTLINE}
   addUserKnob {26 anchor_label l Anchor: T " "}
   addUserKnob {22 show_anchor l " show anchor " t "Show the properties panel for this Stamp's Anchor." -STARTLINE T stamps.wiredShowAnchor()}
   addUserKnob {22 zoom_anchor l "zoom anchor" t "Navigate to this Stamp's Anchor on the Node Graph." -STARTLINE T stamps.wiredZoomAnchor()}
   addUserKnob {26 stamps_label l Stamps: T " "}
   addUserKnob {22 zoomNext l " zoom next " t "Navigate to this Stamp's next sibling on the Node Graph." -STARTLINE T stamps.wiredZoomNext()}
   addUserKnob {22 selectSimilar l " select similar " t "Select all similar Stamps to this one on the Node Graph." -STARTLINE T stamps.wiredSelectSimilar()}
   addUserKnob {26 space_1 l "" +STARTLINE T " "}
   addUserKnob {26 reconnect_label l Reconnect: t "Reconnect by the stored Anchor name." T " "}
   addUserKnob {22 reconnect_this l this t "Reconnect this Stamp to its Anchor, by its stored Anchor name." -STARTLINE T "n = nuke.thisNode()\ntry:\n    n.setInput(0,nuke.toNode(n.knob(\"anchor\").value()))\nexcept:\n    nuke.message(\"Unable to reconnect.\")\ntry:\n    import stamps\n    stamps.wiredGetStyle(n)\nexcept:\n    pass\n"}
   addUserKnob {22 reconnect_similar l similar t "Reconnect this Stamp and similar ones to their Anchor, by their stored anchor name." -STARTLINE T stamps.wiredReconnectSimilar()}
   addUserKnob {22 reconnect_all l all t "Reconnect all the Stamps to their Anchors, by their stored anchor names." -STARTLINE T stamps.wiredReconnectAll()}
   addUserKnob {26 space_2 l "" +STARTLINE T " "}
   addUserKnob {20 advanced_reconnection l "Advanced Reconnection" n 2}
   addUserKnob {26 reconnect_by_title_label l "<font color=gold>By Title:" t "Reconnect by searching for a matching title." T " "}
   addUserKnob {22 reconnect_by_title_this l this t "Look for an Anchor that shares this Stamp's title, and connect this Stamp to it.\nIMPORTANT: Use this carefully, and only when the normal reconnection doesn't work." -STARTLINE T stamps.wiredReconnectByTitle()}
   addUserKnob {22 reconnect_by_title_similar l similar t "Look for an Anchor that shares this Stamp's title, and connect this Stamp and similar ones to it.\nIMPORTANT: Use this carefully, and only when the normal reconnection doesn't work." -STARTLINE T stamps.wiredReconnectByTitleSimilar()}
   addUserKnob {22 reconnect_by_title_selected l selected t "For each Stamp selected, look for an Anchor that shares its title, and connect to it.\nIMPORTANT: Use this carefully, and only when the normal reconnection doesn't work." -STARTLINE T stamps.wiredReconnectByTitleSelected()}
   addUserKnob {26 reconnect_by_selection_label l "<font color=orangered>By Selection:" t "Force reconnect to a selected Anchor." T " "}
   addUserKnob {22 reconnect_by_selection_this l this t "Force reconnect this Stamp to a selected Anchor, whatever its name or title.\nIMPORTANT: Use this carefully, and only when the normal reconnection doesn't work." -STARTLINE T stamps.wiredReconnectBySelection()}
   addUserKnob {22 reconnect_by_selection_similar l similar t "Force reconnect this Stamp and similar ones to a selected Anchor, whatever its name or title.\nIMPORTANT: Use this carefully, and only when the normal reconnection doesn't work." -STARTLINE T stamps.wiredReconnectBySelectionSimilar()}
   addUserKnob {22 reconnect_by_selection_selected l selected t "Force reconnect all selected Stamps to an also selected Anchor, whatever its name or title.\nIMPORTANT: Use this carefully, and only when the normal reconnection doesn't work." -STARTLINE T stamps.wiredReconnectBySelectionSelected()}
   addUserKnob {1 anchor l Anchor}
   anchor Anchor_220a2be282
   addUserKnob {6 auto_reconnect_by_title l "<font color=#ED9977>&nbsp; auto-reconnect by title" t "When creating this stamp again (like on copy-paste), auto-reconnect it by title instead of doing it by the saved anchor's name, and auto-turn this off immediately.\nIMPORTANT: Should be off by default. Only use this for setting up templates." +STARTLINE}
   addUserKnob {26 line2 l "" +STARTLINE}
   addUserKnob {22 buttonHelp l Help -STARTLINE T stamps.showHelp()}
   addUserKnob {26 version l " " t "Stamps by Adrian Pueyo and Alexey Kuchinski.\nUpdated May 18 2021." -STARTLINE T "<a href=\"http://www.nukepedia.com/gizmos/other/stamps\" style=\"color:#666;text-decoration: none;\"><span style=\"color:#666\"> <big>Stamps v1.1</big></b></a>"}
  }
  Dot {
   name Dot19
   xpos 3120
   ypos -633
  }
push $N58d70c10
  PostageStamp {
   name Stamp29
   help "Stamps by Adrian Pueyo and Alexey Kuchinski.\nUpdated May 18 2021"
   onCreate "if nuke.GUI:\n    try:\n        import stamps; stamps.wiredOnCreate()\n    except:\n        pass\n"
   knobChanged "import stamps; stamps.wiredKnobChanged()"
   autolabel "nuke.thisNode().knob(\"title\").value()"
   tile_color 0x1000001
   note_font "Bitstream Vera Sans"
   note_font_size 20
   xpos 3211
   ypos -681
   hide_input true
   addUserKnob {20 wired_tab l "Wired Stamp"}
   addUserKnob {26 identifier -STARTLINE +HIDDEN T wired}
   addUserKnob {3 lockCallbacks l "" +STARTLINE +HIDDEN}
   addUserKnob {6 toReconnect -STARTLINE +HIDDEN}
   addUserKnob {1 title l Title: t "Displayed name on the Node Graph for this Stamp and its Anchor.\nIMPORTANT: This is only for display purposes, and is different from the real/internal name of the Stamps."}
   title smoke_TOP
   addUserKnob {26 prev_title l "" +STARTLINE +HIDDEN T smoke_TOP}
   addUserKnob {26 tags l Tags: t "Tags of this stamp's Anchor, for information purpose only.\nClick \"show anchor\" to change them." T <i>2D</i>}
   addUserKnob {26 backdrops l Backdrops: t "Labels of backdrop nodes which contain this stamp's Anchor." T "<i><Left>before or after Flare</i>"}
   addUserKnob {26 line1 l "" +STARTLINE}
   addUserKnob {6 postageStamp_show l "postage stamp" t "Enable the postage stamp thumbnail in this node.\nYou're seeing this because the class of this node includes the postage_stamp knob." +STARTLINE}
   addUserKnob {26 anchor_label l Anchor: T " "}
   addUserKnob {22 show_anchor l " show anchor " t "Show the properties panel for this Stamp's Anchor." -STARTLINE T stamps.wiredShowAnchor()}
   addUserKnob {22 zoom_anchor l "zoom anchor" t "Navigate to this Stamp's Anchor on the Node Graph." -STARTLINE T stamps.wiredZoomAnchor()}
   addUserKnob {26 stamps_label l Stamps: T " "}
   addUserKnob {22 zoomNext l " zoom next " t "Navigate to this Stamp's next sibling on the Node Graph." -STARTLINE T stamps.wiredZoomNext()}
   addUserKnob {22 selectSimilar l " select similar " t "Select all similar Stamps to this one on the Node Graph." -STARTLINE T stamps.wiredSelectSimilar()}
   addUserKnob {26 space_1 l "" +STARTLINE T " "}
   addUserKnob {26 reconnect_label l Reconnect: t "Reconnect by the stored Anchor name." T " "}
   addUserKnob {22 reconnect_this l this t "Reconnect this Stamp to its Anchor, by its stored Anchor name." -STARTLINE T "n = nuke.thisNode()\ntry:\n    n.setInput(0,nuke.toNode(n.knob(\"anchor\").value()))\nexcept:\n    nuke.message(\"Unable to reconnect.\")\ntry:\n    import stamps\n    stamps.wiredGetStyle(n)\nexcept:\n    pass\n"}
   addUserKnob {22 reconnect_similar l similar t "Reconnect this Stamp and similar ones to their Anchor, by their stored anchor name." -STARTLINE T stamps.wiredReconnectSimilar()}
   addUserKnob {22 reconnect_all l all t "Reconnect all the Stamps to their Anchors, by their stored anchor names." -STARTLINE T stamps.wiredReconnectAll()}
   addUserKnob {26 space_2 l "" +STARTLINE T " "}
   addUserKnob {20 advanced_reconnection l "Advanced Reconnection" n 2}
   addUserKnob {26 reconnect_by_title_label l "<font color=gold>By Title:" t "Reconnect by searching for a matching title." T " "}
   addUserKnob {22 reconnect_by_title_this l this t "Look for an Anchor that shares this Stamp's title, and connect this Stamp to it.\nIMPORTANT: Use this carefully, and only when the normal reconnection doesn't work." -STARTLINE T stamps.wiredReconnectByTitle()}
   addUserKnob {22 reconnect_by_title_similar l similar t "Look for an Anchor that shares this Stamp's title, and connect this Stamp and similar ones to it.\nIMPORTANT: Use this carefully, and only when the normal reconnection doesn't work." -STARTLINE T stamps.wiredReconnectByTitleSimilar()}
   addUserKnob {22 reconnect_by_title_selected l selected t "For each Stamp selected, look for an Anchor that shares its title, and connect to it.\nIMPORTANT: Use this carefully, and only when the normal reconnection doesn't work." -STARTLINE T stamps.wiredReconnectByTitleSelected()}
   addUserKnob {26 reconnect_by_selection_label l "<font color=orangered>By Selection:" t "Force reconnect to a selected Anchor." T " "}
   addUserKnob {22 reconnect_by_selection_this l this t "Force reconnect this Stamp to a selected Anchor, whatever its name or title.\nIMPORTANT: Use this carefully, and only when the normal reconnection doesn't work." -STARTLINE T stamps.wiredReconnectBySelection()}
   addUserKnob {22 reconnect_by_selection_similar l similar t "Force reconnect this Stamp and similar ones to a selected Anchor, whatever its name or title.\nIMPORTANT: Use this carefully, and only when the normal reconnection doesn't work." -STARTLINE T stamps.wiredReconnectBySelectionSimilar()}
   addUserKnob {22 reconnect_by_selection_selected l selected t "Force reconnect all selected Stamps to an also selected Anchor, whatever its name or title.\nIMPORTANT: Use this carefully, and only when the normal reconnection doesn't work." -STARTLINE T stamps.wiredReconnectBySelectionSelected()}
   addUserKnob {1 anchor l Anchor}
   anchor Anchor_25b668170c
   addUserKnob {6 auto_reconnect_by_title l "<font color=#ED9977>&nbsp; auto-reconnect by title" t "When creating this stamp again (like on copy-paste), auto-reconnect it by title instead of doing it by the saved anchor's name, and auto-turn this off immediately.\nIMPORTANT: Should be off by default. Only use this for setting up templates." +STARTLINE}
   addUserKnob {26 line2 l "" +STARTLINE}
   addUserKnob {22 buttonHelp l Help -STARTLINE T stamps.showHelp()}
   addUserKnob {26 version l " " t "Stamps by Adrian Pueyo and Alexey Kuchinski.\nUpdated May 18 2021." -STARTLINE T "<a href=\"http://www.nukepedia.com/gizmos/other/stamps\" style=\"color:#666;text-decoration: none;\"><span style=\"color:#666\"> <big>Stamps v1.1</big></b></a>"}
  }
push $N56244930
  PostageStamp {
   name Stamp30
   help "Stamps by Adrian Pueyo and Alexey Kuchinski.\nUpdated May 18 2021"
   onCreate "if nuke.GUI:\n    try:\n        import stamps; stamps.wiredOnCreate()\n    except:\n        pass\n"
   knobChanged "import stamps; stamps.wiredKnobChanged()"
   autolabel "nuke.thisNode().knob(\"title\").value()"
   tile_color 0x1000001
   note_font "Bitstream Vera Sans"
   note_font_size 20
   xpos 3329
   ypos -683
   hide_input true
   addUserKnob {20 wired_tab l "Wired Stamp"}
   addUserKnob {26 identifier -STARTLINE +HIDDEN T wired}
   addUserKnob {3 lockCallbacks l "" +STARTLINE +HIDDEN}
   addUserKnob {6 toReconnect -STARTLINE +HIDDEN}
   addUserKnob {1 title l Title: t "Displayed name on the Node Graph for this Stamp and its Anchor.\nIMPORTANT: This is only for display purposes, and is different from the real/internal name of the Stamps."}
   title smoke_SIDE
   addUserKnob {26 prev_title l "" +STARTLINE +HIDDEN T smoke_SIDE}
   addUserKnob {26 tags l Tags: t "Tags of this stamp's Anchor, for information purpose only.\nClick \"show anchor\" to change them." T <i>2D</i>}
   addUserKnob {26 backdrops l Backdrops: t "Labels of backdrop nodes which contain this stamp's Anchor." T "<i><Left>before or after Flare</i>"}
   addUserKnob {26 line1 l "" +STARTLINE}
   addUserKnob {6 postageStamp_show l "postage stamp" t "Enable the postage stamp thumbnail in this node.\nYou're seeing this because the class of this node includes the postage_stamp knob." +STARTLINE}
   addUserKnob {26 anchor_label l Anchor: T " "}
   addUserKnob {22 show_anchor l " show anchor " t "Show the properties panel for this Stamp's Anchor." -STARTLINE T stamps.wiredShowAnchor()}
   addUserKnob {22 zoom_anchor l "zoom anchor" t "Navigate to this Stamp's Anchor on the Node Graph." -STARTLINE T stamps.wiredZoomAnchor()}
   addUserKnob {26 stamps_label l Stamps: T " "}
   addUserKnob {22 zoomNext l " zoom next " t "Navigate to this Stamp's next sibling on the Node Graph." -STARTLINE T stamps.wiredZoomNext()}
   addUserKnob {22 selectSimilar l " select similar " t "Select all similar Stamps to this one on the Node Graph." -STARTLINE T stamps.wiredSelectSimilar()}
   addUserKnob {26 space_1 l "" +STARTLINE T " "}
   addUserKnob {26 reconnect_label l Reconnect: t "Reconnect by the stored Anchor name." T " "}
   addUserKnob {22 reconnect_this l this t "Reconnect this Stamp to its Anchor, by its stored Anchor name." -STARTLINE T "n = nuke.thisNode()\ntry:\n    n.setInput(0,nuke.toNode(n.knob(\"anchor\").value()))\nexcept:\n    nuke.message(\"Unable to reconnect.\")\ntry:\n    import stamps\n    stamps.wiredGetStyle(n)\nexcept:\n    pass\n"}
   addUserKnob {22 reconnect_similar l similar t "Reconnect this Stamp and similar ones to their Anchor, by their stored anchor name." -STARTLINE T stamps.wiredReconnectSimilar()}
   addUserKnob {22 reconnect_all l all t "Reconnect all the Stamps to their Anchors, by their stored anchor names." -STARTLINE T stamps.wiredReconnectAll()}
   addUserKnob {26 space_2 l "" +STARTLINE T " "}
   addUserKnob {20 advanced_reconnection l "Advanced Reconnection" n 2}
   addUserKnob {26 reconnect_by_title_label l "<font color=gold>By Title:" t "Reconnect by searching for a matching title." T " "}
   addUserKnob {22 reconnect_by_title_this l this t "Look for an Anchor that shares this Stamp's title, and connect this Stamp to it.\nIMPORTANT: Use this carefully, and only when the normal reconnection doesn't work." -STARTLINE T stamps.wiredReconnectByTitle()}
   addUserKnob {22 reconnect_by_title_similar l similar t "Look for an Anchor that shares this Stamp's title, and connect this Stamp and similar ones to it.\nIMPORTANT: Use this carefully, and only when the normal reconnection doesn't work." -STARTLINE T stamps.wiredReconnectByTitleSimilar()}
   addUserKnob {22 reconnect_by_title_selected l selected t "For each Stamp selected, look for an Anchor that shares its title, and connect to it.\nIMPORTANT: Use this carefully, and only when the normal reconnection doesn't work." -STARTLINE T stamps.wiredReconnectByTitleSelected()}
   addUserKnob {26 reconnect_by_selection_label l "<font color=orangered>By Selection:" t "Force reconnect to a selected Anchor." T " "}
   addUserKnob {22 reconnect_by_selection_this l this t "Force reconnect this Stamp to a selected Anchor, whatever its name or title.\nIMPORTANT: Use this carefully, and only when the normal reconnection doesn't work." -STARTLINE T stamps.wiredReconnectBySelection()}
   addUserKnob {22 reconnect_by_selection_similar l similar t "Force reconnect this Stamp and similar ones to a selected Anchor, whatever its name or title.\nIMPORTANT: Use this carefully, and only when the normal reconnection doesn't work." -STARTLINE T stamps.wiredReconnectBySelectionSimilar()}
   addUserKnob {22 reconnect_by_selection_selected l selected t "Force reconnect all selected Stamps to an also selected Anchor, whatever its name or title.\nIMPORTANT: Use this carefully, and only when the normal reconnection doesn't work." -STARTLINE T stamps.wiredReconnectBySelectionSelected()}
   addUserKnob {1 anchor l Anchor}
   anchor Anchor_232c9aab88
   addUserKnob {6 auto_reconnect_by_title l "<font color=#ED9977>&nbsp; auto-reconnect by title" t "When creating this stamp again (like on copy-paste), auto-reconnect it by title instead of doing it by the saved anchor's name, and auto-turn this off immediately.\nIMPORTANT: Should be off by default. Only use this for setting up templates." +STARTLINE}
   addUserKnob {26 line2 l "" +STARTLINE}
   addUserKnob {22 buttonHelp l Help -STARTLINE T stamps.showHelp()}
   addUserKnob {26 version l " " t "Stamps by Adrian Pueyo and Alexey Kuchinski.\nUpdated May 18 2021." -STARTLINE T "<a href=\"http://www.nukepedia.com/gizmos/other/stamps\" style=\"color:#666;text-decoration: none;\"><span style=\"color:#666\"> <big>Stamps v1.1</big></b></a>"}
  }
  Dot {
   name Dot20
   xpos 3363
   ypos -633
  }
  Group {
   inputs 3
   name gunshot10
   label "shot: \[value shotcount]\non frame: \[value shotstart]\n"
   xpos 3211
   ypos -606
   addUserKnob {20 User}
   addUserKnob {3 shotcount l shot}
   shotcount 10
   addUserKnob {3 shotstart l frame +INVISIBLE}
   shotstart {{"shotcount==0 ? 0 : shot\[value shotcount]-1" i}}
  }
   BackdropNode {
    inputs 0
    name BackdropNode19
    knobChanged "try:\n    listenedKnobs = \['text', 'position', 'name']\n    node = nuke.thisNode()\n    name = node.knob('name').value()\n    text = node.knob('text').value()\n    position = node.knob('position').value()\n    position = \"<\" + position + \">\"\n    label = node.knob('label').value()\n    \n    if nuke.thisKnob().name() in listenedKnobs:\n        if text == \"\":\n            if node.knob('position').value() == \"left\":\n                node.knob('label').setValue()\n            else:\n                node.knob('label').setValue(position + name)\n        else:\n            if node.knob('position').value() == \"left\":\n                node.knob('label').setValue(text)\n            else:\n                node.knob('label').setValue(position + text)\n                \n    elif nuke.thisKnob().name() == 'font_size':\n        fontSize = node.knob('font_size').value()\n        node.knob('note_font_size').setValue(fontSize)\nexcept:\n    pass"
    tile_color 0x232323ff
    label "<Left><h2> Gunshot"
    note_font_size 31.5
    xpos -693
    ypos -554
    bdwidth 876
    bdheight 1682
    addUserKnob {20 F_VFX l BackdropNode}
    addUserKnob {43 text l Text}
    text "<h2> Gunshot"
    addUserKnob {7 font_size l "Font Size" R 10 100}
    font_size 31.5
    addUserKnob {4 position l "" -STARTLINE M {Left Center}}
    addUserKnob {26 S01 l " " T " "}
    addUserKnob {22 grow l " <img src=\"F_scalep.png\">" -STARTLINE T "n=nuke.thisNode()\n\ndef grow(node=None,step=50):\n    try:\n        if not node:\n            n=nuke.selectedNode()\n        else:\n            n=node\n            n\['xpos'].setValue(n\['xpos'].getValue()-step)\n            n\['ypos'].setValue(n\['ypos'].getValue()-step)\n            n\['bdwidth'].setValue(n\['bdwidth'].getValue()+step*2)\n            n\['bdheight'].setValue(n\['bdheight'].getValue()+step*2)\n    except:\n        pass\ngrow(n,50)"}
    addUserKnob {22 shrink l " <img src=\"F_scalem.png\">" -STARTLINE T "n=nuke.thisNode()\n\ndef shrink(node=None,step=50):\n    try:\n        if not node:\n            n=nuke.selectedNode()\n        else:\n            n=node\n            n\['xpos'].setValue(n\['xpos'].getValue()+step)\n            n\['ypos'].setValue(n\['ypos'].getValue()+step)\n            n\['bdwidth'].setValue(n\['bdwidth'].getValue()-step*2)\n            n\['bdheight'].setValue(n\['bdheight'].getValue()-step*2)\n    except:\n        pass\nshrink(n,50)"}
    addUserKnob {22 colorandom l " <img src=\"ColorBars.png\">" -STARTLINE T "import colorsys, random\nn=nuke.thisNode()\nR,G,B= colorsys.hsv_to_rgb(random.random(),.1+random.random()*.15,.15+random.random()*.15)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ) )"}
    addUserKnob {22 darkgrey l "<font color=\"#232323\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.0, 0.0, 0.14]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 lightgrey l "<font color=\"#383838\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.0, 0.0, 0.22]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 red l "<font color=\"#8c3838\" size=6>■</font>" T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.0, 0.6, 0.55]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n" +STARTLINE}
    addUserKnob {22 orange l "<font color=\"#b28e59\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.1, 0.5, 0.7]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 yellow l "<font color=\"#ccc766\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.16, 0.5, 0.8]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 green l "<font color=\"#5d995b\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.33, 0.4, 0.6]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 cyan l "<font color=\"#72998f\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.46, 0.25, 0.6]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 blue l "<font color=\"#59687f\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.6, 0.3, 0.5]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 darkblue l "<font color=\"#63628c\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.67, 0.3, 0.55]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 magenta l "<font color=\"#927a99\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.8, 0.2, 0.6]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 pink l "<font color=\"#997a89\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.92, 0.2, 0.6]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {26 S02 l " " T " "}
    addUserKnob {26 Ftools l "" +STARTLINE T "<font color=\"#1C1C1C\"> v1.2 - Franklin VFX - 2018"}
   }
   BackdropNode {
    inputs 0
    name BackdropNode2
    knobChanged "try:\n    listenedKnobs = \['text', 'position', 'name']\n    node = nuke.thisNode()\n    name = node.knob('name').value()\n    text = node.knob('text').value()\n    position = node.knob('position').value()\n    position = \"<\" + position + \">\"\n    label = node.knob('label').value()\n    \n    if nuke.thisKnob().name() in listenedKnobs:\n        if text == \"\":\n            if node.knob('position').value() == \"left\":\n                node.knob('label').setValue()\n            else:\n                node.knob('label').setValue(position + name)\n        else:\n            if node.knob('position').value() == \"left\":\n                node.knob('label').setValue(text)\n            else:\n                node.knob('label').setValue(position + text)\n                \n    elif nuke.thisKnob().name() == 'font_size':\n        fontSize = node.knob('font_size').value()\n        node.knob('note_font_size').setValue(fontSize)\nexcept:\n    pass"
    tile_color 0x927a99ff
    note_font_size 50
    xpos -473
    ypos -221
    bdwidth 435
    bdheight 786
    z_order 1
    addUserKnob {20 F_VFX l BackdropNode}
    addUserKnob {43 text l Text}
    addUserKnob {7 font_size l "Font Size" R 10 100}
    font_size 50
    addUserKnob {4 position l "" -STARTLINE M {Left Center}}
    addUserKnob {26 S01 l " " T " "}
    addUserKnob {22 grow l " <img src=\"F_scalep.png\">" -STARTLINE T "n=nuke.thisNode()\n\ndef grow(node=None,step=50):\n    try:\n        if not node:\n            n=nuke.selectedNode()\n        else:\n            n=node\n            n\['xpos'].setValue(n\['xpos'].getValue()-step)\n            n\['ypos'].setValue(n\['ypos'].getValue()-step)\n            n\['bdwidth'].setValue(n\['bdwidth'].getValue()+step*2)\n            n\['bdheight'].setValue(n\['bdheight'].getValue()+step*2)\n    except:\n        pass\ngrow(n,50)"}
    addUserKnob {22 shrink l " <img src=\"F_scalem.png\">" -STARTLINE T "n=nuke.thisNode()\n\ndef shrink(node=None,step=50):\n    try:\n        if not node:\n            n=nuke.selectedNode()\n        else:\n            n=node\n            n\['xpos'].setValue(n\['xpos'].getValue()+step)\n            n\['ypos'].setValue(n\['ypos'].getValue()+step)\n            n\['bdwidth'].setValue(n\['bdwidth'].getValue()-step*2)\n            n\['bdheight'].setValue(n\['bdheight'].getValue()-step*2)\n    except:\n        pass\nshrink(n,50)"}
    addUserKnob {22 colorandom l " <img src=\"ColorBars.png\">" -STARTLINE T "import colorsys, random\nn=nuke.thisNode()\nR,G,B= colorsys.hsv_to_rgb(random.random(),.1+random.random()*.15,.15+random.random()*.15)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ) )"}
    addUserKnob {22 darkgrey l "<font color=\"#232323\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.0, 0.0, 0.14]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 lightgrey l "<font color=\"#383838\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.0, 0.0, 0.22]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 red l "<font color=\"#8c3838\" size=6>■</font>" T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.0, 0.6, 0.55]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n" +STARTLINE}
    addUserKnob {22 orange l "<font color=\"#b28e59\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.1, 0.5, 0.7]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 yellow l "<font color=\"#ccc766\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.16, 0.5, 0.8]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 green l "<font color=\"#5d995b\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.33, 0.4, 0.6]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 cyan l "<font color=\"#72998f\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.46, 0.25, 0.6]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 blue l "<font color=\"#59687f\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.6, 0.3, 0.5]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 darkblue l "<font color=\"#63628c\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.67, 0.3, 0.55]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 magenta l "<font color=\"#927a99\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.8, 0.2, 0.6]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 pink l "<font color=\"#997a89\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.92, 0.2, 0.6]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {26 S02 l " " T " "}
    addUserKnob {26 Ftools l "" +STARTLINE T "<font color=\"#1C1C1C\"> v1.2 - Franklin VFX - 2018"}
   }
   Constant {
    inputs 0
    channels rgb
    name Constant13
    xpos -643
    ypos 714
   }
   AdjBBox {
    numpixels {{size_bbox}}
    name AdjBBox13
    xpos -643
    ypos 849
   }
   Dot {
    name Dot78
    xpos -609
    ypos 987
   }
   Axis3 {
    inputs 0
    useMatrix true
    matrix {
        {{parent.cCard3D_1.matrix} {parent.cCard3D_1.matrix} {parent.cCard3D_1.matrix} {parent.cCard3D_1.matrix}}
        {{parent.cCard3D_1.matrix} {parent.cCard3D_1.matrix} {parent.cCard3D_1.matrix} {parent.cCard3D_1.matrix}}
        {{parent.cCard3D_1.matrix} {parent.cCard3D_1.matrix} {parent.cCard3D_1.matrix} {parent.cCard3D_1.matrix}}
        {{parent.cCard3D_1.matrix} {parent.cCard3D_1.matrix} {parent.cCard3D_1.matrix} {parent.cCard3D_1.matrix}}
      }
    name Axis14
    xpos -203
    ypos -90
   }
set N537aa8c0 [stack 0]
push 0
   Input {
    inputs 0
    name top
    xpos -283
    ypos -1243
    number 1
   }
   TimeOffset {
    time_offset {{"shot_\[value shotnmbr]==0 ? 0 : shot_\[value shotnmbr]-1"}}
    time ""
    name CTimeOffset1
    label "shot: \[value shotnmbr]\non frame \[value time_offset]"
    xpos -283
    ypos -924
    addUserKnob {20 User}
    addUserKnob {3 shotnmbr l "shot "}
    shotnmbr {{shotcount}}
    addUserKnob {3 ref}
    ref {{time_offset+1}}
   }
   Group {
    name DecimalTimeOffset1
    tile_color 0xafa35dff
    label "random asset"
    note_font "Bitstream Vera Sans Bold"
    xpos -283
    ypos -841
    addUserKnob {20 User}
    addUserKnob {7 decimal l "time offset (decimal)"}
    decimal {{random(shotcount*seed)}}
    addUserKnob {26 ""}
    addUserKnob {26 _1 l "" +STARTLINE T "Chris Fryer | 2020\nupdated by Yorben Otto | 2024"}
   }
    Input {
     inputs 0
     name Input1
     xpos 426
     ypos -793
    }
    TimeOffset {
     time_offset {{(-floor(parent.decimal))*(DecimalTimeOffset1.decimal<0)}}
     time ""
     name TimeOffset1
     xpos 426
     ypos -675
    }
    Dot {
     name Dot6
     xpos 460
     ypos -635
    }
set N537ea120 [stack 0]
    Dot {
     name Dot5
     xpos 350
     ypos -635
    }
    Dot {
     name Dot7
     xpos 350
     ypos -365
    }
push $N537ea120
    Dot {
     name Dot1
     xpos 572
     ypos -635
    }
    TimeBlur {
     divisions 2
     shutter {{(parent.decimal-(floor(parent.decimal)))*2}}
     shutteroffset start
     shuttercustomoffset 0
     name TimeBlur1
     xpos 538
     ypos -558
    }
    Dot {
     name Dot2
     xpos 572
     ypos -490
    }
push $N537ea120
    TimeBlur {
     divisions 2
     shutter {{parent.decimal*2}}
     shutteroffset start
     shuttercustomoffset 0
     name TimeBlur8
     xpos 426
     ypos -556
    }
    Switch {
     inputs 2
     which {{parent.decimal<0}}
     name Switch1
     xpos 426
     ypos -494
    }
    Multiply {
     value {{parent.TimeBlur8.divisions}}
     name Multiply6
     xpos 426
     ypos -436
    }
    Merge2 {
     inputs 2
     operation from
     name Merge6
     xpos 426
     ypos -369
    }
set N5093bf80 [stack 0]
    Output {
     name Output1
     xpos 426
     ypos -221
    }
push $N5093bf80
push $N5093bf80
    Viewer {
     inputs 2
     frame_range 1-100
     name Viewer1
     xpos 675
     ypos -246
    }
   end_group
   NoTimeBlur {
    name NoTimeBlur1
    xpos -283
    ypos -779
   }
   Transform {
    scale {{0.05+(0.05*(((parent.DecimalTimeOffset13.decimal-0.5)*2)*ScaleVariationSmoke))}}
    center {{root.width/2 x1015 2304} {root.height/2}}
    shutteroffset centred
    name Transform44
    xpos -283
    ypos -152
   }
   Card3D {
    inputs 3
    rot_order ZYX
    translate {0 0 0}
    rotate {90 0 0}
    shutteroffset centred
    name cCard3D25
    tile_color 0x7b1d1dff
    xpos -283
    ypos 11
    addUserKnob {20 User l parent}
    addUserKnob {22 python_button l "set parent" t "select parent node, and press this button to set the selected node as parent" +INVISIBLE T "n = nuke.selectedNode()\['name'].getValue()\nnuke.thisNode()\['string'].setValue(n)" +STARTLINE}
    addUserKnob {1 string l parent +INVISIBLE}
    string null
    addUserKnob {3 ref l "ref frame"}
    ref 1015
   }
   Transform {
    translate {{"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].translate.x(ref)\}]"} {"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].translate.y(ref)\}]"}}
    rotate {{"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].rotate-\[value parent_gun].rotate(ref)\}]"}}
    scale {{"\[if \{\[value parent_gun]==\"null\"\} \{return 1\} \{return 1+(\[value parent_gun].scale-\[value parent_gun].scale(ref))\}]"}}
    center {{"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].center.x(ref)\}]"} {"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].center.y(ref)\}]"}}
    name Transform_GUNMatchMove37
    xpos -283
    ypos 126
    addUserKnob {20 User l parent}
    addUserKnob {3 ref}
    ref {{parent.CTimeOffset.ref}}
   }
   Transform {
    translate {{"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].translate.x-\[value parent_env].translate.x(ref)\}]"} {"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].translate.y-\[value parent_env].translate.y(ref)\}]"}}
    rotate {{"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].rotate-\[value parent_env].rotate(ref)\}]"}}
    scale {{"\[if \{\[value parent_gun]==\"null\"\} \{return 1\} \{return 1+(\[value parent_env].scale-\[value parent_env].scale(ref))\}]"}}
    center {{"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].center.x(ref)\}]"} {"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].center.y(ref)\}]"}}
    motionblur 0.2
    shutter {{SmokeMB*0.5}}
    shutteroffset centred
    name Transform_ENVMatchMove37
    label "\n"
    xpos -283
    ypos 255
    addUserKnob {20 User l parent}
    addUserKnob {3 ref}
    ref {{parent.CTimeOffset.ref}}
   }
   Transform {
    translate {{"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return -((root.width/2)-(\[value parent_gun].center.x(1)+\[value parent_gun].translate.x(1)))\}]"} {"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return -((root.height/2)-(\[value parent_gun].center.y(1)+\[value parent_gun].translate.y(1)))\}]"}}
    name Transform_GUNMatchMove6
    label "alignment correction"
    xpos -283
    ypos 344
    addUserKnob {20 User l parent}
    addUserKnob {22 python_button l "set parent" t "select parent node, and press this button to set the selected node as parent" T "n = nuke.selectedNode()\['name'].getValue()\nnuke.thisNode()\['string'].setValue(n)" +STARTLINE}
    addUserKnob {1 string l parent}
    string Transform_MatchMove10
    addUserKnob {3 ref +INVISIBLE}
    ref {{parent.cCard3D_8.ref}}
   }
   Multiply {
    value {{math_matrix.result_y_smoke(parent.CTimeOffset.ref)}}
    name Angle_reveal_top1
    label TOP
    xpos -283
    ypos 403
   }
   Remove {
    operation keep
    channels rgb
    name Remove1
    xpos -283
    ypos 514
   }
push 0
   Switch {
    inputs 2
    which {{parent.Angle_reveal_top1.value>0.001}}
    name Switch1
    xpos -283
    ypos 660
   }
   Dot {
    name Dot82
    xpos -249
    ypos 705
   }
push 0
push $N537aa8c0
push 0
   Input {
    inputs 0
    name front
    xpos -436
    ypos -1243
    number 2
   }
   TimeOffset {
    time_offset {{"shot_\[value shotnmbr]==0 ? 0 : shot_\[value shotnmbr]-1"}}
    time ""
    name CTimeOffset2
    label "shot: \[value shotnmbr]\non frame \[value time_offset]"
    xpos -436
    ypos -925
    addUserKnob {20 User}
    addUserKnob {3 shotnmbr l "shot "}
    shotnmbr {{shotcount}}
    addUserKnob {3 ref}
    ref {{time_offset+1}}
   }
   Group {
    name DecimalTimeOffset2
    tile_color 0xafa35dff
    label "random asset"
    note_font "Bitstream Vera Sans Bold"
    xpos -436
    ypos -842
    addUserKnob {20 User}
    addUserKnob {7 decimal l "time offset (decimal)"}
    decimal {{random(shotcount*seed)}}
    addUserKnob {26 ""}
    addUserKnob {26 _1 l "" +STARTLINE T "Chris Fryer | 2020\nupdated by Yorben Otto | 2024"}
   }
    Input {
     inputs 0
     name Input1
     xpos 426
     ypos -793
    }
    TimeOffset {
     time_offset {{(-floor(parent.decimal))*(DecimalTimeOffset2.decimal<0)}}
     time ""
     name TimeOffset1
     xpos 426
     ypos -675
    }
    Dot {
     name Dot6
     xpos 460
     ypos -635
    }
set N55787e60 [stack 0]
    Dot {
     name Dot5
     xpos 350
     ypos -635
    }
    Dot {
     name Dot7
     xpos 350
     ypos -365
    }
push $N55787e60
    Dot {
     name Dot1
     xpos 572
     ypos -635
    }
    TimeBlur {
     divisions 2
     shutter {{(parent.decimal-(floor(parent.decimal)))*2}}
     shutteroffset start
     shuttercustomoffset 0
     name TimeBlur1
     xpos 538
     ypos -558
    }
    Dot {
     name Dot2
     xpos 572
     ypos -490
    }
push $N55787e60
    TimeBlur {
     divisions 2
     shutter {{parent.decimal*2}}
     shutteroffset start
     shuttercustomoffset 0
     name TimeBlur8
     xpos 426
     ypos -556
    }
    Switch {
     inputs 2
     which {{parent.decimal<0}}
     name Switch1
     xpos 426
     ypos -494
    }
    Multiply {
     value {{parent.TimeBlur8.divisions}}
     name Multiply6
     xpos 426
     ypos -436
    }
    Merge2 {
     inputs 2
     operation from
     name Merge6
     xpos 426
     ypos -369
    }
set N557c9da0 [stack 0]
    Output {
     name Output1
     xpos 426
     ypos -221
    }
push $N557c9da0
push $N557c9da0
    Viewer {
     inputs 2
     frame_range 1-100
     name Viewer1
     xpos 675
     ypos -246
    }
   end_group
   NoTimeBlur {
    name NoTimeBlur5
    xpos -436
    ypos -780
   }
   Transform {
    scale {{0.05+(0.05*(((parent.DecimalTimeOffset13.decimal-0.5)*2)*ScaleVariationSmoke))}}
    center {{root.width/2 x1015 2304} {root.height/2}}
    shutteroffset centred
    name Transform45
    xpos -436
    ypos -151
   }
   Card3D {
    inputs 3
    rot_order ZYX
    translate {0 0 0}
    rotate {0 90 0}
    shutteroffset centred
    name cCard3D26
    tile_color 0x7b1d1dff
    xpos -436
    ypos 15
    addUserKnob {20 User l parent}
    addUserKnob {22 python_button l "set parent" t "select parent node, and press this button to set the selected node as parent" +INVISIBLE T "n = nuke.selectedNode()\['name'].getValue()\nnuke.thisNode()\['string'].setValue(n)" +STARTLINE}
    addUserKnob {1 string l parent +INVISIBLE}
    string null
    addUserKnob {3 ref l "ref frame"}
    ref 1015
   }
   Transform {
    translate {{"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].translate.x(ref)\}]"} {"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].translate.y(ref)\}]"}}
    rotate {{"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].rotate-\[value parent_gun].rotate(ref)\}]"}}
    scale {{"\[if \{\[value parent_gun]==\"null\"\} \{return 1\} \{return 1+(\[value parent_gun].scale-\[value parent_gun].scale(ref))\}]"}}
    center {{"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].center.x(ref)\}]"} {"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].center.y(ref)\}]"}}
    name Transform_GUNMatchMove38
    label "\n"
    xpos -436
    ypos 124
    addUserKnob {20 User l parent}
    addUserKnob {3 ref}
    ref {{parent.CTimeOffset.ref}}
   }
   Transform {
    translate {{"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].translate.x-\[value parent_env].translate.x(ref)\}]"} {"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].translate.y-\[value parent_env].translate.y(ref)\}]"}}
    rotate {{"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].rotate-\[value parent_env].rotate(ref)\}]"}}
    scale {{"\[if \{\[value parent_gun]==\"null\"\} \{return 1\} \{return 1+(\[value parent_env].scale-\[value parent_env].scale(ref))\}]"}}
    center {{"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].center.x(ref)\}]"} {"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].center.y(ref)\}]"}}
    motionblur 0.2
    shutter {{SmokeMB*0.5}}
    shutteroffset centred
    name Transform_ENVMatchMove38
    xpos -436
    ypos 254
    addUserKnob {20 User l parent}
    addUserKnob {3 ref}
    ref {{parent.CTimeOffset.ref}}
   }
   Transform {
    translate {{"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return -((root.width/2)-(\[value parent_gun].center.x(1)+\[value parent_gun].translate.x(1)))\}]"} {"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return -((root.height/2)-(\[value parent_gun].center.y(1)+\[value parent_gun].translate.y(1)))\}]"}}
    name Transform_GUNMatchMove7
    label "alignment correction"
    xpos -436
    ypos 343
    addUserKnob {20 User l parent}
    addUserKnob {22 python_button l "set parent" t "select parent node, and press this button to set the selected node as parent" T "n = nuke.selectedNode()\['name'].getValue()\nnuke.thisNode()\['string'].setValue(n)" +STARTLINE}
    addUserKnob {1 string l parent}
    string Transform_MatchMove10
    addUserKnob {3 ref +INVISIBLE}
    ref {{parent.cCard3D_8.ref}}
   }
   Multiply {
    value {{math_matrix.result_x_smoke(parent.CTimeOffset.ref)}}
    name Angle_reveal_front1
    label FRONT
    xpos -436
    ypos 401
   }
   Remove {
    operation keep
    channels rgb
    name Remove2
    xpos -436
    ypos 511
   }
push 0
   Switch {
    inputs 2
    which {{parent.Angle_reveal_front1.value>0.001}}
    name Switch2
    xpos -436
    ypos 660
   }
   Dot {
    name Dot83
    xpos -402
    ypos 735
   }
   Input {
    inputs 0
    name side
    xpos -130
    ypos -1242
   }
   TimeOffset {
    time_offset {{"shot_\[value shotnmbr]==0 ? 0 : shot_\[value shotnmbr]-1"}}
    time ""
    name CTimeOffset
    label "shot: \[value shotnmbr]\non frame \[value time_offset]"
    xpos -130
    ypos -927
    addUserKnob {20 User}
    addUserKnob {3 shotnmbr l "shot "}
    shotnmbr {{shotcount}}
    addUserKnob {3 ref}
    ref {{time_offset+1}}
   }
   Group {
    name DecimalTimeOffset13
    tile_color 0xafa35dff
    label "random asset"
    note_font "Bitstream Vera Sans Bold"
    xpos -130
    ypos -844
    addUserKnob {20 User}
    addUserKnob {7 decimal l "time offset (decimal)"}
    decimal {{random(shotcount*seed)}}
    addUserKnob {26 ""}
    addUserKnob {26 _1 l "" +STARTLINE T "Chris Fryer | 2020\nupdated by Yorben Otto | 2024"}
   }
    Input {
     inputs 0
     name Input1
     xpos 426
     ypos -793
    }
    TimeOffset {
     time_offset {{(-floor(parent.decimal))*(DecimalTimeOffset13.decimal<0)}}
     time ""
     name TimeOffset1
     xpos 426
     ypos -675
    }
    Dot {
     name Dot6
     xpos 460
     ypos -635
    }
set N53b25c10 [stack 0]
    Dot {
     name Dot5
     xpos 350
     ypos -635
    }
    Dot {
     name Dot7
     xpos 350
     ypos -365
    }
push $N53b25c10
    Dot {
     name Dot1
     xpos 572
     ypos -635
    }
    TimeBlur {
     divisions 2
     shutter {{(parent.decimal-(floor(parent.decimal)))*2}}
     shutteroffset start
     shuttercustomoffset 0
     name TimeBlur1
     xpos 538
     ypos -558
    }
    Dot {
     name Dot2
     xpos 572
     ypos -490
    }
push $N53b25c10
    TimeBlur {
     divisions 2
     shutter {{parent.decimal*2}}
     shutteroffset start
     shuttercustomoffset 0
     name TimeBlur8
     xpos 426
     ypos -556
    }
    Switch {
     inputs 2
     which {{parent.decimal<0}}
     name Switch1
     xpos 426
     ypos -494
    }
    Multiply {
     value {{parent.TimeBlur8.divisions}}
     name Multiply6
     xpos 426
     ypos -436
    }
    Merge2 {
     inputs 2
     operation from
     name Merge6
     xpos 426
     ypos -369
    }
set N53b67b50 [stack 0]
    Output {
     name Output1
     xpos 426
     ypos -221
    }
push $N53b67b50
push $N53b67b50
    Viewer {
     inputs 2
     frame_range 1-100
     name Viewer1
     xpos 675
     ypos -246
    }
   end_group
   NoTimeBlur {
    name NoTimeBlur13
    xpos -130
    ypos -782
   }
   Transform {
    scale {{0.05+(0.05*(((parent.DecimalTimeOffset13.decimal-0.5)*2)*ScaleVariationSmoke))}}
    center {{root.width/2 x1015 2304} {root.height/2}}
    shutteroffset centred
    name Transform46
    xpos -130
    ypos -155
   }
   Card3D {
    translate {{"\[if \{\[exists  parent.parent.parent.input0]\} \{return \[value \[topnode parent.parent.parent.input0].name].translate.x(ref)\} \{return 0\}]"} {"\[if \{\[exists  parent.parent.parent.input0]\} \{return \[value \[topnode parent.parent.parent.input0].name].translate.y(ref)\} \{return 0\}]"} {"\[if \{\[exists  parent.parent.parent.input0]\} \{return \[value \[topnode parent.parent.parent.input0].name].translate.z(ref)\} \{return -1\}]"}}
    rotate {{"\[if \{\[exists  parent.parent.parent.input0]\} \{return \[value \[topnode parent.parent.parent.input0].name].rotate.x(ref)\} \{return 0\}]"} {"\[if \{\[exists  parent.parent.parent.input0]\} \{return \[value \[topnode parent.parent.parent.input0].name].rotate.y(ref)\} \{return 0\}]"} {"\[if \{\[exists  parent.parent.parent.input0]\} \{return \[value \[topnode parent.parent.parent.input0].name].rotate.z(ref)\} \{return 0\}]"}}
    scaling {{"\[if \{\[exists  parent.parent.parent.input0]\} \{return \[value \[topnode parent.parent.parent.input0].name].scaling.x(ref)\} \{return 1\}]"} {"\[if \{\[exists  parent.parent.parent.input0]\} \{return \[value \[topnode parent.parent.parent.input0].name].scaling.y(ref)\} \{return 1\}]"} {"\[if \{\[exists  parent.parent.parent.input0]\} \{return \[value \[topnode parent.parent.parent.input0].name].scaling.z(ref)\} \{return 1\}]"}}
    uniform_scale {{"\[if \{\[exists  parent.parent.parent.input0]\} \{return (\[value \[topnode parent.parent.parent.input0].name].uniform_scale(ref)*25)\} \{return 25\}]"}}
    shutteroffset centred
    name cCard3D_1
    tile_color 0x7b1d1dff
    label "ref frame: \[value ref]"
    xpos -130
    ypos 2
    addUserKnob {20 User l parent}
    addUserKnob {22 python_button l "set parent" t "select parent node, and press this button to set the selected node as parent" +INVISIBLE T "n = nuke.selectedNode()\['name'].getValue()\nnuke.thisNode()\['string'].setValue(n)" +STARTLINE}
    addUserKnob {1 string l parent +INVISIBLE}
    string null
    addUserKnob {3 id l "id number"}
    id {{parent.CTimeOffset.shotnmbr}}
    addUserKnob {3 ref l "ref frame"}
    ref {{parent.CTimeOffset.ref}}
   }
   Transform {
    translate {{"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].translate.x(ref)\}]"} {"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].translate.y(ref)\}]"}}
    rotate {{"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].rotate-\[value parent_gun].rotate(ref)\}]"}}
    scale {{"\[if \{\[value parent_gun]==\"null\"\} \{return 1\} \{return 1+(\[value parent_gun].scale-\[value parent_gun].scale(ref))\}]"}}
    center {{"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].center.x(ref)\}]"} {"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].center.y(ref)\}]"}}
    name Transform_GUNMatchMove39
    label "\n"
    xpos -130
    ypos 124
    addUserKnob {20 User l parent}
    addUserKnob {3 ref}
    ref {{parent.CTimeOffset.ref}}
   }
   Transform {
    translate {{"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].translate.x-\[value parent_env].translate.x(ref)\}]"} {"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].translate.y-\[value parent_env].translate.y(ref)\}]"}}
    rotate {{"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].rotate-\[value parent_env].rotate(ref)\}]"}}
    scale {{"\[if \{\[value parent_gun]==\"null\"\} \{return 1\} \{return 1+(\[value parent_env].scale-\[value parent_env].scale(ref))\}]"}}
    center {{"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].center.x(ref)\}]"} {"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].center.y(ref)\}]"}}
    motionblur 0.2
    shutter {{SmokeMB*0.5}}
    shutteroffset centred
    name Transform_ENVMatchMove39
    xpos -130
    ypos 258
    addUserKnob {20 User l parent}
    addUserKnob {3 ref}
    ref {{parent.CTimeOffset.ref}}
   }
   Transform {
    translate {{"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return -((root.width/2)-(\[value parent_gun].center.x(1)+\[value parent_gun].translate.x(1)))\}]"} {"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return -((root.height/2)-(\[value parent_gun].center.y(1)+\[value parent_gun].translate.y(1)))\}]"}}
    name Transform_GUNMatchMove5
    label "alignment correction"
    xpos -130
    ypos 340
    addUserKnob {20 User l parent}
    addUserKnob {22 python_button l "set parent" t "select parent node, and press this button to set the selected node as parent" T "n = nuke.selectedNode()\['name'].getValue()\nnuke.thisNode()\['string'].setValue(n)" +STARTLINE}
    addUserKnob {1 string l parent}
    string Transform_MatchMove10
    addUserKnob {3 ref +INVISIBLE}
    ref {{parent.cCard3D_8.ref}}
   }
   Multiply {
    value {{math_matrix.result_z_smoke(parent.CTimeOffset.ref)}}
    name Angle_reveal_side1
    label SIDE
    xpos -130
    ypos 404
   }
   Remove {
    operation keep
    channels rgb
    name Remove39
    xpos -130
    ypos 514
   }
push 0
   Switch {
    inputs 2
    which {{parent.Angle_reveal_side1.value>0.001}}
    name Switch3
    xpos -130
    ypos 658
   }
   Merge2 {
    inputs 3+1
    operation max
    Achannels rgb
    Bchannels rgb
    output rgb
    name Merge28
    xpos -130
    ypos 731
   }
   Merge2 {
    inputs 2
    operation plus
    bbox intersection
    Achannels rgb
    Bchannels rgb
    output rgb
    name Merge29
    xpos -130
    ypos 983
   }
   Shuffle2 {
    fromInput1 {{0} B}
    fromInput2 {{0} B}
    mappings "4 rgba.red 0 0 rgba.red 0 0 rgba.green 0 1 rgba.green 0 1 rgba.blue 0 2 rgba.alpha 0 3 rgba.blue 0 2 rgba.blue 0 2"
    name Shuffle1
    xpos -130
    ypos 1021
   }
push 0
   Switch {
    inputs 2
    which {{"shot_\[value count]==0?0:frame>=shot_\[value count]"}}
    name cSwitch_13
    xpos -130
    ypos 1078
    addUserKnob {20 User}
    addUserKnob {3 count}
    count {{parent.CTimeOffset.shotnmbr}}
   }
   Output {
    name Output1
    xpos -130
    ypos 1323
   }
   StickyNote {
    inputs 0
    name StickyNote1
    label "<-- handy to break concatonation?  "
    xpos -39
    ypos 193
   }
  end_group
push $N586971d0
  PostageStamp {
   name Stamp25
   help "Stamps by Adrian Pueyo and Alexey Kuchinski.\nUpdated May 18 2021"
   onCreate "if nuke.GUI:\n    try:\n        import stamps; stamps.wiredOnCreate()\n    except:\n        pass\n"
   knobChanged "import stamps; stamps.wiredKnobChanged()"
   autolabel "nuke.thisNode().knob(\"title\").value()"
   tile_color 0x1000001
   note_font "Bitstream Vera Sans"
   note_font_size 20
   xpos 2687
   ypos -677
   hide_input true
   addUserKnob {20 wired_tab l "Wired Stamp"}
   addUserKnob {26 identifier -STARTLINE +HIDDEN T wired}
   addUserKnob {3 lockCallbacks l "" +STARTLINE +HIDDEN}
   addUserKnob {6 toReconnect -STARTLINE +HIDDEN}
   addUserKnob {1 title l Title: t "Displayed name on the Node Graph for this Stamp and its Anchor.\nIMPORTANT: This is only for display purposes, and is different from the real/internal name of the Stamps."}
   title smoke_FRONT
   addUserKnob {26 prev_title l "" +STARTLINE +HIDDEN T smoke_FRONT}
   addUserKnob {26 tags l Tags: t "Tags of this stamp's Anchor, for information purpose only.\nClick \"show anchor\" to change them." T <i>2D</i>}
   addUserKnob {26 backdrops l Backdrops: t "Labels of backdrop nodes which contain this stamp's Anchor." T "<i><Left>before or after Flare</i>"}
   addUserKnob {26 line1 l "" +STARTLINE}
   addUserKnob {6 postageStamp_show l "postage stamp" t "Enable the postage stamp thumbnail in this node.\nYou're seeing this because the class of this node includes the postage_stamp knob." +STARTLINE}
   addUserKnob {26 anchor_label l Anchor: T " "}
   addUserKnob {22 show_anchor l " show anchor " t "Show the properties panel for this Stamp's Anchor." -STARTLINE T stamps.wiredShowAnchor()}
   addUserKnob {22 zoom_anchor l "zoom anchor" t "Navigate to this Stamp's Anchor on the Node Graph." -STARTLINE T stamps.wiredZoomAnchor()}
   addUserKnob {26 stamps_label l Stamps: T " "}
   addUserKnob {22 zoomNext l " zoom next " t "Navigate to this Stamp's next sibling on the Node Graph." -STARTLINE T stamps.wiredZoomNext()}
   addUserKnob {22 selectSimilar l " select similar " t "Select all similar Stamps to this one on the Node Graph." -STARTLINE T stamps.wiredSelectSimilar()}
   addUserKnob {26 space_1 l "" +STARTLINE T " "}
   addUserKnob {26 reconnect_label l Reconnect: t "Reconnect by the stored Anchor name." T " "}
   addUserKnob {22 reconnect_this l this t "Reconnect this Stamp to its Anchor, by its stored Anchor name." -STARTLINE T "n = nuke.thisNode()\ntry:\n    n.setInput(0,nuke.toNode(n.knob(\"anchor\").value()))\nexcept:\n    nuke.message(\"Unable to reconnect.\")\ntry:\n    import stamps\n    stamps.wiredGetStyle(n)\nexcept:\n    pass\n"}
   addUserKnob {22 reconnect_similar l similar t "Reconnect this Stamp and similar ones to their Anchor, by their stored anchor name." -STARTLINE T stamps.wiredReconnectSimilar()}
   addUserKnob {22 reconnect_all l all t "Reconnect all the Stamps to their Anchors, by their stored anchor names." -STARTLINE T stamps.wiredReconnectAll()}
   addUserKnob {26 space_2 l "" +STARTLINE T " "}
   addUserKnob {20 advanced_reconnection l "Advanced Reconnection" n 2}
   addUserKnob {26 reconnect_by_title_label l "<font color=gold>By Title:" t "Reconnect by searching for a matching title." T " "}
   addUserKnob {22 reconnect_by_title_this l this t "Look for an Anchor that shares this Stamp's title, and connect this Stamp to it.\nIMPORTANT: Use this carefully, and only when the normal reconnection doesn't work." -STARTLINE T stamps.wiredReconnectByTitle()}
   addUserKnob {22 reconnect_by_title_similar l similar t "Look for an Anchor that shares this Stamp's title, and connect this Stamp and similar ones to it.\nIMPORTANT: Use this carefully, and only when the normal reconnection doesn't work." -STARTLINE T stamps.wiredReconnectByTitleSimilar()}
   addUserKnob {22 reconnect_by_title_selected l selected t "For each Stamp selected, look for an Anchor that shares its title, and connect to it.\nIMPORTANT: Use this carefully, and only when the normal reconnection doesn't work." -STARTLINE T stamps.wiredReconnectByTitleSelected()}
   addUserKnob {26 reconnect_by_selection_label l "<font color=orangered>By Selection:" t "Force reconnect to a selected Anchor." T " "}
   addUserKnob {22 reconnect_by_selection_this l this t "Force reconnect this Stamp to a selected Anchor, whatever its name or title.\nIMPORTANT: Use this carefully, and only when the normal reconnection doesn't work." -STARTLINE T stamps.wiredReconnectBySelection()}
   addUserKnob {22 reconnect_by_selection_similar l similar t "Force reconnect this Stamp and similar ones to a selected Anchor, whatever its name or title.\nIMPORTANT: Use this carefully, and only when the normal reconnection doesn't work." -STARTLINE T stamps.wiredReconnectBySelectionSimilar()}
   addUserKnob {22 reconnect_by_selection_selected l selected t "Force reconnect all selected Stamps to an also selected Anchor, whatever its name or title.\nIMPORTANT: Use this carefully, and only when the normal reconnection doesn't work." -STARTLINE T stamps.wiredReconnectBySelectionSelected()}
   addUserKnob {1 anchor l Anchor}
   anchor Anchor_220a2be282
   addUserKnob {6 auto_reconnect_by_title l "<font color=#ED9977>&nbsp; auto-reconnect by title" t "When creating this stamp again (like on copy-paste), auto-reconnect it by title instead of doing it by the saved anchor's name, and auto-turn this off immediately.\nIMPORTANT: Should be off by default. Only use this for setting up templates." +STARTLINE}
   addUserKnob {26 line2 l "" +STARTLINE}
   addUserKnob {22 buttonHelp l Help -STARTLINE T stamps.showHelp()}
   addUserKnob {26 version l " " t "Stamps by Adrian Pueyo and Alexey Kuchinski.\nUpdated May 18 2021." -STARTLINE T "<a href=\"http://www.nukepedia.com/gizmos/other/stamps\" style=\"color:#666;text-decoration: none;\"><span style=\"color:#666\"> <big>Stamps v1.1</big></b></a>"}
  }
  Dot {
   name Dot17
   xpos 2721
   ypos -629
  }
push $N58d70c10
  PostageStamp {
   name Stamp26
   help "Stamps by Adrian Pueyo and Alexey Kuchinski.\nUpdated May 18 2021"
   onCreate "if nuke.GUI:\n    try:\n        import stamps; stamps.wiredOnCreate()\n    except:\n        pass\n"
   knobChanged "import stamps; stamps.wiredKnobChanged()"
   autolabel "nuke.thisNode().knob(\"title\").value()"
   tile_color 0x1000001
   note_font "Bitstream Vera Sans"
   note_font_size 20
   xpos 2812
   ypos -677
   hide_input true
   addUserKnob {20 wired_tab l "Wired Stamp"}
   addUserKnob {26 identifier -STARTLINE +HIDDEN T wired}
   addUserKnob {3 lockCallbacks l "" +STARTLINE +HIDDEN}
   addUserKnob {6 toReconnect -STARTLINE +HIDDEN}
   addUserKnob {1 title l Title: t "Displayed name on the Node Graph for this Stamp and its Anchor.\nIMPORTANT: This is only for display purposes, and is different from the real/internal name of the Stamps."}
   title smoke_TOP
   addUserKnob {26 prev_title l "" +STARTLINE +HIDDEN T smoke_TOP}
   addUserKnob {26 tags l Tags: t "Tags of this stamp's Anchor, for information purpose only.\nClick \"show anchor\" to change them." T <i>2D</i>}
   addUserKnob {26 backdrops l Backdrops: t "Labels of backdrop nodes which contain this stamp's Anchor." T "<i><Left>before or after Flare</i>"}
   addUserKnob {26 line1 l "" +STARTLINE}
   addUserKnob {6 postageStamp_show l "postage stamp" t "Enable the postage stamp thumbnail in this node.\nYou're seeing this because the class of this node includes the postage_stamp knob." +STARTLINE}
   addUserKnob {26 anchor_label l Anchor: T " "}
   addUserKnob {22 show_anchor l " show anchor " t "Show the properties panel for this Stamp's Anchor." -STARTLINE T stamps.wiredShowAnchor()}
   addUserKnob {22 zoom_anchor l "zoom anchor" t "Navigate to this Stamp's Anchor on the Node Graph." -STARTLINE T stamps.wiredZoomAnchor()}
   addUserKnob {26 stamps_label l Stamps: T " "}
   addUserKnob {22 zoomNext l " zoom next " t "Navigate to this Stamp's next sibling on the Node Graph." -STARTLINE T stamps.wiredZoomNext()}
   addUserKnob {22 selectSimilar l " select similar " t "Select all similar Stamps to this one on the Node Graph." -STARTLINE T stamps.wiredSelectSimilar()}
   addUserKnob {26 space_1 l "" +STARTLINE T " "}
   addUserKnob {26 reconnect_label l Reconnect: t "Reconnect by the stored Anchor name." T " "}
   addUserKnob {22 reconnect_this l this t "Reconnect this Stamp to its Anchor, by its stored Anchor name." -STARTLINE T "n = nuke.thisNode()\ntry:\n    n.setInput(0,nuke.toNode(n.knob(\"anchor\").value()))\nexcept:\n    nuke.message(\"Unable to reconnect.\")\ntry:\n    import stamps\n    stamps.wiredGetStyle(n)\nexcept:\n    pass\n"}
   addUserKnob {22 reconnect_similar l similar t "Reconnect this Stamp and similar ones to their Anchor, by their stored anchor name." -STARTLINE T stamps.wiredReconnectSimilar()}
   addUserKnob {22 reconnect_all l all t "Reconnect all the Stamps to their Anchors, by their stored anchor names." -STARTLINE T stamps.wiredReconnectAll()}
   addUserKnob {26 space_2 l "" +STARTLINE T " "}
   addUserKnob {20 advanced_reconnection l "Advanced Reconnection" n 2}
   addUserKnob {26 reconnect_by_title_label l "<font color=gold>By Title:" t "Reconnect by searching for a matching title." T " "}
   addUserKnob {22 reconnect_by_title_this l this t "Look for an Anchor that shares this Stamp's title, and connect this Stamp to it.\nIMPORTANT: Use this carefully, and only when the normal reconnection doesn't work." -STARTLINE T stamps.wiredReconnectByTitle()}
   addUserKnob {22 reconnect_by_title_similar l similar t "Look for an Anchor that shares this Stamp's title, and connect this Stamp and similar ones to it.\nIMPORTANT: Use this carefully, and only when the normal reconnection doesn't work." -STARTLINE T stamps.wiredReconnectByTitleSimilar()}
   addUserKnob {22 reconnect_by_title_selected l selected t "For each Stamp selected, look for an Anchor that shares its title, and connect to it.\nIMPORTANT: Use this carefully, and only when the normal reconnection doesn't work." -STARTLINE T stamps.wiredReconnectByTitleSelected()}
   addUserKnob {26 reconnect_by_selection_label l "<font color=orangered>By Selection:" t "Force reconnect to a selected Anchor." T " "}
   addUserKnob {22 reconnect_by_selection_this l this t "Force reconnect this Stamp to a selected Anchor, whatever its name or title.\nIMPORTANT: Use this carefully, and only when the normal reconnection doesn't work." -STARTLINE T stamps.wiredReconnectBySelection()}
   addUserKnob {22 reconnect_by_selection_similar l similar t "Force reconnect this Stamp and similar ones to a selected Anchor, whatever its name or title.\nIMPORTANT: Use this carefully, and only when the normal reconnection doesn't work." -STARTLINE T stamps.wiredReconnectBySelectionSimilar()}
   addUserKnob {22 reconnect_by_selection_selected l selected t "Force reconnect all selected Stamps to an also selected Anchor, whatever its name or title.\nIMPORTANT: Use this carefully, and only when the normal reconnection doesn't work." -STARTLINE T stamps.wiredReconnectBySelectionSelected()}
   addUserKnob {1 anchor l Anchor}
   anchor Anchor_25b668170c
   addUserKnob {6 auto_reconnect_by_title l "<font color=#ED9977>&nbsp; auto-reconnect by title" t "When creating this stamp again (like on copy-paste), auto-reconnect it by title instead of doing it by the saved anchor's name, and auto-turn this off immediately.\nIMPORTANT: Should be off by default. Only use this for setting up templates." +STARTLINE}
   addUserKnob {26 line2 l "" +STARTLINE}
   addUserKnob {22 buttonHelp l Help -STARTLINE T stamps.showHelp()}
   addUserKnob {26 version l " " t "Stamps by Adrian Pueyo and Alexey Kuchinski.\nUpdated May 18 2021." -STARTLINE T "<a href=\"http://www.nukepedia.com/gizmos/other/stamps\" style=\"color:#666;text-decoration: none;\"><span style=\"color:#666\"> <big>Stamps v1.1</big></b></a>"}
  }
push $N56244930
  PostageStamp {
   name Stamp27
   help "Stamps by Adrian Pueyo and Alexey Kuchinski.\nUpdated May 18 2021"
   onCreate "if nuke.GUI:\n    try:\n        import stamps; stamps.wiredOnCreate()\n    except:\n        pass\n"
   knobChanged "import stamps; stamps.wiredKnobChanged()"
   autolabel "nuke.thisNode().knob(\"title\").value()"
   tile_color 0x1000001
   note_font "Bitstream Vera Sans"
   note_font_size 20
   xpos 2930
   ypos -679
   hide_input true
   addUserKnob {20 wired_tab l "Wired Stamp"}
   addUserKnob {26 identifier -STARTLINE +HIDDEN T wired}
   addUserKnob {3 lockCallbacks l "" +STARTLINE +HIDDEN}
   addUserKnob {6 toReconnect -STARTLINE +HIDDEN}
   addUserKnob {1 title l Title: t "Displayed name on the Node Graph for this Stamp and its Anchor.\nIMPORTANT: This is only for display purposes, and is different from the real/internal name of the Stamps."}
   title smoke_SIDE
   addUserKnob {26 prev_title l "" +STARTLINE +HIDDEN T smoke_SIDE}
   addUserKnob {26 tags l Tags: t "Tags of this stamp's Anchor, for information purpose only.\nClick \"show anchor\" to change them." T <i>2D</i>}
   addUserKnob {26 backdrops l Backdrops: t "Labels of backdrop nodes which contain this stamp's Anchor." T "<i><Left>before or after Flare</i>"}
   addUserKnob {26 line1 l "" +STARTLINE}
   addUserKnob {6 postageStamp_show l "postage stamp" t "Enable the postage stamp thumbnail in this node.\nYou're seeing this because the class of this node includes the postage_stamp knob." +STARTLINE}
   addUserKnob {26 anchor_label l Anchor: T " "}
   addUserKnob {22 show_anchor l " show anchor " t "Show the properties panel for this Stamp's Anchor." -STARTLINE T stamps.wiredShowAnchor()}
   addUserKnob {22 zoom_anchor l "zoom anchor" t "Navigate to this Stamp's Anchor on the Node Graph." -STARTLINE T stamps.wiredZoomAnchor()}
   addUserKnob {26 stamps_label l Stamps: T " "}
   addUserKnob {22 zoomNext l " zoom next " t "Navigate to this Stamp's next sibling on the Node Graph." -STARTLINE T stamps.wiredZoomNext()}
   addUserKnob {22 selectSimilar l " select similar " t "Select all similar Stamps to this one on the Node Graph." -STARTLINE T stamps.wiredSelectSimilar()}
   addUserKnob {26 space_1 l "" +STARTLINE T " "}
   addUserKnob {26 reconnect_label l Reconnect: t "Reconnect by the stored Anchor name." T " "}
   addUserKnob {22 reconnect_this l this t "Reconnect this Stamp to its Anchor, by its stored Anchor name." -STARTLINE T "n = nuke.thisNode()\ntry:\n    n.setInput(0,nuke.toNode(n.knob(\"anchor\").value()))\nexcept:\n    nuke.message(\"Unable to reconnect.\")\ntry:\n    import stamps\n    stamps.wiredGetStyle(n)\nexcept:\n    pass\n"}
   addUserKnob {22 reconnect_similar l similar t "Reconnect this Stamp and similar ones to their Anchor, by their stored anchor name." -STARTLINE T stamps.wiredReconnectSimilar()}
   addUserKnob {22 reconnect_all l all t "Reconnect all the Stamps to their Anchors, by their stored anchor names." -STARTLINE T stamps.wiredReconnectAll()}
   addUserKnob {26 space_2 l "" +STARTLINE T " "}
   addUserKnob {20 advanced_reconnection l "Advanced Reconnection" n 2}
   addUserKnob {26 reconnect_by_title_label l "<font color=gold>By Title:" t "Reconnect by searching for a matching title." T " "}
   addUserKnob {22 reconnect_by_title_this l this t "Look for an Anchor that shares this Stamp's title, and connect this Stamp to it.\nIMPORTANT: Use this carefully, and only when the normal reconnection doesn't work." -STARTLINE T stamps.wiredReconnectByTitle()}
   addUserKnob {22 reconnect_by_title_similar l similar t "Look for an Anchor that shares this Stamp's title, and connect this Stamp and similar ones to it.\nIMPORTANT: Use this carefully, and only when the normal reconnection doesn't work." -STARTLINE T stamps.wiredReconnectByTitleSimilar()}
   addUserKnob {22 reconnect_by_title_selected l selected t "For each Stamp selected, look for an Anchor that shares its title, and connect to it.\nIMPORTANT: Use this carefully, and only when the normal reconnection doesn't work." -STARTLINE T stamps.wiredReconnectByTitleSelected()}
   addUserKnob {26 reconnect_by_selection_label l "<font color=orangered>By Selection:" t "Force reconnect to a selected Anchor." T " "}
   addUserKnob {22 reconnect_by_selection_this l this t "Force reconnect this Stamp to a selected Anchor, whatever its name or title.\nIMPORTANT: Use this carefully, and only when the normal reconnection doesn't work." -STARTLINE T stamps.wiredReconnectBySelection()}
   addUserKnob {22 reconnect_by_selection_similar l similar t "Force reconnect this Stamp and similar ones to a selected Anchor, whatever its name or title.\nIMPORTANT: Use this carefully, and only when the normal reconnection doesn't work." -STARTLINE T stamps.wiredReconnectBySelectionSimilar()}
   addUserKnob {22 reconnect_by_selection_selected l selected t "Force reconnect all selected Stamps to an also selected Anchor, whatever its name or title.\nIMPORTANT: Use this carefully, and only when the normal reconnection doesn't work." -STARTLINE T stamps.wiredReconnectBySelectionSelected()}
   addUserKnob {1 anchor l Anchor}
   anchor Anchor_232c9aab88
   addUserKnob {6 auto_reconnect_by_title l "<font color=#ED9977>&nbsp; auto-reconnect by title" t "When creating this stamp again (like on copy-paste), auto-reconnect it by title instead of doing it by the saved anchor's name, and auto-turn this off immediately.\nIMPORTANT: Should be off by default. Only use this for setting up templates." +STARTLINE}
   addUserKnob {26 line2 l "" +STARTLINE}
   addUserKnob {22 buttonHelp l Help -STARTLINE T stamps.showHelp()}
   addUserKnob {26 version l " " t "Stamps by Adrian Pueyo and Alexey Kuchinski.\nUpdated May 18 2021." -STARTLINE T "<a href=\"http://www.nukepedia.com/gizmos/other/stamps\" style=\"color:#666;text-decoration: none;\"><span style=\"color:#666\"> <big>Stamps v1.1</big></b></a>"}
  }
  Dot {
   name Dot18
   xpos 2964
   ypos -629
  }
  Group {
   inputs 3
   name gunshot9
   label "shot: \[value shotcount]\non frame: \[value shotstart]\n"
   xpos 2812
   ypos -603
   addUserKnob {20 User}
   addUserKnob {3 shotcount l shot}
   shotcount 9
   addUserKnob {3 shotstart l frame +INVISIBLE}
   shotstart {{"shotcount==0 ? 0 : shot\[value shotcount]-1" i}}
  }
   BackdropNode {
    inputs 0
    name BackdropNode19
    knobChanged "try:\n    listenedKnobs = \['text', 'position', 'name']\n    node = nuke.thisNode()\n    name = node.knob('name').value()\n    text = node.knob('text').value()\n    position = node.knob('position').value()\n    position = \"<\" + position + \">\"\n    label = node.knob('label').value()\n    \n    if nuke.thisKnob().name() in listenedKnobs:\n        if text == \"\":\n            if node.knob('position').value() == \"left\":\n                node.knob('label').setValue()\n            else:\n                node.knob('label').setValue(position + name)\n        else:\n            if node.knob('position').value() == \"left\":\n                node.knob('label').setValue(text)\n            else:\n                node.knob('label').setValue(position + text)\n                \n    elif nuke.thisKnob().name() == 'font_size':\n        fontSize = node.knob('font_size').value()\n        node.knob('note_font_size').setValue(fontSize)\nexcept:\n    pass"
    tile_color 0x232323ff
    label "<Left><h2> Gunshot"
    note_font_size 31.5
    xpos -693
    ypos -554
    bdwidth 876
    bdheight 1682
    addUserKnob {20 F_VFX l BackdropNode}
    addUserKnob {43 text l Text}
    text "<h2> Gunshot"
    addUserKnob {7 font_size l "Font Size" R 10 100}
    font_size 31.5
    addUserKnob {4 position l "" -STARTLINE M {Left Center}}
    addUserKnob {26 S01 l " " T " "}
    addUserKnob {22 grow l " <img src=\"F_scalep.png\">" -STARTLINE T "n=nuke.thisNode()\n\ndef grow(node=None,step=50):\n    try:\n        if not node:\n            n=nuke.selectedNode()\n        else:\n            n=node\n            n\['xpos'].setValue(n\['xpos'].getValue()-step)\n            n\['ypos'].setValue(n\['ypos'].getValue()-step)\n            n\['bdwidth'].setValue(n\['bdwidth'].getValue()+step*2)\n            n\['bdheight'].setValue(n\['bdheight'].getValue()+step*2)\n    except:\n        pass\ngrow(n,50)"}
    addUserKnob {22 shrink l " <img src=\"F_scalem.png\">" -STARTLINE T "n=nuke.thisNode()\n\ndef shrink(node=None,step=50):\n    try:\n        if not node:\n            n=nuke.selectedNode()\n        else:\n            n=node\n            n\['xpos'].setValue(n\['xpos'].getValue()+step)\n            n\['ypos'].setValue(n\['ypos'].getValue()+step)\n            n\['bdwidth'].setValue(n\['bdwidth'].getValue()-step*2)\n            n\['bdheight'].setValue(n\['bdheight'].getValue()-step*2)\n    except:\n        pass\nshrink(n,50)"}
    addUserKnob {22 colorandom l " <img src=\"ColorBars.png\">" -STARTLINE T "import colorsys, random\nn=nuke.thisNode()\nR,G,B= colorsys.hsv_to_rgb(random.random(),.1+random.random()*.15,.15+random.random()*.15)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ) )"}
    addUserKnob {22 darkgrey l "<font color=\"#232323\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.0, 0.0, 0.14]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 lightgrey l "<font color=\"#383838\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.0, 0.0, 0.22]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 red l "<font color=\"#8c3838\" size=6>■</font>" T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.0, 0.6, 0.55]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n" +STARTLINE}
    addUserKnob {22 orange l "<font color=\"#b28e59\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.1, 0.5, 0.7]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 yellow l "<font color=\"#ccc766\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.16, 0.5, 0.8]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 green l "<font color=\"#5d995b\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.33, 0.4, 0.6]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 cyan l "<font color=\"#72998f\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.46, 0.25, 0.6]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 blue l "<font color=\"#59687f\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.6, 0.3, 0.5]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 darkblue l "<font color=\"#63628c\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.67, 0.3, 0.55]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 magenta l "<font color=\"#927a99\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.8, 0.2, 0.6]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 pink l "<font color=\"#997a89\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.92, 0.2, 0.6]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {26 S02 l " " T " "}
    addUserKnob {26 Ftools l "" +STARTLINE T "<font color=\"#1C1C1C\"> v1.2 - Franklin VFX - 2018"}
   }
   BackdropNode {
    inputs 0
    name BackdropNode2
    knobChanged "try:\n    listenedKnobs = \['text', 'position', 'name']\n    node = nuke.thisNode()\n    name = node.knob('name').value()\n    text = node.knob('text').value()\n    position = node.knob('position').value()\n    position = \"<\" + position + \">\"\n    label = node.knob('label').value()\n    \n    if nuke.thisKnob().name() in listenedKnobs:\n        if text == \"\":\n            if node.knob('position').value() == \"left\":\n                node.knob('label').setValue()\n            else:\n                node.knob('label').setValue(position + name)\n        else:\n            if node.knob('position').value() == \"left\":\n                node.knob('label').setValue(text)\n            else:\n                node.knob('label').setValue(position + text)\n                \n    elif nuke.thisKnob().name() == 'font_size':\n        fontSize = node.knob('font_size').value()\n        node.knob('note_font_size').setValue(fontSize)\nexcept:\n    pass"
    tile_color 0x927a99ff
    note_font_size 50
    xpos -473
    ypos -221
    bdwidth 435
    bdheight 786
    z_order 1
    addUserKnob {20 F_VFX l BackdropNode}
    addUserKnob {43 text l Text}
    addUserKnob {7 font_size l "Font Size" R 10 100}
    font_size 50
    addUserKnob {4 position l "" -STARTLINE M {Left Center}}
    addUserKnob {26 S01 l " " T " "}
    addUserKnob {22 grow l " <img src=\"F_scalep.png\">" -STARTLINE T "n=nuke.thisNode()\n\ndef grow(node=None,step=50):\n    try:\n        if not node:\n            n=nuke.selectedNode()\n        else:\n            n=node\n            n\['xpos'].setValue(n\['xpos'].getValue()-step)\n            n\['ypos'].setValue(n\['ypos'].getValue()-step)\n            n\['bdwidth'].setValue(n\['bdwidth'].getValue()+step*2)\n            n\['bdheight'].setValue(n\['bdheight'].getValue()+step*2)\n    except:\n        pass\ngrow(n,50)"}
    addUserKnob {22 shrink l " <img src=\"F_scalem.png\">" -STARTLINE T "n=nuke.thisNode()\n\ndef shrink(node=None,step=50):\n    try:\n        if not node:\n            n=nuke.selectedNode()\n        else:\n            n=node\n            n\['xpos'].setValue(n\['xpos'].getValue()+step)\n            n\['ypos'].setValue(n\['ypos'].getValue()+step)\n            n\['bdwidth'].setValue(n\['bdwidth'].getValue()-step*2)\n            n\['bdheight'].setValue(n\['bdheight'].getValue()-step*2)\n    except:\n        pass\nshrink(n,50)"}
    addUserKnob {22 colorandom l " <img src=\"ColorBars.png\">" -STARTLINE T "import colorsys, random\nn=nuke.thisNode()\nR,G,B= colorsys.hsv_to_rgb(random.random(),.1+random.random()*.15,.15+random.random()*.15)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ) )"}
    addUserKnob {22 darkgrey l "<font color=\"#232323\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.0, 0.0, 0.14]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 lightgrey l "<font color=\"#383838\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.0, 0.0, 0.22]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 red l "<font color=\"#8c3838\" size=6>■</font>" T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.0, 0.6, 0.55]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n" +STARTLINE}
    addUserKnob {22 orange l "<font color=\"#b28e59\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.1, 0.5, 0.7]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 yellow l "<font color=\"#ccc766\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.16, 0.5, 0.8]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 green l "<font color=\"#5d995b\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.33, 0.4, 0.6]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 cyan l "<font color=\"#72998f\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.46, 0.25, 0.6]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 blue l "<font color=\"#59687f\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.6, 0.3, 0.5]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 darkblue l "<font color=\"#63628c\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.67, 0.3, 0.55]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 magenta l "<font color=\"#927a99\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.8, 0.2, 0.6]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 pink l "<font color=\"#997a89\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.92, 0.2, 0.6]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {26 S02 l " " T " "}
    addUserKnob {26 Ftools l "" +STARTLINE T "<font color=\"#1C1C1C\"> v1.2 - Franklin VFX - 2018"}
   }
   Constant {
    inputs 0
    channels rgb
    name Constant13
    xpos -643
    ypos 714
   }
   AdjBBox {
    numpixels {{size_bbox}}
    name AdjBBox13
    xpos -643
    ypos 849
   }
   Dot {
    name Dot78
    xpos -609
    ypos 987
   }
   Axis3 {
    inputs 0
    useMatrix true
    matrix {
        {{parent.cCard3D_1.matrix} {parent.cCard3D_1.matrix} {parent.cCard3D_1.matrix} {parent.cCard3D_1.matrix}}
        {{parent.cCard3D_1.matrix} {parent.cCard3D_1.matrix} {parent.cCard3D_1.matrix} {parent.cCard3D_1.matrix}}
        {{parent.cCard3D_1.matrix} {parent.cCard3D_1.matrix} {parent.cCard3D_1.matrix} {parent.cCard3D_1.matrix}}
        {{parent.cCard3D_1.matrix} {parent.cCard3D_1.matrix} {parent.cCard3D_1.matrix} {parent.cCard3D_1.matrix}}
      }
    name Axis14
    xpos -203
    ypos -90
   }
set N5b043500 [stack 0]
push 0
   Input {
    inputs 0
    name top
    xpos -283
    ypos -1243
    number 1
   }
   TimeOffset {
    time_offset {{"shot_\[value shotnmbr]==0 ? 0 : shot_\[value shotnmbr]-1"}}
    time ""
    name CTimeOffset1
    label "shot: \[value shotnmbr]\non frame \[value time_offset]"
    xpos -283
    ypos -924
    addUserKnob {20 User}
    addUserKnob {3 shotnmbr l "shot "}
    shotnmbr {{shotcount}}
    addUserKnob {3 ref}
    ref {{time_offset+1}}
   }
   Group {
    name DecimalTimeOffset1
    tile_color 0xafa35dff
    label "random asset"
    note_font "Bitstream Vera Sans Bold"
    xpos -283
    ypos -841
    addUserKnob {20 User}
    addUserKnob {7 decimal l "time offset (decimal)"}
    decimal {{random(shotcount*seed)}}
    addUserKnob {26 ""}
    addUserKnob {26 _1 l "" +STARTLINE T "Chris Fryer | 2020\nupdated by Yorben Otto | 2024"}
   }
    Input {
     inputs 0
     name Input1
     xpos 426
     ypos -793
    }
    TimeOffset {
     time_offset {{(-floor(parent.decimal))*(DecimalTimeOffset1.decimal<0)}}
     time ""
     name TimeOffset1
     xpos 426
     ypos -675
    }
    Dot {
     name Dot6
     xpos 460
     ypos -635
    }
set N5b082d60 [stack 0]
    Dot {
     name Dot5
     xpos 350
     ypos -635
    }
    Dot {
     name Dot7
     xpos 350
     ypos -365
    }
push $N5b082d60
    Dot {
     name Dot1
     xpos 572
     ypos -635
    }
    TimeBlur {
     divisions 2
     shutter {{(parent.decimal-(floor(parent.decimal)))*2}}
     shutteroffset start
     shuttercustomoffset 0
     name TimeBlur1
     xpos 538
     ypos -558
    }
    Dot {
     name Dot2
     xpos 572
     ypos -490
    }
push $N5b082d60
    TimeBlur {
     divisions 2
     shutter {{parent.decimal*2}}
     shutteroffset start
     shuttercustomoffset 0
     name TimeBlur8
     xpos 426
     ypos -556
    }
    Switch {
     inputs 2
     which {{parent.decimal<0}}
     name Switch1
     xpos 426
     ypos -494
    }
    Multiply {
     value {{parent.TimeBlur8.divisions}}
     name Multiply6
     xpos 426
     ypos -436
    }
    Merge2 {
     inputs 2
     operation from
     name Merge6
     xpos 426
     ypos -369
    }
set N5b0c4ca0 [stack 0]
    Output {
     name Output1
     xpos 426
     ypos -221
    }
push $N5b0c4ca0
push $N5b0c4ca0
    Viewer {
     inputs 2
     frame_range 1-100
     name Viewer1
     xpos 675
     ypos -246
    }
   end_group
   NoTimeBlur {
    name NoTimeBlur1
    xpos -283
    ypos -779
   }
   Transform {
    scale {{0.05+(0.05*(((parent.DecimalTimeOffset13.decimal-0.5)*2)*ScaleVariationSmoke))}}
    center {{root.width/2 x1015 2304} {root.height/2}}
    shutteroffset centred
    name Transform44
    xpos -283
    ypos -152
   }
   Card3D {
    inputs 3
    rot_order ZYX
    translate {0 0 0}
    rotate {90 0 0}
    shutteroffset centred
    name cCard3D25
    tile_color 0x7b1d1dff
    xpos -283
    ypos 11
    addUserKnob {20 User l parent}
    addUserKnob {22 python_button l "set parent" t "select parent node, and press this button to set the selected node as parent" +INVISIBLE T "n = nuke.selectedNode()\['name'].getValue()\nnuke.thisNode()\['string'].setValue(n)" +STARTLINE}
    addUserKnob {1 string l parent +INVISIBLE}
    string null
    addUserKnob {3 ref l "ref frame"}
    ref 1015
   }
   Transform {
    translate {{"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].translate.x(ref)\}]"} {"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].translate.y(ref)\}]"}}
    rotate {{"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].rotate-\[value parent_gun].rotate(ref)\}]"}}
    scale {{"\[if \{\[value parent_gun]==\"null\"\} \{return 1\} \{return 1+(\[value parent_gun].scale-\[value parent_gun].scale(ref))\}]"}}
    center {{"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].center.x(ref)\}]"} {"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].center.y(ref)\}]"}}
    name Transform_GUNMatchMove37
    xpos -283
    ypos 126
    addUserKnob {20 User l parent}
    addUserKnob {3 ref}
    ref {{parent.CTimeOffset.ref}}
   }
   Transform {
    translate {{"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].translate.x-\[value parent_env].translate.x(ref)\}]"} {"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].translate.y-\[value parent_env].translate.y(ref)\}]"}}
    rotate {{"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].rotate-\[value parent_env].rotate(ref)\}]"}}
    scale {{"\[if \{\[value parent_gun]==\"null\"\} \{return 1\} \{return 1+(\[value parent_env].scale-\[value parent_env].scale(ref))\}]"}}
    center {{"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].center.x(ref)\}]"} {"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].center.y(ref)\}]"}}
    motionblur 0.2
    shutter {{SmokeMB*0.5}}
    shutteroffset centred
    name Transform_ENVMatchMove37
    label "\n"
    xpos -283
    ypos 255
    addUserKnob {20 User l parent}
    addUserKnob {3 ref}
    ref {{parent.CTimeOffset.ref}}
   }
   Transform {
    translate {{"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return -((root.width/2)-(\[value parent_gun].center.x(1)+\[value parent_gun].translate.x(1)))\}]"} {"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return -((root.height/2)-(\[value parent_gun].center.y(1)+\[value parent_gun].translate.y(1)))\}]"}}
    name Transform_GUNMatchMove6
    label "alignment correction"
    xpos -283
    ypos 344
    addUserKnob {20 User l parent}
    addUserKnob {22 python_button l "set parent" t "select parent node, and press this button to set the selected node as parent" T "n = nuke.selectedNode()\['name'].getValue()\nnuke.thisNode()\['string'].setValue(n)" +STARTLINE}
    addUserKnob {1 string l parent}
    string Transform_MatchMove10
    addUserKnob {3 ref +INVISIBLE}
    ref {{parent.cCard3D_8.ref}}
   }
   Multiply {
    value {{math_matrix.result_y_smoke(parent.CTimeOffset.ref)}}
    name Angle_reveal_top1
    label TOP
    xpos -283
    ypos 403
   }
   Remove {
    operation keep
    channels rgb
    name Remove1
    xpos -283
    ypos 514
   }
push 0
   Switch {
    inputs 2
    which {{parent.Angle_reveal_top1.value>0.001}}
    name Switch1
    xpos -283
    ypos 660
   }
   Dot {
    name Dot82
    xpos -249
    ypos 705
   }
push 0
push $N5b043500
push 0
   Input {
    inputs 0
    name front
    xpos -436
    ypos -1243
    number 2
   }
   TimeOffset {
    time_offset {{"shot_\[value shotnmbr]==0 ? 0 : shot_\[value shotnmbr]-1"}}
    time ""
    name CTimeOffset2
    label "shot: \[value shotnmbr]\non frame \[value time_offset]"
    xpos -436
    ypos -925
    addUserKnob {20 User}
    addUserKnob {3 shotnmbr l "shot "}
    shotnmbr {{shotcount}}
    addUserKnob {3 ref}
    ref {{time_offset+1}}
   }
   Group {
    name DecimalTimeOffset2
    tile_color 0xafa35dff
    label "random asset"
    note_font "Bitstream Vera Sans Bold"
    xpos -436
    ypos -842
    addUserKnob {20 User}
    addUserKnob {7 decimal l "time offset (decimal)"}
    decimal {{random(shotcount*seed)}}
    addUserKnob {26 ""}
    addUserKnob {26 _1 l "" +STARTLINE T "Chris Fryer | 2020\nupdated by Yorben Otto | 2024"}
   }
    Input {
     inputs 0
     name Input1
     xpos 426
     ypos -793
    }
    TimeOffset {
     time_offset {{(-floor(parent.decimal))*(DecimalTimeOffset2.decimal<0)}}
     time ""
     name TimeOffset1
     xpos 426
     ypos -675
    }
    Dot {
     name Dot6
     xpos 460
     ypos -635
    }
set N3061aaa0 [stack 0]
    Dot {
     name Dot5
     xpos 350
     ypos -635
    }
    Dot {
     name Dot7
     xpos 350
     ypos -365
    }
push $N3061aaa0
    Dot {
     name Dot1
     xpos 572
     ypos -635
    }
    TimeBlur {
     divisions 2
     shutter {{(parent.decimal-(floor(parent.decimal)))*2}}
     shutteroffset start
     shuttercustomoffset 0
     name TimeBlur1
     xpos 538
     ypos -558
    }
    Dot {
     name Dot2
     xpos 572
     ypos -490
    }
push $N3061aaa0
    TimeBlur {
     divisions 2
     shutter {{parent.decimal*2}}
     shutteroffset start
     shuttercustomoffset 0
     name TimeBlur8
     xpos 426
     ypos -556
    }
    Switch {
     inputs 2
     which {{parent.decimal<0}}
     name Switch1
     xpos 426
     ypos -494
    }
    Multiply {
     value {{parent.TimeBlur8.divisions}}
     name Multiply6
     xpos 426
     ypos -436
    }
    Merge2 {
     inputs 2
     operation from
     name Merge6
     xpos 426
     ypos -369
    }
set N3065c9e0 [stack 0]
    Output {
     name Output1
     xpos 426
     ypos -221
    }
push $N3065c9e0
push $N3065c9e0
    Viewer {
     inputs 2
     frame_range 1-100
     name Viewer1
     xpos 675
     ypos -246
    }
   end_group
   NoTimeBlur {
    name NoTimeBlur5
    xpos -436
    ypos -780
   }
   Transform {
    scale {{0.05+(0.05*(((parent.DecimalTimeOffset13.decimal-0.5)*2)*ScaleVariationSmoke))}}
    center {{root.width/2 x1015 2304} {root.height/2}}
    shutteroffset centred
    name Transform45
    xpos -436
    ypos -151
   }
   Card3D {
    inputs 3
    rot_order ZYX
    translate {0 0 0}
    rotate {0 90 0}
    shutteroffset centred
    name cCard3D26
    tile_color 0x7b1d1dff
    xpos -436
    ypos 15
    addUserKnob {20 User l parent}
    addUserKnob {22 python_button l "set parent" t "select parent node, and press this button to set the selected node as parent" +INVISIBLE T "n = nuke.selectedNode()\['name'].getValue()\nnuke.thisNode()\['string'].setValue(n)" +STARTLINE}
    addUserKnob {1 string l parent +INVISIBLE}
    string null
    addUserKnob {3 ref l "ref frame"}
    ref 1015
   }
   Transform {
    translate {{"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].translate.x(ref)\}]"} {"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].translate.y(ref)\}]"}}
    rotate {{"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].rotate-\[value parent_gun].rotate(ref)\}]"}}
    scale {{"\[if \{\[value parent_gun]==\"null\"\} \{return 1\} \{return 1+(\[value parent_gun].scale-\[value parent_gun].scale(ref))\}]"}}
    center {{"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].center.x(ref)\}]"} {"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].center.y(ref)\}]"}}
    name Transform_GUNMatchMove38
    label "\n"
    xpos -436
    ypos 124
    addUserKnob {20 User l parent}
    addUserKnob {3 ref}
    ref {{parent.CTimeOffset.ref}}
   }
   Transform {
    translate {{"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].translate.x-\[value parent_env].translate.x(ref)\}]"} {"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].translate.y-\[value parent_env].translate.y(ref)\}]"}}
    rotate {{"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].rotate-\[value parent_env].rotate(ref)\}]"}}
    scale {{"\[if \{\[value parent_gun]==\"null\"\} \{return 1\} \{return 1+(\[value parent_env].scale-\[value parent_env].scale(ref))\}]"}}
    center {{"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].center.x(ref)\}]"} {"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].center.y(ref)\}]"}}
    motionblur 0.2
    shutter {{SmokeMB*0.5}}
    shutteroffset centred
    name Transform_ENVMatchMove38
    xpos -436
    ypos 254
    addUserKnob {20 User l parent}
    addUserKnob {3 ref}
    ref {{parent.CTimeOffset.ref}}
   }
   Transform {
    translate {{"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return -((root.width/2)-(\[value parent_gun].center.x(1)+\[value parent_gun].translate.x(1)))\}]"} {"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return -((root.height/2)-(\[value parent_gun].center.y(1)+\[value parent_gun].translate.y(1)))\}]"}}
    name Transform_GUNMatchMove7
    label "alignment correction"
    xpos -436
    ypos 343
    addUserKnob {20 User l parent}
    addUserKnob {22 python_button l "set parent" t "select parent node, and press this button to set the selected node as parent" T "n = nuke.selectedNode()\['name'].getValue()\nnuke.thisNode()\['string'].setValue(n)" +STARTLINE}
    addUserKnob {1 string l parent}
    string Transform_MatchMove10
    addUserKnob {3 ref +INVISIBLE}
    ref {{parent.cCard3D_8.ref}}
   }
   Multiply {
    value {{math_matrix.result_x_smoke(parent.CTimeOffset.ref)}}
    name Angle_reveal_front1
    label FRONT
    xpos -436
    ypos 401
   }
   Remove {
    operation keep
    channels rgb
    name Remove2
    xpos -436
    ypos 511
   }
push 0
   Switch {
    inputs 2
    which {{parent.Angle_reveal_front1.value>0.001}}
    name Switch2
    xpos -436
    ypos 660
   }
   Dot {
    name Dot83
    xpos -402
    ypos 735
   }
   Input {
    inputs 0
    name side
    xpos -130
    ypos -1242
   }
   TimeOffset {
    time_offset {{"shot_\[value shotnmbr]==0 ? 0 : shot_\[value shotnmbr]-1"}}
    time ""
    name CTimeOffset
    label "shot: \[value shotnmbr]\non frame \[value time_offset]"
    xpos -130
    ypos -927
    addUserKnob {20 User}
    addUserKnob {3 shotnmbr l "shot "}
    shotnmbr {{shotcount}}
    addUserKnob {3 ref}
    ref {{time_offset+1}}
   }
   Group {
    name DecimalTimeOffset13
    tile_color 0xafa35dff
    label "random asset"
    note_font "Bitstream Vera Sans Bold"
    xpos -130
    ypos -844
    addUserKnob {20 User}
    addUserKnob {7 decimal l "time offset (decimal)"}
    decimal {{random(shotcount*seed)}}
    addUserKnob {26 ""}
    addUserKnob {26 _1 l "" +STARTLINE T "Chris Fryer | 2020\nupdated by Yorben Otto | 2024"}
   }
    Input {
     inputs 0
     name Input1
     xpos 426
     ypos -793
    }
    TimeOffset {
     time_offset {{(-floor(parent.decimal))*(DecimalTimeOffset13.decimal<0)}}
     time ""
     name TimeOffset1
     xpos 426
     ypos -675
    }
    Dot {
     name Dot6
     xpos 460
     ypos -635
    }
set N5b7ae940 [stack 0]
    Dot {
     name Dot5
     xpos 350
     ypos -635
    }
    Dot {
     name Dot7
     xpos 350
     ypos -365
    }
push $N5b7ae940
    Dot {
     name Dot1
     xpos 572
     ypos -635
    }
    TimeBlur {
     divisions 2
     shutter {{(parent.decimal-(floor(parent.decimal)))*2}}
     shutteroffset start
     shuttercustomoffset 0
     name TimeBlur1
     xpos 538
     ypos -558
    }
    Dot {
     name Dot2
     xpos 572
     ypos -490
    }
push $N5b7ae940
    TimeBlur {
     divisions 2
     shutter {{parent.decimal*2}}
     shutteroffset start
     shuttercustomoffset 0
     name TimeBlur8
     xpos 426
     ypos -556
    }
    Switch {
     inputs 2
     which {{parent.decimal<0}}
     name Switch1
     xpos 426
     ypos -494
    }
    Multiply {
     value {{parent.TimeBlur8.divisions}}
     name Multiply6
     xpos 426
     ypos -436
    }
    Merge2 {
     inputs 2
     operation from
     name Merge6
     xpos 426
     ypos -369
    }
set N5b6007d0 [stack 0]
    Output {
     name Output1
     xpos 426
     ypos -221
    }
push $N5b6007d0
push $N5b6007d0
    Viewer {
     inputs 2
     frame_range 1-100
     name Viewer1
     xpos 675
     ypos -246
    }
   end_group
   NoTimeBlur {
    name NoTimeBlur13
    xpos -130
    ypos -782
   }
   Transform {
    scale {{0.05+(0.05*(((parent.DecimalTimeOffset13.decimal-0.5)*2)*ScaleVariationSmoke))}}
    center {{root.width/2 x1015 2304} {root.height/2}}
    shutteroffset centred
    name Transform46
    xpos -130
    ypos -155
   }
   Card3D {
    translate {{"\[if \{\[exists  parent.parent.parent.input0]\} \{return \[value \[topnode parent.parent.parent.input0].name].translate.x(ref)\} \{return 0\}]"} {"\[if \{\[exists  parent.parent.parent.input0]\} \{return \[value \[topnode parent.parent.parent.input0].name].translate.y(ref)\} \{return 0\}]"} {"\[if \{\[exists  parent.parent.parent.input0]\} \{return \[value \[topnode parent.parent.parent.input0].name].translate.z(ref)\} \{return -1\}]"}}
    rotate {{"\[if \{\[exists  parent.parent.parent.input0]\} \{return \[value \[topnode parent.parent.parent.input0].name].rotate.x(ref)\} \{return 0\}]"} {"\[if \{\[exists  parent.parent.parent.input0]\} \{return \[value \[topnode parent.parent.parent.input0].name].rotate.y(ref)\} \{return 0\}]"} {"\[if \{\[exists  parent.parent.parent.input0]\} \{return \[value \[topnode parent.parent.parent.input0].name].rotate.z(ref)\} \{return 0\}]"}}
    scaling {{"\[if \{\[exists  parent.parent.parent.input0]\} \{return \[value \[topnode parent.parent.parent.input0].name].scaling.x(ref)\} \{return 1\}]"} {"\[if \{\[exists  parent.parent.parent.input0]\} \{return \[value \[topnode parent.parent.parent.input0].name].scaling.y(ref)\} \{return 1\}]"} {"\[if \{\[exists  parent.parent.parent.input0]\} \{return \[value \[topnode parent.parent.parent.input0].name].scaling.z(ref)\} \{return 1\}]"}}
    uniform_scale {{"\[if \{\[exists  parent.parent.parent.input0]\} \{return (\[value \[topnode parent.parent.parent.input0].name].uniform_scale(ref)*25)\} \{return 25\}]"}}
    shutteroffset centred
    name cCard3D_1
    tile_color 0x7b1d1dff
    label "ref frame: \[value ref]"
    xpos -130
    ypos 2
    addUserKnob {20 User l parent}
    addUserKnob {22 python_button l "set parent" t "select parent node, and press this button to set the selected node as parent" +INVISIBLE T "n = nuke.selectedNode()\['name'].getValue()\nnuke.thisNode()\['string'].setValue(n)" +STARTLINE}
    addUserKnob {1 string l parent +INVISIBLE}
    string null
    addUserKnob {3 id l "id number"}
    id {{parent.CTimeOffset.shotnmbr}}
    addUserKnob {3 ref l "ref frame"}
    ref {{parent.CTimeOffset.ref}}
   }
   Transform {
    translate {{"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].translate.x(ref)\}]"} {"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].translate.y(ref)\}]"}}
    rotate {{"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].rotate-\[value parent_gun].rotate(ref)\}]"}}
    scale {{"\[if \{\[value parent_gun]==\"null\"\} \{return 1\} \{return 1+(\[value parent_gun].scale-\[value parent_gun].scale(ref))\}]"}}
    center {{"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].center.x(ref)\}]"} {"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].center.y(ref)\}]"}}
    name Transform_GUNMatchMove39
    label "\n"
    xpos -130
    ypos 124
    addUserKnob {20 User l parent}
    addUserKnob {3 ref}
    ref {{parent.CTimeOffset.ref}}
   }
   Transform {
    translate {{"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].translate.x-\[value parent_env].translate.x(ref)\}]"} {"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].translate.y-\[value parent_env].translate.y(ref)\}]"}}
    rotate {{"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].rotate-\[value parent_env].rotate(ref)\}]"}}
    scale {{"\[if \{\[value parent_gun]==\"null\"\} \{return 1\} \{return 1+(\[value parent_env].scale-\[value parent_env].scale(ref))\}]"}}
    center {{"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].center.x(ref)\}]"} {"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].center.y(ref)\}]"}}
    motionblur 0.2
    shutter {{SmokeMB*0.5}}
    shutteroffset centred
    name Transform_ENVMatchMove39
    xpos -130
    ypos 258
    addUserKnob {20 User l parent}
    addUserKnob {3 ref}
    ref {{parent.CTimeOffset.ref}}
   }
   Transform {
    translate {{"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return -((root.width/2)-(\[value parent_gun].center.x(1)+\[value parent_gun].translate.x(1)))\}]"} {"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return -((root.height/2)-(\[value parent_gun].center.y(1)+\[value parent_gun].translate.y(1)))\}]"}}
    name Transform_GUNMatchMove5
    label "alignment correction"
    xpos -130
    ypos 340
    addUserKnob {20 User l parent}
    addUserKnob {22 python_button l "set parent" t "select parent node, and press this button to set the selected node as parent" T "n = nuke.selectedNode()\['name'].getValue()\nnuke.thisNode()\['string'].setValue(n)" +STARTLINE}
    addUserKnob {1 string l parent}
    string Transform_MatchMove10
    addUserKnob {3 ref +INVISIBLE}
    ref {{parent.cCard3D_8.ref}}
   }
   Multiply {
    value {{math_matrix.result_z_smoke(parent.CTimeOffset.ref)}}
    name Angle_reveal_side1
    label SIDE
    xpos -130
    ypos 404
   }
   Remove {
    operation keep
    channels rgb
    name Remove39
    xpos -130
    ypos 514
   }
push 0
   Switch {
    inputs 2
    which {{parent.Angle_reveal_side1.value>0.001}}
    name Switch3
    xpos -130
    ypos 658
   }
   Merge2 {
    inputs 3+1
    operation max
    Achannels rgb
    Bchannels rgb
    output rgb
    name Merge28
    xpos -130
    ypos 731
   }
   Merge2 {
    inputs 2
    operation plus
    bbox intersection
    Achannels rgb
    Bchannels rgb
    output rgb
    name Merge29
    xpos -130
    ypos 983
   }
   Shuffle2 {
    fromInput1 {{0} B}
    fromInput2 {{0} B}
    mappings "4 rgba.red 0 0 rgba.red 0 0 rgba.green 0 1 rgba.green 0 1 rgba.blue 0 2 rgba.alpha 0 3 rgba.blue 0 2 rgba.blue 0 2"
    name Shuffle1
    xpos -130
    ypos 1021
   }
push 0
   Switch {
    inputs 2
    which {{"shot_\[value count]==0?0:frame>=shot_\[value count]"}}
    name cSwitch_13
    xpos -130
    ypos 1078
    addUserKnob {20 User}
    addUserKnob {3 count}
    count {{parent.CTimeOffset.shotnmbr}}
   }
   Output {
    name Output1
    xpos -130
    ypos 1323
   }
   StickyNote {
    inputs 0
    name StickyNote1
    label "<-- handy to break concatonation?  "
    xpos -39
    ypos 193
   }
  end_group
push $N586971d0
  PostageStamp {
   name Stamp40
   help "Stamps by Adrian Pueyo and Alexey Kuchinski.\nUpdated May 18 2021"
   onCreate "if nuke.GUI:\n    try:\n        import stamps; stamps.wiredOnCreate()\n    except:\n        pass\n"
   knobChanged "import stamps; stamps.wiredKnobChanged()"
   autolabel "nuke.thisNode().knob(\"title\").value()"
   tile_color 0x1000001
   note_font "Bitstream Vera Sans"
   note_font_size 20
   xpos 4618
   ypos -694
   hide_input true
   addUserKnob {20 wired_tab l "Wired Stamp"}
   addUserKnob {26 identifier -STARTLINE +HIDDEN T wired}
   addUserKnob {3 lockCallbacks l "" +STARTLINE +HIDDEN}
   addUserKnob {6 toReconnect -STARTLINE +HIDDEN}
   addUserKnob {1 title l Title: t "Displayed name on the Node Graph for this Stamp and its Anchor.\nIMPORTANT: This is only for display purposes, and is different from the real/internal name of the Stamps."}
   title smoke_FRONT
   addUserKnob {26 prev_title l "" +STARTLINE +HIDDEN T smoke_FRONT}
   addUserKnob {26 tags l Tags: t "Tags of this stamp's Anchor, for information purpose only.\nClick \"show anchor\" to change them." T <i>2D</i>}
   addUserKnob {26 backdrops l Backdrops: t "Labels of backdrop nodes which contain this stamp's Anchor." T "<i><Left>before or after Flare</i>"}
   addUserKnob {26 line1 l "" +STARTLINE}
   addUserKnob {6 postageStamp_show l "postage stamp" t "Enable the postage stamp thumbnail in this node.\nYou're seeing this because the class of this node includes the postage_stamp knob." +STARTLINE}
   addUserKnob {26 anchor_label l Anchor: T " "}
   addUserKnob {22 show_anchor l " show anchor " t "Show the properties panel for this Stamp's Anchor." -STARTLINE T stamps.wiredShowAnchor()}
   addUserKnob {22 zoom_anchor l "zoom anchor" t "Navigate to this Stamp's Anchor on the Node Graph." -STARTLINE T stamps.wiredZoomAnchor()}
   addUserKnob {26 stamps_label l Stamps: T " "}
   addUserKnob {22 zoomNext l " zoom next " t "Navigate to this Stamp's next sibling on the Node Graph." -STARTLINE T stamps.wiredZoomNext()}
   addUserKnob {22 selectSimilar l " select similar " t "Select all similar Stamps to this one on the Node Graph." -STARTLINE T stamps.wiredSelectSimilar()}
   addUserKnob {26 space_1 l "" +STARTLINE T " "}
   addUserKnob {26 reconnect_label l Reconnect: t "Reconnect by the stored Anchor name." T " "}
   addUserKnob {22 reconnect_this l this t "Reconnect this Stamp to its Anchor, by its stored Anchor name." -STARTLINE T "n = nuke.thisNode()\ntry:\n    n.setInput(0,nuke.toNode(n.knob(\"anchor\").value()))\nexcept:\n    nuke.message(\"Unable to reconnect.\")\ntry:\n    import stamps\n    stamps.wiredGetStyle(n)\nexcept:\n    pass\n"}
   addUserKnob {22 reconnect_similar l similar t "Reconnect this Stamp and similar ones to their Anchor, by their stored anchor name." -STARTLINE T stamps.wiredReconnectSimilar()}
   addUserKnob {22 reconnect_all l all t "Reconnect all the Stamps to their Anchors, by their stored anchor names." -STARTLINE T stamps.wiredReconnectAll()}
   addUserKnob {26 space_2 l "" +STARTLINE T " "}
   addUserKnob {20 advanced_reconnection l "Advanced Reconnection" n 2}
   addUserKnob {26 reconnect_by_title_label l "<font color=gold>By Title:" t "Reconnect by searching for a matching title." T " "}
   addUserKnob {22 reconnect_by_title_this l this t "Look for an Anchor that shares this Stamp's title, and connect this Stamp to it.\nIMPORTANT: Use this carefully, and only when the normal reconnection doesn't work." -STARTLINE T stamps.wiredReconnectByTitle()}
   addUserKnob {22 reconnect_by_title_similar l similar t "Look for an Anchor that shares this Stamp's title, and connect this Stamp and similar ones to it.\nIMPORTANT: Use this carefully, and only when the normal reconnection doesn't work." -STARTLINE T stamps.wiredReconnectByTitleSimilar()}
   addUserKnob {22 reconnect_by_title_selected l selected t "For each Stamp selected, look for an Anchor that shares its title, and connect to it.\nIMPORTANT: Use this carefully, and only when the normal reconnection doesn't work." -STARTLINE T stamps.wiredReconnectByTitleSelected()}
   addUserKnob {26 reconnect_by_selection_label l "<font color=orangered>By Selection:" t "Force reconnect to a selected Anchor." T " "}
   addUserKnob {22 reconnect_by_selection_this l this t "Force reconnect this Stamp to a selected Anchor, whatever its name or title.\nIMPORTANT: Use this carefully, and only when the normal reconnection doesn't work." -STARTLINE T stamps.wiredReconnectBySelection()}
   addUserKnob {22 reconnect_by_selection_similar l similar t "Force reconnect this Stamp and similar ones to a selected Anchor, whatever its name or title.\nIMPORTANT: Use this carefully, and only when the normal reconnection doesn't work." -STARTLINE T stamps.wiredReconnectBySelectionSimilar()}
   addUserKnob {22 reconnect_by_selection_selected l selected t "Force reconnect all selected Stamps to an also selected Anchor, whatever its name or title.\nIMPORTANT: Use this carefully, and only when the normal reconnection doesn't work." -STARTLINE T stamps.wiredReconnectBySelectionSelected()}
   addUserKnob {1 anchor l Anchor}
   anchor Anchor_220a2be282
   addUserKnob {6 auto_reconnect_by_title l "<font color=#ED9977>&nbsp; auto-reconnect by title" t "When creating this stamp again (like on copy-paste), auto-reconnect it by title instead of doing it by the saved anchor's name, and auto-turn this off immediately.\nIMPORTANT: Should be off by default. Only use this for setting up templates." +STARTLINE}
   addUserKnob {26 line2 l "" +STARTLINE}
   addUserKnob {22 buttonHelp l Help -STARTLINE T stamps.showHelp()}
   addUserKnob {26 version l " " t "Stamps by Adrian Pueyo and Alexey Kuchinski.\nUpdated May 18 2021." -STARTLINE T "<a href=\"http://www.nukepedia.com/gizmos/other/stamps\" style=\"color:#666;text-decoration: none;\"><span style=\"color:#666\"> <big>Stamps v1.1</big></b></a>"}
  }
  Dot {
   name Dot27
   xpos 4652
   ypos -646
  }
push $N58d70c10
  PostageStamp {
   name Stamp41
   help "Stamps by Adrian Pueyo and Alexey Kuchinski.\nUpdated May 18 2021"
   onCreate "if nuke.GUI:\n    try:\n        import stamps; stamps.wiredOnCreate()\n    except:\n        pass\n"
   knobChanged "import stamps; stamps.wiredKnobChanged()"
   autolabel "nuke.thisNode().knob(\"title\").value()"
   tile_color 0x1000001
   note_font "Bitstream Vera Sans"
   note_font_size 20
   xpos 4743
   ypos -694
   hide_input true
   addUserKnob {20 wired_tab l "Wired Stamp"}
   addUserKnob {26 identifier -STARTLINE +HIDDEN T wired}
   addUserKnob {3 lockCallbacks l "" +STARTLINE +HIDDEN}
   addUserKnob {6 toReconnect -STARTLINE +HIDDEN}
   addUserKnob {1 title l Title: t "Displayed name on the Node Graph for this Stamp and its Anchor.\nIMPORTANT: This is only for display purposes, and is different from the real/internal name of the Stamps."}
   title smoke_TOP
   addUserKnob {26 prev_title l "" +STARTLINE +HIDDEN T smoke_TOP}
   addUserKnob {26 tags l Tags: t "Tags of this stamp's Anchor, for information purpose only.\nClick \"show anchor\" to change them." T <i>2D</i>}
   addUserKnob {26 backdrops l Backdrops: t "Labels of backdrop nodes which contain this stamp's Anchor." T "<i><Left>before or after Flare</i>"}
   addUserKnob {26 line1 l "" +STARTLINE}
   addUserKnob {6 postageStamp_show l "postage stamp" t "Enable the postage stamp thumbnail in this node.\nYou're seeing this because the class of this node includes the postage_stamp knob." +STARTLINE}
   addUserKnob {26 anchor_label l Anchor: T " "}
   addUserKnob {22 show_anchor l " show anchor " t "Show the properties panel for this Stamp's Anchor." -STARTLINE T stamps.wiredShowAnchor()}
   addUserKnob {22 zoom_anchor l "zoom anchor" t "Navigate to this Stamp's Anchor on the Node Graph." -STARTLINE T stamps.wiredZoomAnchor()}
   addUserKnob {26 stamps_label l Stamps: T " "}
   addUserKnob {22 zoomNext l " zoom next " t "Navigate to this Stamp's next sibling on the Node Graph." -STARTLINE T stamps.wiredZoomNext()}
   addUserKnob {22 selectSimilar l " select similar " t "Select all similar Stamps to this one on the Node Graph." -STARTLINE T stamps.wiredSelectSimilar()}
   addUserKnob {26 space_1 l "" +STARTLINE T " "}
   addUserKnob {26 reconnect_label l Reconnect: t "Reconnect by the stored Anchor name." T " "}
   addUserKnob {22 reconnect_this l this t "Reconnect this Stamp to its Anchor, by its stored Anchor name." -STARTLINE T "n = nuke.thisNode()\ntry:\n    n.setInput(0,nuke.toNode(n.knob(\"anchor\").value()))\nexcept:\n    nuke.message(\"Unable to reconnect.\")\ntry:\n    import stamps\n    stamps.wiredGetStyle(n)\nexcept:\n    pass\n"}
   addUserKnob {22 reconnect_similar l similar t "Reconnect this Stamp and similar ones to their Anchor, by their stored anchor name." -STARTLINE T stamps.wiredReconnectSimilar()}
   addUserKnob {22 reconnect_all l all t "Reconnect all the Stamps to their Anchors, by their stored anchor names." -STARTLINE T stamps.wiredReconnectAll()}
   addUserKnob {26 space_2 l "" +STARTLINE T " "}
   addUserKnob {20 advanced_reconnection l "Advanced Reconnection" n 2}
   addUserKnob {26 reconnect_by_title_label l "<font color=gold>By Title:" t "Reconnect by searching for a matching title." T " "}
   addUserKnob {22 reconnect_by_title_this l this t "Look for an Anchor that shares this Stamp's title, and connect this Stamp to it.\nIMPORTANT: Use this carefully, and only when the normal reconnection doesn't work." -STARTLINE T stamps.wiredReconnectByTitle()}
   addUserKnob {22 reconnect_by_title_similar l similar t "Look for an Anchor that shares this Stamp's title, and connect this Stamp and similar ones to it.\nIMPORTANT: Use this carefully, and only when the normal reconnection doesn't work." -STARTLINE T stamps.wiredReconnectByTitleSimilar()}
   addUserKnob {22 reconnect_by_title_selected l selected t "For each Stamp selected, look for an Anchor that shares its title, and connect to it.\nIMPORTANT: Use this carefully, and only when the normal reconnection doesn't work." -STARTLINE T stamps.wiredReconnectByTitleSelected()}
   addUserKnob {26 reconnect_by_selection_label l "<font color=orangered>By Selection:" t "Force reconnect to a selected Anchor." T " "}
   addUserKnob {22 reconnect_by_selection_this l this t "Force reconnect this Stamp to a selected Anchor, whatever its name or title.\nIMPORTANT: Use this carefully, and only when the normal reconnection doesn't work." -STARTLINE T stamps.wiredReconnectBySelection()}
   addUserKnob {22 reconnect_by_selection_similar l similar t "Force reconnect this Stamp and similar ones to a selected Anchor, whatever its name or title.\nIMPORTANT: Use this carefully, and only when the normal reconnection doesn't work." -STARTLINE T stamps.wiredReconnectBySelectionSimilar()}
   addUserKnob {22 reconnect_by_selection_selected l selected t "Force reconnect all selected Stamps to an also selected Anchor, whatever its name or title.\nIMPORTANT: Use this carefully, and only when the normal reconnection doesn't work." -STARTLINE T stamps.wiredReconnectBySelectionSelected()}
   addUserKnob {1 anchor l Anchor}
   anchor Anchor_25b668170c
   addUserKnob {6 auto_reconnect_by_title l "<font color=#ED9977>&nbsp; auto-reconnect by title" t "When creating this stamp again (like on copy-paste), auto-reconnect it by title instead of doing it by the saved anchor's name, and auto-turn this off immediately.\nIMPORTANT: Should be off by default. Only use this for setting up templates." +STARTLINE}
   addUserKnob {26 line2 l "" +STARTLINE}
   addUserKnob {22 buttonHelp l Help -STARTLINE T stamps.showHelp()}
   addUserKnob {26 version l " " t "Stamps by Adrian Pueyo and Alexey Kuchinski.\nUpdated May 18 2021." -STARTLINE T "<a href=\"http://www.nukepedia.com/gizmos/other/stamps\" style=\"color:#666;text-decoration: none;\"><span style=\"color:#666\"> <big>Stamps v1.1</big></b></a>"}
  }
push $N56244930
  PostageStamp {
   name Stamp42
   help "Stamps by Adrian Pueyo and Alexey Kuchinski.\nUpdated May 18 2021"
   onCreate "if nuke.GUI:\n    try:\n        import stamps; stamps.wiredOnCreate()\n    except:\n        pass\n"
   knobChanged "import stamps; stamps.wiredKnobChanged()"
   autolabel "nuke.thisNode().knob(\"title\").value()"
   tile_color 0x1000001
   note_font "Bitstream Vera Sans"
   note_font_size 20
   xpos 4861
   ypos -696
   hide_input true
   addUserKnob {20 wired_tab l "Wired Stamp"}
   addUserKnob {26 identifier -STARTLINE +HIDDEN T wired}
   addUserKnob {3 lockCallbacks l "" +STARTLINE +HIDDEN}
   addUserKnob {6 toReconnect -STARTLINE +HIDDEN}
   addUserKnob {1 title l Title: t "Displayed name on the Node Graph for this Stamp and its Anchor.\nIMPORTANT: This is only for display purposes, and is different from the real/internal name of the Stamps."}
   title smoke_SIDE
   addUserKnob {26 prev_title l "" +STARTLINE +HIDDEN T smoke_SIDE}
   addUserKnob {26 tags l Tags: t "Tags of this stamp's Anchor, for information purpose only.\nClick \"show anchor\" to change them." T <i>2D</i>}
   addUserKnob {26 backdrops l Backdrops: t "Labels of backdrop nodes which contain this stamp's Anchor." T "<i><Left>before or after Flare</i>"}
   addUserKnob {26 line1 l "" +STARTLINE}
   addUserKnob {6 postageStamp_show l "postage stamp" t "Enable the postage stamp thumbnail in this node.\nYou're seeing this because the class of this node includes the postage_stamp knob." +STARTLINE}
   addUserKnob {26 anchor_label l Anchor: T " "}
   addUserKnob {22 show_anchor l " show anchor " t "Show the properties panel for this Stamp's Anchor." -STARTLINE T stamps.wiredShowAnchor()}
   addUserKnob {22 zoom_anchor l "zoom anchor" t "Navigate to this Stamp's Anchor on the Node Graph." -STARTLINE T stamps.wiredZoomAnchor()}
   addUserKnob {26 stamps_label l Stamps: T " "}
   addUserKnob {22 zoomNext l " zoom next " t "Navigate to this Stamp's next sibling on the Node Graph." -STARTLINE T stamps.wiredZoomNext()}
   addUserKnob {22 selectSimilar l " select similar " t "Select all similar Stamps to this one on the Node Graph." -STARTLINE T stamps.wiredSelectSimilar()}
   addUserKnob {26 space_1 l "" +STARTLINE T " "}
   addUserKnob {26 reconnect_label l Reconnect: t "Reconnect by the stored Anchor name." T " "}
   addUserKnob {22 reconnect_this l this t "Reconnect this Stamp to its Anchor, by its stored Anchor name." -STARTLINE T "n = nuke.thisNode()\ntry:\n    n.setInput(0,nuke.toNode(n.knob(\"anchor\").value()))\nexcept:\n    nuke.message(\"Unable to reconnect.\")\ntry:\n    import stamps\n    stamps.wiredGetStyle(n)\nexcept:\n    pass\n"}
   addUserKnob {22 reconnect_similar l similar t "Reconnect this Stamp and similar ones to their Anchor, by their stored anchor name." -STARTLINE T stamps.wiredReconnectSimilar()}
   addUserKnob {22 reconnect_all l all t "Reconnect all the Stamps to their Anchors, by their stored anchor names." -STARTLINE T stamps.wiredReconnectAll()}
   addUserKnob {26 space_2 l "" +STARTLINE T " "}
   addUserKnob {20 advanced_reconnection l "Advanced Reconnection" n 2}
   addUserKnob {26 reconnect_by_title_label l "<font color=gold>By Title:" t "Reconnect by searching for a matching title." T " "}
   addUserKnob {22 reconnect_by_title_this l this t "Look for an Anchor that shares this Stamp's title, and connect this Stamp to it.\nIMPORTANT: Use this carefully, and only when the normal reconnection doesn't work." -STARTLINE T stamps.wiredReconnectByTitle()}
   addUserKnob {22 reconnect_by_title_similar l similar t "Look for an Anchor that shares this Stamp's title, and connect this Stamp and similar ones to it.\nIMPORTANT: Use this carefully, and only when the normal reconnection doesn't work." -STARTLINE T stamps.wiredReconnectByTitleSimilar()}
   addUserKnob {22 reconnect_by_title_selected l selected t "For each Stamp selected, look for an Anchor that shares its title, and connect to it.\nIMPORTANT: Use this carefully, and only when the normal reconnection doesn't work." -STARTLINE T stamps.wiredReconnectByTitleSelected()}
   addUserKnob {26 reconnect_by_selection_label l "<font color=orangered>By Selection:" t "Force reconnect to a selected Anchor." T " "}
   addUserKnob {22 reconnect_by_selection_this l this t "Force reconnect this Stamp to a selected Anchor, whatever its name or title.\nIMPORTANT: Use this carefully, and only when the normal reconnection doesn't work." -STARTLINE T stamps.wiredReconnectBySelection()}
   addUserKnob {22 reconnect_by_selection_similar l similar t "Force reconnect this Stamp and similar ones to a selected Anchor, whatever its name or title.\nIMPORTANT: Use this carefully, and only when the normal reconnection doesn't work." -STARTLINE T stamps.wiredReconnectBySelectionSimilar()}
   addUserKnob {22 reconnect_by_selection_selected l selected t "Force reconnect all selected Stamps to an also selected Anchor, whatever its name or title.\nIMPORTANT: Use this carefully, and only when the normal reconnection doesn't work." -STARTLINE T stamps.wiredReconnectBySelectionSelected()}
   addUserKnob {1 anchor l Anchor}
   anchor Anchor_232c9aab88
   addUserKnob {6 auto_reconnect_by_title l "<font color=#ED9977>&nbsp; auto-reconnect by title" t "When creating this stamp again (like on copy-paste), auto-reconnect it by title instead of doing it by the saved anchor's name, and auto-turn this off immediately.\nIMPORTANT: Should be off by default. Only use this for setting up templates." +STARTLINE}
   addUserKnob {26 line2 l "" +STARTLINE}
   addUserKnob {22 buttonHelp l Help -STARTLINE T stamps.showHelp()}
   addUserKnob {26 version l " " t "Stamps by Adrian Pueyo and Alexey Kuchinski.\nUpdated May 18 2021." -STARTLINE T "<a href=\"http://www.nukepedia.com/gizmos/other/stamps\" style=\"color:#666;text-decoration: none;\"><span style=\"color:#666\"> <big>Stamps v1.1</big></b></a>"}
  }
  Dot {
   name Dot28
   xpos 4895
   ypos -646
  }
  Group {
   inputs 3
   name gunshot14
   label "shot: \[value shotcount]\non frame: \[value shotstart]\n"
   xpos 4743
   ypos -619
   addUserKnob {20 User}
   addUserKnob {3 shotcount l shot}
   shotcount 14
   addUserKnob {3 shotstart l frame +INVISIBLE}
   shotstart {{"shotcount==0 ? 0 : shot\[value shotcount]-1" i}}
  }
   BackdropNode {
    inputs 0
    name BackdropNode19
    knobChanged "try:\n    listenedKnobs = \['text', 'position', 'name']\n    node = nuke.thisNode()\n    name = node.knob('name').value()\n    text = node.knob('text').value()\n    position = node.knob('position').value()\n    position = \"<\" + position + \">\"\n    label = node.knob('label').value()\n    \n    if nuke.thisKnob().name() in listenedKnobs:\n        if text == \"\":\n            if node.knob('position').value() == \"left\":\n                node.knob('label').setValue()\n            else:\n                node.knob('label').setValue(position + name)\n        else:\n            if node.knob('position').value() == \"left\":\n                node.knob('label').setValue(text)\n            else:\n                node.knob('label').setValue(position + text)\n                \n    elif nuke.thisKnob().name() == 'font_size':\n        fontSize = node.knob('font_size').value()\n        node.knob('note_font_size').setValue(fontSize)\nexcept:\n    pass"
    tile_color 0x232323ff
    label "<Left><h2> Gunshot"
    note_font_size 31.5
    xpos -693
    ypos -554
    bdwidth 876
    bdheight 1682
    addUserKnob {20 F_VFX l BackdropNode}
    addUserKnob {43 text l Text}
    text "<h2> Gunshot"
    addUserKnob {7 font_size l "Font Size" R 10 100}
    font_size 31.5
    addUserKnob {4 position l "" -STARTLINE M {Left Center}}
    addUserKnob {26 S01 l " " T " "}
    addUserKnob {22 grow l " <img src=\"F_scalep.png\">" -STARTLINE T "n=nuke.thisNode()\n\ndef grow(node=None,step=50):\n    try:\n        if not node:\n            n=nuke.selectedNode()\n        else:\n            n=node\n            n\['xpos'].setValue(n\['xpos'].getValue()-step)\n            n\['ypos'].setValue(n\['ypos'].getValue()-step)\n            n\['bdwidth'].setValue(n\['bdwidth'].getValue()+step*2)\n            n\['bdheight'].setValue(n\['bdheight'].getValue()+step*2)\n    except:\n        pass\ngrow(n,50)"}
    addUserKnob {22 shrink l " <img src=\"F_scalem.png\">" -STARTLINE T "n=nuke.thisNode()\n\ndef shrink(node=None,step=50):\n    try:\n        if not node:\n            n=nuke.selectedNode()\n        else:\n            n=node\n            n\['xpos'].setValue(n\['xpos'].getValue()+step)\n            n\['ypos'].setValue(n\['ypos'].getValue()+step)\n            n\['bdwidth'].setValue(n\['bdwidth'].getValue()-step*2)\n            n\['bdheight'].setValue(n\['bdheight'].getValue()-step*2)\n    except:\n        pass\nshrink(n,50)"}
    addUserKnob {22 colorandom l " <img src=\"ColorBars.png\">" -STARTLINE T "import colorsys, random\nn=nuke.thisNode()\nR,G,B= colorsys.hsv_to_rgb(random.random(),.1+random.random()*.15,.15+random.random()*.15)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ) )"}
    addUserKnob {22 darkgrey l "<font color=\"#232323\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.0, 0.0, 0.14]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 lightgrey l "<font color=\"#383838\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.0, 0.0, 0.22]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 red l "<font color=\"#8c3838\" size=6>■</font>" T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.0, 0.6, 0.55]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n" +STARTLINE}
    addUserKnob {22 orange l "<font color=\"#b28e59\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.1, 0.5, 0.7]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 yellow l "<font color=\"#ccc766\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.16, 0.5, 0.8]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 green l "<font color=\"#5d995b\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.33, 0.4, 0.6]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 cyan l "<font color=\"#72998f\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.46, 0.25, 0.6]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 blue l "<font color=\"#59687f\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.6, 0.3, 0.5]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 darkblue l "<font color=\"#63628c\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.67, 0.3, 0.55]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 magenta l "<font color=\"#927a99\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.8, 0.2, 0.6]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 pink l "<font color=\"#997a89\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.92, 0.2, 0.6]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {26 S02 l " " T " "}
    addUserKnob {26 Ftools l "" +STARTLINE T "<font color=\"#1C1C1C\"> v1.2 - Franklin VFX - 2018"}
   }
   BackdropNode {
    inputs 0
    name BackdropNode2
    knobChanged "try:\n    listenedKnobs = \['text', 'position', 'name']\n    node = nuke.thisNode()\n    name = node.knob('name').value()\n    text = node.knob('text').value()\n    position = node.knob('position').value()\n    position = \"<\" + position + \">\"\n    label = node.knob('label').value()\n    \n    if nuke.thisKnob().name() in listenedKnobs:\n        if text == \"\":\n            if node.knob('position').value() == \"left\":\n                node.knob('label').setValue()\n            else:\n                node.knob('label').setValue(position + name)\n        else:\n            if node.knob('position').value() == \"left\":\n                node.knob('label').setValue(text)\n            else:\n                node.knob('label').setValue(position + text)\n                \n    elif nuke.thisKnob().name() == 'font_size':\n        fontSize = node.knob('font_size').value()\n        node.knob('note_font_size').setValue(fontSize)\nexcept:\n    pass"
    tile_color 0x927a99ff
    note_font_size 50
    xpos -473
    ypos -221
    bdwidth 435
    bdheight 786
    z_order 1
    addUserKnob {20 F_VFX l BackdropNode}
    addUserKnob {43 text l Text}
    addUserKnob {7 font_size l "Font Size" R 10 100}
    font_size 50
    addUserKnob {4 position l "" -STARTLINE M {Left Center}}
    addUserKnob {26 S01 l " " T " "}
    addUserKnob {22 grow l " <img src=\"F_scalep.png\">" -STARTLINE T "n=nuke.thisNode()\n\ndef grow(node=None,step=50):\n    try:\n        if not node:\n            n=nuke.selectedNode()\n        else:\n            n=node\n            n\['xpos'].setValue(n\['xpos'].getValue()-step)\n            n\['ypos'].setValue(n\['ypos'].getValue()-step)\n            n\['bdwidth'].setValue(n\['bdwidth'].getValue()+step*2)\n            n\['bdheight'].setValue(n\['bdheight'].getValue()+step*2)\n    except:\n        pass\ngrow(n,50)"}
    addUserKnob {22 shrink l " <img src=\"F_scalem.png\">" -STARTLINE T "n=nuke.thisNode()\n\ndef shrink(node=None,step=50):\n    try:\n        if not node:\n            n=nuke.selectedNode()\n        else:\n            n=node\n            n\['xpos'].setValue(n\['xpos'].getValue()+step)\n            n\['ypos'].setValue(n\['ypos'].getValue()+step)\n            n\['bdwidth'].setValue(n\['bdwidth'].getValue()-step*2)\n            n\['bdheight'].setValue(n\['bdheight'].getValue()-step*2)\n    except:\n        pass\nshrink(n,50)"}
    addUserKnob {22 colorandom l " <img src=\"ColorBars.png\">" -STARTLINE T "import colorsys, random\nn=nuke.thisNode()\nR,G,B= colorsys.hsv_to_rgb(random.random(),.1+random.random()*.15,.15+random.random()*.15)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ) )"}
    addUserKnob {22 darkgrey l "<font color=\"#232323\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.0, 0.0, 0.14]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 lightgrey l "<font color=\"#383838\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.0, 0.0, 0.22]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 red l "<font color=\"#8c3838\" size=6>■</font>" T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.0, 0.6, 0.55]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n" +STARTLINE}
    addUserKnob {22 orange l "<font color=\"#b28e59\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.1, 0.5, 0.7]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 yellow l "<font color=\"#ccc766\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.16, 0.5, 0.8]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 green l "<font color=\"#5d995b\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.33, 0.4, 0.6]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 cyan l "<font color=\"#72998f\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.46, 0.25, 0.6]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 blue l "<font color=\"#59687f\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.6, 0.3, 0.5]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 darkblue l "<font color=\"#63628c\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.67, 0.3, 0.55]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 magenta l "<font color=\"#927a99\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.8, 0.2, 0.6]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 pink l "<font color=\"#997a89\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.92, 0.2, 0.6]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {26 S02 l " " T " "}
    addUserKnob {26 Ftools l "" +STARTLINE T "<font color=\"#1C1C1C\"> v1.2 - Franklin VFX - 2018"}
   }
   Constant {
    inputs 0
    channels rgb
    name Constant13
    xpos -643
    ypos 714
   }
   AdjBBox {
    numpixels {{size_bbox}}
    name AdjBBox13
    xpos -643
    ypos 849
   }
   Dot {
    name Dot78
    xpos -609
    ypos 987
   }
   Axis3 {
    inputs 0
    useMatrix true
    matrix {
        {{parent.cCard3D_1.matrix} {parent.cCard3D_1.matrix} {parent.cCard3D_1.matrix} {parent.cCard3D_1.matrix}}
        {{parent.cCard3D_1.matrix} {parent.cCard3D_1.matrix} {parent.cCard3D_1.matrix} {parent.cCard3D_1.matrix}}
        {{parent.cCard3D_1.matrix} {parent.cCard3D_1.matrix} {parent.cCard3D_1.matrix} {parent.cCard3D_1.matrix}}
        {{parent.cCard3D_1.matrix} {parent.cCard3D_1.matrix} {parent.cCard3D_1.matrix} {parent.cCard3D_1.matrix}}
      }
    name Axis14
    xpos -203
    ypos -90
   }
set N5b5cafc0 [stack 0]
push 0
   Input {
    inputs 0
    name top
    xpos -283
    ypos -1243
    number 1
   }
   TimeOffset {
    time_offset {{"shot_\[value shotnmbr]==0 ? 0 : shot_\[value shotnmbr]-1"}}
    time ""
    name CTimeOffset1
    label "shot: \[value shotnmbr]\non frame \[value time_offset]"
    xpos -283
    ypos -924
    addUserKnob {20 User}
    addUserKnob {3 shotnmbr l "shot "}
    shotnmbr {{shotcount}}
    addUserKnob {3 ref}
    ref {{time_offset+1}}
   }
   Group {
    name DecimalTimeOffset1
    tile_color 0xafa35dff
    label "random asset"
    note_font "Bitstream Vera Sans Bold"
    xpos -283
    ypos -841
    addUserKnob {20 User}
    addUserKnob {7 decimal l "time offset (decimal)"}
    decimal {{random(shotcount*seed)}}
    addUserKnob {26 ""}
    addUserKnob {26 _1 l "" +STARTLINE T "Chris Fryer | 2020\nupdated by Yorben Otto | 2024"}
   }
    Input {
     inputs 0
     name Input1
     xpos 426
     ypos -793
    }
    TimeOffset {
     time_offset {{(-floor(parent.decimal))*(DecimalTimeOffset1.decimal<0)}}
     time ""
     name TimeOffset1
     xpos 426
     ypos -675
    }
    Dot {
     name Dot6
     xpos 460
     ypos -635
    }
set N5b41a720 [stack 0]
    Dot {
     name Dot5
     xpos 350
     ypos -635
    }
    Dot {
     name Dot7
     xpos 350
     ypos -365
    }
push $N5b41a720
    Dot {
     name Dot1
     xpos 572
     ypos -635
    }
    TimeBlur {
     divisions 2
     shutter {{(parent.decimal-(floor(parent.decimal)))*2}}
     shutteroffset start
     shuttercustomoffset 0
     name TimeBlur1
     xpos 538
     ypos -558
    }
    Dot {
     name Dot2
     xpos 572
     ypos -490
    }
push $N5b41a720
    TimeBlur {
     divisions 2
     shutter {{parent.decimal*2}}
     shutteroffset start
     shuttercustomoffset 0
     name TimeBlur8
     xpos 426
     ypos -556
    }
    Switch {
     inputs 2
     which {{parent.decimal<0}}
     name Switch1
     xpos 426
     ypos -494
    }
    Multiply {
     value {{parent.TimeBlur8.divisions}}
     name Multiply6
     xpos 426
     ypos -436
    }
    Merge2 {
     inputs 2
     operation from
     name Merge6
     xpos 426
     ypos -369
    }
set N5b45c660 [stack 0]
    Output {
     name Output1
     xpos 426
     ypos -221
    }
push $N5b45c660
push $N5b45c660
    Viewer {
     inputs 2
     frame_range 1-100
     name Viewer1
     xpos 675
     ypos -246
    }
   end_group
   NoTimeBlur {
    name NoTimeBlur1
    xpos -283
    ypos -779
   }
   Transform {
    scale {{0.05+(0.05*(((parent.DecimalTimeOffset13.decimal-0.5)*2)*ScaleVariationSmoke))}}
    center {{root.width/2 x1015 2304} {root.height/2}}
    shutteroffset centred
    name Transform44
    xpos -283
    ypos -152
   }
   Card3D {
    inputs 3
    rot_order ZYX
    translate {0 0 0}
    rotate {90 0 0}
    shutteroffset centred
    name cCard3D25
    tile_color 0x7b1d1dff
    xpos -283
    ypos 11
    addUserKnob {20 User l parent}
    addUserKnob {22 python_button l "set parent" t "select parent node, and press this button to set the selected node as parent" +INVISIBLE T "n = nuke.selectedNode()\['name'].getValue()\nnuke.thisNode()\['string'].setValue(n)" +STARTLINE}
    addUserKnob {1 string l parent +INVISIBLE}
    string null
    addUserKnob {3 ref l "ref frame"}
    ref 1015
   }
   Transform {
    translate {{"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].translate.x(ref)\}]"} {"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].translate.y(ref)\}]"}}
    rotate {{"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].rotate-\[value parent_gun].rotate(ref)\}]"}}
    scale {{"\[if \{\[value parent_gun]==\"null\"\} \{return 1\} \{return 1+(\[value parent_gun].scale-\[value parent_gun].scale(ref))\}]"}}
    center {{"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].center.x(ref)\}]"} {"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].center.y(ref)\}]"}}
    name Transform_GUNMatchMove37
    xpos -283
    ypos 126
    addUserKnob {20 User l parent}
    addUserKnob {3 ref}
    ref {{parent.CTimeOffset.ref}}
   }
   Transform {
    translate {{"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].translate.x-\[value parent_env].translate.x(ref)\}]"} {"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].translate.y-\[value parent_env].translate.y(ref)\}]"}}
    rotate {{"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].rotate-\[value parent_env].rotate(ref)\}]"}}
    scale {{"\[if \{\[value parent_gun]==\"null\"\} \{return 1\} \{return 1+(\[value parent_env].scale-\[value parent_env].scale(ref))\}]"}}
    center {{"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].center.x(ref)\}]"} {"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].center.y(ref)\}]"}}
    motionblur 0.2
    shutter {{SmokeMB*0.5}}
    shutteroffset centred
    name Transform_ENVMatchMove37
    label "\n"
    xpos -283
    ypos 255
    addUserKnob {20 User l parent}
    addUserKnob {3 ref}
    ref {{parent.CTimeOffset.ref}}
   }
   Transform {
    translate {{"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return -((root.width/2)-(\[value parent_gun].center.x(1)+\[value parent_gun].translate.x(1)))\}]"} {"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return -((root.height/2)-(\[value parent_gun].center.y(1)+\[value parent_gun].translate.y(1)))\}]"}}
    name Transform_GUNMatchMove6
    label "alignment correction"
    xpos -283
    ypos 344
    addUserKnob {20 User l parent}
    addUserKnob {22 python_button l "set parent" t "select parent node, and press this button to set the selected node as parent" T "n = nuke.selectedNode()\['name'].getValue()\nnuke.thisNode()\['string'].setValue(n)" +STARTLINE}
    addUserKnob {1 string l parent}
    string Transform_MatchMove10
    addUserKnob {3 ref +INVISIBLE}
    ref {{parent.cCard3D_8.ref}}
   }
   Multiply {
    value {{math_matrix.result_y_smoke(parent.CTimeOffset.ref)}}
    name Angle_reveal_top1
    label TOP
    xpos -283
    ypos 403
   }
   Remove {
    operation keep
    channels rgb
    name Remove1
    xpos -283
    ypos 514
   }
push 0
   Switch {
    inputs 2
    which {{parent.Angle_reveal_top1.value>0.001}}
    name Switch1
    xpos -283
    ypos 660
   }
   Dot {
    name Dot82
    xpos -249
    ypos 705
   }
push 0
push $N5b5cafc0
push 0
   Input {
    inputs 0
    name front
    xpos -436
    ypos -1243
    number 2
   }
   TimeOffset {
    time_offset {{"shot_\[value shotnmbr]==0 ? 0 : shot_\[value shotnmbr]-1"}}
    time ""
    name CTimeOffset2
    label "shot: \[value shotnmbr]\non frame \[value time_offset]"
    xpos -436
    ypos -925
    addUserKnob {20 User}
    addUserKnob {3 shotnmbr l "shot "}
    shotnmbr {{shotcount}}
    addUserKnob {3 ref}
    ref {{time_offset+1}}
   }
   Group {
    name DecimalTimeOffset2
    tile_color 0xafa35dff
    label "random asset"
    note_font "Bitstream Vera Sans Bold"
    xpos -436
    ypos -842
    addUserKnob {20 User}
    addUserKnob {7 decimal l "time offset (decimal)"}
    decimal {{random(shotcount*seed)}}
    addUserKnob {26 ""}
    addUserKnob {26 _1 l "" +STARTLINE T "Chris Fryer | 2020\nupdated by Yorben Otto | 2024"}
   }
    Input {
     inputs 0
     name Input1
     xpos 426
     ypos -793
    }
    TimeOffset {
     time_offset {{(-floor(parent.decimal))*(DecimalTimeOffset2.decimal<0)}}
     time ""
     name TimeOffset1
     xpos 426
     ypos -675
    }
    Dot {
     name Dot6
     xpos 460
     ypos -635
    }
set N5b2a8540 [stack 0]
    Dot {
     name Dot5
     xpos 350
     ypos -635
    }
    Dot {
     name Dot7
     xpos 350
     ypos -365
    }
push $N5b2a8540
    Dot {
     name Dot1
     xpos 572
     ypos -635
    }
    TimeBlur {
     divisions 2
     shutter {{(parent.decimal-(floor(parent.decimal)))*2}}
     shutteroffset start
     shuttercustomoffset 0
     name TimeBlur1
     xpos 538
     ypos -558
    }
    Dot {
     name Dot2
     xpos 572
     ypos -490
    }
push $N5b2a8540
    TimeBlur {
     divisions 2
     shutter {{parent.decimal*2}}
     shutteroffset start
     shuttercustomoffset 0
     name TimeBlur8
     xpos 426
     ypos -556
    }
    Switch {
     inputs 2
     which {{parent.decimal<0}}
     name Switch1
     xpos 426
     ypos -494
    }
    Multiply {
     value {{parent.TimeBlur8.divisions}}
     name Multiply6
     xpos 426
     ypos -436
    }
    Merge2 {
     inputs 2
     operation from
     name Merge6
     xpos 426
     ypos -369
    }
set N5b2ea480 [stack 0]
    Output {
     name Output1
     xpos 426
     ypos -221
    }
push $N5b2ea480
push $N5b2ea480
    Viewer {
     inputs 2
     frame_range 1-100
     name Viewer1
     xpos 675
     ypos -246
    }
   end_group
   NoTimeBlur {
    name NoTimeBlur5
    xpos -436
    ypos -780
   }
   Transform {
    scale {{0.05+(0.05*(((parent.DecimalTimeOffset13.decimal-0.5)*2)*ScaleVariationSmoke))}}
    center {{root.width/2 x1015 2304} {root.height/2}}
    shutteroffset centred
    name Transform45
    xpos -436
    ypos -151
   }
   Card3D {
    inputs 3
    rot_order ZYX
    translate {0 0 0}
    rotate {0 90 0}
    shutteroffset centred
    name cCard3D26
    tile_color 0x7b1d1dff
    xpos -436
    ypos 15
    addUserKnob {20 User l parent}
    addUserKnob {22 python_button l "set parent" t "select parent node, and press this button to set the selected node as parent" +INVISIBLE T "n = nuke.selectedNode()\['name'].getValue()\nnuke.thisNode()\['string'].setValue(n)" +STARTLINE}
    addUserKnob {1 string l parent +INVISIBLE}
    string null
    addUserKnob {3 ref l "ref frame"}
    ref 1015
   }
   Transform {
    translate {{"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].translate.x(ref)\}]"} {"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].translate.y(ref)\}]"}}
    rotate {{"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].rotate-\[value parent_gun].rotate(ref)\}]"}}
    scale {{"\[if \{\[value parent_gun]==\"null\"\} \{return 1\} \{return 1+(\[value parent_gun].scale-\[value parent_gun].scale(ref))\}]"}}
    center {{"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].center.x(ref)\}]"} {"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].center.y(ref)\}]"}}
    name Transform_GUNMatchMove38
    label "\n"
    xpos -436
    ypos 124
    addUserKnob {20 User l parent}
    addUserKnob {3 ref}
    ref {{parent.CTimeOffset.ref}}
   }
   Transform {
    translate {{"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].translate.x-\[value parent_env].translate.x(ref)\}]"} {"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].translate.y-\[value parent_env].translate.y(ref)\}]"}}
    rotate {{"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].rotate-\[value parent_env].rotate(ref)\}]"}}
    scale {{"\[if \{\[value parent_gun]==\"null\"\} \{return 1\} \{return 1+(\[value parent_env].scale-\[value parent_env].scale(ref))\}]"}}
    center {{"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].center.x(ref)\}]"} {"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].center.y(ref)\}]"}}
    motionblur 0.2
    shutter {{SmokeMB*0.5}}
    shutteroffset centred
    name Transform_ENVMatchMove38
    xpos -436
    ypos 254
    addUserKnob {20 User l parent}
    addUserKnob {3 ref}
    ref {{parent.CTimeOffset.ref}}
   }
   Transform {
    translate {{"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return -((root.width/2)-(\[value parent_gun].center.x(1)+\[value parent_gun].translate.x(1)))\}]"} {"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return -((root.height/2)-(\[value parent_gun].center.y(1)+\[value parent_gun].translate.y(1)))\}]"}}
    name Transform_GUNMatchMove7
    label "alignment correction"
    xpos -436
    ypos 343
    addUserKnob {20 User l parent}
    addUserKnob {22 python_button l "set parent" t "select parent node, and press this button to set the selected node as parent" T "n = nuke.selectedNode()\['name'].getValue()\nnuke.thisNode()\['string'].setValue(n)" +STARTLINE}
    addUserKnob {1 string l parent}
    string Transform_MatchMove10
    addUserKnob {3 ref +INVISIBLE}
    ref {{parent.cCard3D_8.ref}}
   }
   Multiply {
    value {{math_matrix.result_x_smoke(parent.CTimeOffset.ref)}}
    name Angle_reveal_front1
    label FRONT
    xpos -436
    ypos 401
   }
   Remove {
    operation keep
    channels rgb
    name Remove2
    xpos -436
    ypos 511
   }
push 0
   Switch {
    inputs 2
    which {{parent.Angle_reveal_front1.value>0.001}}
    name Switch2
    xpos -436
    ypos 660
   }
   Dot {
    name Dot83
    xpos -402
    ypos 735
   }
   Input {
    inputs 0
    name side
    xpos -130
    ypos -1242
   }
   TimeOffset {
    time_offset {{"shot_\[value shotnmbr]==0 ? 0 : shot_\[value shotnmbr]-1"}}
    time ""
    name CTimeOffset
    label "shot: \[value shotnmbr]\non frame \[value time_offset]"
    xpos -130
    ypos -927
    addUserKnob {20 User}
    addUserKnob {3 shotnmbr l "shot "}
    shotnmbr {{shotcount}}
    addUserKnob {3 ref}
    ref {{time_offset+1}}
   }
   Group {
    name DecimalTimeOffset13
    tile_color 0xafa35dff
    label "random asset"
    note_font "Bitstream Vera Sans Bold"
    xpos -130
    ypos -844
    addUserKnob {20 User}
    addUserKnob {7 decimal l "time offset (decimal)"}
    decimal {{random(shotcount*seed)}}
    addUserKnob {26 ""}
    addUserKnob {26 _1 l "" +STARTLINE T "Chris Fryer | 2020\nupdated by Yorben Otto | 2024"}
   }
    Input {
     inputs 0
     name Input1
     xpos 426
     ypos -793
    }
    TimeOffset {
     time_offset {{(-floor(parent.decimal))*(DecimalTimeOffset13.decimal<0)}}
     time ""
     name TimeOffset1
     xpos 426
     ypos -675
    }
    Dot {
     name Dot6
     xpos 460
     ypos -635
    }
set N5be46320 [stack 0]
    Dot {
     name Dot5
     xpos 350
     ypos -635
    }
    Dot {
     name Dot7
     xpos 350
     ypos -365
    }
push $N5be46320
    Dot {
     name Dot1
     xpos 572
     ypos -635
    }
    TimeBlur {
     divisions 2
     shutter {{(parent.decimal-(floor(parent.decimal)))*2}}
     shutteroffset start
     shuttercustomoffset 0
     name TimeBlur1
     xpos 538
     ypos -558
    }
    Dot {
     name Dot2
     xpos 572
     ypos -490
    }
push $N5be46320
    TimeBlur {
     divisions 2
     shutter {{parent.decimal*2}}
     shutteroffset start
     shuttercustomoffset 0
     name TimeBlur8
     xpos 426
     ypos -556
    }
    Switch {
     inputs 2
     which {{parent.decimal<0}}
     name Switch1
     xpos 426
     ypos -494
    }
    Multiply {
     value {{parent.TimeBlur8.divisions}}
     name Multiply6
     xpos 426
     ypos -436
    }
    Merge2 {
     inputs 2
     operation from
     name Merge6
     xpos 426
     ypos -369
    }
set N5be88260 [stack 0]
    Output {
     name Output1
     xpos 426
     ypos -221
    }
push $N5be88260
push $N5be88260
    Viewer {
     inputs 2
     frame_range 1-100
     name Viewer1
     xpos 675
     ypos -246
    }
   end_group
   NoTimeBlur {
    name NoTimeBlur13
    xpos -130
    ypos -782
   }
   Transform {
    scale {{0.05+(0.05*(((parent.DecimalTimeOffset13.decimal-0.5)*2)*ScaleVariationSmoke))}}
    center {{root.width/2 x1015 2304} {root.height/2}}
    shutteroffset centred
    name Transform46
    xpos -130
    ypos -155
   }
   Card3D {
    translate {{"\[if \{\[exists  parent.parent.parent.input0]\} \{return \[value \[topnode parent.parent.parent.input0].name].translate.x(ref)\} \{return 0\}]"} {"\[if \{\[exists  parent.parent.parent.input0]\} \{return \[value \[topnode parent.parent.parent.input0].name].translate.y(ref)\} \{return 0\}]"} {"\[if \{\[exists  parent.parent.parent.input0]\} \{return \[value \[topnode parent.parent.parent.input0].name].translate.z(ref)\} \{return -1\}]"}}
    rotate {{"\[if \{\[exists  parent.parent.parent.input0]\} \{return \[value \[topnode parent.parent.parent.input0].name].rotate.x(ref)\} \{return 0\}]"} {"\[if \{\[exists  parent.parent.parent.input0]\} \{return \[value \[topnode parent.parent.parent.input0].name].rotate.y(ref)\} \{return 0\}]"} {"\[if \{\[exists  parent.parent.parent.input0]\} \{return \[value \[topnode parent.parent.parent.input0].name].rotate.z(ref)\} \{return 0\}]"}}
    scaling {{"\[if \{\[exists  parent.parent.parent.input0]\} \{return \[value \[topnode parent.parent.parent.input0].name].scaling.x(ref)\} \{return 1\}]"} {"\[if \{\[exists  parent.parent.parent.input0]\} \{return \[value \[topnode parent.parent.parent.input0].name].scaling.y(ref)\} \{return 1\}]"} {"\[if \{\[exists  parent.parent.parent.input0]\} \{return \[value \[topnode parent.parent.parent.input0].name].scaling.z(ref)\} \{return 1\}]"}}
    uniform_scale {{"\[if \{\[exists  parent.parent.parent.input0]\} \{return (\[value \[topnode parent.parent.parent.input0].name].uniform_scale(ref)*25)\} \{return 25\}]"}}
    shutteroffset centred
    name cCard3D_1
    tile_color 0x7b1d1dff
    label "ref frame: \[value ref]"
    xpos -130
    ypos 2
    addUserKnob {20 User l parent}
    addUserKnob {22 python_button l "set parent" t "select parent node, and press this button to set the selected node as parent" +INVISIBLE T "n = nuke.selectedNode()\['name'].getValue()\nnuke.thisNode()\['string'].setValue(n)" +STARTLINE}
    addUserKnob {1 string l parent +INVISIBLE}
    string null
    addUserKnob {3 id l "id number"}
    id {{parent.CTimeOffset.shotnmbr}}
    addUserKnob {3 ref l "ref frame"}
    ref {{parent.CTimeOffset.ref}}
   }
   Transform {
    translate {{"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].translate.x(ref)\}]"} {"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].translate.y(ref)\}]"}}
    rotate {{"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].rotate-\[value parent_gun].rotate(ref)\}]"}}
    scale {{"\[if \{\[value parent_gun]==\"null\"\} \{return 1\} \{return 1+(\[value parent_gun].scale-\[value parent_gun].scale(ref))\}]"}}
    center {{"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].center.x(ref)\}]"} {"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].center.y(ref)\}]"}}
    name Transform_GUNMatchMove39
    label "\n"
    xpos -130
    ypos 124
    addUserKnob {20 User l parent}
    addUserKnob {3 ref}
    ref {{parent.CTimeOffset.ref}}
   }
   Transform {
    translate {{"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].translate.x-\[value parent_env].translate.x(ref)\}]"} {"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].translate.y-\[value parent_env].translate.y(ref)\}]"}}
    rotate {{"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].rotate-\[value parent_env].rotate(ref)\}]"}}
    scale {{"\[if \{\[value parent_gun]==\"null\"\} \{return 1\} \{return 1+(\[value parent_env].scale-\[value parent_env].scale(ref))\}]"}}
    center {{"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].center.x(ref)\}]"} {"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].center.y(ref)\}]"}}
    motionblur 0.2
    shutter {{SmokeMB*0.5}}
    shutteroffset centred
    name Transform_ENVMatchMove39
    xpos -130
    ypos 258
    addUserKnob {20 User l parent}
    addUserKnob {3 ref}
    ref {{parent.CTimeOffset.ref}}
   }
   Transform {
    translate {{"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return -((root.width/2)-(\[value parent_gun].center.x(1)+\[value parent_gun].translate.x(1)))\}]"} {"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return -((root.height/2)-(\[value parent_gun].center.y(1)+\[value parent_gun].translate.y(1)))\}]"}}
    name Transform_GUNMatchMove5
    label "alignment correction"
    xpos -130
    ypos 340
    addUserKnob {20 User l parent}
    addUserKnob {22 python_button l "set parent" t "select parent node, and press this button to set the selected node as parent" T "n = nuke.selectedNode()\['name'].getValue()\nnuke.thisNode()\['string'].setValue(n)" +STARTLINE}
    addUserKnob {1 string l parent}
    string Transform_MatchMove10
    addUserKnob {3 ref +INVISIBLE}
    ref {{parent.cCard3D_8.ref}}
   }
   Multiply {
    value {{math_matrix.result_z_smoke(parent.CTimeOffset.ref)}}
    name Angle_reveal_side1
    label SIDE
    xpos -130
    ypos 404
   }
   Remove {
    operation keep
    channels rgb
    name Remove39
    xpos -130
    ypos 514
   }
push 0
   Switch {
    inputs 2
    which {{parent.Angle_reveal_side1.value>0.001}}
    name Switch3
    xpos -130
    ypos 658
   }
   Merge2 {
    inputs 3+1
    operation max
    Achannels rgb
    Bchannels rgb
    output rgb
    name Merge28
    xpos -130
    ypos 731
   }
   Merge2 {
    inputs 2
    operation plus
    bbox intersection
    Achannels rgb
    Bchannels rgb
    output rgb
    name Merge29
    xpos -130
    ypos 983
   }
   Shuffle2 {
    fromInput1 {{0} B}
    fromInput2 {{0} B}
    mappings "4 rgba.red 0 0 rgba.red 0 0 rgba.green 0 1 rgba.green 0 1 rgba.blue 0 2 rgba.alpha 0 3 rgba.blue 0 2 rgba.blue 0 2"
    name Shuffle1
    xpos -130
    ypos 1021
   }
push 0
   Switch {
    inputs 2
    which {{"shot_\[value count]==0?0:frame>=shot_\[value count]"}}
    name cSwitch_13
    xpos -130
    ypos 1078
    addUserKnob {20 User}
    addUserKnob {3 count}
    count {{parent.CTimeOffset.shotnmbr}}
   }
   Output {
    name Output1
    xpos -130
    ypos 1323
   }
   StickyNote {
    inputs 0
    name StickyNote1
    label "<-- handy to break concatonation?  "
    xpos -39
    ypos 193
   }
  end_group
push $N586971d0
  PostageStamp {
   name Stamp34
   help "Stamps by Adrian Pueyo and Alexey Kuchinski.\nUpdated May 18 2021"
   onCreate "if nuke.GUI:\n    try:\n        import stamps; stamps.wiredOnCreate()\n    except:\n        pass\n"
   knobChanged "import stamps; stamps.wiredKnobChanged()"
   autolabel "nuke.thisNode().knob(\"title\").value()"
   tile_color 0x1000001
   note_font "Bitstream Vera Sans"
   note_font_size 20
   xpos 3855
   ypos -688
   hide_input true
   addUserKnob {20 wired_tab l "Wired Stamp"}
   addUserKnob {26 identifier -STARTLINE +HIDDEN T wired}
   addUserKnob {3 lockCallbacks l "" +STARTLINE +HIDDEN}
   addUserKnob {6 toReconnect -STARTLINE +HIDDEN}
   addUserKnob {1 title l Title: t "Displayed name on the Node Graph for this Stamp and its Anchor.\nIMPORTANT: This is only for display purposes, and is different from the real/internal name of the Stamps."}
   title smoke_FRONT
   addUserKnob {26 prev_title l "" +STARTLINE +HIDDEN T smoke_FRONT}
   addUserKnob {26 tags l Tags: t "Tags of this stamp's Anchor, for information purpose only.\nClick \"show anchor\" to change them." T <i>2D</i>}
   addUserKnob {26 backdrops l Backdrops: t "Labels of backdrop nodes which contain this stamp's Anchor." T "<i><Left>before or after Flare</i>"}
   addUserKnob {26 line1 l "" +STARTLINE}
   addUserKnob {6 postageStamp_show l "postage stamp" t "Enable the postage stamp thumbnail in this node.\nYou're seeing this because the class of this node includes the postage_stamp knob." +STARTLINE}
   addUserKnob {26 anchor_label l Anchor: T " "}
   addUserKnob {22 show_anchor l " show anchor " t "Show the properties panel for this Stamp's Anchor." -STARTLINE T stamps.wiredShowAnchor()}
   addUserKnob {22 zoom_anchor l "zoom anchor" t "Navigate to this Stamp's Anchor on the Node Graph." -STARTLINE T stamps.wiredZoomAnchor()}
   addUserKnob {26 stamps_label l Stamps: T " "}
   addUserKnob {22 zoomNext l " zoom next " t "Navigate to this Stamp's next sibling on the Node Graph." -STARTLINE T stamps.wiredZoomNext()}
   addUserKnob {22 selectSimilar l " select similar " t "Select all similar Stamps to this one on the Node Graph." -STARTLINE T stamps.wiredSelectSimilar()}
   addUserKnob {26 space_1 l "" +STARTLINE T " "}
   addUserKnob {26 reconnect_label l Reconnect: t "Reconnect by the stored Anchor name." T " "}
   addUserKnob {22 reconnect_this l this t "Reconnect this Stamp to its Anchor, by its stored Anchor name." -STARTLINE T "n = nuke.thisNode()\ntry:\n    n.setInput(0,nuke.toNode(n.knob(\"anchor\").value()))\nexcept:\n    nuke.message(\"Unable to reconnect.\")\ntry:\n    import stamps\n    stamps.wiredGetStyle(n)\nexcept:\n    pass\n"}
   addUserKnob {22 reconnect_similar l similar t "Reconnect this Stamp and similar ones to their Anchor, by their stored anchor name." -STARTLINE T stamps.wiredReconnectSimilar()}
   addUserKnob {22 reconnect_all l all t "Reconnect all the Stamps to their Anchors, by their stored anchor names." -STARTLINE T stamps.wiredReconnectAll()}
   addUserKnob {26 space_2 l "" +STARTLINE T " "}
   addUserKnob {20 advanced_reconnection l "Advanced Reconnection" n 2}
   addUserKnob {26 reconnect_by_title_label l "<font color=gold>By Title:" t "Reconnect by searching for a matching title." T " "}
   addUserKnob {22 reconnect_by_title_this l this t "Look for an Anchor that shares this Stamp's title, and connect this Stamp to it.\nIMPORTANT: Use this carefully, and only when the normal reconnection doesn't work." -STARTLINE T stamps.wiredReconnectByTitle()}
   addUserKnob {22 reconnect_by_title_similar l similar t "Look for an Anchor that shares this Stamp's title, and connect this Stamp and similar ones to it.\nIMPORTANT: Use this carefully, and only when the normal reconnection doesn't work." -STARTLINE T stamps.wiredReconnectByTitleSimilar()}
   addUserKnob {22 reconnect_by_title_selected l selected t "For each Stamp selected, look for an Anchor that shares its title, and connect to it.\nIMPORTANT: Use this carefully, and only when the normal reconnection doesn't work." -STARTLINE T stamps.wiredReconnectByTitleSelected()}
   addUserKnob {26 reconnect_by_selection_label l "<font color=orangered>By Selection:" t "Force reconnect to a selected Anchor." T " "}
   addUserKnob {22 reconnect_by_selection_this l this t "Force reconnect this Stamp to a selected Anchor, whatever its name or title.\nIMPORTANT: Use this carefully, and only when the normal reconnection doesn't work." -STARTLINE T stamps.wiredReconnectBySelection()}
   addUserKnob {22 reconnect_by_selection_similar l similar t "Force reconnect this Stamp and similar ones to a selected Anchor, whatever its name or title.\nIMPORTANT: Use this carefully, and only when the normal reconnection doesn't work." -STARTLINE T stamps.wiredReconnectBySelectionSimilar()}
   addUserKnob {22 reconnect_by_selection_selected l selected t "Force reconnect all selected Stamps to an also selected Anchor, whatever its name or title.\nIMPORTANT: Use this carefully, and only when the normal reconnection doesn't work." -STARTLINE T stamps.wiredReconnectBySelectionSelected()}
   addUserKnob {1 anchor l Anchor}
   anchor Anchor_220a2be282
   addUserKnob {6 auto_reconnect_by_title l "<font color=#ED9977>&nbsp; auto-reconnect by title" t "When creating this stamp again (like on copy-paste), auto-reconnect it by title instead of doing it by the saved anchor's name, and auto-turn this off immediately.\nIMPORTANT: Should be off by default. Only use this for setting up templates." +STARTLINE}
   addUserKnob {26 line2 l "" +STARTLINE}
   addUserKnob {22 buttonHelp l Help -STARTLINE T stamps.showHelp()}
   addUserKnob {26 version l " " t "Stamps by Adrian Pueyo and Alexey Kuchinski.\nUpdated May 18 2021." -STARTLINE T "<a href=\"http://www.nukepedia.com/gizmos/other/stamps\" style=\"color:#666;text-decoration: none;\"><span style=\"color:#666\"> <big>Stamps v1.1</big></b></a>"}
  }
  Dot {
   name Dot23
   xpos 3889
   ypos -640
  }
push $N58d70c10
  PostageStamp {
   name Stamp35
   help "Stamps by Adrian Pueyo and Alexey Kuchinski.\nUpdated May 18 2021"
   onCreate "if nuke.GUI:\n    try:\n        import stamps; stamps.wiredOnCreate()\n    except:\n        pass\n"
   knobChanged "import stamps; stamps.wiredKnobChanged()"
   autolabel "nuke.thisNode().knob(\"title\").value()"
   tile_color 0x1000001
   note_font "Bitstream Vera Sans"
   note_font_size 20
   xpos 3980
   ypos -688
   hide_input true
   addUserKnob {20 wired_tab l "Wired Stamp"}
   addUserKnob {26 identifier -STARTLINE +HIDDEN T wired}
   addUserKnob {3 lockCallbacks l "" +STARTLINE +HIDDEN}
   addUserKnob {6 toReconnect -STARTLINE +HIDDEN}
   addUserKnob {1 title l Title: t "Displayed name on the Node Graph for this Stamp and its Anchor.\nIMPORTANT: This is only for display purposes, and is different from the real/internal name of the Stamps."}
   title smoke_TOP
   addUserKnob {26 prev_title l "" +STARTLINE +HIDDEN T smoke_TOP}
   addUserKnob {26 tags l Tags: t "Tags of this stamp's Anchor, for information purpose only.\nClick \"show anchor\" to change them." T <i>2D</i>}
   addUserKnob {26 backdrops l Backdrops: t "Labels of backdrop nodes which contain this stamp's Anchor." T "<i><Left>before or after Flare</i>"}
   addUserKnob {26 line1 l "" +STARTLINE}
   addUserKnob {6 postageStamp_show l "postage stamp" t "Enable the postage stamp thumbnail in this node.\nYou're seeing this because the class of this node includes the postage_stamp knob." +STARTLINE}
   addUserKnob {26 anchor_label l Anchor: T " "}
   addUserKnob {22 show_anchor l " show anchor " t "Show the properties panel for this Stamp's Anchor." -STARTLINE T stamps.wiredShowAnchor()}
   addUserKnob {22 zoom_anchor l "zoom anchor" t "Navigate to this Stamp's Anchor on the Node Graph." -STARTLINE T stamps.wiredZoomAnchor()}
   addUserKnob {26 stamps_label l Stamps: T " "}
   addUserKnob {22 zoomNext l " zoom next " t "Navigate to this Stamp's next sibling on the Node Graph." -STARTLINE T stamps.wiredZoomNext()}
   addUserKnob {22 selectSimilar l " select similar " t "Select all similar Stamps to this one on the Node Graph." -STARTLINE T stamps.wiredSelectSimilar()}
   addUserKnob {26 space_1 l "" +STARTLINE T " "}
   addUserKnob {26 reconnect_label l Reconnect: t "Reconnect by the stored Anchor name." T " "}
   addUserKnob {22 reconnect_this l this t "Reconnect this Stamp to its Anchor, by its stored Anchor name." -STARTLINE T "n = nuke.thisNode()\ntry:\n    n.setInput(0,nuke.toNode(n.knob(\"anchor\").value()))\nexcept:\n    nuke.message(\"Unable to reconnect.\")\ntry:\n    import stamps\n    stamps.wiredGetStyle(n)\nexcept:\n    pass\n"}
   addUserKnob {22 reconnect_similar l similar t "Reconnect this Stamp and similar ones to their Anchor, by their stored anchor name." -STARTLINE T stamps.wiredReconnectSimilar()}
   addUserKnob {22 reconnect_all l all t "Reconnect all the Stamps to their Anchors, by their stored anchor names." -STARTLINE T stamps.wiredReconnectAll()}
   addUserKnob {26 space_2 l "" +STARTLINE T " "}
   addUserKnob {20 advanced_reconnection l "Advanced Reconnection" n 2}
   addUserKnob {26 reconnect_by_title_label l "<font color=gold>By Title:" t "Reconnect by searching for a matching title." T " "}
   addUserKnob {22 reconnect_by_title_this l this t "Look for an Anchor that shares this Stamp's title, and connect this Stamp to it.\nIMPORTANT: Use this carefully, and only when the normal reconnection doesn't work." -STARTLINE T stamps.wiredReconnectByTitle()}
   addUserKnob {22 reconnect_by_title_similar l similar t "Look for an Anchor that shares this Stamp's title, and connect this Stamp and similar ones to it.\nIMPORTANT: Use this carefully, and only when the normal reconnection doesn't work." -STARTLINE T stamps.wiredReconnectByTitleSimilar()}
   addUserKnob {22 reconnect_by_title_selected l selected t "For each Stamp selected, look for an Anchor that shares its title, and connect to it.\nIMPORTANT: Use this carefully, and only when the normal reconnection doesn't work." -STARTLINE T stamps.wiredReconnectByTitleSelected()}
   addUserKnob {26 reconnect_by_selection_label l "<font color=orangered>By Selection:" t "Force reconnect to a selected Anchor." T " "}
   addUserKnob {22 reconnect_by_selection_this l this t "Force reconnect this Stamp to a selected Anchor, whatever its name or title.\nIMPORTANT: Use this carefully, and only when the normal reconnection doesn't work." -STARTLINE T stamps.wiredReconnectBySelection()}
   addUserKnob {22 reconnect_by_selection_similar l similar t "Force reconnect this Stamp and similar ones to a selected Anchor, whatever its name or title.\nIMPORTANT: Use this carefully, and only when the normal reconnection doesn't work." -STARTLINE T stamps.wiredReconnectBySelectionSimilar()}
   addUserKnob {22 reconnect_by_selection_selected l selected t "Force reconnect all selected Stamps to an also selected Anchor, whatever its name or title.\nIMPORTANT: Use this carefully, and only when the normal reconnection doesn't work." -STARTLINE T stamps.wiredReconnectBySelectionSelected()}
   addUserKnob {1 anchor l Anchor}
   anchor Anchor_25b668170c
   addUserKnob {6 auto_reconnect_by_title l "<font color=#ED9977>&nbsp; auto-reconnect by title" t "When creating this stamp again (like on copy-paste), auto-reconnect it by title instead of doing it by the saved anchor's name, and auto-turn this off immediately.\nIMPORTANT: Should be off by default. Only use this for setting up templates." +STARTLINE}
   addUserKnob {26 line2 l "" +STARTLINE}
   addUserKnob {22 buttonHelp l Help -STARTLINE T stamps.showHelp()}
   addUserKnob {26 version l " " t "Stamps by Adrian Pueyo and Alexey Kuchinski.\nUpdated May 18 2021." -STARTLINE T "<a href=\"http://www.nukepedia.com/gizmos/other/stamps\" style=\"color:#666;text-decoration: none;\"><span style=\"color:#666\"> <big>Stamps v1.1</big></b></a>"}
  }
push $N56244930
  PostageStamp {
   name Stamp36
   help "Stamps by Adrian Pueyo and Alexey Kuchinski.\nUpdated May 18 2021"
   onCreate "if nuke.GUI:\n    try:\n        import stamps; stamps.wiredOnCreate()\n    except:\n        pass\n"
   knobChanged "import stamps; stamps.wiredKnobChanged()"
   autolabel "nuke.thisNode().knob(\"title\").value()"
   tile_color 0x1000001
   note_font "Bitstream Vera Sans"
   note_font_size 20
   xpos 4098
   ypos -690
   hide_input true
   addUserKnob {20 wired_tab l "Wired Stamp"}
   addUserKnob {26 identifier -STARTLINE +HIDDEN T wired}
   addUserKnob {3 lockCallbacks l "" +STARTLINE +HIDDEN}
   addUserKnob {6 toReconnect -STARTLINE +HIDDEN}
   addUserKnob {1 title l Title: t "Displayed name on the Node Graph for this Stamp and its Anchor.\nIMPORTANT: This is only for display purposes, and is different from the real/internal name of the Stamps."}
   title smoke_SIDE
   addUserKnob {26 prev_title l "" +STARTLINE +HIDDEN T smoke_SIDE}
   addUserKnob {26 tags l Tags: t "Tags of this stamp's Anchor, for information purpose only.\nClick \"show anchor\" to change them." T <i>2D</i>}
   addUserKnob {26 backdrops l Backdrops: t "Labels of backdrop nodes which contain this stamp's Anchor." T "<i><Left>before or after Flare</i>"}
   addUserKnob {26 line1 l "" +STARTLINE}
   addUserKnob {6 postageStamp_show l "postage stamp" t "Enable the postage stamp thumbnail in this node.\nYou're seeing this because the class of this node includes the postage_stamp knob." +STARTLINE}
   addUserKnob {26 anchor_label l Anchor: T " "}
   addUserKnob {22 show_anchor l " show anchor " t "Show the properties panel for this Stamp's Anchor." -STARTLINE T stamps.wiredShowAnchor()}
   addUserKnob {22 zoom_anchor l "zoom anchor" t "Navigate to this Stamp's Anchor on the Node Graph." -STARTLINE T stamps.wiredZoomAnchor()}
   addUserKnob {26 stamps_label l Stamps: T " "}
   addUserKnob {22 zoomNext l " zoom next " t "Navigate to this Stamp's next sibling on the Node Graph." -STARTLINE T stamps.wiredZoomNext()}
   addUserKnob {22 selectSimilar l " select similar " t "Select all similar Stamps to this one on the Node Graph." -STARTLINE T stamps.wiredSelectSimilar()}
   addUserKnob {26 space_1 l "" +STARTLINE T " "}
   addUserKnob {26 reconnect_label l Reconnect: t "Reconnect by the stored Anchor name." T " "}
   addUserKnob {22 reconnect_this l this t "Reconnect this Stamp to its Anchor, by its stored Anchor name." -STARTLINE T "n = nuke.thisNode()\ntry:\n    n.setInput(0,nuke.toNode(n.knob(\"anchor\").value()))\nexcept:\n    nuke.message(\"Unable to reconnect.\")\ntry:\n    import stamps\n    stamps.wiredGetStyle(n)\nexcept:\n    pass\n"}
   addUserKnob {22 reconnect_similar l similar t "Reconnect this Stamp and similar ones to their Anchor, by their stored anchor name." -STARTLINE T stamps.wiredReconnectSimilar()}
   addUserKnob {22 reconnect_all l all t "Reconnect all the Stamps to their Anchors, by their stored anchor names." -STARTLINE T stamps.wiredReconnectAll()}
   addUserKnob {26 space_2 l "" +STARTLINE T " "}
   addUserKnob {20 advanced_reconnection l "Advanced Reconnection" n 2}
   addUserKnob {26 reconnect_by_title_label l "<font color=gold>By Title:" t "Reconnect by searching for a matching title." T " "}
   addUserKnob {22 reconnect_by_title_this l this t "Look for an Anchor that shares this Stamp's title, and connect this Stamp to it.\nIMPORTANT: Use this carefully, and only when the normal reconnection doesn't work." -STARTLINE T stamps.wiredReconnectByTitle()}
   addUserKnob {22 reconnect_by_title_similar l similar t "Look for an Anchor that shares this Stamp's title, and connect this Stamp and similar ones to it.\nIMPORTANT: Use this carefully, and only when the normal reconnection doesn't work." -STARTLINE T stamps.wiredReconnectByTitleSimilar()}
   addUserKnob {22 reconnect_by_title_selected l selected t "For each Stamp selected, look for an Anchor that shares its title, and connect to it.\nIMPORTANT: Use this carefully, and only when the normal reconnection doesn't work." -STARTLINE T stamps.wiredReconnectByTitleSelected()}
   addUserKnob {26 reconnect_by_selection_label l "<font color=orangered>By Selection:" t "Force reconnect to a selected Anchor." T " "}
   addUserKnob {22 reconnect_by_selection_this l this t "Force reconnect this Stamp to a selected Anchor, whatever its name or title.\nIMPORTANT: Use this carefully, and only when the normal reconnection doesn't work." -STARTLINE T stamps.wiredReconnectBySelection()}
   addUserKnob {22 reconnect_by_selection_similar l similar t "Force reconnect this Stamp and similar ones to a selected Anchor, whatever its name or title.\nIMPORTANT: Use this carefully, and only when the normal reconnection doesn't work." -STARTLINE T stamps.wiredReconnectBySelectionSimilar()}
   addUserKnob {22 reconnect_by_selection_selected l selected t "Force reconnect all selected Stamps to an also selected Anchor, whatever its name or title.\nIMPORTANT: Use this carefully, and only when the normal reconnection doesn't work." -STARTLINE T stamps.wiredReconnectBySelectionSelected()}
   addUserKnob {1 anchor l Anchor}
   anchor Anchor_232c9aab88
   addUserKnob {6 auto_reconnect_by_title l "<font color=#ED9977>&nbsp; auto-reconnect by title" t "When creating this stamp again (like on copy-paste), auto-reconnect it by title instead of doing it by the saved anchor's name, and auto-turn this off immediately.\nIMPORTANT: Should be off by default. Only use this for setting up templates." +STARTLINE}
   addUserKnob {26 line2 l "" +STARTLINE}
   addUserKnob {22 buttonHelp l Help -STARTLINE T stamps.showHelp()}
   addUserKnob {26 version l " " t "Stamps by Adrian Pueyo and Alexey Kuchinski.\nUpdated May 18 2021." -STARTLINE T "<a href=\"http://www.nukepedia.com/gizmos/other/stamps\" style=\"color:#666;text-decoration: none;\"><span style=\"color:#666\"> <big>Stamps v1.1</big></b></a>"}
  }
  Dot {
   name Dot24
   xpos 4132
   ypos -640
  }
  Group {
   inputs 3
   name gunshot12
   label "shot: \[value shotcount]\non frame: \[value shotstart]\n"
   xpos 3980
   ypos -613
   addUserKnob {20 User}
   addUserKnob {3 shotcount l shot}
   shotcount 12
   addUserKnob {3 shotstart l frame +INVISIBLE}
   shotstart {{"shotcount==0 ? 0 : shot\[value shotcount]-1" i}}
  }
   BackdropNode {
    inputs 0
    name BackdropNode19
    knobChanged "try:\n    listenedKnobs = \['text', 'position', 'name']\n    node = nuke.thisNode()\n    name = node.knob('name').value()\n    text = node.knob('text').value()\n    position = node.knob('position').value()\n    position = \"<\" + position + \">\"\n    label = node.knob('label').value()\n    \n    if nuke.thisKnob().name() in listenedKnobs:\n        if text == \"\":\n            if node.knob('position').value() == \"left\":\n                node.knob('label').setValue()\n            else:\n                node.knob('label').setValue(position + name)\n        else:\n            if node.knob('position').value() == \"left\":\n                node.knob('label').setValue(text)\n            else:\n                node.knob('label').setValue(position + text)\n                \n    elif nuke.thisKnob().name() == 'font_size':\n        fontSize = node.knob('font_size').value()\n        node.knob('note_font_size').setValue(fontSize)\nexcept:\n    pass"
    tile_color 0x232323ff
    label "<Left><h2> Gunshot"
    note_font_size 31.5
    xpos -693
    ypos -554
    bdwidth 876
    bdheight 1682
    addUserKnob {20 F_VFX l BackdropNode}
    addUserKnob {43 text l Text}
    text "<h2> Gunshot"
    addUserKnob {7 font_size l "Font Size" R 10 100}
    font_size 31.5
    addUserKnob {4 position l "" -STARTLINE M {Left Center}}
    addUserKnob {26 S01 l " " T " "}
    addUserKnob {22 grow l " <img src=\"F_scalep.png\">" -STARTLINE T "n=nuke.thisNode()\n\ndef grow(node=None,step=50):\n    try:\n        if not node:\n            n=nuke.selectedNode()\n        else:\n            n=node\n            n\['xpos'].setValue(n\['xpos'].getValue()-step)\n            n\['ypos'].setValue(n\['ypos'].getValue()-step)\n            n\['bdwidth'].setValue(n\['bdwidth'].getValue()+step*2)\n            n\['bdheight'].setValue(n\['bdheight'].getValue()+step*2)\n    except:\n        pass\ngrow(n,50)"}
    addUserKnob {22 shrink l " <img src=\"F_scalem.png\">" -STARTLINE T "n=nuke.thisNode()\n\ndef shrink(node=None,step=50):\n    try:\n        if not node:\n            n=nuke.selectedNode()\n        else:\n            n=node\n            n\['xpos'].setValue(n\['xpos'].getValue()+step)\n            n\['ypos'].setValue(n\['ypos'].getValue()+step)\n            n\['bdwidth'].setValue(n\['bdwidth'].getValue()-step*2)\n            n\['bdheight'].setValue(n\['bdheight'].getValue()-step*2)\n    except:\n        pass\nshrink(n,50)"}
    addUserKnob {22 colorandom l " <img src=\"ColorBars.png\">" -STARTLINE T "import colorsys, random\nn=nuke.thisNode()\nR,G,B= colorsys.hsv_to_rgb(random.random(),.1+random.random()*.15,.15+random.random()*.15)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ) )"}
    addUserKnob {22 darkgrey l "<font color=\"#232323\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.0, 0.0, 0.14]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 lightgrey l "<font color=\"#383838\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.0, 0.0, 0.22]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 red l "<font color=\"#8c3838\" size=6>■</font>" T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.0, 0.6, 0.55]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n" +STARTLINE}
    addUserKnob {22 orange l "<font color=\"#b28e59\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.1, 0.5, 0.7]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 yellow l "<font color=\"#ccc766\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.16, 0.5, 0.8]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 green l "<font color=\"#5d995b\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.33, 0.4, 0.6]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 cyan l "<font color=\"#72998f\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.46, 0.25, 0.6]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 blue l "<font color=\"#59687f\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.6, 0.3, 0.5]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 darkblue l "<font color=\"#63628c\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.67, 0.3, 0.55]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 magenta l "<font color=\"#927a99\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.8, 0.2, 0.6]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 pink l "<font color=\"#997a89\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.92, 0.2, 0.6]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {26 S02 l " " T " "}
    addUserKnob {26 Ftools l "" +STARTLINE T "<font color=\"#1C1C1C\"> v1.2 - Franklin VFX - 2018"}
   }
   BackdropNode {
    inputs 0
    name BackdropNode2
    knobChanged "try:\n    listenedKnobs = \['text', 'position', 'name']\n    node = nuke.thisNode()\n    name = node.knob('name').value()\n    text = node.knob('text').value()\n    position = node.knob('position').value()\n    position = \"<\" + position + \">\"\n    label = node.knob('label').value()\n    \n    if nuke.thisKnob().name() in listenedKnobs:\n        if text == \"\":\n            if node.knob('position').value() == \"left\":\n                node.knob('label').setValue()\n            else:\n                node.knob('label').setValue(position + name)\n        else:\n            if node.knob('position').value() == \"left\":\n                node.knob('label').setValue(text)\n            else:\n                node.knob('label').setValue(position + text)\n                \n    elif nuke.thisKnob().name() == 'font_size':\n        fontSize = node.knob('font_size').value()\n        node.knob('note_font_size').setValue(fontSize)\nexcept:\n    pass"
    tile_color 0x927a99ff
    note_font_size 50
    xpos -473
    ypos -221
    bdwidth 435
    bdheight 786
    z_order 1
    addUserKnob {20 F_VFX l BackdropNode}
    addUserKnob {43 text l Text}
    addUserKnob {7 font_size l "Font Size" R 10 100}
    font_size 50
    addUserKnob {4 position l "" -STARTLINE M {Left Center}}
    addUserKnob {26 S01 l " " T " "}
    addUserKnob {22 grow l " <img src=\"F_scalep.png\">" -STARTLINE T "n=nuke.thisNode()\n\ndef grow(node=None,step=50):\n    try:\n        if not node:\n            n=nuke.selectedNode()\n        else:\n            n=node\n            n\['xpos'].setValue(n\['xpos'].getValue()-step)\n            n\['ypos'].setValue(n\['ypos'].getValue()-step)\n            n\['bdwidth'].setValue(n\['bdwidth'].getValue()+step*2)\n            n\['bdheight'].setValue(n\['bdheight'].getValue()+step*2)\n    except:\n        pass\ngrow(n,50)"}
    addUserKnob {22 shrink l " <img src=\"F_scalem.png\">" -STARTLINE T "n=nuke.thisNode()\n\ndef shrink(node=None,step=50):\n    try:\n        if not node:\n            n=nuke.selectedNode()\n        else:\n            n=node\n            n\['xpos'].setValue(n\['xpos'].getValue()+step)\n            n\['ypos'].setValue(n\['ypos'].getValue()+step)\n            n\['bdwidth'].setValue(n\['bdwidth'].getValue()-step*2)\n            n\['bdheight'].setValue(n\['bdheight'].getValue()-step*2)\n    except:\n        pass\nshrink(n,50)"}
    addUserKnob {22 colorandom l " <img src=\"ColorBars.png\">" -STARTLINE T "import colorsys, random\nn=nuke.thisNode()\nR,G,B= colorsys.hsv_to_rgb(random.random(),.1+random.random()*.15,.15+random.random()*.15)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ) )"}
    addUserKnob {22 darkgrey l "<font color=\"#232323\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.0, 0.0, 0.14]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 lightgrey l "<font color=\"#383838\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.0, 0.0, 0.22]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 red l "<font color=\"#8c3838\" size=6>■</font>" T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.0, 0.6, 0.55]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n" +STARTLINE}
    addUserKnob {22 orange l "<font color=\"#b28e59\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.1, 0.5, 0.7]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 yellow l "<font color=\"#ccc766\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.16, 0.5, 0.8]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 green l "<font color=\"#5d995b\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.33, 0.4, 0.6]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 cyan l "<font color=\"#72998f\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.46, 0.25, 0.6]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 blue l "<font color=\"#59687f\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.6, 0.3, 0.5]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 darkblue l "<font color=\"#63628c\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.67, 0.3, 0.55]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 magenta l "<font color=\"#927a99\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.8, 0.2, 0.6]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 pink l "<font color=\"#997a89\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.92, 0.2, 0.6]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {26 S02 l " " T " "}
    addUserKnob {26 Ftools l "" +STARTLINE T "<font color=\"#1C1C1C\"> v1.2 - Franklin VFX - 2018"}
   }
   Constant {
    inputs 0
    channels rgb
    name Constant13
    xpos -643
    ypos 714
   }
   AdjBBox {
    numpixels {{size_bbox}}
    name AdjBBox13
    xpos -643
    ypos 849
   }
   Dot {
    name Dot78
    xpos -609
    ypos 987
   }
   Axis3 {
    inputs 0
    useMatrix true
    matrix {
        {{parent.cCard3D_1.matrix} {parent.cCard3D_1.matrix} {parent.cCard3D_1.matrix} {parent.cCard3D_1.matrix}}
        {{parent.cCard3D_1.matrix} {parent.cCard3D_1.matrix} {parent.cCard3D_1.matrix} {parent.cCard3D_1.matrix}}
        {{parent.cCard3D_1.matrix} {parent.cCard3D_1.matrix} {parent.cCard3D_1.matrix} {parent.cCard3D_1.matrix}}
        {{parent.cCard3D_1.matrix} {parent.cCard3D_1.matrix} {parent.cCard3D_1.matrix} {parent.cCard3D_1.matrix}}
      }
    name Axis14
    xpos -203
    ypos -90
   }
set N324da990 [stack 0]
push 0
   Input {
    inputs 0
    name top
    xpos -283
    ypos -1243
    number 1
   }
   TimeOffset {
    time_offset {{"shot_\[value shotnmbr]==0 ? 0 : shot_\[value shotnmbr]-1"}}
    time ""
    name CTimeOffset1
    label "shot: \[value shotnmbr]\non frame \[value time_offset]"
    xpos -283
    ypos -924
    addUserKnob {20 User}
    addUserKnob {3 shotnmbr l "shot "}
    shotnmbr {{shotcount}}
    addUserKnob {3 ref}
    ref {{time_offset+1}}
   }
   Group {
    name DecimalTimeOffset1
    tile_color 0xafa35dff
    label "random asset"
    note_font "Bitstream Vera Sans Bold"
    xpos -283
    ypos -841
    addUserKnob {20 User}
    addUserKnob {7 decimal l "time offset (decimal)"}
    decimal {{random(shotcount*seed)}}
    addUserKnob {26 ""}
    addUserKnob {26 _1 l "" +STARTLINE T "Chris Fryer | 2020\nupdated by Yorben Otto | 2024"}
   }
    Input {
     inputs 0
     name Input1
     xpos 426
     ypos -793
    }
    TimeOffset {
     time_offset {{(-floor(parent.decimal))*(DecimalTimeOffset1.decimal<0)}}
     time ""
     name TimeOffset1
     xpos 426
     ypos -675
    }
    Dot {
     name Dot6
     xpos 460
     ypos -635
    }
set N3251a1f0 [stack 0]
    Dot {
     name Dot5
     xpos 350
     ypos -635
    }
    Dot {
     name Dot7
     xpos 350
     ypos -365
    }
push $N3251a1f0
    Dot {
     name Dot1
     xpos 572
     ypos -635
    }
    TimeBlur {
     divisions 2
     shutter {{(parent.decimal-(floor(parent.decimal)))*2}}
     shutteroffset start
     shuttercustomoffset 0
     name TimeBlur1
     xpos 538
     ypos -558
    }
    Dot {
     name Dot2
     xpos 572
     ypos -490
    }
push $N3251a1f0
    TimeBlur {
     divisions 2
     shutter {{parent.decimal*2}}
     shutteroffset start
     shuttercustomoffset 0
     name TimeBlur8
     xpos 426
     ypos -556
    }
    Switch {
     inputs 2
     which {{parent.decimal<0}}
     name Switch1
     xpos 426
     ypos -494
    }
    Multiply {
     value {{parent.TimeBlur8.divisions}}
     name Multiply6
     xpos 426
     ypos -436
    }
    Merge2 {
     inputs 2
     operation from
     name Merge6
     xpos 426
     ypos -369
    }
set N3255c130 [stack 0]
    Output {
     name Output1
     xpos 426
     ypos -221
    }
push $N3255c130
push $N3255c130
    Viewer {
     inputs 2
     frame_range 1-100
     name Viewer1
     xpos 675
     ypos -246
    }
   end_group
   NoTimeBlur {
    name NoTimeBlur1
    xpos -283
    ypos -779
   }
   Transform {
    scale {{0.05+(0.05*(((parent.DecimalTimeOffset13.decimal-0.5)*2)*ScaleVariationSmoke))}}
    center {{root.width/2 x1015 2304} {root.height/2}}
    shutteroffset centred
    name Transform44
    xpos -283
    ypos -152
   }
   Card3D {
    inputs 3
    rot_order ZYX
    translate {0 0 0}
    rotate {90 0 0}
    shutteroffset centred
    name cCard3D25
    tile_color 0x7b1d1dff
    xpos -283
    ypos 11
    addUserKnob {20 User l parent}
    addUserKnob {22 python_button l "set parent" t "select parent node, and press this button to set the selected node as parent" +INVISIBLE T "n = nuke.selectedNode()\['name'].getValue()\nnuke.thisNode()\['string'].setValue(n)" +STARTLINE}
    addUserKnob {1 string l parent +INVISIBLE}
    string null
    addUserKnob {3 ref l "ref frame"}
    ref 1015
   }
   Transform {
    translate {{"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].translate.x(ref)\}]"} {"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].translate.y(ref)\}]"}}
    rotate {{"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].rotate-\[value parent_gun].rotate(ref)\}]"}}
    scale {{"\[if \{\[value parent_gun]==\"null\"\} \{return 1\} \{return 1+(\[value parent_gun].scale-\[value parent_gun].scale(ref))\}]"}}
    center {{"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].center.x(ref)\}]"} {"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].center.y(ref)\}]"}}
    name Transform_GUNMatchMove37
    xpos -283
    ypos 126
    addUserKnob {20 User l parent}
    addUserKnob {3 ref}
    ref {{parent.CTimeOffset.ref}}
   }
   Transform {
    translate {{"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].translate.x-\[value parent_env].translate.x(ref)\}]"} {"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].translate.y-\[value parent_env].translate.y(ref)\}]"}}
    rotate {{"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].rotate-\[value parent_env].rotate(ref)\}]"}}
    scale {{"\[if \{\[value parent_gun]==\"null\"\} \{return 1\} \{return 1+(\[value parent_env].scale-\[value parent_env].scale(ref))\}]"}}
    center {{"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].center.x(ref)\}]"} {"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].center.y(ref)\}]"}}
    motionblur 0.2
    shutter {{SmokeMB*0.5}}
    shutteroffset centred
    name Transform_ENVMatchMove37
    label "\n"
    xpos -283
    ypos 255
    addUserKnob {20 User l parent}
    addUserKnob {3 ref}
    ref {{parent.CTimeOffset.ref}}
   }
   Transform {
    translate {{"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return -((root.width/2)-(\[value parent_gun].center.x(1)+\[value parent_gun].translate.x(1)))\}]"} {"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return -((root.height/2)-(\[value parent_gun].center.y(1)+\[value parent_gun].translate.y(1)))\}]"}}
    name Transform_GUNMatchMove6
    label "alignment correction"
    xpos -283
    ypos 344
    addUserKnob {20 User l parent}
    addUserKnob {22 python_button l "set parent" t "select parent node, and press this button to set the selected node as parent" T "n = nuke.selectedNode()\['name'].getValue()\nnuke.thisNode()\['string'].setValue(n)" +STARTLINE}
    addUserKnob {1 string l parent}
    string Transform_MatchMove10
    addUserKnob {3 ref +INVISIBLE}
    ref {{parent.cCard3D_8.ref}}
   }
   Multiply {
    value {{math_matrix.result_y_smoke(parent.CTimeOffset.ref)}}
    name Angle_reveal_top1
    label TOP
    xpos -283
    ypos 403
   }
   Remove {
    operation keep
    channels rgb
    name Remove1
    xpos -283
    ypos 514
   }
push 0
   Switch {
    inputs 2
    which {{parent.Angle_reveal_top1.value>0.001}}
    name Switch1
    xpos -283
    ypos 660
   }
   Dot {
    name Dot82
    xpos -249
    ypos 705
   }
push 0
push $N324da990
push 0
   Input {
    inputs 0
    name front
    xpos -436
    ypos -1243
    number 2
   }
   TimeOffset {
    time_offset {{"shot_\[value shotnmbr]==0 ? 0 : shot_\[value shotnmbr]-1"}}
    time ""
    name CTimeOffset2
    label "shot: \[value shotnmbr]\non frame \[value time_offset]"
    xpos -436
    ypos -925
    addUserKnob {20 User}
    addUserKnob {3 shotnmbr l "shot "}
    shotnmbr {{shotcount}}
    addUserKnob {3 ref}
    ref {{time_offset+1}}
   }
   Group {
    name DecimalTimeOffset2
    tile_color 0xafa35dff
    label "random asset"
    note_font "Bitstream Vera Sans Bold"
    xpos -436
    ypos -842
    addUserKnob {20 User}
    addUserKnob {7 decimal l "time offset (decimal)"}
    decimal {{random(shotcount*seed)}}
    addUserKnob {26 ""}
    addUserKnob {26 _1 l "" +STARTLINE T "Chris Fryer | 2020\nupdated by Yorben Otto | 2024"}
   }
    Input {
     inputs 0
     name Input1
     xpos 426
     ypos -793
    }
    TimeOffset {
     time_offset {{(-floor(parent.decimal))*(DecimalTimeOffset2.decimal<0)}}
     time ""
     name TimeOffset1
     xpos 426
     ypos -675
    }
    Dot {
     name Dot6
     xpos 460
     ypos -635
    }
set Nc8dfcf20 [stack 0]
    Dot {
     name Dot5
     xpos 350
     ypos -635
    }
    Dot {
     name Dot7
     xpos 350
     ypos -365
    }
push $Nc8dfcf20
    Dot {
     name Dot1
     xpos 572
     ypos -635
    }
    TimeBlur {
     divisions 2
     shutter {{(parent.decimal-(floor(parent.decimal)))*2}}
     shutteroffset start
     shuttercustomoffset 0
     name TimeBlur1
     xpos 538
     ypos -558
    }
    Dot {
     name Dot2
     xpos 572
     ypos -490
    }
push $Nc8dfcf20
    TimeBlur {
     divisions 2
     shutter {{parent.decimal*2}}
     shutteroffset start
     shuttercustomoffset 0
     name TimeBlur8
     xpos 426
     ypos -556
    }
    Switch {
     inputs 2
     which {{parent.decimal<0}}
     name Switch1
     xpos 426
     ypos -494
    }
    Multiply {
     value {{parent.TimeBlur8.divisions}}
     name Multiply6
     xpos 426
     ypos -436
    }
    Merge2 {
     inputs 2
     operation from
     name Merge6
     xpos 426
     ypos -369
    }
set Nc8e3ee60 [stack 0]
    Output {
     name Output1
     xpos 426
     ypos -221
    }
push $Nc8e3ee60
push $Nc8e3ee60
    Viewer {
     inputs 2
     frame_range 1-100
     name Viewer1
     xpos 675
     ypos -246
    }
   end_group
   NoTimeBlur {
    name NoTimeBlur5
    xpos -436
    ypos -780
   }
   Transform {
    scale {{0.05+(0.05*(((parent.DecimalTimeOffset13.decimal-0.5)*2)*ScaleVariationSmoke))}}
    center {{root.width/2 x1015 2304} {root.height/2}}
    shutteroffset centred
    name Transform45
    xpos -436
    ypos -151
   }
   Card3D {
    inputs 3
    rot_order ZYX
    translate {0 0 0}
    rotate {0 90 0}
    shutteroffset centred
    name cCard3D26
    tile_color 0x7b1d1dff
    xpos -436
    ypos 15
    addUserKnob {20 User l parent}
    addUserKnob {22 python_button l "set parent" t "select parent node, and press this button to set the selected node as parent" +INVISIBLE T "n = nuke.selectedNode()\['name'].getValue()\nnuke.thisNode()\['string'].setValue(n)" +STARTLINE}
    addUserKnob {1 string l parent +INVISIBLE}
    string null
    addUserKnob {3 ref l "ref frame"}
    ref 1015
   }
   Transform {
    translate {{"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].translate.x(ref)\}]"} {"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].translate.y(ref)\}]"}}
    rotate {{"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].rotate-\[value parent_gun].rotate(ref)\}]"}}
    scale {{"\[if \{\[value parent_gun]==\"null\"\} \{return 1\} \{return 1+(\[value parent_gun].scale-\[value parent_gun].scale(ref))\}]"}}
    center {{"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].center.x(ref)\}]"} {"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].center.y(ref)\}]"}}
    name Transform_GUNMatchMove38
    label "\n"
    xpos -436
    ypos 124
    addUserKnob {20 User l parent}
    addUserKnob {3 ref}
    ref {{parent.CTimeOffset.ref}}
   }
   Transform {
    translate {{"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].translate.x-\[value parent_env].translate.x(ref)\}]"} {"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].translate.y-\[value parent_env].translate.y(ref)\}]"}}
    rotate {{"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].rotate-\[value parent_env].rotate(ref)\}]"}}
    scale {{"\[if \{\[value parent_gun]==\"null\"\} \{return 1\} \{return 1+(\[value parent_env].scale-\[value parent_env].scale(ref))\}]"}}
    center {{"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].center.x(ref)\}]"} {"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].center.y(ref)\}]"}}
    motionblur 0.2
    shutter {{SmokeMB*0.5}}
    shutteroffset centred
    name Transform_ENVMatchMove38
    xpos -436
    ypos 254
    addUserKnob {20 User l parent}
    addUserKnob {3 ref}
    ref {{parent.CTimeOffset.ref}}
   }
   Transform {
    translate {{"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return -((root.width/2)-(\[value parent_gun].center.x(1)+\[value parent_gun].translate.x(1)))\}]"} {"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return -((root.height/2)-(\[value parent_gun].center.y(1)+\[value parent_gun].translate.y(1)))\}]"}}
    name Transform_GUNMatchMove7
    label "alignment correction"
    xpos -436
    ypos 343
    addUserKnob {20 User l parent}
    addUserKnob {22 python_button l "set parent" t "select parent node, and press this button to set the selected node as parent" T "n = nuke.selectedNode()\['name'].getValue()\nnuke.thisNode()\['string'].setValue(n)" +STARTLINE}
    addUserKnob {1 string l parent}
    string Transform_MatchMove10
    addUserKnob {3 ref +INVISIBLE}
    ref {{parent.cCard3D_8.ref}}
   }
   Multiply {
    value {{math_matrix.result_x_smoke(parent.CTimeOffset.ref)}}
    name Angle_reveal_front1
    label FRONT
    xpos -436
    ypos 401
   }
   Remove {
    operation keep
    channels rgb
    name Remove2
    xpos -436
    ypos 511
   }
push 0
   Switch {
    inputs 2
    which {{parent.Angle_reveal_front1.value>0.001}}
    name Switch2
    xpos -436
    ypos 660
   }
   Dot {
    name Dot83
    xpos -402
    ypos 735
   }
   Input {
    inputs 0
    name side
    xpos -130
    ypos -1242
   }
   TimeOffset {
    time_offset {{"shot_\[value shotnmbr]==0 ? 0 : shot_\[value shotnmbr]-1"}}
    time ""
    name CTimeOffset
    label "shot: \[value shotnmbr]\non frame \[value time_offset]"
    xpos -130
    ypos -927
    addUserKnob {20 User}
    addUserKnob {3 shotnmbr l "shot "}
    shotnmbr {{shotcount}}
    addUserKnob {3 ref}
    ref {{time_offset+1}}
   }
   Group {
    name DecimalTimeOffset13
    tile_color 0xafa35dff
    label "random asset"
    note_font "Bitstream Vera Sans Bold"
    xpos -130
    ypos -844
    addUserKnob {20 User}
    addUserKnob {7 decimal l "time offset (decimal)"}
    decimal {{random(shotcount*seed)}}
    addUserKnob {26 ""}
    addUserKnob {26 _1 l "" +STARTLINE T "Chris Fryer | 2020\nupdated by Yorben Otto | 2024"}
   }
    Input {
     inputs 0
     name Input1
     xpos 426
     ypos -793
    }
    TimeOffset {
     time_offset {{(-floor(parent.decimal))*(DecimalTimeOffset13.decimal<0)}}
     time ""
     name TimeOffset1
     xpos 426
     ypos -675
    }
    Dot {
     name Dot6
     xpos 460
     ypos -635
    }
set N4fbcdda0 [stack 0]
    Dot {
     name Dot5
     xpos 350
     ypos -635
    }
    Dot {
     name Dot7
     xpos 350
     ypos -365
    }
push $N4fbcdda0
    Dot {
     name Dot1
     xpos 572
     ypos -635
    }
    TimeBlur {
     divisions 2
     shutter {{(parent.decimal-(floor(parent.decimal)))*2}}
     shutteroffset start
     shuttercustomoffset 0
     name TimeBlur1
     xpos 538
     ypos -558
    }
    Dot {
     name Dot2
     xpos 572
     ypos -490
    }
push $N4fbcdda0
    TimeBlur {
     divisions 2
     shutter {{parent.decimal*2}}
     shutteroffset start
     shuttercustomoffset 0
     name TimeBlur8
     xpos 426
     ypos -556
    }
    Switch {
     inputs 2
     which {{parent.decimal<0}}
     name Switch1
     xpos 426
     ypos -494
    }
    Multiply {
     value {{parent.TimeBlur8.divisions}}
     name Multiply6
     xpos 426
     ypos -436
    }
    Merge2 {
     inputs 2
     operation from
     name Merge6
     xpos 426
     ypos -369
    }
set N4d41fbd0 [stack 0]
    Output {
     name Output1
     xpos 426
     ypos -221
    }
push $N4d41fbd0
push $N4d41fbd0
    Viewer {
     inputs 2
     frame_range 1-100
     name Viewer1
     xpos 675
     ypos -246
    }
   end_group
   NoTimeBlur {
    name NoTimeBlur13
    xpos -130
    ypos -782
   }
   Transform {
    scale {{0.05+(0.05*(((parent.DecimalTimeOffset13.decimal-0.5)*2)*ScaleVariationSmoke))}}
    center {{root.width/2 x1015 2304} {root.height/2}}
    shutteroffset centred
    name Transform46
    xpos -130
    ypos -155
   }
   Card3D {
    translate {{"\[if \{\[exists  parent.parent.parent.input0]\} \{return \[value \[topnode parent.parent.parent.input0].name].translate.x(ref)\} \{return 0\}]"} {"\[if \{\[exists  parent.parent.parent.input0]\} \{return \[value \[topnode parent.parent.parent.input0].name].translate.y(ref)\} \{return 0\}]"} {"\[if \{\[exists  parent.parent.parent.input0]\} \{return \[value \[topnode parent.parent.parent.input0].name].translate.z(ref)\} \{return -1\}]"}}
    rotate {{"\[if \{\[exists  parent.parent.parent.input0]\} \{return \[value \[topnode parent.parent.parent.input0].name].rotate.x(ref)\} \{return 0\}]"} {"\[if \{\[exists  parent.parent.parent.input0]\} \{return \[value \[topnode parent.parent.parent.input0].name].rotate.y(ref)\} \{return 0\}]"} {"\[if \{\[exists  parent.parent.parent.input0]\} \{return \[value \[topnode parent.parent.parent.input0].name].rotate.z(ref)\} \{return 0\}]"}}
    scaling {{"\[if \{\[exists  parent.parent.parent.input0]\} \{return \[value \[topnode parent.parent.parent.input0].name].scaling.x(ref)\} \{return 1\}]"} {"\[if \{\[exists  parent.parent.parent.input0]\} \{return \[value \[topnode parent.parent.parent.input0].name].scaling.y(ref)\} \{return 1\}]"} {"\[if \{\[exists  parent.parent.parent.input0]\} \{return \[value \[topnode parent.parent.parent.input0].name].scaling.z(ref)\} \{return 1\}]"}}
    uniform_scale {{"\[if \{\[exists  parent.parent.parent.input0]\} \{return (\[value \[topnode parent.parent.parent.input0].name].uniform_scale(ref)*25)\} \{return 25\}]"}}
    shutteroffset centred
    name cCard3D_1
    tile_color 0x7b1d1dff
    label "ref frame: \[value ref]"
    xpos -130
    ypos 2
    addUserKnob {20 User l parent}
    addUserKnob {22 python_button l "set parent" t "select parent node, and press this button to set the selected node as parent" +INVISIBLE T "n = nuke.selectedNode()\['name'].getValue()\nnuke.thisNode()\['string'].setValue(n)" +STARTLINE}
    addUserKnob {1 string l parent +INVISIBLE}
    string null
    addUserKnob {3 id l "id number"}
    id {{parent.CTimeOffset.shotnmbr}}
    addUserKnob {3 ref l "ref frame"}
    ref {{parent.CTimeOffset.ref}}
   }
   Transform {
    translate {{"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].translate.x(ref)\}]"} {"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].translate.y(ref)\}]"}}
    rotate {{"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].rotate-\[value parent_gun].rotate(ref)\}]"}}
    scale {{"\[if \{\[value parent_gun]==\"null\"\} \{return 1\} \{return 1+(\[value parent_gun].scale-\[value parent_gun].scale(ref))\}]"}}
    center {{"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].center.x(ref)\}]"} {"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].center.y(ref)\}]"}}
    name Transform_GUNMatchMove39
    label "\n"
    xpos -130
    ypos 124
    addUserKnob {20 User l parent}
    addUserKnob {3 ref}
    ref {{parent.CTimeOffset.ref}}
   }
   Transform {
    translate {{"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].translate.x-\[value parent_env].translate.x(ref)\}]"} {"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].translate.y-\[value parent_env].translate.y(ref)\}]"}}
    rotate {{"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].rotate-\[value parent_env].rotate(ref)\}]"}}
    scale {{"\[if \{\[value parent_gun]==\"null\"\} \{return 1\} \{return 1+(\[value parent_env].scale-\[value parent_env].scale(ref))\}]"}}
    center {{"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].center.x(ref)\}]"} {"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].center.y(ref)\}]"}}
    motionblur 0.2
    shutter {{SmokeMB*0.5}}
    shutteroffset centred
    name Transform_ENVMatchMove39
    xpos -130
    ypos 258
    addUserKnob {20 User l parent}
    addUserKnob {3 ref}
    ref {{parent.CTimeOffset.ref}}
   }
   Transform {
    translate {{"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return -((root.width/2)-(\[value parent_gun].center.x(1)+\[value parent_gun].translate.x(1)))\}]"} {"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return -((root.height/2)-(\[value parent_gun].center.y(1)+\[value parent_gun].translate.y(1)))\}]"}}
    name Transform_GUNMatchMove5
    label "alignment correction"
    xpos -130
    ypos 340
    addUserKnob {20 User l parent}
    addUserKnob {22 python_button l "set parent" t "select parent node, and press this button to set the selected node as parent" T "n = nuke.selectedNode()\['name'].getValue()\nnuke.thisNode()\['string'].setValue(n)" +STARTLINE}
    addUserKnob {1 string l parent}
    string Transform_MatchMove10
    addUserKnob {3 ref +INVISIBLE}
    ref {{parent.cCard3D_8.ref}}
   }
   Multiply {
    value {{math_matrix.result_z_smoke(parent.CTimeOffset.ref)}}
    name Angle_reveal_side1
    label SIDE
    xpos -130
    ypos 404
   }
   Remove {
    operation keep
    channels rgb
    name Remove39
    xpos -130
    ypos 514
   }
push 0
   Switch {
    inputs 2
    which {{parent.Angle_reveal_side1.value>0.001}}
    name Switch3
    xpos -130
    ypos 658
   }
   Merge2 {
    inputs 3+1
    operation max
    Achannels rgb
    Bchannels rgb
    output rgb
    name Merge28
    xpos -130
    ypos 731
   }
   Merge2 {
    inputs 2
    operation plus
    bbox intersection
    Achannels rgb
    Bchannels rgb
    output rgb
    name Merge29
    xpos -130
    ypos 983
   }
   Shuffle2 {
    fromInput1 {{0} B}
    fromInput2 {{0} B}
    mappings "4 rgba.red 0 0 rgba.red 0 0 rgba.green 0 1 rgba.green 0 1 rgba.blue 0 2 rgba.alpha 0 3 rgba.blue 0 2 rgba.blue 0 2"
    name Shuffle1
    xpos -130
    ypos 1021
   }
push 0
   Switch {
    inputs 2
    which {{"shot_\[value count]==0?0:frame>=shot_\[value count]"}}
    name cSwitch_13
    xpos -130
    ypos 1078
    addUserKnob {20 User}
    addUserKnob {3 count}
    count {{parent.CTimeOffset.shotnmbr}}
   }
   Output {
    name Output1
    xpos -130
    ypos 1323
   }
   StickyNote {
    inputs 0
    name StickyNote1
    label "<-- handy to break concatonation?  "
    xpos -39
    ypos 193
   }
  end_group
push $N586971d0
  PostageStamp {
   name Stamp37
   help "Stamps by Adrian Pueyo and Alexey Kuchinski.\nUpdated May 18 2021"
   onCreate "if nuke.GUI:\n    try:\n        import stamps; stamps.wiredOnCreate()\n    except:\n        pass\n"
   knobChanged "import stamps; stamps.wiredKnobChanged()"
   autolabel "nuke.thisNode().knob(\"title\").value()"
   tile_color 0x1000001
   note_font "Bitstream Vera Sans"
   note_font_size 20
   xpos 4229
   ypos -691
   hide_input true
   addUserKnob {20 wired_tab l "Wired Stamp"}
   addUserKnob {26 identifier -STARTLINE +HIDDEN T wired}
   addUserKnob {3 lockCallbacks l "" +STARTLINE +HIDDEN}
   addUserKnob {6 toReconnect -STARTLINE +HIDDEN}
   addUserKnob {1 title l Title: t "Displayed name on the Node Graph for this Stamp and its Anchor.\nIMPORTANT: This is only for display purposes, and is different from the real/internal name of the Stamps."}
   title smoke_FRONT
   addUserKnob {26 prev_title l "" +STARTLINE +HIDDEN T smoke_FRONT}
   addUserKnob {26 tags l Tags: t "Tags of this stamp's Anchor, for information purpose only.\nClick \"show anchor\" to change them." T <i>2D</i>}
   addUserKnob {26 backdrops l Backdrops: t "Labels of backdrop nodes which contain this stamp's Anchor." T "<i><Left>before or after Flare</i>"}
   addUserKnob {26 line1 l "" +STARTLINE}
   addUserKnob {6 postageStamp_show l "postage stamp" t "Enable the postage stamp thumbnail in this node.\nYou're seeing this because the class of this node includes the postage_stamp knob." +STARTLINE}
   addUserKnob {26 anchor_label l Anchor: T " "}
   addUserKnob {22 show_anchor l " show anchor " t "Show the properties panel for this Stamp's Anchor." -STARTLINE T stamps.wiredShowAnchor()}
   addUserKnob {22 zoom_anchor l "zoom anchor" t "Navigate to this Stamp's Anchor on the Node Graph." -STARTLINE T stamps.wiredZoomAnchor()}
   addUserKnob {26 stamps_label l Stamps: T " "}
   addUserKnob {22 zoomNext l " zoom next " t "Navigate to this Stamp's next sibling on the Node Graph." -STARTLINE T stamps.wiredZoomNext()}
   addUserKnob {22 selectSimilar l " select similar " t "Select all similar Stamps to this one on the Node Graph." -STARTLINE T stamps.wiredSelectSimilar()}
   addUserKnob {26 space_1 l "" +STARTLINE T " "}
   addUserKnob {26 reconnect_label l Reconnect: t "Reconnect by the stored Anchor name." T " "}
   addUserKnob {22 reconnect_this l this t "Reconnect this Stamp to its Anchor, by its stored Anchor name." -STARTLINE T "n = nuke.thisNode()\ntry:\n    n.setInput(0,nuke.toNode(n.knob(\"anchor\").value()))\nexcept:\n    nuke.message(\"Unable to reconnect.\")\ntry:\n    import stamps\n    stamps.wiredGetStyle(n)\nexcept:\n    pass\n"}
   addUserKnob {22 reconnect_similar l similar t "Reconnect this Stamp and similar ones to their Anchor, by their stored anchor name." -STARTLINE T stamps.wiredReconnectSimilar()}
   addUserKnob {22 reconnect_all l all t "Reconnect all the Stamps to their Anchors, by their stored anchor names." -STARTLINE T stamps.wiredReconnectAll()}
   addUserKnob {26 space_2 l "" +STARTLINE T " "}
   addUserKnob {20 advanced_reconnection l "Advanced Reconnection" n 2}
   addUserKnob {26 reconnect_by_title_label l "<font color=gold>By Title:" t "Reconnect by searching for a matching title." T " "}
   addUserKnob {22 reconnect_by_title_this l this t "Look for an Anchor that shares this Stamp's title, and connect this Stamp to it.\nIMPORTANT: Use this carefully, and only when the normal reconnection doesn't work." -STARTLINE T stamps.wiredReconnectByTitle()}
   addUserKnob {22 reconnect_by_title_similar l similar t "Look for an Anchor that shares this Stamp's title, and connect this Stamp and similar ones to it.\nIMPORTANT: Use this carefully, and only when the normal reconnection doesn't work." -STARTLINE T stamps.wiredReconnectByTitleSimilar()}
   addUserKnob {22 reconnect_by_title_selected l selected t "For each Stamp selected, look for an Anchor that shares its title, and connect to it.\nIMPORTANT: Use this carefully, and only when the normal reconnection doesn't work." -STARTLINE T stamps.wiredReconnectByTitleSelected()}
   addUserKnob {26 reconnect_by_selection_label l "<font color=orangered>By Selection:" t "Force reconnect to a selected Anchor." T " "}
   addUserKnob {22 reconnect_by_selection_this l this t "Force reconnect this Stamp to a selected Anchor, whatever its name or title.\nIMPORTANT: Use this carefully, and only when the normal reconnection doesn't work." -STARTLINE T stamps.wiredReconnectBySelection()}
   addUserKnob {22 reconnect_by_selection_similar l similar t "Force reconnect this Stamp and similar ones to a selected Anchor, whatever its name or title.\nIMPORTANT: Use this carefully, and only when the normal reconnection doesn't work." -STARTLINE T stamps.wiredReconnectBySelectionSimilar()}
   addUserKnob {22 reconnect_by_selection_selected l selected t "Force reconnect all selected Stamps to an also selected Anchor, whatever its name or title.\nIMPORTANT: Use this carefully, and only when the normal reconnection doesn't work." -STARTLINE T stamps.wiredReconnectBySelectionSelected()}
   addUserKnob {1 anchor l Anchor}
   anchor Anchor_220a2be282
   addUserKnob {6 auto_reconnect_by_title l "<font color=#ED9977>&nbsp; auto-reconnect by title" t "When creating this stamp again (like on copy-paste), auto-reconnect it by title instead of doing it by the saved anchor's name, and auto-turn this off immediately.\nIMPORTANT: Should be off by default. Only use this for setting up templates." +STARTLINE}
   addUserKnob {26 line2 l "" +STARTLINE}
   addUserKnob {22 buttonHelp l Help -STARTLINE T stamps.showHelp()}
   addUserKnob {26 version l " " t "Stamps by Adrian Pueyo and Alexey Kuchinski.\nUpdated May 18 2021." -STARTLINE T "<a href=\"http://www.nukepedia.com/gizmos/other/stamps\" style=\"color:#666;text-decoration: none;\"><span style=\"color:#666\"> <big>Stamps v1.1</big></b></a>"}
  }
  Dot {
   name Dot25
   xpos 4263
   ypos -643
  }
push $N58d70c10
  PostageStamp {
   name Stamp38
   help "Stamps by Adrian Pueyo and Alexey Kuchinski.\nUpdated May 18 2021"
   onCreate "if nuke.GUI:\n    try:\n        import stamps; stamps.wiredOnCreate()\n    except:\n        pass\n"
   knobChanged "import stamps; stamps.wiredKnobChanged()"
   autolabel "nuke.thisNode().knob(\"title\").value()"
   tile_color 0x1000001
   note_font "Bitstream Vera Sans"
   note_font_size 20
   xpos 4354
   ypos -691
   hide_input true
   addUserKnob {20 wired_tab l "Wired Stamp"}
   addUserKnob {26 identifier -STARTLINE +HIDDEN T wired}
   addUserKnob {3 lockCallbacks l "" +STARTLINE +HIDDEN}
   addUserKnob {6 toReconnect -STARTLINE +HIDDEN}
   addUserKnob {1 title l Title: t "Displayed name on the Node Graph for this Stamp and its Anchor.\nIMPORTANT: This is only for display purposes, and is different from the real/internal name of the Stamps."}
   title smoke_TOP
   addUserKnob {26 prev_title l "" +STARTLINE +HIDDEN T smoke_TOP}
   addUserKnob {26 tags l Tags: t "Tags of this stamp's Anchor, for information purpose only.\nClick \"show anchor\" to change them." T <i>2D</i>}
   addUserKnob {26 backdrops l Backdrops: t "Labels of backdrop nodes which contain this stamp's Anchor." T "<i><Left>before or after Flare</i>"}
   addUserKnob {26 line1 l "" +STARTLINE}
   addUserKnob {6 postageStamp_show l "postage stamp" t "Enable the postage stamp thumbnail in this node.\nYou're seeing this because the class of this node includes the postage_stamp knob." +STARTLINE}
   addUserKnob {26 anchor_label l Anchor: T " "}
   addUserKnob {22 show_anchor l " show anchor " t "Show the properties panel for this Stamp's Anchor." -STARTLINE T stamps.wiredShowAnchor()}
   addUserKnob {22 zoom_anchor l "zoom anchor" t "Navigate to this Stamp's Anchor on the Node Graph." -STARTLINE T stamps.wiredZoomAnchor()}
   addUserKnob {26 stamps_label l Stamps: T " "}
   addUserKnob {22 zoomNext l " zoom next " t "Navigate to this Stamp's next sibling on the Node Graph." -STARTLINE T stamps.wiredZoomNext()}
   addUserKnob {22 selectSimilar l " select similar " t "Select all similar Stamps to this one on the Node Graph." -STARTLINE T stamps.wiredSelectSimilar()}
   addUserKnob {26 space_1 l "" +STARTLINE T " "}
   addUserKnob {26 reconnect_label l Reconnect: t "Reconnect by the stored Anchor name." T " "}
   addUserKnob {22 reconnect_this l this t "Reconnect this Stamp to its Anchor, by its stored Anchor name." -STARTLINE T "n = nuke.thisNode()\ntry:\n    n.setInput(0,nuke.toNode(n.knob(\"anchor\").value()))\nexcept:\n    nuke.message(\"Unable to reconnect.\")\ntry:\n    import stamps\n    stamps.wiredGetStyle(n)\nexcept:\n    pass\n"}
   addUserKnob {22 reconnect_similar l similar t "Reconnect this Stamp and similar ones to their Anchor, by their stored anchor name." -STARTLINE T stamps.wiredReconnectSimilar()}
   addUserKnob {22 reconnect_all l all t "Reconnect all the Stamps to their Anchors, by their stored anchor names." -STARTLINE T stamps.wiredReconnectAll()}
   addUserKnob {26 space_2 l "" +STARTLINE T " "}
   addUserKnob {20 advanced_reconnection l "Advanced Reconnection" n 2}
   addUserKnob {26 reconnect_by_title_label l "<font color=gold>By Title:" t "Reconnect by searching for a matching title." T " "}
   addUserKnob {22 reconnect_by_title_this l this t "Look for an Anchor that shares this Stamp's title, and connect this Stamp to it.\nIMPORTANT: Use this carefully, and only when the normal reconnection doesn't work." -STARTLINE T stamps.wiredReconnectByTitle()}
   addUserKnob {22 reconnect_by_title_similar l similar t "Look for an Anchor that shares this Stamp's title, and connect this Stamp and similar ones to it.\nIMPORTANT: Use this carefully, and only when the normal reconnection doesn't work." -STARTLINE T stamps.wiredReconnectByTitleSimilar()}
   addUserKnob {22 reconnect_by_title_selected l selected t "For each Stamp selected, look for an Anchor that shares its title, and connect to it.\nIMPORTANT: Use this carefully, and only when the normal reconnection doesn't work." -STARTLINE T stamps.wiredReconnectByTitleSelected()}
   addUserKnob {26 reconnect_by_selection_label l "<font color=orangered>By Selection:" t "Force reconnect to a selected Anchor." T " "}
   addUserKnob {22 reconnect_by_selection_this l this t "Force reconnect this Stamp to a selected Anchor, whatever its name or title.\nIMPORTANT: Use this carefully, and only when the normal reconnection doesn't work." -STARTLINE T stamps.wiredReconnectBySelection()}
   addUserKnob {22 reconnect_by_selection_similar l similar t "Force reconnect this Stamp and similar ones to a selected Anchor, whatever its name or title.\nIMPORTANT: Use this carefully, and only when the normal reconnection doesn't work." -STARTLINE T stamps.wiredReconnectBySelectionSimilar()}
   addUserKnob {22 reconnect_by_selection_selected l selected t "Force reconnect all selected Stamps to an also selected Anchor, whatever its name or title.\nIMPORTANT: Use this carefully, and only when the normal reconnection doesn't work." -STARTLINE T stamps.wiredReconnectBySelectionSelected()}
   addUserKnob {1 anchor l Anchor}
   anchor Anchor_25b668170c
   addUserKnob {6 auto_reconnect_by_title l "<font color=#ED9977>&nbsp; auto-reconnect by title" t "When creating this stamp again (like on copy-paste), auto-reconnect it by title instead of doing it by the saved anchor's name, and auto-turn this off immediately.\nIMPORTANT: Should be off by default. Only use this for setting up templates." +STARTLINE}
   addUserKnob {26 line2 l "" +STARTLINE}
   addUserKnob {22 buttonHelp l Help -STARTLINE T stamps.showHelp()}
   addUserKnob {26 version l " " t "Stamps by Adrian Pueyo and Alexey Kuchinski.\nUpdated May 18 2021." -STARTLINE T "<a href=\"http://www.nukepedia.com/gizmos/other/stamps\" style=\"color:#666;text-decoration: none;\"><span style=\"color:#666\"> <big>Stamps v1.1</big></b></a>"}
  }
push $N56244930
  PostageStamp {
   name Stamp39
   help "Stamps by Adrian Pueyo and Alexey Kuchinski.\nUpdated May 18 2021"
   onCreate "if nuke.GUI:\n    try:\n        import stamps; stamps.wiredOnCreate()\n    except:\n        pass\n"
   knobChanged "import stamps; stamps.wiredKnobChanged()"
   autolabel "nuke.thisNode().knob(\"title\").value()"
   tile_color 0x1000001
   note_font "Bitstream Vera Sans"
   note_font_size 20
   xpos 4472
   ypos -693
   hide_input true
   addUserKnob {20 wired_tab l "Wired Stamp"}
   addUserKnob {26 identifier -STARTLINE +HIDDEN T wired}
   addUserKnob {3 lockCallbacks l "" +STARTLINE +HIDDEN}
   addUserKnob {6 toReconnect -STARTLINE +HIDDEN}
   addUserKnob {1 title l Title: t "Displayed name on the Node Graph for this Stamp and its Anchor.\nIMPORTANT: This is only for display purposes, and is different from the real/internal name of the Stamps."}
   title smoke_SIDE
   addUserKnob {26 prev_title l "" +STARTLINE +HIDDEN T smoke_SIDE}
   addUserKnob {26 tags l Tags: t "Tags of this stamp's Anchor, for information purpose only.\nClick \"show anchor\" to change them." T <i>2D</i>}
   addUserKnob {26 backdrops l Backdrops: t "Labels of backdrop nodes which contain this stamp's Anchor." T "<i><Left>before or after Flare</i>"}
   addUserKnob {26 line1 l "" +STARTLINE}
   addUserKnob {6 postageStamp_show l "postage stamp" t "Enable the postage stamp thumbnail in this node.\nYou're seeing this because the class of this node includes the postage_stamp knob." +STARTLINE}
   addUserKnob {26 anchor_label l Anchor: T " "}
   addUserKnob {22 show_anchor l " show anchor " t "Show the properties panel for this Stamp's Anchor." -STARTLINE T stamps.wiredShowAnchor()}
   addUserKnob {22 zoom_anchor l "zoom anchor" t "Navigate to this Stamp's Anchor on the Node Graph." -STARTLINE T stamps.wiredZoomAnchor()}
   addUserKnob {26 stamps_label l Stamps: T " "}
   addUserKnob {22 zoomNext l " zoom next " t "Navigate to this Stamp's next sibling on the Node Graph." -STARTLINE T stamps.wiredZoomNext()}
   addUserKnob {22 selectSimilar l " select similar " t "Select all similar Stamps to this one on the Node Graph." -STARTLINE T stamps.wiredSelectSimilar()}
   addUserKnob {26 space_1 l "" +STARTLINE T " "}
   addUserKnob {26 reconnect_label l Reconnect: t "Reconnect by the stored Anchor name." T " "}
   addUserKnob {22 reconnect_this l this t "Reconnect this Stamp to its Anchor, by its stored Anchor name." -STARTLINE T "n = nuke.thisNode()\ntry:\n    n.setInput(0,nuke.toNode(n.knob(\"anchor\").value()))\nexcept:\n    nuke.message(\"Unable to reconnect.\")\ntry:\n    import stamps\n    stamps.wiredGetStyle(n)\nexcept:\n    pass\n"}
   addUserKnob {22 reconnect_similar l similar t "Reconnect this Stamp and similar ones to their Anchor, by their stored anchor name." -STARTLINE T stamps.wiredReconnectSimilar()}
   addUserKnob {22 reconnect_all l all t "Reconnect all the Stamps to their Anchors, by their stored anchor names." -STARTLINE T stamps.wiredReconnectAll()}
   addUserKnob {26 space_2 l "" +STARTLINE T " "}
   addUserKnob {20 advanced_reconnection l "Advanced Reconnection" n 2}
   addUserKnob {26 reconnect_by_title_label l "<font color=gold>By Title:" t "Reconnect by searching for a matching title." T " "}
   addUserKnob {22 reconnect_by_title_this l this t "Look for an Anchor that shares this Stamp's title, and connect this Stamp to it.\nIMPORTANT: Use this carefully, and only when the normal reconnection doesn't work." -STARTLINE T stamps.wiredReconnectByTitle()}
   addUserKnob {22 reconnect_by_title_similar l similar t "Look for an Anchor that shares this Stamp's title, and connect this Stamp and similar ones to it.\nIMPORTANT: Use this carefully, and only when the normal reconnection doesn't work." -STARTLINE T stamps.wiredReconnectByTitleSimilar()}
   addUserKnob {22 reconnect_by_title_selected l selected t "For each Stamp selected, look for an Anchor that shares its title, and connect to it.\nIMPORTANT: Use this carefully, and only when the normal reconnection doesn't work." -STARTLINE T stamps.wiredReconnectByTitleSelected()}
   addUserKnob {26 reconnect_by_selection_label l "<font color=orangered>By Selection:" t "Force reconnect to a selected Anchor." T " "}
   addUserKnob {22 reconnect_by_selection_this l this t "Force reconnect this Stamp to a selected Anchor, whatever its name or title.\nIMPORTANT: Use this carefully, and only when the normal reconnection doesn't work." -STARTLINE T stamps.wiredReconnectBySelection()}
   addUserKnob {22 reconnect_by_selection_similar l similar t "Force reconnect this Stamp and similar ones to a selected Anchor, whatever its name or title.\nIMPORTANT: Use this carefully, and only when the normal reconnection doesn't work." -STARTLINE T stamps.wiredReconnectBySelectionSimilar()}
   addUserKnob {22 reconnect_by_selection_selected l selected t "Force reconnect all selected Stamps to an also selected Anchor, whatever its name or title.\nIMPORTANT: Use this carefully, and only when the normal reconnection doesn't work." -STARTLINE T stamps.wiredReconnectBySelectionSelected()}
   addUserKnob {1 anchor l Anchor}
   anchor Anchor_232c9aab88
   addUserKnob {6 auto_reconnect_by_title l "<font color=#ED9977>&nbsp; auto-reconnect by title" t "When creating this stamp again (like on copy-paste), auto-reconnect it by title instead of doing it by the saved anchor's name, and auto-turn this off immediately.\nIMPORTANT: Should be off by default. Only use this for setting up templates." +STARTLINE}
   addUserKnob {26 line2 l "" +STARTLINE}
   addUserKnob {22 buttonHelp l Help -STARTLINE T stamps.showHelp()}
   addUserKnob {26 version l " " t "Stamps by Adrian Pueyo and Alexey Kuchinski.\nUpdated May 18 2021." -STARTLINE T "<a href=\"http://www.nukepedia.com/gizmos/other/stamps\" style=\"color:#666;text-decoration: none;\"><span style=\"color:#666\"> <big>Stamps v1.1</big></b></a>"}
  }
  Dot {
   name Dot26
   xpos 4506
   ypos -643
  }
  Group {
   inputs 3
   name gunshot13
   label "shot: \[value shotcount]\non frame: \[value shotstart]\n"
   xpos 4354
   ypos -616
   addUserKnob {20 User}
   addUserKnob {3 shotcount l shot}
   shotcount 13
   addUserKnob {3 shotstart l frame +INVISIBLE}
   shotstart {{"shotcount==0 ? 0 : shot\[value shotcount]-1" i}}
  }
   BackdropNode {
    inputs 0
    name BackdropNode19
    knobChanged "try:\n    listenedKnobs = \['text', 'position', 'name']\n    node = nuke.thisNode()\n    name = node.knob('name').value()\n    text = node.knob('text').value()\n    position = node.knob('position').value()\n    position = \"<\" + position + \">\"\n    label = node.knob('label').value()\n    \n    if nuke.thisKnob().name() in listenedKnobs:\n        if text == \"\":\n            if node.knob('position').value() == \"left\":\n                node.knob('label').setValue()\n            else:\n                node.knob('label').setValue(position + name)\n        else:\n            if node.knob('position').value() == \"left\":\n                node.knob('label').setValue(text)\n            else:\n                node.knob('label').setValue(position + text)\n                \n    elif nuke.thisKnob().name() == 'font_size':\n        fontSize = node.knob('font_size').value()\n        node.knob('note_font_size').setValue(fontSize)\nexcept:\n    pass"
    tile_color 0x232323ff
    label "<Left><h2> Gunshot"
    note_font_size 31.5
    xpos -693
    ypos -554
    bdwidth 876
    bdheight 1682
    addUserKnob {20 F_VFX l BackdropNode}
    addUserKnob {43 text l Text}
    text "<h2> Gunshot"
    addUserKnob {7 font_size l "Font Size" R 10 100}
    font_size 31.5
    addUserKnob {4 position l "" -STARTLINE M {Left Center}}
    addUserKnob {26 S01 l " " T " "}
    addUserKnob {22 grow l " <img src=\"F_scalep.png\">" -STARTLINE T "n=nuke.thisNode()\n\ndef grow(node=None,step=50):\n    try:\n        if not node:\n            n=nuke.selectedNode()\n        else:\n            n=node\n            n\['xpos'].setValue(n\['xpos'].getValue()-step)\n            n\['ypos'].setValue(n\['ypos'].getValue()-step)\n            n\['bdwidth'].setValue(n\['bdwidth'].getValue()+step*2)\n            n\['bdheight'].setValue(n\['bdheight'].getValue()+step*2)\n    except:\n        pass\ngrow(n,50)"}
    addUserKnob {22 shrink l " <img src=\"F_scalem.png\">" -STARTLINE T "n=nuke.thisNode()\n\ndef shrink(node=None,step=50):\n    try:\n        if not node:\n            n=nuke.selectedNode()\n        else:\n            n=node\n            n\['xpos'].setValue(n\['xpos'].getValue()+step)\n            n\['ypos'].setValue(n\['ypos'].getValue()+step)\n            n\['bdwidth'].setValue(n\['bdwidth'].getValue()-step*2)\n            n\['bdheight'].setValue(n\['bdheight'].getValue()-step*2)\n    except:\n        pass\nshrink(n,50)"}
    addUserKnob {22 colorandom l " <img src=\"ColorBars.png\">" -STARTLINE T "import colorsys, random\nn=nuke.thisNode()\nR,G,B= colorsys.hsv_to_rgb(random.random(),.1+random.random()*.15,.15+random.random()*.15)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ) )"}
    addUserKnob {22 darkgrey l "<font color=\"#232323\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.0, 0.0, 0.14]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 lightgrey l "<font color=\"#383838\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.0, 0.0, 0.22]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 red l "<font color=\"#8c3838\" size=6>■</font>" T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.0, 0.6, 0.55]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n" +STARTLINE}
    addUserKnob {22 orange l "<font color=\"#b28e59\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.1, 0.5, 0.7]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 yellow l "<font color=\"#ccc766\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.16, 0.5, 0.8]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 green l "<font color=\"#5d995b\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.33, 0.4, 0.6]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 cyan l "<font color=\"#72998f\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.46, 0.25, 0.6]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 blue l "<font color=\"#59687f\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.6, 0.3, 0.5]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 darkblue l "<font color=\"#63628c\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.67, 0.3, 0.55]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 magenta l "<font color=\"#927a99\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.8, 0.2, 0.6]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 pink l "<font color=\"#997a89\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.92, 0.2, 0.6]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {26 S02 l " " T " "}
    addUserKnob {26 Ftools l "" +STARTLINE T "<font color=\"#1C1C1C\"> v1.2 - Franklin VFX - 2018"}
   }
   BackdropNode {
    inputs 0
    name BackdropNode2
    knobChanged "try:\n    listenedKnobs = \['text', 'position', 'name']\n    node = nuke.thisNode()\n    name = node.knob('name').value()\n    text = node.knob('text').value()\n    position = node.knob('position').value()\n    position = \"<\" + position + \">\"\n    label = node.knob('label').value()\n    \n    if nuke.thisKnob().name() in listenedKnobs:\n        if text == \"\":\n            if node.knob('position').value() == \"left\":\n                node.knob('label').setValue()\n            else:\n                node.knob('label').setValue(position + name)\n        else:\n            if node.knob('position').value() == \"left\":\n                node.knob('label').setValue(text)\n            else:\n                node.knob('label').setValue(position + text)\n                \n    elif nuke.thisKnob().name() == 'font_size':\n        fontSize = node.knob('font_size').value()\n        node.knob('note_font_size').setValue(fontSize)\nexcept:\n    pass"
    tile_color 0x927a99ff
    note_font_size 50
    xpos -473
    ypos -221
    bdwidth 435
    bdheight 786
    z_order 1
    addUserKnob {20 F_VFX l BackdropNode}
    addUserKnob {43 text l Text}
    addUserKnob {7 font_size l "Font Size" R 10 100}
    font_size 50
    addUserKnob {4 position l "" -STARTLINE M {Left Center}}
    addUserKnob {26 S01 l " " T " "}
    addUserKnob {22 grow l " <img src=\"F_scalep.png\">" -STARTLINE T "n=nuke.thisNode()\n\ndef grow(node=None,step=50):\n    try:\n        if not node:\n            n=nuke.selectedNode()\n        else:\n            n=node\n            n\['xpos'].setValue(n\['xpos'].getValue()-step)\n            n\['ypos'].setValue(n\['ypos'].getValue()-step)\n            n\['bdwidth'].setValue(n\['bdwidth'].getValue()+step*2)\n            n\['bdheight'].setValue(n\['bdheight'].getValue()+step*2)\n    except:\n        pass\ngrow(n,50)"}
    addUserKnob {22 shrink l " <img src=\"F_scalem.png\">" -STARTLINE T "n=nuke.thisNode()\n\ndef shrink(node=None,step=50):\n    try:\n        if not node:\n            n=nuke.selectedNode()\n        else:\n            n=node\n            n\['xpos'].setValue(n\['xpos'].getValue()+step)\n            n\['ypos'].setValue(n\['ypos'].getValue()+step)\n            n\['bdwidth'].setValue(n\['bdwidth'].getValue()-step*2)\n            n\['bdheight'].setValue(n\['bdheight'].getValue()-step*2)\n    except:\n        pass\nshrink(n,50)"}
    addUserKnob {22 colorandom l " <img src=\"ColorBars.png\">" -STARTLINE T "import colorsys, random\nn=nuke.thisNode()\nR,G,B= colorsys.hsv_to_rgb(random.random(),.1+random.random()*.15,.15+random.random()*.15)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ) )"}
    addUserKnob {22 darkgrey l "<font color=\"#232323\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.0, 0.0, 0.14]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 lightgrey l "<font color=\"#383838\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.0, 0.0, 0.22]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 red l "<font color=\"#8c3838\" size=6>■</font>" T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.0, 0.6, 0.55]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n" +STARTLINE}
    addUserKnob {22 orange l "<font color=\"#b28e59\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.1, 0.5, 0.7]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 yellow l "<font color=\"#ccc766\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.16, 0.5, 0.8]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 green l "<font color=\"#5d995b\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.33, 0.4, 0.6]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 cyan l "<font color=\"#72998f\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.46, 0.25, 0.6]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 blue l "<font color=\"#59687f\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.6, 0.3, 0.5]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 darkblue l "<font color=\"#63628c\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.67, 0.3, 0.55]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 magenta l "<font color=\"#927a99\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.8, 0.2, 0.6]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 pink l "<font color=\"#997a89\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.92, 0.2, 0.6]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {26 S02 l " " T " "}
    addUserKnob {26 Ftools l "" +STARTLINE T "<font color=\"#1C1C1C\"> v1.2 - Franklin VFX - 2018"}
   }
   Constant {
    inputs 0
    channels rgb
    name Constant13
    xpos -643
    ypos 714
   }
   AdjBBox {
    numpixels {{size_bbox}}
    name AdjBBox13
    xpos -643
    ypos 849
   }
   Dot {
    name Dot78
    xpos -609
    ypos 987
   }
   Axis3 {
    inputs 0
    useMatrix true
    matrix {
        {{parent.cCard3D_1.matrix} {parent.cCard3D_1.matrix} {parent.cCard3D_1.matrix} {parent.cCard3D_1.matrix}}
        {{parent.cCard3D_1.matrix} {parent.cCard3D_1.matrix} {parent.cCard3D_1.matrix} {parent.cCard3D_1.matrix}}
        {{parent.cCard3D_1.matrix} {parent.cCard3D_1.matrix} {parent.cCard3D_1.matrix} {parent.cCard3D_1.matrix}}
        {{parent.cCard3D_1.matrix} {parent.cCard3D_1.matrix} {parent.cCard3D_1.matrix} {parent.cCard3D_1.matrix}}
      }
    name Axis14
    xpos -203
    ypos -90
   }
set N571ea3b0 [stack 0]
push 0
   Input {
    inputs 0
    name top
    xpos -283
    ypos -1243
    number 1
   }
   TimeOffset {
    time_offset {{"shot_\[value shotnmbr]==0 ? 0 : shot_\[value shotnmbr]-1"}}
    time ""
    name CTimeOffset1
    label "shot: \[value shotnmbr]\non frame \[value time_offset]"
    xpos -283
    ypos -924
    addUserKnob {20 User}
    addUserKnob {3 shotnmbr l "shot "}
    shotnmbr {{shotcount}}
    addUserKnob {3 ref}
    ref {{time_offset+1}}
   }
   Group {
    name DecimalTimeOffset1
    tile_color 0xafa35dff
    label "random asset"
    note_font "Bitstream Vera Sans Bold"
    xpos -283
    ypos -841
    addUserKnob {20 User}
    addUserKnob {7 decimal l "time offset (decimal)"}
    decimal {{random(shotcount*seed)}}
    addUserKnob {26 ""}
    addUserKnob {26 _1 l "" +STARTLINE T "Chris Fryer | 2020\nupdated by Yorben Otto | 2024"}
   }
    Input {
     inputs 0
     name Input1
     xpos 426
     ypos -793
    }
    TimeOffset {
     time_offset {{(-floor(parent.decimal))*(DecimalTimeOffset1.decimal<0)}}
     time ""
     name TimeOffset1
     xpos 426
     ypos -675
    }
    Dot {
     name Dot6
     xpos 460
     ypos -635
    }
set N59839af0 [stack 0]
    Dot {
     name Dot5
     xpos 350
     ypos -635
    }
    Dot {
     name Dot7
     xpos 350
     ypos -365
    }
push $N59839af0
    Dot {
     name Dot1
     xpos 572
     ypos -635
    }
    TimeBlur {
     divisions 2
     shutter {{(parent.decimal-(floor(parent.decimal)))*2}}
     shutteroffset start
     shuttercustomoffset 0
     name TimeBlur1
     xpos 538
     ypos -558
    }
    Dot {
     name Dot2
     xpos 572
     ypos -490
    }
push $N59839af0
    TimeBlur {
     divisions 2
     shutter {{parent.decimal*2}}
     shutteroffset start
     shuttercustomoffset 0
     name TimeBlur8
     xpos 426
     ypos -556
    }
    Switch {
     inputs 2
     which {{parent.decimal<0}}
     name Switch1
     xpos 426
     ypos -494
    }
    Multiply {
     value {{parent.TimeBlur8.divisions}}
     name Multiply6
     xpos 426
     ypos -436
    }
    Merge2 {
     inputs 2
     operation from
     name Merge6
     xpos 426
     ypos -369
    }
set N5987ba30 [stack 0]
    Output {
     name Output1
     xpos 426
     ypos -221
    }
push $N5987ba30
push $N5987ba30
    Viewer {
     inputs 2
     frame_range 1-100
     name Viewer1
     xpos 675
     ypos -246
    }
   end_group
   NoTimeBlur {
    name NoTimeBlur1
    xpos -283
    ypos -779
   }
   Transform {
    scale {{0.05+(0.05*(((parent.DecimalTimeOffset13.decimal-0.5)*2)*ScaleVariationSmoke))}}
    center {{root.width/2 x1015 2304} {root.height/2}}
    shutteroffset centred
    name Transform44
    xpos -283
    ypos -152
   }
   Card3D {
    inputs 3
    rot_order ZYX
    translate {0 0 0}
    rotate {90 0 0}
    shutteroffset centred
    name cCard3D25
    tile_color 0x7b1d1dff
    xpos -283
    ypos 11
    addUserKnob {20 User l parent}
    addUserKnob {22 python_button l "set parent" t "select parent node, and press this button to set the selected node as parent" +INVISIBLE T "n = nuke.selectedNode()\['name'].getValue()\nnuke.thisNode()\['string'].setValue(n)" +STARTLINE}
    addUserKnob {1 string l parent +INVISIBLE}
    string null
    addUserKnob {3 ref l "ref frame"}
    ref 1015
   }
   Transform {
    translate {{"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].translate.x(ref)\}]"} {"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].translate.y(ref)\}]"}}
    rotate {{"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].rotate-\[value parent_gun].rotate(ref)\}]"}}
    scale {{"\[if \{\[value parent_gun]==\"null\"\} \{return 1\} \{return 1+(\[value parent_gun].scale-\[value parent_gun].scale(ref))\}]"}}
    center {{"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].center.x(ref)\}]"} {"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].center.y(ref)\}]"}}
    name Transform_GUNMatchMove37
    xpos -283
    ypos 126
    addUserKnob {20 User l parent}
    addUserKnob {3 ref}
    ref {{parent.CTimeOffset.ref}}
   }
   Transform {
    translate {{"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].translate.x-\[value parent_env].translate.x(ref)\}]"} {"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].translate.y-\[value parent_env].translate.y(ref)\}]"}}
    rotate {{"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].rotate-\[value parent_env].rotate(ref)\}]"}}
    scale {{"\[if \{\[value parent_gun]==\"null\"\} \{return 1\} \{return 1+(\[value parent_env].scale-\[value parent_env].scale(ref))\}]"}}
    center {{"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].center.x(ref)\}]"} {"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].center.y(ref)\}]"}}
    motionblur 0.2
    shutter {{SmokeMB*0.5}}
    shutteroffset centred
    name Transform_ENVMatchMove37
    label "\n"
    xpos -283
    ypos 255
    addUserKnob {20 User l parent}
    addUserKnob {3 ref}
    ref {{parent.CTimeOffset.ref}}
   }
   Transform {
    translate {{"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return -((root.width/2)-(\[value parent_gun].center.x(1)+\[value parent_gun].translate.x(1)))\}]"} {"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return -((root.height/2)-(\[value parent_gun].center.y(1)+\[value parent_gun].translate.y(1)))\}]"}}
    name Transform_GUNMatchMove6
    label "alignment correction"
    xpos -283
    ypos 344
    addUserKnob {20 User l parent}
    addUserKnob {22 python_button l "set parent" t "select parent node, and press this button to set the selected node as parent" T "n = nuke.selectedNode()\['name'].getValue()\nnuke.thisNode()\['string'].setValue(n)" +STARTLINE}
    addUserKnob {1 string l parent}
    string Transform_MatchMove10
    addUserKnob {3 ref +INVISIBLE}
    ref {{parent.cCard3D_8.ref}}
   }
   Multiply {
    value {{math_matrix.result_y_smoke(parent.CTimeOffset.ref)}}
    name Angle_reveal_top1
    label TOP
    xpos -283
    ypos 403
   }
   Remove {
    operation keep
    channels rgb
    name Remove1
    xpos -283
    ypos 514
   }
push 0
   Switch {
    inputs 2
    which {{parent.Angle_reveal_top1.value>0.001}}
    name Switch1
    xpos -283
    ypos 660
   }
   Dot {
    name Dot82
    xpos -249
    ypos 705
   }
push 0
push $N571ea3b0
push 0
   Input {
    inputs 0
    name front
    xpos -436
    ypos -1243
    number 2
   }
   TimeOffset {
    time_offset {{"shot_\[value shotnmbr]==0 ? 0 : shot_\[value shotnmbr]-1"}}
    time ""
    name CTimeOffset2
    label "shot: \[value shotnmbr]\non frame \[value time_offset]"
    xpos -436
    ypos -925
    addUserKnob {20 User}
    addUserKnob {3 shotnmbr l "shot "}
    shotnmbr {{shotcount}}
    addUserKnob {3 ref}
    ref {{time_offset+1}}
   }
   Group {
    name DecimalTimeOffset2
    tile_color 0xafa35dff
    label "random asset"
    note_font "Bitstream Vera Sans Bold"
    xpos -436
    ypos -842
    addUserKnob {20 User}
    addUserKnob {7 decimal l "time offset (decimal)"}
    decimal {{random(shotcount*seed)}}
    addUserKnob {26 ""}
    addUserKnob {26 _1 l "" +STARTLINE T "Chris Fryer | 2020\nupdated by Yorben Otto | 2024"}
   }
    Input {
     inputs 0
     name Input1
     xpos 426
     ypos -793
    }
    TimeOffset {
     time_offset {{(-floor(parent.decimal))*(DecimalTimeOffset2.decimal<0)}}
     time ""
     name TimeOffset1
     xpos 426
     ypos -675
    }
    Dot {
     name Dot6
     xpos 460
     ypos -635
    }
set N4b5c78c0 [stack 0]
    Dot {
     name Dot5
     xpos 350
     ypos -635
    }
    Dot {
     name Dot7
     xpos 350
     ypos -365
    }
push $N4b5c78c0
    Dot {
     name Dot1
     xpos 572
     ypos -635
    }
    TimeBlur {
     divisions 2
     shutter {{(parent.decimal-(floor(parent.decimal)))*2}}
     shutteroffset start
     shuttercustomoffset 0
     name TimeBlur1
     xpos 538
     ypos -558
    }
    Dot {
     name Dot2
     xpos 572
     ypos -490
    }
push $N4b5c78c0
    TimeBlur {
     divisions 2
     shutter {{parent.decimal*2}}
     shutteroffset start
     shuttercustomoffset 0
     name TimeBlur8
     xpos 426
     ypos -556
    }
    Switch {
     inputs 2
     which {{parent.decimal<0}}
     name Switch1
     xpos 426
     ypos -494
    }
    Multiply {
     value {{parent.TimeBlur8.divisions}}
     name Multiply6
     xpos 426
     ypos -436
    }
    Merge2 {
     inputs 2
     operation from
     name Merge6
     xpos 426
     ypos -369
    }
set N49e196b0 [stack 0]
    Output {
     name Output1
     xpos 426
     ypos -221
    }
push $N49e196b0
push $N49e196b0
    Viewer {
     inputs 2
     frame_range 1-100
     name Viewer1
     xpos 675
     ypos -246
    }
   end_group
   NoTimeBlur {
    name NoTimeBlur5
    xpos -436
    ypos -780
   }
   Transform {
    scale {{0.05+(0.05*(((parent.DecimalTimeOffset13.decimal-0.5)*2)*ScaleVariationSmoke))}}
    center {{root.width/2 x1015 2304} {root.height/2}}
    shutteroffset centred
    name Transform45
    xpos -436
    ypos -151
   }
   Card3D {
    inputs 3
    rot_order ZYX
    translate {0 0 0}
    rotate {0 90 0}
    shutteroffset centred
    name cCard3D26
    tile_color 0x7b1d1dff
    xpos -436
    ypos 15
    addUserKnob {20 User l parent}
    addUserKnob {22 python_button l "set parent" t "select parent node, and press this button to set the selected node as parent" +INVISIBLE T "n = nuke.selectedNode()\['name'].getValue()\nnuke.thisNode()\['string'].setValue(n)" +STARTLINE}
    addUserKnob {1 string l parent +INVISIBLE}
    string null
    addUserKnob {3 ref l "ref frame"}
    ref 1015
   }
   Transform {
    translate {{"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].translate.x(ref)\}]"} {"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].translate.y(ref)\}]"}}
    rotate {{"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].rotate-\[value parent_gun].rotate(ref)\}]"}}
    scale {{"\[if \{\[value parent_gun]==\"null\"\} \{return 1\} \{return 1+(\[value parent_gun].scale-\[value parent_gun].scale(ref))\}]"}}
    center {{"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].center.x(ref)\}]"} {"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].center.y(ref)\}]"}}
    name Transform_GUNMatchMove38
    label "\n"
    xpos -436
    ypos 124
    addUserKnob {20 User l parent}
    addUserKnob {3 ref}
    ref {{parent.CTimeOffset.ref}}
   }
   Transform {
    translate {{"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].translate.x-\[value parent_env].translate.x(ref)\}]"} {"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].translate.y-\[value parent_env].translate.y(ref)\}]"}}
    rotate {{"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].rotate-\[value parent_env].rotate(ref)\}]"}}
    scale {{"\[if \{\[value parent_gun]==\"null\"\} \{return 1\} \{return 1+(\[value parent_env].scale-\[value parent_env].scale(ref))\}]"}}
    center {{"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].center.x(ref)\}]"} {"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].center.y(ref)\}]"}}
    motionblur 0.2
    shutter {{SmokeMB*0.5}}
    shutteroffset centred
    name Transform_ENVMatchMove38
    xpos -436
    ypos 254
    addUserKnob {20 User l parent}
    addUserKnob {3 ref}
    ref {{parent.CTimeOffset.ref}}
   }
   Transform {
    translate {{"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return -((root.width/2)-(\[value parent_gun].center.x(1)+\[value parent_gun].translate.x(1)))\}]"} {"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return -((root.height/2)-(\[value parent_gun].center.y(1)+\[value parent_gun].translate.y(1)))\}]"}}
    name Transform_GUNMatchMove7
    label "alignment correction"
    xpos -436
    ypos 343
    addUserKnob {20 User l parent}
    addUserKnob {22 python_button l "set parent" t "select parent node, and press this button to set the selected node as parent" T "n = nuke.selectedNode()\['name'].getValue()\nnuke.thisNode()\['string'].setValue(n)" +STARTLINE}
    addUserKnob {1 string l parent}
    string Transform_MatchMove10
    addUserKnob {3 ref +INVISIBLE}
    ref {{parent.cCard3D_8.ref}}
   }
   Multiply {
    value {{math_matrix.result_x_smoke(parent.CTimeOffset.ref)}}
    name Angle_reveal_front1
    label FRONT
    xpos -436
    ypos 401
   }
   Remove {
    operation keep
    channels rgb
    name Remove2
    xpos -436
    ypos 511
   }
push 0
   Switch {
    inputs 2
    which {{parent.Angle_reveal_front1.value>0.001}}
    name Switch2
    xpos -436
    ypos 660
   }
   Dot {
    name Dot83
    xpos -402
    ypos 735
   }
   Input {
    inputs 0
    name side
    xpos -130
    ypos -1242
   }
   TimeOffset {
    time_offset {{"shot_\[value shotnmbr]==0 ? 0 : shot_\[value shotnmbr]-1"}}
    time ""
    name CTimeOffset
    label "shot: \[value shotnmbr]\non frame \[value time_offset]"
    xpos -130
    ypos -927
    addUserKnob {20 User}
    addUserKnob {3 shotnmbr l "shot "}
    shotnmbr {{shotcount}}
    addUserKnob {3 ref}
    ref {{time_offset+1}}
   }
   Group {
    name DecimalTimeOffset13
    tile_color 0xafa35dff
    label "random asset"
    note_font "Bitstream Vera Sans Bold"
    xpos -130
    ypos -844
    addUserKnob {20 User}
    addUserKnob {7 decimal l "time offset (decimal)"}
    decimal {{random(shotcount*seed)}}
    addUserKnob {26 ""}
    addUserKnob {26 _1 l "" +STARTLINE T "Chris Fryer | 2020\nupdated by Yorben Otto | 2024"}
   }
    Input {
     inputs 0
     name Input1
     xpos 426
     ypos -793
    }
    TimeOffset {
     time_offset {{(-floor(parent.decimal))*(DecimalTimeOffset13.decimal<0)}}
     time ""
     name TimeOffset1
     xpos 426
     ypos -675
    }
    Dot {
     name Dot6
     xpos 460
     ypos -635
    }
set N549655c0 [stack 0]
    Dot {
     name Dot5
     xpos 350
     ypos -635
    }
    Dot {
     name Dot7
     xpos 350
     ypos -365
    }
push $N549655c0
    Dot {
     name Dot1
     xpos 572
     ypos -635
    }
    TimeBlur {
     divisions 2
     shutter {{(parent.decimal-(floor(parent.decimal)))*2}}
     shutteroffset start
     shuttercustomoffset 0
     name TimeBlur1
     xpos 538
     ypos -558
    }
    Dot {
     name Dot2
     xpos 572
     ypos -490
    }
push $N549655c0
    TimeBlur {
     divisions 2
     shutter {{parent.decimal*2}}
     shutteroffset start
     shuttercustomoffset 0
     name TimeBlur8
     xpos 426
     ypos -556
    }
    Switch {
     inputs 2
     which {{parent.decimal<0}}
     name Switch1
     xpos 426
     ypos -494
    }
    Multiply {
     value {{parent.TimeBlur8.divisions}}
     name Multiply6
     xpos 426
     ypos -436
    }
    Merge2 {
     inputs 2
     operation from
     name Merge6
     xpos 426
     ypos -369
    }
set N549a7500 [stack 0]
    Output {
     name Output1
     xpos 426
     ypos -221
    }
push $N549a7500
push $N549a7500
    Viewer {
     inputs 2
     frame_range 1-100
     name Viewer1
     xpos 675
     ypos -246
    }
   end_group
   NoTimeBlur {
    name NoTimeBlur13
    xpos -130
    ypos -782
   }
   Transform {
    scale {{0.05+(0.05*(((parent.DecimalTimeOffset13.decimal-0.5)*2)*ScaleVariationSmoke))}}
    center {{root.width/2 x1015 2304} {root.height/2}}
    shutteroffset centred
    name Transform46
    xpos -130
    ypos -155
   }
   Card3D {
    translate {{"\[if \{\[exists  parent.parent.parent.input0]\} \{return \[value \[topnode parent.parent.parent.input0].name].translate.x(ref)\} \{return 0\}]"} {"\[if \{\[exists  parent.parent.parent.input0]\} \{return \[value \[topnode parent.parent.parent.input0].name].translate.y(ref)\} \{return 0\}]"} {"\[if \{\[exists  parent.parent.parent.input0]\} \{return \[value \[topnode parent.parent.parent.input0].name].translate.z(ref)\} \{return -1\}]"}}
    rotate {{"\[if \{\[exists  parent.parent.parent.input0]\} \{return \[value \[topnode parent.parent.parent.input0].name].rotate.x(ref)\} \{return 0\}]"} {"\[if \{\[exists  parent.parent.parent.input0]\} \{return \[value \[topnode parent.parent.parent.input0].name].rotate.y(ref)\} \{return 0\}]"} {"\[if \{\[exists  parent.parent.parent.input0]\} \{return \[value \[topnode parent.parent.parent.input0].name].rotate.z(ref)\} \{return 0\}]"}}
    scaling {{"\[if \{\[exists  parent.parent.parent.input0]\} \{return \[value \[topnode parent.parent.parent.input0].name].scaling.x(ref)\} \{return 1\}]"} {"\[if \{\[exists  parent.parent.parent.input0]\} \{return \[value \[topnode parent.parent.parent.input0].name].scaling.y(ref)\} \{return 1\}]"} {"\[if \{\[exists  parent.parent.parent.input0]\} \{return \[value \[topnode parent.parent.parent.input0].name].scaling.z(ref)\} \{return 1\}]"}}
    uniform_scale {{"\[if \{\[exists  parent.parent.parent.input0]\} \{return (\[value \[topnode parent.parent.parent.input0].name].uniform_scale(ref)*25)\} \{return 25\}]"}}
    shutteroffset centred
    name cCard3D_1
    tile_color 0x7b1d1dff
    label "ref frame: \[value ref]"
    xpos -130
    ypos 2
    addUserKnob {20 User l parent}
    addUserKnob {22 python_button l "set parent" t "select parent node, and press this button to set the selected node as parent" +INVISIBLE T "n = nuke.selectedNode()\['name'].getValue()\nnuke.thisNode()\['string'].setValue(n)" +STARTLINE}
    addUserKnob {1 string l parent +INVISIBLE}
    string null
    addUserKnob {3 id l "id number"}
    id {{parent.CTimeOffset.shotnmbr}}
    addUserKnob {3 ref l "ref frame"}
    ref {{parent.CTimeOffset.ref}}
   }
   Transform {
    translate {{"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].translate.x(ref)\}]"} {"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].translate.y(ref)\}]"}}
    rotate {{"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].rotate-\[value parent_gun].rotate(ref)\}]"}}
    scale {{"\[if \{\[value parent_gun]==\"null\"\} \{return 1\} \{return 1+(\[value parent_gun].scale-\[value parent_gun].scale(ref))\}]"}}
    center {{"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].center.x(ref)\}]"} {"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].center.y(ref)\}]"}}
    name Transform_GUNMatchMove39
    label "\n"
    xpos -130
    ypos 124
    addUserKnob {20 User l parent}
    addUserKnob {3 ref}
    ref {{parent.CTimeOffset.ref}}
   }
   Transform {
    translate {{"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].translate.x-\[value parent_env].translate.x(ref)\}]"} {"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].translate.y-\[value parent_env].translate.y(ref)\}]"}}
    rotate {{"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].rotate-\[value parent_env].rotate(ref)\}]"}}
    scale {{"\[if \{\[value parent_gun]==\"null\"\} \{return 1\} \{return 1+(\[value parent_env].scale-\[value parent_env].scale(ref))\}]"}}
    center {{"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].center.x(ref)\}]"} {"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].center.y(ref)\}]"}}
    motionblur 0.2
    shutter {{SmokeMB*0.5}}
    shutteroffset centred
    name Transform_ENVMatchMove39
    xpos -130
    ypos 258
    addUserKnob {20 User l parent}
    addUserKnob {3 ref}
    ref {{parent.CTimeOffset.ref}}
   }
   Transform {
    translate {{"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return -((root.width/2)-(\[value parent_gun].center.x(1)+\[value parent_gun].translate.x(1)))\}]"} {"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return -((root.height/2)-(\[value parent_gun].center.y(1)+\[value parent_gun].translate.y(1)))\}]"}}
    name Transform_GUNMatchMove5
    label "alignment correction"
    xpos -130
    ypos 340
    addUserKnob {20 User l parent}
    addUserKnob {22 python_button l "set parent" t "select parent node, and press this button to set the selected node as parent" T "n = nuke.selectedNode()\['name'].getValue()\nnuke.thisNode()\['string'].setValue(n)" +STARTLINE}
    addUserKnob {1 string l parent}
    string Transform_MatchMove10
    addUserKnob {3 ref +INVISIBLE}
    ref {{parent.cCard3D_8.ref}}
   }
   Multiply {
    value {{math_matrix.result_z_smoke(parent.CTimeOffset.ref)}}
    name Angle_reveal_side1
    label SIDE
    xpos -130
    ypos 404
   }
   Remove {
    operation keep
    channels rgb
    name Remove39
    xpos -130
    ypos 514
   }
push 0
   Switch {
    inputs 2
    which {{parent.Angle_reveal_side1.value>0.001}}
    name Switch3
    xpos -130
    ypos 658
   }
   Merge2 {
    inputs 3+1
    operation max
    Achannels rgb
    Bchannels rgb
    output rgb
    name Merge28
    xpos -130
    ypos 731
   }
   Merge2 {
    inputs 2
    operation plus
    bbox intersection
    Achannels rgb
    Bchannels rgb
    output rgb
    name Merge29
    xpos -130
    ypos 983
   }
   Shuffle2 {
    fromInput1 {{0} B}
    fromInput2 {{0} B}
    mappings "4 rgba.red 0 0 rgba.red 0 0 rgba.green 0 1 rgba.green 0 1 rgba.blue 0 2 rgba.alpha 0 3 rgba.blue 0 2 rgba.blue 0 2"
    name Shuffle1
    xpos -130
    ypos 1021
   }
push 0
   Switch {
    inputs 2
    which {{"shot_\[value count]==0?0:frame>=shot_\[value count]"}}
    name cSwitch_13
    xpos -130
    ypos 1078
    addUserKnob {20 User}
    addUserKnob {3 count}
    count {{parent.CTimeOffset.shotnmbr}}
   }
   Output {
    name Output1
    xpos -130
    ypos 1323
   }
   StickyNote {
    inputs 0
    name StickyNote1
    label "<-- handy to break concatonation?  "
    xpos -39
    ypos 193
   }
  end_group
push $N586971d0
  PostageStamp {
   name Stamp49
   help "Stamps by Adrian Pueyo and Alexey Kuchinski.\nUpdated May 18 2021"
   onCreate "if nuke.GUI:\n    try:\n        import stamps; stamps.wiredOnCreate()\n    except:\n        pass\n"
   knobChanged "import stamps; stamps.wiredKnobChanged()"
   autolabel "nuke.thisNode().knob(\"title\").value()"
   tile_color 0x1000001
   note_font "Bitstream Vera Sans"
   note_font_size 20
   xpos 5786
   ypos -705
   hide_input true
   addUserKnob {20 wired_tab l "Wired Stamp"}
   addUserKnob {26 identifier -STARTLINE +HIDDEN T wired}
   addUserKnob {3 lockCallbacks l "" +STARTLINE +HIDDEN}
   addUserKnob {6 toReconnect -STARTLINE +HIDDEN}
   addUserKnob {1 title l Title: t "Displayed name on the Node Graph for this Stamp and its Anchor.\nIMPORTANT: This is only for display purposes, and is different from the real/internal name of the Stamps."}
   title smoke_FRONT
   addUserKnob {26 prev_title l "" +STARTLINE +HIDDEN T smoke_FRONT}
   addUserKnob {26 tags l Tags: t "Tags of this stamp's Anchor, for information purpose only.\nClick \"show anchor\" to change them." T <i>2D</i>}
   addUserKnob {26 backdrops l Backdrops: t "Labels of backdrop nodes which contain this stamp's Anchor." T "<i><Left>before or after Flare</i>"}
   addUserKnob {26 line1 l "" +STARTLINE}
   addUserKnob {6 postageStamp_show l "postage stamp" t "Enable the postage stamp thumbnail in this node.\nYou're seeing this because the class of this node includes the postage_stamp knob." +STARTLINE}
   addUserKnob {26 anchor_label l Anchor: T " "}
   addUserKnob {22 show_anchor l " show anchor " t "Show the properties panel for this Stamp's Anchor." -STARTLINE T stamps.wiredShowAnchor()}
   addUserKnob {22 zoom_anchor l "zoom anchor" t "Navigate to this Stamp's Anchor on the Node Graph." -STARTLINE T stamps.wiredZoomAnchor()}
   addUserKnob {26 stamps_label l Stamps: T " "}
   addUserKnob {22 zoomNext l " zoom next " t "Navigate to this Stamp's next sibling on the Node Graph." -STARTLINE T stamps.wiredZoomNext()}
   addUserKnob {22 selectSimilar l " select similar " t "Select all similar Stamps to this one on the Node Graph." -STARTLINE T stamps.wiredSelectSimilar()}
   addUserKnob {26 space_1 l "" +STARTLINE T " "}
   addUserKnob {26 reconnect_label l Reconnect: t "Reconnect by the stored Anchor name." T " "}
   addUserKnob {22 reconnect_this l this t "Reconnect this Stamp to its Anchor, by its stored Anchor name." -STARTLINE T "n = nuke.thisNode()\ntry:\n    n.setInput(0,nuke.toNode(n.knob(\"anchor\").value()))\nexcept:\n    nuke.message(\"Unable to reconnect.\")\ntry:\n    import stamps\n    stamps.wiredGetStyle(n)\nexcept:\n    pass\n"}
   addUserKnob {22 reconnect_similar l similar t "Reconnect this Stamp and similar ones to their Anchor, by their stored anchor name." -STARTLINE T stamps.wiredReconnectSimilar()}
   addUserKnob {22 reconnect_all l all t "Reconnect all the Stamps to their Anchors, by their stored anchor names." -STARTLINE T stamps.wiredReconnectAll()}
   addUserKnob {26 space_2 l "" +STARTLINE T " "}
   addUserKnob {20 advanced_reconnection l "Advanced Reconnection" n 2}
   addUserKnob {26 reconnect_by_title_label l "<font color=gold>By Title:" t "Reconnect by searching for a matching title." T " "}
   addUserKnob {22 reconnect_by_title_this l this t "Look for an Anchor that shares this Stamp's title, and connect this Stamp to it.\nIMPORTANT: Use this carefully, and only when the normal reconnection doesn't work." -STARTLINE T stamps.wiredReconnectByTitle()}
   addUserKnob {22 reconnect_by_title_similar l similar t "Look for an Anchor that shares this Stamp's title, and connect this Stamp and similar ones to it.\nIMPORTANT: Use this carefully, and only when the normal reconnection doesn't work." -STARTLINE T stamps.wiredReconnectByTitleSimilar()}
   addUserKnob {22 reconnect_by_title_selected l selected t "For each Stamp selected, look for an Anchor that shares its title, and connect to it.\nIMPORTANT: Use this carefully, and only when the normal reconnection doesn't work." -STARTLINE T stamps.wiredReconnectByTitleSelected()}
   addUserKnob {26 reconnect_by_selection_label l "<font color=orangered>By Selection:" t "Force reconnect to a selected Anchor." T " "}
   addUserKnob {22 reconnect_by_selection_this l this t "Force reconnect this Stamp to a selected Anchor, whatever its name or title.\nIMPORTANT: Use this carefully, and only when the normal reconnection doesn't work." -STARTLINE T stamps.wiredReconnectBySelection()}
   addUserKnob {22 reconnect_by_selection_similar l similar t "Force reconnect this Stamp and similar ones to a selected Anchor, whatever its name or title.\nIMPORTANT: Use this carefully, and only when the normal reconnection doesn't work." -STARTLINE T stamps.wiredReconnectBySelectionSimilar()}
   addUserKnob {22 reconnect_by_selection_selected l selected t "Force reconnect all selected Stamps to an also selected Anchor, whatever its name or title.\nIMPORTANT: Use this carefully, and only when the normal reconnection doesn't work." -STARTLINE T stamps.wiredReconnectBySelectionSelected()}
   addUserKnob {1 anchor l Anchor}
   anchor Anchor_220a2be282
   addUserKnob {6 auto_reconnect_by_title l "<font color=#ED9977>&nbsp; auto-reconnect by title" t "When creating this stamp again (like on copy-paste), auto-reconnect it by title instead of doing it by the saved anchor's name, and auto-turn this off immediately.\nIMPORTANT: Should be off by default. Only use this for setting up templates." +STARTLINE}
   addUserKnob {26 line2 l "" +STARTLINE}
   addUserKnob {22 buttonHelp l Help -STARTLINE T stamps.showHelp()}
   addUserKnob {26 version l " " t "Stamps by Adrian Pueyo and Alexey Kuchinski.\nUpdated May 18 2021." -STARTLINE T "<a href=\"http://www.nukepedia.com/gizmos/other/stamps\" style=\"color:#666;text-decoration: none;\"><span style=\"color:#666\"> <big>Stamps v1.1</big></b></a>"}
  }
  Dot {
   name Dot33
   xpos 5820
   ypos -657
  }
push $N58d70c10
  PostageStamp {
   name Stamp50
   help "Stamps by Adrian Pueyo and Alexey Kuchinski.\nUpdated May 18 2021"
   onCreate "if nuke.GUI:\n    try:\n        import stamps; stamps.wiredOnCreate()\n    except:\n        pass\n"
   knobChanged "import stamps; stamps.wiredKnobChanged()"
   autolabel "nuke.thisNode().knob(\"title\").value()"
   tile_color 0x1000001
   note_font "Bitstream Vera Sans"
   note_font_size 20
   xpos 5911
   ypos -705
   hide_input true
   addUserKnob {20 wired_tab l "Wired Stamp"}
   addUserKnob {26 identifier -STARTLINE +HIDDEN T wired}
   addUserKnob {3 lockCallbacks l "" +STARTLINE +HIDDEN}
   addUserKnob {6 toReconnect -STARTLINE +HIDDEN}
   addUserKnob {1 title l Title: t "Displayed name on the Node Graph for this Stamp and its Anchor.\nIMPORTANT: This is only for display purposes, and is different from the real/internal name of the Stamps."}
   title smoke_TOP
   addUserKnob {26 prev_title l "" +STARTLINE +HIDDEN T smoke_TOP}
   addUserKnob {26 tags l Tags: t "Tags of this stamp's Anchor, for information purpose only.\nClick \"show anchor\" to change them." T <i>2D</i>}
   addUserKnob {26 backdrops l Backdrops: t "Labels of backdrop nodes which contain this stamp's Anchor." T "<i><Left>before or after Flare</i>"}
   addUserKnob {26 line1 l "" +STARTLINE}
   addUserKnob {6 postageStamp_show l "postage stamp" t "Enable the postage stamp thumbnail in this node.\nYou're seeing this because the class of this node includes the postage_stamp knob." +STARTLINE}
   addUserKnob {26 anchor_label l Anchor: T " "}
   addUserKnob {22 show_anchor l " show anchor " t "Show the properties panel for this Stamp's Anchor." -STARTLINE T stamps.wiredShowAnchor()}
   addUserKnob {22 zoom_anchor l "zoom anchor" t "Navigate to this Stamp's Anchor on the Node Graph." -STARTLINE T stamps.wiredZoomAnchor()}
   addUserKnob {26 stamps_label l Stamps: T " "}
   addUserKnob {22 zoomNext l " zoom next " t "Navigate to this Stamp's next sibling on the Node Graph." -STARTLINE T stamps.wiredZoomNext()}
   addUserKnob {22 selectSimilar l " select similar " t "Select all similar Stamps to this one on the Node Graph." -STARTLINE T stamps.wiredSelectSimilar()}
   addUserKnob {26 space_1 l "" +STARTLINE T " "}
   addUserKnob {26 reconnect_label l Reconnect: t "Reconnect by the stored Anchor name." T " "}
   addUserKnob {22 reconnect_this l this t "Reconnect this Stamp to its Anchor, by its stored Anchor name." -STARTLINE T "n = nuke.thisNode()\ntry:\n    n.setInput(0,nuke.toNode(n.knob(\"anchor\").value()))\nexcept:\n    nuke.message(\"Unable to reconnect.\")\ntry:\n    import stamps\n    stamps.wiredGetStyle(n)\nexcept:\n    pass\n"}
   addUserKnob {22 reconnect_similar l similar t "Reconnect this Stamp and similar ones to their Anchor, by their stored anchor name." -STARTLINE T stamps.wiredReconnectSimilar()}
   addUserKnob {22 reconnect_all l all t "Reconnect all the Stamps to their Anchors, by their stored anchor names." -STARTLINE T stamps.wiredReconnectAll()}
   addUserKnob {26 space_2 l "" +STARTLINE T " "}
   addUserKnob {20 advanced_reconnection l "Advanced Reconnection" n 2}
   addUserKnob {26 reconnect_by_title_label l "<font color=gold>By Title:" t "Reconnect by searching for a matching title." T " "}
   addUserKnob {22 reconnect_by_title_this l this t "Look for an Anchor that shares this Stamp's title, and connect this Stamp to it.\nIMPORTANT: Use this carefully, and only when the normal reconnection doesn't work." -STARTLINE T stamps.wiredReconnectByTitle()}
   addUserKnob {22 reconnect_by_title_similar l similar t "Look for an Anchor that shares this Stamp's title, and connect this Stamp and similar ones to it.\nIMPORTANT: Use this carefully, and only when the normal reconnection doesn't work." -STARTLINE T stamps.wiredReconnectByTitleSimilar()}
   addUserKnob {22 reconnect_by_title_selected l selected t "For each Stamp selected, look for an Anchor that shares its title, and connect to it.\nIMPORTANT: Use this carefully, and only when the normal reconnection doesn't work." -STARTLINE T stamps.wiredReconnectByTitleSelected()}
   addUserKnob {26 reconnect_by_selection_label l "<font color=orangered>By Selection:" t "Force reconnect to a selected Anchor." T " "}
   addUserKnob {22 reconnect_by_selection_this l this t "Force reconnect this Stamp to a selected Anchor, whatever its name or title.\nIMPORTANT: Use this carefully, and only when the normal reconnection doesn't work." -STARTLINE T stamps.wiredReconnectBySelection()}
   addUserKnob {22 reconnect_by_selection_similar l similar t "Force reconnect this Stamp and similar ones to a selected Anchor, whatever its name or title.\nIMPORTANT: Use this carefully, and only when the normal reconnection doesn't work." -STARTLINE T stamps.wiredReconnectBySelectionSimilar()}
   addUserKnob {22 reconnect_by_selection_selected l selected t "Force reconnect all selected Stamps to an also selected Anchor, whatever its name or title.\nIMPORTANT: Use this carefully, and only when the normal reconnection doesn't work." -STARTLINE T stamps.wiredReconnectBySelectionSelected()}
   addUserKnob {1 anchor l Anchor}
   anchor Anchor_25b668170c
   addUserKnob {6 auto_reconnect_by_title l "<font color=#ED9977>&nbsp; auto-reconnect by title" t "When creating this stamp again (like on copy-paste), auto-reconnect it by title instead of doing it by the saved anchor's name, and auto-turn this off immediately.\nIMPORTANT: Should be off by default. Only use this for setting up templates." +STARTLINE}
   addUserKnob {26 line2 l "" +STARTLINE}
   addUserKnob {22 buttonHelp l Help -STARTLINE T stamps.showHelp()}
   addUserKnob {26 version l " " t "Stamps by Adrian Pueyo and Alexey Kuchinski.\nUpdated May 18 2021." -STARTLINE T "<a href=\"http://www.nukepedia.com/gizmos/other/stamps\" style=\"color:#666;text-decoration: none;\"><span style=\"color:#666\"> <big>Stamps v1.1</big></b></a>"}
  }
push $N56244930
  PostageStamp {
   name Stamp51
   help "Stamps by Adrian Pueyo and Alexey Kuchinski.\nUpdated May 18 2021"
   onCreate "if nuke.GUI:\n    try:\n        import stamps; stamps.wiredOnCreate()\n    except:\n        pass\n"
   knobChanged "import stamps; stamps.wiredKnobChanged()"
   autolabel "nuke.thisNode().knob(\"title\").value()"
   tile_color 0x1000001
   note_font "Bitstream Vera Sans"
   note_font_size 20
   xpos 6029
   ypos -707
   hide_input true
   addUserKnob {20 wired_tab l "Wired Stamp"}
   addUserKnob {26 identifier -STARTLINE +HIDDEN T wired}
   addUserKnob {3 lockCallbacks l "" +STARTLINE +HIDDEN}
   addUserKnob {6 toReconnect -STARTLINE +HIDDEN}
   addUserKnob {1 title l Title: t "Displayed name on the Node Graph for this Stamp and its Anchor.\nIMPORTANT: This is only for display purposes, and is different from the real/internal name of the Stamps."}
   title smoke_SIDE
   addUserKnob {26 prev_title l "" +STARTLINE +HIDDEN T smoke_SIDE}
   addUserKnob {26 tags l Tags: t "Tags of this stamp's Anchor, for information purpose only.\nClick \"show anchor\" to change them." T <i>2D</i>}
   addUserKnob {26 backdrops l Backdrops: t "Labels of backdrop nodes which contain this stamp's Anchor." T "<i><Left>before or after Flare</i>"}
   addUserKnob {26 line1 l "" +STARTLINE}
   addUserKnob {6 postageStamp_show l "postage stamp" t "Enable the postage stamp thumbnail in this node.\nYou're seeing this because the class of this node includes the postage_stamp knob." +STARTLINE}
   addUserKnob {26 anchor_label l Anchor: T " "}
   addUserKnob {22 show_anchor l " show anchor " t "Show the properties panel for this Stamp's Anchor." -STARTLINE T stamps.wiredShowAnchor()}
   addUserKnob {22 zoom_anchor l "zoom anchor" t "Navigate to this Stamp's Anchor on the Node Graph." -STARTLINE T stamps.wiredZoomAnchor()}
   addUserKnob {26 stamps_label l Stamps: T " "}
   addUserKnob {22 zoomNext l " zoom next " t "Navigate to this Stamp's next sibling on the Node Graph." -STARTLINE T stamps.wiredZoomNext()}
   addUserKnob {22 selectSimilar l " select similar " t "Select all similar Stamps to this one on the Node Graph." -STARTLINE T stamps.wiredSelectSimilar()}
   addUserKnob {26 space_1 l "" +STARTLINE T " "}
   addUserKnob {26 reconnect_label l Reconnect: t "Reconnect by the stored Anchor name." T " "}
   addUserKnob {22 reconnect_this l this t "Reconnect this Stamp to its Anchor, by its stored Anchor name." -STARTLINE T "n = nuke.thisNode()\ntry:\n    n.setInput(0,nuke.toNode(n.knob(\"anchor\").value()))\nexcept:\n    nuke.message(\"Unable to reconnect.\")\ntry:\n    import stamps\n    stamps.wiredGetStyle(n)\nexcept:\n    pass\n"}
   addUserKnob {22 reconnect_similar l similar t "Reconnect this Stamp and similar ones to their Anchor, by their stored anchor name." -STARTLINE T stamps.wiredReconnectSimilar()}
   addUserKnob {22 reconnect_all l all t "Reconnect all the Stamps to their Anchors, by their stored anchor names." -STARTLINE T stamps.wiredReconnectAll()}
   addUserKnob {26 space_2 l "" +STARTLINE T " "}
   addUserKnob {20 advanced_reconnection l "Advanced Reconnection" n 2}
   addUserKnob {26 reconnect_by_title_label l "<font color=gold>By Title:" t "Reconnect by searching for a matching title." T " "}
   addUserKnob {22 reconnect_by_title_this l this t "Look for an Anchor that shares this Stamp's title, and connect this Stamp to it.\nIMPORTANT: Use this carefully, and only when the normal reconnection doesn't work." -STARTLINE T stamps.wiredReconnectByTitle()}
   addUserKnob {22 reconnect_by_title_similar l similar t "Look for an Anchor that shares this Stamp's title, and connect this Stamp and similar ones to it.\nIMPORTANT: Use this carefully, and only when the normal reconnection doesn't work." -STARTLINE T stamps.wiredReconnectByTitleSimilar()}
   addUserKnob {22 reconnect_by_title_selected l selected t "For each Stamp selected, look for an Anchor that shares its title, and connect to it.\nIMPORTANT: Use this carefully, and only when the normal reconnection doesn't work." -STARTLINE T stamps.wiredReconnectByTitleSelected()}
   addUserKnob {26 reconnect_by_selection_label l "<font color=orangered>By Selection:" t "Force reconnect to a selected Anchor." T " "}
   addUserKnob {22 reconnect_by_selection_this l this t "Force reconnect this Stamp to a selected Anchor, whatever its name or title.\nIMPORTANT: Use this carefully, and only when the normal reconnection doesn't work." -STARTLINE T stamps.wiredReconnectBySelection()}
   addUserKnob {22 reconnect_by_selection_similar l similar t "Force reconnect this Stamp and similar ones to a selected Anchor, whatever its name or title.\nIMPORTANT: Use this carefully, and only when the normal reconnection doesn't work." -STARTLINE T stamps.wiredReconnectBySelectionSimilar()}
   addUserKnob {22 reconnect_by_selection_selected l selected t "Force reconnect all selected Stamps to an also selected Anchor, whatever its name or title.\nIMPORTANT: Use this carefully, and only when the normal reconnection doesn't work." -STARTLINE T stamps.wiredReconnectBySelectionSelected()}
   addUserKnob {1 anchor l Anchor}
   anchor Anchor_232c9aab88
   addUserKnob {6 auto_reconnect_by_title l "<font color=#ED9977>&nbsp; auto-reconnect by title" t "When creating this stamp again (like on copy-paste), auto-reconnect it by title instead of doing it by the saved anchor's name, and auto-turn this off immediately.\nIMPORTANT: Should be off by default. Only use this for setting up templates." +STARTLINE}
   addUserKnob {26 line2 l "" +STARTLINE}
   addUserKnob {22 buttonHelp l Help -STARTLINE T stamps.showHelp()}
   addUserKnob {26 version l " " t "Stamps by Adrian Pueyo and Alexey Kuchinski.\nUpdated May 18 2021." -STARTLINE T "<a href=\"http://www.nukepedia.com/gizmos/other/stamps\" style=\"color:#666;text-decoration: none;\"><span style=\"color:#666\"> <big>Stamps v1.1</big></b></a>"}
  }
  Dot {
   name Dot34
   xpos 6063
   ypos -657
  }
  Group {
   inputs 3
   name gunshot17
   label "shot: \[value shotcount]\non frame: \[value shotstart]\n"
   xpos 5911
   ypos -630
   addUserKnob {20 User}
   addUserKnob {3 shotcount l shot}
   shotcount 17
   addUserKnob {3 shotstart l frame +INVISIBLE}
   shotstart {{"shotcount==0 ? 0 : shot\[value shotcount]-1" i}}
  }
   BackdropNode {
    inputs 0
    name BackdropNode19
    knobChanged "try:\n    listenedKnobs = \['text', 'position', 'name']\n    node = nuke.thisNode()\n    name = node.knob('name').value()\n    text = node.knob('text').value()\n    position = node.knob('position').value()\n    position = \"<\" + position + \">\"\n    label = node.knob('label').value()\n    \n    if nuke.thisKnob().name() in listenedKnobs:\n        if text == \"\":\n            if node.knob('position').value() == \"left\":\n                node.knob('label').setValue()\n            else:\n                node.knob('label').setValue(position + name)\n        else:\n            if node.knob('position').value() == \"left\":\n                node.knob('label').setValue(text)\n            else:\n                node.knob('label').setValue(position + text)\n                \n    elif nuke.thisKnob().name() == 'font_size':\n        fontSize = node.knob('font_size').value()\n        node.knob('note_font_size').setValue(fontSize)\nexcept:\n    pass"
    tile_color 0x232323ff
    label "<Left><h2> Gunshot"
    note_font_size 31.5
    xpos -693
    ypos -554
    bdwidth 876
    bdheight 1682
    addUserKnob {20 F_VFX l BackdropNode}
    addUserKnob {43 text l Text}
    text "<h2> Gunshot"
    addUserKnob {7 font_size l "Font Size" R 10 100}
    font_size 31.5
    addUserKnob {4 position l "" -STARTLINE M {Left Center}}
    addUserKnob {26 S01 l " " T " "}
    addUserKnob {22 grow l " <img src=\"F_scalep.png\">" -STARTLINE T "n=nuke.thisNode()\n\ndef grow(node=None,step=50):\n    try:\n        if not node:\n            n=nuke.selectedNode()\n        else:\n            n=node\n            n\['xpos'].setValue(n\['xpos'].getValue()-step)\n            n\['ypos'].setValue(n\['ypos'].getValue()-step)\n            n\['bdwidth'].setValue(n\['bdwidth'].getValue()+step*2)\n            n\['bdheight'].setValue(n\['bdheight'].getValue()+step*2)\n    except:\n        pass\ngrow(n,50)"}
    addUserKnob {22 shrink l " <img src=\"F_scalem.png\">" -STARTLINE T "n=nuke.thisNode()\n\ndef shrink(node=None,step=50):\n    try:\n        if not node:\n            n=nuke.selectedNode()\n        else:\n            n=node\n            n\['xpos'].setValue(n\['xpos'].getValue()+step)\n            n\['ypos'].setValue(n\['ypos'].getValue()+step)\n            n\['bdwidth'].setValue(n\['bdwidth'].getValue()-step*2)\n            n\['bdheight'].setValue(n\['bdheight'].getValue()-step*2)\n    except:\n        pass\nshrink(n,50)"}
    addUserKnob {22 colorandom l " <img src=\"ColorBars.png\">" -STARTLINE T "import colorsys, random\nn=nuke.thisNode()\nR,G,B= colorsys.hsv_to_rgb(random.random(),.1+random.random()*.15,.15+random.random()*.15)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ) )"}
    addUserKnob {22 darkgrey l "<font color=\"#232323\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.0, 0.0, 0.14]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 lightgrey l "<font color=\"#383838\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.0, 0.0, 0.22]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 red l "<font color=\"#8c3838\" size=6>■</font>" T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.0, 0.6, 0.55]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n" +STARTLINE}
    addUserKnob {22 orange l "<font color=\"#b28e59\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.1, 0.5, 0.7]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 yellow l "<font color=\"#ccc766\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.16, 0.5, 0.8]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 green l "<font color=\"#5d995b\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.33, 0.4, 0.6]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 cyan l "<font color=\"#72998f\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.46, 0.25, 0.6]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 blue l "<font color=\"#59687f\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.6, 0.3, 0.5]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 darkblue l "<font color=\"#63628c\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.67, 0.3, 0.55]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 magenta l "<font color=\"#927a99\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.8, 0.2, 0.6]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 pink l "<font color=\"#997a89\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.92, 0.2, 0.6]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {26 S02 l " " T " "}
    addUserKnob {26 Ftools l "" +STARTLINE T "<font color=\"#1C1C1C\"> v1.2 - Franklin VFX - 2018"}
   }
   BackdropNode {
    inputs 0
    name BackdropNode2
    knobChanged "try:\n    listenedKnobs = \['text', 'position', 'name']\n    node = nuke.thisNode()\n    name = node.knob('name').value()\n    text = node.knob('text').value()\n    position = node.knob('position').value()\n    position = \"<\" + position + \">\"\n    label = node.knob('label').value()\n    \n    if nuke.thisKnob().name() in listenedKnobs:\n        if text == \"\":\n            if node.knob('position').value() == \"left\":\n                node.knob('label').setValue()\n            else:\n                node.knob('label').setValue(position + name)\n        else:\n            if node.knob('position').value() == \"left\":\n                node.knob('label').setValue(text)\n            else:\n                node.knob('label').setValue(position + text)\n                \n    elif nuke.thisKnob().name() == 'font_size':\n        fontSize = node.knob('font_size').value()\n        node.knob('note_font_size').setValue(fontSize)\nexcept:\n    pass"
    tile_color 0x927a99ff
    note_font_size 50
    xpos -473
    ypos -221
    bdwidth 435
    bdheight 786
    z_order 1
    addUserKnob {20 F_VFX l BackdropNode}
    addUserKnob {43 text l Text}
    addUserKnob {7 font_size l "Font Size" R 10 100}
    font_size 50
    addUserKnob {4 position l "" -STARTLINE M {Left Center}}
    addUserKnob {26 S01 l " " T " "}
    addUserKnob {22 grow l " <img src=\"F_scalep.png\">" -STARTLINE T "n=nuke.thisNode()\n\ndef grow(node=None,step=50):\n    try:\n        if not node:\n            n=nuke.selectedNode()\n        else:\n            n=node\n            n\['xpos'].setValue(n\['xpos'].getValue()-step)\n            n\['ypos'].setValue(n\['ypos'].getValue()-step)\n            n\['bdwidth'].setValue(n\['bdwidth'].getValue()+step*2)\n            n\['bdheight'].setValue(n\['bdheight'].getValue()+step*2)\n    except:\n        pass\ngrow(n,50)"}
    addUserKnob {22 shrink l " <img src=\"F_scalem.png\">" -STARTLINE T "n=nuke.thisNode()\n\ndef shrink(node=None,step=50):\n    try:\n        if not node:\n            n=nuke.selectedNode()\n        else:\n            n=node\n            n\['xpos'].setValue(n\['xpos'].getValue()+step)\n            n\['ypos'].setValue(n\['ypos'].getValue()+step)\n            n\['bdwidth'].setValue(n\['bdwidth'].getValue()-step*2)\n            n\['bdheight'].setValue(n\['bdheight'].getValue()-step*2)\n    except:\n        pass\nshrink(n,50)"}
    addUserKnob {22 colorandom l " <img src=\"ColorBars.png\">" -STARTLINE T "import colorsys, random\nn=nuke.thisNode()\nR,G,B= colorsys.hsv_to_rgb(random.random(),.1+random.random()*.15,.15+random.random()*.15)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ) )"}
    addUserKnob {22 darkgrey l "<font color=\"#232323\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.0, 0.0, 0.14]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 lightgrey l "<font color=\"#383838\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.0, 0.0, 0.22]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 red l "<font color=\"#8c3838\" size=6>■</font>" T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.0, 0.6, 0.55]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n" +STARTLINE}
    addUserKnob {22 orange l "<font color=\"#b28e59\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.1, 0.5, 0.7]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 yellow l "<font color=\"#ccc766\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.16, 0.5, 0.8]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 green l "<font color=\"#5d995b\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.33, 0.4, 0.6]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 cyan l "<font color=\"#72998f\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.46, 0.25, 0.6]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 blue l "<font color=\"#59687f\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.6, 0.3, 0.5]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 darkblue l "<font color=\"#63628c\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.67, 0.3, 0.55]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 magenta l "<font color=\"#927a99\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.8, 0.2, 0.6]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 pink l "<font color=\"#997a89\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.92, 0.2, 0.6]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {26 S02 l " " T " "}
    addUserKnob {26 Ftools l "" +STARTLINE T "<font color=\"#1C1C1C\"> v1.2 - Franklin VFX - 2018"}
   }
   Constant {
    inputs 0
    channels rgb
    name Constant13
    xpos -643
    ypos 714
   }
   AdjBBox {
    numpixels {{size_bbox}}
    name AdjBBox13
    xpos -643
    ypos 849
   }
   Dot {
    name Dot78
    xpos -609
    ypos 987
   }
   Axis3 {
    inputs 0
    useMatrix true
    matrix {
        {{parent.cCard3D_1.matrix} {parent.cCard3D_1.matrix} {parent.cCard3D_1.matrix} {parent.cCard3D_1.matrix}}
        {{parent.cCard3D_1.matrix} {parent.cCard3D_1.matrix} {parent.cCard3D_1.matrix} {parent.cCard3D_1.matrix}}
        {{parent.cCard3D_1.matrix} {parent.cCard3D_1.matrix} {parent.cCard3D_1.matrix} {parent.cCard3D_1.matrix}}
        {{parent.cCard3D_1.matrix} {parent.cCard3D_1.matrix} {parent.cCard3D_1.matrix} {parent.cCard3D_1.matrix}}
      }
    name Axis14
    xpos -203
    ypos -90
   }
set N5e887b90 [stack 0]
push 0
   Input {
    inputs 0
    name top
    xpos -283
    ypos -1243
    number 1
   }
   TimeOffset {
    time_offset {{"shot_\[value shotnmbr]==0 ? 0 : shot_\[value shotnmbr]-1"}}
    time ""
    name CTimeOffset1
    label "shot: \[value shotnmbr]\non frame \[value time_offset]"
    xpos -283
    ypos -924
    addUserKnob {20 User}
    addUserKnob {3 shotnmbr l "shot "}
    shotnmbr {{shotcount}}
    addUserKnob {3 ref}
    ref {{time_offset+1}}
   }
   Group {
    name DecimalTimeOffset1
    tile_color 0xafa35dff
    label "random asset"
    note_font "Bitstream Vera Sans Bold"
    xpos -283
    ypos -841
    addUserKnob {20 User}
    addUserKnob {7 decimal l "time offset (decimal)"}
    decimal {{random(shotcount*seed)}}
    addUserKnob {26 ""}
    addUserKnob {26 _1 l "" +STARTLINE T "Chris Fryer | 2020\nupdated by Yorben Otto | 2024"}
   }
    Input {
     inputs 0
     name Input1
     xpos 426
     ypos -793
    }
    TimeOffset {
     time_offset {{(-floor(parent.decimal))*(DecimalTimeOffset1.decimal<0)}}
     time ""
     name TimeOffset1
     xpos 426
     ypos -675
    }
    Dot {
     name Dot6
     xpos 460
     ypos -635
    }
set N5e8c73f0 [stack 0]
    Dot {
     name Dot5
     xpos 350
     ypos -635
    }
    Dot {
     name Dot7
     xpos 350
     ypos -365
    }
push $N5e8c73f0
    Dot {
     name Dot1
     xpos 572
     ypos -635
    }
    TimeBlur {
     divisions 2
     shutter {{(parent.decimal-(floor(parent.decimal)))*2}}
     shutteroffset start
     shuttercustomoffset 0
     name TimeBlur1
     xpos 538
     ypos -558
    }
    Dot {
     name Dot2
     xpos 572
     ypos -490
    }
push $N5e8c73f0
    TimeBlur {
     divisions 2
     shutter {{parent.decimal*2}}
     shutteroffset start
     shuttercustomoffset 0
     name TimeBlur8
     xpos 426
     ypos -556
    }
    Switch {
     inputs 2
     which {{parent.decimal<0}}
     name Switch1
     xpos 426
     ypos -494
    }
    Multiply {
     value {{parent.TimeBlur8.divisions}}
     name Multiply6
     xpos 426
     ypos -436
    }
    Merge2 {
     inputs 2
     operation from
     name Merge6
     xpos 426
     ypos -369
    }
set N55b191e0 [stack 0]
    Output {
     name Output1
     xpos 426
     ypos -221
    }
push $N55b191e0
push $N55b191e0
    Viewer {
     inputs 2
     frame_range 1-100
     name Viewer1
     xpos 675
     ypos -246
    }
   end_group
   NoTimeBlur {
    name NoTimeBlur1
    xpos -283
    ypos -779
   }
   Transform {
    scale {{0.05+(0.05*(((parent.DecimalTimeOffset13.decimal-0.5)*2)*ScaleVariationSmoke))}}
    center {{root.width/2 x1015 2304} {root.height/2}}
    shutteroffset centred
    name Transform44
    xpos -283
    ypos -152
   }
   Card3D {
    inputs 3
    rot_order ZYX
    translate {0 0 0}
    rotate {90 0 0}
    shutteroffset centred
    name cCard3D25
    tile_color 0x7b1d1dff
    xpos -283
    ypos 11
    addUserKnob {20 User l parent}
    addUserKnob {22 python_button l "set parent" t "select parent node, and press this button to set the selected node as parent" +INVISIBLE T "n = nuke.selectedNode()\['name'].getValue()\nnuke.thisNode()\['string'].setValue(n)" +STARTLINE}
    addUserKnob {1 string l parent +INVISIBLE}
    string null
    addUserKnob {3 ref l "ref frame"}
    ref 1015
   }
   Transform {
    translate {{"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].translate.x(ref)\}]"} {"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].translate.y(ref)\}]"}}
    rotate {{"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].rotate-\[value parent_gun].rotate(ref)\}]"}}
    scale {{"\[if \{\[value parent_gun]==\"null\"\} \{return 1\} \{return 1+(\[value parent_gun].scale-\[value parent_gun].scale(ref))\}]"}}
    center {{"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].center.x(ref)\}]"} {"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].center.y(ref)\}]"}}
    name Transform_GUNMatchMove37
    xpos -283
    ypos 126
    addUserKnob {20 User l parent}
    addUserKnob {3 ref}
    ref {{parent.CTimeOffset.ref}}
   }
   Transform {
    translate {{"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].translate.x-\[value parent_env].translate.x(ref)\}]"} {"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].translate.y-\[value parent_env].translate.y(ref)\}]"}}
    rotate {{"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].rotate-\[value parent_env].rotate(ref)\}]"}}
    scale {{"\[if \{\[value parent_gun]==\"null\"\} \{return 1\} \{return 1+(\[value parent_env].scale-\[value parent_env].scale(ref))\}]"}}
    center {{"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].center.x(ref)\}]"} {"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].center.y(ref)\}]"}}
    motionblur 0.2
    shutter {{SmokeMB*0.5}}
    shutteroffset centred
    name Transform_ENVMatchMove37
    label "\n"
    xpos -283
    ypos 255
    addUserKnob {20 User l parent}
    addUserKnob {3 ref}
    ref {{parent.CTimeOffset.ref}}
   }
   Transform {
    translate {{"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return -((root.width/2)-(\[value parent_gun].center.x(1)+\[value parent_gun].translate.x(1)))\}]"} {"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return -((root.height/2)-(\[value parent_gun].center.y(1)+\[value parent_gun].translate.y(1)))\}]"}}
    name Transform_GUNMatchMove6
    label "alignment correction"
    xpos -283
    ypos 344
    addUserKnob {20 User l parent}
    addUserKnob {22 python_button l "set parent" t "select parent node, and press this button to set the selected node as parent" T "n = nuke.selectedNode()\['name'].getValue()\nnuke.thisNode()\['string'].setValue(n)" +STARTLINE}
    addUserKnob {1 string l parent}
    string Transform_MatchMove10
    addUserKnob {3 ref +INVISIBLE}
    ref {{parent.cCard3D_8.ref}}
   }
   Multiply {
    value {{math_matrix.result_y_smoke(parent.CTimeOffset.ref)}}
    name Angle_reveal_top1
    label TOP
    xpos -283
    ypos 403
   }
   Remove {
    operation keep
    channels rgb
    name Remove1
    xpos -283
    ypos 514
   }
push 0
   Switch {
    inputs 2
    which {{parent.Angle_reveal_top1.value>0.001}}
    name Switch1
    xpos -283
    ypos 660
   }
   Dot {
    name Dot82
    xpos -249
    ypos 705
   }
push 0
push $N5e887b90
push 0
   Input {
    inputs 0
    name front
    xpos -436
    ypos -1243
    number 2
   }
   TimeOffset {
    time_offset {{"shot_\[value shotnmbr]==0 ? 0 : shot_\[value shotnmbr]-1"}}
    time ""
    name CTimeOffset2
    label "shot: \[value shotnmbr]\non frame \[value time_offset]"
    xpos -436
    ypos -925
    addUserKnob {20 User}
    addUserKnob {3 shotnmbr l "shot "}
    shotnmbr {{shotcount}}
    addUserKnob {3 ref}
    ref {{time_offset+1}}
   }
   Group {
    name DecimalTimeOffset2
    tile_color 0xafa35dff
    label "random asset"
    note_font "Bitstream Vera Sans Bold"
    xpos -436
    ypos -842
    addUserKnob {20 User}
    addUserKnob {7 decimal l "time offset (decimal)"}
    decimal {{random(shotcount*seed)}}
    addUserKnob {26 ""}
    addUserKnob {26 _1 l "" +STARTLINE T "Chris Fryer | 2020\nupdated by Yorben Otto | 2024"}
   }
    Input {
     inputs 0
     name Input1
     xpos 426
     ypos -793
    }
    TimeOffset {
     time_offset {{(-floor(parent.decimal))*(DecimalTimeOffset2.decimal<0)}}
     time ""
     name TimeOffset1
     xpos 426
     ypos -675
    }
    Dot {
     name Dot6
     xpos 460
     ypos -635
    }
set N5cf65060 [stack 0]
    Dot {
     name Dot5
     xpos 350
     ypos -635
    }
    Dot {
     name Dot7
     xpos 350
     ypos -365
    }
push $N5cf65060
    Dot {
     name Dot1
     xpos 572
     ypos -635
    }
    TimeBlur {
     divisions 2
     shutter {{(parent.decimal-(floor(parent.decimal)))*2}}
     shutteroffset start
     shuttercustomoffset 0
     name TimeBlur1
     xpos 538
     ypos -558
    }
    Dot {
     name Dot2
     xpos 572
     ypos -490
    }
push $N5cf65060
    TimeBlur {
     divisions 2
     shutter {{parent.decimal*2}}
     shutteroffset start
     shuttercustomoffset 0
     name TimeBlur8
     xpos 426
     ypos -556
    }
    Switch {
     inputs 2
     which {{parent.decimal<0}}
     name Switch1
     xpos 426
     ypos -494
    }
    Multiply {
     value {{parent.TimeBlur8.divisions}}
     name Multiply6
     xpos 426
     ypos -436
    }
    Merge2 {
     inputs 2
     operation from
     name Merge6
     xpos 426
     ypos -369
    }
set N5cfa6fa0 [stack 0]
    Output {
     name Output1
     xpos 426
     ypos -221
    }
push $N5cfa6fa0
push $N5cfa6fa0
    Viewer {
     inputs 2
     frame_range 1-100
     name Viewer1
     xpos 675
     ypos -246
    }
   end_group
   NoTimeBlur {
    name NoTimeBlur5
    xpos -436
    ypos -780
   }
   Transform {
    scale {{0.05+(0.05*(((parent.DecimalTimeOffset13.decimal-0.5)*2)*ScaleVariationSmoke))}}
    center {{root.width/2 x1015 2304} {root.height/2}}
    shutteroffset centred
    name Transform45
    xpos -436
    ypos -151
   }
   Card3D {
    inputs 3
    rot_order ZYX
    translate {0 0 0}
    rotate {0 90 0}
    shutteroffset centred
    name cCard3D26
    tile_color 0x7b1d1dff
    xpos -436
    ypos 15
    addUserKnob {20 User l parent}
    addUserKnob {22 python_button l "set parent" t "select parent node, and press this button to set the selected node as parent" +INVISIBLE T "n = nuke.selectedNode()\['name'].getValue()\nnuke.thisNode()\['string'].setValue(n)" +STARTLINE}
    addUserKnob {1 string l parent +INVISIBLE}
    string null
    addUserKnob {3 ref l "ref frame"}
    ref 1015
   }
   Transform {
    translate {{"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].translate.x(ref)\}]"} {"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].translate.y(ref)\}]"}}
    rotate {{"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].rotate-\[value parent_gun].rotate(ref)\}]"}}
    scale {{"\[if \{\[value parent_gun]==\"null\"\} \{return 1\} \{return 1+(\[value parent_gun].scale-\[value parent_gun].scale(ref))\}]"}}
    center {{"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].center.x(ref)\}]"} {"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].center.y(ref)\}]"}}
    name Transform_GUNMatchMove38
    label "\n"
    xpos -436
    ypos 124
    addUserKnob {20 User l parent}
    addUserKnob {3 ref}
    ref {{parent.CTimeOffset.ref}}
   }
   Transform {
    translate {{"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].translate.x-\[value parent_env].translate.x(ref)\}]"} {"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].translate.y-\[value parent_env].translate.y(ref)\}]"}}
    rotate {{"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].rotate-\[value parent_env].rotate(ref)\}]"}}
    scale {{"\[if \{\[value parent_gun]==\"null\"\} \{return 1\} \{return 1+(\[value parent_env].scale-\[value parent_env].scale(ref))\}]"}}
    center {{"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].center.x(ref)\}]"} {"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].center.y(ref)\}]"}}
    motionblur 0.2
    shutter {{SmokeMB*0.5}}
    shutteroffset centred
    name Transform_ENVMatchMove38
    xpos -436
    ypos 254
    addUserKnob {20 User l parent}
    addUserKnob {3 ref}
    ref {{parent.CTimeOffset.ref}}
   }
   Transform {
    translate {{"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return -((root.width/2)-(\[value parent_gun].center.x(1)+\[value parent_gun].translate.x(1)))\}]"} {"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return -((root.height/2)-(\[value parent_gun].center.y(1)+\[value parent_gun].translate.y(1)))\}]"}}
    name Transform_GUNMatchMove7
    label "alignment correction"
    xpos -436
    ypos 343
    addUserKnob {20 User l parent}
    addUserKnob {22 python_button l "set parent" t "select parent node, and press this button to set the selected node as parent" T "n = nuke.selectedNode()\['name'].getValue()\nnuke.thisNode()\['string'].setValue(n)" +STARTLINE}
    addUserKnob {1 string l parent}
    string Transform_MatchMove10
    addUserKnob {3 ref +INVISIBLE}
    ref {{parent.cCard3D_8.ref}}
   }
   Multiply {
    value {{math_matrix.result_x_smoke(parent.CTimeOffset.ref)}}
    name Angle_reveal_front1
    label FRONT
    xpos -436
    ypos 401
   }
   Remove {
    operation keep
    channels rgb
    name Remove2
    xpos -436
    ypos 511
   }
push 0
   Switch {
    inputs 2
    which {{parent.Angle_reveal_front1.value>0.001}}
    name Switch2
    xpos -436
    ypos 660
   }
   Dot {
    name Dot83
    xpos -402
    ypos 735
   }
   Input {
    inputs 0
    name side
    xpos -130
    ypos -1242
   }
   TimeOffset {
    time_offset {{"shot_\[value shotnmbr]==0 ? 0 : shot_\[value shotnmbr]-1"}}
    time ""
    name CTimeOffset
    label "shot: \[value shotnmbr]\non frame \[value time_offset]"
    xpos -130
    ypos -927
    addUserKnob {20 User}
    addUserKnob {3 shotnmbr l "shot "}
    shotnmbr {{shotcount}}
    addUserKnob {3 ref}
    ref {{time_offset+1}}
   }
   Group {
    name DecimalTimeOffset13
    tile_color 0xafa35dff
    label "random asset"
    note_font "Bitstream Vera Sans Bold"
    xpos -130
    ypos -844
    addUserKnob {20 User}
    addUserKnob {7 decimal l "time offset (decimal)"}
    decimal {{random(shotcount*seed)}}
    addUserKnob {26 ""}
    addUserKnob {26 _1 l "" +STARTLINE T "Chris Fryer | 2020\nupdated by Yorben Otto | 2024"}
   }
    Input {
     inputs 0
     name Input1
     xpos 426
     ypos -793
    }
    TimeOffset {
     time_offset {{(-floor(parent.decimal))*(DecimalTimeOffset13.decimal<0)}}
     time ""
     name TimeOffset1
     xpos 426
     ypos -675
    }
    Dot {
     name Dot6
     xpos 460
     ypos -635
    }
set N59702d40 [stack 0]
    Dot {
     name Dot5
     xpos 350
     ypos -635
    }
    Dot {
     name Dot7
     xpos 350
     ypos -365
    }
push $N59702d40
    Dot {
     name Dot1
     xpos 572
     ypos -635
    }
    TimeBlur {
     divisions 2
     shutter {{(parent.decimal-(floor(parent.decimal)))*2}}
     shutteroffset start
     shuttercustomoffset 0
     name TimeBlur1
     xpos 538
     ypos -558
    }
    Dot {
     name Dot2
     xpos 572
     ypos -490
    }
push $N59702d40
    TimeBlur {
     divisions 2
     shutter {{parent.decimal*2}}
     shutteroffset start
     shuttercustomoffset 0
     name TimeBlur8
     xpos 426
     ypos -556
    }
    Switch {
     inputs 2
     which {{parent.decimal<0}}
     name Switch1
     xpos 426
     ypos -494
    }
    Multiply {
     value {{parent.TimeBlur8.divisions}}
     name Multiply6
     xpos 426
     ypos -436
    }
    Merge2 {
     inputs 2
     operation from
     name Merge6
     xpos 426
     ypos -369
    }
set N59744c80 [stack 0]
    Output {
     name Output1
     xpos 426
     ypos -221
    }
push $N59744c80
push $N59744c80
    Viewer {
     inputs 2
     frame_range 1-100
     name Viewer1
     xpos 675
     ypos -246
    }
   end_group
   NoTimeBlur {
    name NoTimeBlur13
    xpos -130
    ypos -782
   }
   Transform {
    scale {{0.05+(0.05*(((parent.DecimalTimeOffset13.decimal-0.5)*2)*ScaleVariationSmoke))}}
    center {{root.width/2 x1015 2304} {root.height/2}}
    shutteroffset centred
    name Transform46
    xpos -130
    ypos -155
   }
   Card3D {
    translate {{"\[if \{\[exists  parent.parent.parent.input0]\} \{return \[value \[topnode parent.parent.parent.input0].name].translate.x(ref)\} \{return 0\}]"} {"\[if \{\[exists  parent.parent.parent.input0]\} \{return \[value \[topnode parent.parent.parent.input0].name].translate.y(ref)\} \{return 0\}]"} {"\[if \{\[exists  parent.parent.parent.input0]\} \{return \[value \[topnode parent.parent.parent.input0].name].translate.z(ref)\} \{return -1\}]"}}
    rotate {{"\[if \{\[exists  parent.parent.parent.input0]\} \{return \[value \[topnode parent.parent.parent.input0].name].rotate.x(ref)\} \{return 0\}]"} {"\[if \{\[exists  parent.parent.parent.input0]\} \{return \[value \[topnode parent.parent.parent.input0].name].rotate.y(ref)\} \{return 0\}]"} {"\[if \{\[exists  parent.parent.parent.input0]\} \{return \[value \[topnode parent.parent.parent.input0].name].rotate.z(ref)\} \{return 0\}]"}}
    scaling {{"\[if \{\[exists  parent.parent.parent.input0]\} \{return \[value \[topnode parent.parent.parent.input0].name].scaling.x(ref)\} \{return 1\}]"} {"\[if \{\[exists  parent.parent.parent.input0]\} \{return \[value \[topnode parent.parent.parent.input0].name].scaling.y(ref)\} \{return 1\}]"} {"\[if \{\[exists  parent.parent.parent.input0]\} \{return \[value \[topnode parent.parent.parent.input0].name].scaling.z(ref)\} \{return 1\}]"}}
    uniform_scale {{"\[if \{\[exists  parent.parent.parent.input0]\} \{return (\[value \[topnode parent.parent.parent.input0].name].uniform_scale(ref)*25)\} \{return 25\}]"}}
    shutteroffset centred
    name cCard3D_1
    tile_color 0x7b1d1dff
    label "ref frame: \[value ref]"
    xpos -130
    ypos 2
    addUserKnob {20 User l parent}
    addUserKnob {22 python_button l "set parent" t "select parent node, and press this button to set the selected node as parent" +INVISIBLE T "n = nuke.selectedNode()\['name'].getValue()\nnuke.thisNode()\['string'].setValue(n)" +STARTLINE}
    addUserKnob {1 string l parent +INVISIBLE}
    string null
    addUserKnob {3 id l "id number"}
    id {{parent.CTimeOffset.shotnmbr}}
    addUserKnob {3 ref l "ref frame"}
    ref {{parent.CTimeOffset.ref}}
   }
   Transform {
    translate {{"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].translate.x(ref)\}]"} {"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].translate.y(ref)\}]"}}
    rotate {{"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].rotate-\[value parent_gun].rotate(ref)\}]"}}
    scale {{"\[if \{\[value parent_gun]==\"null\"\} \{return 1\} \{return 1+(\[value parent_gun].scale-\[value parent_gun].scale(ref))\}]"}}
    center {{"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].center.x(ref)\}]"} {"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].center.y(ref)\}]"}}
    name Transform_GUNMatchMove39
    label "\n"
    xpos -130
    ypos 124
    addUserKnob {20 User l parent}
    addUserKnob {3 ref}
    ref {{parent.CTimeOffset.ref}}
   }
   Transform {
    translate {{"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].translate.x-\[value parent_env].translate.x(ref)\}]"} {"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].translate.y-\[value parent_env].translate.y(ref)\}]"}}
    rotate {{"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].rotate-\[value parent_env].rotate(ref)\}]"}}
    scale {{"\[if \{\[value parent_gun]==\"null\"\} \{return 1\} \{return 1+(\[value parent_env].scale-\[value parent_env].scale(ref))\}]"}}
    center {{"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].center.x(ref)\}]"} {"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].center.y(ref)\}]"}}
    motionblur 0.2
    shutter {{SmokeMB*0.5}}
    shutteroffset centred
    name Transform_ENVMatchMove39
    xpos -130
    ypos 258
    addUserKnob {20 User l parent}
    addUserKnob {3 ref}
    ref {{parent.CTimeOffset.ref}}
   }
   Transform {
    translate {{"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return -((root.width/2)-(\[value parent_gun].center.x(1)+\[value parent_gun].translate.x(1)))\}]"} {"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return -((root.height/2)-(\[value parent_gun].center.y(1)+\[value parent_gun].translate.y(1)))\}]"}}
    name Transform_GUNMatchMove5
    label "alignment correction"
    xpos -130
    ypos 340
    addUserKnob {20 User l parent}
    addUserKnob {22 python_button l "set parent" t "select parent node, and press this button to set the selected node as parent" T "n = nuke.selectedNode()\['name'].getValue()\nnuke.thisNode()\['string'].setValue(n)" +STARTLINE}
    addUserKnob {1 string l parent}
    string Transform_MatchMove10
    addUserKnob {3 ref +INVISIBLE}
    ref {{parent.cCard3D_8.ref}}
   }
   Multiply {
    value {{math_matrix.result_z_smoke(parent.CTimeOffset.ref)}}
    name Angle_reveal_side1
    label SIDE
    xpos -130
    ypos 404
   }
   Remove {
    operation keep
    channels rgb
    name Remove39
    xpos -130
    ypos 514
   }
push 0
   Switch {
    inputs 2
    which {{parent.Angle_reveal_side1.value>0.001}}
    name Switch3
    xpos -130
    ypos 658
   }
   Merge2 {
    inputs 3+1
    operation max
    Achannels rgb
    Bchannels rgb
    output rgb
    name Merge28
    xpos -130
    ypos 731
   }
   Merge2 {
    inputs 2
    operation plus
    bbox intersection
    Achannels rgb
    Bchannels rgb
    output rgb
    name Merge29
    xpos -130
    ypos 983
   }
   Shuffle2 {
    fromInput1 {{0} B}
    fromInput2 {{0} B}
    mappings "4 rgba.red 0 0 rgba.red 0 0 rgba.green 0 1 rgba.green 0 1 rgba.blue 0 2 rgba.alpha 0 3 rgba.blue 0 2 rgba.blue 0 2"
    name Shuffle1
    xpos -130
    ypos 1021
   }
push 0
   Switch {
    inputs 2
    which {{"shot_\[value count]==0?0:frame>=shot_\[value count]"}}
    name cSwitch_13
    xpos -130
    ypos 1078
    addUserKnob {20 User}
    addUserKnob {3 count}
    count {{parent.CTimeOffset.shotnmbr}}
   }
   Output {
    name Output1
    xpos -130
    ypos 1323
   }
   StickyNote {
    inputs 0
    name StickyNote1
    label "<-- handy to break concatonation?  "
    xpos -39
    ypos 193
   }
  end_group
push $N586971d0
  PostageStamp {
   name Stamp46
   help "Stamps by Adrian Pueyo and Alexey Kuchinski.\nUpdated May 18 2021"
   onCreate "if nuke.GUI:\n    try:\n        import stamps; stamps.wiredOnCreate()\n    except:\n        pass\n"
   knobChanged "import stamps; stamps.wiredKnobChanged()"
   autolabel "nuke.thisNode().knob(\"title\").value()"
   tile_color 0x1000001
   note_font "Bitstream Vera Sans"
   note_font_size 20
   xpos 5397
   ypos -702
   hide_input true
   addUserKnob {20 wired_tab l "Wired Stamp"}
   addUserKnob {26 identifier -STARTLINE +HIDDEN T wired}
   addUserKnob {3 lockCallbacks l "" +STARTLINE +HIDDEN}
   addUserKnob {6 toReconnect -STARTLINE +HIDDEN}
   addUserKnob {1 title l Title: t "Displayed name on the Node Graph for this Stamp and its Anchor.\nIMPORTANT: This is only for display purposes, and is different from the real/internal name of the Stamps."}
   title smoke_FRONT
   addUserKnob {26 prev_title l "" +STARTLINE +HIDDEN T smoke_FRONT}
   addUserKnob {26 tags l Tags: t "Tags of this stamp's Anchor, for information purpose only.\nClick \"show anchor\" to change them." T <i>2D</i>}
   addUserKnob {26 backdrops l Backdrops: t "Labels of backdrop nodes which contain this stamp's Anchor." T "<i><Left>before or after Flare</i>"}
   addUserKnob {26 line1 l "" +STARTLINE}
   addUserKnob {6 postageStamp_show l "postage stamp" t "Enable the postage stamp thumbnail in this node.\nYou're seeing this because the class of this node includes the postage_stamp knob." +STARTLINE}
   addUserKnob {26 anchor_label l Anchor: T " "}
   addUserKnob {22 show_anchor l " show anchor " t "Show the properties panel for this Stamp's Anchor." -STARTLINE T stamps.wiredShowAnchor()}
   addUserKnob {22 zoom_anchor l "zoom anchor" t "Navigate to this Stamp's Anchor on the Node Graph." -STARTLINE T stamps.wiredZoomAnchor()}
   addUserKnob {26 stamps_label l Stamps: T " "}
   addUserKnob {22 zoomNext l " zoom next " t "Navigate to this Stamp's next sibling on the Node Graph." -STARTLINE T stamps.wiredZoomNext()}
   addUserKnob {22 selectSimilar l " select similar " t "Select all similar Stamps to this one on the Node Graph." -STARTLINE T stamps.wiredSelectSimilar()}
   addUserKnob {26 space_1 l "" +STARTLINE T " "}
   addUserKnob {26 reconnect_label l Reconnect: t "Reconnect by the stored Anchor name." T " "}
   addUserKnob {22 reconnect_this l this t "Reconnect this Stamp to its Anchor, by its stored Anchor name." -STARTLINE T "n = nuke.thisNode()\ntry:\n    n.setInput(0,nuke.toNode(n.knob(\"anchor\").value()))\nexcept:\n    nuke.message(\"Unable to reconnect.\")\ntry:\n    import stamps\n    stamps.wiredGetStyle(n)\nexcept:\n    pass\n"}
   addUserKnob {22 reconnect_similar l similar t "Reconnect this Stamp and similar ones to their Anchor, by their stored anchor name." -STARTLINE T stamps.wiredReconnectSimilar()}
   addUserKnob {22 reconnect_all l all t "Reconnect all the Stamps to their Anchors, by their stored anchor names." -STARTLINE T stamps.wiredReconnectAll()}
   addUserKnob {26 space_2 l "" +STARTLINE T " "}
   addUserKnob {20 advanced_reconnection l "Advanced Reconnection" n 2}
   addUserKnob {26 reconnect_by_title_label l "<font color=gold>By Title:" t "Reconnect by searching for a matching title." T " "}
   addUserKnob {22 reconnect_by_title_this l this t "Look for an Anchor that shares this Stamp's title, and connect this Stamp to it.\nIMPORTANT: Use this carefully, and only when the normal reconnection doesn't work." -STARTLINE T stamps.wiredReconnectByTitle()}
   addUserKnob {22 reconnect_by_title_similar l similar t "Look for an Anchor that shares this Stamp's title, and connect this Stamp and similar ones to it.\nIMPORTANT: Use this carefully, and only when the normal reconnection doesn't work." -STARTLINE T stamps.wiredReconnectByTitleSimilar()}
   addUserKnob {22 reconnect_by_title_selected l selected t "For each Stamp selected, look for an Anchor that shares its title, and connect to it.\nIMPORTANT: Use this carefully, and only when the normal reconnection doesn't work." -STARTLINE T stamps.wiredReconnectByTitleSelected()}
   addUserKnob {26 reconnect_by_selection_label l "<font color=orangered>By Selection:" t "Force reconnect to a selected Anchor." T " "}
   addUserKnob {22 reconnect_by_selection_this l this t "Force reconnect this Stamp to a selected Anchor, whatever its name or title.\nIMPORTANT: Use this carefully, and only when the normal reconnection doesn't work." -STARTLINE T stamps.wiredReconnectBySelection()}
   addUserKnob {22 reconnect_by_selection_similar l similar t "Force reconnect this Stamp and similar ones to a selected Anchor, whatever its name or title.\nIMPORTANT: Use this carefully, and only when the normal reconnection doesn't work." -STARTLINE T stamps.wiredReconnectBySelectionSimilar()}
   addUserKnob {22 reconnect_by_selection_selected l selected t "Force reconnect all selected Stamps to an also selected Anchor, whatever its name or title.\nIMPORTANT: Use this carefully, and only when the normal reconnection doesn't work." -STARTLINE T stamps.wiredReconnectBySelectionSelected()}
   addUserKnob {1 anchor l Anchor}
   anchor Anchor_220a2be282
   addUserKnob {6 auto_reconnect_by_title l "<font color=#ED9977>&nbsp; auto-reconnect by title" t "When creating this stamp again (like on copy-paste), auto-reconnect it by title instead of doing it by the saved anchor's name, and auto-turn this off immediately.\nIMPORTANT: Should be off by default. Only use this for setting up templates." +STARTLINE}
   addUserKnob {26 line2 l "" +STARTLINE}
   addUserKnob {22 buttonHelp l Help -STARTLINE T stamps.showHelp()}
   addUserKnob {26 version l " " t "Stamps by Adrian Pueyo and Alexey Kuchinski.\nUpdated May 18 2021." -STARTLINE T "<a href=\"http://www.nukepedia.com/gizmos/other/stamps\" style=\"color:#666;text-decoration: none;\"><span style=\"color:#666\"> <big>Stamps v1.1</big></b></a>"}
  }
  Dot {
   name Dot31
   xpos 5431
   ypos -654
  }
push $N58d70c10
  PostageStamp {
   name Stamp47
   help "Stamps by Adrian Pueyo and Alexey Kuchinski.\nUpdated May 18 2021"
   onCreate "if nuke.GUI:\n    try:\n        import stamps; stamps.wiredOnCreate()\n    except:\n        pass\n"
   knobChanged "import stamps; stamps.wiredKnobChanged()"
   autolabel "nuke.thisNode().knob(\"title\").value()"
   tile_color 0x1000001
   note_font "Bitstream Vera Sans"
   note_font_size 20
   xpos 5522
   ypos -702
   hide_input true
   addUserKnob {20 wired_tab l "Wired Stamp"}
   addUserKnob {26 identifier -STARTLINE +HIDDEN T wired}
   addUserKnob {3 lockCallbacks l "" +STARTLINE +HIDDEN}
   addUserKnob {6 toReconnect -STARTLINE +HIDDEN}
   addUserKnob {1 title l Title: t "Displayed name on the Node Graph for this Stamp and its Anchor.\nIMPORTANT: This is only for display purposes, and is different from the real/internal name of the Stamps."}
   title smoke_TOP
   addUserKnob {26 prev_title l "" +STARTLINE +HIDDEN T smoke_TOP}
   addUserKnob {26 tags l Tags: t "Tags of this stamp's Anchor, for information purpose only.\nClick \"show anchor\" to change them." T <i>2D</i>}
   addUserKnob {26 backdrops l Backdrops: t "Labels of backdrop nodes which contain this stamp's Anchor." T "<i><Left>before or after Flare</i>"}
   addUserKnob {26 line1 l "" +STARTLINE}
   addUserKnob {6 postageStamp_show l "postage stamp" t "Enable the postage stamp thumbnail in this node.\nYou're seeing this because the class of this node includes the postage_stamp knob." +STARTLINE}
   addUserKnob {26 anchor_label l Anchor: T " "}
   addUserKnob {22 show_anchor l " show anchor " t "Show the properties panel for this Stamp's Anchor." -STARTLINE T stamps.wiredShowAnchor()}
   addUserKnob {22 zoom_anchor l "zoom anchor" t "Navigate to this Stamp's Anchor on the Node Graph." -STARTLINE T stamps.wiredZoomAnchor()}
   addUserKnob {26 stamps_label l Stamps: T " "}
   addUserKnob {22 zoomNext l " zoom next " t "Navigate to this Stamp's next sibling on the Node Graph." -STARTLINE T stamps.wiredZoomNext()}
   addUserKnob {22 selectSimilar l " select similar " t "Select all similar Stamps to this one on the Node Graph." -STARTLINE T stamps.wiredSelectSimilar()}
   addUserKnob {26 space_1 l "" +STARTLINE T " "}
   addUserKnob {26 reconnect_label l Reconnect: t "Reconnect by the stored Anchor name." T " "}
   addUserKnob {22 reconnect_this l this t "Reconnect this Stamp to its Anchor, by its stored Anchor name." -STARTLINE T "n = nuke.thisNode()\ntry:\n    n.setInput(0,nuke.toNode(n.knob(\"anchor\").value()))\nexcept:\n    nuke.message(\"Unable to reconnect.\")\ntry:\n    import stamps\n    stamps.wiredGetStyle(n)\nexcept:\n    pass\n"}
   addUserKnob {22 reconnect_similar l similar t "Reconnect this Stamp and similar ones to their Anchor, by their stored anchor name." -STARTLINE T stamps.wiredReconnectSimilar()}
   addUserKnob {22 reconnect_all l all t "Reconnect all the Stamps to their Anchors, by their stored anchor names." -STARTLINE T stamps.wiredReconnectAll()}
   addUserKnob {26 space_2 l "" +STARTLINE T " "}
   addUserKnob {20 advanced_reconnection l "Advanced Reconnection" n 2}
   addUserKnob {26 reconnect_by_title_label l "<font color=gold>By Title:" t "Reconnect by searching for a matching title." T " "}
   addUserKnob {22 reconnect_by_title_this l this t "Look for an Anchor that shares this Stamp's title, and connect this Stamp to it.\nIMPORTANT: Use this carefully, and only when the normal reconnection doesn't work." -STARTLINE T stamps.wiredReconnectByTitle()}
   addUserKnob {22 reconnect_by_title_similar l similar t "Look for an Anchor that shares this Stamp's title, and connect this Stamp and similar ones to it.\nIMPORTANT: Use this carefully, and only when the normal reconnection doesn't work." -STARTLINE T stamps.wiredReconnectByTitleSimilar()}
   addUserKnob {22 reconnect_by_title_selected l selected t "For each Stamp selected, look for an Anchor that shares its title, and connect to it.\nIMPORTANT: Use this carefully, and only when the normal reconnection doesn't work." -STARTLINE T stamps.wiredReconnectByTitleSelected()}
   addUserKnob {26 reconnect_by_selection_label l "<font color=orangered>By Selection:" t "Force reconnect to a selected Anchor." T " "}
   addUserKnob {22 reconnect_by_selection_this l this t "Force reconnect this Stamp to a selected Anchor, whatever its name or title.\nIMPORTANT: Use this carefully, and only when the normal reconnection doesn't work." -STARTLINE T stamps.wiredReconnectBySelection()}
   addUserKnob {22 reconnect_by_selection_similar l similar t "Force reconnect this Stamp and similar ones to a selected Anchor, whatever its name or title.\nIMPORTANT: Use this carefully, and only when the normal reconnection doesn't work." -STARTLINE T stamps.wiredReconnectBySelectionSimilar()}
   addUserKnob {22 reconnect_by_selection_selected l selected t "Force reconnect all selected Stamps to an also selected Anchor, whatever its name or title.\nIMPORTANT: Use this carefully, and only when the normal reconnection doesn't work." -STARTLINE T stamps.wiredReconnectBySelectionSelected()}
   addUserKnob {1 anchor l Anchor}
   anchor Anchor_25b668170c
   addUserKnob {6 auto_reconnect_by_title l "<font color=#ED9977>&nbsp; auto-reconnect by title" t "When creating this stamp again (like on copy-paste), auto-reconnect it by title instead of doing it by the saved anchor's name, and auto-turn this off immediately.\nIMPORTANT: Should be off by default. Only use this for setting up templates." +STARTLINE}
   addUserKnob {26 line2 l "" +STARTLINE}
   addUserKnob {22 buttonHelp l Help -STARTLINE T stamps.showHelp()}
   addUserKnob {26 version l " " t "Stamps by Adrian Pueyo and Alexey Kuchinski.\nUpdated May 18 2021." -STARTLINE T "<a href=\"http://www.nukepedia.com/gizmos/other/stamps\" style=\"color:#666;text-decoration: none;\"><span style=\"color:#666\"> <big>Stamps v1.1</big></b></a>"}
  }
push $N56244930
  PostageStamp {
   name Stamp48
   help "Stamps by Adrian Pueyo and Alexey Kuchinski.\nUpdated May 18 2021"
   onCreate "if nuke.GUI:\n    try:\n        import stamps; stamps.wiredOnCreate()\n    except:\n        pass\n"
   knobChanged "import stamps; stamps.wiredKnobChanged()"
   autolabel "nuke.thisNode().knob(\"title\").value()"
   tile_color 0x1000001
   note_font "Bitstream Vera Sans"
   note_font_size 20
   xpos 5640
   ypos -704
   hide_input true
   addUserKnob {20 wired_tab l "Wired Stamp"}
   addUserKnob {26 identifier -STARTLINE +HIDDEN T wired}
   addUserKnob {3 lockCallbacks l "" +STARTLINE +HIDDEN}
   addUserKnob {6 toReconnect -STARTLINE +HIDDEN}
   addUserKnob {1 title l Title: t "Displayed name on the Node Graph for this Stamp and its Anchor.\nIMPORTANT: This is only for display purposes, and is different from the real/internal name of the Stamps."}
   title smoke_SIDE
   addUserKnob {26 prev_title l "" +STARTLINE +HIDDEN T smoke_SIDE}
   addUserKnob {26 tags l Tags: t "Tags of this stamp's Anchor, for information purpose only.\nClick \"show anchor\" to change them." T <i>2D</i>}
   addUserKnob {26 backdrops l Backdrops: t "Labels of backdrop nodes which contain this stamp's Anchor." T "<i><Left>before or after Flare</i>"}
   addUserKnob {26 line1 l "" +STARTLINE}
   addUserKnob {6 postageStamp_show l "postage stamp" t "Enable the postage stamp thumbnail in this node.\nYou're seeing this because the class of this node includes the postage_stamp knob." +STARTLINE}
   addUserKnob {26 anchor_label l Anchor: T " "}
   addUserKnob {22 show_anchor l " show anchor " t "Show the properties panel for this Stamp's Anchor." -STARTLINE T stamps.wiredShowAnchor()}
   addUserKnob {22 zoom_anchor l "zoom anchor" t "Navigate to this Stamp's Anchor on the Node Graph." -STARTLINE T stamps.wiredZoomAnchor()}
   addUserKnob {26 stamps_label l Stamps: T " "}
   addUserKnob {22 zoomNext l " zoom next " t "Navigate to this Stamp's next sibling on the Node Graph." -STARTLINE T stamps.wiredZoomNext()}
   addUserKnob {22 selectSimilar l " select similar " t "Select all similar Stamps to this one on the Node Graph." -STARTLINE T stamps.wiredSelectSimilar()}
   addUserKnob {26 space_1 l "" +STARTLINE T " "}
   addUserKnob {26 reconnect_label l Reconnect: t "Reconnect by the stored Anchor name." T " "}
   addUserKnob {22 reconnect_this l this t "Reconnect this Stamp to its Anchor, by its stored Anchor name." -STARTLINE T "n = nuke.thisNode()\ntry:\n    n.setInput(0,nuke.toNode(n.knob(\"anchor\").value()))\nexcept:\n    nuke.message(\"Unable to reconnect.\")\ntry:\n    import stamps\n    stamps.wiredGetStyle(n)\nexcept:\n    pass\n"}
   addUserKnob {22 reconnect_similar l similar t "Reconnect this Stamp and similar ones to their Anchor, by their stored anchor name." -STARTLINE T stamps.wiredReconnectSimilar()}
   addUserKnob {22 reconnect_all l all t "Reconnect all the Stamps to their Anchors, by their stored anchor names." -STARTLINE T stamps.wiredReconnectAll()}
   addUserKnob {26 space_2 l "" +STARTLINE T " "}
   addUserKnob {20 advanced_reconnection l "Advanced Reconnection" n 2}
   addUserKnob {26 reconnect_by_title_label l "<font color=gold>By Title:" t "Reconnect by searching for a matching title." T " "}
   addUserKnob {22 reconnect_by_title_this l this t "Look for an Anchor that shares this Stamp's title, and connect this Stamp to it.\nIMPORTANT: Use this carefully, and only when the normal reconnection doesn't work." -STARTLINE T stamps.wiredReconnectByTitle()}
   addUserKnob {22 reconnect_by_title_similar l similar t "Look for an Anchor that shares this Stamp's title, and connect this Stamp and similar ones to it.\nIMPORTANT: Use this carefully, and only when the normal reconnection doesn't work." -STARTLINE T stamps.wiredReconnectByTitleSimilar()}
   addUserKnob {22 reconnect_by_title_selected l selected t "For each Stamp selected, look for an Anchor that shares its title, and connect to it.\nIMPORTANT: Use this carefully, and only when the normal reconnection doesn't work." -STARTLINE T stamps.wiredReconnectByTitleSelected()}
   addUserKnob {26 reconnect_by_selection_label l "<font color=orangered>By Selection:" t "Force reconnect to a selected Anchor." T " "}
   addUserKnob {22 reconnect_by_selection_this l this t "Force reconnect this Stamp to a selected Anchor, whatever its name or title.\nIMPORTANT: Use this carefully, and only when the normal reconnection doesn't work." -STARTLINE T stamps.wiredReconnectBySelection()}
   addUserKnob {22 reconnect_by_selection_similar l similar t "Force reconnect this Stamp and similar ones to a selected Anchor, whatever its name or title.\nIMPORTANT: Use this carefully, and only when the normal reconnection doesn't work." -STARTLINE T stamps.wiredReconnectBySelectionSimilar()}
   addUserKnob {22 reconnect_by_selection_selected l selected t "Force reconnect all selected Stamps to an also selected Anchor, whatever its name or title.\nIMPORTANT: Use this carefully, and only when the normal reconnection doesn't work." -STARTLINE T stamps.wiredReconnectBySelectionSelected()}
   addUserKnob {1 anchor l Anchor}
   anchor Anchor_232c9aab88
   addUserKnob {6 auto_reconnect_by_title l "<font color=#ED9977>&nbsp; auto-reconnect by title" t "When creating this stamp again (like on copy-paste), auto-reconnect it by title instead of doing it by the saved anchor's name, and auto-turn this off immediately.\nIMPORTANT: Should be off by default. Only use this for setting up templates." +STARTLINE}
   addUserKnob {26 line2 l "" +STARTLINE}
   addUserKnob {22 buttonHelp l Help -STARTLINE T stamps.showHelp()}
   addUserKnob {26 version l " " t "Stamps by Adrian Pueyo and Alexey Kuchinski.\nUpdated May 18 2021." -STARTLINE T "<a href=\"http://www.nukepedia.com/gizmos/other/stamps\" style=\"color:#666;text-decoration: none;\"><span style=\"color:#666\"> <big>Stamps v1.1</big></b></a>"}
  }
  Dot {
   name Dot32
   xpos 5674
   ypos -654
  }
  Group {
   inputs 3
   name gunshot16
   label "shot: \[value shotcount]\non frame: \[value shotstart]\n"
   xpos 5522
   ypos -627
   addUserKnob {20 User}
   addUserKnob {3 shotcount l shot}
   shotcount 16
   addUserKnob {3 shotstart l frame +INVISIBLE}
   shotstart {{"shotcount==0 ? 0 : shot\[value shotcount]-1" i}}
  }
   BackdropNode {
    inputs 0
    name BackdropNode19
    knobChanged "try:\n    listenedKnobs = \['text', 'position', 'name']\n    node = nuke.thisNode()\n    name = node.knob('name').value()\n    text = node.knob('text').value()\n    position = node.knob('position').value()\n    position = \"<\" + position + \">\"\n    label = node.knob('label').value()\n    \n    if nuke.thisKnob().name() in listenedKnobs:\n        if text == \"\":\n            if node.knob('position').value() == \"left\":\n                node.knob('label').setValue()\n            else:\n                node.knob('label').setValue(position + name)\n        else:\n            if node.knob('position').value() == \"left\":\n                node.knob('label').setValue(text)\n            else:\n                node.knob('label').setValue(position + text)\n                \n    elif nuke.thisKnob().name() == 'font_size':\n        fontSize = node.knob('font_size').value()\n        node.knob('note_font_size').setValue(fontSize)\nexcept:\n    pass"
    tile_color 0x232323ff
    label "<Left><h2> Gunshot"
    note_font_size 31.5
    xpos -693
    ypos -554
    bdwidth 876
    bdheight 1682
    addUserKnob {20 F_VFX l BackdropNode}
    addUserKnob {43 text l Text}
    text "<h2> Gunshot"
    addUserKnob {7 font_size l "Font Size" R 10 100}
    font_size 31.5
    addUserKnob {4 position l "" -STARTLINE M {Left Center}}
    addUserKnob {26 S01 l " " T " "}
    addUserKnob {22 grow l " <img src=\"F_scalep.png\">" -STARTLINE T "n=nuke.thisNode()\n\ndef grow(node=None,step=50):\n    try:\n        if not node:\n            n=nuke.selectedNode()\n        else:\n            n=node\n            n\['xpos'].setValue(n\['xpos'].getValue()-step)\n            n\['ypos'].setValue(n\['ypos'].getValue()-step)\n            n\['bdwidth'].setValue(n\['bdwidth'].getValue()+step*2)\n            n\['bdheight'].setValue(n\['bdheight'].getValue()+step*2)\n    except:\n        pass\ngrow(n,50)"}
    addUserKnob {22 shrink l " <img src=\"F_scalem.png\">" -STARTLINE T "n=nuke.thisNode()\n\ndef shrink(node=None,step=50):\n    try:\n        if not node:\n            n=nuke.selectedNode()\n        else:\n            n=node\n            n\['xpos'].setValue(n\['xpos'].getValue()+step)\n            n\['ypos'].setValue(n\['ypos'].getValue()+step)\n            n\['bdwidth'].setValue(n\['bdwidth'].getValue()-step*2)\n            n\['bdheight'].setValue(n\['bdheight'].getValue()-step*2)\n    except:\n        pass\nshrink(n,50)"}
    addUserKnob {22 colorandom l " <img src=\"ColorBars.png\">" -STARTLINE T "import colorsys, random\nn=nuke.thisNode()\nR,G,B= colorsys.hsv_to_rgb(random.random(),.1+random.random()*.15,.15+random.random()*.15)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ) )"}
    addUserKnob {22 darkgrey l "<font color=\"#232323\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.0, 0.0, 0.14]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 lightgrey l "<font color=\"#383838\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.0, 0.0, 0.22]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 red l "<font color=\"#8c3838\" size=6>■</font>" T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.0, 0.6, 0.55]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n" +STARTLINE}
    addUserKnob {22 orange l "<font color=\"#b28e59\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.1, 0.5, 0.7]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 yellow l "<font color=\"#ccc766\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.16, 0.5, 0.8]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 green l "<font color=\"#5d995b\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.33, 0.4, 0.6]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 cyan l "<font color=\"#72998f\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.46, 0.25, 0.6]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 blue l "<font color=\"#59687f\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.6, 0.3, 0.5]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 darkblue l "<font color=\"#63628c\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.67, 0.3, 0.55]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 magenta l "<font color=\"#927a99\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.8, 0.2, 0.6]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 pink l "<font color=\"#997a89\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.92, 0.2, 0.6]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {26 S02 l " " T " "}
    addUserKnob {26 Ftools l "" +STARTLINE T "<font color=\"#1C1C1C\"> v1.2 - Franklin VFX - 2018"}
   }
   BackdropNode {
    inputs 0
    name BackdropNode2
    knobChanged "try:\n    listenedKnobs = \['text', 'position', 'name']\n    node = nuke.thisNode()\n    name = node.knob('name').value()\n    text = node.knob('text').value()\n    position = node.knob('position').value()\n    position = \"<\" + position + \">\"\n    label = node.knob('label').value()\n    \n    if nuke.thisKnob().name() in listenedKnobs:\n        if text == \"\":\n            if node.knob('position').value() == \"left\":\n                node.knob('label').setValue()\n            else:\n                node.knob('label').setValue(position + name)\n        else:\n            if node.knob('position').value() == \"left\":\n                node.knob('label').setValue(text)\n            else:\n                node.knob('label').setValue(position + text)\n                \n    elif nuke.thisKnob().name() == 'font_size':\n        fontSize = node.knob('font_size').value()\n        node.knob('note_font_size').setValue(fontSize)\nexcept:\n    pass"
    tile_color 0x927a99ff
    note_font_size 50
    xpos -473
    ypos -221
    bdwidth 435
    bdheight 786
    z_order 1
    addUserKnob {20 F_VFX l BackdropNode}
    addUserKnob {43 text l Text}
    addUserKnob {7 font_size l "Font Size" R 10 100}
    font_size 50
    addUserKnob {4 position l "" -STARTLINE M {Left Center}}
    addUserKnob {26 S01 l " " T " "}
    addUserKnob {22 grow l " <img src=\"F_scalep.png\">" -STARTLINE T "n=nuke.thisNode()\n\ndef grow(node=None,step=50):\n    try:\n        if not node:\n            n=nuke.selectedNode()\n        else:\n            n=node\n            n\['xpos'].setValue(n\['xpos'].getValue()-step)\n            n\['ypos'].setValue(n\['ypos'].getValue()-step)\n            n\['bdwidth'].setValue(n\['bdwidth'].getValue()+step*2)\n            n\['bdheight'].setValue(n\['bdheight'].getValue()+step*2)\n    except:\n        pass\ngrow(n,50)"}
    addUserKnob {22 shrink l " <img src=\"F_scalem.png\">" -STARTLINE T "n=nuke.thisNode()\n\ndef shrink(node=None,step=50):\n    try:\n        if not node:\n            n=nuke.selectedNode()\n        else:\n            n=node\n            n\['xpos'].setValue(n\['xpos'].getValue()+step)\n            n\['ypos'].setValue(n\['ypos'].getValue()+step)\n            n\['bdwidth'].setValue(n\['bdwidth'].getValue()-step*2)\n            n\['bdheight'].setValue(n\['bdheight'].getValue()-step*2)\n    except:\n        pass\nshrink(n,50)"}
    addUserKnob {22 colorandom l " <img src=\"ColorBars.png\">" -STARTLINE T "import colorsys, random\nn=nuke.thisNode()\nR,G,B= colorsys.hsv_to_rgb(random.random(),.1+random.random()*.15,.15+random.random()*.15)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ) )"}
    addUserKnob {22 darkgrey l "<font color=\"#232323\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.0, 0.0, 0.14]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 lightgrey l "<font color=\"#383838\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.0, 0.0, 0.22]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 red l "<font color=\"#8c3838\" size=6>■</font>" T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.0, 0.6, 0.55]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n" +STARTLINE}
    addUserKnob {22 orange l "<font color=\"#b28e59\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.1, 0.5, 0.7]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 yellow l "<font color=\"#ccc766\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.16, 0.5, 0.8]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 green l "<font color=\"#5d995b\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.33, 0.4, 0.6]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 cyan l "<font color=\"#72998f\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.46, 0.25, 0.6]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 blue l "<font color=\"#59687f\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.6, 0.3, 0.5]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 darkblue l "<font color=\"#63628c\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.67, 0.3, 0.55]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 magenta l "<font color=\"#927a99\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.8, 0.2, 0.6]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 pink l "<font color=\"#997a89\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.92, 0.2, 0.6]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {26 S02 l " " T " "}
    addUserKnob {26 Ftools l "" +STARTLINE T "<font color=\"#1C1C1C\"> v1.2 - Franklin VFX - 2018"}
   }
   Constant {
    inputs 0
    channels rgb
    name Constant13
    xpos -643
    ypos 714
   }
   AdjBBox {
    numpixels {{size_bbox}}
    name AdjBBox13
    xpos -643
    ypos 849
   }
   Dot {
    name Dot78
    xpos -609
    ypos 987
   }
   Axis3 {
    inputs 0
    useMatrix true
    matrix {
        {{parent.cCard3D_1.matrix} {parent.cCard3D_1.matrix} {parent.cCard3D_1.matrix} {parent.cCard3D_1.matrix}}
        {{parent.cCard3D_1.matrix} {parent.cCard3D_1.matrix} {parent.cCard3D_1.matrix} {parent.cCard3D_1.matrix}}
        {{parent.cCard3D_1.matrix} {parent.cCard3D_1.matrix} {parent.cCard3D_1.matrix} {parent.cCard3D_1.matrix}}
        {{parent.cCard3D_1.matrix} {parent.cCard3D_1.matrix} {parent.cCard3D_1.matrix} {parent.cCard3D_1.matrix}}
      }
    name Axis14
    xpos -203
    ypos -90
   }
set N52d1f2f0 [stack 0]
push 0
   Input {
    inputs 0
    name top
    xpos -283
    ypos -1243
    number 1
   }
   TimeOffset {
    time_offset {{"shot_\[value shotnmbr]==0 ? 0 : shot_\[value shotnmbr]-1"}}
    time ""
    name CTimeOffset1
    label "shot: \[value shotnmbr]\non frame \[value time_offset]"
    xpos -283
    ypos -924
    addUserKnob {20 User}
    addUserKnob {3 shotnmbr l "shot "}
    shotnmbr {{shotcount}}
    addUserKnob {3 ref}
    ref {{time_offset+1}}
   }
   Group {
    name DecimalTimeOffset1
    tile_color 0xafa35dff
    label "random asset"
    note_font "Bitstream Vera Sans Bold"
    xpos -283
    ypos -841
    addUserKnob {20 User}
    addUserKnob {7 decimal l "time offset (decimal)"}
    decimal {{random(shotcount*seed)}}
    addUserKnob {26 ""}
    addUserKnob {26 _1 l "" +STARTLINE T "Chris Fryer | 2020\nupdated by Yorben Otto | 2024"}
   }
    Input {
     inputs 0
     name Input1
     xpos 426
     ypos -793
    }
    TimeOffset {
     time_offset {{(-floor(parent.decimal))*(DecimalTimeOffset1.decimal<0)}}
     time ""
     name TimeOffset1
     xpos 426
     ypos -675
    }
    Dot {
     name Dot6
     xpos 460
     ypos -635
    }
set N52d5eb50 [stack 0]
    Dot {
     name Dot5
     xpos 350
     ypos -635
    }
    Dot {
     name Dot7
     xpos 350
     ypos -365
    }
push $N52d5eb50
    Dot {
     name Dot1
     xpos 572
     ypos -635
    }
    TimeBlur {
     divisions 2
     shutter {{(parent.decimal-(floor(parent.decimal)))*2}}
     shutteroffset start
     shuttercustomoffset 0
     name TimeBlur1
     xpos 538
     ypos -558
    }
    Dot {
     name Dot2
     xpos 572
     ypos -490
    }
push $N52d5eb50
    TimeBlur {
     divisions 2
     shutter {{parent.decimal*2}}
     shutteroffset start
     shuttercustomoffset 0
     name TimeBlur8
     xpos 426
     ypos -556
    }
    Switch {
     inputs 2
     which {{parent.decimal<0}}
     name Switch1
     xpos 426
     ypos -494
    }
    Multiply {
     value {{parent.TimeBlur8.divisions}}
     name Multiply6
     xpos 426
     ypos -436
    }
    Merge2 {
     inputs 2
     operation from
     name Merge6
     xpos 426
     ypos -369
    }
set N52da0a90 [stack 0]
    Output {
     name Output1
     xpos 426
     ypos -221
    }
push $N52da0a90
push $N52da0a90
    Viewer {
     inputs 2
     frame_range 1-100
     name Viewer1
     xpos 675
     ypos -246
    }
   end_group
   NoTimeBlur {
    name NoTimeBlur1
    xpos -283
    ypos -779
   }
   Transform {
    scale {{0.05+(0.05*(((parent.DecimalTimeOffset13.decimal-0.5)*2)*ScaleVariationSmoke))}}
    center {{root.width/2 x1015 2304} {root.height/2}}
    shutteroffset centred
    name Transform44
    xpos -283
    ypos -152
   }
   Card3D {
    inputs 3
    rot_order ZYX
    translate {0 0 0}
    rotate {90 0 0}
    shutteroffset centred
    name cCard3D25
    tile_color 0x7b1d1dff
    xpos -283
    ypos 11
    addUserKnob {20 User l parent}
    addUserKnob {22 python_button l "set parent" t "select parent node, and press this button to set the selected node as parent" +INVISIBLE T "n = nuke.selectedNode()\['name'].getValue()\nnuke.thisNode()\['string'].setValue(n)" +STARTLINE}
    addUserKnob {1 string l parent +INVISIBLE}
    string null
    addUserKnob {3 ref l "ref frame"}
    ref 1015
   }
   Transform {
    translate {{"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].translate.x(ref)\}]"} {"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].translate.y(ref)\}]"}}
    rotate {{"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].rotate-\[value parent_gun].rotate(ref)\}]"}}
    scale {{"\[if \{\[value parent_gun]==\"null\"\} \{return 1\} \{return 1+(\[value parent_gun].scale-\[value parent_gun].scale(ref))\}]"}}
    center {{"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].center.x(ref)\}]"} {"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].center.y(ref)\}]"}}
    name Transform_GUNMatchMove37
    xpos -283
    ypos 126
    addUserKnob {20 User l parent}
    addUserKnob {3 ref}
    ref {{parent.CTimeOffset.ref}}
   }
   Transform {
    translate {{"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].translate.x-\[value parent_env].translate.x(ref)\}]"} {"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].translate.y-\[value parent_env].translate.y(ref)\}]"}}
    rotate {{"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].rotate-\[value parent_env].rotate(ref)\}]"}}
    scale {{"\[if \{\[value parent_gun]==\"null\"\} \{return 1\} \{return 1+(\[value parent_env].scale-\[value parent_env].scale(ref))\}]"}}
    center {{"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].center.x(ref)\}]"} {"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].center.y(ref)\}]"}}
    motionblur 0.2
    shutter {{SmokeMB*0.5}}
    shutteroffset centred
    name Transform_ENVMatchMove37
    label "\n"
    xpos -283
    ypos 255
    addUserKnob {20 User l parent}
    addUserKnob {3 ref}
    ref {{parent.CTimeOffset.ref}}
   }
   Transform {
    translate {{"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return -((root.width/2)-(\[value parent_gun].center.x(1)+\[value parent_gun].translate.x(1)))\}]"} {"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return -((root.height/2)-(\[value parent_gun].center.y(1)+\[value parent_gun].translate.y(1)))\}]"}}
    name Transform_GUNMatchMove6
    label "alignment correction"
    xpos -283
    ypos 344
    addUserKnob {20 User l parent}
    addUserKnob {22 python_button l "set parent" t "select parent node, and press this button to set the selected node as parent" T "n = nuke.selectedNode()\['name'].getValue()\nnuke.thisNode()\['string'].setValue(n)" +STARTLINE}
    addUserKnob {1 string l parent}
    string Transform_MatchMove10
    addUserKnob {3 ref +INVISIBLE}
    ref {{parent.cCard3D_8.ref}}
   }
   Multiply {
    value {{math_matrix.result_y_smoke(parent.CTimeOffset.ref)}}
    name Angle_reveal_top1
    label TOP
    xpos -283
    ypos 403
   }
   Remove {
    operation keep
    channels rgb
    name Remove1
    xpos -283
    ypos 514
   }
push 0
   Switch {
    inputs 2
    which {{parent.Angle_reveal_top1.value>0.001}}
    name Switch1
    xpos -283
    ypos 660
   }
   Dot {
    name Dot82
    xpos -249
    ypos 705
   }
push 0
push $N52d1f2f0
push 0
   Input {
    inputs 0
    name front
    xpos -436
    ypos -1243
    number 2
   }
   TimeOffset {
    time_offset {{"shot_\[value shotnmbr]==0 ? 0 : shot_\[value shotnmbr]-1"}}
    time ""
    name CTimeOffset2
    label "shot: \[value shotnmbr]\non frame \[value time_offset]"
    xpos -436
    ypos -925
    addUserKnob {20 User}
    addUserKnob {3 shotnmbr l "shot "}
    shotnmbr {{shotcount}}
    addUserKnob {3 ref}
    ref {{time_offset+1}}
   }
   Group {
    name DecimalTimeOffset2
    tile_color 0xafa35dff
    label "random asset"
    note_font "Bitstream Vera Sans Bold"
    xpos -436
    ypos -842
    addUserKnob {20 User}
    addUserKnob {7 decimal l "time offset (decimal)"}
    decimal {{random(shotcount*seed)}}
    addUserKnob {26 ""}
    addUserKnob {26 _1 l "" +STARTLINE T "Chris Fryer | 2020\nupdated by Yorben Otto | 2024"}
   }
    Input {
     inputs 0
     name Input1
     xpos 426
     ypos -793
    }
    TimeOffset {
     time_offset {{(-floor(parent.decimal))*(DecimalTimeOffset2.decimal<0)}}
     time ""
     name TimeOffset1
     xpos 426
     ypos -675
    }
    Dot {
     name Dot6
     xpos 460
     ypos -635
    }
set N32a648f0 [stack 0]
    Dot {
     name Dot5
     xpos 350
     ypos -635
    }
    Dot {
     name Dot7
     xpos 350
     ypos -365
    }
push $N32a648f0
    Dot {
     name Dot1
     xpos 572
     ypos -635
    }
    TimeBlur {
     divisions 2
     shutter {{(parent.decimal-(floor(parent.decimal)))*2}}
     shutteroffset start
     shuttercustomoffset 0
     name TimeBlur1
     xpos 538
     ypos -558
    }
    Dot {
     name Dot2
     xpos 572
     ypos -490
    }
push $N32a648f0
    TimeBlur {
     divisions 2
     shutter {{parent.decimal*2}}
     shutteroffset start
     shuttercustomoffset 0
     name TimeBlur8
     xpos 426
     ypos -556
    }
    Switch {
     inputs 2
     which {{parent.decimal<0}}
     name Switch1
     xpos 426
     ypos -494
    }
    Multiply {
     value {{parent.TimeBlur8.divisions}}
     name Multiply6
     xpos 426
     ypos -436
    }
    Merge2 {
     inputs 2
     operation from
     name Merge6
     xpos 426
     ypos -369
    }
set N5ce3e690 [stack 0]
    Output {
     name Output1
     xpos 426
     ypos -221
    }
push $N5ce3e690
push $N5ce3e690
    Viewer {
     inputs 2
     frame_range 1-100
     name Viewer1
     xpos 675
     ypos -246
    }
   end_group
   NoTimeBlur {
    name NoTimeBlur5
    xpos -436
    ypos -780
   }
   Transform {
    scale {{0.05+(0.05*(((parent.DecimalTimeOffset13.decimal-0.5)*2)*ScaleVariationSmoke))}}
    center {{root.width/2 x1015 2304} {root.height/2}}
    shutteroffset centred
    name Transform45
    xpos -436
    ypos -151
   }
   Card3D {
    inputs 3
    rot_order ZYX
    translate {0 0 0}
    rotate {0 90 0}
    shutteroffset centred
    name cCard3D26
    tile_color 0x7b1d1dff
    xpos -436
    ypos 15
    addUserKnob {20 User l parent}
    addUserKnob {22 python_button l "set parent" t "select parent node, and press this button to set the selected node as parent" +INVISIBLE T "n = nuke.selectedNode()\['name'].getValue()\nnuke.thisNode()\['string'].setValue(n)" +STARTLINE}
    addUserKnob {1 string l parent +INVISIBLE}
    string null
    addUserKnob {3 ref l "ref frame"}
    ref 1015
   }
   Transform {
    translate {{"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].translate.x(ref)\}]"} {"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].translate.y(ref)\}]"}}
    rotate {{"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].rotate-\[value parent_gun].rotate(ref)\}]"}}
    scale {{"\[if \{\[value parent_gun]==\"null\"\} \{return 1\} \{return 1+(\[value parent_gun].scale-\[value parent_gun].scale(ref))\}]"}}
    center {{"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].center.x(ref)\}]"} {"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].center.y(ref)\}]"}}
    name Transform_GUNMatchMove38
    label "\n"
    xpos -436
    ypos 124
    addUserKnob {20 User l parent}
    addUserKnob {3 ref}
    ref {{parent.CTimeOffset.ref}}
   }
   Transform {
    translate {{"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].translate.x-\[value parent_env].translate.x(ref)\}]"} {"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].translate.y-\[value parent_env].translate.y(ref)\}]"}}
    rotate {{"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].rotate-\[value parent_env].rotate(ref)\}]"}}
    scale {{"\[if \{\[value parent_gun]==\"null\"\} \{return 1\} \{return 1+(\[value parent_env].scale-\[value parent_env].scale(ref))\}]"}}
    center {{"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].center.x(ref)\}]"} {"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].center.y(ref)\}]"}}
    motionblur 0.2
    shutter {{SmokeMB*0.5}}
    shutteroffset centred
    name Transform_ENVMatchMove38
    xpos -436
    ypos 254
    addUserKnob {20 User l parent}
    addUserKnob {3 ref}
    ref {{parent.CTimeOffset.ref}}
   }
   Transform {
    translate {{"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return -((root.width/2)-(\[value parent_gun].center.x(1)+\[value parent_gun].translate.x(1)))\}]"} {"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return -((root.height/2)-(\[value parent_gun].center.y(1)+\[value parent_gun].translate.y(1)))\}]"}}
    name Transform_GUNMatchMove7
    label "alignment correction"
    xpos -436
    ypos 343
    addUserKnob {20 User l parent}
    addUserKnob {22 python_button l "set parent" t "select parent node, and press this button to set the selected node as parent" T "n = nuke.selectedNode()\['name'].getValue()\nnuke.thisNode()\['string'].setValue(n)" +STARTLINE}
    addUserKnob {1 string l parent}
    string Transform_MatchMove10
    addUserKnob {3 ref +INVISIBLE}
    ref {{parent.cCard3D_8.ref}}
   }
   Multiply {
    value {{math_matrix.result_x_smoke(parent.CTimeOffset.ref)}}
    name Angle_reveal_front1
    label FRONT
    xpos -436
    ypos 401
   }
   Remove {
    operation keep
    channels rgb
    name Remove2
    xpos -436
    ypos 511
   }
push 0
   Switch {
    inputs 2
    which {{parent.Angle_reveal_front1.value>0.001}}
    name Switch2
    xpos -436
    ypos 660
   }
   Dot {
    name Dot83
    xpos -402
    ypos 735
   }
   Input {
    inputs 0
    name side
    xpos -130
    ypos -1242
   }
   TimeOffset {
    time_offset {{"shot_\[value shotnmbr]==0 ? 0 : shot_\[value shotnmbr]-1"}}
    time ""
    name CTimeOffset
    label "shot: \[value shotnmbr]\non frame \[value time_offset]"
    xpos -130
    ypos -927
    addUserKnob {20 User}
    addUserKnob {3 shotnmbr l "shot "}
    shotnmbr {{shotcount}}
    addUserKnob {3 ref}
    ref {{time_offset+1}}
   }
   Group {
    name DecimalTimeOffset13
    tile_color 0xafa35dff
    label "random asset"
    note_font "Bitstream Vera Sans Bold"
    xpos -130
    ypos -844
    addUserKnob {20 User}
    addUserKnob {7 decimal l "time offset (decimal)"}
    decimal {{random(shotcount*seed)}}
    addUserKnob {26 ""}
    addUserKnob {26 _1 l "" +STARTLINE T "Chris Fryer | 2020\nupdated by Yorben Otto | 2024"}
   }
    Input {
     inputs 0
     name Input1
     xpos 426
     ypos -793
    }
    TimeOffset {
     time_offset {{(-floor(parent.decimal))*(DecimalTimeOffset13.decimal<0)}}
     time ""
     name TimeOffset1
     xpos 426
     ypos -675
    }
    Dot {
     name Dot6
     xpos 460
     ypos -635
    }
set Nc8d47530 [stack 0]
    Dot {
     name Dot5
     xpos 350
     ypos -635
    }
    Dot {
     name Dot7
     xpos 350
     ypos -365
    }
push $Nc8d47530
    Dot {
     name Dot1
     xpos 572
     ypos -635
    }
    TimeBlur {
     divisions 2
     shutter {{(parent.decimal-(floor(parent.decimal)))*2}}
     shutteroffset start
     shuttercustomoffset 0
     name TimeBlur1
     xpos 538
     ypos -558
    }
    Dot {
     name Dot2
     xpos 572
     ypos -490
    }
push $Nc8d47530
    TimeBlur {
     divisions 2
     shutter {{parent.decimal*2}}
     shutteroffset start
     shuttercustomoffset 0
     name TimeBlur8
     xpos 426
     ypos -556
    }
    Switch {
     inputs 2
     which {{parent.decimal<0}}
     name Switch1
     xpos 426
     ypos -494
    }
    Multiply {
     value {{parent.TimeBlur8.divisions}}
     name Multiply6
     xpos 426
     ypos -436
    }
    Merge2 {
     inputs 2
     operation from
     name Merge6
     xpos 426
     ypos -369
    }
set Nc8d89470 [stack 0]
    Output {
     name Output1
     xpos 426
     ypos -221
    }
push $Nc8d89470
push $Nc8d89470
    Viewer {
     inputs 2
     frame_range 1-100
     name Viewer1
     xpos 675
     ypos -246
    }
   end_group
   NoTimeBlur {
    name NoTimeBlur13
    xpos -130
    ypos -782
   }
   Transform {
    scale {{0.05+(0.05*(((parent.DecimalTimeOffset13.decimal-0.5)*2)*ScaleVariationSmoke))}}
    center {{root.width/2 x1015 2304} {root.height/2}}
    shutteroffset centred
    name Transform46
    xpos -130
    ypos -155
   }
   Card3D {
    translate {{"\[if \{\[exists  parent.parent.parent.input0]\} \{return \[value \[topnode parent.parent.parent.input0].name].translate.x(ref)\} \{return 0\}]"} {"\[if \{\[exists  parent.parent.parent.input0]\} \{return \[value \[topnode parent.parent.parent.input0].name].translate.y(ref)\} \{return 0\}]"} {"\[if \{\[exists  parent.parent.parent.input0]\} \{return \[value \[topnode parent.parent.parent.input0].name].translate.z(ref)\} \{return -1\}]"}}
    rotate {{"\[if \{\[exists  parent.parent.parent.input0]\} \{return \[value \[topnode parent.parent.parent.input0].name].rotate.x(ref)\} \{return 0\}]"} {"\[if \{\[exists  parent.parent.parent.input0]\} \{return \[value \[topnode parent.parent.parent.input0].name].rotate.y(ref)\} \{return 0\}]"} {"\[if \{\[exists  parent.parent.parent.input0]\} \{return \[value \[topnode parent.parent.parent.input0].name].rotate.z(ref)\} \{return 0\}]"}}
    scaling {{"\[if \{\[exists  parent.parent.parent.input0]\} \{return \[value \[topnode parent.parent.parent.input0].name].scaling.x(ref)\} \{return 1\}]"} {"\[if \{\[exists  parent.parent.parent.input0]\} \{return \[value \[topnode parent.parent.parent.input0].name].scaling.y(ref)\} \{return 1\}]"} {"\[if \{\[exists  parent.parent.parent.input0]\} \{return \[value \[topnode parent.parent.parent.input0].name].scaling.z(ref)\} \{return 1\}]"}}
    uniform_scale {{"\[if \{\[exists  parent.parent.parent.input0]\} \{return (\[value \[topnode parent.parent.parent.input0].name].uniform_scale(ref)*25)\} \{return 25\}]"}}
    shutteroffset centred
    name cCard3D_1
    tile_color 0x7b1d1dff
    label "ref frame: \[value ref]"
    xpos -130
    ypos 2
    addUserKnob {20 User l parent}
    addUserKnob {22 python_button l "set parent" t "select parent node, and press this button to set the selected node as parent" +INVISIBLE T "n = nuke.selectedNode()\['name'].getValue()\nnuke.thisNode()\['string'].setValue(n)" +STARTLINE}
    addUserKnob {1 string l parent +INVISIBLE}
    string null
    addUserKnob {3 id l "id number"}
    id {{parent.CTimeOffset.shotnmbr}}
    addUserKnob {3 ref l "ref frame"}
    ref {{parent.CTimeOffset.ref}}
   }
   Transform {
    translate {{"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].translate.x(ref)\}]"} {"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].translate.y(ref)\}]"}}
    rotate {{"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].rotate-\[value parent_gun].rotate(ref)\}]"}}
    scale {{"\[if \{\[value parent_gun]==\"null\"\} \{return 1\} \{return 1+(\[value parent_gun].scale-\[value parent_gun].scale(ref))\}]"}}
    center {{"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].center.x(ref)\}]"} {"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].center.y(ref)\}]"}}
    name Transform_GUNMatchMove39
    label "\n"
    xpos -130
    ypos 124
    addUserKnob {20 User l parent}
    addUserKnob {3 ref}
    ref {{parent.CTimeOffset.ref}}
   }
   Transform {
    translate {{"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].translate.x-\[value parent_env].translate.x(ref)\}]"} {"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].translate.y-\[value parent_env].translate.y(ref)\}]"}}
    rotate {{"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].rotate-\[value parent_env].rotate(ref)\}]"}}
    scale {{"\[if \{\[value parent_gun]==\"null\"\} \{return 1\} \{return 1+(\[value parent_env].scale-\[value parent_env].scale(ref))\}]"}}
    center {{"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].center.x(ref)\}]"} {"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].center.y(ref)\}]"}}
    motionblur 0.2
    shutter {{SmokeMB*0.5}}
    shutteroffset centred
    name Transform_ENVMatchMove39
    xpos -130
    ypos 258
    addUserKnob {20 User l parent}
    addUserKnob {3 ref}
    ref {{parent.CTimeOffset.ref}}
   }
   Transform {
    translate {{"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return -((root.width/2)-(\[value parent_gun].center.x(1)+\[value parent_gun].translate.x(1)))\}]"} {"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return -((root.height/2)-(\[value parent_gun].center.y(1)+\[value parent_gun].translate.y(1)))\}]"}}
    name Transform_GUNMatchMove5
    label "alignment correction"
    xpos -130
    ypos 340
    addUserKnob {20 User l parent}
    addUserKnob {22 python_button l "set parent" t "select parent node, and press this button to set the selected node as parent" T "n = nuke.selectedNode()\['name'].getValue()\nnuke.thisNode()\['string'].setValue(n)" +STARTLINE}
    addUserKnob {1 string l parent}
    string Transform_MatchMove10
    addUserKnob {3 ref +INVISIBLE}
    ref {{parent.cCard3D_8.ref}}
   }
   Multiply {
    value {{math_matrix.result_z_smoke(parent.CTimeOffset.ref)}}
    name Angle_reveal_side1
    label SIDE
    xpos -130
    ypos 404
   }
   Remove {
    operation keep
    channels rgb
    name Remove39
    xpos -130
    ypos 514
   }
push 0
   Switch {
    inputs 2
    which {{parent.Angle_reveal_side1.value>0.001}}
    name Switch3
    xpos -130
    ypos 658
   }
   Merge2 {
    inputs 3+1
    operation max
    Achannels rgb
    Bchannels rgb
    output rgb
    name Merge28
    xpos -130
    ypos 731
   }
   Merge2 {
    inputs 2
    operation plus
    bbox intersection
    Achannels rgb
    Bchannels rgb
    output rgb
    name Merge29
    xpos -130
    ypos 983
   }
   Shuffle2 {
    fromInput1 {{0} B}
    fromInput2 {{0} B}
    mappings "4 rgba.red 0 0 rgba.red 0 0 rgba.green 0 1 rgba.green 0 1 rgba.blue 0 2 rgba.alpha 0 3 rgba.blue 0 2 rgba.blue 0 2"
    name Shuffle1
    xpos -130
    ypos 1021
   }
push 0
   Switch {
    inputs 2
    which {{"shot_\[value count]==0?0:frame>=shot_\[value count]"}}
    name cSwitch_13
    xpos -130
    ypos 1078
    addUserKnob {20 User}
    addUserKnob {3 count}
    count {{parent.CTimeOffset.shotnmbr}}
   }
   Output {
    name Output1
    xpos -130
    ypos 1323
   }
   StickyNote {
    inputs 0
    name StickyNote1
    label "<-- handy to break concatonation?  "
    xpos -39
    ypos 193
   }
  end_group
push $N586971d0
  PostageStamp {
   name Stamp43
   help "Stamps by Adrian Pueyo and Alexey Kuchinski.\nUpdated May 18 2021"
   onCreate "if nuke.GUI:\n    try:\n        import stamps; stamps.wiredOnCreate()\n    except:\n        pass\n"
   knobChanged "import stamps; stamps.wiredKnobChanged()"
   autolabel "nuke.thisNode().knob(\"title\").value()"
   tile_color 0x1000001
   note_font "Bitstream Vera Sans"
   note_font_size 20
   xpos 4998
   ypos -698
   hide_input true
   addUserKnob {20 wired_tab l "Wired Stamp"}
   addUserKnob {26 identifier -STARTLINE +HIDDEN T wired}
   addUserKnob {3 lockCallbacks l "" +STARTLINE +HIDDEN}
   addUserKnob {6 toReconnect -STARTLINE +HIDDEN}
   addUserKnob {1 title l Title: t "Displayed name on the Node Graph for this Stamp and its Anchor.\nIMPORTANT: This is only for display purposes, and is different from the real/internal name of the Stamps."}
   title smoke_FRONT
   addUserKnob {26 prev_title l "" +STARTLINE +HIDDEN T smoke_FRONT}
   addUserKnob {26 tags l Tags: t "Tags of this stamp's Anchor, for information purpose only.\nClick \"show anchor\" to change them." T <i>2D</i>}
   addUserKnob {26 backdrops l Backdrops: t "Labels of backdrop nodes which contain this stamp's Anchor." T "<i><Left>before or after Flare</i>"}
   addUserKnob {26 line1 l "" +STARTLINE}
   addUserKnob {6 postageStamp_show l "postage stamp" t "Enable the postage stamp thumbnail in this node.\nYou're seeing this because the class of this node includes the postage_stamp knob." +STARTLINE}
   addUserKnob {26 anchor_label l Anchor: T " "}
   addUserKnob {22 show_anchor l " show anchor " t "Show the properties panel for this Stamp's Anchor." -STARTLINE T stamps.wiredShowAnchor()}
   addUserKnob {22 zoom_anchor l "zoom anchor" t "Navigate to this Stamp's Anchor on the Node Graph." -STARTLINE T stamps.wiredZoomAnchor()}
   addUserKnob {26 stamps_label l Stamps: T " "}
   addUserKnob {22 zoomNext l " zoom next " t "Navigate to this Stamp's next sibling on the Node Graph." -STARTLINE T stamps.wiredZoomNext()}
   addUserKnob {22 selectSimilar l " select similar " t "Select all similar Stamps to this one on the Node Graph." -STARTLINE T stamps.wiredSelectSimilar()}
   addUserKnob {26 space_1 l "" +STARTLINE T " "}
   addUserKnob {26 reconnect_label l Reconnect: t "Reconnect by the stored Anchor name." T " "}
   addUserKnob {22 reconnect_this l this t "Reconnect this Stamp to its Anchor, by its stored Anchor name." -STARTLINE T "n = nuke.thisNode()\ntry:\n    n.setInput(0,nuke.toNode(n.knob(\"anchor\").value()))\nexcept:\n    nuke.message(\"Unable to reconnect.\")\ntry:\n    import stamps\n    stamps.wiredGetStyle(n)\nexcept:\n    pass\n"}
   addUserKnob {22 reconnect_similar l similar t "Reconnect this Stamp and similar ones to their Anchor, by their stored anchor name." -STARTLINE T stamps.wiredReconnectSimilar()}
   addUserKnob {22 reconnect_all l all t "Reconnect all the Stamps to their Anchors, by their stored anchor names." -STARTLINE T stamps.wiredReconnectAll()}
   addUserKnob {26 space_2 l "" +STARTLINE T " "}
   addUserKnob {20 advanced_reconnection l "Advanced Reconnection" n 2}
   addUserKnob {26 reconnect_by_title_label l "<font color=gold>By Title:" t "Reconnect by searching for a matching title." T " "}
   addUserKnob {22 reconnect_by_title_this l this t "Look for an Anchor that shares this Stamp's title, and connect this Stamp to it.\nIMPORTANT: Use this carefully, and only when the normal reconnection doesn't work." -STARTLINE T stamps.wiredReconnectByTitle()}
   addUserKnob {22 reconnect_by_title_similar l similar t "Look for an Anchor that shares this Stamp's title, and connect this Stamp and similar ones to it.\nIMPORTANT: Use this carefully, and only when the normal reconnection doesn't work." -STARTLINE T stamps.wiredReconnectByTitleSimilar()}
   addUserKnob {22 reconnect_by_title_selected l selected t "For each Stamp selected, look for an Anchor that shares its title, and connect to it.\nIMPORTANT: Use this carefully, and only when the normal reconnection doesn't work." -STARTLINE T stamps.wiredReconnectByTitleSelected()}
   addUserKnob {26 reconnect_by_selection_label l "<font color=orangered>By Selection:" t "Force reconnect to a selected Anchor." T " "}
   addUserKnob {22 reconnect_by_selection_this l this t "Force reconnect this Stamp to a selected Anchor, whatever its name or title.\nIMPORTANT: Use this carefully, and only when the normal reconnection doesn't work." -STARTLINE T stamps.wiredReconnectBySelection()}
   addUserKnob {22 reconnect_by_selection_similar l similar t "Force reconnect this Stamp and similar ones to a selected Anchor, whatever its name or title.\nIMPORTANT: Use this carefully, and only when the normal reconnection doesn't work." -STARTLINE T stamps.wiredReconnectBySelectionSimilar()}
   addUserKnob {22 reconnect_by_selection_selected l selected t "Force reconnect all selected Stamps to an also selected Anchor, whatever its name or title.\nIMPORTANT: Use this carefully, and only when the normal reconnection doesn't work." -STARTLINE T stamps.wiredReconnectBySelectionSelected()}
   addUserKnob {1 anchor l Anchor}
   anchor Anchor_220a2be282
   addUserKnob {6 auto_reconnect_by_title l "<font color=#ED9977>&nbsp; auto-reconnect by title" t "When creating this stamp again (like on copy-paste), auto-reconnect it by title instead of doing it by the saved anchor's name, and auto-turn this off immediately.\nIMPORTANT: Should be off by default. Only use this for setting up templates." +STARTLINE}
   addUserKnob {26 line2 l "" +STARTLINE}
   addUserKnob {22 buttonHelp l Help -STARTLINE T stamps.showHelp()}
   addUserKnob {26 version l " " t "Stamps by Adrian Pueyo and Alexey Kuchinski.\nUpdated May 18 2021." -STARTLINE T "<a href=\"http://www.nukepedia.com/gizmos/other/stamps\" style=\"color:#666;text-decoration: none;\"><span style=\"color:#666\"> <big>Stamps v1.1</big></b></a>"}
  }
  Dot {
   name Dot29
   xpos 5032
   ypos -650
  }
push $N58d70c10
  PostageStamp {
   name Stamp44
   help "Stamps by Adrian Pueyo and Alexey Kuchinski.\nUpdated May 18 2021"
   onCreate "if nuke.GUI:\n    try:\n        import stamps; stamps.wiredOnCreate()\n    except:\n        pass\n"
   knobChanged "import stamps; stamps.wiredKnobChanged()"
   autolabel "nuke.thisNode().knob(\"title\").value()"
   tile_color 0x1000001
   note_font "Bitstream Vera Sans"
   note_font_size 20
   xpos 5123
   ypos -698
   hide_input true
   addUserKnob {20 wired_tab l "Wired Stamp"}
   addUserKnob {26 identifier -STARTLINE +HIDDEN T wired}
   addUserKnob {3 lockCallbacks l "" +STARTLINE +HIDDEN}
   addUserKnob {6 toReconnect -STARTLINE +HIDDEN}
   addUserKnob {1 title l Title: t "Displayed name on the Node Graph for this Stamp and its Anchor.\nIMPORTANT: This is only for display purposes, and is different from the real/internal name of the Stamps."}
   title smoke_TOP
   addUserKnob {26 prev_title l "" +STARTLINE +HIDDEN T smoke_TOP}
   addUserKnob {26 tags l Tags: t "Tags of this stamp's Anchor, for information purpose only.\nClick \"show anchor\" to change them." T <i>2D</i>}
   addUserKnob {26 backdrops l Backdrops: t "Labels of backdrop nodes which contain this stamp's Anchor." T "<i><Left>before or after Flare</i>"}
   addUserKnob {26 line1 l "" +STARTLINE}
   addUserKnob {6 postageStamp_show l "postage stamp" t "Enable the postage stamp thumbnail in this node.\nYou're seeing this because the class of this node includes the postage_stamp knob." +STARTLINE}
   addUserKnob {26 anchor_label l Anchor: T " "}
   addUserKnob {22 show_anchor l " show anchor " t "Show the properties panel for this Stamp's Anchor." -STARTLINE T stamps.wiredShowAnchor()}
   addUserKnob {22 zoom_anchor l "zoom anchor" t "Navigate to this Stamp's Anchor on the Node Graph." -STARTLINE T stamps.wiredZoomAnchor()}
   addUserKnob {26 stamps_label l Stamps: T " "}
   addUserKnob {22 zoomNext l " zoom next " t "Navigate to this Stamp's next sibling on the Node Graph." -STARTLINE T stamps.wiredZoomNext()}
   addUserKnob {22 selectSimilar l " select similar " t "Select all similar Stamps to this one on the Node Graph." -STARTLINE T stamps.wiredSelectSimilar()}
   addUserKnob {26 space_1 l "" +STARTLINE T " "}
   addUserKnob {26 reconnect_label l Reconnect: t "Reconnect by the stored Anchor name." T " "}
   addUserKnob {22 reconnect_this l this t "Reconnect this Stamp to its Anchor, by its stored Anchor name." -STARTLINE T "n = nuke.thisNode()\ntry:\n    n.setInput(0,nuke.toNode(n.knob(\"anchor\").value()))\nexcept:\n    nuke.message(\"Unable to reconnect.\")\ntry:\n    import stamps\n    stamps.wiredGetStyle(n)\nexcept:\n    pass\n"}
   addUserKnob {22 reconnect_similar l similar t "Reconnect this Stamp and similar ones to their Anchor, by their stored anchor name." -STARTLINE T stamps.wiredReconnectSimilar()}
   addUserKnob {22 reconnect_all l all t "Reconnect all the Stamps to their Anchors, by their stored anchor names." -STARTLINE T stamps.wiredReconnectAll()}
   addUserKnob {26 space_2 l "" +STARTLINE T " "}
   addUserKnob {20 advanced_reconnection l "Advanced Reconnection" n 2}
   addUserKnob {26 reconnect_by_title_label l "<font color=gold>By Title:" t "Reconnect by searching for a matching title." T " "}
   addUserKnob {22 reconnect_by_title_this l this t "Look for an Anchor that shares this Stamp's title, and connect this Stamp to it.\nIMPORTANT: Use this carefully, and only when the normal reconnection doesn't work." -STARTLINE T stamps.wiredReconnectByTitle()}
   addUserKnob {22 reconnect_by_title_similar l similar t "Look for an Anchor that shares this Stamp's title, and connect this Stamp and similar ones to it.\nIMPORTANT: Use this carefully, and only when the normal reconnection doesn't work." -STARTLINE T stamps.wiredReconnectByTitleSimilar()}
   addUserKnob {22 reconnect_by_title_selected l selected t "For each Stamp selected, look for an Anchor that shares its title, and connect to it.\nIMPORTANT: Use this carefully, and only when the normal reconnection doesn't work." -STARTLINE T stamps.wiredReconnectByTitleSelected()}
   addUserKnob {26 reconnect_by_selection_label l "<font color=orangered>By Selection:" t "Force reconnect to a selected Anchor." T " "}
   addUserKnob {22 reconnect_by_selection_this l this t "Force reconnect this Stamp to a selected Anchor, whatever its name or title.\nIMPORTANT: Use this carefully, and only when the normal reconnection doesn't work." -STARTLINE T stamps.wiredReconnectBySelection()}
   addUserKnob {22 reconnect_by_selection_similar l similar t "Force reconnect this Stamp and similar ones to a selected Anchor, whatever its name or title.\nIMPORTANT: Use this carefully, and only when the normal reconnection doesn't work." -STARTLINE T stamps.wiredReconnectBySelectionSimilar()}
   addUserKnob {22 reconnect_by_selection_selected l selected t "Force reconnect all selected Stamps to an also selected Anchor, whatever its name or title.\nIMPORTANT: Use this carefully, and only when the normal reconnection doesn't work." -STARTLINE T stamps.wiredReconnectBySelectionSelected()}
   addUserKnob {1 anchor l Anchor}
   anchor Anchor_25b668170c
   addUserKnob {6 auto_reconnect_by_title l "<font color=#ED9977>&nbsp; auto-reconnect by title" t "When creating this stamp again (like on copy-paste), auto-reconnect it by title instead of doing it by the saved anchor's name, and auto-turn this off immediately.\nIMPORTANT: Should be off by default. Only use this for setting up templates." +STARTLINE}
   addUserKnob {26 line2 l "" +STARTLINE}
   addUserKnob {22 buttonHelp l Help -STARTLINE T stamps.showHelp()}
   addUserKnob {26 version l " " t "Stamps by Adrian Pueyo and Alexey Kuchinski.\nUpdated May 18 2021." -STARTLINE T "<a href=\"http://www.nukepedia.com/gizmos/other/stamps\" style=\"color:#666;text-decoration: none;\"><span style=\"color:#666\"> <big>Stamps v1.1</big></b></a>"}
  }
push $N56244930
  PostageStamp {
   name Stamp45
   help "Stamps by Adrian Pueyo and Alexey Kuchinski.\nUpdated May 18 2021"
   onCreate "if nuke.GUI:\n    try:\n        import stamps; stamps.wiredOnCreate()\n    except:\n        pass\n"
   knobChanged "import stamps; stamps.wiredKnobChanged()"
   autolabel "nuke.thisNode().knob(\"title\").value()"
   tile_color 0x1000001
   note_font "Bitstream Vera Sans"
   note_font_size 20
   xpos 5241
   ypos -700
   hide_input true
   addUserKnob {20 wired_tab l "Wired Stamp"}
   addUserKnob {26 identifier -STARTLINE +HIDDEN T wired}
   addUserKnob {3 lockCallbacks l "" +STARTLINE +HIDDEN}
   addUserKnob {6 toReconnect -STARTLINE +HIDDEN}
   addUserKnob {1 title l Title: t "Displayed name on the Node Graph for this Stamp and its Anchor.\nIMPORTANT: This is only for display purposes, and is different from the real/internal name of the Stamps."}
   title smoke_SIDE
   addUserKnob {26 prev_title l "" +STARTLINE +HIDDEN T smoke_SIDE}
   addUserKnob {26 tags l Tags: t "Tags of this stamp's Anchor, for information purpose only.\nClick \"show anchor\" to change them." T <i>2D</i>}
   addUserKnob {26 backdrops l Backdrops: t "Labels of backdrop nodes which contain this stamp's Anchor." T "<i><Left>before or after Flare</i>"}
   addUserKnob {26 line1 l "" +STARTLINE}
   addUserKnob {6 postageStamp_show l "postage stamp" t "Enable the postage stamp thumbnail in this node.\nYou're seeing this because the class of this node includes the postage_stamp knob." +STARTLINE}
   addUserKnob {26 anchor_label l Anchor: T " "}
   addUserKnob {22 show_anchor l " show anchor " t "Show the properties panel for this Stamp's Anchor." -STARTLINE T stamps.wiredShowAnchor()}
   addUserKnob {22 zoom_anchor l "zoom anchor" t "Navigate to this Stamp's Anchor on the Node Graph." -STARTLINE T stamps.wiredZoomAnchor()}
   addUserKnob {26 stamps_label l Stamps: T " "}
   addUserKnob {22 zoomNext l " zoom next " t "Navigate to this Stamp's next sibling on the Node Graph." -STARTLINE T stamps.wiredZoomNext()}
   addUserKnob {22 selectSimilar l " select similar " t "Select all similar Stamps to this one on the Node Graph." -STARTLINE T stamps.wiredSelectSimilar()}
   addUserKnob {26 space_1 l "" +STARTLINE T " "}
   addUserKnob {26 reconnect_label l Reconnect: t "Reconnect by the stored Anchor name." T " "}
   addUserKnob {22 reconnect_this l this t "Reconnect this Stamp to its Anchor, by its stored Anchor name." -STARTLINE T "n = nuke.thisNode()\ntry:\n    n.setInput(0,nuke.toNode(n.knob(\"anchor\").value()))\nexcept:\n    nuke.message(\"Unable to reconnect.\")\ntry:\n    import stamps\n    stamps.wiredGetStyle(n)\nexcept:\n    pass\n"}
   addUserKnob {22 reconnect_similar l similar t "Reconnect this Stamp and similar ones to their Anchor, by their stored anchor name." -STARTLINE T stamps.wiredReconnectSimilar()}
   addUserKnob {22 reconnect_all l all t "Reconnect all the Stamps to their Anchors, by their stored anchor names." -STARTLINE T stamps.wiredReconnectAll()}
   addUserKnob {26 space_2 l "" +STARTLINE T " "}
   addUserKnob {20 advanced_reconnection l "Advanced Reconnection" n 2}
   addUserKnob {26 reconnect_by_title_label l "<font color=gold>By Title:" t "Reconnect by searching for a matching title." T " "}
   addUserKnob {22 reconnect_by_title_this l this t "Look for an Anchor that shares this Stamp's title, and connect this Stamp to it.\nIMPORTANT: Use this carefully, and only when the normal reconnection doesn't work." -STARTLINE T stamps.wiredReconnectByTitle()}
   addUserKnob {22 reconnect_by_title_similar l similar t "Look for an Anchor that shares this Stamp's title, and connect this Stamp and similar ones to it.\nIMPORTANT: Use this carefully, and only when the normal reconnection doesn't work." -STARTLINE T stamps.wiredReconnectByTitleSimilar()}
   addUserKnob {22 reconnect_by_title_selected l selected t "For each Stamp selected, look for an Anchor that shares its title, and connect to it.\nIMPORTANT: Use this carefully, and only when the normal reconnection doesn't work." -STARTLINE T stamps.wiredReconnectByTitleSelected()}
   addUserKnob {26 reconnect_by_selection_label l "<font color=orangered>By Selection:" t "Force reconnect to a selected Anchor." T " "}
   addUserKnob {22 reconnect_by_selection_this l this t "Force reconnect this Stamp to a selected Anchor, whatever its name or title.\nIMPORTANT: Use this carefully, and only when the normal reconnection doesn't work." -STARTLINE T stamps.wiredReconnectBySelection()}
   addUserKnob {22 reconnect_by_selection_similar l similar t "Force reconnect this Stamp and similar ones to a selected Anchor, whatever its name or title.\nIMPORTANT: Use this carefully, and only when the normal reconnection doesn't work." -STARTLINE T stamps.wiredReconnectBySelectionSimilar()}
   addUserKnob {22 reconnect_by_selection_selected l selected t "Force reconnect all selected Stamps to an also selected Anchor, whatever its name or title.\nIMPORTANT: Use this carefully, and only when the normal reconnection doesn't work." -STARTLINE T stamps.wiredReconnectBySelectionSelected()}
   addUserKnob {1 anchor l Anchor}
   anchor Anchor_232c9aab88
   addUserKnob {6 auto_reconnect_by_title l "<font color=#ED9977>&nbsp; auto-reconnect by title" t "When creating this stamp again (like on copy-paste), auto-reconnect it by title instead of doing it by the saved anchor's name, and auto-turn this off immediately.\nIMPORTANT: Should be off by default. Only use this for setting up templates." +STARTLINE}
   addUserKnob {26 line2 l "" +STARTLINE}
   addUserKnob {22 buttonHelp l Help -STARTLINE T stamps.showHelp()}
   addUserKnob {26 version l " " t "Stamps by Adrian Pueyo and Alexey Kuchinski.\nUpdated May 18 2021." -STARTLINE T "<a href=\"http://www.nukepedia.com/gizmos/other/stamps\" style=\"color:#666;text-decoration: none;\"><span style=\"color:#666\"> <big>Stamps v1.1</big></b></a>"}
  }
  Dot {
   name Dot30
   xpos 5275
   ypos -650
  }
  Group {
   inputs 3
   name gunshot15
   label "shot: \[value shotcount]\non frame: \[value shotstart]\n"
   xpos 5123
   ypos -623
   addUserKnob {20 User}
   addUserKnob {3 shotcount l shot}
   shotcount 15
   addUserKnob {3 shotstart l frame +INVISIBLE}
   shotstart {{"shotcount==0 ? 0 : shot\[value shotcount]-1" i}}
  }
   BackdropNode {
    inputs 0
    name BackdropNode19
    knobChanged "try:\n    listenedKnobs = \['text', 'position', 'name']\n    node = nuke.thisNode()\n    name = node.knob('name').value()\n    text = node.knob('text').value()\n    position = node.knob('position').value()\n    position = \"<\" + position + \">\"\n    label = node.knob('label').value()\n    \n    if nuke.thisKnob().name() in listenedKnobs:\n        if text == \"\":\n            if node.knob('position').value() == \"left\":\n                node.knob('label').setValue()\n            else:\n                node.knob('label').setValue(position + name)\n        else:\n            if node.knob('position').value() == \"left\":\n                node.knob('label').setValue(text)\n            else:\n                node.knob('label').setValue(position + text)\n                \n    elif nuke.thisKnob().name() == 'font_size':\n        fontSize = node.knob('font_size').value()\n        node.knob('note_font_size').setValue(fontSize)\nexcept:\n    pass"
    tile_color 0x232323ff
    label "<Left><h2> Gunshot"
    note_font_size 31.5
    xpos -693
    ypos -554
    bdwidth 876
    bdheight 1682
    addUserKnob {20 F_VFX l BackdropNode}
    addUserKnob {43 text l Text}
    text "<h2> Gunshot"
    addUserKnob {7 font_size l "Font Size" R 10 100}
    font_size 31.5
    addUserKnob {4 position l "" -STARTLINE M {Left Center}}
    addUserKnob {26 S01 l " " T " "}
    addUserKnob {22 grow l " <img src=\"F_scalep.png\">" -STARTLINE T "n=nuke.thisNode()\n\ndef grow(node=None,step=50):\n    try:\n        if not node:\n            n=nuke.selectedNode()\n        else:\n            n=node\n            n\['xpos'].setValue(n\['xpos'].getValue()-step)\n            n\['ypos'].setValue(n\['ypos'].getValue()-step)\n            n\['bdwidth'].setValue(n\['bdwidth'].getValue()+step*2)\n            n\['bdheight'].setValue(n\['bdheight'].getValue()+step*2)\n    except:\n        pass\ngrow(n,50)"}
    addUserKnob {22 shrink l " <img src=\"F_scalem.png\">" -STARTLINE T "n=nuke.thisNode()\n\ndef shrink(node=None,step=50):\n    try:\n        if not node:\n            n=nuke.selectedNode()\n        else:\n            n=node\n            n\['xpos'].setValue(n\['xpos'].getValue()+step)\n            n\['ypos'].setValue(n\['ypos'].getValue()+step)\n            n\['bdwidth'].setValue(n\['bdwidth'].getValue()-step*2)\n            n\['bdheight'].setValue(n\['bdheight'].getValue()-step*2)\n    except:\n        pass\nshrink(n,50)"}
    addUserKnob {22 colorandom l " <img src=\"ColorBars.png\">" -STARTLINE T "import colorsys, random\nn=nuke.thisNode()\nR,G,B= colorsys.hsv_to_rgb(random.random(),.1+random.random()*.15,.15+random.random()*.15)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ) )"}
    addUserKnob {22 darkgrey l "<font color=\"#232323\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.0, 0.0, 0.14]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 lightgrey l "<font color=\"#383838\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.0, 0.0, 0.22]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 red l "<font color=\"#8c3838\" size=6>■</font>" T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.0, 0.6, 0.55]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n" +STARTLINE}
    addUserKnob {22 orange l "<font color=\"#b28e59\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.1, 0.5, 0.7]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 yellow l "<font color=\"#ccc766\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.16, 0.5, 0.8]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 green l "<font color=\"#5d995b\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.33, 0.4, 0.6]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 cyan l "<font color=\"#72998f\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.46, 0.25, 0.6]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 blue l "<font color=\"#59687f\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.6, 0.3, 0.5]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 darkblue l "<font color=\"#63628c\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.67, 0.3, 0.55]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 magenta l "<font color=\"#927a99\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.8, 0.2, 0.6]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 pink l "<font color=\"#997a89\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.92, 0.2, 0.6]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {26 S02 l " " T " "}
    addUserKnob {26 Ftools l "" +STARTLINE T "<font color=\"#1C1C1C\"> v1.2 - Franklin VFX - 2018"}
   }
   BackdropNode {
    inputs 0
    name BackdropNode2
    knobChanged "try:\n    listenedKnobs = \['text', 'position', 'name']\n    node = nuke.thisNode()\n    name = node.knob('name').value()\n    text = node.knob('text').value()\n    position = node.knob('position').value()\n    position = \"<\" + position + \">\"\n    label = node.knob('label').value()\n    \n    if nuke.thisKnob().name() in listenedKnobs:\n        if text == \"\":\n            if node.knob('position').value() == \"left\":\n                node.knob('label').setValue()\n            else:\n                node.knob('label').setValue(position + name)\n        else:\n            if node.knob('position').value() == \"left\":\n                node.knob('label').setValue(text)\n            else:\n                node.knob('label').setValue(position + text)\n                \n    elif nuke.thisKnob().name() == 'font_size':\n        fontSize = node.knob('font_size').value()\n        node.knob('note_font_size').setValue(fontSize)\nexcept:\n    pass"
    tile_color 0x927a99ff
    note_font_size 50
    xpos -473
    ypos -221
    bdwidth 435
    bdheight 786
    z_order 1
    addUserKnob {20 F_VFX l BackdropNode}
    addUserKnob {43 text l Text}
    addUserKnob {7 font_size l "Font Size" R 10 100}
    font_size 50
    addUserKnob {4 position l "" -STARTLINE M {Left Center}}
    addUserKnob {26 S01 l " " T " "}
    addUserKnob {22 grow l " <img src=\"F_scalep.png\">" -STARTLINE T "n=nuke.thisNode()\n\ndef grow(node=None,step=50):\n    try:\n        if not node:\n            n=nuke.selectedNode()\n        else:\n            n=node\n            n\['xpos'].setValue(n\['xpos'].getValue()-step)\n            n\['ypos'].setValue(n\['ypos'].getValue()-step)\n            n\['bdwidth'].setValue(n\['bdwidth'].getValue()+step*2)\n            n\['bdheight'].setValue(n\['bdheight'].getValue()+step*2)\n    except:\n        pass\ngrow(n,50)"}
    addUserKnob {22 shrink l " <img src=\"F_scalem.png\">" -STARTLINE T "n=nuke.thisNode()\n\ndef shrink(node=None,step=50):\n    try:\n        if not node:\n            n=nuke.selectedNode()\n        else:\n            n=node\n            n\['xpos'].setValue(n\['xpos'].getValue()+step)\n            n\['ypos'].setValue(n\['ypos'].getValue()+step)\n            n\['bdwidth'].setValue(n\['bdwidth'].getValue()-step*2)\n            n\['bdheight'].setValue(n\['bdheight'].getValue()-step*2)\n    except:\n        pass\nshrink(n,50)"}
    addUserKnob {22 colorandom l " <img src=\"ColorBars.png\">" -STARTLINE T "import colorsys, random\nn=nuke.thisNode()\nR,G,B= colorsys.hsv_to_rgb(random.random(),.1+random.random()*.15,.15+random.random()*.15)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ) )"}
    addUserKnob {22 darkgrey l "<font color=\"#232323\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.0, 0.0, 0.14]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 lightgrey l "<font color=\"#383838\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.0, 0.0, 0.22]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 red l "<font color=\"#8c3838\" size=6>■</font>" T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.0, 0.6, 0.55]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n" +STARTLINE}
    addUserKnob {22 orange l "<font color=\"#b28e59\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.1, 0.5, 0.7]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 yellow l "<font color=\"#ccc766\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.16, 0.5, 0.8]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 green l "<font color=\"#5d995b\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.33, 0.4, 0.6]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 cyan l "<font color=\"#72998f\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.46, 0.25, 0.6]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 blue l "<font color=\"#59687f\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.6, 0.3, 0.5]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 darkblue l "<font color=\"#63628c\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.67, 0.3, 0.55]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 magenta l "<font color=\"#927a99\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.8, 0.2, 0.6]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 pink l "<font color=\"#997a89\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.92, 0.2, 0.6]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {26 S02 l " " T " "}
    addUserKnob {26 Ftools l "" +STARTLINE T "<font color=\"#1C1C1C\"> v1.2 - Franklin VFX - 2018"}
   }
   Constant {
    inputs 0
    channels rgb
    name Constant13
    xpos -643
    ypos 714
   }
   AdjBBox {
    numpixels {{size_bbox}}
    name AdjBBox13
    xpos -643
    ypos 849
   }
   Dot {
    name Dot78
    xpos -609
    ypos 987
   }
   Axis3 {
    inputs 0
    useMatrix true
    matrix {
        {{parent.cCard3D_1.matrix} {parent.cCard3D_1.matrix} {parent.cCard3D_1.matrix} {parent.cCard3D_1.matrix}}
        {{parent.cCard3D_1.matrix} {parent.cCard3D_1.matrix} {parent.cCard3D_1.matrix} {parent.cCard3D_1.matrix}}
        {{parent.cCard3D_1.matrix} {parent.cCard3D_1.matrix} {parent.cCard3D_1.matrix} {parent.cCard3D_1.matrix}}
        {{parent.cCard3D_1.matrix} {parent.cCard3D_1.matrix} {parent.cCard3D_1.matrix} {parent.cCard3D_1.matrix}}
      }
    name Axis14
    xpos -203
    ypos -90
   }
set N590a69f0 [stack 0]
push 0
   Input {
    inputs 0
    name top
    xpos -283
    ypos -1243
    number 1
   }
   TimeOffset {
    time_offset {{"shot_\[value shotnmbr]==0 ? 0 : shot_\[value shotnmbr]-1"}}
    time ""
    name CTimeOffset1
    label "shot: \[value shotnmbr]\non frame \[value time_offset]"
    xpos -283
    ypos -924
    addUserKnob {20 User}
    addUserKnob {3 shotnmbr l "shot "}
    shotnmbr {{shotcount}}
    addUserKnob {3 ref}
    ref {{time_offset+1}}
   }
   Group {
    name DecimalTimeOffset1
    tile_color 0xafa35dff
    label "random asset"
    note_font "Bitstream Vera Sans Bold"
    xpos -283
    ypos -841
    addUserKnob {20 User}
    addUserKnob {7 decimal l "time offset (decimal)"}
    decimal {{random(shotcount*seed)}}
    addUserKnob {26 ""}
    addUserKnob {26 _1 l "" +STARTLINE T "Chris Fryer | 2020\nupdated by Yorben Otto | 2024"}
   }
    Input {
     inputs 0
     name Input1
     xpos 426
     ypos -793
    }
    TimeOffset {
     time_offset {{(-floor(parent.decimal))*(DecimalTimeOffset1.decimal<0)}}
     time ""
     name TimeOffset1
     xpos 426
     ypos -675
    }
    Dot {
     name Dot6
     xpos 460
     ypos -635
    }
set N590e6250 [stack 0]
    Dot {
     name Dot5
     xpos 350
     ypos -635
    }
    Dot {
     name Dot7
     xpos 350
     ypos -365
    }
push $N590e6250
    Dot {
     name Dot1
     xpos 572
     ypos -635
    }
    TimeBlur {
     divisions 2
     shutter {{(parent.decimal-(floor(parent.decimal)))*2}}
     shutteroffset start
     shuttercustomoffset 0
     name TimeBlur1
     xpos 538
     ypos -558
    }
    Dot {
     name Dot2
     xpos 572
     ypos -490
    }
push $N590e6250
    TimeBlur {
     divisions 2
     shutter {{parent.decimal*2}}
     shutteroffset start
     shuttercustomoffset 0
     name TimeBlur8
     xpos 426
     ypos -556
    }
    Switch {
     inputs 2
     which {{parent.decimal<0}}
     name Switch1
     xpos 426
     ypos -494
    }
    Multiply {
     value {{parent.TimeBlur8.divisions}}
     name Multiply6
     xpos 426
     ypos -436
    }
    Merge2 {
     inputs 2
     operation from
     name Merge6
     xpos 426
     ypos -369
    }
set N54c37fe0 [stack 0]
    Output {
     name Output1
     xpos 426
     ypos -221
    }
push $N54c37fe0
push $N54c37fe0
    Viewer {
     inputs 2
     frame_range 1-100
     name Viewer1
     xpos 675
     ypos -246
    }
   end_group
   NoTimeBlur {
    name NoTimeBlur1
    xpos -283
    ypos -779
   }
   Transform {
    scale {{0.05+(0.05*(((parent.DecimalTimeOffset13.decimal-0.5)*2)*ScaleVariationSmoke))}}
    center {{root.width/2 x1015 2304} {root.height/2}}
    shutteroffset centred
    name Transform44
    xpos -283
    ypos -152
   }
   Card3D {
    inputs 3
    rot_order ZYX
    translate {0 0 0}
    rotate {90 0 0}
    shutteroffset centred
    name cCard3D25
    tile_color 0x7b1d1dff
    xpos -283
    ypos 11
    addUserKnob {20 User l parent}
    addUserKnob {22 python_button l "set parent" t "select parent node, and press this button to set the selected node as parent" +INVISIBLE T "n = nuke.selectedNode()\['name'].getValue()\nnuke.thisNode()\['string'].setValue(n)" +STARTLINE}
    addUserKnob {1 string l parent +INVISIBLE}
    string null
    addUserKnob {3 ref l "ref frame"}
    ref 1015
   }
   Transform {
    translate {{"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].translate.x(ref)\}]"} {"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].translate.y(ref)\}]"}}
    rotate {{"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].rotate-\[value parent_gun].rotate(ref)\}]"}}
    scale {{"\[if \{\[value parent_gun]==\"null\"\} \{return 1\} \{return 1+(\[value parent_gun].scale-\[value parent_gun].scale(ref))\}]"}}
    center {{"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].center.x(ref)\}]"} {"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].center.y(ref)\}]"}}
    name Transform_GUNMatchMove37
    xpos -283
    ypos 126
    addUserKnob {20 User l parent}
    addUserKnob {3 ref}
    ref {{parent.CTimeOffset.ref}}
   }
   Transform {
    translate {{"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].translate.x-\[value parent_env].translate.x(ref)\}]"} {"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].translate.y-\[value parent_env].translate.y(ref)\}]"}}
    rotate {{"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].rotate-\[value parent_env].rotate(ref)\}]"}}
    scale {{"\[if \{\[value parent_gun]==\"null\"\} \{return 1\} \{return 1+(\[value parent_env].scale-\[value parent_env].scale(ref))\}]"}}
    center {{"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].center.x(ref)\}]"} {"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].center.y(ref)\}]"}}
    motionblur 0.2
    shutter {{SmokeMB*0.5}}
    shutteroffset centred
    name Transform_ENVMatchMove37
    label "\n"
    xpos -283
    ypos 255
    addUserKnob {20 User l parent}
    addUserKnob {3 ref}
    ref {{parent.CTimeOffset.ref}}
   }
   Transform {
    translate {{"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return -((root.width/2)-(\[value parent_gun].center.x(1)+\[value parent_gun].translate.x(1)))\}]"} {"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return -((root.height/2)-(\[value parent_gun].center.y(1)+\[value parent_gun].translate.y(1)))\}]"}}
    name Transform_GUNMatchMove6
    label "alignment correction"
    xpos -283
    ypos 344
    addUserKnob {20 User l parent}
    addUserKnob {22 python_button l "set parent" t "select parent node, and press this button to set the selected node as parent" T "n = nuke.selectedNode()\['name'].getValue()\nnuke.thisNode()\['string'].setValue(n)" +STARTLINE}
    addUserKnob {1 string l parent}
    string Transform_MatchMove10
    addUserKnob {3 ref +INVISIBLE}
    ref {{parent.cCard3D_8.ref}}
   }
   Multiply {
    value {{math_matrix.result_y_smoke(parent.CTimeOffset.ref)}}
    name Angle_reveal_top1
    label TOP
    xpos -283
    ypos 403
   }
   Remove {
    operation keep
    channels rgb
    name Remove1
    xpos -283
    ypos 514
   }
push 0
   Switch {
    inputs 2
    which {{parent.Angle_reveal_top1.value>0.001}}
    name Switch1
    xpos -283
    ypos 660
   }
   Dot {
    name Dot82
    xpos -249
    ypos 705
   }
push 0
push $N590a69f0
push 0
   Input {
    inputs 0
    name front
    xpos -436
    ypos -1243
    number 2
   }
   TimeOffset {
    time_offset {{"shot_\[value shotnmbr]==0 ? 0 : shot_\[value shotnmbr]-1"}}
    time ""
    name CTimeOffset2
    label "shot: \[value shotnmbr]\non frame \[value time_offset]"
    xpos -436
    ypos -925
    addUserKnob {20 User}
    addUserKnob {3 shotnmbr l "shot "}
    shotnmbr {{shotcount}}
    addUserKnob {3 ref}
    ref {{time_offset+1}}
   }
   Group {
    name DecimalTimeOffset2
    tile_color 0xafa35dff
    label "random asset"
    note_font "Bitstream Vera Sans Bold"
    xpos -436
    ypos -842
    addUserKnob {20 User}
    addUserKnob {7 decimal l "time offset (decimal)"}
    decimal {{random(shotcount*seed)}}
    addUserKnob {26 ""}
    addUserKnob {26 _1 l "" +STARTLINE T "Chris Fryer | 2020\nupdated by Yorben Otto | 2024"}
   }
    Input {
     inputs 0
     name Input1
     xpos 426
     ypos -793
    }
    TimeOffset {
     time_offset {{(-floor(parent.decimal))*(DecimalTimeOffset2.decimal<0)}}
     time ""
     name TimeOffset1
     xpos 426
     ypos -675
    }
    Dot {
     name Dot6
     xpos 460
     ypos -635
    }
set N5e683e00 [stack 0]
    Dot {
     name Dot5
     xpos 350
     ypos -635
    }
    Dot {
     name Dot7
     xpos 350
     ypos -365
    }
push $N5e683e00
    Dot {
     name Dot1
     xpos 572
     ypos -635
    }
    TimeBlur {
     divisions 2
     shutter {{(parent.decimal-(floor(parent.decimal)))*2}}
     shutteroffset start
     shuttercustomoffset 0
     name TimeBlur1
     xpos 538
     ypos -558
    }
    Dot {
     name Dot2
     xpos 572
     ypos -490
    }
push $N5e683e00
    TimeBlur {
     divisions 2
     shutter {{parent.decimal*2}}
     shutteroffset start
     shuttercustomoffset 0
     name TimeBlur8
     xpos 426
     ypos -556
    }
    Switch {
     inputs 2
     which {{parent.decimal<0}}
     name Switch1
     xpos 426
     ypos -494
    }
    Multiply {
     value {{parent.TimeBlur8.divisions}}
     name Multiply6
     xpos 426
     ypos -436
    }
    Merge2 {
     inputs 2
     operation from
     name Merge6
     xpos 426
     ypos -369
    }
set N5e6c5d40 [stack 0]
    Output {
     name Output1
     xpos 426
     ypos -221
    }
push $N5e6c5d40
push $N5e6c5d40
    Viewer {
     inputs 2
     frame_range 1-100
     name Viewer1
     xpos 675
     ypos -246
    }
   end_group
   NoTimeBlur {
    name NoTimeBlur5
    xpos -436
    ypos -780
   }
   Transform {
    scale {{0.05+(0.05*(((parent.DecimalTimeOffset13.decimal-0.5)*2)*ScaleVariationSmoke))}}
    center {{root.width/2 x1015 2304} {root.height/2}}
    shutteroffset centred
    name Transform45
    xpos -436
    ypos -151
   }
   Card3D {
    inputs 3
    rot_order ZYX
    translate {0 0 0}
    rotate {0 90 0}
    shutteroffset centred
    name cCard3D26
    tile_color 0x7b1d1dff
    xpos -436
    ypos 15
    addUserKnob {20 User l parent}
    addUserKnob {22 python_button l "set parent" t "select parent node, and press this button to set the selected node as parent" +INVISIBLE T "n = nuke.selectedNode()\['name'].getValue()\nnuke.thisNode()\['string'].setValue(n)" +STARTLINE}
    addUserKnob {1 string l parent +INVISIBLE}
    string null
    addUserKnob {3 ref l "ref frame"}
    ref 1015
   }
   Transform {
    translate {{"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].translate.x(ref)\}]"} {"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].translate.y(ref)\}]"}}
    rotate {{"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].rotate-\[value parent_gun].rotate(ref)\}]"}}
    scale {{"\[if \{\[value parent_gun]==\"null\"\} \{return 1\} \{return 1+(\[value parent_gun].scale-\[value parent_gun].scale(ref))\}]"}}
    center {{"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].center.x(ref)\}]"} {"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].center.y(ref)\}]"}}
    name Transform_GUNMatchMove38
    label "\n"
    xpos -436
    ypos 124
    addUserKnob {20 User l parent}
    addUserKnob {3 ref}
    ref {{parent.CTimeOffset.ref}}
   }
   Transform {
    translate {{"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].translate.x-\[value parent_env].translate.x(ref)\}]"} {"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].translate.y-\[value parent_env].translate.y(ref)\}]"}}
    rotate {{"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].rotate-\[value parent_env].rotate(ref)\}]"}}
    scale {{"\[if \{\[value parent_gun]==\"null\"\} \{return 1\} \{return 1+(\[value parent_env].scale-\[value parent_env].scale(ref))\}]"}}
    center {{"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].center.x(ref)\}]"} {"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].center.y(ref)\}]"}}
    motionblur 0.2
    shutter {{SmokeMB*0.5}}
    shutteroffset centred
    name Transform_ENVMatchMove38
    xpos -436
    ypos 254
    addUserKnob {20 User l parent}
    addUserKnob {3 ref}
    ref {{parent.CTimeOffset.ref}}
   }
   Transform {
    translate {{"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return -((root.width/2)-(\[value parent_gun].center.x(1)+\[value parent_gun].translate.x(1)))\}]"} {"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return -((root.height/2)-(\[value parent_gun].center.y(1)+\[value parent_gun].translate.y(1)))\}]"}}
    name Transform_GUNMatchMove7
    label "alignment correction"
    xpos -436
    ypos 343
    addUserKnob {20 User l parent}
    addUserKnob {22 python_button l "set parent" t "select parent node, and press this button to set the selected node as parent" T "n = nuke.selectedNode()\['name'].getValue()\nnuke.thisNode()\['string'].setValue(n)" +STARTLINE}
    addUserKnob {1 string l parent}
    string Transform_MatchMove10
    addUserKnob {3 ref +INVISIBLE}
    ref {{parent.cCard3D_8.ref}}
   }
   Multiply {
    value {{math_matrix.result_x_smoke(parent.CTimeOffset.ref)}}
    name Angle_reveal_front1
    label FRONT
    xpos -436
    ypos 401
   }
   Remove {
    operation keep
    channels rgb
    name Remove2
    xpos -436
    ypos 511
   }
push 0
   Switch {
    inputs 2
    which {{parent.Angle_reveal_front1.value>0.001}}
    name Switch2
    xpos -436
    ypos 660
   }
   Dot {
    name Dot83
    xpos -402
    ypos 735
   }
   Input {
    inputs 0
    name side
    xpos -130
    ypos -1242
   }
   TimeOffset {
    time_offset {{"shot_\[value shotnmbr]==0 ? 0 : shot_\[value shotnmbr]-1"}}
    time ""
    name CTimeOffset
    label "shot: \[value shotnmbr]\non frame \[value time_offset]"
    xpos -130
    ypos -927
    addUserKnob {20 User}
    addUserKnob {3 shotnmbr l "shot "}
    shotnmbr {{shotcount}}
    addUserKnob {3 ref}
    ref {{time_offset+1}}
   }
   Group {
    name DecimalTimeOffset13
    tile_color 0xafa35dff
    label "random asset"
    note_font "Bitstream Vera Sans Bold"
    xpos -130
    ypos -844
    addUserKnob {20 User}
    addUserKnob {7 decimal l "time offset (decimal)"}
    decimal {{random(shotcount*seed)}}
    addUserKnob {26 ""}
    addUserKnob {26 _1 l "" +STARTLINE T "Chris Fryer | 2020\nupdated by Yorben Otto | 2024"}
   }
    Input {
     inputs 0
     name Input1
     xpos 426
     ypos -793
    }
    TimeOffset {
     time_offset {{(-floor(parent.decimal))*(DecimalTimeOffset13.decimal<0)}}
     time ""
     name TimeOffset1
     xpos 426
     ypos -675
    }
    Dot {
     name Dot6
     xpos 460
     ypos -635
    }
set N58e219d0 [stack 0]
    Dot {
     name Dot5
     xpos 350
     ypos -635
    }
    Dot {
     name Dot7
     xpos 350
     ypos -365
    }
push $N58e219d0
    Dot {
     name Dot1
     xpos 572
     ypos -635
    }
    TimeBlur {
     divisions 2
     shutter {{(parent.decimal-(floor(parent.decimal)))*2}}
     shutteroffset start
     shuttercustomoffset 0
     name TimeBlur1
     xpos 538
     ypos -558
    }
    Dot {
     name Dot2
     xpos 572
     ypos -490
    }
push $N58e219d0
    TimeBlur {
     divisions 2
     shutter {{parent.decimal*2}}
     shutteroffset start
     shuttercustomoffset 0
     name TimeBlur8
     xpos 426
     ypos -556
    }
    Switch {
     inputs 2
     which {{parent.decimal<0}}
     name Switch1
     xpos 426
     ypos -494
    }
    Multiply {
     value {{parent.TimeBlur8.divisions}}
     name Multiply6
     xpos 426
     ypos -436
    }
    Merge2 {
     inputs 2
     operation from
     name Merge6
     xpos 426
     ypos -369
    }
set N58e63910 [stack 0]
    Output {
     name Output1
     xpos 426
     ypos -221
    }
push $N58e63910
push $N58e63910
    Viewer {
     inputs 2
     frame_range 1-100
     name Viewer1
     xpos 675
     ypos -246
    }
   end_group
   NoTimeBlur {
    name NoTimeBlur13
    xpos -130
    ypos -782
   }
   Transform {
    scale {{0.05+(0.05*(((parent.DecimalTimeOffset13.decimal-0.5)*2)*ScaleVariationSmoke))}}
    center {{root.width/2 x1015 2304} {root.height/2}}
    shutteroffset centred
    name Transform46
    xpos -130
    ypos -155
   }
   Card3D {
    translate {{"\[if \{\[exists  parent.parent.parent.input0]\} \{return \[value \[topnode parent.parent.parent.input0].name].translate.x(ref)\} \{return 0\}]"} {"\[if \{\[exists  parent.parent.parent.input0]\} \{return \[value \[topnode parent.parent.parent.input0].name].translate.y(ref)\} \{return 0\}]"} {"\[if \{\[exists  parent.parent.parent.input0]\} \{return \[value \[topnode parent.parent.parent.input0].name].translate.z(ref)\} \{return -1\}]"}}
    rotate {{"\[if \{\[exists  parent.parent.parent.input0]\} \{return \[value \[topnode parent.parent.parent.input0].name].rotate.x(ref)\} \{return 0\}]"} {"\[if \{\[exists  parent.parent.parent.input0]\} \{return \[value \[topnode parent.parent.parent.input0].name].rotate.y(ref)\} \{return 0\}]"} {"\[if \{\[exists  parent.parent.parent.input0]\} \{return \[value \[topnode parent.parent.parent.input0].name].rotate.z(ref)\} \{return 0\}]"}}
    scaling {{"\[if \{\[exists  parent.parent.parent.input0]\} \{return \[value \[topnode parent.parent.parent.input0].name].scaling.x(ref)\} \{return 1\}]"} {"\[if \{\[exists  parent.parent.parent.input0]\} \{return \[value \[topnode parent.parent.parent.input0].name].scaling.y(ref)\} \{return 1\}]"} {"\[if \{\[exists  parent.parent.parent.input0]\} \{return \[value \[topnode parent.parent.parent.input0].name].scaling.z(ref)\} \{return 1\}]"}}
    uniform_scale {{"\[if \{\[exists  parent.parent.parent.input0]\} \{return (\[value \[topnode parent.parent.parent.input0].name].uniform_scale(ref)*25)\} \{return 25\}]"}}
    shutteroffset centred
    name cCard3D_1
    tile_color 0x7b1d1dff
    label "ref frame: \[value ref]"
    xpos -130
    ypos 2
    addUserKnob {20 User l parent}
    addUserKnob {22 python_button l "set parent" t "select parent node, and press this button to set the selected node as parent" +INVISIBLE T "n = nuke.selectedNode()\['name'].getValue()\nnuke.thisNode()\['string'].setValue(n)" +STARTLINE}
    addUserKnob {1 string l parent +INVISIBLE}
    string null
    addUserKnob {3 id l "id number"}
    id {{parent.CTimeOffset.shotnmbr}}
    addUserKnob {3 ref l "ref frame"}
    ref {{parent.CTimeOffset.ref}}
   }
   Transform {
    translate {{"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].translate.x(ref)\}]"} {"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].translate.y(ref)\}]"}}
    rotate {{"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].rotate-\[value parent_gun].rotate(ref)\}]"}}
    scale {{"\[if \{\[value parent_gun]==\"null\"\} \{return 1\} \{return 1+(\[value parent_gun].scale-\[value parent_gun].scale(ref))\}]"}}
    center {{"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].center.x(ref)\}]"} {"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].center.y(ref)\}]"}}
    name Transform_GUNMatchMove39
    label "\n"
    xpos -130
    ypos 124
    addUserKnob {20 User l parent}
    addUserKnob {3 ref}
    ref {{parent.CTimeOffset.ref}}
   }
   Transform {
    translate {{"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].translate.x-\[value parent_env].translate.x(ref)\}]"} {"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].translate.y-\[value parent_env].translate.y(ref)\}]"}}
    rotate {{"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].rotate-\[value parent_env].rotate(ref)\}]"}}
    scale {{"\[if \{\[value parent_gun]==\"null\"\} \{return 1\} \{return 1+(\[value parent_env].scale-\[value parent_env].scale(ref))\}]"}}
    center {{"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].center.x(ref)\}]"} {"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].center.y(ref)\}]"}}
    motionblur 0.2
    shutter {{SmokeMB*0.5}}
    shutteroffset centred
    name Transform_ENVMatchMove39
    xpos -130
    ypos 258
    addUserKnob {20 User l parent}
    addUserKnob {3 ref}
    ref {{parent.CTimeOffset.ref}}
   }
   Transform {
    translate {{"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return -((root.width/2)-(\[value parent_gun].center.x(1)+\[value parent_gun].translate.x(1)))\}]"} {"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return -((root.height/2)-(\[value parent_gun].center.y(1)+\[value parent_gun].translate.y(1)))\}]"}}
    name Transform_GUNMatchMove5
    label "alignment correction"
    xpos -130
    ypos 340
    addUserKnob {20 User l parent}
    addUserKnob {22 python_button l "set parent" t "select parent node, and press this button to set the selected node as parent" T "n = nuke.selectedNode()\['name'].getValue()\nnuke.thisNode()\['string'].setValue(n)" +STARTLINE}
    addUserKnob {1 string l parent}
    string Transform_MatchMove10
    addUserKnob {3 ref +INVISIBLE}
    ref {{parent.cCard3D_8.ref}}
   }
   Multiply {
    value {{math_matrix.result_z_smoke(parent.CTimeOffset.ref)}}
    name Angle_reveal_side1
    label SIDE
    xpos -130
    ypos 404
   }
   Remove {
    operation keep
    channels rgb
    name Remove39
    xpos -130
    ypos 514
   }
push 0
   Switch {
    inputs 2
    which {{parent.Angle_reveal_side1.value>0.001}}
    name Switch3
    xpos -130
    ypos 658
   }
   Merge2 {
    inputs 3+1
    operation max
    Achannels rgb
    Bchannels rgb
    output rgb
    name Merge28
    xpos -130
    ypos 731
   }
   Merge2 {
    inputs 2
    operation plus
    bbox intersection
    Achannels rgb
    Bchannels rgb
    output rgb
    name Merge29
    xpos -130
    ypos 983
   }
   Shuffle2 {
    fromInput1 {{0} B}
    fromInput2 {{0} B}
    mappings "4 rgba.red 0 0 rgba.red 0 0 rgba.green 0 1 rgba.green 0 1 rgba.blue 0 2 rgba.alpha 0 3 rgba.blue 0 2 rgba.blue 0 2"
    name Shuffle1
    xpos -130
    ypos 1021
   }
push 0
   Switch {
    inputs 2
    which {{"shot_\[value count]==0?0:frame>=shot_\[value count]"}}
    name cSwitch_13
    xpos -130
    ypos 1078
    addUserKnob {20 User}
    addUserKnob {3 count}
    count {{parent.CTimeOffset.shotnmbr}}
   }
   Output {
    name Output1
    xpos -130
    ypos 1323
   }
   StickyNote {
    inputs 0
    name StickyNote1
    label "<-- handy to break concatonation?  "
    xpos -39
    ypos 193
   }
  end_group
push $N586971d0
  PostageStamp {
   name Stamp55
   help "Stamps by Adrian Pueyo and Alexey Kuchinski.\nUpdated May 18 2021"
   onCreate "if nuke.GUI:\n    try:\n        import stamps; stamps.wiredOnCreate()\n    except:\n        pass\n"
   knobChanged "import stamps; stamps.wiredKnobChanged()"
   autolabel "nuke.thisNode().knob(\"title\").value()"
   tile_color 0x1000001
   note_font "Bitstream Vera Sans"
   note_font_size 20
   xpos 6533
   ypos -715
   hide_input true
   addUserKnob {20 wired_tab l "Wired Stamp"}
   addUserKnob {26 identifier -STARTLINE +HIDDEN T wired}
   addUserKnob {3 lockCallbacks l "" +STARTLINE +HIDDEN}
   addUserKnob {6 toReconnect -STARTLINE +HIDDEN}
   addUserKnob {1 title l Title: t "Displayed name on the Node Graph for this Stamp and its Anchor.\nIMPORTANT: This is only for display purposes, and is different from the real/internal name of the Stamps."}
   title smoke_FRONT
   addUserKnob {26 prev_title l "" +STARTLINE +HIDDEN T smoke_FRONT}
   addUserKnob {26 tags l Tags: t "Tags of this stamp's Anchor, for information purpose only.\nClick \"show anchor\" to change them." T <i>2D</i>}
   addUserKnob {26 backdrops l Backdrops: t "Labels of backdrop nodes which contain this stamp's Anchor." T "<i><Left>before or after Flare</i>"}
   addUserKnob {26 line1 l "" +STARTLINE}
   addUserKnob {6 postageStamp_show l "postage stamp" t "Enable the postage stamp thumbnail in this node.\nYou're seeing this because the class of this node includes the postage_stamp knob." +STARTLINE}
   addUserKnob {26 anchor_label l Anchor: T " "}
   addUserKnob {22 show_anchor l " show anchor " t "Show the properties panel for this Stamp's Anchor." -STARTLINE T stamps.wiredShowAnchor()}
   addUserKnob {22 zoom_anchor l "zoom anchor" t "Navigate to this Stamp's Anchor on the Node Graph." -STARTLINE T stamps.wiredZoomAnchor()}
   addUserKnob {26 stamps_label l Stamps: T " "}
   addUserKnob {22 zoomNext l " zoom next " t "Navigate to this Stamp's next sibling on the Node Graph." -STARTLINE T stamps.wiredZoomNext()}
   addUserKnob {22 selectSimilar l " select similar " t "Select all similar Stamps to this one on the Node Graph." -STARTLINE T stamps.wiredSelectSimilar()}
   addUserKnob {26 space_1 l "" +STARTLINE T " "}
   addUserKnob {26 reconnect_label l Reconnect: t "Reconnect by the stored Anchor name." T " "}
   addUserKnob {22 reconnect_this l this t "Reconnect this Stamp to its Anchor, by its stored Anchor name." -STARTLINE T "n = nuke.thisNode()\ntry:\n    n.setInput(0,nuke.toNode(n.knob(\"anchor\").value()))\nexcept:\n    nuke.message(\"Unable to reconnect.\")\ntry:\n    import stamps\n    stamps.wiredGetStyle(n)\nexcept:\n    pass\n"}
   addUserKnob {22 reconnect_similar l similar t "Reconnect this Stamp and similar ones to their Anchor, by their stored anchor name." -STARTLINE T stamps.wiredReconnectSimilar()}
   addUserKnob {22 reconnect_all l all t "Reconnect all the Stamps to their Anchors, by their stored anchor names." -STARTLINE T stamps.wiredReconnectAll()}
   addUserKnob {26 space_2 l "" +STARTLINE T " "}
   addUserKnob {20 advanced_reconnection l "Advanced Reconnection" n 2}
   addUserKnob {26 reconnect_by_title_label l "<font color=gold>By Title:" t "Reconnect by searching for a matching title." T " "}
   addUserKnob {22 reconnect_by_title_this l this t "Look for an Anchor that shares this Stamp's title, and connect this Stamp to it.\nIMPORTANT: Use this carefully, and only when the normal reconnection doesn't work." -STARTLINE T stamps.wiredReconnectByTitle()}
   addUserKnob {22 reconnect_by_title_similar l similar t "Look for an Anchor that shares this Stamp's title, and connect this Stamp and similar ones to it.\nIMPORTANT: Use this carefully, and only when the normal reconnection doesn't work." -STARTLINE T stamps.wiredReconnectByTitleSimilar()}
   addUserKnob {22 reconnect_by_title_selected l selected t "For each Stamp selected, look for an Anchor that shares its title, and connect to it.\nIMPORTANT: Use this carefully, and only when the normal reconnection doesn't work." -STARTLINE T stamps.wiredReconnectByTitleSelected()}
   addUserKnob {26 reconnect_by_selection_label l "<font color=orangered>By Selection:" t "Force reconnect to a selected Anchor." T " "}
   addUserKnob {22 reconnect_by_selection_this l this t "Force reconnect this Stamp to a selected Anchor, whatever its name or title.\nIMPORTANT: Use this carefully, and only when the normal reconnection doesn't work." -STARTLINE T stamps.wiredReconnectBySelection()}
   addUserKnob {22 reconnect_by_selection_similar l similar t "Force reconnect this Stamp and similar ones to a selected Anchor, whatever its name or title.\nIMPORTANT: Use this carefully, and only when the normal reconnection doesn't work." -STARTLINE T stamps.wiredReconnectBySelectionSimilar()}
   addUserKnob {22 reconnect_by_selection_selected l selected t "Force reconnect all selected Stamps to an also selected Anchor, whatever its name or title.\nIMPORTANT: Use this carefully, and only when the normal reconnection doesn't work." -STARTLINE T stamps.wiredReconnectBySelectionSelected()}
   addUserKnob {1 anchor l Anchor}
   anchor Anchor_220a2be282
   addUserKnob {6 auto_reconnect_by_title l "<font color=#ED9977>&nbsp; auto-reconnect by title" t "When creating this stamp again (like on copy-paste), auto-reconnect it by title instead of doing it by the saved anchor's name, and auto-turn this off immediately.\nIMPORTANT: Should be off by default. Only use this for setting up templates." +STARTLINE}
   addUserKnob {26 line2 l "" +STARTLINE}
   addUserKnob {22 buttonHelp l Help -STARTLINE T stamps.showHelp()}
   addUserKnob {26 version l " " t "Stamps by Adrian Pueyo and Alexey Kuchinski.\nUpdated May 18 2021." -STARTLINE T "<a href=\"http://www.nukepedia.com/gizmos/other/stamps\" style=\"color:#666;text-decoration: none;\"><span style=\"color:#666\"> <big>Stamps v1.1</big></b></a>"}
  }
  Dot {
   name Dot37
   xpos 6567
   ypos -667
  }
push $N58d70c10
  PostageStamp {
   name Stamp56
   help "Stamps by Adrian Pueyo and Alexey Kuchinski.\nUpdated May 18 2021"
   onCreate "if nuke.GUI:\n    try:\n        import stamps; stamps.wiredOnCreate()\n    except:\n        pass\n"
   knobChanged "import stamps; stamps.wiredKnobChanged()"
   autolabel "nuke.thisNode().knob(\"title\").value()"
   tile_color 0x1000001
   note_font "Bitstream Vera Sans"
   note_font_size 20
   xpos 6658
   ypos -715
   hide_input true
   addUserKnob {20 wired_tab l "Wired Stamp"}
   addUserKnob {26 identifier -STARTLINE +HIDDEN T wired}
   addUserKnob {3 lockCallbacks l "" +STARTLINE +HIDDEN}
   addUserKnob {6 toReconnect -STARTLINE +HIDDEN}
   addUserKnob {1 title l Title: t "Displayed name on the Node Graph for this Stamp and its Anchor.\nIMPORTANT: This is only for display purposes, and is different from the real/internal name of the Stamps."}
   title smoke_TOP
   addUserKnob {26 prev_title l "" +STARTLINE +HIDDEN T smoke_TOP}
   addUserKnob {26 tags l Tags: t "Tags of this stamp's Anchor, for information purpose only.\nClick \"show anchor\" to change them." T <i>2D</i>}
   addUserKnob {26 backdrops l Backdrops: t "Labels of backdrop nodes which contain this stamp's Anchor." T "<i><Left>before or after Flare</i>"}
   addUserKnob {26 line1 l "" +STARTLINE}
   addUserKnob {6 postageStamp_show l "postage stamp" t "Enable the postage stamp thumbnail in this node.\nYou're seeing this because the class of this node includes the postage_stamp knob." +STARTLINE}
   addUserKnob {26 anchor_label l Anchor: T " "}
   addUserKnob {22 show_anchor l " show anchor " t "Show the properties panel for this Stamp's Anchor." -STARTLINE T stamps.wiredShowAnchor()}
   addUserKnob {22 zoom_anchor l "zoom anchor" t "Navigate to this Stamp's Anchor on the Node Graph." -STARTLINE T stamps.wiredZoomAnchor()}
   addUserKnob {26 stamps_label l Stamps: T " "}
   addUserKnob {22 zoomNext l " zoom next " t "Navigate to this Stamp's next sibling on the Node Graph." -STARTLINE T stamps.wiredZoomNext()}
   addUserKnob {22 selectSimilar l " select similar " t "Select all similar Stamps to this one on the Node Graph." -STARTLINE T stamps.wiredSelectSimilar()}
   addUserKnob {26 space_1 l "" +STARTLINE T " "}
   addUserKnob {26 reconnect_label l Reconnect: t "Reconnect by the stored Anchor name." T " "}
   addUserKnob {22 reconnect_this l this t "Reconnect this Stamp to its Anchor, by its stored Anchor name." -STARTLINE T "n = nuke.thisNode()\ntry:\n    n.setInput(0,nuke.toNode(n.knob(\"anchor\").value()))\nexcept:\n    nuke.message(\"Unable to reconnect.\")\ntry:\n    import stamps\n    stamps.wiredGetStyle(n)\nexcept:\n    pass\n"}
   addUserKnob {22 reconnect_similar l similar t "Reconnect this Stamp and similar ones to their Anchor, by their stored anchor name." -STARTLINE T stamps.wiredReconnectSimilar()}
   addUserKnob {22 reconnect_all l all t "Reconnect all the Stamps to their Anchors, by their stored anchor names." -STARTLINE T stamps.wiredReconnectAll()}
   addUserKnob {26 space_2 l "" +STARTLINE T " "}
   addUserKnob {20 advanced_reconnection l "Advanced Reconnection" n 2}
   addUserKnob {26 reconnect_by_title_label l "<font color=gold>By Title:" t "Reconnect by searching for a matching title." T " "}
   addUserKnob {22 reconnect_by_title_this l this t "Look for an Anchor that shares this Stamp's title, and connect this Stamp to it.\nIMPORTANT: Use this carefully, and only when the normal reconnection doesn't work." -STARTLINE T stamps.wiredReconnectByTitle()}
   addUserKnob {22 reconnect_by_title_similar l similar t "Look for an Anchor that shares this Stamp's title, and connect this Stamp and similar ones to it.\nIMPORTANT: Use this carefully, and only when the normal reconnection doesn't work." -STARTLINE T stamps.wiredReconnectByTitleSimilar()}
   addUserKnob {22 reconnect_by_title_selected l selected t "For each Stamp selected, look for an Anchor that shares its title, and connect to it.\nIMPORTANT: Use this carefully, and only when the normal reconnection doesn't work." -STARTLINE T stamps.wiredReconnectByTitleSelected()}
   addUserKnob {26 reconnect_by_selection_label l "<font color=orangered>By Selection:" t "Force reconnect to a selected Anchor." T " "}
   addUserKnob {22 reconnect_by_selection_this l this t "Force reconnect this Stamp to a selected Anchor, whatever its name or title.\nIMPORTANT: Use this carefully, and only when the normal reconnection doesn't work." -STARTLINE T stamps.wiredReconnectBySelection()}
   addUserKnob {22 reconnect_by_selection_similar l similar t "Force reconnect this Stamp and similar ones to a selected Anchor, whatever its name or title.\nIMPORTANT: Use this carefully, and only when the normal reconnection doesn't work." -STARTLINE T stamps.wiredReconnectBySelectionSimilar()}
   addUserKnob {22 reconnect_by_selection_selected l selected t "Force reconnect all selected Stamps to an also selected Anchor, whatever its name or title.\nIMPORTANT: Use this carefully, and only when the normal reconnection doesn't work." -STARTLINE T stamps.wiredReconnectBySelectionSelected()}
   addUserKnob {1 anchor l Anchor}
   anchor Anchor_25b668170c
   addUserKnob {6 auto_reconnect_by_title l "<font color=#ED9977>&nbsp; auto-reconnect by title" t "When creating this stamp again (like on copy-paste), auto-reconnect it by title instead of doing it by the saved anchor's name, and auto-turn this off immediately.\nIMPORTANT: Should be off by default. Only use this for setting up templates." +STARTLINE}
   addUserKnob {26 line2 l "" +STARTLINE}
   addUserKnob {22 buttonHelp l Help -STARTLINE T stamps.showHelp()}
   addUserKnob {26 version l " " t "Stamps by Adrian Pueyo and Alexey Kuchinski.\nUpdated May 18 2021." -STARTLINE T "<a href=\"http://www.nukepedia.com/gizmos/other/stamps\" style=\"color:#666;text-decoration: none;\"><span style=\"color:#666\"> <big>Stamps v1.1</big></b></a>"}
  }
push $N56244930
  PostageStamp {
   name Stamp57
   help "Stamps by Adrian Pueyo and Alexey Kuchinski.\nUpdated May 18 2021"
   onCreate "if nuke.GUI:\n    try:\n        import stamps; stamps.wiredOnCreate()\n    except:\n        pass\n"
   knobChanged "import stamps; stamps.wiredKnobChanged()"
   autolabel "nuke.thisNode().knob(\"title\").value()"
   tile_color 0x1000001
   note_font "Bitstream Vera Sans"
   note_font_size 20
   xpos 6776
   ypos -717
   hide_input true
   addUserKnob {20 wired_tab l "Wired Stamp"}
   addUserKnob {26 identifier -STARTLINE +HIDDEN T wired}
   addUserKnob {3 lockCallbacks l "" +STARTLINE +HIDDEN}
   addUserKnob {6 toReconnect -STARTLINE +HIDDEN}
   addUserKnob {1 title l Title: t "Displayed name on the Node Graph for this Stamp and its Anchor.\nIMPORTANT: This is only for display purposes, and is different from the real/internal name of the Stamps."}
   title smoke_SIDE
   addUserKnob {26 prev_title l "" +STARTLINE +HIDDEN T smoke_SIDE}
   addUserKnob {26 tags l Tags: t "Tags of this stamp's Anchor, for information purpose only.\nClick \"show anchor\" to change them." T <i>2D</i>}
   addUserKnob {26 backdrops l Backdrops: t "Labels of backdrop nodes which contain this stamp's Anchor." T "<i><Left>before or after Flare</i>"}
   addUserKnob {26 line1 l "" +STARTLINE}
   addUserKnob {6 postageStamp_show l "postage stamp" t "Enable the postage stamp thumbnail in this node.\nYou're seeing this because the class of this node includes the postage_stamp knob." +STARTLINE}
   addUserKnob {26 anchor_label l Anchor: T " "}
   addUserKnob {22 show_anchor l " show anchor " t "Show the properties panel for this Stamp's Anchor." -STARTLINE T stamps.wiredShowAnchor()}
   addUserKnob {22 zoom_anchor l "zoom anchor" t "Navigate to this Stamp's Anchor on the Node Graph." -STARTLINE T stamps.wiredZoomAnchor()}
   addUserKnob {26 stamps_label l Stamps: T " "}
   addUserKnob {22 zoomNext l " zoom next " t "Navigate to this Stamp's next sibling on the Node Graph." -STARTLINE T stamps.wiredZoomNext()}
   addUserKnob {22 selectSimilar l " select similar " t "Select all similar Stamps to this one on the Node Graph." -STARTLINE T stamps.wiredSelectSimilar()}
   addUserKnob {26 space_1 l "" +STARTLINE T " "}
   addUserKnob {26 reconnect_label l Reconnect: t "Reconnect by the stored Anchor name." T " "}
   addUserKnob {22 reconnect_this l this t "Reconnect this Stamp to its Anchor, by its stored Anchor name." -STARTLINE T "n = nuke.thisNode()\ntry:\n    n.setInput(0,nuke.toNode(n.knob(\"anchor\").value()))\nexcept:\n    nuke.message(\"Unable to reconnect.\")\ntry:\n    import stamps\n    stamps.wiredGetStyle(n)\nexcept:\n    pass\n"}
   addUserKnob {22 reconnect_similar l similar t "Reconnect this Stamp and similar ones to their Anchor, by their stored anchor name." -STARTLINE T stamps.wiredReconnectSimilar()}
   addUserKnob {22 reconnect_all l all t "Reconnect all the Stamps to their Anchors, by their stored anchor names." -STARTLINE T stamps.wiredReconnectAll()}
   addUserKnob {26 space_2 l "" +STARTLINE T " "}
   addUserKnob {20 advanced_reconnection l "Advanced Reconnection" n 2}
   addUserKnob {26 reconnect_by_title_label l "<font color=gold>By Title:" t "Reconnect by searching for a matching title." T " "}
   addUserKnob {22 reconnect_by_title_this l this t "Look for an Anchor that shares this Stamp's title, and connect this Stamp to it.\nIMPORTANT: Use this carefully, and only when the normal reconnection doesn't work." -STARTLINE T stamps.wiredReconnectByTitle()}
   addUserKnob {22 reconnect_by_title_similar l similar t "Look for an Anchor that shares this Stamp's title, and connect this Stamp and similar ones to it.\nIMPORTANT: Use this carefully, and only when the normal reconnection doesn't work." -STARTLINE T stamps.wiredReconnectByTitleSimilar()}
   addUserKnob {22 reconnect_by_title_selected l selected t "For each Stamp selected, look for an Anchor that shares its title, and connect to it.\nIMPORTANT: Use this carefully, and only when the normal reconnection doesn't work." -STARTLINE T stamps.wiredReconnectByTitleSelected()}
   addUserKnob {26 reconnect_by_selection_label l "<font color=orangered>By Selection:" t "Force reconnect to a selected Anchor." T " "}
   addUserKnob {22 reconnect_by_selection_this l this t "Force reconnect this Stamp to a selected Anchor, whatever its name or title.\nIMPORTANT: Use this carefully, and only when the normal reconnection doesn't work." -STARTLINE T stamps.wiredReconnectBySelection()}
   addUserKnob {22 reconnect_by_selection_similar l similar t "Force reconnect this Stamp and similar ones to a selected Anchor, whatever its name or title.\nIMPORTANT: Use this carefully, and only when the normal reconnection doesn't work." -STARTLINE T stamps.wiredReconnectBySelectionSimilar()}
   addUserKnob {22 reconnect_by_selection_selected l selected t "Force reconnect all selected Stamps to an also selected Anchor, whatever its name or title.\nIMPORTANT: Use this carefully, and only when the normal reconnection doesn't work." -STARTLINE T stamps.wiredReconnectBySelectionSelected()}
   addUserKnob {1 anchor l Anchor}
   anchor Anchor_232c9aab88
   addUserKnob {6 auto_reconnect_by_title l "<font color=#ED9977>&nbsp; auto-reconnect by title" t "When creating this stamp again (like on copy-paste), auto-reconnect it by title instead of doing it by the saved anchor's name, and auto-turn this off immediately.\nIMPORTANT: Should be off by default. Only use this for setting up templates." +STARTLINE}
   addUserKnob {26 line2 l "" +STARTLINE}
   addUserKnob {22 buttonHelp l Help -STARTLINE T stamps.showHelp()}
   addUserKnob {26 version l " " t "Stamps by Adrian Pueyo and Alexey Kuchinski.\nUpdated May 18 2021." -STARTLINE T "<a href=\"http://www.nukepedia.com/gizmos/other/stamps\" style=\"color:#666;text-decoration: none;\"><span style=\"color:#666\"> <big>Stamps v1.1</big></b></a>"}
  }
  Dot {
   name Dot38
   xpos 6810
   ypos -667
  }
  Group {
   inputs 3
   name gunshot19
   label "shot: \[value shotcount]\non frame: \[value shotstart]\n"
   xpos 6658
   ypos -640
   addUserKnob {20 User}
   addUserKnob {3 shotcount l shot}
   shotcount 19
   addUserKnob {3 shotstart l frame +INVISIBLE}
   shotstart {{"shotcount==0 ? 0 : shot\[value shotcount]-1" i}}
  }
   BackdropNode {
    inputs 0
    name BackdropNode19
    knobChanged "try:\n    listenedKnobs = \['text', 'position', 'name']\n    node = nuke.thisNode()\n    name = node.knob('name').value()\n    text = node.knob('text').value()\n    position = node.knob('position').value()\n    position = \"<\" + position + \">\"\n    label = node.knob('label').value()\n    \n    if nuke.thisKnob().name() in listenedKnobs:\n        if text == \"\":\n            if node.knob('position').value() == \"left\":\n                node.knob('label').setValue()\n            else:\n                node.knob('label').setValue(position + name)\n        else:\n            if node.knob('position').value() == \"left\":\n                node.knob('label').setValue(text)\n            else:\n                node.knob('label').setValue(position + text)\n                \n    elif nuke.thisKnob().name() == 'font_size':\n        fontSize = node.knob('font_size').value()\n        node.knob('note_font_size').setValue(fontSize)\nexcept:\n    pass"
    tile_color 0x232323ff
    label "<Left><h2> Gunshot"
    note_font_size 31.5
    xpos -693
    ypos -554
    bdwidth 876
    bdheight 1682
    addUserKnob {20 F_VFX l BackdropNode}
    addUserKnob {43 text l Text}
    text "<h2> Gunshot"
    addUserKnob {7 font_size l "Font Size" R 10 100}
    font_size 31.5
    addUserKnob {4 position l "" -STARTLINE M {Left Center}}
    addUserKnob {26 S01 l " " T " "}
    addUserKnob {22 grow l " <img src=\"F_scalep.png\">" -STARTLINE T "n=nuke.thisNode()\n\ndef grow(node=None,step=50):\n    try:\n        if not node:\n            n=nuke.selectedNode()\n        else:\n            n=node\n            n\['xpos'].setValue(n\['xpos'].getValue()-step)\n            n\['ypos'].setValue(n\['ypos'].getValue()-step)\n            n\['bdwidth'].setValue(n\['bdwidth'].getValue()+step*2)\n            n\['bdheight'].setValue(n\['bdheight'].getValue()+step*2)\n    except:\n        pass\ngrow(n,50)"}
    addUserKnob {22 shrink l " <img src=\"F_scalem.png\">" -STARTLINE T "n=nuke.thisNode()\n\ndef shrink(node=None,step=50):\n    try:\n        if not node:\n            n=nuke.selectedNode()\n        else:\n            n=node\n            n\['xpos'].setValue(n\['xpos'].getValue()+step)\n            n\['ypos'].setValue(n\['ypos'].getValue()+step)\n            n\['bdwidth'].setValue(n\['bdwidth'].getValue()-step*2)\n            n\['bdheight'].setValue(n\['bdheight'].getValue()-step*2)\n    except:\n        pass\nshrink(n,50)"}
    addUserKnob {22 colorandom l " <img src=\"ColorBars.png\">" -STARTLINE T "import colorsys, random\nn=nuke.thisNode()\nR,G,B= colorsys.hsv_to_rgb(random.random(),.1+random.random()*.15,.15+random.random()*.15)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ) )"}
    addUserKnob {22 darkgrey l "<font color=\"#232323\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.0, 0.0, 0.14]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 lightgrey l "<font color=\"#383838\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.0, 0.0, 0.22]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 red l "<font color=\"#8c3838\" size=6>■</font>" T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.0, 0.6, 0.55]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n" +STARTLINE}
    addUserKnob {22 orange l "<font color=\"#b28e59\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.1, 0.5, 0.7]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 yellow l "<font color=\"#ccc766\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.16, 0.5, 0.8]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 green l "<font color=\"#5d995b\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.33, 0.4, 0.6]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 cyan l "<font color=\"#72998f\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.46, 0.25, 0.6]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 blue l "<font color=\"#59687f\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.6, 0.3, 0.5]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 darkblue l "<font color=\"#63628c\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.67, 0.3, 0.55]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 magenta l "<font color=\"#927a99\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.8, 0.2, 0.6]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 pink l "<font color=\"#997a89\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.92, 0.2, 0.6]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {26 S02 l " " T " "}
    addUserKnob {26 Ftools l "" +STARTLINE T "<font color=\"#1C1C1C\"> v1.2 - Franklin VFX - 2018"}
   }
   BackdropNode {
    inputs 0
    name BackdropNode2
    knobChanged "try:\n    listenedKnobs = \['text', 'position', 'name']\n    node = nuke.thisNode()\n    name = node.knob('name').value()\n    text = node.knob('text').value()\n    position = node.knob('position').value()\n    position = \"<\" + position + \">\"\n    label = node.knob('label').value()\n    \n    if nuke.thisKnob().name() in listenedKnobs:\n        if text == \"\":\n            if node.knob('position').value() == \"left\":\n                node.knob('label').setValue()\n            else:\n                node.knob('label').setValue(position + name)\n        else:\n            if node.knob('position').value() == \"left\":\n                node.knob('label').setValue(text)\n            else:\n                node.knob('label').setValue(position + text)\n                \n    elif nuke.thisKnob().name() == 'font_size':\n        fontSize = node.knob('font_size').value()\n        node.knob('note_font_size').setValue(fontSize)\nexcept:\n    pass"
    tile_color 0x927a99ff
    note_font_size 50
    xpos -473
    ypos -221
    bdwidth 435
    bdheight 786
    z_order 1
    addUserKnob {20 F_VFX l BackdropNode}
    addUserKnob {43 text l Text}
    addUserKnob {7 font_size l "Font Size" R 10 100}
    font_size 50
    addUserKnob {4 position l "" -STARTLINE M {Left Center}}
    addUserKnob {26 S01 l " " T " "}
    addUserKnob {22 grow l " <img src=\"F_scalep.png\">" -STARTLINE T "n=nuke.thisNode()\n\ndef grow(node=None,step=50):\n    try:\n        if not node:\n            n=nuke.selectedNode()\n        else:\n            n=node\n            n\['xpos'].setValue(n\['xpos'].getValue()-step)\n            n\['ypos'].setValue(n\['ypos'].getValue()-step)\n            n\['bdwidth'].setValue(n\['bdwidth'].getValue()+step*2)\n            n\['bdheight'].setValue(n\['bdheight'].getValue()+step*2)\n    except:\n        pass\ngrow(n,50)"}
    addUserKnob {22 shrink l " <img src=\"F_scalem.png\">" -STARTLINE T "n=nuke.thisNode()\n\ndef shrink(node=None,step=50):\n    try:\n        if not node:\n            n=nuke.selectedNode()\n        else:\n            n=node\n            n\['xpos'].setValue(n\['xpos'].getValue()+step)\n            n\['ypos'].setValue(n\['ypos'].getValue()+step)\n            n\['bdwidth'].setValue(n\['bdwidth'].getValue()-step*2)\n            n\['bdheight'].setValue(n\['bdheight'].getValue()-step*2)\n    except:\n        pass\nshrink(n,50)"}
    addUserKnob {22 colorandom l " <img src=\"ColorBars.png\">" -STARTLINE T "import colorsys, random\nn=nuke.thisNode()\nR,G,B= colorsys.hsv_to_rgb(random.random(),.1+random.random()*.15,.15+random.random()*.15)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ) )"}
    addUserKnob {22 darkgrey l "<font color=\"#232323\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.0, 0.0, 0.14]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 lightgrey l "<font color=\"#383838\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.0, 0.0, 0.22]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 red l "<font color=\"#8c3838\" size=6>■</font>" T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.0, 0.6, 0.55]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n" +STARTLINE}
    addUserKnob {22 orange l "<font color=\"#b28e59\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.1, 0.5, 0.7]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 yellow l "<font color=\"#ccc766\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.16, 0.5, 0.8]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 green l "<font color=\"#5d995b\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.33, 0.4, 0.6]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 cyan l "<font color=\"#72998f\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.46, 0.25, 0.6]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 blue l "<font color=\"#59687f\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.6, 0.3, 0.5]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 darkblue l "<font color=\"#63628c\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.67, 0.3, 0.55]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 magenta l "<font color=\"#927a99\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.8, 0.2, 0.6]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 pink l "<font color=\"#997a89\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.92, 0.2, 0.6]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {26 S02 l " " T " "}
    addUserKnob {26 Ftools l "" +STARTLINE T "<font color=\"#1C1C1C\"> v1.2 - Franklin VFX - 2018"}
   }
   Constant {
    inputs 0
    channels rgb
    name Constant13
    xpos -643
    ypos 714
   }
   AdjBBox {
    numpixels {{size_bbox}}
    name AdjBBox13
    xpos -643
    ypos 849
   }
   Dot {
    name Dot78
    xpos -609
    ypos 987
   }
   Axis3 {
    inputs 0
    useMatrix true
    matrix {
        {{parent.cCard3D_1.matrix} {parent.cCard3D_1.matrix} {parent.cCard3D_1.matrix} {parent.cCard3D_1.matrix}}
        {{parent.cCard3D_1.matrix} {parent.cCard3D_1.matrix} {parent.cCard3D_1.matrix} {parent.cCard3D_1.matrix}}
        {{parent.cCard3D_1.matrix} {parent.cCard3D_1.matrix} {parent.cCard3D_1.matrix} {parent.cCard3D_1.matrix}}
        {{parent.cCard3D_1.matrix} {parent.cCard3D_1.matrix} {parent.cCard3D_1.matrix} {parent.cCard3D_1.matrix}}
      }
    name Axis14
    xpos -203
    ypos -90
   }
set N32db5e20 [stack 0]
push 0
   Input {
    inputs 0
    name top
    xpos -283
    ypos -1243
    number 1
   }
   TimeOffset {
    time_offset {{"shot_\[value shotnmbr]==0 ? 0 : shot_\[value shotnmbr]-1"}}
    time ""
    name CTimeOffset1
    label "shot: \[value shotnmbr]\non frame \[value time_offset]"
    xpos -283
    ypos -924
    addUserKnob {20 User}
    addUserKnob {3 shotnmbr l "shot "}
    shotnmbr {{shotcount}}
    addUserKnob {3 ref}
    ref {{time_offset+1}}
   }
   Group {
    name DecimalTimeOffset1
    tile_color 0xafa35dff
    label "random asset"
    note_font "Bitstream Vera Sans Bold"
    xpos -283
    ypos -841
    addUserKnob {20 User}
    addUserKnob {7 decimal l "time offset (decimal)"}
    decimal {{random(shotcount*seed)}}
    addUserKnob {26 ""}
    addUserKnob {26 _1 l "" +STARTLINE T "Chris Fryer | 2020\nupdated by Yorben Otto | 2024"}
   }
    Input {
     inputs 0
     name Input1
     xpos 426
     ypos -793
    }
    TimeOffset {
     time_offset {{(-floor(parent.decimal))*(DecimalTimeOffset1.decimal<0)}}
     time ""
     name TimeOffset1
     xpos 426
     ypos -675
    }
    Dot {
     name Dot6
     xpos 460
     ypos -635
    }
set N32df5680 [stack 0]
    Dot {
     name Dot5
     xpos 350
     ypos -635
    }
    Dot {
     name Dot7
     xpos 350
     ypos -365
    }
push $N32df5680
    Dot {
     name Dot1
     xpos 572
     ypos -635
    }
    TimeBlur {
     divisions 2
     shutter {{(parent.decimal-(floor(parent.decimal)))*2}}
     shutteroffset start
     shuttercustomoffset 0
     name TimeBlur1
     xpos 538
     ypos -558
    }
    Dot {
     name Dot2
     xpos 572
     ypos -490
    }
push $N32df5680
    TimeBlur {
     divisions 2
     shutter {{parent.decimal*2}}
     shutteroffset start
     shuttercustomoffset 0
     name TimeBlur8
     xpos 426
     ypos -556
    }
    Switch {
     inputs 2
     which {{parent.decimal<0}}
     name Switch1
     xpos 426
     ypos -494
    }
    Multiply {
     value {{parent.TimeBlur8.divisions}}
     name Multiply6
     xpos 426
     ypos -436
    }
    Merge2 {
     inputs 2
     operation from
     name Merge6
     xpos 426
     ypos -369
    }
set N32e375c0 [stack 0]
    Output {
     name Output1
     xpos 426
     ypos -221
    }
push $N32e375c0
push $N32e375c0
    Viewer {
     inputs 2
     frame_range 1-100
     name Viewer1
     xpos 675
     ypos -246
    }
   end_group
   NoTimeBlur {
    name NoTimeBlur1
    xpos -283
    ypos -779
   }
   Transform {
    scale {{0.05+(0.05*(((parent.DecimalTimeOffset13.decimal-0.5)*2)*ScaleVariationSmoke))}}
    center {{root.width/2 x1015 2304} {root.height/2}}
    shutteroffset centred
    name Transform44
    xpos -283
    ypos -152
   }
   Card3D {
    inputs 3
    rot_order ZYX
    translate {0 0 0}
    rotate {90 0 0}
    shutteroffset centred
    name cCard3D25
    tile_color 0x7b1d1dff
    xpos -283
    ypos 11
    addUserKnob {20 User l parent}
    addUserKnob {22 python_button l "set parent" t "select parent node, and press this button to set the selected node as parent" +INVISIBLE T "n = nuke.selectedNode()\['name'].getValue()\nnuke.thisNode()\['string'].setValue(n)" +STARTLINE}
    addUserKnob {1 string l parent +INVISIBLE}
    string null
    addUserKnob {3 ref l "ref frame"}
    ref 1015
   }
   Transform {
    translate {{"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].translate.x(ref)\}]"} {"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].translate.y(ref)\}]"}}
    rotate {{"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].rotate-\[value parent_gun].rotate(ref)\}]"}}
    scale {{"\[if \{\[value parent_gun]==\"null\"\} \{return 1\} \{return 1+(\[value parent_gun].scale-\[value parent_gun].scale(ref))\}]"}}
    center {{"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].center.x(ref)\}]"} {"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].center.y(ref)\}]"}}
    name Transform_GUNMatchMove37
    xpos -283
    ypos 126
    addUserKnob {20 User l parent}
    addUserKnob {3 ref}
    ref {{parent.CTimeOffset.ref}}
   }
   Transform {
    translate {{"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].translate.x-\[value parent_env].translate.x(ref)\}]"} {"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].translate.y-\[value parent_env].translate.y(ref)\}]"}}
    rotate {{"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].rotate-\[value parent_env].rotate(ref)\}]"}}
    scale {{"\[if \{\[value parent_gun]==\"null\"\} \{return 1\} \{return 1+(\[value parent_env].scale-\[value parent_env].scale(ref))\}]"}}
    center {{"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].center.x(ref)\}]"} {"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].center.y(ref)\}]"}}
    motionblur 0.2
    shutter {{SmokeMB*0.5}}
    shutteroffset centred
    name Transform_ENVMatchMove37
    label "\n"
    xpos -283
    ypos 255
    addUserKnob {20 User l parent}
    addUserKnob {3 ref}
    ref {{parent.CTimeOffset.ref}}
   }
   Transform {
    translate {{"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return -((root.width/2)-(\[value parent_gun].center.x(1)+\[value parent_gun].translate.x(1)))\}]"} {"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return -((root.height/2)-(\[value parent_gun].center.y(1)+\[value parent_gun].translate.y(1)))\}]"}}
    name Transform_GUNMatchMove6
    label "alignment correction"
    xpos -283
    ypos 344
    addUserKnob {20 User l parent}
    addUserKnob {22 python_button l "set parent" t "select parent node, and press this button to set the selected node as parent" T "n = nuke.selectedNode()\['name'].getValue()\nnuke.thisNode()\['string'].setValue(n)" +STARTLINE}
    addUserKnob {1 string l parent}
    string Transform_MatchMove10
    addUserKnob {3 ref +INVISIBLE}
    ref {{parent.cCard3D_8.ref}}
   }
   Multiply {
    value {{math_matrix.result_y_smoke(parent.CTimeOffset.ref)}}
    name Angle_reveal_top1
    label TOP
    xpos -283
    ypos 403
   }
   Remove {
    operation keep
    channels rgb
    name Remove1
    xpos -283
    ypos 514
   }
push 0
   Switch {
    inputs 2
    which {{parent.Angle_reveal_top1.value>0.001}}
    name Switch1
    xpos -283
    ypos 660
   }
   Dot {
    name Dot82
    xpos -249
    ypos 705
   }
push 0
push $N32db5e20
push 0
   Input {
    inputs 0
    name front
    xpos -436
    ypos -1243
    number 2
   }
   TimeOffset {
    time_offset {{"shot_\[value shotnmbr]==0 ? 0 : shot_\[value shotnmbr]-1"}}
    time ""
    name CTimeOffset2
    label "shot: \[value shotnmbr]\non frame \[value time_offset]"
    xpos -436
    ypos -925
    addUserKnob {20 User}
    addUserKnob {3 shotnmbr l "shot "}
    shotnmbr {{shotcount}}
    addUserKnob {3 ref}
    ref {{time_offset+1}}
   }
   Group {
    name DecimalTimeOffset2
    tile_color 0xafa35dff
    label "random asset"
    note_font "Bitstream Vera Sans Bold"
    xpos -436
    ypos -842
    addUserKnob {20 User}
    addUserKnob {7 decimal l "time offset (decimal)"}
    decimal {{random(shotcount*seed)}}
    addUserKnob {26 ""}
    addUserKnob {26 _1 l "" +STARTLINE T "Chris Fryer | 2020\nupdated by Yorben Otto | 2024"}
   }
    Input {
     inputs 0
     name Input1
     xpos 426
     ypos -793
    }
    TimeOffset {
     time_offset {{(-floor(parent.decimal))*(DecimalTimeOffset2.decimal<0)}}
     time ""
     name TimeOffset1
     xpos 426
     ypos -675
    }
    Dot {
     name Dot6
     xpos 460
     ypos -635
    }
set N5de1b160 [stack 0]
    Dot {
     name Dot5
     xpos 350
     ypos -635
    }
    Dot {
     name Dot7
     xpos 350
     ypos -365
    }
push $N5de1b160
    Dot {
     name Dot1
     xpos 572
     ypos -635
    }
    TimeBlur {
     divisions 2
     shutter {{(parent.decimal-(floor(parent.decimal)))*2}}
     shutteroffset start
     shuttercustomoffset 0
     name TimeBlur1
     xpos 538
     ypos -558
    }
    Dot {
     name Dot2
     xpos 572
     ypos -490
    }
push $N5de1b160
    TimeBlur {
     divisions 2
     shutter {{parent.decimal*2}}
     shutteroffset start
     shuttercustomoffset 0
     name TimeBlur8
     xpos 426
     ypos -556
    }
    Switch {
     inputs 2
     which {{parent.decimal<0}}
     name Switch1
     xpos 426
     ypos -494
    }
    Multiply {
     value {{parent.TimeBlur8.divisions}}
     name Multiply6
     xpos 426
     ypos -436
    }
    Merge2 {
     inputs 2
     operation from
     name Merge6
     xpos 426
     ypos -369
    }
set N5de5d0a0 [stack 0]
    Output {
     name Output1
     xpos 426
     ypos -221
    }
push $N5de5d0a0
push $N5de5d0a0
    Viewer {
     inputs 2
     frame_range 1-100
     name Viewer1
     xpos 675
     ypos -246
    }
   end_group
   NoTimeBlur {
    name NoTimeBlur5
    xpos -436
    ypos -780
   }
   Transform {
    scale {{0.05+(0.05*(((parent.DecimalTimeOffset13.decimal-0.5)*2)*ScaleVariationSmoke))}}
    center {{root.width/2 x1015 2304} {root.height/2}}
    shutteroffset centred
    name Transform45
    xpos -436
    ypos -151
   }
   Card3D {
    inputs 3
    rot_order ZYX
    translate {0 0 0}
    rotate {0 90 0}
    shutteroffset centred
    name cCard3D26
    tile_color 0x7b1d1dff
    xpos -436
    ypos 15
    addUserKnob {20 User l parent}
    addUserKnob {22 python_button l "set parent" t "select parent node, and press this button to set the selected node as parent" +INVISIBLE T "n = nuke.selectedNode()\['name'].getValue()\nnuke.thisNode()\['string'].setValue(n)" +STARTLINE}
    addUserKnob {1 string l parent +INVISIBLE}
    string null
    addUserKnob {3 ref l "ref frame"}
    ref 1015
   }
   Transform {
    translate {{"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].translate.x(ref)\}]"} {"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].translate.y(ref)\}]"}}
    rotate {{"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].rotate-\[value parent_gun].rotate(ref)\}]"}}
    scale {{"\[if \{\[value parent_gun]==\"null\"\} \{return 1\} \{return 1+(\[value parent_gun].scale-\[value parent_gun].scale(ref))\}]"}}
    center {{"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].center.x(ref)\}]"} {"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].center.y(ref)\}]"}}
    name Transform_GUNMatchMove38
    label "\n"
    xpos -436
    ypos 124
    addUserKnob {20 User l parent}
    addUserKnob {3 ref}
    ref {{parent.CTimeOffset.ref}}
   }
   Transform {
    translate {{"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].translate.x-\[value parent_env].translate.x(ref)\}]"} {"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].translate.y-\[value parent_env].translate.y(ref)\}]"}}
    rotate {{"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].rotate-\[value parent_env].rotate(ref)\}]"}}
    scale {{"\[if \{\[value parent_gun]==\"null\"\} \{return 1\} \{return 1+(\[value parent_env].scale-\[value parent_env].scale(ref))\}]"}}
    center {{"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].center.x(ref)\}]"} {"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].center.y(ref)\}]"}}
    motionblur 0.2
    shutter {{SmokeMB*0.5}}
    shutteroffset centred
    name Transform_ENVMatchMove38
    xpos -436
    ypos 254
    addUserKnob {20 User l parent}
    addUserKnob {3 ref}
    ref {{parent.CTimeOffset.ref}}
   }
   Transform {
    translate {{"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return -((root.width/2)-(\[value parent_gun].center.x(1)+\[value parent_gun].translate.x(1)))\}]"} {"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return -((root.height/2)-(\[value parent_gun].center.y(1)+\[value parent_gun].translate.y(1)))\}]"}}
    name Transform_GUNMatchMove7
    label "alignment correction"
    xpos -436
    ypos 343
    addUserKnob {20 User l parent}
    addUserKnob {22 python_button l "set parent" t "select parent node, and press this button to set the selected node as parent" T "n = nuke.selectedNode()\['name'].getValue()\nnuke.thisNode()\['string'].setValue(n)" +STARTLINE}
    addUserKnob {1 string l parent}
    string Transform_MatchMove10
    addUserKnob {3 ref +INVISIBLE}
    ref {{parent.cCard3D_8.ref}}
   }
   Multiply {
    value {{math_matrix.result_x_smoke(parent.CTimeOffset.ref)}}
    name Angle_reveal_front1
    label FRONT
    xpos -436
    ypos 401
   }
   Remove {
    operation keep
    channels rgb
    name Remove2
    xpos -436
    ypos 511
   }
push 0
   Switch {
    inputs 2
    which {{parent.Angle_reveal_front1.value>0.001}}
    name Switch2
    xpos -436
    ypos 660
   }
   Dot {
    name Dot83
    xpos -402
    ypos 735
   }
   Input {
    inputs 0
    name side
    xpos -130
    ypos -1242
   }
   TimeOffset {
    time_offset {{"shot_\[value shotnmbr]==0 ? 0 : shot_\[value shotnmbr]-1"}}
    time ""
    name CTimeOffset
    label "shot: \[value shotnmbr]\non frame \[value time_offset]"
    xpos -130
    ypos -927
    addUserKnob {20 User}
    addUserKnob {3 shotnmbr l "shot "}
    shotnmbr {{shotcount}}
    addUserKnob {3 ref}
    ref {{time_offset+1}}
   }
   Group {
    name DecimalTimeOffset13
    tile_color 0xafa35dff
    label "random asset"
    note_font "Bitstream Vera Sans Bold"
    xpos -130
    ypos -844
    addUserKnob {20 User}
    addUserKnob {7 decimal l "time offset (decimal)"}
    decimal {{random(shotcount*seed)}}
    addUserKnob {26 ""}
    addUserKnob {26 _1 l "" +STARTLINE T "Chris Fryer | 2020\nupdated by Yorben Otto | 2024"}
   }
    Input {
     inputs 0
     name Input1
     xpos 426
     ypos -793
    }
    TimeOffset {
     time_offset {{(-floor(parent.decimal))*(DecimalTimeOffset13.decimal<0)}}
     time ""
     name TimeOffset1
     xpos 426
     ypos -675
    }
    Dot {
     name Dot6
     xpos 460
     ypos -635
    }
set N5eca8ed0 [stack 0]
    Dot {
     name Dot5
     xpos 350
     ypos -635
    }
    Dot {
     name Dot7
     xpos 350
     ypos -365
    }
push $N5eca8ed0
    Dot {
     name Dot1
     xpos 572
     ypos -635
    }
    TimeBlur {
     divisions 2
     shutter {{(parent.decimal-(floor(parent.decimal)))*2}}
     shutteroffset start
     shuttercustomoffset 0
     name TimeBlur1
     xpos 538
     ypos -558
    }
    Dot {
     name Dot2
     xpos 572
     ypos -490
    }
push $N5eca8ed0
    TimeBlur {
     divisions 2
     shutter {{parent.decimal*2}}
     shutteroffset start
     shuttercustomoffset 0
     name TimeBlur8
     xpos 426
     ypos -556
    }
    Switch {
     inputs 2
     which {{parent.decimal<0}}
     name Switch1
     xpos 426
     ypos -494
    }
    Multiply {
     value {{parent.TimeBlur8.divisions}}
     name Multiply6
     xpos 426
     ypos -436
    }
    Merge2 {
     inputs 2
     operation from
     name Merge6
     xpos 426
     ypos -369
    }
set N5eceae10 [stack 0]
    Output {
     name Output1
     xpos 426
     ypos -221
    }
push $N5eceae10
push $N5eceae10
    Viewer {
     inputs 2
     frame_range 1-100
     name Viewer1
     xpos 675
     ypos -246
    }
   end_group
   NoTimeBlur {
    name NoTimeBlur13
    xpos -130
    ypos -782
   }
   Transform {
    scale {{0.05+(0.05*(((parent.DecimalTimeOffset13.decimal-0.5)*2)*ScaleVariationSmoke))}}
    center {{root.width/2 x1015 2304} {root.height/2}}
    shutteroffset centred
    name Transform46
    xpos -130
    ypos -155
   }
   Card3D {
    translate {{"\[if \{\[exists  parent.parent.parent.input0]\} \{return \[value \[topnode parent.parent.parent.input0].name].translate.x(ref)\} \{return 0\}]"} {"\[if \{\[exists  parent.parent.parent.input0]\} \{return \[value \[topnode parent.parent.parent.input0].name].translate.y(ref)\} \{return 0\}]"} {"\[if \{\[exists  parent.parent.parent.input0]\} \{return \[value \[topnode parent.parent.parent.input0].name].translate.z(ref)\} \{return -1\}]"}}
    rotate {{"\[if \{\[exists  parent.parent.parent.input0]\} \{return \[value \[topnode parent.parent.parent.input0].name].rotate.x(ref)\} \{return 0\}]"} {"\[if \{\[exists  parent.parent.parent.input0]\} \{return \[value \[topnode parent.parent.parent.input0].name].rotate.y(ref)\} \{return 0\}]"} {"\[if \{\[exists  parent.parent.parent.input0]\} \{return \[value \[topnode parent.parent.parent.input0].name].rotate.z(ref)\} \{return 0\}]"}}
    scaling {{"\[if \{\[exists  parent.parent.parent.input0]\} \{return \[value \[topnode parent.parent.parent.input0].name].scaling.x(ref)\} \{return 1\}]"} {"\[if \{\[exists  parent.parent.parent.input0]\} \{return \[value \[topnode parent.parent.parent.input0].name].scaling.y(ref)\} \{return 1\}]"} {"\[if \{\[exists  parent.parent.parent.input0]\} \{return \[value \[topnode parent.parent.parent.input0].name].scaling.z(ref)\} \{return 1\}]"}}
    uniform_scale {{"\[if \{\[exists  parent.parent.parent.input0]\} \{return (\[value \[topnode parent.parent.parent.input0].name].uniform_scale(ref)*25)\} \{return 25\}]"}}
    shutteroffset centred
    name cCard3D_1
    tile_color 0x7b1d1dff
    label "ref frame: \[value ref]"
    xpos -130
    ypos 2
    addUserKnob {20 User l parent}
    addUserKnob {22 python_button l "set parent" t "select parent node, and press this button to set the selected node as parent" +INVISIBLE T "n = nuke.selectedNode()\['name'].getValue()\nnuke.thisNode()\['string'].setValue(n)" +STARTLINE}
    addUserKnob {1 string l parent +INVISIBLE}
    string null
    addUserKnob {3 id l "id number"}
    id {{parent.CTimeOffset.shotnmbr}}
    addUserKnob {3 ref l "ref frame"}
    ref {{parent.CTimeOffset.ref}}
   }
   Transform {
    translate {{"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].translate.x(ref)\}]"} {"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].translate.y(ref)\}]"}}
    rotate {{"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].rotate-\[value parent_gun].rotate(ref)\}]"}}
    scale {{"\[if \{\[value parent_gun]==\"null\"\} \{return 1\} \{return 1+(\[value parent_gun].scale-\[value parent_gun].scale(ref))\}]"}}
    center {{"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].center.x(ref)\}]"} {"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].center.y(ref)\}]"}}
    name Transform_GUNMatchMove39
    label "\n"
    xpos -130
    ypos 124
    addUserKnob {20 User l parent}
    addUserKnob {3 ref}
    ref {{parent.CTimeOffset.ref}}
   }
   Transform {
    translate {{"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].translate.x-\[value parent_env].translate.x(ref)\}]"} {"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].translate.y-\[value parent_env].translate.y(ref)\}]"}}
    rotate {{"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].rotate-\[value parent_env].rotate(ref)\}]"}}
    scale {{"\[if \{\[value parent_gun]==\"null\"\} \{return 1\} \{return 1+(\[value parent_env].scale-\[value parent_env].scale(ref))\}]"}}
    center {{"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].center.x(ref)\}]"} {"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].center.y(ref)\}]"}}
    motionblur 0.2
    shutter {{SmokeMB*0.5}}
    shutteroffset centred
    name Transform_ENVMatchMove39
    xpos -130
    ypos 258
    addUserKnob {20 User l parent}
    addUserKnob {3 ref}
    ref {{parent.CTimeOffset.ref}}
   }
   Transform {
    translate {{"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return -((root.width/2)-(\[value parent_gun].center.x(1)+\[value parent_gun].translate.x(1)))\}]"} {"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return -((root.height/2)-(\[value parent_gun].center.y(1)+\[value parent_gun].translate.y(1)))\}]"}}
    name Transform_GUNMatchMove5
    label "alignment correction"
    xpos -130
    ypos 340
    addUserKnob {20 User l parent}
    addUserKnob {22 python_button l "set parent" t "select parent node, and press this button to set the selected node as parent" T "n = nuke.selectedNode()\['name'].getValue()\nnuke.thisNode()\['string'].setValue(n)" +STARTLINE}
    addUserKnob {1 string l parent}
    string Transform_MatchMove10
    addUserKnob {3 ref +INVISIBLE}
    ref {{parent.cCard3D_8.ref}}
   }
   Multiply {
    value {{math_matrix.result_z_smoke(parent.CTimeOffset.ref)}}
    name Angle_reveal_side1
    label SIDE
    xpos -130
    ypos 404
   }
   Remove {
    operation keep
    channels rgb
    name Remove39
    xpos -130
    ypos 514
   }
push 0
   Switch {
    inputs 2
    which {{parent.Angle_reveal_side1.value>0.001}}
    name Switch3
    xpos -130
    ypos 658
   }
   Merge2 {
    inputs 3+1
    operation max
    Achannels rgb
    Bchannels rgb
    output rgb
    name Merge28
    xpos -130
    ypos 731
   }
   Merge2 {
    inputs 2
    operation plus
    bbox intersection
    Achannels rgb
    Bchannels rgb
    output rgb
    name Merge29
    xpos -130
    ypos 983
   }
   Shuffle2 {
    fromInput1 {{0} B}
    fromInput2 {{0} B}
    mappings "4 rgba.red 0 0 rgba.red 0 0 rgba.green 0 1 rgba.green 0 1 rgba.blue 0 2 rgba.alpha 0 3 rgba.blue 0 2 rgba.blue 0 2"
    name Shuffle1
    xpos -130
    ypos 1021
   }
push 0
   Switch {
    inputs 2
    which {{"shot_\[value count]==0?0:frame>=shot_\[value count]"}}
    name cSwitch_13
    xpos -130
    ypos 1078
    addUserKnob {20 User}
    addUserKnob {3 count}
    count {{parent.CTimeOffset.shotnmbr}}
   }
   Output {
    name Output1
    xpos -130
    ypos 1323
   }
   StickyNote {
    inputs 0
    name StickyNote1
    label "<-- handy to break concatonation?  "
    xpos -39
    ypos 193
   }
  end_group
push $N586971d0
  PostageStamp {
   name Stamp52
   help "Stamps by Adrian Pueyo and Alexey Kuchinski.\nUpdated May 18 2021"
   onCreate "if nuke.GUI:\n    try:\n        import stamps; stamps.wiredOnCreate()\n    except:\n        pass\n"
   knobChanged "import stamps; stamps.wiredKnobChanged()"
   autolabel "nuke.thisNode().knob(\"title\").value()"
   tile_color 0x1000001
   note_font "Bitstream Vera Sans"
   note_font_size 20
   xpos 6166
   ypos -709
   hide_input true
   addUserKnob {20 wired_tab l "Wired Stamp"}
   addUserKnob {26 identifier -STARTLINE +HIDDEN T wired}
   addUserKnob {3 lockCallbacks l "" +STARTLINE +HIDDEN}
   addUserKnob {6 toReconnect -STARTLINE +HIDDEN}
   addUserKnob {1 title l Title: t "Displayed name on the Node Graph for this Stamp and its Anchor.\nIMPORTANT: This is only for display purposes, and is different from the real/internal name of the Stamps."}
   title smoke_FRONT
   addUserKnob {26 prev_title l "" +STARTLINE +HIDDEN T smoke_FRONT}
   addUserKnob {26 tags l Tags: t "Tags of this stamp's Anchor, for information purpose only.\nClick \"show anchor\" to change them." T <i>2D</i>}
   addUserKnob {26 backdrops l Backdrops: t "Labels of backdrop nodes which contain this stamp's Anchor." T "<i><Left>before or after Flare</i>"}
   addUserKnob {26 line1 l "" +STARTLINE}
   addUserKnob {6 postageStamp_show l "postage stamp" t "Enable the postage stamp thumbnail in this node.\nYou're seeing this because the class of this node includes the postage_stamp knob." +STARTLINE}
   addUserKnob {26 anchor_label l Anchor: T " "}
   addUserKnob {22 show_anchor l " show anchor " t "Show the properties panel for this Stamp's Anchor." -STARTLINE T stamps.wiredShowAnchor()}
   addUserKnob {22 zoom_anchor l "zoom anchor" t "Navigate to this Stamp's Anchor on the Node Graph." -STARTLINE T stamps.wiredZoomAnchor()}
   addUserKnob {26 stamps_label l Stamps: T " "}
   addUserKnob {22 zoomNext l " zoom next " t "Navigate to this Stamp's next sibling on the Node Graph." -STARTLINE T stamps.wiredZoomNext()}
   addUserKnob {22 selectSimilar l " select similar " t "Select all similar Stamps to this one on the Node Graph." -STARTLINE T stamps.wiredSelectSimilar()}
   addUserKnob {26 space_1 l "" +STARTLINE T " "}
   addUserKnob {26 reconnect_label l Reconnect: t "Reconnect by the stored Anchor name." T " "}
   addUserKnob {22 reconnect_this l this t "Reconnect this Stamp to its Anchor, by its stored Anchor name." -STARTLINE T "n = nuke.thisNode()\ntry:\n    n.setInput(0,nuke.toNode(n.knob(\"anchor\").value()))\nexcept:\n    nuke.message(\"Unable to reconnect.\")\ntry:\n    import stamps\n    stamps.wiredGetStyle(n)\nexcept:\n    pass\n"}
   addUserKnob {22 reconnect_similar l similar t "Reconnect this Stamp and similar ones to their Anchor, by their stored anchor name." -STARTLINE T stamps.wiredReconnectSimilar()}
   addUserKnob {22 reconnect_all l all t "Reconnect all the Stamps to their Anchors, by their stored anchor names." -STARTLINE T stamps.wiredReconnectAll()}
   addUserKnob {26 space_2 l "" +STARTLINE T " "}
   addUserKnob {20 advanced_reconnection l "Advanced Reconnection" n 2}
   addUserKnob {26 reconnect_by_title_label l "<font color=gold>By Title:" t "Reconnect by searching for a matching title." T " "}
   addUserKnob {22 reconnect_by_title_this l this t "Look for an Anchor that shares this Stamp's title, and connect this Stamp to it.\nIMPORTANT: Use this carefully, and only when the normal reconnection doesn't work." -STARTLINE T stamps.wiredReconnectByTitle()}
   addUserKnob {22 reconnect_by_title_similar l similar t "Look for an Anchor that shares this Stamp's title, and connect this Stamp and similar ones to it.\nIMPORTANT: Use this carefully, and only when the normal reconnection doesn't work." -STARTLINE T stamps.wiredReconnectByTitleSimilar()}
   addUserKnob {22 reconnect_by_title_selected l selected t "For each Stamp selected, look for an Anchor that shares its title, and connect to it.\nIMPORTANT: Use this carefully, and only when the normal reconnection doesn't work." -STARTLINE T stamps.wiredReconnectByTitleSelected()}
   addUserKnob {26 reconnect_by_selection_label l "<font color=orangered>By Selection:" t "Force reconnect to a selected Anchor." T " "}
   addUserKnob {22 reconnect_by_selection_this l this t "Force reconnect this Stamp to a selected Anchor, whatever its name or title.\nIMPORTANT: Use this carefully, and only when the normal reconnection doesn't work." -STARTLINE T stamps.wiredReconnectBySelection()}
   addUserKnob {22 reconnect_by_selection_similar l similar t "Force reconnect this Stamp and similar ones to a selected Anchor, whatever its name or title.\nIMPORTANT: Use this carefully, and only when the normal reconnection doesn't work." -STARTLINE T stamps.wiredReconnectBySelectionSimilar()}
   addUserKnob {22 reconnect_by_selection_selected l selected t "Force reconnect all selected Stamps to an also selected Anchor, whatever its name or title.\nIMPORTANT: Use this carefully, and only when the normal reconnection doesn't work." -STARTLINE T stamps.wiredReconnectBySelectionSelected()}
   addUserKnob {1 anchor l Anchor}
   anchor Anchor_220a2be282
   addUserKnob {6 auto_reconnect_by_title l "<font color=#ED9977>&nbsp; auto-reconnect by title" t "When creating this stamp again (like on copy-paste), auto-reconnect it by title instead of doing it by the saved anchor's name, and auto-turn this off immediately.\nIMPORTANT: Should be off by default. Only use this for setting up templates." +STARTLINE}
   addUserKnob {26 line2 l "" +STARTLINE}
   addUserKnob {22 buttonHelp l Help -STARTLINE T stamps.showHelp()}
   addUserKnob {26 version l " " t "Stamps by Adrian Pueyo and Alexey Kuchinski.\nUpdated May 18 2021." -STARTLINE T "<a href=\"http://www.nukepedia.com/gizmos/other/stamps\" style=\"color:#666;text-decoration: none;\"><span style=\"color:#666\"> <big>Stamps v1.1</big></b></a>"}
  }
  Dot {
   name Dot35
   xpos 6200
   ypos -661
  }
push $N58d70c10
  PostageStamp {
   name Stamp53
   help "Stamps by Adrian Pueyo and Alexey Kuchinski.\nUpdated May 18 2021"
   onCreate "if nuke.GUI:\n    try:\n        import stamps; stamps.wiredOnCreate()\n    except:\n        pass\n"
   knobChanged "import stamps; stamps.wiredKnobChanged()"
   autolabel "nuke.thisNode().knob(\"title\").value()"
   tile_color 0x1000001
   note_font "Bitstream Vera Sans"
   note_font_size 20
   xpos 6291
   ypos -709
   hide_input true
   addUserKnob {20 wired_tab l "Wired Stamp"}
   addUserKnob {26 identifier -STARTLINE +HIDDEN T wired}
   addUserKnob {3 lockCallbacks l "" +STARTLINE +HIDDEN}
   addUserKnob {6 toReconnect -STARTLINE +HIDDEN}
   addUserKnob {1 title l Title: t "Displayed name on the Node Graph for this Stamp and its Anchor.\nIMPORTANT: This is only for display purposes, and is different from the real/internal name of the Stamps."}
   title smoke_TOP
   addUserKnob {26 prev_title l "" +STARTLINE +HIDDEN T smoke_TOP}
   addUserKnob {26 tags l Tags: t "Tags of this stamp's Anchor, for information purpose only.\nClick \"show anchor\" to change them." T <i>2D</i>}
   addUserKnob {26 backdrops l Backdrops: t "Labels of backdrop nodes which contain this stamp's Anchor." T "<i><Left>before or after Flare</i>"}
   addUserKnob {26 line1 l "" +STARTLINE}
   addUserKnob {6 postageStamp_show l "postage stamp" t "Enable the postage stamp thumbnail in this node.\nYou're seeing this because the class of this node includes the postage_stamp knob." +STARTLINE}
   addUserKnob {26 anchor_label l Anchor: T " "}
   addUserKnob {22 show_anchor l " show anchor " t "Show the properties panel for this Stamp's Anchor." -STARTLINE T stamps.wiredShowAnchor()}
   addUserKnob {22 zoom_anchor l "zoom anchor" t "Navigate to this Stamp's Anchor on the Node Graph." -STARTLINE T stamps.wiredZoomAnchor()}
   addUserKnob {26 stamps_label l Stamps: T " "}
   addUserKnob {22 zoomNext l " zoom next " t "Navigate to this Stamp's next sibling on the Node Graph." -STARTLINE T stamps.wiredZoomNext()}
   addUserKnob {22 selectSimilar l " select similar " t "Select all similar Stamps to this one on the Node Graph." -STARTLINE T stamps.wiredSelectSimilar()}
   addUserKnob {26 space_1 l "" +STARTLINE T " "}
   addUserKnob {26 reconnect_label l Reconnect: t "Reconnect by the stored Anchor name." T " "}
   addUserKnob {22 reconnect_this l this t "Reconnect this Stamp to its Anchor, by its stored Anchor name." -STARTLINE T "n = nuke.thisNode()\ntry:\n    n.setInput(0,nuke.toNode(n.knob(\"anchor\").value()))\nexcept:\n    nuke.message(\"Unable to reconnect.\")\ntry:\n    import stamps\n    stamps.wiredGetStyle(n)\nexcept:\n    pass\n"}
   addUserKnob {22 reconnect_similar l similar t "Reconnect this Stamp and similar ones to their Anchor, by their stored anchor name." -STARTLINE T stamps.wiredReconnectSimilar()}
   addUserKnob {22 reconnect_all l all t "Reconnect all the Stamps to their Anchors, by their stored anchor names." -STARTLINE T stamps.wiredReconnectAll()}
   addUserKnob {26 space_2 l "" +STARTLINE T " "}
   addUserKnob {20 advanced_reconnection l "Advanced Reconnection" n 2}
   addUserKnob {26 reconnect_by_title_label l "<font color=gold>By Title:" t "Reconnect by searching for a matching title." T " "}
   addUserKnob {22 reconnect_by_title_this l this t "Look for an Anchor that shares this Stamp's title, and connect this Stamp to it.\nIMPORTANT: Use this carefully, and only when the normal reconnection doesn't work." -STARTLINE T stamps.wiredReconnectByTitle()}
   addUserKnob {22 reconnect_by_title_similar l similar t "Look for an Anchor that shares this Stamp's title, and connect this Stamp and similar ones to it.\nIMPORTANT: Use this carefully, and only when the normal reconnection doesn't work." -STARTLINE T stamps.wiredReconnectByTitleSimilar()}
   addUserKnob {22 reconnect_by_title_selected l selected t "For each Stamp selected, look for an Anchor that shares its title, and connect to it.\nIMPORTANT: Use this carefully, and only when the normal reconnection doesn't work." -STARTLINE T stamps.wiredReconnectByTitleSelected()}
   addUserKnob {26 reconnect_by_selection_label l "<font color=orangered>By Selection:" t "Force reconnect to a selected Anchor." T " "}
   addUserKnob {22 reconnect_by_selection_this l this t "Force reconnect this Stamp to a selected Anchor, whatever its name or title.\nIMPORTANT: Use this carefully, and only when the normal reconnection doesn't work." -STARTLINE T stamps.wiredReconnectBySelection()}
   addUserKnob {22 reconnect_by_selection_similar l similar t "Force reconnect this Stamp and similar ones to a selected Anchor, whatever its name or title.\nIMPORTANT: Use this carefully, and only when the normal reconnection doesn't work." -STARTLINE T stamps.wiredReconnectBySelectionSimilar()}
   addUserKnob {22 reconnect_by_selection_selected l selected t "Force reconnect all selected Stamps to an also selected Anchor, whatever its name or title.\nIMPORTANT: Use this carefully, and only when the normal reconnection doesn't work." -STARTLINE T stamps.wiredReconnectBySelectionSelected()}
   addUserKnob {1 anchor l Anchor}
   anchor Anchor_25b668170c
   addUserKnob {6 auto_reconnect_by_title l "<font color=#ED9977>&nbsp; auto-reconnect by title" t "When creating this stamp again (like on copy-paste), auto-reconnect it by title instead of doing it by the saved anchor's name, and auto-turn this off immediately.\nIMPORTANT: Should be off by default. Only use this for setting up templates." +STARTLINE}
   addUserKnob {26 line2 l "" +STARTLINE}
   addUserKnob {22 buttonHelp l Help -STARTLINE T stamps.showHelp()}
   addUserKnob {26 version l " " t "Stamps by Adrian Pueyo and Alexey Kuchinski.\nUpdated May 18 2021." -STARTLINE T "<a href=\"http://www.nukepedia.com/gizmos/other/stamps\" style=\"color:#666;text-decoration: none;\"><span style=\"color:#666\"> <big>Stamps v1.1</big></b></a>"}
  }
push $N56244930
  PostageStamp {
   name Stamp54
   help "Stamps by Adrian Pueyo and Alexey Kuchinski.\nUpdated May 18 2021"
   onCreate "if nuke.GUI:\n    try:\n        import stamps; stamps.wiredOnCreate()\n    except:\n        pass\n"
   knobChanged "import stamps; stamps.wiredKnobChanged()"
   autolabel "nuke.thisNode().knob(\"title\").value()"
   tile_color 0x1000001
   note_font "Bitstream Vera Sans"
   note_font_size 20
   xpos 6409
   ypos -711
   hide_input true
   addUserKnob {20 wired_tab l "Wired Stamp"}
   addUserKnob {26 identifier -STARTLINE +HIDDEN T wired}
   addUserKnob {3 lockCallbacks l "" +STARTLINE +HIDDEN}
   addUserKnob {6 toReconnect -STARTLINE +HIDDEN}
   addUserKnob {1 title l Title: t "Displayed name on the Node Graph for this Stamp and its Anchor.\nIMPORTANT: This is only for display purposes, and is different from the real/internal name of the Stamps."}
   title smoke_SIDE
   addUserKnob {26 prev_title l "" +STARTLINE +HIDDEN T smoke_SIDE}
   addUserKnob {26 tags l Tags: t "Tags of this stamp's Anchor, for information purpose only.\nClick \"show anchor\" to change them." T <i>2D</i>}
   addUserKnob {26 backdrops l Backdrops: t "Labels of backdrop nodes which contain this stamp's Anchor." T "<i><Left>before or after Flare</i>"}
   addUserKnob {26 line1 l "" +STARTLINE}
   addUserKnob {6 postageStamp_show l "postage stamp" t "Enable the postage stamp thumbnail in this node.\nYou're seeing this because the class of this node includes the postage_stamp knob." +STARTLINE}
   addUserKnob {26 anchor_label l Anchor: T " "}
   addUserKnob {22 show_anchor l " show anchor " t "Show the properties panel for this Stamp's Anchor." -STARTLINE T stamps.wiredShowAnchor()}
   addUserKnob {22 zoom_anchor l "zoom anchor" t "Navigate to this Stamp's Anchor on the Node Graph." -STARTLINE T stamps.wiredZoomAnchor()}
   addUserKnob {26 stamps_label l Stamps: T " "}
   addUserKnob {22 zoomNext l " zoom next " t "Navigate to this Stamp's next sibling on the Node Graph." -STARTLINE T stamps.wiredZoomNext()}
   addUserKnob {22 selectSimilar l " select similar " t "Select all similar Stamps to this one on the Node Graph." -STARTLINE T stamps.wiredSelectSimilar()}
   addUserKnob {26 space_1 l "" +STARTLINE T " "}
   addUserKnob {26 reconnect_label l Reconnect: t "Reconnect by the stored Anchor name." T " "}
   addUserKnob {22 reconnect_this l this t "Reconnect this Stamp to its Anchor, by its stored Anchor name." -STARTLINE T "n = nuke.thisNode()\ntry:\n    n.setInput(0,nuke.toNode(n.knob(\"anchor\").value()))\nexcept:\n    nuke.message(\"Unable to reconnect.\")\ntry:\n    import stamps\n    stamps.wiredGetStyle(n)\nexcept:\n    pass\n"}
   addUserKnob {22 reconnect_similar l similar t "Reconnect this Stamp and similar ones to their Anchor, by their stored anchor name." -STARTLINE T stamps.wiredReconnectSimilar()}
   addUserKnob {22 reconnect_all l all t "Reconnect all the Stamps to their Anchors, by their stored anchor names." -STARTLINE T stamps.wiredReconnectAll()}
   addUserKnob {26 space_2 l "" +STARTLINE T " "}
   addUserKnob {20 advanced_reconnection l "Advanced Reconnection" n 2}
   addUserKnob {26 reconnect_by_title_label l "<font color=gold>By Title:" t "Reconnect by searching for a matching title." T " "}
   addUserKnob {22 reconnect_by_title_this l this t "Look for an Anchor that shares this Stamp's title, and connect this Stamp to it.\nIMPORTANT: Use this carefully, and only when the normal reconnection doesn't work." -STARTLINE T stamps.wiredReconnectByTitle()}
   addUserKnob {22 reconnect_by_title_similar l similar t "Look for an Anchor that shares this Stamp's title, and connect this Stamp and similar ones to it.\nIMPORTANT: Use this carefully, and only when the normal reconnection doesn't work." -STARTLINE T stamps.wiredReconnectByTitleSimilar()}
   addUserKnob {22 reconnect_by_title_selected l selected t "For each Stamp selected, look for an Anchor that shares its title, and connect to it.\nIMPORTANT: Use this carefully, and only when the normal reconnection doesn't work." -STARTLINE T stamps.wiredReconnectByTitleSelected()}
   addUserKnob {26 reconnect_by_selection_label l "<font color=orangered>By Selection:" t "Force reconnect to a selected Anchor." T " "}
   addUserKnob {22 reconnect_by_selection_this l this t "Force reconnect this Stamp to a selected Anchor, whatever its name or title.\nIMPORTANT: Use this carefully, and only when the normal reconnection doesn't work." -STARTLINE T stamps.wiredReconnectBySelection()}
   addUserKnob {22 reconnect_by_selection_similar l similar t "Force reconnect this Stamp and similar ones to a selected Anchor, whatever its name or title.\nIMPORTANT: Use this carefully, and only when the normal reconnection doesn't work." -STARTLINE T stamps.wiredReconnectBySelectionSimilar()}
   addUserKnob {22 reconnect_by_selection_selected l selected t "Force reconnect all selected Stamps to an also selected Anchor, whatever its name or title.\nIMPORTANT: Use this carefully, and only when the normal reconnection doesn't work." -STARTLINE T stamps.wiredReconnectBySelectionSelected()}
   addUserKnob {1 anchor l Anchor}
   anchor Anchor_232c9aab88
   addUserKnob {6 auto_reconnect_by_title l "<font color=#ED9977>&nbsp; auto-reconnect by title" t "When creating this stamp again (like on copy-paste), auto-reconnect it by title instead of doing it by the saved anchor's name, and auto-turn this off immediately.\nIMPORTANT: Should be off by default. Only use this for setting up templates." +STARTLINE}
   addUserKnob {26 line2 l "" +STARTLINE}
   addUserKnob {22 buttonHelp l Help -STARTLINE T stamps.showHelp()}
   addUserKnob {26 version l " " t "Stamps by Adrian Pueyo and Alexey Kuchinski.\nUpdated May 18 2021." -STARTLINE T "<a href=\"http://www.nukepedia.com/gizmos/other/stamps\" style=\"color:#666;text-decoration: none;\"><span style=\"color:#666\"> <big>Stamps v1.1</big></b></a>"}
  }
  Dot {
   name Dot36
   xpos 6443
   ypos -661
  }
  Group {
   inputs 3
   name gunshot18
   label "shot: \[value shotcount]\non frame: \[value shotstart]\n"
   xpos 6291
   ypos -634
   addUserKnob {20 User}
   addUserKnob {3 shotcount l shot}
   shotcount 18
   addUserKnob {3 shotstart l frame +INVISIBLE}
   shotstart {{"shotcount==0 ? 0 : shot\[value shotcount]-1" i}}
  }
   BackdropNode {
    inputs 0
    name BackdropNode19
    knobChanged "try:\n    listenedKnobs = \['text', 'position', 'name']\n    node = nuke.thisNode()\n    name = node.knob('name').value()\n    text = node.knob('text').value()\n    position = node.knob('position').value()\n    position = \"<\" + position + \">\"\n    label = node.knob('label').value()\n    \n    if nuke.thisKnob().name() in listenedKnobs:\n        if text == \"\":\n            if node.knob('position').value() == \"left\":\n                node.knob('label').setValue()\n            else:\n                node.knob('label').setValue(position + name)\n        else:\n            if node.knob('position').value() == \"left\":\n                node.knob('label').setValue(text)\n            else:\n                node.knob('label').setValue(position + text)\n                \n    elif nuke.thisKnob().name() == 'font_size':\n        fontSize = node.knob('font_size').value()\n        node.knob('note_font_size').setValue(fontSize)\nexcept:\n    pass"
    tile_color 0x232323ff
    label "<Left><h2> Gunshot"
    note_font_size 31.5
    xpos -693
    ypos -554
    bdwidth 876
    bdheight 1682
    addUserKnob {20 F_VFX l BackdropNode}
    addUserKnob {43 text l Text}
    text "<h2> Gunshot"
    addUserKnob {7 font_size l "Font Size" R 10 100}
    font_size 31.5
    addUserKnob {4 position l "" -STARTLINE M {Left Center}}
    addUserKnob {26 S01 l " " T " "}
    addUserKnob {22 grow l " <img src=\"F_scalep.png\">" -STARTLINE T "n=nuke.thisNode()\n\ndef grow(node=None,step=50):\n    try:\n        if not node:\n            n=nuke.selectedNode()\n        else:\n            n=node\n            n\['xpos'].setValue(n\['xpos'].getValue()-step)\n            n\['ypos'].setValue(n\['ypos'].getValue()-step)\n            n\['bdwidth'].setValue(n\['bdwidth'].getValue()+step*2)\n            n\['bdheight'].setValue(n\['bdheight'].getValue()+step*2)\n    except:\n        pass\ngrow(n,50)"}
    addUserKnob {22 shrink l " <img src=\"F_scalem.png\">" -STARTLINE T "n=nuke.thisNode()\n\ndef shrink(node=None,step=50):\n    try:\n        if not node:\n            n=nuke.selectedNode()\n        else:\n            n=node\n            n\['xpos'].setValue(n\['xpos'].getValue()+step)\n            n\['ypos'].setValue(n\['ypos'].getValue()+step)\n            n\['bdwidth'].setValue(n\['bdwidth'].getValue()-step*2)\n            n\['bdheight'].setValue(n\['bdheight'].getValue()-step*2)\n    except:\n        pass\nshrink(n,50)"}
    addUserKnob {22 colorandom l " <img src=\"ColorBars.png\">" -STARTLINE T "import colorsys, random\nn=nuke.thisNode()\nR,G,B= colorsys.hsv_to_rgb(random.random(),.1+random.random()*.15,.15+random.random()*.15)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ) )"}
    addUserKnob {22 darkgrey l "<font color=\"#232323\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.0, 0.0, 0.14]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 lightgrey l "<font color=\"#383838\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.0, 0.0, 0.22]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 red l "<font color=\"#8c3838\" size=6>■</font>" T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.0, 0.6, 0.55]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n" +STARTLINE}
    addUserKnob {22 orange l "<font color=\"#b28e59\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.1, 0.5, 0.7]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 yellow l "<font color=\"#ccc766\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.16, 0.5, 0.8]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 green l "<font color=\"#5d995b\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.33, 0.4, 0.6]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 cyan l "<font color=\"#72998f\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.46, 0.25, 0.6]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 blue l "<font color=\"#59687f\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.6, 0.3, 0.5]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 darkblue l "<font color=\"#63628c\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.67, 0.3, 0.55]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 magenta l "<font color=\"#927a99\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.8, 0.2, 0.6]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 pink l "<font color=\"#997a89\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.92, 0.2, 0.6]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {26 S02 l " " T " "}
    addUserKnob {26 Ftools l "" +STARTLINE T "<font color=\"#1C1C1C\"> v1.2 - Franklin VFX - 2018"}
   }
   BackdropNode {
    inputs 0
    name BackdropNode2
    knobChanged "try:\n    listenedKnobs = \['text', 'position', 'name']\n    node = nuke.thisNode()\n    name = node.knob('name').value()\n    text = node.knob('text').value()\n    position = node.knob('position').value()\n    position = \"<\" + position + \">\"\n    label = node.knob('label').value()\n    \n    if nuke.thisKnob().name() in listenedKnobs:\n        if text == \"\":\n            if node.knob('position').value() == \"left\":\n                node.knob('label').setValue()\n            else:\n                node.knob('label').setValue(position + name)\n        else:\n            if node.knob('position').value() == \"left\":\n                node.knob('label').setValue(text)\n            else:\n                node.knob('label').setValue(position + text)\n                \n    elif nuke.thisKnob().name() == 'font_size':\n        fontSize = node.knob('font_size').value()\n        node.knob('note_font_size').setValue(fontSize)\nexcept:\n    pass"
    tile_color 0x927a99ff
    note_font_size 50
    xpos -473
    ypos -221
    bdwidth 435
    bdheight 786
    z_order 1
    addUserKnob {20 F_VFX l BackdropNode}
    addUserKnob {43 text l Text}
    addUserKnob {7 font_size l "Font Size" R 10 100}
    font_size 50
    addUserKnob {4 position l "" -STARTLINE M {Left Center}}
    addUserKnob {26 S01 l " " T " "}
    addUserKnob {22 grow l " <img src=\"F_scalep.png\">" -STARTLINE T "n=nuke.thisNode()\n\ndef grow(node=None,step=50):\n    try:\n        if not node:\n            n=nuke.selectedNode()\n        else:\n            n=node\n            n\['xpos'].setValue(n\['xpos'].getValue()-step)\n            n\['ypos'].setValue(n\['ypos'].getValue()-step)\n            n\['bdwidth'].setValue(n\['bdwidth'].getValue()+step*2)\n            n\['bdheight'].setValue(n\['bdheight'].getValue()+step*2)\n    except:\n        pass\ngrow(n,50)"}
    addUserKnob {22 shrink l " <img src=\"F_scalem.png\">" -STARTLINE T "n=nuke.thisNode()\n\ndef shrink(node=None,step=50):\n    try:\n        if not node:\n            n=nuke.selectedNode()\n        else:\n            n=node\n            n\['xpos'].setValue(n\['xpos'].getValue()+step)\n            n\['ypos'].setValue(n\['ypos'].getValue()+step)\n            n\['bdwidth'].setValue(n\['bdwidth'].getValue()-step*2)\n            n\['bdheight'].setValue(n\['bdheight'].getValue()-step*2)\n    except:\n        pass\nshrink(n,50)"}
    addUserKnob {22 colorandom l " <img src=\"ColorBars.png\">" -STARTLINE T "import colorsys, random\nn=nuke.thisNode()\nR,G,B= colorsys.hsv_to_rgb(random.random(),.1+random.random()*.15,.15+random.random()*.15)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ) )"}
    addUserKnob {22 darkgrey l "<font color=\"#232323\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.0, 0.0, 0.14]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 lightgrey l "<font color=\"#383838\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.0, 0.0, 0.22]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 red l "<font color=\"#8c3838\" size=6>■</font>" T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.0, 0.6, 0.55]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n" +STARTLINE}
    addUserKnob {22 orange l "<font color=\"#b28e59\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.1, 0.5, 0.7]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 yellow l "<font color=\"#ccc766\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.16, 0.5, 0.8]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 green l "<font color=\"#5d995b\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.33, 0.4, 0.6]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 cyan l "<font color=\"#72998f\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.46, 0.25, 0.6]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 blue l "<font color=\"#59687f\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.6, 0.3, 0.5]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 darkblue l "<font color=\"#63628c\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.67, 0.3, 0.55]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 magenta l "<font color=\"#927a99\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.8, 0.2, 0.6]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 pink l "<font color=\"#997a89\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.92, 0.2, 0.6]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {26 S02 l " " T " "}
    addUserKnob {26 Ftools l "" +STARTLINE T "<font color=\"#1C1C1C\"> v1.2 - Franklin VFX - 2018"}
   }
   Constant {
    inputs 0
    channels rgb
    name Constant13
    xpos -643
    ypos 714
   }
   AdjBBox {
    numpixels {{size_bbox}}
    name AdjBBox13
    xpos -643
    ypos 849
   }
   Dot {
    name Dot78
    xpos -609
    ypos 987
   }
   Axis3 {
    inputs 0
    useMatrix true
    matrix {
        {{parent.cCard3D_1.matrix} {parent.cCard3D_1.matrix} {parent.cCard3D_1.matrix} {parent.cCard3D_1.matrix}}
        {{parent.cCard3D_1.matrix} {parent.cCard3D_1.matrix} {parent.cCard3D_1.matrix} {parent.cCard3D_1.matrix}}
        {{parent.cCard3D_1.matrix} {parent.cCard3D_1.matrix} {parent.cCard3D_1.matrix} {parent.cCard3D_1.matrix}}
        {{parent.cCard3D_1.matrix} {parent.cCard3D_1.matrix} {parent.cCard3D_1.matrix} {parent.cCard3D_1.matrix}}
      }
    name Axis14
    xpos -203
    ypos -90
   }
set N57ec5300 [stack 0]
push 0
   Input {
    inputs 0
    name top
    xpos -283
    ypos -1243
    number 1
   }
   TimeOffset {
    time_offset {{"shot_\[value shotnmbr]==0 ? 0 : shot_\[value shotnmbr]-1"}}
    time ""
    name CTimeOffset1
    label "shot: \[value shotnmbr]\non frame \[value time_offset]"
    xpos -283
    ypos -924
    addUserKnob {20 User}
    addUserKnob {3 shotnmbr l "shot "}
    shotnmbr {{shotcount}}
    addUserKnob {3 ref}
    ref {{time_offset+1}}
   }
   Group {
    name DecimalTimeOffset1
    tile_color 0xafa35dff
    label "random asset"
    note_font "Bitstream Vera Sans Bold"
    xpos -283
    ypos -841
    addUserKnob {20 User}
    addUserKnob {7 decimal l "time offset (decimal)"}
    decimal {{random(shotcount*seed)}}
    addUserKnob {26 ""}
    addUserKnob {26 _1 l "" +STARTLINE T "Chris Fryer | 2020\nupdated by Yorben Otto | 2024"}
   }
    Input {
     inputs 0
     name Input1
     xpos 426
     ypos -793
    }
    TimeOffset {
     time_offset {{(-floor(parent.decimal))*(DecimalTimeOffset1.decimal<0)}}
     time ""
     name TimeOffset1
     xpos 426
     ypos -675
    }
    Dot {
     name Dot6
     xpos 460
     ypos -635
    }
set N5c914940 [stack 0]
    Dot {
     name Dot5
     xpos 350
     ypos -635
    }
    Dot {
     name Dot7
     xpos 350
     ypos -365
    }
push $N5c914940
    Dot {
     name Dot1
     xpos 572
     ypos -635
    }
    TimeBlur {
     divisions 2
     shutter {{(parent.decimal-(floor(parent.decimal)))*2}}
     shutteroffset start
     shuttercustomoffset 0
     name TimeBlur1
     xpos 538
     ypos -558
    }
    Dot {
     name Dot2
     xpos 572
     ypos -490
    }
push $N5c914940
    TimeBlur {
     divisions 2
     shutter {{parent.decimal*2}}
     shutteroffset start
     shuttercustomoffset 0
     name TimeBlur8
     xpos 426
     ypos -556
    }
    Switch {
     inputs 2
     which {{parent.decimal<0}}
     name Switch1
     xpos 426
     ypos -494
    }
    Multiply {
     value {{parent.TimeBlur8.divisions}}
     name Multiply6
     xpos 426
     ypos -436
    }
    Merge2 {
     inputs 2
     operation from
     name Merge6
     xpos 426
     ypos -369
    }
set N5c956880 [stack 0]
    Output {
     name Output1
     xpos 426
     ypos -221
    }
push $N5c956880
push $N5c956880
    Viewer {
     inputs 2
     frame_range 1-100
     name Viewer1
     xpos 675
     ypos -246
    }
   end_group
   NoTimeBlur {
    name NoTimeBlur1
    xpos -283
    ypos -779
   }
   Transform {
    scale {{0.05+(0.05*(((parent.DecimalTimeOffset13.decimal-0.5)*2)*ScaleVariationSmoke))}}
    center {{root.width/2 x1015 2304} {root.height/2}}
    shutteroffset centred
    name Transform44
    xpos -283
    ypos -152
   }
   Card3D {
    inputs 3
    rot_order ZYX
    translate {0 0 0}
    rotate {90 0 0}
    shutteroffset centred
    name cCard3D25
    tile_color 0x7b1d1dff
    xpos -283
    ypos 11
    addUserKnob {20 User l parent}
    addUserKnob {22 python_button l "set parent" t "select parent node, and press this button to set the selected node as parent" +INVISIBLE T "n = nuke.selectedNode()\['name'].getValue()\nnuke.thisNode()\['string'].setValue(n)" +STARTLINE}
    addUserKnob {1 string l parent +INVISIBLE}
    string null
    addUserKnob {3 ref l "ref frame"}
    ref 1015
   }
   Transform {
    translate {{"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].translate.x(ref)\}]"} {"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].translate.y(ref)\}]"}}
    rotate {{"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].rotate-\[value parent_gun].rotate(ref)\}]"}}
    scale {{"\[if \{\[value parent_gun]==\"null\"\} \{return 1\} \{return 1+(\[value parent_gun].scale-\[value parent_gun].scale(ref))\}]"}}
    center {{"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].center.x(ref)\}]"} {"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].center.y(ref)\}]"}}
    name Transform_GUNMatchMove37
    xpos -283
    ypos 126
    addUserKnob {20 User l parent}
    addUserKnob {3 ref}
    ref {{parent.CTimeOffset.ref}}
   }
   Transform {
    translate {{"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].translate.x-\[value parent_env].translate.x(ref)\}]"} {"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].translate.y-\[value parent_env].translate.y(ref)\}]"}}
    rotate {{"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].rotate-\[value parent_env].rotate(ref)\}]"}}
    scale {{"\[if \{\[value parent_gun]==\"null\"\} \{return 1\} \{return 1+(\[value parent_env].scale-\[value parent_env].scale(ref))\}]"}}
    center {{"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].center.x(ref)\}]"} {"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].center.y(ref)\}]"}}
    motionblur 0.2
    shutter {{SmokeMB*0.5}}
    shutteroffset centred
    name Transform_ENVMatchMove37
    label "\n"
    xpos -283
    ypos 255
    addUserKnob {20 User l parent}
    addUserKnob {3 ref}
    ref {{parent.CTimeOffset.ref}}
   }
   Transform {
    translate {{"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return -((root.width/2)-(\[value parent_gun].center.x(1)+\[value parent_gun].translate.x(1)))\}]"} {"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return -((root.height/2)-(\[value parent_gun].center.y(1)+\[value parent_gun].translate.y(1)))\}]"}}
    name Transform_GUNMatchMove6
    label "alignment correction"
    xpos -283
    ypos 344
    addUserKnob {20 User l parent}
    addUserKnob {22 python_button l "set parent" t "select parent node, and press this button to set the selected node as parent" T "n = nuke.selectedNode()\['name'].getValue()\nnuke.thisNode()\['string'].setValue(n)" +STARTLINE}
    addUserKnob {1 string l parent}
    string Transform_MatchMove10
    addUserKnob {3 ref +INVISIBLE}
    ref {{parent.cCard3D_8.ref}}
   }
   Multiply {
    value {{math_matrix.result_y_smoke(parent.CTimeOffset.ref)}}
    name Angle_reveal_top1
    label TOP
    xpos -283
    ypos 403
   }
   Remove {
    operation keep
    channels rgb
    name Remove1
    xpos -283
    ypos 514
   }
push 0
   Switch {
    inputs 2
    which {{parent.Angle_reveal_top1.value>0.001}}
    name Switch1
    xpos -283
    ypos 660
   }
   Dot {
    name Dot82
    xpos -249
    ypos 705
   }
push 0
push $N57ec5300
push 0
   Input {
    inputs 0
    name front
    xpos -436
    ypos -1243
    number 2
   }
   TimeOffset {
    time_offset {{"shot_\[value shotnmbr]==0 ? 0 : shot_\[value shotnmbr]-1"}}
    time ""
    name CTimeOffset2
    label "shot: \[value shotnmbr]\non frame \[value time_offset]"
    xpos -436
    ypos -925
    addUserKnob {20 User}
    addUserKnob {3 shotnmbr l "shot "}
    shotnmbr {{shotcount}}
    addUserKnob {3 ref}
    ref {{time_offset+1}}
   }
   Group {
    name DecimalTimeOffset2
    tile_color 0xafa35dff
    label "random asset"
    note_font "Bitstream Vera Sans Bold"
    xpos -436
    ypos -842
    addUserKnob {20 User}
    addUserKnob {7 decimal l "time offset (decimal)"}
    decimal {{random(shotcount*seed)}}
    addUserKnob {26 ""}
    addUserKnob {26 _1 l "" +STARTLINE T "Chris Fryer | 2020\nupdated by Yorben Otto | 2024"}
   }
    Input {
     inputs 0
     name Input1
     xpos 426
     ypos -793
    }
    TimeOffset {
     time_offset {{(-floor(parent.decimal))*(DecimalTimeOffset2.decimal<0)}}
     time ""
     name TimeOffset1
     xpos 426
     ypos -675
    }
    Dot {
     name Dot6
     xpos 460
     ypos -635
    }
set N593a2620 [stack 0]
    Dot {
     name Dot5
     xpos 350
     ypos -635
    }
    Dot {
     name Dot7
     xpos 350
     ypos -365
    }
push $N593a2620
    Dot {
     name Dot1
     xpos 572
     ypos -635
    }
    TimeBlur {
     divisions 2
     shutter {{(parent.decimal-(floor(parent.decimal)))*2}}
     shutteroffset start
     shuttercustomoffset 0
     name TimeBlur1
     xpos 538
     ypos -558
    }
    Dot {
     name Dot2
     xpos 572
     ypos -490
    }
push $N593a2620
    TimeBlur {
     divisions 2
     shutter {{parent.decimal*2}}
     shutteroffset start
     shuttercustomoffset 0
     name TimeBlur8
     xpos 426
     ypos -556
    }
    Switch {
     inputs 2
     which {{parent.decimal<0}}
     name Switch1
     xpos 426
     ypos -494
    }
    Multiply {
     value {{parent.TimeBlur8.divisions}}
     name Multiply6
     xpos 426
     ypos -436
    }
    Merge2 {
     inputs 2
     operation from
     name Merge6
     xpos 426
     ypos -369
    }
set N593e4560 [stack 0]
    Output {
     name Output1
     xpos 426
     ypos -221
    }
push $N593e4560
push $N593e4560
    Viewer {
     inputs 2
     frame_range 1-100
     name Viewer1
     xpos 675
     ypos -246
    }
   end_group
   NoTimeBlur {
    name NoTimeBlur5
    xpos -436
    ypos -780
   }
   Transform {
    scale {{0.05+(0.05*(((parent.DecimalTimeOffset13.decimal-0.5)*2)*ScaleVariationSmoke))}}
    center {{root.width/2 x1015 2304} {root.height/2}}
    shutteroffset centred
    name Transform45
    xpos -436
    ypos -151
   }
   Card3D {
    inputs 3
    rot_order ZYX
    translate {0 0 0}
    rotate {0 90 0}
    shutteroffset centred
    name cCard3D26
    tile_color 0x7b1d1dff
    xpos -436
    ypos 15
    addUserKnob {20 User l parent}
    addUserKnob {22 python_button l "set parent" t "select parent node, and press this button to set the selected node as parent" +INVISIBLE T "n = nuke.selectedNode()\['name'].getValue()\nnuke.thisNode()\['string'].setValue(n)" +STARTLINE}
    addUserKnob {1 string l parent +INVISIBLE}
    string null
    addUserKnob {3 ref l "ref frame"}
    ref 1015
   }
   Transform {
    translate {{"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].translate.x(ref)\}]"} {"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].translate.y(ref)\}]"}}
    rotate {{"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].rotate-\[value parent_gun].rotate(ref)\}]"}}
    scale {{"\[if \{\[value parent_gun]==\"null\"\} \{return 1\} \{return 1+(\[value parent_gun].scale-\[value parent_gun].scale(ref))\}]"}}
    center {{"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].center.x(ref)\}]"} {"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].center.y(ref)\}]"}}
    name Transform_GUNMatchMove38
    label "\n"
    xpos -436
    ypos 124
    addUserKnob {20 User l parent}
    addUserKnob {3 ref}
    ref {{parent.CTimeOffset.ref}}
   }
   Transform {
    translate {{"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].translate.x-\[value parent_env].translate.x(ref)\}]"} {"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].translate.y-\[value parent_env].translate.y(ref)\}]"}}
    rotate {{"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].rotate-\[value parent_env].rotate(ref)\}]"}}
    scale {{"\[if \{\[value parent_gun]==\"null\"\} \{return 1\} \{return 1+(\[value parent_env].scale-\[value parent_env].scale(ref))\}]"}}
    center {{"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].center.x(ref)\}]"} {"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].center.y(ref)\}]"}}
    motionblur 0.2
    shutter {{SmokeMB*0.5}}
    shutteroffset centred
    name Transform_ENVMatchMove38
    xpos -436
    ypos 254
    addUserKnob {20 User l parent}
    addUserKnob {3 ref}
    ref {{parent.CTimeOffset.ref}}
   }
   Transform {
    translate {{"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return -((root.width/2)-(\[value parent_gun].center.x(1)+\[value parent_gun].translate.x(1)))\}]"} {"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return -((root.height/2)-(\[value parent_gun].center.y(1)+\[value parent_gun].translate.y(1)))\}]"}}
    name Transform_GUNMatchMove7
    label "alignment correction"
    xpos -436
    ypos 343
    addUserKnob {20 User l parent}
    addUserKnob {22 python_button l "set parent" t "select parent node, and press this button to set the selected node as parent" T "n = nuke.selectedNode()\['name'].getValue()\nnuke.thisNode()\['string'].setValue(n)" +STARTLINE}
    addUserKnob {1 string l parent}
    string Transform_MatchMove10
    addUserKnob {3 ref +INVISIBLE}
    ref {{parent.cCard3D_8.ref}}
   }
   Multiply {
    value {{math_matrix.result_x_smoke(parent.CTimeOffset.ref)}}
    name Angle_reveal_front1
    label FRONT
    xpos -436
    ypos 401
   }
   Remove {
    operation keep
    channels rgb
    name Remove2
    xpos -436
    ypos 511
   }
push 0
   Switch {
    inputs 2
    which {{parent.Angle_reveal_front1.value>0.001}}
    name Switch2
    xpos -436
    ypos 660
   }
   Dot {
    name Dot83
    xpos -402
    ypos 735
   }
   Input {
    inputs 0
    name side
    xpos -130
    ypos -1242
   }
   TimeOffset {
    time_offset {{"shot_\[value shotnmbr]==0 ? 0 : shot_\[value shotnmbr]-1"}}
    time ""
    name CTimeOffset
    label "shot: \[value shotnmbr]\non frame \[value time_offset]"
    xpos -130
    ypos -927
    addUserKnob {20 User}
    addUserKnob {3 shotnmbr l "shot "}
    shotnmbr {{shotcount}}
    addUserKnob {3 ref}
    ref {{time_offset+1}}
   }
   Group {
    name DecimalTimeOffset13
    tile_color 0xafa35dff
    label "random asset"
    note_font "Bitstream Vera Sans Bold"
    xpos -130
    ypos -844
    addUserKnob {20 User}
    addUserKnob {7 decimal l "time offset (decimal)"}
    decimal {{random(shotcount*seed)}}
    addUserKnob {26 ""}
    addUserKnob {26 _1 l "" +STARTLINE T "Chris Fryer | 2020\nupdated by Yorben Otto | 2024"}
   }
    Input {
     inputs 0
     name Input1
     xpos 426
     ypos -793
    }
    TimeOffset {
     time_offset {{(-floor(parent.decimal))*(DecimalTimeOffset13.decimal<0)}}
     time ""
     name TimeOffset1
     xpos 426
     ypos -675
    }
    Dot {
     name Dot6
     xpos 460
     ypos -635
    }
set N3360e0f0 [stack 0]
    Dot {
     name Dot5
     xpos 350
     ypos -635
    }
    Dot {
     name Dot7
     xpos 350
     ypos -365
    }
push $N3360e0f0
    Dot {
     name Dot1
     xpos 572
     ypos -635
    }
    TimeBlur {
     divisions 2
     shutter {{(parent.decimal-(floor(parent.decimal)))*2}}
     shutteroffset start
     shuttercustomoffset 0
     name TimeBlur1
     xpos 538
     ypos -558
    }
    Dot {
     name Dot2
     xpos 572
     ypos -490
    }
push $N3360e0f0
    TimeBlur {
     divisions 2
     shutter {{parent.decimal*2}}
     shutteroffset start
     shuttercustomoffset 0
     name TimeBlur8
     xpos 426
     ypos -556
    }
    Switch {
     inputs 2
     which {{parent.decimal<0}}
     name Switch1
     xpos 426
     ypos -494
    }
    Multiply {
     value {{parent.TimeBlur8.divisions}}
     name Multiply6
     xpos 426
     ypos -436
    }
    Merge2 {
     inputs 2
     operation from
     name Merge6
     xpos 426
     ypos -369
    }
set N33650030 [stack 0]
    Output {
     name Output1
     xpos 426
     ypos -221
    }
push $N33650030
push $N33650030
    Viewer {
     inputs 2
     frame_range 1-100
     name Viewer1
     xpos 675
     ypos -246
    }
   end_group
   NoTimeBlur {
    name NoTimeBlur13
    xpos -130
    ypos -782
   }
   Transform {
    scale {{0.05+(0.05*(((parent.DecimalTimeOffset13.decimal-0.5)*2)*ScaleVariationSmoke))}}
    center {{root.width/2 x1015 2304} {root.height/2}}
    shutteroffset centred
    name Transform46
    xpos -130
    ypos -155
   }
   Card3D {
    translate {{"\[if \{\[exists  parent.parent.parent.input0]\} \{return \[value \[topnode parent.parent.parent.input0].name].translate.x(ref)\} \{return 0\}]"} {"\[if \{\[exists  parent.parent.parent.input0]\} \{return \[value \[topnode parent.parent.parent.input0].name].translate.y(ref)\} \{return 0\}]"} {"\[if \{\[exists  parent.parent.parent.input0]\} \{return \[value \[topnode parent.parent.parent.input0].name].translate.z(ref)\} \{return -1\}]"}}
    rotate {{"\[if \{\[exists  parent.parent.parent.input0]\} \{return \[value \[topnode parent.parent.parent.input0].name].rotate.x(ref)\} \{return 0\}]"} {"\[if \{\[exists  parent.parent.parent.input0]\} \{return \[value \[topnode parent.parent.parent.input0].name].rotate.y(ref)\} \{return 0\}]"} {"\[if \{\[exists  parent.parent.parent.input0]\} \{return \[value \[topnode parent.parent.parent.input0].name].rotate.z(ref)\} \{return 0\}]"}}
    scaling {{"\[if \{\[exists  parent.parent.parent.input0]\} \{return \[value \[topnode parent.parent.parent.input0].name].scaling.x(ref)\} \{return 1\}]"} {"\[if \{\[exists  parent.parent.parent.input0]\} \{return \[value \[topnode parent.parent.parent.input0].name].scaling.y(ref)\} \{return 1\}]"} {"\[if \{\[exists  parent.parent.parent.input0]\} \{return \[value \[topnode parent.parent.parent.input0].name].scaling.z(ref)\} \{return 1\}]"}}
    uniform_scale {{"\[if \{\[exists  parent.parent.parent.input0]\} \{return (\[value \[topnode parent.parent.parent.input0].name].uniform_scale(ref)*25)\} \{return 25\}]"}}
    shutteroffset centred
    name cCard3D_1
    tile_color 0x7b1d1dff
    label "ref frame: \[value ref]"
    xpos -130
    ypos 2
    addUserKnob {20 User l parent}
    addUserKnob {22 python_button l "set parent" t "select parent node, and press this button to set the selected node as parent" +INVISIBLE T "n = nuke.selectedNode()\['name'].getValue()\nnuke.thisNode()\['string'].setValue(n)" +STARTLINE}
    addUserKnob {1 string l parent +INVISIBLE}
    string null
    addUserKnob {3 id l "id number"}
    id {{parent.CTimeOffset.shotnmbr}}
    addUserKnob {3 ref l "ref frame"}
    ref {{parent.CTimeOffset.ref}}
   }
   Transform {
    translate {{"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].translate.x(ref)\}]"} {"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].translate.y(ref)\}]"}}
    rotate {{"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].rotate-\[value parent_gun].rotate(ref)\}]"}}
    scale {{"\[if \{\[value parent_gun]==\"null\"\} \{return 1\} \{return 1+(\[value parent_gun].scale-\[value parent_gun].scale(ref))\}]"}}
    center {{"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].center.x(ref)\}]"} {"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].center.y(ref)\}]"}}
    name Transform_GUNMatchMove39
    label "\n"
    xpos -130
    ypos 124
    addUserKnob {20 User l parent}
    addUserKnob {3 ref}
    ref {{parent.CTimeOffset.ref}}
   }
   Transform {
    translate {{"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].translate.x-\[value parent_env].translate.x(ref)\}]"} {"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].translate.y-\[value parent_env].translate.y(ref)\}]"}}
    rotate {{"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].rotate-\[value parent_env].rotate(ref)\}]"}}
    scale {{"\[if \{\[value parent_gun]==\"null\"\} \{return 1\} \{return 1+(\[value parent_env].scale-\[value parent_env].scale(ref))\}]"}}
    center {{"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].center.x(ref)\}]"} {"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].center.y(ref)\}]"}}
    motionblur 0.2
    shutter {{SmokeMB*0.5}}
    shutteroffset centred
    name Transform_ENVMatchMove39
    xpos -130
    ypos 258
    addUserKnob {20 User l parent}
    addUserKnob {3 ref}
    ref {{parent.CTimeOffset.ref}}
   }
   Transform {
    translate {{"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return -((root.width/2)-(\[value parent_gun].center.x(1)+\[value parent_gun].translate.x(1)))\}]"} {"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return -((root.height/2)-(\[value parent_gun].center.y(1)+\[value parent_gun].translate.y(1)))\}]"}}
    name Transform_GUNMatchMove5
    label "alignment correction"
    xpos -130
    ypos 340
    addUserKnob {20 User l parent}
    addUserKnob {22 python_button l "set parent" t "select parent node, and press this button to set the selected node as parent" T "n = nuke.selectedNode()\['name'].getValue()\nnuke.thisNode()\['string'].setValue(n)" +STARTLINE}
    addUserKnob {1 string l parent}
    string Transform_MatchMove10
    addUserKnob {3 ref +INVISIBLE}
    ref {{parent.cCard3D_8.ref}}
   }
   Multiply {
    value {{math_matrix.result_z_smoke(parent.CTimeOffset.ref)}}
    name Angle_reveal_side1
    label SIDE
    xpos -130
    ypos 404
   }
   Remove {
    operation keep
    channels rgb
    name Remove39
    xpos -130
    ypos 514
   }
push 0
   Switch {
    inputs 2
    which {{parent.Angle_reveal_side1.value>0.001}}
    name Switch3
    xpos -130
    ypos 658
   }
   Merge2 {
    inputs 3+1
    operation max
    Achannels rgb
    Bchannels rgb
    output rgb
    name Merge28
    xpos -130
    ypos 731
   }
   Merge2 {
    inputs 2
    operation plus
    bbox intersection
    Achannels rgb
    Bchannels rgb
    output rgb
    name Merge29
    xpos -130
    ypos 983
   }
   Shuffle2 {
    fromInput1 {{0} B}
    fromInput2 {{0} B}
    mappings "4 rgba.red 0 0 rgba.red 0 0 rgba.green 0 1 rgba.green 0 1 rgba.blue 0 2 rgba.alpha 0 3 rgba.blue 0 2 rgba.blue 0 2"
    name Shuffle1
    xpos -130
    ypos 1021
   }
push 0
   Switch {
    inputs 2
    which {{"shot_\[value count]==0?0:frame>=shot_\[value count]"}}
    name cSwitch_13
    xpos -130
    ypos 1078
    addUserKnob {20 User}
    addUserKnob {3 count}
    count {{parent.CTimeOffset.shotnmbr}}
   }
   Output {
    name Output1
    xpos -130
    ypos 1323
   }
   StickyNote {
    inputs 0
    name StickyNote1
    label "<-- handy to break concatonation?  "
    xpos -39
    ypos 193
   }
  end_group
push $N586971d0
  PostageStamp {
   name Stamp61
   help "Stamps by Adrian Pueyo and Alexey Kuchinski.\nUpdated May 18 2021"
   onCreate "if nuke.GUI:\n    try:\n        import stamps; stamps.wiredOnCreate()\n    except:\n        pass\n"
   knobChanged "import stamps; stamps.wiredKnobChanged()"
   autolabel "nuke.thisNode().knob(\"title\").value()"
   tile_color 0x1000001
   note_font "Bitstream Vera Sans"
   note_font_size 20
   xpos 7302
   ypos -722
   hide_input true
   addUserKnob {20 wired_tab l "Wired Stamp"}
   addUserKnob {26 identifier -STARTLINE +HIDDEN T wired}
   addUserKnob {3 lockCallbacks l "" +STARTLINE +HIDDEN}
   addUserKnob {6 toReconnect -STARTLINE +HIDDEN}
   addUserKnob {1 title l Title: t "Displayed name on the Node Graph for this Stamp and its Anchor.\nIMPORTANT: This is only for display purposes, and is different from the real/internal name of the Stamps."}
   title smoke_FRONT
   addUserKnob {26 prev_title l "" +STARTLINE +HIDDEN T smoke_FRONT}
   addUserKnob {26 tags l Tags: t "Tags of this stamp's Anchor, for information purpose only.\nClick \"show anchor\" to change them." T <i>2D</i>}
   addUserKnob {26 backdrops l Backdrops: t "Labels of backdrop nodes which contain this stamp's Anchor." T "<i><Left>before or after Flare</i>"}
   addUserKnob {26 line1 l "" +STARTLINE}
   addUserKnob {6 postageStamp_show l "postage stamp" t "Enable the postage stamp thumbnail in this node.\nYou're seeing this because the class of this node includes the postage_stamp knob." +STARTLINE}
   addUserKnob {26 anchor_label l Anchor: T " "}
   addUserKnob {22 show_anchor l " show anchor " t "Show the properties panel for this Stamp's Anchor." -STARTLINE T stamps.wiredShowAnchor()}
   addUserKnob {22 zoom_anchor l "zoom anchor" t "Navigate to this Stamp's Anchor on the Node Graph." -STARTLINE T stamps.wiredZoomAnchor()}
   addUserKnob {26 stamps_label l Stamps: T " "}
   addUserKnob {22 zoomNext l " zoom next " t "Navigate to this Stamp's next sibling on the Node Graph." -STARTLINE T stamps.wiredZoomNext()}
   addUserKnob {22 selectSimilar l " select similar " t "Select all similar Stamps to this one on the Node Graph." -STARTLINE T stamps.wiredSelectSimilar()}
   addUserKnob {26 space_1 l "" +STARTLINE T " "}
   addUserKnob {26 reconnect_label l Reconnect: t "Reconnect by the stored Anchor name." T " "}
   addUserKnob {22 reconnect_this l this t "Reconnect this Stamp to its Anchor, by its stored Anchor name." -STARTLINE T "n = nuke.thisNode()\ntry:\n    n.setInput(0,nuke.toNode(n.knob(\"anchor\").value()))\nexcept:\n    nuke.message(\"Unable to reconnect.\")\ntry:\n    import stamps\n    stamps.wiredGetStyle(n)\nexcept:\n    pass\n"}
   addUserKnob {22 reconnect_similar l similar t "Reconnect this Stamp and similar ones to their Anchor, by their stored anchor name." -STARTLINE T stamps.wiredReconnectSimilar()}
   addUserKnob {22 reconnect_all l all t "Reconnect all the Stamps to their Anchors, by their stored anchor names." -STARTLINE T stamps.wiredReconnectAll()}
   addUserKnob {26 space_2 l "" +STARTLINE T " "}
   addUserKnob {20 advanced_reconnection l "Advanced Reconnection" n 2}
   addUserKnob {26 reconnect_by_title_label l "<font color=gold>By Title:" t "Reconnect by searching for a matching title." T " "}
   addUserKnob {22 reconnect_by_title_this l this t "Look for an Anchor that shares this Stamp's title, and connect this Stamp to it.\nIMPORTANT: Use this carefully, and only when the normal reconnection doesn't work." -STARTLINE T stamps.wiredReconnectByTitle()}
   addUserKnob {22 reconnect_by_title_similar l similar t "Look for an Anchor that shares this Stamp's title, and connect this Stamp and similar ones to it.\nIMPORTANT: Use this carefully, and only when the normal reconnection doesn't work." -STARTLINE T stamps.wiredReconnectByTitleSimilar()}
   addUserKnob {22 reconnect_by_title_selected l selected t "For each Stamp selected, look for an Anchor that shares its title, and connect to it.\nIMPORTANT: Use this carefully, and only when the normal reconnection doesn't work." -STARTLINE T stamps.wiredReconnectByTitleSelected()}
   addUserKnob {26 reconnect_by_selection_label l "<font color=orangered>By Selection:" t "Force reconnect to a selected Anchor." T " "}
   addUserKnob {22 reconnect_by_selection_this l this t "Force reconnect this Stamp to a selected Anchor, whatever its name or title.\nIMPORTANT: Use this carefully, and only when the normal reconnection doesn't work." -STARTLINE T stamps.wiredReconnectBySelection()}
   addUserKnob {22 reconnect_by_selection_similar l similar t "Force reconnect this Stamp and similar ones to a selected Anchor, whatever its name or title.\nIMPORTANT: Use this carefully, and only when the normal reconnection doesn't work." -STARTLINE T stamps.wiredReconnectBySelectionSimilar()}
   addUserKnob {22 reconnect_by_selection_selected l selected t "Force reconnect all selected Stamps to an also selected Anchor, whatever its name or title.\nIMPORTANT: Use this carefully, and only when the normal reconnection doesn't work." -STARTLINE T stamps.wiredReconnectBySelectionSelected()}
   addUserKnob {1 anchor l Anchor}
   anchor Anchor_220a2be282
   addUserKnob {6 auto_reconnect_by_title l "<font color=#ED9977>&nbsp; auto-reconnect by title" t "When creating this stamp again (like on copy-paste), auto-reconnect it by title instead of doing it by the saved anchor's name, and auto-turn this off immediately.\nIMPORTANT: Should be off by default. Only use this for setting up templates." +STARTLINE}
   addUserKnob {26 line2 l "" +STARTLINE}
   addUserKnob {22 buttonHelp l Help -STARTLINE T stamps.showHelp()}
   addUserKnob {26 version l " " t "Stamps by Adrian Pueyo and Alexey Kuchinski.\nUpdated May 18 2021." -STARTLINE T "<a href=\"http://www.nukepedia.com/gizmos/other/stamps\" style=\"color:#666;text-decoration: none;\"><span style=\"color:#666\"> <big>Stamps v1.1</big></b></a>"}
  }
  Dot {
   name Dot41
   xpos 7336
   ypos -674
  }
push $N58d70c10
  PostageStamp {
   name Stamp62
   help "Stamps by Adrian Pueyo and Alexey Kuchinski.\nUpdated May 18 2021"
   onCreate "if nuke.GUI:\n    try:\n        import stamps; stamps.wiredOnCreate()\n    except:\n        pass\n"
   knobChanged "import stamps; stamps.wiredKnobChanged()"
   autolabel "nuke.thisNode().knob(\"title\").value()"
   tile_color 0x1000001
   note_font "Bitstream Vera Sans"
   note_font_size 20
   xpos 7427
   ypos -722
   hide_input true
   addUserKnob {20 wired_tab l "Wired Stamp"}
   addUserKnob {26 identifier -STARTLINE +HIDDEN T wired}
   addUserKnob {3 lockCallbacks l "" +STARTLINE +HIDDEN}
   addUserKnob {6 toReconnect -STARTLINE +HIDDEN}
   addUserKnob {1 title l Title: t "Displayed name on the Node Graph for this Stamp and its Anchor.\nIMPORTANT: This is only for display purposes, and is different from the real/internal name of the Stamps."}
   title smoke_TOP
   addUserKnob {26 prev_title l "" +STARTLINE +HIDDEN T smoke_TOP}
   addUserKnob {26 tags l Tags: t "Tags of this stamp's Anchor, for information purpose only.\nClick \"show anchor\" to change them." T <i>2D</i>}
   addUserKnob {26 backdrops l Backdrops: t "Labels of backdrop nodes which contain this stamp's Anchor." T "<i><Left>before or after Flare</i>"}
   addUserKnob {26 line1 l "" +STARTLINE}
   addUserKnob {6 postageStamp_show l "postage stamp" t "Enable the postage stamp thumbnail in this node.\nYou're seeing this because the class of this node includes the postage_stamp knob." +STARTLINE}
   addUserKnob {26 anchor_label l Anchor: T " "}
   addUserKnob {22 show_anchor l " show anchor " t "Show the properties panel for this Stamp's Anchor." -STARTLINE T stamps.wiredShowAnchor()}
   addUserKnob {22 zoom_anchor l "zoom anchor" t "Navigate to this Stamp's Anchor on the Node Graph." -STARTLINE T stamps.wiredZoomAnchor()}
   addUserKnob {26 stamps_label l Stamps: T " "}
   addUserKnob {22 zoomNext l " zoom next " t "Navigate to this Stamp's next sibling on the Node Graph." -STARTLINE T stamps.wiredZoomNext()}
   addUserKnob {22 selectSimilar l " select similar " t "Select all similar Stamps to this one on the Node Graph." -STARTLINE T stamps.wiredSelectSimilar()}
   addUserKnob {26 space_1 l "" +STARTLINE T " "}
   addUserKnob {26 reconnect_label l Reconnect: t "Reconnect by the stored Anchor name." T " "}
   addUserKnob {22 reconnect_this l this t "Reconnect this Stamp to its Anchor, by its stored Anchor name." -STARTLINE T "n = nuke.thisNode()\ntry:\n    n.setInput(0,nuke.toNode(n.knob(\"anchor\").value()))\nexcept:\n    nuke.message(\"Unable to reconnect.\")\ntry:\n    import stamps\n    stamps.wiredGetStyle(n)\nexcept:\n    pass\n"}
   addUserKnob {22 reconnect_similar l similar t "Reconnect this Stamp and similar ones to their Anchor, by their stored anchor name." -STARTLINE T stamps.wiredReconnectSimilar()}
   addUserKnob {22 reconnect_all l all t "Reconnect all the Stamps to their Anchors, by their stored anchor names." -STARTLINE T stamps.wiredReconnectAll()}
   addUserKnob {26 space_2 l "" +STARTLINE T " "}
   addUserKnob {20 advanced_reconnection l "Advanced Reconnection" n 2}
   addUserKnob {26 reconnect_by_title_label l "<font color=gold>By Title:" t "Reconnect by searching for a matching title." T " "}
   addUserKnob {22 reconnect_by_title_this l this t "Look for an Anchor that shares this Stamp's title, and connect this Stamp to it.\nIMPORTANT: Use this carefully, and only when the normal reconnection doesn't work." -STARTLINE T stamps.wiredReconnectByTitle()}
   addUserKnob {22 reconnect_by_title_similar l similar t "Look for an Anchor that shares this Stamp's title, and connect this Stamp and similar ones to it.\nIMPORTANT: Use this carefully, and only when the normal reconnection doesn't work." -STARTLINE T stamps.wiredReconnectByTitleSimilar()}
   addUserKnob {22 reconnect_by_title_selected l selected t "For each Stamp selected, look for an Anchor that shares its title, and connect to it.\nIMPORTANT: Use this carefully, and only when the normal reconnection doesn't work." -STARTLINE T stamps.wiredReconnectByTitleSelected()}
   addUserKnob {26 reconnect_by_selection_label l "<font color=orangered>By Selection:" t "Force reconnect to a selected Anchor." T " "}
   addUserKnob {22 reconnect_by_selection_this l this t "Force reconnect this Stamp to a selected Anchor, whatever its name or title.\nIMPORTANT: Use this carefully, and only when the normal reconnection doesn't work." -STARTLINE T stamps.wiredReconnectBySelection()}
   addUserKnob {22 reconnect_by_selection_similar l similar t "Force reconnect this Stamp and similar ones to a selected Anchor, whatever its name or title.\nIMPORTANT: Use this carefully, and only when the normal reconnection doesn't work." -STARTLINE T stamps.wiredReconnectBySelectionSimilar()}
   addUserKnob {22 reconnect_by_selection_selected l selected t "Force reconnect all selected Stamps to an also selected Anchor, whatever its name or title.\nIMPORTANT: Use this carefully, and only when the normal reconnection doesn't work." -STARTLINE T stamps.wiredReconnectBySelectionSelected()}
   addUserKnob {1 anchor l Anchor}
   anchor Anchor_25b668170c
   addUserKnob {6 auto_reconnect_by_title l "<font color=#ED9977>&nbsp; auto-reconnect by title" t "When creating this stamp again (like on copy-paste), auto-reconnect it by title instead of doing it by the saved anchor's name, and auto-turn this off immediately.\nIMPORTANT: Should be off by default. Only use this for setting up templates." +STARTLINE}
   addUserKnob {26 line2 l "" +STARTLINE}
   addUserKnob {22 buttonHelp l Help -STARTLINE T stamps.showHelp()}
   addUserKnob {26 version l " " t "Stamps by Adrian Pueyo and Alexey Kuchinski.\nUpdated May 18 2021." -STARTLINE T "<a href=\"http://www.nukepedia.com/gizmos/other/stamps\" style=\"color:#666;text-decoration: none;\"><span style=\"color:#666\"> <big>Stamps v1.1</big></b></a>"}
  }
push $N56244930
  PostageStamp {
   name Stamp63
   help "Stamps by Adrian Pueyo and Alexey Kuchinski.\nUpdated May 18 2021"
   onCreate "if nuke.GUI:\n    try:\n        import stamps; stamps.wiredOnCreate()\n    except:\n        pass\n"
   knobChanged "import stamps; stamps.wiredKnobChanged()"
   autolabel "nuke.thisNode().knob(\"title\").value()"
   tile_color 0x1000001
   note_font "Bitstream Vera Sans"
   note_font_size 20
   xpos 7545
   ypos -724
   hide_input true
   addUserKnob {20 wired_tab l "Wired Stamp"}
   addUserKnob {26 identifier -STARTLINE +HIDDEN T wired}
   addUserKnob {3 lockCallbacks l "" +STARTLINE +HIDDEN}
   addUserKnob {6 toReconnect -STARTLINE +HIDDEN}
   addUserKnob {1 title l Title: t "Displayed name on the Node Graph for this Stamp and its Anchor.\nIMPORTANT: This is only for display purposes, and is different from the real/internal name of the Stamps."}
   title smoke_SIDE
   addUserKnob {26 prev_title l "" +STARTLINE +HIDDEN T smoke_SIDE}
   addUserKnob {26 tags l Tags: t "Tags of this stamp's Anchor, for information purpose only.\nClick \"show anchor\" to change them." T <i>2D</i>}
   addUserKnob {26 backdrops l Backdrops: t "Labels of backdrop nodes which contain this stamp's Anchor." T "<i><Left>before or after Flare</i>"}
   addUserKnob {26 line1 l "" +STARTLINE}
   addUserKnob {6 postageStamp_show l "postage stamp" t "Enable the postage stamp thumbnail in this node.\nYou're seeing this because the class of this node includes the postage_stamp knob." +STARTLINE}
   addUserKnob {26 anchor_label l Anchor: T " "}
   addUserKnob {22 show_anchor l " show anchor " t "Show the properties panel for this Stamp's Anchor." -STARTLINE T stamps.wiredShowAnchor()}
   addUserKnob {22 zoom_anchor l "zoom anchor" t "Navigate to this Stamp's Anchor on the Node Graph." -STARTLINE T stamps.wiredZoomAnchor()}
   addUserKnob {26 stamps_label l Stamps: T " "}
   addUserKnob {22 zoomNext l " zoom next " t "Navigate to this Stamp's next sibling on the Node Graph." -STARTLINE T stamps.wiredZoomNext()}
   addUserKnob {22 selectSimilar l " select similar " t "Select all similar Stamps to this one on the Node Graph." -STARTLINE T stamps.wiredSelectSimilar()}
   addUserKnob {26 space_1 l "" +STARTLINE T " "}
   addUserKnob {26 reconnect_label l Reconnect: t "Reconnect by the stored Anchor name." T " "}
   addUserKnob {22 reconnect_this l this t "Reconnect this Stamp to its Anchor, by its stored Anchor name." -STARTLINE T "n = nuke.thisNode()\ntry:\n    n.setInput(0,nuke.toNode(n.knob(\"anchor\").value()))\nexcept:\n    nuke.message(\"Unable to reconnect.\")\ntry:\n    import stamps\n    stamps.wiredGetStyle(n)\nexcept:\n    pass\n"}
   addUserKnob {22 reconnect_similar l similar t "Reconnect this Stamp and similar ones to their Anchor, by their stored anchor name." -STARTLINE T stamps.wiredReconnectSimilar()}
   addUserKnob {22 reconnect_all l all t "Reconnect all the Stamps to their Anchors, by their stored anchor names." -STARTLINE T stamps.wiredReconnectAll()}
   addUserKnob {26 space_2 l "" +STARTLINE T " "}
   addUserKnob {20 advanced_reconnection l "Advanced Reconnection" n 2}
   addUserKnob {26 reconnect_by_title_label l "<font color=gold>By Title:" t "Reconnect by searching for a matching title." T " "}
   addUserKnob {22 reconnect_by_title_this l this t "Look for an Anchor that shares this Stamp's title, and connect this Stamp to it.\nIMPORTANT: Use this carefully, and only when the normal reconnection doesn't work." -STARTLINE T stamps.wiredReconnectByTitle()}
   addUserKnob {22 reconnect_by_title_similar l similar t "Look for an Anchor that shares this Stamp's title, and connect this Stamp and similar ones to it.\nIMPORTANT: Use this carefully, and only when the normal reconnection doesn't work." -STARTLINE T stamps.wiredReconnectByTitleSimilar()}
   addUserKnob {22 reconnect_by_title_selected l selected t "For each Stamp selected, look for an Anchor that shares its title, and connect to it.\nIMPORTANT: Use this carefully, and only when the normal reconnection doesn't work." -STARTLINE T stamps.wiredReconnectByTitleSelected()}
   addUserKnob {26 reconnect_by_selection_label l "<font color=orangered>By Selection:" t "Force reconnect to a selected Anchor." T " "}
   addUserKnob {22 reconnect_by_selection_this l this t "Force reconnect this Stamp to a selected Anchor, whatever its name or title.\nIMPORTANT: Use this carefully, and only when the normal reconnection doesn't work." -STARTLINE T stamps.wiredReconnectBySelection()}
   addUserKnob {22 reconnect_by_selection_similar l similar t "Force reconnect this Stamp and similar ones to a selected Anchor, whatever its name or title.\nIMPORTANT: Use this carefully, and only when the normal reconnection doesn't work." -STARTLINE T stamps.wiredReconnectBySelectionSimilar()}
   addUserKnob {22 reconnect_by_selection_selected l selected t "Force reconnect all selected Stamps to an also selected Anchor, whatever its name or title.\nIMPORTANT: Use this carefully, and only when the normal reconnection doesn't work." -STARTLINE T stamps.wiredReconnectBySelectionSelected()}
   addUserKnob {1 anchor l Anchor}
   anchor Anchor_232c9aab88
   addUserKnob {6 auto_reconnect_by_title l "<font color=#ED9977>&nbsp; auto-reconnect by title" t "When creating this stamp again (like on copy-paste), auto-reconnect it by title instead of doing it by the saved anchor's name, and auto-turn this off immediately.\nIMPORTANT: Should be off by default. Only use this for setting up templates." +STARTLINE}
   addUserKnob {26 line2 l "" +STARTLINE}
   addUserKnob {22 buttonHelp l Help -STARTLINE T stamps.showHelp()}
   addUserKnob {26 version l " " t "Stamps by Adrian Pueyo and Alexey Kuchinski.\nUpdated May 18 2021." -STARTLINE T "<a href=\"http://www.nukepedia.com/gizmos/other/stamps\" style=\"color:#666;text-decoration: none;\"><span style=\"color:#666\"> <big>Stamps v1.1</big></b></a>"}
  }
  Dot {
   name Dot42
   xpos 7579
   ypos -674
  }
  Group {
   inputs 3
   name gunshot21
   label "shot: \[value shotcount]\non frame: \[value shotstart]\n"
   xpos 7427
   ypos -646
   addUserKnob {20 User}
   addUserKnob {3 shotcount l shot}
   shotcount 21
   addUserKnob {3 shotstart l frame +INVISIBLE}
   shotstart {{"shotcount==0 ? 0 : shot\[value shotcount]-1" i}}
  }
   BackdropNode {
    inputs 0
    name BackdropNode19
    knobChanged "try:\n    listenedKnobs = \['text', 'position', 'name']\n    node = nuke.thisNode()\n    name = node.knob('name').value()\n    text = node.knob('text').value()\n    position = node.knob('position').value()\n    position = \"<\" + position + \">\"\n    label = node.knob('label').value()\n    \n    if nuke.thisKnob().name() in listenedKnobs:\n        if text == \"\":\n            if node.knob('position').value() == \"left\":\n                node.knob('label').setValue()\n            else:\n                node.knob('label').setValue(position + name)\n        else:\n            if node.knob('position').value() == \"left\":\n                node.knob('label').setValue(text)\n            else:\n                node.knob('label').setValue(position + text)\n                \n    elif nuke.thisKnob().name() == 'font_size':\n        fontSize = node.knob('font_size').value()\n        node.knob('note_font_size').setValue(fontSize)\nexcept:\n    pass"
    tile_color 0x232323ff
    label "<Left><h2> Gunshot"
    note_font_size 31.5
    xpos -693
    ypos -554
    bdwidth 876
    bdheight 1682
    addUserKnob {20 F_VFX l BackdropNode}
    addUserKnob {43 text l Text}
    text "<h2> Gunshot"
    addUserKnob {7 font_size l "Font Size" R 10 100}
    font_size 31.5
    addUserKnob {4 position l "" -STARTLINE M {Left Center}}
    addUserKnob {26 S01 l " " T " "}
    addUserKnob {22 grow l " <img src=\"F_scalep.png\">" -STARTLINE T "n=nuke.thisNode()\n\ndef grow(node=None,step=50):\n    try:\n        if not node:\n            n=nuke.selectedNode()\n        else:\n            n=node\n            n\['xpos'].setValue(n\['xpos'].getValue()-step)\n            n\['ypos'].setValue(n\['ypos'].getValue()-step)\n            n\['bdwidth'].setValue(n\['bdwidth'].getValue()+step*2)\n            n\['bdheight'].setValue(n\['bdheight'].getValue()+step*2)\n    except:\n        pass\ngrow(n,50)"}
    addUserKnob {22 shrink l " <img src=\"F_scalem.png\">" -STARTLINE T "n=nuke.thisNode()\n\ndef shrink(node=None,step=50):\n    try:\n        if not node:\n            n=nuke.selectedNode()\n        else:\n            n=node\n            n\['xpos'].setValue(n\['xpos'].getValue()+step)\n            n\['ypos'].setValue(n\['ypos'].getValue()+step)\n            n\['bdwidth'].setValue(n\['bdwidth'].getValue()-step*2)\n            n\['bdheight'].setValue(n\['bdheight'].getValue()-step*2)\n    except:\n        pass\nshrink(n,50)"}
    addUserKnob {22 colorandom l " <img src=\"ColorBars.png\">" -STARTLINE T "import colorsys, random\nn=nuke.thisNode()\nR,G,B= colorsys.hsv_to_rgb(random.random(),.1+random.random()*.15,.15+random.random()*.15)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ) )"}
    addUserKnob {22 darkgrey l "<font color=\"#232323\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.0, 0.0, 0.14]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 lightgrey l "<font color=\"#383838\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.0, 0.0, 0.22]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 red l "<font color=\"#8c3838\" size=6>■</font>" T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.0, 0.6, 0.55]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n" +STARTLINE}
    addUserKnob {22 orange l "<font color=\"#b28e59\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.1, 0.5, 0.7]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 yellow l "<font color=\"#ccc766\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.16, 0.5, 0.8]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 green l "<font color=\"#5d995b\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.33, 0.4, 0.6]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 cyan l "<font color=\"#72998f\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.46, 0.25, 0.6]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 blue l "<font color=\"#59687f\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.6, 0.3, 0.5]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 darkblue l "<font color=\"#63628c\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.67, 0.3, 0.55]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 magenta l "<font color=\"#927a99\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.8, 0.2, 0.6]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 pink l "<font color=\"#997a89\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.92, 0.2, 0.6]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {26 S02 l " " T " "}
    addUserKnob {26 Ftools l "" +STARTLINE T "<font color=\"#1C1C1C\"> v1.2 - Franklin VFX - 2018"}
   }
   BackdropNode {
    inputs 0
    name BackdropNode2
    knobChanged "try:\n    listenedKnobs = \['text', 'position', 'name']\n    node = nuke.thisNode()\n    name = node.knob('name').value()\n    text = node.knob('text').value()\n    position = node.knob('position').value()\n    position = \"<\" + position + \">\"\n    label = node.knob('label').value()\n    \n    if nuke.thisKnob().name() in listenedKnobs:\n        if text == \"\":\n            if node.knob('position').value() == \"left\":\n                node.knob('label').setValue()\n            else:\n                node.knob('label').setValue(position + name)\n        else:\n            if node.knob('position').value() == \"left\":\n                node.knob('label').setValue(text)\n            else:\n                node.knob('label').setValue(position + text)\n                \n    elif nuke.thisKnob().name() == 'font_size':\n        fontSize = node.knob('font_size').value()\n        node.knob('note_font_size').setValue(fontSize)\nexcept:\n    pass"
    tile_color 0x927a99ff
    note_font_size 50
    xpos -473
    ypos -221
    bdwidth 435
    bdheight 786
    z_order 1
    addUserKnob {20 F_VFX l BackdropNode}
    addUserKnob {43 text l Text}
    addUserKnob {7 font_size l "Font Size" R 10 100}
    font_size 50
    addUserKnob {4 position l "" -STARTLINE M {Left Center}}
    addUserKnob {26 S01 l " " T " "}
    addUserKnob {22 grow l " <img src=\"F_scalep.png\">" -STARTLINE T "n=nuke.thisNode()\n\ndef grow(node=None,step=50):\n    try:\n        if not node:\n            n=nuke.selectedNode()\n        else:\n            n=node\n            n\['xpos'].setValue(n\['xpos'].getValue()-step)\n            n\['ypos'].setValue(n\['ypos'].getValue()-step)\n            n\['bdwidth'].setValue(n\['bdwidth'].getValue()+step*2)\n            n\['bdheight'].setValue(n\['bdheight'].getValue()+step*2)\n    except:\n        pass\ngrow(n,50)"}
    addUserKnob {22 shrink l " <img src=\"F_scalem.png\">" -STARTLINE T "n=nuke.thisNode()\n\ndef shrink(node=None,step=50):\n    try:\n        if not node:\n            n=nuke.selectedNode()\n        else:\n            n=node\n            n\['xpos'].setValue(n\['xpos'].getValue()+step)\n            n\['ypos'].setValue(n\['ypos'].getValue()+step)\n            n\['bdwidth'].setValue(n\['bdwidth'].getValue()-step*2)\n            n\['bdheight'].setValue(n\['bdheight'].getValue()-step*2)\n    except:\n        pass\nshrink(n,50)"}
    addUserKnob {22 colorandom l " <img src=\"ColorBars.png\">" -STARTLINE T "import colorsys, random\nn=nuke.thisNode()\nR,G,B= colorsys.hsv_to_rgb(random.random(),.1+random.random()*.15,.15+random.random()*.15)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ) )"}
    addUserKnob {22 darkgrey l "<font color=\"#232323\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.0, 0.0, 0.14]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 lightgrey l "<font color=\"#383838\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.0, 0.0, 0.22]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 red l "<font color=\"#8c3838\" size=6>■</font>" T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.0, 0.6, 0.55]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n" +STARTLINE}
    addUserKnob {22 orange l "<font color=\"#b28e59\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.1, 0.5, 0.7]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 yellow l "<font color=\"#ccc766\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.16, 0.5, 0.8]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 green l "<font color=\"#5d995b\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.33, 0.4, 0.6]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 cyan l "<font color=\"#72998f\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.46, 0.25, 0.6]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 blue l "<font color=\"#59687f\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.6, 0.3, 0.5]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 darkblue l "<font color=\"#63628c\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.67, 0.3, 0.55]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 magenta l "<font color=\"#927a99\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.8, 0.2, 0.6]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 pink l "<font color=\"#997a89\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.92, 0.2, 0.6]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {26 S02 l " " T " "}
    addUserKnob {26 Ftools l "" +STARTLINE T "<font color=\"#1C1C1C\"> v1.2 - Franklin VFX - 2018"}
   }
   Constant {
    inputs 0
    channels rgb
    name Constant13
    xpos -643
    ypos 714
   }
   AdjBBox {
    numpixels {{size_bbox}}
    name AdjBBox13
    xpos -643
    ypos 849
   }
   Dot {
    name Dot78
    xpos -609
    ypos 987
   }
   Axis3 {
    inputs 0
    useMatrix true
    matrix {
        {{parent.cCard3D_1.matrix} {parent.cCard3D_1.matrix} {parent.cCard3D_1.matrix} {parent.cCard3D_1.matrix}}
        {{parent.cCard3D_1.matrix} {parent.cCard3D_1.matrix} {parent.cCard3D_1.matrix} {parent.cCard3D_1.matrix}}
        {{parent.cCard3D_1.matrix} {parent.cCard3D_1.matrix} {parent.cCard3D_1.matrix} {parent.cCard3D_1.matrix}}
        {{parent.cCard3D_1.matrix} {parent.cCard3D_1.matrix} {parent.cCard3D_1.matrix} {parent.cCard3D_1.matrix}}
      }
    name Axis14
    xpos -203
    ypos -90
   }
set N323d4470 [stack 0]
push 0
   Input {
    inputs 0
    name top
    xpos -283
    ypos -1243
    number 1
   }
   TimeOffset {
    time_offset {{"shot_\[value shotnmbr]==0 ? 0 : shot_\[value shotnmbr]-1"}}
    time ""
    name CTimeOffset1
    label "shot: \[value shotnmbr]\non frame \[value time_offset]"
    xpos -283
    ypos -924
    addUserKnob {20 User}
    addUserKnob {3 shotnmbr l "shot "}
    shotnmbr {{shotcount}}
    addUserKnob {3 ref}
    ref {{time_offset+1}}
   }
   Group {
    name DecimalTimeOffset1
    tile_color 0xafa35dff
    label "random asset"
    note_font "Bitstream Vera Sans Bold"
    xpos -283
    ypos -841
    addUserKnob {20 User}
    addUserKnob {7 decimal l "time offset (decimal)"}
    decimal {{random(shotcount*seed)}}
    addUserKnob {26 ""}
    addUserKnob {26 _1 l "" +STARTLINE T "Chris Fryer | 2020\nupdated by Yorben Otto | 2024"}
   }
    Input {
     inputs 0
     name Input1
     xpos 426
     ypos -793
    }
    TimeOffset {
     time_offset {{(-floor(parent.decimal))*(DecimalTimeOffset1.decimal<0)}}
     time ""
     name TimeOffset1
     xpos 426
     ypos -675
    }
    Dot {
     name Dot6
     xpos 460
     ypos -635
    }
set N32413cd0 [stack 0]
    Dot {
     name Dot5
     xpos 350
     ypos -635
    }
    Dot {
     name Dot7
     xpos 350
     ypos -365
    }
push $N32413cd0
    Dot {
     name Dot1
     xpos 572
     ypos -635
    }
    TimeBlur {
     divisions 2
     shutter {{(parent.decimal-(floor(parent.decimal)))*2}}
     shutteroffset start
     shuttercustomoffset 0
     name TimeBlur1
     xpos 538
     ypos -558
    }
    Dot {
     name Dot2
     xpos 572
     ypos -490
    }
push $N32413cd0
    TimeBlur {
     divisions 2
     shutter {{parent.decimal*2}}
     shutteroffset start
     shuttercustomoffset 0
     name TimeBlur8
     xpos 426
     ypos -556
    }
    Switch {
     inputs 2
     which {{parent.decimal<0}}
     name Switch1
     xpos 426
     ypos -494
    }
    Multiply {
     value {{parent.TimeBlur8.divisions}}
     name Multiply6
     xpos 426
     ypos -436
    }
    Merge2 {
     inputs 2
     operation from
     name Merge6
     xpos 426
     ypos -369
    }
set N32455c10 [stack 0]
    Output {
     name Output1
     xpos 426
     ypos -221
    }
push $N32455c10
push $N32455c10
    Viewer {
     inputs 2
     frame_range 1-100
     name Viewer1
     xpos 675
     ypos -246
    }
   end_group
   NoTimeBlur {
    name NoTimeBlur1
    xpos -283
    ypos -779
   }
   Transform {
    scale {{0.05+(0.05*(((parent.DecimalTimeOffset13.decimal-0.5)*2)*ScaleVariationSmoke))}}
    center {{root.width/2 x1015 2304} {root.height/2}}
    shutteroffset centred
    name Transform44
    xpos -283
    ypos -152
   }
   Card3D {
    inputs 3
    rot_order ZYX
    translate {0 0 0}
    rotate {90 0 0}
    shutteroffset centred
    name cCard3D25
    tile_color 0x7b1d1dff
    xpos -283
    ypos 11
    addUserKnob {20 User l parent}
    addUserKnob {22 python_button l "set parent" t "select parent node, and press this button to set the selected node as parent" +INVISIBLE T "n = nuke.selectedNode()\['name'].getValue()\nnuke.thisNode()\['string'].setValue(n)" +STARTLINE}
    addUserKnob {1 string l parent +INVISIBLE}
    string null
    addUserKnob {3 ref l "ref frame"}
    ref 1015
   }
   Transform {
    translate {{"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].translate.x(ref)\}]"} {"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].translate.y(ref)\}]"}}
    rotate {{"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].rotate-\[value parent_gun].rotate(ref)\}]"}}
    scale {{"\[if \{\[value parent_gun]==\"null\"\} \{return 1\} \{return 1+(\[value parent_gun].scale-\[value parent_gun].scale(ref))\}]"}}
    center {{"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].center.x(ref)\}]"} {"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].center.y(ref)\}]"}}
    name Transform_GUNMatchMove37
    xpos -283
    ypos 126
    addUserKnob {20 User l parent}
    addUserKnob {3 ref}
    ref {{parent.CTimeOffset.ref}}
   }
   Transform {
    translate {{"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].translate.x-\[value parent_env].translate.x(ref)\}]"} {"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].translate.y-\[value parent_env].translate.y(ref)\}]"}}
    rotate {{"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].rotate-\[value parent_env].rotate(ref)\}]"}}
    scale {{"\[if \{\[value parent_gun]==\"null\"\} \{return 1\} \{return 1+(\[value parent_env].scale-\[value parent_env].scale(ref))\}]"}}
    center {{"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].center.x(ref)\}]"} {"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].center.y(ref)\}]"}}
    motionblur 0.2
    shutter {{SmokeMB*0.5}}
    shutteroffset centred
    name Transform_ENVMatchMove37
    label "\n"
    xpos -283
    ypos 255
    addUserKnob {20 User l parent}
    addUserKnob {3 ref}
    ref {{parent.CTimeOffset.ref}}
   }
   Transform {
    translate {{"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return -((root.width/2)-(\[value parent_gun].center.x(1)+\[value parent_gun].translate.x(1)))\}]"} {"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return -((root.height/2)-(\[value parent_gun].center.y(1)+\[value parent_gun].translate.y(1)))\}]"}}
    name Transform_GUNMatchMove6
    label "alignment correction"
    xpos -283
    ypos 344
    addUserKnob {20 User l parent}
    addUserKnob {22 python_button l "set parent" t "select parent node, and press this button to set the selected node as parent" T "n = nuke.selectedNode()\['name'].getValue()\nnuke.thisNode()\['string'].setValue(n)" +STARTLINE}
    addUserKnob {1 string l parent}
    string Transform_MatchMove10
    addUserKnob {3 ref +INVISIBLE}
    ref {{parent.cCard3D_8.ref}}
   }
   Multiply {
    value {{math_matrix.result_y_smoke(parent.CTimeOffset.ref)}}
    name Angle_reveal_top1
    label TOP
    xpos -283
    ypos 403
   }
   Remove {
    operation keep
    channels rgb
    name Remove1
    xpos -283
    ypos 514
   }
push 0
   Switch {
    inputs 2
    which {{parent.Angle_reveal_top1.value>0.001}}
    name Switch1
    xpos -283
    ypos 660
   }
   Dot {
    name Dot82
    xpos -249
    ypos 705
   }
push 0
push $N323d4470
push 0
   Input {
    inputs 0
    name front
    xpos -436
    ypos -1243
    number 2
   }
   TimeOffset {
    time_offset {{"shot_\[value shotnmbr]==0 ? 0 : shot_\[value shotnmbr]-1"}}
    time ""
    name CTimeOffset2
    label "shot: \[value shotnmbr]\non frame \[value time_offset]"
    xpos -436
    ypos -925
    addUserKnob {20 User}
    addUserKnob {3 shotnmbr l "shot "}
    shotnmbr {{shotcount}}
    addUserKnob {3 ref}
    ref {{time_offset+1}}
   }
   Group {
    name DecimalTimeOffset2
    tile_color 0xafa35dff
    label "random asset"
    note_font "Bitstream Vera Sans Bold"
    xpos -436
    ypos -842
    addUserKnob {20 User}
    addUserKnob {7 decimal l "time offset (decimal)"}
    decimal {{random(shotcount*seed)}}
    addUserKnob {26 ""}
    addUserKnob {26 _1 l "" +STARTLINE T "Chris Fryer | 2020\nupdated by Yorben Otto | 2024"}
   }
    Input {
     inputs 0
     name Input1
     xpos 426
     ypos -793
    }
    TimeOffset {
     time_offset {{(-floor(parent.decimal))*(DecimalTimeOffset2.decimal<0)}}
     time ""
     name TimeOffset1
     xpos 426
     ypos -675
    }
    Dot {
     name Dot6
     xpos 460
     ypos -635
    }
set N5d339700 [stack 0]
    Dot {
     name Dot5
     xpos 350
     ypos -635
    }
    Dot {
     name Dot7
     xpos 350
     ypos -365
    }
push $N5d339700
    Dot {
     name Dot1
     xpos 572
     ypos -635
    }
    TimeBlur {
     divisions 2
     shutter {{(parent.decimal-(floor(parent.decimal)))*2}}
     shutteroffset start
     shuttercustomoffset 0
     name TimeBlur1
     xpos 538
     ypos -558
    }
    Dot {
     name Dot2
     xpos 572
     ypos -490
    }
push $N5d339700
    TimeBlur {
     divisions 2
     shutter {{parent.decimal*2}}
     shutteroffset start
     shuttercustomoffset 0
     name TimeBlur8
     xpos 426
     ypos -556
    }
    Switch {
     inputs 2
     which {{parent.decimal<0}}
     name Switch1
     xpos 426
     ypos -494
    }
    Multiply {
     value {{parent.TimeBlur8.divisions}}
     name Multiply6
     xpos 426
     ypos -436
    }
    Merge2 {
     inputs 2
     operation from
     name Merge6
     xpos 426
     ypos -369
    }
set N5d37b640 [stack 0]
    Output {
     name Output1
     xpos 426
     ypos -221
    }
push $N5d37b640
push $N5d37b640
    Viewer {
     inputs 2
     frame_range 1-100
     name Viewer1
     xpos 675
     ypos -246
    }
   end_group
   NoTimeBlur {
    name NoTimeBlur5
    xpos -436
    ypos -780
   }
   Transform {
    scale {{0.05+(0.05*(((parent.DecimalTimeOffset13.decimal-0.5)*2)*ScaleVariationSmoke))}}
    center {{root.width/2 x1015 2304} {root.height/2}}
    shutteroffset centred
    name Transform45
    xpos -436
    ypos -151
   }
   Card3D {
    inputs 3
    rot_order ZYX
    translate {0 0 0}
    rotate {0 90 0}
    shutteroffset centred
    name cCard3D26
    tile_color 0x7b1d1dff
    xpos -436
    ypos 15
    addUserKnob {20 User l parent}
    addUserKnob {22 python_button l "set parent" t "select parent node, and press this button to set the selected node as parent" +INVISIBLE T "n = nuke.selectedNode()\['name'].getValue()\nnuke.thisNode()\['string'].setValue(n)" +STARTLINE}
    addUserKnob {1 string l parent +INVISIBLE}
    string null
    addUserKnob {3 ref l "ref frame"}
    ref 1015
   }
   Transform {
    translate {{"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].translate.x(ref)\}]"} {"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].translate.y(ref)\}]"}}
    rotate {{"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].rotate-\[value parent_gun].rotate(ref)\}]"}}
    scale {{"\[if \{\[value parent_gun]==\"null\"\} \{return 1\} \{return 1+(\[value parent_gun].scale-\[value parent_gun].scale(ref))\}]"}}
    center {{"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].center.x(ref)\}]"} {"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].center.y(ref)\}]"}}
    name Transform_GUNMatchMove38
    label "\n"
    xpos -436
    ypos 124
    addUserKnob {20 User l parent}
    addUserKnob {3 ref}
    ref {{parent.CTimeOffset.ref}}
   }
   Transform {
    translate {{"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].translate.x-\[value parent_env].translate.x(ref)\}]"} {"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].translate.y-\[value parent_env].translate.y(ref)\}]"}}
    rotate {{"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].rotate-\[value parent_env].rotate(ref)\}]"}}
    scale {{"\[if \{\[value parent_gun]==\"null\"\} \{return 1\} \{return 1+(\[value parent_env].scale-\[value parent_env].scale(ref))\}]"}}
    center {{"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].center.x(ref)\}]"} {"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].center.y(ref)\}]"}}
    motionblur 0.2
    shutter {{SmokeMB*0.5}}
    shutteroffset centred
    name Transform_ENVMatchMove38
    xpos -436
    ypos 254
    addUserKnob {20 User l parent}
    addUserKnob {3 ref}
    ref {{parent.CTimeOffset.ref}}
   }
   Transform {
    translate {{"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return -((root.width/2)-(\[value parent_gun].center.x(1)+\[value parent_gun].translate.x(1)))\}]"} {"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return -((root.height/2)-(\[value parent_gun].center.y(1)+\[value parent_gun].translate.y(1)))\}]"}}
    name Transform_GUNMatchMove7
    label "alignment correction"
    xpos -436
    ypos 343
    addUserKnob {20 User l parent}
    addUserKnob {22 python_button l "set parent" t "select parent node, and press this button to set the selected node as parent" T "n = nuke.selectedNode()\['name'].getValue()\nnuke.thisNode()\['string'].setValue(n)" +STARTLINE}
    addUserKnob {1 string l parent}
    string Transform_MatchMove10
    addUserKnob {3 ref +INVISIBLE}
    ref {{parent.cCard3D_8.ref}}
   }
   Multiply {
    value {{math_matrix.result_x_smoke(parent.CTimeOffset.ref)}}
    name Angle_reveal_front1
    label FRONT
    xpos -436
    ypos 401
   }
   Remove {
    operation keep
    channels rgb
    name Remove2
    xpos -436
    ypos 511
   }
push 0
   Switch {
    inputs 2
    which {{parent.Angle_reveal_front1.value>0.001}}
    name Switch2
    xpos -436
    ypos 660
   }
   Dot {
    name Dot83
    xpos -402
    ypos 735
   }
   Input {
    inputs 0
    name side
    xpos -130
    ypos -1242
   }
   TimeOffset {
    time_offset {{"shot_\[value shotnmbr]==0 ? 0 : shot_\[value shotnmbr]-1"}}
    time ""
    name CTimeOffset
    label "shot: \[value shotnmbr]\non frame \[value time_offset]"
    xpos -130
    ypos -927
    addUserKnob {20 User}
    addUserKnob {3 shotnmbr l "shot "}
    shotnmbr {{shotcount}}
    addUserKnob {3 ref}
    ref {{time_offset+1}}
   }
   Group {
    name DecimalTimeOffset13
    tile_color 0xafa35dff
    label "random asset"
    note_font "Bitstream Vera Sans Bold"
    xpos -130
    ypos -844
    addUserKnob {20 User}
    addUserKnob {7 decimal l "time offset (decimal)"}
    decimal {{random(shotcount*seed)}}
    addUserKnob {26 ""}
    addUserKnob {26 _1 l "" +STARTLINE T "Chris Fryer | 2020\nupdated by Yorben Otto | 2024"}
   }
    Input {
     inputs 0
     name Input1
     xpos 426
     ypos -793
    }
    TimeOffset {
     time_offset {{(-floor(parent.decimal))*(DecimalTimeOffset13.decimal<0)}}
     time ""
     name TimeOffset1
     xpos 426
     ypos -675
    }
    Dot {
     name Dot6
     xpos 460
     ypos -635
    }
set N4abc73f0 [stack 0]
    Dot {
     name Dot5
     xpos 350
     ypos -635
    }
    Dot {
     name Dot7
     xpos 350
     ypos -365
    }
push $N4abc73f0
    Dot {
     name Dot1
     xpos 572
     ypos -635
    }
    TimeBlur {
     divisions 2
     shutter {{(parent.decimal-(floor(parent.decimal)))*2}}
     shutteroffset start
     shuttercustomoffset 0
     name TimeBlur1
     xpos 538
     ypos -558
    }
    Dot {
     name Dot2
     xpos 572
     ypos -490
    }
push $N4abc73f0
    TimeBlur {
     divisions 2
     shutter {{parent.decimal*2}}
     shutteroffset start
     shuttercustomoffset 0
     name TimeBlur8
     xpos 426
     ypos -556
    }
    Switch {
     inputs 2
     which {{parent.decimal<0}}
     name Switch1
     xpos 426
     ypos -494
    }
    Multiply {
     value {{parent.TimeBlur8.divisions}}
     name Multiply6
     xpos 426
     ypos -436
    }
    Merge2 {
     inputs 2
     operation from
     name Merge6
     xpos 426
     ypos -369
    }
set N5c319080 [stack 0]
    Output {
     name Output1
     xpos 426
     ypos -221
    }
push $N5c319080
push $N5c319080
    Viewer {
     inputs 2
     frame_range 1-100
     name Viewer1
     xpos 675
     ypos -246
    }
   end_group
   NoTimeBlur {
    name NoTimeBlur13
    xpos -130
    ypos -782
   }
   Transform {
    scale {{0.05+(0.05*(((parent.DecimalTimeOffset13.decimal-0.5)*2)*ScaleVariationSmoke))}}
    center {{root.width/2 x1015 2304} {root.height/2}}
    shutteroffset centred
    name Transform46
    xpos -130
    ypos -155
   }
   Card3D {
    translate {{"\[if \{\[exists  parent.parent.parent.input0]\} \{return \[value \[topnode parent.parent.parent.input0].name].translate.x(ref)\} \{return 0\}]"} {"\[if \{\[exists  parent.parent.parent.input0]\} \{return \[value \[topnode parent.parent.parent.input0].name].translate.y(ref)\} \{return 0\}]"} {"\[if \{\[exists  parent.parent.parent.input0]\} \{return \[value \[topnode parent.parent.parent.input0].name].translate.z(ref)\} \{return -1\}]"}}
    rotate {{"\[if \{\[exists  parent.parent.parent.input0]\} \{return \[value \[topnode parent.parent.parent.input0].name].rotate.x(ref)\} \{return 0\}]"} {"\[if \{\[exists  parent.parent.parent.input0]\} \{return \[value \[topnode parent.parent.parent.input0].name].rotate.y(ref)\} \{return 0\}]"} {"\[if \{\[exists  parent.parent.parent.input0]\} \{return \[value \[topnode parent.parent.parent.input0].name].rotate.z(ref)\} \{return 0\}]"}}
    scaling {{"\[if \{\[exists  parent.parent.parent.input0]\} \{return \[value \[topnode parent.parent.parent.input0].name].scaling.x(ref)\} \{return 1\}]"} {"\[if \{\[exists  parent.parent.parent.input0]\} \{return \[value \[topnode parent.parent.parent.input0].name].scaling.y(ref)\} \{return 1\}]"} {"\[if \{\[exists  parent.parent.parent.input0]\} \{return \[value \[topnode parent.parent.parent.input0].name].scaling.z(ref)\} \{return 1\}]"}}
    uniform_scale {{"\[if \{\[exists  parent.parent.parent.input0]\} \{return (\[value \[topnode parent.parent.parent.input0].name].uniform_scale(ref)*25)\} \{return 25\}]"}}
    shutteroffset centred
    name cCard3D_1
    tile_color 0x7b1d1dff
    label "ref frame: \[value ref]"
    xpos -130
    ypos 2
    addUserKnob {20 User l parent}
    addUserKnob {22 python_button l "set parent" t "select parent node, and press this button to set the selected node as parent" +INVISIBLE T "n = nuke.selectedNode()\['name'].getValue()\nnuke.thisNode()\['string'].setValue(n)" +STARTLINE}
    addUserKnob {1 string l parent +INVISIBLE}
    string null
    addUserKnob {3 id l "id number"}
    id {{parent.CTimeOffset.shotnmbr}}
    addUserKnob {3 ref l "ref frame"}
    ref {{parent.CTimeOffset.ref}}
   }
   Transform {
    translate {{"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].translate.x(ref)\}]"} {"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].translate.y(ref)\}]"}}
    rotate {{"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].rotate-\[value parent_gun].rotate(ref)\}]"}}
    scale {{"\[if \{\[value parent_gun]==\"null\"\} \{return 1\} \{return 1+(\[value parent_gun].scale-\[value parent_gun].scale(ref))\}]"}}
    center {{"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].center.x(ref)\}]"} {"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].center.y(ref)\}]"}}
    name Transform_GUNMatchMove39
    label "\n"
    xpos -130
    ypos 124
    addUserKnob {20 User l parent}
    addUserKnob {3 ref}
    ref {{parent.CTimeOffset.ref}}
   }
   Transform {
    translate {{"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].translate.x-\[value parent_env].translate.x(ref)\}]"} {"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].translate.y-\[value parent_env].translate.y(ref)\}]"}}
    rotate {{"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].rotate-\[value parent_env].rotate(ref)\}]"}}
    scale {{"\[if \{\[value parent_gun]==\"null\"\} \{return 1\} \{return 1+(\[value parent_env].scale-\[value parent_env].scale(ref))\}]"}}
    center {{"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].center.x(ref)\}]"} {"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].center.y(ref)\}]"}}
    motionblur 0.2
    shutter {{SmokeMB*0.5}}
    shutteroffset centred
    name Transform_ENVMatchMove39
    xpos -130
    ypos 258
    addUserKnob {20 User l parent}
    addUserKnob {3 ref}
    ref {{parent.CTimeOffset.ref}}
   }
   Transform {
    translate {{"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return -((root.width/2)-(\[value parent_gun].center.x(1)+\[value parent_gun].translate.x(1)))\}]"} {"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return -((root.height/2)-(\[value parent_gun].center.y(1)+\[value parent_gun].translate.y(1)))\}]"}}
    name Transform_GUNMatchMove5
    label "alignment correction"
    xpos -130
    ypos 340
    addUserKnob {20 User l parent}
    addUserKnob {22 python_button l "set parent" t "select parent node, and press this button to set the selected node as parent" T "n = nuke.selectedNode()\['name'].getValue()\nnuke.thisNode()\['string'].setValue(n)" +STARTLINE}
    addUserKnob {1 string l parent}
    string Transform_MatchMove10
    addUserKnob {3 ref +INVISIBLE}
    ref {{parent.cCard3D_8.ref}}
   }
   Multiply {
    value {{math_matrix.result_z_smoke(parent.CTimeOffset.ref)}}
    name Angle_reveal_side1
    label SIDE
    xpos -130
    ypos 404
   }
   Remove {
    operation keep
    channels rgb
    name Remove39
    xpos -130
    ypos 514
   }
push 0
   Switch {
    inputs 2
    which {{parent.Angle_reveal_side1.value>0.001}}
    name Switch3
    xpos -130
    ypos 658
   }
   Merge2 {
    inputs 3+1
    operation max
    Achannels rgb
    Bchannels rgb
    output rgb
    name Merge28
    xpos -130
    ypos 731
   }
   Merge2 {
    inputs 2
    operation plus
    bbox intersection
    Achannels rgb
    Bchannels rgb
    output rgb
    name Merge29
    xpos -130
    ypos 983
   }
   Shuffle2 {
    fromInput1 {{0} B}
    fromInput2 {{0} B}
    mappings "4 rgba.red 0 0 rgba.red 0 0 rgba.green 0 1 rgba.green 0 1 rgba.blue 0 2 rgba.alpha 0 3 rgba.blue 0 2 rgba.blue 0 2"
    name Shuffle1
    xpos -130
    ypos 1021
   }
push 0
   Switch {
    inputs 2
    which {{"shot_\[value count]==0?0:frame>=shot_\[value count]"}}
    name cSwitch_13
    xpos -130
    ypos 1078
    addUserKnob {20 User}
    addUserKnob {3 count}
    count {{parent.CTimeOffset.shotnmbr}}
   }
   Output {
    name Output1
    xpos -130
    ypos 1323
   }
   StickyNote {
    inputs 0
    name StickyNote1
    label "<-- handy to break concatonation?  "
    xpos -39
    ypos 193
   }
  end_group
push $N586971d0
  PostageStamp {
   name Stamp58
   help "Stamps by Adrian Pueyo and Alexey Kuchinski.\nUpdated May 18 2021"
   onCreate "if nuke.GUI:\n    try:\n        import stamps; stamps.wiredOnCreate()\n    except:\n        pass\n"
   knobChanged "import stamps; stamps.wiredKnobChanged()"
   autolabel "nuke.thisNode().knob(\"title\").value()"
   tile_color 0x1000001
   note_font "Bitstream Vera Sans"
   note_font_size 20
   xpos 6922
   ypos -718
   hide_input true
   addUserKnob {20 wired_tab l "Wired Stamp"}
   addUserKnob {26 identifier -STARTLINE +HIDDEN T wired}
   addUserKnob {3 lockCallbacks l "" +STARTLINE +HIDDEN}
   addUserKnob {6 toReconnect -STARTLINE +HIDDEN}
   addUserKnob {1 title l Title: t "Displayed name on the Node Graph for this Stamp and its Anchor.\nIMPORTANT: This is only for display purposes, and is different from the real/internal name of the Stamps."}
   title smoke_FRONT
   addUserKnob {26 prev_title l "" +STARTLINE +HIDDEN T smoke_FRONT}
   addUserKnob {26 tags l Tags: t "Tags of this stamp's Anchor, for information purpose only.\nClick \"show anchor\" to change them." T <i>2D</i>}
   addUserKnob {26 backdrops l Backdrops: t "Labels of backdrop nodes which contain this stamp's Anchor." T "<i><Left>before or after Flare</i>"}
   addUserKnob {26 line1 l "" +STARTLINE}
   addUserKnob {6 postageStamp_show l "postage stamp" t "Enable the postage stamp thumbnail in this node.\nYou're seeing this because the class of this node includes the postage_stamp knob." +STARTLINE}
   addUserKnob {26 anchor_label l Anchor: T " "}
   addUserKnob {22 show_anchor l " show anchor " t "Show the properties panel for this Stamp's Anchor." -STARTLINE T stamps.wiredShowAnchor()}
   addUserKnob {22 zoom_anchor l "zoom anchor" t "Navigate to this Stamp's Anchor on the Node Graph." -STARTLINE T stamps.wiredZoomAnchor()}
   addUserKnob {26 stamps_label l Stamps: T " "}
   addUserKnob {22 zoomNext l " zoom next " t "Navigate to this Stamp's next sibling on the Node Graph." -STARTLINE T stamps.wiredZoomNext()}
   addUserKnob {22 selectSimilar l " select similar " t "Select all similar Stamps to this one on the Node Graph." -STARTLINE T stamps.wiredSelectSimilar()}
   addUserKnob {26 space_1 l "" +STARTLINE T " "}
   addUserKnob {26 reconnect_label l Reconnect: t "Reconnect by the stored Anchor name." T " "}
   addUserKnob {22 reconnect_this l this t "Reconnect this Stamp to its Anchor, by its stored Anchor name." -STARTLINE T "n = nuke.thisNode()\ntry:\n    n.setInput(0,nuke.toNode(n.knob(\"anchor\").value()))\nexcept:\n    nuke.message(\"Unable to reconnect.\")\ntry:\n    import stamps\n    stamps.wiredGetStyle(n)\nexcept:\n    pass\n"}
   addUserKnob {22 reconnect_similar l similar t "Reconnect this Stamp and similar ones to their Anchor, by their stored anchor name." -STARTLINE T stamps.wiredReconnectSimilar()}
   addUserKnob {22 reconnect_all l all t "Reconnect all the Stamps to their Anchors, by their stored anchor names." -STARTLINE T stamps.wiredReconnectAll()}
   addUserKnob {26 space_2 l "" +STARTLINE T " "}
   addUserKnob {20 advanced_reconnection l "Advanced Reconnection" n 2}
   addUserKnob {26 reconnect_by_title_label l "<font color=gold>By Title:" t "Reconnect by searching for a matching title." T " "}
   addUserKnob {22 reconnect_by_title_this l this t "Look for an Anchor that shares this Stamp's title, and connect this Stamp to it.\nIMPORTANT: Use this carefully, and only when the normal reconnection doesn't work." -STARTLINE T stamps.wiredReconnectByTitle()}
   addUserKnob {22 reconnect_by_title_similar l similar t "Look for an Anchor that shares this Stamp's title, and connect this Stamp and similar ones to it.\nIMPORTANT: Use this carefully, and only when the normal reconnection doesn't work." -STARTLINE T stamps.wiredReconnectByTitleSimilar()}
   addUserKnob {22 reconnect_by_title_selected l selected t "For each Stamp selected, look for an Anchor that shares its title, and connect to it.\nIMPORTANT: Use this carefully, and only when the normal reconnection doesn't work." -STARTLINE T stamps.wiredReconnectByTitleSelected()}
   addUserKnob {26 reconnect_by_selection_label l "<font color=orangered>By Selection:" t "Force reconnect to a selected Anchor." T " "}
   addUserKnob {22 reconnect_by_selection_this l this t "Force reconnect this Stamp to a selected Anchor, whatever its name or title.\nIMPORTANT: Use this carefully, and only when the normal reconnection doesn't work." -STARTLINE T stamps.wiredReconnectBySelection()}
   addUserKnob {22 reconnect_by_selection_similar l similar t "Force reconnect this Stamp and similar ones to a selected Anchor, whatever its name or title.\nIMPORTANT: Use this carefully, and only when the normal reconnection doesn't work." -STARTLINE T stamps.wiredReconnectBySelectionSimilar()}
   addUserKnob {22 reconnect_by_selection_selected l selected t "Force reconnect all selected Stamps to an also selected Anchor, whatever its name or title.\nIMPORTANT: Use this carefully, and only when the normal reconnection doesn't work." -STARTLINE T stamps.wiredReconnectBySelectionSelected()}
   addUserKnob {1 anchor l Anchor}
   anchor Anchor_220a2be282
   addUserKnob {6 auto_reconnect_by_title l "<font color=#ED9977>&nbsp; auto-reconnect by title" t "When creating this stamp again (like on copy-paste), auto-reconnect it by title instead of doing it by the saved anchor's name, and auto-turn this off immediately.\nIMPORTANT: Should be off by default. Only use this for setting up templates." +STARTLINE}
   addUserKnob {26 line2 l "" +STARTLINE}
   addUserKnob {22 buttonHelp l Help -STARTLINE T stamps.showHelp()}
   addUserKnob {26 version l " " t "Stamps by Adrian Pueyo and Alexey Kuchinski.\nUpdated May 18 2021." -STARTLINE T "<a href=\"http://www.nukepedia.com/gizmos/other/stamps\" style=\"color:#666;text-decoration: none;\"><span style=\"color:#666\"> <big>Stamps v1.1</big></b></a>"}
  }
  Dot {
   name Dot39
   xpos 6956
   ypos -670
  }
push $N58d70c10
  PostageStamp {
   name Stamp59
   help "Stamps by Adrian Pueyo and Alexey Kuchinski.\nUpdated May 18 2021"
   onCreate "if nuke.GUI:\n    try:\n        import stamps; stamps.wiredOnCreate()\n    except:\n        pass\n"
   knobChanged "import stamps; stamps.wiredKnobChanged()"
   autolabel "nuke.thisNode().knob(\"title\").value()"
   tile_color 0x1000001
   note_font "Bitstream Vera Sans"
   note_font_size 20
   xpos 7047
   ypos -718
   hide_input true
   addUserKnob {20 wired_tab l "Wired Stamp"}
   addUserKnob {26 identifier -STARTLINE +HIDDEN T wired}
   addUserKnob {3 lockCallbacks l "" +STARTLINE +HIDDEN}
   addUserKnob {6 toReconnect -STARTLINE +HIDDEN}
   addUserKnob {1 title l Title: t "Displayed name on the Node Graph for this Stamp and its Anchor.\nIMPORTANT: This is only for display purposes, and is different from the real/internal name of the Stamps."}
   title smoke_TOP
   addUserKnob {26 prev_title l "" +STARTLINE +HIDDEN T smoke_TOP}
   addUserKnob {26 tags l Tags: t "Tags of this stamp's Anchor, for information purpose only.\nClick \"show anchor\" to change them." T <i>2D</i>}
   addUserKnob {26 backdrops l Backdrops: t "Labels of backdrop nodes which contain this stamp's Anchor." T "<i><Left>before or after Flare</i>"}
   addUserKnob {26 line1 l "" +STARTLINE}
   addUserKnob {6 postageStamp_show l "postage stamp" t "Enable the postage stamp thumbnail in this node.\nYou're seeing this because the class of this node includes the postage_stamp knob." +STARTLINE}
   addUserKnob {26 anchor_label l Anchor: T " "}
   addUserKnob {22 show_anchor l " show anchor " t "Show the properties panel for this Stamp's Anchor." -STARTLINE T stamps.wiredShowAnchor()}
   addUserKnob {22 zoom_anchor l "zoom anchor" t "Navigate to this Stamp's Anchor on the Node Graph." -STARTLINE T stamps.wiredZoomAnchor()}
   addUserKnob {26 stamps_label l Stamps: T " "}
   addUserKnob {22 zoomNext l " zoom next " t "Navigate to this Stamp's next sibling on the Node Graph." -STARTLINE T stamps.wiredZoomNext()}
   addUserKnob {22 selectSimilar l " select similar " t "Select all similar Stamps to this one on the Node Graph." -STARTLINE T stamps.wiredSelectSimilar()}
   addUserKnob {26 space_1 l "" +STARTLINE T " "}
   addUserKnob {26 reconnect_label l Reconnect: t "Reconnect by the stored Anchor name." T " "}
   addUserKnob {22 reconnect_this l this t "Reconnect this Stamp to its Anchor, by its stored Anchor name." -STARTLINE T "n = nuke.thisNode()\ntry:\n    n.setInput(0,nuke.toNode(n.knob(\"anchor\").value()))\nexcept:\n    nuke.message(\"Unable to reconnect.\")\ntry:\n    import stamps\n    stamps.wiredGetStyle(n)\nexcept:\n    pass\n"}
   addUserKnob {22 reconnect_similar l similar t "Reconnect this Stamp and similar ones to their Anchor, by their stored anchor name." -STARTLINE T stamps.wiredReconnectSimilar()}
   addUserKnob {22 reconnect_all l all t "Reconnect all the Stamps to their Anchors, by their stored anchor names." -STARTLINE T stamps.wiredReconnectAll()}
   addUserKnob {26 space_2 l "" +STARTLINE T " "}
   addUserKnob {20 advanced_reconnection l "Advanced Reconnection" n 2}
   addUserKnob {26 reconnect_by_title_label l "<font color=gold>By Title:" t "Reconnect by searching for a matching title." T " "}
   addUserKnob {22 reconnect_by_title_this l this t "Look for an Anchor that shares this Stamp's title, and connect this Stamp to it.\nIMPORTANT: Use this carefully, and only when the normal reconnection doesn't work." -STARTLINE T stamps.wiredReconnectByTitle()}
   addUserKnob {22 reconnect_by_title_similar l similar t "Look for an Anchor that shares this Stamp's title, and connect this Stamp and similar ones to it.\nIMPORTANT: Use this carefully, and only when the normal reconnection doesn't work." -STARTLINE T stamps.wiredReconnectByTitleSimilar()}
   addUserKnob {22 reconnect_by_title_selected l selected t "For each Stamp selected, look for an Anchor that shares its title, and connect to it.\nIMPORTANT: Use this carefully, and only when the normal reconnection doesn't work." -STARTLINE T stamps.wiredReconnectByTitleSelected()}
   addUserKnob {26 reconnect_by_selection_label l "<font color=orangered>By Selection:" t "Force reconnect to a selected Anchor." T " "}
   addUserKnob {22 reconnect_by_selection_this l this t "Force reconnect this Stamp to a selected Anchor, whatever its name or title.\nIMPORTANT: Use this carefully, and only when the normal reconnection doesn't work." -STARTLINE T stamps.wiredReconnectBySelection()}
   addUserKnob {22 reconnect_by_selection_similar l similar t "Force reconnect this Stamp and similar ones to a selected Anchor, whatever its name or title.\nIMPORTANT: Use this carefully, and only when the normal reconnection doesn't work." -STARTLINE T stamps.wiredReconnectBySelectionSimilar()}
   addUserKnob {22 reconnect_by_selection_selected l selected t "Force reconnect all selected Stamps to an also selected Anchor, whatever its name or title.\nIMPORTANT: Use this carefully, and only when the normal reconnection doesn't work." -STARTLINE T stamps.wiredReconnectBySelectionSelected()}
   addUserKnob {1 anchor l Anchor}
   anchor Anchor_25b668170c
   addUserKnob {6 auto_reconnect_by_title l "<font color=#ED9977>&nbsp; auto-reconnect by title" t "When creating this stamp again (like on copy-paste), auto-reconnect it by title instead of doing it by the saved anchor's name, and auto-turn this off immediately.\nIMPORTANT: Should be off by default. Only use this for setting up templates." +STARTLINE}
   addUserKnob {26 line2 l "" +STARTLINE}
   addUserKnob {22 buttonHelp l Help -STARTLINE T stamps.showHelp()}
   addUserKnob {26 version l " " t "Stamps by Adrian Pueyo and Alexey Kuchinski.\nUpdated May 18 2021." -STARTLINE T "<a href=\"http://www.nukepedia.com/gizmos/other/stamps\" style=\"color:#666;text-decoration: none;\"><span style=\"color:#666\"> <big>Stamps v1.1</big></b></a>"}
  }
push $N56244930
  PostageStamp {
   name Stamp60
   help "Stamps by Adrian Pueyo and Alexey Kuchinski.\nUpdated May 18 2021"
   onCreate "if nuke.GUI:\n    try:\n        import stamps; stamps.wiredOnCreate()\n    except:\n        pass\n"
   knobChanged "import stamps; stamps.wiredKnobChanged()"
   autolabel "nuke.thisNode().knob(\"title\").value()"
   tile_color 0x1000001
   note_font "Bitstream Vera Sans"
   note_font_size 20
   xpos 7165
   ypos -720
   hide_input true
   addUserKnob {20 wired_tab l "Wired Stamp"}
   addUserKnob {26 identifier -STARTLINE +HIDDEN T wired}
   addUserKnob {3 lockCallbacks l "" +STARTLINE +HIDDEN}
   addUserKnob {6 toReconnect -STARTLINE +HIDDEN}
   addUserKnob {1 title l Title: t "Displayed name on the Node Graph for this Stamp and its Anchor.\nIMPORTANT: This is only for display purposes, and is different from the real/internal name of the Stamps."}
   title smoke_SIDE
   addUserKnob {26 prev_title l "" +STARTLINE +HIDDEN T smoke_SIDE}
   addUserKnob {26 tags l Tags: t "Tags of this stamp's Anchor, for information purpose only.\nClick \"show anchor\" to change them." T <i>2D</i>}
   addUserKnob {26 backdrops l Backdrops: t "Labels of backdrop nodes which contain this stamp's Anchor." T "<i><Left>before or after Flare</i>"}
   addUserKnob {26 line1 l "" +STARTLINE}
   addUserKnob {6 postageStamp_show l "postage stamp" t "Enable the postage stamp thumbnail in this node.\nYou're seeing this because the class of this node includes the postage_stamp knob." +STARTLINE}
   addUserKnob {26 anchor_label l Anchor: T " "}
   addUserKnob {22 show_anchor l " show anchor " t "Show the properties panel for this Stamp's Anchor." -STARTLINE T stamps.wiredShowAnchor()}
   addUserKnob {22 zoom_anchor l "zoom anchor" t "Navigate to this Stamp's Anchor on the Node Graph." -STARTLINE T stamps.wiredZoomAnchor()}
   addUserKnob {26 stamps_label l Stamps: T " "}
   addUserKnob {22 zoomNext l " zoom next " t "Navigate to this Stamp's next sibling on the Node Graph." -STARTLINE T stamps.wiredZoomNext()}
   addUserKnob {22 selectSimilar l " select similar " t "Select all similar Stamps to this one on the Node Graph." -STARTLINE T stamps.wiredSelectSimilar()}
   addUserKnob {26 space_1 l "" +STARTLINE T " "}
   addUserKnob {26 reconnect_label l Reconnect: t "Reconnect by the stored Anchor name." T " "}
   addUserKnob {22 reconnect_this l this t "Reconnect this Stamp to its Anchor, by its stored Anchor name." -STARTLINE T "n = nuke.thisNode()\ntry:\n    n.setInput(0,nuke.toNode(n.knob(\"anchor\").value()))\nexcept:\n    nuke.message(\"Unable to reconnect.\")\ntry:\n    import stamps\n    stamps.wiredGetStyle(n)\nexcept:\n    pass\n"}
   addUserKnob {22 reconnect_similar l similar t "Reconnect this Stamp and similar ones to their Anchor, by their stored anchor name." -STARTLINE T stamps.wiredReconnectSimilar()}
   addUserKnob {22 reconnect_all l all t "Reconnect all the Stamps to their Anchors, by their stored anchor names." -STARTLINE T stamps.wiredReconnectAll()}
   addUserKnob {26 space_2 l "" +STARTLINE T " "}
   addUserKnob {20 advanced_reconnection l "Advanced Reconnection" n 2}
   addUserKnob {26 reconnect_by_title_label l "<font color=gold>By Title:" t "Reconnect by searching for a matching title." T " "}
   addUserKnob {22 reconnect_by_title_this l this t "Look for an Anchor that shares this Stamp's title, and connect this Stamp to it.\nIMPORTANT: Use this carefully, and only when the normal reconnection doesn't work." -STARTLINE T stamps.wiredReconnectByTitle()}
   addUserKnob {22 reconnect_by_title_similar l similar t "Look for an Anchor that shares this Stamp's title, and connect this Stamp and similar ones to it.\nIMPORTANT: Use this carefully, and only when the normal reconnection doesn't work." -STARTLINE T stamps.wiredReconnectByTitleSimilar()}
   addUserKnob {22 reconnect_by_title_selected l selected t "For each Stamp selected, look for an Anchor that shares its title, and connect to it.\nIMPORTANT: Use this carefully, and only when the normal reconnection doesn't work." -STARTLINE T stamps.wiredReconnectByTitleSelected()}
   addUserKnob {26 reconnect_by_selection_label l "<font color=orangered>By Selection:" t "Force reconnect to a selected Anchor." T " "}
   addUserKnob {22 reconnect_by_selection_this l this t "Force reconnect this Stamp to a selected Anchor, whatever its name or title.\nIMPORTANT: Use this carefully, and only when the normal reconnection doesn't work." -STARTLINE T stamps.wiredReconnectBySelection()}
   addUserKnob {22 reconnect_by_selection_similar l similar t "Force reconnect this Stamp and similar ones to a selected Anchor, whatever its name or title.\nIMPORTANT: Use this carefully, and only when the normal reconnection doesn't work." -STARTLINE T stamps.wiredReconnectBySelectionSimilar()}
   addUserKnob {22 reconnect_by_selection_selected l selected t "Force reconnect all selected Stamps to an also selected Anchor, whatever its name or title.\nIMPORTANT: Use this carefully, and only when the normal reconnection doesn't work." -STARTLINE T stamps.wiredReconnectBySelectionSelected()}
   addUserKnob {1 anchor l Anchor}
   anchor Anchor_232c9aab88
   addUserKnob {6 auto_reconnect_by_title l "<font color=#ED9977>&nbsp; auto-reconnect by title" t "When creating this stamp again (like on copy-paste), auto-reconnect it by title instead of doing it by the saved anchor's name, and auto-turn this off immediately.\nIMPORTANT: Should be off by default. Only use this for setting up templates." +STARTLINE}
   addUserKnob {26 line2 l "" +STARTLINE}
   addUserKnob {22 buttonHelp l Help -STARTLINE T stamps.showHelp()}
   addUserKnob {26 version l " " t "Stamps by Adrian Pueyo and Alexey Kuchinski.\nUpdated May 18 2021." -STARTLINE T "<a href=\"http://www.nukepedia.com/gizmos/other/stamps\" style=\"color:#666;text-decoration: none;\"><span style=\"color:#666\"> <big>Stamps v1.1</big></b></a>"}
  }
  Dot {
   name Dot40
   xpos 7199
   ypos -670
  }
  Group {
   inputs 3
   name gunshot20
   label "shot: \[value shotcount]\non frame: \[value shotstart]\n"
   xpos 7047
   ypos -643
   addUserKnob {20 User}
   addUserKnob {3 shotcount l shot}
   shotcount 20
   addUserKnob {3 shotstart l frame +INVISIBLE}
   shotstart {{"shotcount==0 ? 0 : shot\[value shotcount]-1" i}}
  }
   BackdropNode {
    inputs 0
    name BackdropNode19
    knobChanged "try:\n    listenedKnobs = \['text', 'position', 'name']\n    node = nuke.thisNode()\n    name = node.knob('name').value()\n    text = node.knob('text').value()\n    position = node.knob('position').value()\n    position = \"<\" + position + \">\"\n    label = node.knob('label').value()\n    \n    if nuke.thisKnob().name() in listenedKnobs:\n        if text == \"\":\n            if node.knob('position').value() == \"left\":\n                node.knob('label').setValue()\n            else:\n                node.knob('label').setValue(position + name)\n        else:\n            if node.knob('position').value() == \"left\":\n                node.knob('label').setValue(text)\n            else:\n                node.knob('label').setValue(position + text)\n                \n    elif nuke.thisKnob().name() == 'font_size':\n        fontSize = node.knob('font_size').value()\n        node.knob('note_font_size').setValue(fontSize)\nexcept:\n    pass"
    tile_color 0x232323ff
    label "<Left><h2> Gunshot"
    note_font_size 31.5
    xpos -693
    ypos -554
    bdwidth 876
    bdheight 1682
    addUserKnob {20 F_VFX l BackdropNode}
    addUserKnob {43 text l Text}
    text "<h2> Gunshot"
    addUserKnob {7 font_size l "Font Size" R 10 100}
    font_size 31.5
    addUserKnob {4 position l "" -STARTLINE M {Left Center}}
    addUserKnob {26 S01 l " " T " "}
    addUserKnob {22 grow l " <img src=\"F_scalep.png\">" -STARTLINE T "n=nuke.thisNode()\n\ndef grow(node=None,step=50):\n    try:\n        if not node:\n            n=nuke.selectedNode()\n        else:\n            n=node\n            n\['xpos'].setValue(n\['xpos'].getValue()-step)\n            n\['ypos'].setValue(n\['ypos'].getValue()-step)\n            n\['bdwidth'].setValue(n\['bdwidth'].getValue()+step*2)\n            n\['bdheight'].setValue(n\['bdheight'].getValue()+step*2)\n    except:\n        pass\ngrow(n,50)"}
    addUserKnob {22 shrink l " <img src=\"F_scalem.png\">" -STARTLINE T "n=nuke.thisNode()\n\ndef shrink(node=None,step=50):\n    try:\n        if not node:\n            n=nuke.selectedNode()\n        else:\n            n=node\n            n\['xpos'].setValue(n\['xpos'].getValue()+step)\n            n\['ypos'].setValue(n\['ypos'].getValue()+step)\n            n\['bdwidth'].setValue(n\['bdwidth'].getValue()-step*2)\n            n\['bdheight'].setValue(n\['bdheight'].getValue()-step*2)\n    except:\n        pass\nshrink(n,50)"}
    addUserKnob {22 colorandom l " <img src=\"ColorBars.png\">" -STARTLINE T "import colorsys, random\nn=nuke.thisNode()\nR,G,B= colorsys.hsv_to_rgb(random.random(),.1+random.random()*.15,.15+random.random()*.15)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ) )"}
    addUserKnob {22 darkgrey l "<font color=\"#232323\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.0, 0.0, 0.14]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 lightgrey l "<font color=\"#383838\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.0, 0.0, 0.22]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 red l "<font color=\"#8c3838\" size=6>■</font>" T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.0, 0.6, 0.55]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n" +STARTLINE}
    addUserKnob {22 orange l "<font color=\"#b28e59\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.1, 0.5, 0.7]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 yellow l "<font color=\"#ccc766\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.16, 0.5, 0.8]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 green l "<font color=\"#5d995b\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.33, 0.4, 0.6]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 cyan l "<font color=\"#72998f\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.46, 0.25, 0.6]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 blue l "<font color=\"#59687f\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.6, 0.3, 0.5]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 darkblue l "<font color=\"#63628c\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.67, 0.3, 0.55]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 magenta l "<font color=\"#927a99\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.8, 0.2, 0.6]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 pink l "<font color=\"#997a89\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.92, 0.2, 0.6]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {26 S02 l " " T " "}
    addUserKnob {26 Ftools l "" +STARTLINE T "<font color=\"#1C1C1C\"> v1.2 - Franklin VFX - 2018"}
   }
   BackdropNode {
    inputs 0
    name BackdropNode2
    knobChanged "try:\n    listenedKnobs = \['text', 'position', 'name']\n    node = nuke.thisNode()\n    name = node.knob('name').value()\n    text = node.knob('text').value()\n    position = node.knob('position').value()\n    position = \"<\" + position + \">\"\n    label = node.knob('label').value()\n    \n    if nuke.thisKnob().name() in listenedKnobs:\n        if text == \"\":\n            if node.knob('position').value() == \"left\":\n                node.knob('label').setValue()\n            else:\n                node.knob('label').setValue(position + name)\n        else:\n            if node.knob('position').value() == \"left\":\n                node.knob('label').setValue(text)\n            else:\n                node.knob('label').setValue(position + text)\n                \n    elif nuke.thisKnob().name() == 'font_size':\n        fontSize = node.knob('font_size').value()\n        node.knob('note_font_size').setValue(fontSize)\nexcept:\n    pass"
    tile_color 0x927a99ff
    note_font_size 50
    xpos -473
    ypos -221
    bdwidth 435
    bdheight 786
    z_order 1
    addUserKnob {20 F_VFX l BackdropNode}
    addUserKnob {43 text l Text}
    addUserKnob {7 font_size l "Font Size" R 10 100}
    font_size 50
    addUserKnob {4 position l "" -STARTLINE M {Left Center}}
    addUserKnob {26 S01 l " " T " "}
    addUserKnob {22 grow l " <img src=\"F_scalep.png\">" -STARTLINE T "n=nuke.thisNode()\n\ndef grow(node=None,step=50):\n    try:\n        if not node:\n            n=nuke.selectedNode()\n        else:\n            n=node\n            n\['xpos'].setValue(n\['xpos'].getValue()-step)\n            n\['ypos'].setValue(n\['ypos'].getValue()-step)\n            n\['bdwidth'].setValue(n\['bdwidth'].getValue()+step*2)\n            n\['bdheight'].setValue(n\['bdheight'].getValue()+step*2)\n    except:\n        pass\ngrow(n,50)"}
    addUserKnob {22 shrink l " <img src=\"F_scalem.png\">" -STARTLINE T "n=nuke.thisNode()\n\ndef shrink(node=None,step=50):\n    try:\n        if not node:\n            n=nuke.selectedNode()\n        else:\n            n=node\n            n\['xpos'].setValue(n\['xpos'].getValue()+step)\n            n\['ypos'].setValue(n\['ypos'].getValue()+step)\n            n\['bdwidth'].setValue(n\['bdwidth'].getValue()-step*2)\n            n\['bdheight'].setValue(n\['bdheight'].getValue()-step*2)\n    except:\n        pass\nshrink(n,50)"}
    addUserKnob {22 colorandom l " <img src=\"ColorBars.png\">" -STARTLINE T "import colorsys, random\nn=nuke.thisNode()\nR,G,B= colorsys.hsv_to_rgb(random.random(),.1+random.random()*.15,.15+random.random()*.15)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ) )"}
    addUserKnob {22 darkgrey l "<font color=\"#232323\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.0, 0.0, 0.14]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 lightgrey l "<font color=\"#383838\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.0, 0.0, 0.22]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 red l "<font color=\"#8c3838\" size=6>■</font>" T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.0, 0.6, 0.55]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n" +STARTLINE}
    addUserKnob {22 orange l "<font color=\"#b28e59\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.1, 0.5, 0.7]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 yellow l "<font color=\"#ccc766\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.16, 0.5, 0.8]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 green l "<font color=\"#5d995b\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.33, 0.4, 0.6]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 cyan l "<font color=\"#72998f\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.46, 0.25, 0.6]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 blue l "<font color=\"#59687f\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.6, 0.3, 0.5]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 darkblue l "<font color=\"#63628c\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.67, 0.3, 0.55]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 magenta l "<font color=\"#927a99\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.8, 0.2, 0.6]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 pink l "<font color=\"#997a89\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.92, 0.2, 0.6]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {26 S02 l " " T " "}
    addUserKnob {26 Ftools l "" +STARTLINE T "<font color=\"#1C1C1C\"> v1.2 - Franklin VFX - 2018"}
   }
   Constant {
    inputs 0
    channels rgb
    name Constant13
    xpos -643
    ypos 714
   }
   AdjBBox {
    numpixels {{size_bbox}}
    name AdjBBox13
    xpos -643
    ypos 849
   }
   Dot {
    name Dot78
    xpos -609
    ypos 987
   }
   Axis3 {
    inputs 0
    useMatrix true
    matrix {
        {{parent.cCard3D_1.matrix} {parent.cCard3D_1.matrix} {parent.cCard3D_1.matrix} {parent.cCard3D_1.matrix}}
        {{parent.cCard3D_1.matrix} {parent.cCard3D_1.matrix} {parent.cCard3D_1.matrix} {parent.cCard3D_1.matrix}}
        {{parent.cCard3D_1.matrix} {parent.cCard3D_1.matrix} {parent.cCard3D_1.matrix} {parent.cCard3D_1.matrix}}
        {{parent.cCard3D_1.matrix} {parent.cCard3D_1.matrix} {parent.cCard3D_1.matrix} {parent.cCard3D_1.matrix}}
      }
    name Axis14
    xpos -203
    ypos -90
   }
set N567e3f30 [stack 0]
push 0
   Input {
    inputs 0
    name top
    xpos -283
    ypos -1243
    number 1
   }
   TimeOffset {
    time_offset {{"shot_\[value shotnmbr]==0 ? 0 : shot_\[value shotnmbr]-1"}}
    time ""
    name CTimeOffset1
    label "shot: \[value shotnmbr]\non frame \[value time_offset]"
    xpos -283
    ypos -924
    addUserKnob {20 User}
    addUserKnob {3 shotnmbr l "shot "}
    shotnmbr {{shotcount}}
    addUserKnob {3 ref}
    ref {{time_offset+1}}
   }
   Group {
    name DecimalTimeOffset1
    tile_color 0xafa35dff
    label "random asset"
    note_font "Bitstream Vera Sans Bold"
    xpos -283
    ypos -841
    addUserKnob {20 User}
    addUserKnob {7 decimal l "time offset (decimal)"}
    decimal {{random(shotcount*seed)}}
    addUserKnob {26 ""}
    addUserKnob {26 _1 l "" +STARTLINE T "Chris Fryer | 2020\nupdated by Yorben Otto | 2024"}
   }
    Input {
     inputs 0
     name Input1
     xpos 426
     ypos -793
    }
    TimeOffset {
     time_offset {{(-floor(parent.decimal))*(DecimalTimeOffset1.decimal<0)}}
     time ""
     name TimeOffset1
     xpos 426
     ypos -675
    }
    Dot {
     name Dot6
     xpos 460
     ypos -635
    }
set N56d334d0 [stack 0]
    Dot {
     name Dot5
     xpos 350
     ypos -635
    }
    Dot {
     name Dot7
     xpos 350
     ypos -365
    }
push $N56d334d0
    Dot {
     name Dot1
     xpos 572
     ypos -635
    }
    TimeBlur {
     divisions 2
     shutter {{(parent.decimal-(floor(parent.decimal)))*2}}
     shutteroffset start
     shuttercustomoffset 0
     name TimeBlur1
     xpos 538
     ypos -558
    }
    Dot {
     name Dot2
     xpos 572
     ypos -490
    }
push $N56d334d0
    TimeBlur {
     divisions 2
     shutter {{parent.decimal*2}}
     shutteroffset start
     shuttercustomoffset 0
     name TimeBlur8
     xpos 426
     ypos -556
    }
    Switch {
     inputs 2
     which {{parent.decimal<0}}
     name Switch1
     xpos 426
     ypos -494
    }
    Multiply {
     value {{parent.TimeBlur8.divisions}}
     name Multiply6
     xpos 426
     ypos -436
    }
    Merge2 {
     inputs 2
     operation from
     name Merge6
     xpos 426
     ypos -369
    }
set N56d75410 [stack 0]
    Output {
     name Output1
     xpos 426
     ypos -221
    }
push $N56d75410
push $N56d75410
    Viewer {
     inputs 2
     frame_range 1-100
     name Viewer1
     xpos 675
     ypos -246
    }
   end_group
   NoTimeBlur {
    name NoTimeBlur1
    xpos -283
    ypos -779
   }
   Transform {
    scale {{0.05+(0.05*(((parent.DecimalTimeOffset13.decimal-0.5)*2)*ScaleVariationSmoke))}}
    center {{root.width/2 x1015 2304} {root.height/2}}
    shutteroffset centred
    name Transform44
    xpos -283
    ypos -152
   }
   Card3D {
    inputs 3
    rot_order ZYX
    translate {0 0 0}
    rotate {90 0 0}
    shutteroffset centred
    name cCard3D25
    tile_color 0x7b1d1dff
    xpos -283
    ypos 11
    addUserKnob {20 User l parent}
    addUserKnob {22 python_button l "set parent" t "select parent node, and press this button to set the selected node as parent" +INVISIBLE T "n = nuke.selectedNode()\['name'].getValue()\nnuke.thisNode()\['string'].setValue(n)" +STARTLINE}
    addUserKnob {1 string l parent +INVISIBLE}
    string null
    addUserKnob {3 ref l "ref frame"}
    ref 1015
   }
   Transform {
    translate {{"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].translate.x(ref)\}]"} {"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].translate.y(ref)\}]"}}
    rotate {{"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].rotate-\[value parent_gun].rotate(ref)\}]"}}
    scale {{"\[if \{\[value parent_gun]==\"null\"\} \{return 1\} \{return 1+(\[value parent_gun].scale-\[value parent_gun].scale(ref))\}]"}}
    center {{"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].center.x(ref)\}]"} {"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].center.y(ref)\}]"}}
    name Transform_GUNMatchMove37
    xpos -283
    ypos 126
    addUserKnob {20 User l parent}
    addUserKnob {3 ref}
    ref {{parent.CTimeOffset.ref}}
   }
   Transform {
    translate {{"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].translate.x-\[value parent_env].translate.x(ref)\}]"} {"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].translate.y-\[value parent_env].translate.y(ref)\}]"}}
    rotate {{"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].rotate-\[value parent_env].rotate(ref)\}]"}}
    scale {{"\[if \{\[value parent_gun]==\"null\"\} \{return 1\} \{return 1+(\[value parent_env].scale-\[value parent_env].scale(ref))\}]"}}
    center {{"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].center.x(ref)\}]"} {"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].center.y(ref)\}]"}}
    motionblur 0.2
    shutter {{SmokeMB*0.5}}
    shutteroffset centred
    name Transform_ENVMatchMove37
    label "\n"
    xpos -283
    ypos 255
    addUserKnob {20 User l parent}
    addUserKnob {3 ref}
    ref {{parent.CTimeOffset.ref}}
   }
   Transform {
    translate {{"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return -((root.width/2)-(\[value parent_gun].center.x(1)+\[value parent_gun].translate.x(1)))\}]"} {"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return -((root.height/2)-(\[value parent_gun].center.y(1)+\[value parent_gun].translate.y(1)))\}]"}}
    name Transform_GUNMatchMove6
    label "alignment correction"
    xpos -283
    ypos 344
    addUserKnob {20 User l parent}
    addUserKnob {22 python_button l "set parent" t "select parent node, and press this button to set the selected node as parent" T "n = nuke.selectedNode()\['name'].getValue()\nnuke.thisNode()\['string'].setValue(n)" +STARTLINE}
    addUserKnob {1 string l parent}
    string Transform_MatchMove10
    addUserKnob {3 ref +INVISIBLE}
    ref {{parent.cCard3D_8.ref}}
   }
   Multiply {
    value {{math_matrix.result_y_smoke(parent.CTimeOffset.ref)}}
    name Angle_reveal_top1
    label TOP
    xpos -283
    ypos 403
   }
   Remove {
    operation keep
    channels rgb
    name Remove1
    xpos -283
    ypos 514
   }
push 0
   Switch {
    inputs 2
    which {{parent.Angle_reveal_top1.value>0.001}}
    name Switch1
    xpos -283
    ypos 660
   }
   Dot {
    name Dot82
    xpos -249
    ypos 705
   }
push 0
push $N567e3f30
push 0
   Input {
    inputs 0
    name front
    xpos -436
    ypos -1243
    number 2
   }
   TimeOffset {
    time_offset {{"shot_\[value shotnmbr]==0 ? 0 : shot_\[value shotnmbr]-1"}}
    time ""
    name CTimeOffset2
    label "shot: \[value shotnmbr]\non frame \[value time_offset]"
    xpos -436
    ypos -925
    addUserKnob {20 User}
    addUserKnob {3 shotnmbr l "shot "}
    shotnmbr {{shotcount}}
    addUserKnob {3 ref}
    ref {{time_offset+1}}
   }
   Group {
    name DecimalTimeOffset2
    tile_color 0xafa35dff
    label "random asset"
    note_font "Bitstream Vera Sans Bold"
    xpos -436
    ypos -842
    addUserKnob {20 User}
    addUserKnob {7 decimal l "time offset (decimal)"}
    decimal {{random(shotcount*seed)}}
    addUserKnob {26 ""}
    addUserKnob {26 _1 l "" +STARTLINE T "Chris Fryer | 2020\nupdated by Yorben Otto | 2024"}
   }
    Input {
     inputs 0
     name Input1
     xpos 426
     ypos -793
    }
    TimeOffset {
     time_offset {{(-floor(parent.decimal))*(DecimalTimeOffset2.decimal<0)}}
     time ""
     name TimeOffset1
     xpos 426
     ypos -675
    }
    Dot {
     name Dot6
     xpos 460
     ypos -635
    }
set N573c1100 [stack 0]
    Dot {
     name Dot5
     xpos 350
     ypos -635
    }
    Dot {
     name Dot7
     xpos 350
     ypos -365
    }
push $N573c1100
    Dot {
     name Dot1
     xpos 572
     ypos -635
    }
    TimeBlur {
     divisions 2
     shutter {{(parent.decimal-(floor(parent.decimal)))*2}}
     shutteroffset start
     shuttercustomoffset 0
     name TimeBlur1
     xpos 538
     ypos -558
    }
    Dot {
     name Dot2
     xpos 572
     ypos -490
    }
push $N573c1100
    TimeBlur {
     divisions 2
     shutter {{parent.decimal*2}}
     shutteroffset start
     shuttercustomoffset 0
     name TimeBlur8
     xpos 426
     ypos -556
    }
    Switch {
     inputs 2
     which {{parent.decimal<0}}
     name Switch1
     xpos 426
     ypos -494
    }
    Multiply {
     value {{parent.TimeBlur8.divisions}}
     name Multiply6
     xpos 426
     ypos -436
    }
    Merge2 {
     inputs 2
     operation from
     name Merge6
     xpos 426
     ypos -369
    }
set N5ad12d50 [stack 0]
    Output {
     name Output1
     xpos 426
     ypos -221
    }
push $N5ad12d50
push $N5ad12d50
    Viewer {
     inputs 2
     frame_range 1-100
     name Viewer1
     xpos 675
     ypos -246
    }
   end_group
   NoTimeBlur {
    name NoTimeBlur5
    xpos -436
    ypos -780
   }
   Transform {
    scale {{0.05+(0.05*(((parent.DecimalTimeOffset13.decimal-0.5)*2)*ScaleVariationSmoke))}}
    center {{root.width/2 x1015 2304} {root.height/2}}
    shutteroffset centred
    name Transform45
    xpos -436
    ypos -151
   }
   Card3D {
    inputs 3
    rot_order ZYX
    translate {0 0 0}
    rotate {0 90 0}
    shutteroffset centred
    name cCard3D26
    tile_color 0x7b1d1dff
    xpos -436
    ypos 15
    addUserKnob {20 User l parent}
    addUserKnob {22 python_button l "set parent" t "select parent node, and press this button to set the selected node as parent" +INVISIBLE T "n = nuke.selectedNode()\['name'].getValue()\nnuke.thisNode()\['string'].setValue(n)" +STARTLINE}
    addUserKnob {1 string l parent +INVISIBLE}
    string null
    addUserKnob {3 ref l "ref frame"}
    ref 1015
   }
   Transform {
    translate {{"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].translate.x(ref)\}]"} {"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].translate.y(ref)\}]"}}
    rotate {{"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].rotate-\[value parent_gun].rotate(ref)\}]"}}
    scale {{"\[if \{\[value parent_gun]==\"null\"\} \{return 1\} \{return 1+(\[value parent_gun].scale-\[value parent_gun].scale(ref))\}]"}}
    center {{"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].center.x(ref)\}]"} {"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].center.y(ref)\}]"}}
    name Transform_GUNMatchMove38
    label "\n"
    xpos -436
    ypos 124
    addUserKnob {20 User l parent}
    addUserKnob {3 ref}
    ref {{parent.CTimeOffset.ref}}
   }
   Transform {
    translate {{"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].translate.x-\[value parent_env].translate.x(ref)\}]"} {"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].translate.y-\[value parent_env].translate.y(ref)\}]"}}
    rotate {{"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].rotate-\[value parent_env].rotate(ref)\}]"}}
    scale {{"\[if \{\[value parent_gun]==\"null\"\} \{return 1\} \{return 1+(\[value parent_env].scale-\[value parent_env].scale(ref))\}]"}}
    center {{"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].center.x(ref)\}]"} {"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].center.y(ref)\}]"}}
    motionblur 0.2
    shutter {{SmokeMB*0.5}}
    shutteroffset centred
    name Transform_ENVMatchMove38
    xpos -436
    ypos 254
    addUserKnob {20 User l parent}
    addUserKnob {3 ref}
    ref {{parent.CTimeOffset.ref}}
   }
   Transform {
    translate {{"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return -((root.width/2)-(\[value parent_gun].center.x(1)+\[value parent_gun].translate.x(1)))\}]"} {"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return -((root.height/2)-(\[value parent_gun].center.y(1)+\[value parent_gun].translate.y(1)))\}]"}}
    name Transform_GUNMatchMove7
    label "alignment correction"
    xpos -436
    ypos 343
    addUserKnob {20 User l parent}
    addUserKnob {22 python_button l "set parent" t "select parent node, and press this button to set the selected node as parent" T "n = nuke.selectedNode()\['name'].getValue()\nnuke.thisNode()\['string'].setValue(n)" +STARTLINE}
    addUserKnob {1 string l parent}
    string Transform_MatchMove10
    addUserKnob {3 ref +INVISIBLE}
    ref {{parent.cCard3D_8.ref}}
   }
   Multiply {
    value {{math_matrix.result_x_smoke(parent.CTimeOffset.ref)}}
    name Angle_reveal_front1
    label FRONT
    xpos -436
    ypos 401
   }
   Remove {
    operation keep
    channels rgb
    name Remove2
    xpos -436
    ypos 511
   }
push 0
   Switch {
    inputs 2
    which {{parent.Angle_reveal_front1.value>0.001}}
    name Switch2
    xpos -436
    ypos 660
   }
   Dot {
    name Dot83
    xpos -402
    ypos 735
   }
   Input {
    inputs 0
    name side
    xpos -130
    ypos -1242
   }
   TimeOffset {
    time_offset {{"shot_\[value shotnmbr]==0 ? 0 : shot_\[value shotnmbr]-1"}}
    time ""
    name CTimeOffset
    label "shot: \[value shotnmbr]\non frame \[value time_offset]"
    xpos -130
    ypos -927
    addUserKnob {20 User}
    addUserKnob {3 shotnmbr l "shot "}
    shotnmbr {{shotcount}}
    addUserKnob {3 ref}
    ref {{time_offset+1}}
   }
   Group {
    name DecimalTimeOffset13
    tile_color 0xafa35dff
    label "random asset"
    note_font "Bitstream Vera Sans Bold"
    xpos -130
    ypos -844
    addUserKnob {20 User}
    addUserKnob {7 decimal l "time offset (decimal)"}
    decimal {{random(shotcount*seed)}}
    addUserKnob {26 ""}
    addUserKnob {26 _1 l "" +STARTLINE T "Chris Fryer | 2020\nupdated by Yorben Otto | 2024"}
   }
    Input {
     inputs 0
     name Input1
     xpos 426
     ypos -793
    }
    TimeOffset {
     time_offset {{(-floor(parent.decimal))*(DecimalTimeOffset13.decimal<0)}}
     time ""
     name TimeOffset1
     xpos 426
     ypos -675
    }
    Dot {
     name Dot6
     xpos 460
     ypos -635
    }
set N5435eaf0 [stack 0]
    Dot {
     name Dot5
     xpos 350
     ypos -635
    }
    Dot {
     name Dot7
     xpos 350
     ypos -365
    }
push $N5435eaf0
    Dot {
     name Dot1
     xpos 572
     ypos -635
    }
    TimeBlur {
     divisions 2
     shutter {{(parent.decimal-(floor(parent.decimal)))*2}}
     shutteroffset start
     shuttercustomoffset 0
     name TimeBlur1
     xpos 538
     ypos -558
    }
    Dot {
     name Dot2
     xpos 572
     ypos -490
    }
push $N5435eaf0
    TimeBlur {
     divisions 2
     shutter {{parent.decimal*2}}
     shutteroffset start
     shuttercustomoffset 0
     name TimeBlur8
     xpos 426
     ypos -556
    }
    Switch {
     inputs 2
     which {{parent.decimal<0}}
     name Switch1
     xpos 426
     ypos -494
    }
    Multiply {
     value {{parent.TimeBlur8.divisions}}
     name Multiply6
     xpos 426
     ypos -436
    }
    Merge2 {
     inputs 2
     operation from
     name Merge6
     xpos 426
     ypos -369
    }
set N543a0a30 [stack 0]
    Output {
     name Output1
     xpos 426
     ypos -221
    }
push $N543a0a30
push $N543a0a30
    Viewer {
     inputs 2
     frame_range 1-100
     name Viewer1
     xpos 675
     ypos -246
    }
   end_group
   NoTimeBlur {
    name NoTimeBlur13
    xpos -130
    ypos -782
   }
   Transform {
    scale {{0.05+(0.05*(((parent.DecimalTimeOffset13.decimal-0.5)*2)*ScaleVariationSmoke))}}
    center {{root.width/2 x1015 2304} {root.height/2}}
    shutteroffset centred
    name Transform46
    xpos -130
    ypos -155
   }
   Card3D {
    translate {{"\[if \{\[exists  parent.parent.parent.input0]\} \{return \[value \[topnode parent.parent.parent.input0].name].translate.x(ref)\} \{return 0\}]"} {"\[if \{\[exists  parent.parent.parent.input0]\} \{return \[value \[topnode parent.parent.parent.input0].name].translate.y(ref)\} \{return 0\}]"} {"\[if \{\[exists  parent.parent.parent.input0]\} \{return \[value \[topnode parent.parent.parent.input0].name].translate.z(ref)\} \{return -1\}]"}}
    rotate {{"\[if \{\[exists  parent.parent.parent.input0]\} \{return \[value \[topnode parent.parent.parent.input0].name].rotate.x(ref)\} \{return 0\}]"} {"\[if \{\[exists  parent.parent.parent.input0]\} \{return \[value \[topnode parent.parent.parent.input0].name].rotate.y(ref)\} \{return 0\}]"} {"\[if \{\[exists  parent.parent.parent.input0]\} \{return \[value \[topnode parent.parent.parent.input0].name].rotate.z(ref)\} \{return 0\}]"}}
    scaling {{"\[if \{\[exists  parent.parent.parent.input0]\} \{return \[value \[topnode parent.parent.parent.input0].name].scaling.x(ref)\} \{return 1\}]"} {"\[if \{\[exists  parent.parent.parent.input0]\} \{return \[value \[topnode parent.parent.parent.input0].name].scaling.y(ref)\} \{return 1\}]"} {"\[if \{\[exists  parent.parent.parent.input0]\} \{return \[value \[topnode parent.parent.parent.input0].name].scaling.z(ref)\} \{return 1\}]"}}
    uniform_scale {{"\[if \{\[exists  parent.parent.parent.input0]\} \{return (\[value \[topnode parent.parent.parent.input0].name].uniform_scale(ref)*25)\} \{return 25\}]"}}
    shutteroffset centred
    name cCard3D_1
    tile_color 0x7b1d1dff
    label "ref frame: \[value ref]"
    xpos -130
    ypos 2
    addUserKnob {20 User l parent}
    addUserKnob {22 python_button l "set parent" t "select parent node, and press this button to set the selected node as parent" +INVISIBLE T "n = nuke.selectedNode()\['name'].getValue()\nnuke.thisNode()\['string'].setValue(n)" +STARTLINE}
    addUserKnob {1 string l parent +INVISIBLE}
    string null
    addUserKnob {3 id l "id number"}
    id {{parent.CTimeOffset.shotnmbr}}
    addUserKnob {3 ref l "ref frame"}
    ref {{parent.CTimeOffset.ref}}
   }
   Transform {
    translate {{"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].translate.x(ref)\}]"} {"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].translate.y(ref)\}]"}}
    rotate {{"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].rotate-\[value parent_gun].rotate(ref)\}]"}}
    scale {{"\[if \{\[value parent_gun]==\"null\"\} \{return 1\} \{return 1+(\[value parent_gun].scale-\[value parent_gun].scale(ref))\}]"}}
    center {{"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].center.x(ref)\}]"} {"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].center.y(ref)\}]"}}
    name Transform_GUNMatchMove39
    label "\n"
    xpos -130
    ypos 124
    addUserKnob {20 User l parent}
    addUserKnob {3 ref}
    ref {{parent.CTimeOffset.ref}}
   }
   Transform {
    translate {{"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].translate.x-\[value parent_env].translate.x(ref)\}]"} {"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].translate.y-\[value parent_env].translate.y(ref)\}]"}}
    rotate {{"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].rotate-\[value parent_env].rotate(ref)\}]"}}
    scale {{"\[if \{\[value parent_gun]==\"null\"\} \{return 1\} \{return 1+(\[value parent_env].scale-\[value parent_env].scale(ref))\}]"}}
    center {{"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].center.x(ref)\}]"} {"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].center.y(ref)\}]"}}
    motionblur 0.2
    shutter {{SmokeMB*0.5}}
    shutteroffset centred
    name Transform_ENVMatchMove39
    xpos -130
    ypos 258
    addUserKnob {20 User l parent}
    addUserKnob {3 ref}
    ref {{parent.CTimeOffset.ref}}
   }
   Transform {
    translate {{"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return -((root.width/2)-(\[value parent_gun].center.x(1)+\[value parent_gun].translate.x(1)))\}]"} {"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return -((root.height/2)-(\[value parent_gun].center.y(1)+\[value parent_gun].translate.y(1)))\}]"}}
    name Transform_GUNMatchMove5
    label "alignment correction"
    xpos -130
    ypos 340
    addUserKnob {20 User l parent}
    addUserKnob {22 python_button l "set parent" t "select parent node, and press this button to set the selected node as parent" T "n = nuke.selectedNode()\['name'].getValue()\nnuke.thisNode()\['string'].setValue(n)" +STARTLINE}
    addUserKnob {1 string l parent}
    string Transform_MatchMove10
    addUserKnob {3 ref +INVISIBLE}
    ref {{parent.cCard3D_8.ref}}
   }
   Multiply {
    value {{math_matrix.result_z_smoke(parent.CTimeOffset.ref)}}
    name Angle_reveal_side1
    label SIDE
    xpos -130
    ypos 404
   }
   Remove {
    operation keep
    channels rgb
    name Remove39
    xpos -130
    ypos 514
   }
push 0
   Switch {
    inputs 2
    which {{parent.Angle_reveal_side1.value>0.001}}
    name Switch3
    xpos -130
    ypos 658
   }
   Merge2 {
    inputs 3+1
    operation max
    Achannels rgb
    Bchannels rgb
    output rgb
    name Merge28
    xpos -130
    ypos 731
   }
   Merge2 {
    inputs 2
    operation plus
    bbox intersection
    Achannels rgb
    Bchannels rgb
    output rgb
    name Merge29
    xpos -130
    ypos 983
   }
   Shuffle2 {
    fromInput1 {{0} B}
    fromInput2 {{0} B}
    mappings "4 rgba.red 0 0 rgba.red 0 0 rgba.green 0 1 rgba.green 0 1 rgba.blue 0 2 rgba.alpha 0 3 rgba.blue 0 2 rgba.blue 0 2"
    name Shuffle1
    xpos -130
    ypos 1021
   }
push 0
   Switch {
    inputs 2
    which {{"shot_\[value count]==0?0:frame>=shot_\[value count]"}}
    name cSwitch_13
    xpos -130
    ypos 1078
    addUserKnob {20 User}
    addUserKnob {3 count}
    count {{parent.CTimeOffset.shotnmbr}}
   }
   Output {
    name Output1
    xpos -130
    ypos 1323
   }
   StickyNote {
    inputs 0
    name StickyNote1
    label "<-- handy to break concatonation?  "
    xpos -39
    ypos 193
   }
  end_group
push $N586971d0
  PostageStamp {
   name Stamp70
   help "Stamps by Adrian Pueyo and Alexey Kuchinski.\nUpdated May 18 2021"
   onCreate "if nuke.GUI:\n    try:\n        import stamps; stamps.wiredOnCreate()\n    except:\n        pass\n"
   knobChanged "import stamps; stamps.wiredKnobChanged()"
   autolabel "nuke.thisNode().knob(\"title\").value()"
   tile_color 0x1000001
   note_font "Bitstream Vera Sans"
   note_font_size 20
   xpos 8470
   ypos -733
   hide_input true
   addUserKnob {20 wired_tab l "Wired Stamp"}
   addUserKnob {26 identifier -STARTLINE +HIDDEN T wired}
   addUserKnob {3 lockCallbacks l "" +STARTLINE +HIDDEN}
   addUserKnob {6 toReconnect -STARTLINE +HIDDEN}
   addUserKnob {1 title l Title: t "Displayed name on the Node Graph for this Stamp and its Anchor.\nIMPORTANT: This is only for display purposes, and is different from the real/internal name of the Stamps."}
   title smoke_FRONT
   addUserKnob {26 prev_title l "" +STARTLINE +HIDDEN T smoke_FRONT}
   addUserKnob {26 tags l Tags: t "Tags of this stamp's Anchor, for information purpose only.\nClick \"show anchor\" to change them." T <i>2D</i>}
   addUserKnob {26 backdrops l Backdrops: t "Labels of backdrop nodes which contain this stamp's Anchor." T "<i><Left>before or after Flare</i>"}
   addUserKnob {26 line1 l "" +STARTLINE}
   addUserKnob {6 postageStamp_show l "postage stamp" t "Enable the postage stamp thumbnail in this node.\nYou're seeing this because the class of this node includes the postage_stamp knob." +STARTLINE}
   addUserKnob {26 anchor_label l Anchor: T " "}
   addUserKnob {22 show_anchor l " show anchor " t "Show the properties panel for this Stamp's Anchor." -STARTLINE T stamps.wiredShowAnchor()}
   addUserKnob {22 zoom_anchor l "zoom anchor" t "Navigate to this Stamp's Anchor on the Node Graph." -STARTLINE T stamps.wiredZoomAnchor()}
   addUserKnob {26 stamps_label l Stamps: T " "}
   addUserKnob {22 zoomNext l " zoom next " t "Navigate to this Stamp's next sibling on the Node Graph." -STARTLINE T stamps.wiredZoomNext()}
   addUserKnob {22 selectSimilar l " select similar " t "Select all similar Stamps to this one on the Node Graph." -STARTLINE T stamps.wiredSelectSimilar()}
   addUserKnob {26 space_1 l "" +STARTLINE T " "}
   addUserKnob {26 reconnect_label l Reconnect: t "Reconnect by the stored Anchor name." T " "}
   addUserKnob {22 reconnect_this l this t "Reconnect this Stamp to its Anchor, by its stored Anchor name." -STARTLINE T "n = nuke.thisNode()\ntry:\n    n.setInput(0,nuke.toNode(n.knob(\"anchor\").value()))\nexcept:\n    nuke.message(\"Unable to reconnect.\")\ntry:\n    import stamps\n    stamps.wiredGetStyle(n)\nexcept:\n    pass\n"}
   addUserKnob {22 reconnect_similar l similar t "Reconnect this Stamp and similar ones to their Anchor, by their stored anchor name." -STARTLINE T stamps.wiredReconnectSimilar()}
   addUserKnob {22 reconnect_all l all t "Reconnect all the Stamps to their Anchors, by their stored anchor names." -STARTLINE T stamps.wiredReconnectAll()}
   addUserKnob {26 space_2 l "" +STARTLINE T " "}
   addUserKnob {20 advanced_reconnection l "Advanced Reconnection" n 2}
   addUserKnob {26 reconnect_by_title_label l "<font color=gold>By Title:" t "Reconnect by searching for a matching title." T " "}
   addUserKnob {22 reconnect_by_title_this l this t "Look for an Anchor that shares this Stamp's title, and connect this Stamp to it.\nIMPORTANT: Use this carefully, and only when the normal reconnection doesn't work." -STARTLINE T stamps.wiredReconnectByTitle()}
   addUserKnob {22 reconnect_by_title_similar l similar t "Look for an Anchor that shares this Stamp's title, and connect this Stamp and similar ones to it.\nIMPORTANT: Use this carefully, and only when the normal reconnection doesn't work." -STARTLINE T stamps.wiredReconnectByTitleSimilar()}
   addUserKnob {22 reconnect_by_title_selected l selected t "For each Stamp selected, look for an Anchor that shares its title, and connect to it.\nIMPORTANT: Use this carefully, and only when the normal reconnection doesn't work." -STARTLINE T stamps.wiredReconnectByTitleSelected()}
   addUserKnob {26 reconnect_by_selection_label l "<font color=orangered>By Selection:" t "Force reconnect to a selected Anchor." T " "}
   addUserKnob {22 reconnect_by_selection_this l this t "Force reconnect this Stamp to a selected Anchor, whatever its name or title.\nIMPORTANT: Use this carefully, and only when the normal reconnection doesn't work." -STARTLINE T stamps.wiredReconnectBySelection()}
   addUserKnob {22 reconnect_by_selection_similar l similar t "Force reconnect this Stamp and similar ones to a selected Anchor, whatever its name or title.\nIMPORTANT: Use this carefully, and only when the normal reconnection doesn't work." -STARTLINE T stamps.wiredReconnectBySelectionSimilar()}
   addUserKnob {22 reconnect_by_selection_selected l selected t "Force reconnect all selected Stamps to an also selected Anchor, whatever its name or title.\nIMPORTANT: Use this carefully, and only when the normal reconnection doesn't work." -STARTLINE T stamps.wiredReconnectBySelectionSelected()}
   addUserKnob {1 anchor l Anchor}
   anchor Anchor_220a2be282
   addUserKnob {6 auto_reconnect_by_title l "<font color=#ED9977>&nbsp; auto-reconnect by title" t "When creating this stamp again (like on copy-paste), auto-reconnect it by title instead of doing it by the saved anchor's name, and auto-turn this off immediately.\nIMPORTANT: Should be off by default. Only use this for setting up templates." +STARTLINE}
   addUserKnob {26 line2 l "" +STARTLINE}
   addUserKnob {22 buttonHelp l Help -STARTLINE T stamps.showHelp()}
   addUserKnob {26 version l " " t "Stamps by Adrian Pueyo and Alexey Kuchinski.\nUpdated May 18 2021." -STARTLINE T "<a href=\"http://www.nukepedia.com/gizmos/other/stamps\" style=\"color:#666;text-decoration: none;\"><span style=\"color:#666\"> <big>Stamps v1.1</big></b></a>"}
  }
  Dot {
   name Dot47
   xpos 8504
   ypos -685
  }
push $N58d70c10
  PostageStamp {
   name Stamp71
   help "Stamps by Adrian Pueyo and Alexey Kuchinski.\nUpdated May 18 2021"
   onCreate "if nuke.GUI:\n    try:\n        import stamps; stamps.wiredOnCreate()\n    except:\n        pass\n"
   knobChanged "import stamps; stamps.wiredKnobChanged()"
   autolabel "nuke.thisNode().knob(\"title\").value()"
   tile_color 0x1000001
   note_font "Bitstream Vera Sans"
   note_font_size 20
   xpos 8595
   ypos -733
   hide_input true
   addUserKnob {20 wired_tab l "Wired Stamp"}
   addUserKnob {26 identifier -STARTLINE +HIDDEN T wired}
   addUserKnob {3 lockCallbacks l "" +STARTLINE +HIDDEN}
   addUserKnob {6 toReconnect -STARTLINE +HIDDEN}
   addUserKnob {1 title l Title: t "Displayed name on the Node Graph for this Stamp and its Anchor.\nIMPORTANT: This is only for display purposes, and is different from the real/internal name of the Stamps."}
   title smoke_TOP
   addUserKnob {26 prev_title l "" +STARTLINE +HIDDEN T smoke_TOP}
   addUserKnob {26 tags l Tags: t "Tags of this stamp's Anchor, for information purpose only.\nClick \"show anchor\" to change them." T <i>2D</i>}
   addUserKnob {26 backdrops l Backdrops: t "Labels of backdrop nodes which contain this stamp's Anchor." T "<i><Left>before or after Flare</i>"}
   addUserKnob {26 line1 l "" +STARTLINE}
   addUserKnob {6 postageStamp_show l "postage stamp" t "Enable the postage stamp thumbnail in this node.\nYou're seeing this because the class of this node includes the postage_stamp knob." +STARTLINE}
   addUserKnob {26 anchor_label l Anchor: T " "}
   addUserKnob {22 show_anchor l " show anchor " t "Show the properties panel for this Stamp's Anchor." -STARTLINE T stamps.wiredShowAnchor()}
   addUserKnob {22 zoom_anchor l "zoom anchor" t "Navigate to this Stamp's Anchor on the Node Graph." -STARTLINE T stamps.wiredZoomAnchor()}
   addUserKnob {26 stamps_label l Stamps: T " "}
   addUserKnob {22 zoomNext l " zoom next " t "Navigate to this Stamp's next sibling on the Node Graph." -STARTLINE T stamps.wiredZoomNext()}
   addUserKnob {22 selectSimilar l " select similar " t "Select all similar Stamps to this one on the Node Graph." -STARTLINE T stamps.wiredSelectSimilar()}
   addUserKnob {26 space_1 l "" +STARTLINE T " "}
   addUserKnob {26 reconnect_label l Reconnect: t "Reconnect by the stored Anchor name." T " "}
   addUserKnob {22 reconnect_this l this t "Reconnect this Stamp to its Anchor, by its stored Anchor name." -STARTLINE T "n = nuke.thisNode()\ntry:\n    n.setInput(0,nuke.toNode(n.knob(\"anchor\").value()))\nexcept:\n    nuke.message(\"Unable to reconnect.\")\ntry:\n    import stamps\n    stamps.wiredGetStyle(n)\nexcept:\n    pass\n"}
   addUserKnob {22 reconnect_similar l similar t "Reconnect this Stamp and similar ones to their Anchor, by their stored anchor name." -STARTLINE T stamps.wiredReconnectSimilar()}
   addUserKnob {22 reconnect_all l all t "Reconnect all the Stamps to their Anchors, by their stored anchor names." -STARTLINE T stamps.wiredReconnectAll()}
   addUserKnob {26 space_2 l "" +STARTLINE T " "}
   addUserKnob {20 advanced_reconnection l "Advanced Reconnection" n 2}
   addUserKnob {26 reconnect_by_title_label l "<font color=gold>By Title:" t "Reconnect by searching for a matching title." T " "}
   addUserKnob {22 reconnect_by_title_this l this t "Look for an Anchor that shares this Stamp's title, and connect this Stamp to it.\nIMPORTANT: Use this carefully, and only when the normal reconnection doesn't work." -STARTLINE T stamps.wiredReconnectByTitle()}
   addUserKnob {22 reconnect_by_title_similar l similar t "Look for an Anchor that shares this Stamp's title, and connect this Stamp and similar ones to it.\nIMPORTANT: Use this carefully, and only when the normal reconnection doesn't work." -STARTLINE T stamps.wiredReconnectByTitleSimilar()}
   addUserKnob {22 reconnect_by_title_selected l selected t "For each Stamp selected, look for an Anchor that shares its title, and connect to it.\nIMPORTANT: Use this carefully, and only when the normal reconnection doesn't work." -STARTLINE T stamps.wiredReconnectByTitleSelected()}
   addUserKnob {26 reconnect_by_selection_label l "<font color=orangered>By Selection:" t "Force reconnect to a selected Anchor." T " "}
   addUserKnob {22 reconnect_by_selection_this l this t "Force reconnect this Stamp to a selected Anchor, whatever its name or title.\nIMPORTANT: Use this carefully, and only when the normal reconnection doesn't work." -STARTLINE T stamps.wiredReconnectBySelection()}
   addUserKnob {22 reconnect_by_selection_similar l similar t "Force reconnect this Stamp and similar ones to a selected Anchor, whatever its name or title.\nIMPORTANT: Use this carefully, and only when the normal reconnection doesn't work." -STARTLINE T stamps.wiredReconnectBySelectionSimilar()}
   addUserKnob {22 reconnect_by_selection_selected l selected t "Force reconnect all selected Stamps to an also selected Anchor, whatever its name or title.\nIMPORTANT: Use this carefully, and only when the normal reconnection doesn't work." -STARTLINE T stamps.wiredReconnectBySelectionSelected()}
   addUserKnob {1 anchor l Anchor}
   anchor Anchor_25b668170c
   addUserKnob {6 auto_reconnect_by_title l "<font color=#ED9977>&nbsp; auto-reconnect by title" t "When creating this stamp again (like on copy-paste), auto-reconnect it by title instead of doing it by the saved anchor's name, and auto-turn this off immediately.\nIMPORTANT: Should be off by default. Only use this for setting up templates." +STARTLINE}
   addUserKnob {26 line2 l "" +STARTLINE}
   addUserKnob {22 buttonHelp l Help -STARTLINE T stamps.showHelp()}
   addUserKnob {26 version l " " t "Stamps by Adrian Pueyo and Alexey Kuchinski.\nUpdated May 18 2021." -STARTLINE T "<a href=\"http://www.nukepedia.com/gizmos/other/stamps\" style=\"color:#666;text-decoration: none;\"><span style=\"color:#666\"> <big>Stamps v1.1</big></b></a>"}
  }
push $N56244930
  PostageStamp {
   name Stamp72
   help "Stamps by Adrian Pueyo and Alexey Kuchinski.\nUpdated May 18 2021"
   onCreate "if nuke.GUI:\n    try:\n        import stamps; stamps.wiredOnCreate()\n    except:\n        pass\n"
   knobChanged "import stamps; stamps.wiredKnobChanged()"
   autolabel "nuke.thisNode().knob(\"title\").value()"
   tile_color 0x1000001
   note_font "Bitstream Vera Sans"
   note_font_size 20
   xpos 8713
   ypos -735
   hide_input true
   addUserKnob {20 wired_tab l "Wired Stamp"}
   addUserKnob {26 identifier -STARTLINE +HIDDEN T wired}
   addUserKnob {3 lockCallbacks l "" +STARTLINE +HIDDEN}
   addUserKnob {6 toReconnect -STARTLINE +HIDDEN}
   addUserKnob {1 title l Title: t "Displayed name on the Node Graph for this Stamp and its Anchor.\nIMPORTANT: This is only for display purposes, and is different from the real/internal name of the Stamps."}
   title smoke_SIDE
   addUserKnob {26 prev_title l "" +STARTLINE +HIDDEN T smoke_SIDE}
   addUserKnob {26 tags l Tags: t "Tags of this stamp's Anchor, for information purpose only.\nClick \"show anchor\" to change them." T <i>2D</i>}
   addUserKnob {26 backdrops l Backdrops: t "Labels of backdrop nodes which contain this stamp's Anchor." T "<i><Left>before or after Flare</i>"}
   addUserKnob {26 line1 l "" +STARTLINE}
   addUserKnob {6 postageStamp_show l "postage stamp" t "Enable the postage stamp thumbnail in this node.\nYou're seeing this because the class of this node includes the postage_stamp knob." +STARTLINE}
   addUserKnob {26 anchor_label l Anchor: T " "}
   addUserKnob {22 show_anchor l " show anchor " t "Show the properties panel for this Stamp's Anchor." -STARTLINE T stamps.wiredShowAnchor()}
   addUserKnob {22 zoom_anchor l "zoom anchor" t "Navigate to this Stamp's Anchor on the Node Graph." -STARTLINE T stamps.wiredZoomAnchor()}
   addUserKnob {26 stamps_label l Stamps: T " "}
   addUserKnob {22 zoomNext l " zoom next " t "Navigate to this Stamp's next sibling on the Node Graph." -STARTLINE T stamps.wiredZoomNext()}
   addUserKnob {22 selectSimilar l " select similar " t "Select all similar Stamps to this one on the Node Graph." -STARTLINE T stamps.wiredSelectSimilar()}
   addUserKnob {26 space_1 l "" +STARTLINE T " "}
   addUserKnob {26 reconnect_label l Reconnect: t "Reconnect by the stored Anchor name." T " "}
   addUserKnob {22 reconnect_this l this t "Reconnect this Stamp to its Anchor, by its stored Anchor name." -STARTLINE T "n = nuke.thisNode()\ntry:\n    n.setInput(0,nuke.toNode(n.knob(\"anchor\").value()))\nexcept:\n    nuke.message(\"Unable to reconnect.\")\ntry:\n    import stamps\n    stamps.wiredGetStyle(n)\nexcept:\n    pass\n"}
   addUserKnob {22 reconnect_similar l similar t "Reconnect this Stamp and similar ones to their Anchor, by their stored anchor name." -STARTLINE T stamps.wiredReconnectSimilar()}
   addUserKnob {22 reconnect_all l all t "Reconnect all the Stamps to their Anchors, by their stored anchor names." -STARTLINE T stamps.wiredReconnectAll()}
   addUserKnob {26 space_2 l "" +STARTLINE T " "}
   addUserKnob {20 advanced_reconnection l "Advanced Reconnection" n 2}
   addUserKnob {26 reconnect_by_title_label l "<font color=gold>By Title:" t "Reconnect by searching for a matching title." T " "}
   addUserKnob {22 reconnect_by_title_this l this t "Look for an Anchor that shares this Stamp's title, and connect this Stamp to it.\nIMPORTANT: Use this carefully, and only when the normal reconnection doesn't work." -STARTLINE T stamps.wiredReconnectByTitle()}
   addUserKnob {22 reconnect_by_title_similar l similar t "Look for an Anchor that shares this Stamp's title, and connect this Stamp and similar ones to it.\nIMPORTANT: Use this carefully, and only when the normal reconnection doesn't work." -STARTLINE T stamps.wiredReconnectByTitleSimilar()}
   addUserKnob {22 reconnect_by_title_selected l selected t "For each Stamp selected, look for an Anchor that shares its title, and connect to it.\nIMPORTANT: Use this carefully, and only when the normal reconnection doesn't work." -STARTLINE T stamps.wiredReconnectByTitleSelected()}
   addUserKnob {26 reconnect_by_selection_label l "<font color=orangered>By Selection:" t "Force reconnect to a selected Anchor." T " "}
   addUserKnob {22 reconnect_by_selection_this l this t "Force reconnect this Stamp to a selected Anchor, whatever its name or title.\nIMPORTANT: Use this carefully, and only when the normal reconnection doesn't work." -STARTLINE T stamps.wiredReconnectBySelection()}
   addUserKnob {22 reconnect_by_selection_similar l similar t "Force reconnect this Stamp and similar ones to a selected Anchor, whatever its name or title.\nIMPORTANT: Use this carefully, and only when the normal reconnection doesn't work." -STARTLINE T stamps.wiredReconnectBySelectionSimilar()}
   addUserKnob {22 reconnect_by_selection_selected l selected t "Force reconnect all selected Stamps to an also selected Anchor, whatever its name or title.\nIMPORTANT: Use this carefully, and only when the normal reconnection doesn't work." -STARTLINE T stamps.wiredReconnectBySelectionSelected()}
   addUserKnob {1 anchor l Anchor}
   anchor Anchor_232c9aab88
   addUserKnob {6 auto_reconnect_by_title l "<font color=#ED9977>&nbsp; auto-reconnect by title" t "When creating this stamp again (like on copy-paste), auto-reconnect it by title instead of doing it by the saved anchor's name, and auto-turn this off immediately.\nIMPORTANT: Should be off by default. Only use this for setting up templates." +STARTLINE}
   addUserKnob {26 line2 l "" +STARTLINE}
   addUserKnob {22 buttonHelp l Help -STARTLINE T stamps.showHelp()}
   addUserKnob {26 version l " " t "Stamps by Adrian Pueyo and Alexey Kuchinski.\nUpdated May 18 2021." -STARTLINE T "<a href=\"http://www.nukepedia.com/gizmos/other/stamps\" style=\"color:#666;text-decoration: none;\"><span style=\"color:#666\"> <big>Stamps v1.1</big></b></a>"}
  }
  Dot {
   name Dot48
   xpos 8747
   ypos -685
  }
  Group {
   inputs 3
   name gunshot24
   label "shot: \[value shotcount]\non frame: \[value shotstart]\n"
   xpos 8595
   ypos -658
   addUserKnob {20 User}
   addUserKnob {3 shotcount l shot}
   shotcount 24
   addUserKnob {3 shotstart l frame +INVISIBLE}
   shotstart {{"shotcount==0 ? 0 : shot\[value shotcount]-1" i}}
  }
   BackdropNode {
    inputs 0
    name BackdropNode19
    knobChanged "try:\n    listenedKnobs = \['text', 'position', 'name']\n    node = nuke.thisNode()\n    name = node.knob('name').value()\n    text = node.knob('text').value()\n    position = node.knob('position').value()\n    position = \"<\" + position + \">\"\n    label = node.knob('label').value()\n    \n    if nuke.thisKnob().name() in listenedKnobs:\n        if text == \"\":\n            if node.knob('position').value() == \"left\":\n                node.knob('label').setValue()\n            else:\n                node.knob('label').setValue(position + name)\n        else:\n            if node.knob('position').value() == \"left\":\n                node.knob('label').setValue(text)\n            else:\n                node.knob('label').setValue(position + text)\n                \n    elif nuke.thisKnob().name() == 'font_size':\n        fontSize = node.knob('font_size').value()\n        node.knob('note_font_size').setValue(fontSize)\nexcept:\n    pass"
    tile_color 0x232323ff
    label "<Left><h2> Gunshot"
    note_font_size 31.5
    xpos -693
    ypos -554
    bdwidth 876
    bdheight 1682
    addUserKnob {20 F_VFX l BackdropNode}
    addUserKnob {43 text l Text}
    text "<h2> Gunshot"
    addUserKnob {7 font_size l "Font Size" R 10 100}
    font_size 31.5
    addUserKnob {4 position l "" -STARTLINE M {Left Center}}
    addUserKnob {26 S01 l " " T " "}
    addUserKnob {22 grow l " <img src=\"F_scalep.png\">" -STARTLINE T "n=nuke.thisNode()\n\ndef grow(node=None,step=50):\n    try:\n        if not node:\n            n=nuke.selectedNode()\n        else:\n            n=node\n            n\['xpos'].setValue(n\['xpos'].getValue()-step)\n            n\['ypos'].setValue(n\['ypos'].getValue()-step)\n            n\['bdwidth'].setValue(n\['bdwidth'].getValue()+step*2)\n            n\['bdheight'].setValue(n\['bdheight'].getValue()+step*2)\n    except:\n        pass\ngrow(n,50)"}
    addUserKnob {22 shrink l " <img src=\"F_scalem.png\">" -STARTLINE T "n=nuke.thisNode()\n\ndef shrink(node=None,step=50):\n    try:\n        if not node:\n            n=nuke.selectedNode()\n        else:\n            n=node\n            n\['xpos'].setValue(n\['xpos'].getValue()+step)\n            n\['ypos'].setValue(n\['ypos'].getValue()+step)\n            n\['bdwidth'].setValue(n\['bdwidth'].getValue()-step*2)\n            n\['bdheight'].setValue(n\['bdheight'].getValue()-step*2)\n    except:\n        pass\nshrink(n,50)"}
    addUserKnob {22 colorandom l " <img src=\"ColorBars.png\">" -STARTLINE T "import colorsys, random\nn=nuke.thisNode()\nR,G,B= colorsys.hsv_to_rgb(random.random(),.1+random.random()*.15,.15+random.random()*.15)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ) )"}
    addUserKnob {22 darkgrey l "<font color=\"#232323\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.0, 0.0, 0.14]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 lightgrey l "<font color=\"#383838\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.0, 0.0, 0.22]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 red l "<font color=\"#8c3838\" size=6>■</font>" T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.0, 0.6, 0.55]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n" +STARTLINE}
    addUserKnob {22 orange l "<font color=\"#b28e59\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.1, 0.5, 0.7]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 yellow l "<font color=\"#ccc766\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.16, 0.5, 0.8]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 green l "<font color=\"#5d995b\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.33, 0.4, 0.6]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 cyan l "<font color=\"#72998f\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.46, 0.25, 0.6]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 blue l "<font color=\"#59687f\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.6, 0.3, 0.5]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 darkblue l "<font color=\"#63628c\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.67, 0.3, 0.55]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 magenta l "<font color=\"#927a99\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.8, 0.2, 0.6]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 pink l "<font color=\"#997a89\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.92, 0.2, 0.6]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {26 S02 l " " T " "}
    addUserKnob {26 Ftools l "" +STARTLINE T "<font color=\"#1C1C1C\"> v1.2 - Franklin VFX - 2018"}
   }
   BackdropNode {
    inputs 0
    name BackdropNode2
    knobChanged "try:\n    listenedKnobs = \['text', 'position', 'name']\n    node = nuke.thisNode()\n    name = node.knob('name').value()\n    text = node.knob('text').value()\n    position = node.knob('position').value()\n    position = \"<\" + position + \">\"\n    label = node.knob('label').value()\n    \n    if nuke.thisKnob().name() in listenedKnobs:\n        if text == \"\":\n            if node.knob('position').value() == \"left\":\n                node.knob('label').setValue()\n            else:\n                node.knob('label').setValue(position + name)\n        else:\n            if node.knob('position').value() == \"left\":\n                node.knob('label').setValue(text)\n            else:\n                node.knob('label').setValue(position + text)\n                \n    elif nuke.thisKnob().name() == 'font_size':\n        fontSize = node.knob('font_size').value()\n        node.knob('note_font_size').setValue(fontSize)\nexcept:\n    pass"
    tile_color 0x927a99ff
    note_font_size 50
    xpos -473
    ypos -221
    bdwidth 435
    bdheight 786
    z_order 1
    addUserKnob {20 F_VFX l BackdropNode}
    addUserKnob {43 text l Text}
    addUserKnob {7 font_size l "Font Size" R 10 100}
    font_size 50
    addUserKnob {4 position l "" -STARTLINE M {Left Center}}
    addUserKnob {26 S01 l " " T " "}
    addUserKnob {22 grow l " <img src=\"F_scalep.png\">" -STARTLINE T "n=nuke.thisNode()\n\ndef grow(node=None,step=50):\n    try:\n        if not node:\n            n=nuke.selectedNode()\n        else:\n            n=node\n            n\['xpos'].setValue(n\['xpos'].getValue()-step)\n            n\['ypos'].setValue(n\['ypos'].getValue()-step)\n            n\['bdwidth'].setValue(n\['bdwidth'].getValue()+step*2)\n            n\['bdheight'].setValue(n\['bdheight'].getValue()+step*2)\n    except:\n        pass\ngrow(n,50)"}
    addUserKnob {22 shrink l " <img src=\"F_scalem.png\">" -STARTLINE T "n=nuke.thisNode()\n\ndef shrink(node=None,step=50):\n    try:\n        if not node:\n            n=nuke.selectedNode()\n        else:\n            n=node\n            n\['xpos'].setValue(n\['xpos'].getValue()+step)\n            n\['ypos'].setValue(n\['ypos'].getValue()+step)\n            n\['bdwidth'].setValue(n\['bdwidth'].getValue()-step*2)\n            n\['bdheight'].setValue(n\['bdheight'].getValue()-step*2)\n    except:\n        pass\nshrink(n,50)"}
    addUserKnob {22 colorandom l " <img src=\"ColorBars.png\">" -STARTLINE T "import colorsys, random\nn=nuke.thisNode()\nR,G,B= colorsys.hsv_to_rgb(random.random(),.1+random.random()*.15,.15+random.random()*.15)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ) )"}
    addUserKnob {22 darkgrey l "<font color=\"#232323\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.0, 0.0, 0.14]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 lightgrey l "<font color=\"#383838\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.0, 0.0, 0.22]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 red l "<font color=\"#8c3838\" size=6>■</font>" T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.0, 0.6, 0.55]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n" +STARTLINE}
    addUserKnob {22 orange l "<font color=\"#b28e59\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.1, 0.5, 0.7]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 yellow l "<font color=\"#ccc766\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.16, 0.5, 0.8]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 green l "<font color=\"#5d995b\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.33, 0.4, 0.6]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 cyan l "<font color=\"#72998f\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.46, 0.25, 0.6]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 blue l "<font color=\"#59687f\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.6, 0.3, 0.5]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 darkblue l "<font color=\"#63628c\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.67, 0.3, 0.55]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 magenta l "<font color=\"#927a99\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.8, 0.2, 0.6]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 pink l "<font color=\"#997a89\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.92, 0.2, 0.6]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {26 S02 l " " T " "}
    addUserKnob {26 Ftools l "" +STARTLINE T "<font color=\"#1C1C1C\"> v1.2 - Franklin VFX - 2018"}
   }
   Constant {
    inputs 0
    channels rgb
    name Constant13
    xpos -643
    ypos 714
   }
   AdjBBox {
    numpixels {{size_bbox}}
    name AdjBBox13
    xpos -643
    ypos 849
   }
   Dot {
    name Dot78
    xpos -609
    ypos 987
   }
   Axis3 {
    inputs 0
    useMatrix true
    matrix {
        {{parent.cCard3D_1.matrix} {parent.cCard3D_1.matrix} {parent.cCard3D_1.matrix} {parent.cCard3D_1.matrix}}
        {{parent.cCard3D_1.matrix} {parent.cCard3D_1.matrix} {parent.cCard3D_1.matrix} {parent.cCard3D_1.matrix}}
        {{parent.cCard3D_1.matrix} {parent.cCard3D_1.matrix} {parent.cCard3D_1.matrix} {parent.cCard3D_1.matrix}}
        {{parent.cCard3D_1.matrix} {parent.cCard3D_1.matrix} {parent.cCard3D_1.matrix} {parent.cCard3D_1.matrix}}
      }
    name Axis14
    xpos -203
    ypos -90
   }
set N38a1bce0 [stack 0]
push 0
   Input {
    inputs 0
    name top
    xpos -283
    ypos -1243
    number 1
   }
   TimeOffset {
    time_offset {{"shot_\[value shotnmbr]==0 ? 0 : shot_\[value shotnmbr]-1"}}
    time ""
    name CTimeOffset1
    label "shot: \[value shotnmbr]\non frame \[value time_offset]"
    xpos -283
    ypos -924
    addUserKnob {20 User}
    addUserKnob {3 shotnmbr l "shot "}
    shotnmbr {{shotcount}}
    addUserKnob {3 ref}
    ref {{time_offset+1}}
   }
   Group {
    name DecimalTimeOffset1
    tile_color 0xafa35dff
    label "random asset"
    note_font "Bitstream Vera Sans Bold"
    xpos -283
    ypos -841
    addUserKnob {20 User}
    addUserKnob {7 decimal l "time offset (decimal)"}
    decimal {{random(shotcount*seed)}}
    addUserKnob {26 ""}
    addUserKnob {26 _1 l "" +STARTLINE T "Chris Fryer | 2020\nupdated by Yorben Otto | 2024"}
   }
    Input {
     inputs 0
     name Input1
     xpos 426
     ypos -793
    }
    TimeOffset {
     time_offset {{(-floor(parent.decimal))*(DecimalTimeOffset1.decimal<0)}}
     time ""
     name TimeOffset1
     xpos 426
     ypos -675
    }
    Dot {
     name Dot6
     xpos 460
     ypos -635
    }
set N38a5b540 [stack 0]
    Dot {
     name Dot5
     xpos 350
     ypos -635
    }
    Dot {
     name Dot7
     xpos 350
     ypos -365
    }
push $N38a5b540
    Dot {
     name Dot1
     xpos 572
     ypos -635
    }
    TimeBlur {
     divisions 2
     shutter {{(parent.decimal-(floor(parent.decimal)))*2}}
     shutteroffset start
     shuttercustomoffset 0
     name TimeBlur1
     xpos 538
     ypos -558
    }
    Dot {
     name Dot2
     xpos 572
     ypos -490
    }
push $N38a5b540
    TimeBlur {
     divisions 2
     shutter {{parent.decimal*2}}
     shutteroffset start
     shuttercustomoffset 0
     name TimeBlur8
     xpos 426
     ypos -556
    }
    Switch {
     inputs 2
     which {{parent.decimal<0}}
     name Switch1
     xpos 426
     ypos -494
    }
    Multiply {
     value {{parent.TimeBlur8.divisions}}
     name Multiply6
     xpos 426
     ypos -436
    }
    Merge2 {
     inputs 2
     operation from
     name Merge6
     xpos 426
     ypos -369
    }
set N55e0c160 [stack 0]
    Output {
     name Output1
     xpos 426
     ypos -221
    }
push $N55e0c160
push $N55e0c160
    Viewer {
     inputs 2
     frame_range 1-100
     name Viewer1
     xpos 675
     ypos -246
    }
   end_group
   NoTimeBlur {
    name NoTimeBlur1
    xpos -283
    ypos -779
   }
   Transform {
    scale {{0.05+(0.05*(((parent.DecimalTimeOffset13.decimal-0.5)*2)*ScaleVariationSmoke))}}
    center {{root.width/2 x1015 2304} {root.height/2}}
    shutteroffset centred
    name Transform44
    xpos -283
    ypos -152
   }
   Card3D {
    inputs 3
    rot_order ZYX
    translate {0 0 0}
    rotate {90 0 0}
    shutteroffset centred
    name cCard3D25
    tile_color 0x7b1d1dff
    xpos -283
    ypos 11
    addUserKnob {20 User l parent}
    addUserKnob {22 python_button l "set parent" t "select parent node, and press this button to set the selected node as parent" +INVISIBLE T "n = nuke.selectedNode()\['name'].getValue()\nnuke.thisNode()\['string'].setValue(n)" +STARTLINE}
    addUserKnob {1 string l parent +INVISIBLE}
    string null
    addUserKnob {3 ref l "ref frame"}
    ref 1015
   }
   Transform {
    translate {{"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].translate.x(ref)\}]"} {"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].translate.y(ref)\}]"}}
    rotate {{"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].rotate-\[value parent_gun].rotate(ref)\}]"}}
    scale {{"\[if \{\[value parent_gun]==\"null\"\} \{return 1\} \{return 1+(\[value parent_gun].scale-\[value parent_gun].scale(ref))\}]"}}
    center {{"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].center.x(ref)\}]"} {"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].center.y(ref)\}]"}}
    name Transform_GUNMatchMove37
    xpos -283
    ypos 126
    addUserKnob {20 User l parent}
    addUserKnob {3 ref}
    ref {{parent.CTimeOffset.ref}}
   }
   Transform {
    translate {{"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].translate.x-\[value parent_env].translate.x(ref)\}]"} {"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].translate.y-\[value parent_env].translate.y(ref)\}]"}}
    rotate {{"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].rotate-\[value parent_env].rotate(ref)\}]"}}
    scale {{"\[if \{\[value parent_gun]==\"null\"\} \{return 1\} \{return 1+(\[value parent_env].scale-\[value parent_env].scale(ref))\}]"}}
    center {{"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].center.x(ref)\}]"} {"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].center.y(ref)\}]"}}
    motionblur 0.2
    shutter {{SmokeMB*0.5}}
    shutteroffset centred
    name Transform_ENVMatchMove37
    label "\n"
    xpos -283
    ypos 255
    addUserKnob {20 User l parent}
    addUserKnob {3 ref}
    ref {{parent.CTimeOffset.ref}}
   }
   Transform {
    translate {{"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return -((root.width/2)-(\[value parent_gun].center.x(1)+\[value parent_gun].translate.x(1)))\}]"} {"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return -((root.height/2)-(\[value parent_gun].center.y(1)+\[value parent_gun].translate.y(1)))\}]"}}
    name Transform_GUNMatchMove6
    label "alignment correction"
    xpos -283
    ypos 344
    addUserKnob {20 User l parent}
    addUserKnob {22 python_button l "set parent" t "select parent node, and press this button to set the selected node as parent" T "n = nuke.selectedNode()\['name'].getValue()\nnuke.thisNode()\['string'].setValue(n)" +STARTLINE}
    addUserKnob {1 string l parent}
    string Transform_MatchMove10
    addUserKnob {3 ref +INVISIBLE}
    ref {{parent.cCard3D_8.ref}}
   }
   Multiply {
    value {{math_matrix.result_y_smoke(parent.CTimeOffset.ref)}}
    name Angle_reveal_top1
    label TOP
    xpos -283
    ypos 403
   }
   Remove {
    operation keep
    channels rgb
    name Remove1
    xpos -283
    ypos 514
   }
push 0
   Switch {
    inputs 2
    which {{parent.Angle_reveal_top1.value>0.001}}
    name Switch1
    xpos -283
    ypos 660
   }
   Dot {
    name Dot82
    xpos -249
    ypos 705
   }
push 0
push $N38a1bce0
push 0
   Input {
    inputs 0
    name front
    xpos -436
    ypos -1243
    number 2
   }
   TimeOffset {
    time_offset {{"shot_\[value shotnmbr]==0 ? 0 : shot_\[value shotnmbr]-1"}}
    time ""
    name CTimeOffset2
    label "shot: \[value shotnmbr]\non frame \[value time_offset]"
    xpos -436
    ypos -925
    addUserKnob {20 User}
    addUserKnob {3 shotnmbr l "shot "}
    shotnmbr {{shotcount}}
    addUserKnob {3 ref}
    ref {{time_offset+1}}
   }
   Group {
    name DecimalTimeOffset2
    tile_color 0xafa35dff
    label "random asset"
    note_font "Bitstream Vera Sans Bold"
    xpos -436
    ypos -842
    addUserKnob {20 User}
    addUserKnob {7 decimal l "time offset (decimal)"}
    decimal {{random(shotcount*seed)}}
    addUserKnob {26 ""}
    addUserKnob {26 _1 l "" +STARTLINE T "Chris Fryer | 2020\nupdated by Yorben Otto | 2024"}
   }
    Input {
     inputs 0
     name Input1
     xpos 426
     ypos -793
    }
    TimeOffset {
     time_offset {{(-floor(parent.decimal))*(DecimalTimeOffset2.decimal<0)}}
     time ""
     name TimeOffset1
     xpos 426
     ypos -675
    }
    Dot {
     name Dot6
     xpos 460
     ypos -635
    }
set N5cd57e10 [stack 0]
    Dot {
     name Dot5
     xpos 350
     ypos -635
    }
    Dot {
     name Dot7
     xpos 350
     ypos -365
    }
push $N5cd57e10
    Dot {
     name Dot1
     xpos 572
     ypos -635
    }
    TimeBlur {
     divisions 2
     shutter {{(parent.decimal-(floor(parent.decimal)))*2}}
     shutteroffset start
     shuttercustomoffset 0
     name TimeBlur1
     xpos 538
     ypos -558
    }
    Dot {
     name Dot2
     xpos 572
     ypos -490
    }
push $N5cd57e10
    TimeBlur {
     divisions 2
     shutter {{parent.decimal*2}}
     shutteroffset start
     shuttercustomoffset 0
     name TimeBlur8
     xpos 426
     ypos -556
    }
    Switch {
     inputs 2
     which {{parent.decimal<0}}
     name Switch1
     xpos 426
     ypos -494
    }
    Multiply {
     value {{parent.TimeBlur8.divisions}}
     name Multiply6
     xpos 426
     ypos -436
    }
    Merge2 {
     inputs 2
     operation from
     name Merge6
     xpos 426
     ypos -369
    }
set N5cd99d50 [stack 0]
    Output {
     name Output1
     xpos 426
     ypos -221
    }
push $N5cd99d50
push $N5cd99d50
    Viewer {
     inputs 2
     frame_range 1-100
     name Viewer1
     xpos 675
     ypos -246
    }
   end_group
   NoTimeBlur {
    name NoTimeBlur5
    xpos -436
    ypos -780
   }
   Transform {
    scale {{0.05+(0.05*(((parent.DecimalTimeOffset13.decimal-0.5)*2)*ScaleVariationSmoke))}}
    center {{root.width/2 x1015 2304} {root.height/2}}
    shutteroffset centred
    name Transform45
    xpos -436
    ypos -151
   }
   Card3D {
    inputs 3
    rot_order ZYX
    translate {0 0 0}
    rotate {0 90 0}
    shutteroffset centred
    name cCard3D26
    tile_color 0x7b1d1dff
    xpos -436
    ypos 15
    addUserKnob {20 User l parent}
    addUserKnob {22 python_button l "set parent" t "select parent node, and press this button to set the selected node as parent" +INVISIBLE T "n = nuke.selectedNode()\['name'].getValue()\nnuke.thisNode()\['string'].setValue(n)" +STARTLINE}
    addUserKnob {1 string l parent +INVISIBLE}
    string null
    addUserKnob {3 ref l "ref frame"}
    ref 1015
   }
   Transform {
    translate {{"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].translate.x(ref)\}]"} {"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].translate.y(ref)\}]"}}
    rotate {{"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].rotate-\[value parent_gun].rotate(ref)\}]"}}
    scale {{"\[if \{\[value parent_gun]==\"null\"\} \{return 1\} \{return 1+(\[value parent_gun].scale-\[value parent_gun].scale(ref))\}]"}}
    center {{"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].center.x(ref)\}]"} {"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].center.y(ref)\}]"}}
    name Transform_GUNMatchMove38
    label "\n"
    xpos -436
    ypos 124
    addUserKnob {20 User l parent}
    addUserKnob {3 ref}
    ref {{parent.CTimeOffset.ref}}
   }
   Transform {
    translate {{"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].translate.x-\[value parent_env].translate.x(ref)\}]"} {"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].translate.y-\[value parent_env].translate.y(ref)\}]"}}
    rotate {{"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].rotate-\[value parent_env].rotate(ref)\}]"}}
    scale {{"\[if \{\[value parent_gun]==\"null\"\} \{return 1\} \{return 1+(\[value parent_env].scale-\[value parent_env].scale(ref))\}]"}}
    center {{"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].center.x(ref)\}]"} {"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].center.y(ref)\}]"}}
    motionblur 0.2
    shutter {{SmokeMB*0.5}}
    shutteroffset centred
    name Transform_ENVMatchMove38
    xpos -436
    ypos 254
    addUserKnob {20 User l parent}
    addUserKnob {3 ref}
    ref {{parent.CTimeOffset.ref}}
   }
   Transform {
    translate {{"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return -((root.width/2)-(\[value parent_gun].center.x(1)+\[value parent_gun].translate.x(1)))\}]"} {"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return -((root.height/2)-(\[value parent_gun].center.y(1)+\[value parent_gun].translate.y(1)))\}]"}}
    name Transform_GUNMatchMove7
    label "alignment correction"
    xpos -436
    ypos 343
    addUserKnob {20 User l parent}
    addUserKnob {22 python_button l "set parent" t "select parent node, and press this button to set the selected node as parent" T "n = nuke.selectedNode()\['name'].getValue()\nnuke.thisNode()\['string'].setValue(n)" +STARTLINE}
    addUserKnob {1 string l parent}
    string Transform_MatchMove10
    addUserKnob {3 ref +INVISIBLE}
    ref {{parent.cCard3D_8.ref}}
   }
   Multiply {
    value {{math_matrix.result_x_smoke(parent.CTimeOffset.ref)}}
    name Angle_reveal_front1
    label FRONT
    xpos -436
    ypos 401
   }
   Remove {
    operation keep
    channels rgb
    name Remove2
    xpos -436
    ypos 511
   }
push 0
   Switch {
    inputs 2
    which {{parent.Angle_reveal_front1.value>0.001}}
    name Switch2
    xpos -436
    ypos 660
   }
   Dot {
    name Dot83
    xpos -402
    ypos 735
   }
   Input {
    inputs 0
    name side
    xpos -130
    ypos -1242
   }
   TimeOffset {
    time_offset {{"shot_\[value shotnmbr]==0 ? 0 : shot_\[value shotnmbr]-1"}}
    time ""
    name CTimeOffset
    label "shot: \[value shotnmbr]\non frame \[value time_offset]"
    xpos -130
    ypos -927
    addUserKnob {20 User}
    addUserKnob {3 shotnmbr l "shot "}
    shotnmbr {{shotcount}}
    addUserKnob {3 ref}
    ref {{time_offset+1}}
   }
   Group {
    name DecimalTimeOffset13
    tile_color 0xafa35dff
    label "random asset"
    note_font "Bitstream Vera Sans Bold"
    xpos -130
    ypos -844
    addUserKnob {20 User}
    addUserKnob {7 decimal l "time offset (decimal)"}
    decimal {{random(shotcount*seed)}}
    addUserKnob {26 ""}
    addUserKnob {26 _1 l "" +STARTLINE T "Chris Fryer | 2020\nupdated by Yorben Otto | 2024"}
   }
    Input {
     inputs 0
     name Input1
     xpos 426
     ypos -793
    }
    TimeOffset {
     time_offset {{(-floor(parent.decimal))*(DecimalTimeOffset13.decimal<0)}}
     time ""
     name TimeOffset1
     xpos 426
     ypos -675
    }
    Dot {
     name Dot6
     xpos 460
     ypos -635
    }
set N4a6e5a60 [stack 0]
    Dot {
     name Dot5
     xpos 350
     ypos -635
    }
    Dot {
     name Dot7
     xpos 350
     ypos -365
    }
push $N4a6e5a60
    Dot {
     name Dot1
     xpos 572
     ypos -635
    }
    TimeBlur {
     divisions 2
     shutter {{(parent.decimal-(floor(parent.decimal)))*2}}
     shutteroffset start
     shuttercustomoffset 0
     name TimeBlur1
     xpos 538
     ypos -558
    }
    Dot {
     name Dot2
     xpos 572
     ypos -490
    }
push $N4a6e5a60
    TimeBlur {
     divisions 2
     shutter {{parent.decimal*2}}
     shutteroffset start
     shuttercustomoffset 0
     name TimeBlur8
     xpos 426
     ypos -556
    }
    Switch {
     inputs 2
     which {{parent.decimal<0}}
     name Switch1
     xpos 426
     ypos -494
    }
    Multiply {
     value {{parent.TimeBlur8.divisions}}
     name Multiply6
     xpos 426
     ypos -436
    }
    Merge2 {
     inputs 2
     operation from
     name Merge6
     xpos 426
     ypos -369
    }
set N53d37650 [stack 0]
    Output {
     name Output1
     xpos 426
     ypos -221
    }
push $N53d37650
push $N53d37650
    Viewer {
     inputs 2
     frame_range 1-100
     name Viewer1
     xpos 675
     ypos -246
    }
   end_group
   NoTimeBlur {
    name NoTimeBlur13
    xpos -130
    ypos -782
   }
   Transform {
    scale {{0.05+(0.05*(((parent.DecimalTimeOffset13.decimal-0.5)*2)*ScaleVariationSmoke))}}
    center {{root.width/2 x1015 2304} {root.height/2}}
    shutteroffset centred
    name Transform46
    xpos -130
    ypos -155
   }
   Card3D {
    translate {{"\[if \{\[exists  parent.parent.parent.input0]\} \{return \[value \[topnode parent.parent.parent.input0].name].translate.x(ref)\} \{return 0\}]"} {"\[if \{\[exists  parent.parent.parent.input0]\} \{return \[value \[topnode parent.parent.parent.input0].name].translate.y(ref)\} \{return 0\}]"} {"\[if \{\[exists  parent.parent.parent.input0]\} \{return \[value \[topnode parent.parent.parent.input0].name].translate.z(ref)\} \{return -1\}]"}}
    rotate {{"\[if \{\[exists  parent.parent.parent.input0]\} \{return \[value \[topnode parent.parent.parent.input0].name].rotate.x(ref)\} \{return 0\}]"} {"\[if \{\[exists  parent.parent.parent.input0]\} \{return \[value \[topnode parent.parent.parent.input0].name].rotate.y(ref)\} \{return 0\}]"} {"\[if \{\[exists  parent.parent.parent.input0]\} \{return \[value \[topnode parent.parent.parent.input0].name].rotate.z(ref)\} \{return 0\}]"}}
    scaling {{"\[if \{\[exists  parent.parent.parent.input0]\} \{return \[value \[topnode parent.parent.parent.input0].name].scaling.x(ref)\} \{return 1\}]"} {"\[if \{\[exists  parent.parent.parent.input0]\} \{return \[value \[topnode parent.parent.parent.input0].name].scaling.y(ref)\} \{return 1\}]"} {"\[if \{\[exists  parent.parent.parent.input0]\} \{return \[value \[topnode parent.parent.parent.input0].name].scaling.z(ref)\} \{return 1\}]"}}
    uniform_scale {{"\[if \{\[exists  parent.parent.parent.input0]\} \{return (\[value \[topnode parent.parent.parent.input0].name].uniform_scale(ref)*25)\} \{return 25\}]"}}
    shutteroffset centred
    name cCard3D_1
    tile_color 0x7b1d1dff
    label "ref frame: \[value ref]"
    xpos -130
    ypos 2
    addUserKnob {20 User l parent}
    addUserKnob {22 python_button l "set parent" t "select parent node, and press this button to set the selected node as parent" +INVISIBLE T "n = nuke.selectedNode()\['name'].getValue()\nnuke.thisNode()\['string'].setValue(n)" +STARTLINE}
    addUserKnob {1 string l parent +INVISIBLE}
    string null
    addUserKnob {3 id l "id number"}
    id {{parent.CTimeOffset.shotnmbr}}
    addUserKnob {3 ref l "ref frame"}
    ref {{parent.CTimeOffset.ref}}
   }
   Transform {
    translate {{"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].translate.x(ref)\}]"} {"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].translate.y(ref)\}]"}}
    rotate {{"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].rotate-\[value parent_gun].rotate(ref)\}]"}}
    scale {{"\[if \{\[value parent_gun]==\"null\"\} \{return 1\} \{return 1+(\[value parent_gun].scale-\[value parent_gun].scale(ref))\}]"}}
    center {{"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].center.x(ref)\}]"} {"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].center.y(ref)\}]"}}
    name Transform_GUNMatchMove39
    label "\n"
    xpos -130
    ypos 124
    addUserKnob {20 User l parent}
    addUserKnob {3 ref}
    ref {{parent.CTimeOffset.ref}}
   }
   Transform {
    translate {{"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].translate.x-\[value parent_env].translate.x(ref)\}]"} {"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].translate.y-\[value parent_env].translate.y(ref)\}]"}}
    rotate {{"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].rotate-\[value parent_env].rotate(ref)\}]"}}
    scale {{"\[if \{\[value parent_gun]==\"null\"\} \{return 1\} \{return 1+(\[value parent_env].scale-\[value parent_env].scale(ref))\}]"}}
    center {{"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].center.x(ref)\}]"} {"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].center.y(ref)\}]"}}
    motionblur 0.2
    shutter {{SmokeMB*0.5}}
    shutteroffset centred
    name Transform_ENVMatchMove39
    xpos -130
    ypos 258
    addUserKnob {20 User l parent}
    addUserKnob {3 ref}
    ref {{parent.CTimeOffset.ref}}
   }
   Transform {
    translate {{"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return -((root.width/2)-(\[value parent_gun].center.x(1)+\[value parent_gun].translate.x(1)))\}]"} {"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return -((root.height/2)-(\[value parent_gun].center.y(1)+\[value parent_gun].translate.y(1)))\}]"}}
    name Transform_GUNMatchMove5
    label "alignment correction"
    xpos -130
    ypos 340
    addUserKnob {20 User l parent}
    addUserKnob {22 python_button l "set parent" t "select parent node, and press this button to set the selected node as parent" T "n = nuke.selectedNode()\['name'].getValue()\nnuke.thisNode()\['string'].setValue(n)" +STARTLINE}
    addUserKnob {1 string l parent}
    string Transform_MatchMove10
    addUserKnob {3 ref +INVISIBLE}
    ref {{parent.cCard3D_8.ref}}
   }
   Multiply {
    value {{math_matrix.result_z_smoke(parent.CTimeOffset.ref)}}
    name Angle_reveal_side1
    label SIDE
    xpos -130
    ypos 404
   }
   Remove {
    operation keep
    channels rgb
    name Remove39
    xpos -130
    ypos 514
   }
push 0
   Switch {
    inputs 2
    which {{parent.Angle_reveal_side1.value>0.001}}
    name Switch3
    xpos -130
    ypos 658
   }
   Merge2 {
    inputs 3+1
    operation max
    Achannels rgb
    Bchannels rgb
    output rgb
    name Merge28
    xpos -130
    ypos 731
   }
   Merge2 {
    inputs 2
    operation plus
    bbox intersection
    Achannels rgb
    Bchannels rgb
    output rgb
    name Merge29
    xpos -130
    ypos 983
   }
   Shuffle2 {
    fromInput1 {{0} B}
    fromInput2 {{0} B}
    mappings "4 rgba.red 0 0 rgba.red 0 0 rgba.green 0 1 rgba.green 0 1 rgba.blue 0 2 rgba.alpha 0 3 rgba.blue 0 2 rgba.blue 0 2"
    name Shuffle1
    xpos -130
    ypos 1021
   }
push 0
   Switch {
    inputs 2
    which {{"shot_\[value count]==0?0:frame>=shot_\[value count]"}}
    name cSwitch_13
    xpos -130
    ypos 1078
    addUserKnob {20 User}
    addUserKnob {3 count}
    count {{parent.CTimeOffset.shotnmbr}}
   }
   Output {
    name Output1
    xpos -130
    ypos 1323
   }
   StickyNote {
    inputs 0
    name StickyNote1
    label "<-- handy to break concatonation?  "
    xpos -39
    ypos 193
   }
  end_group
push 0
push $N586971d0
  PostageStamp {
   name Stamp67
   help "Stamps by Adrian Pueyo and Alexey Kuchinski.\nUpdated May 18 2021"
   onCreate "if nuke.GUI:\n    try:\n        import stamps; stamps.wiredOnCreate()\n    except:\n        pass\n"
   knobChanged "import stamps; stamps.wiredKnobChanged()"
   autolabel "nuke.thisNode().knob(\"title\").value()"
   tile_color 0x1000001
   note_font "Bitstream Vera Sans"
   note_font_size 20
   xpos 8090
   ypos -729
   hide_input true
   addUserKnob {20 wired_tab l "Wired Stamp"}
   addUserKnob {26 identifier -STARTLINE +HIDDEN T wired}
   addUserKnob {3 lockCallbacks l "" +STARTLINE +HIDDEN}
   addUserKnob {6 toReconnect -STARTLINE +HIDDEN}
   addUserKnob {1 title l Title: t "Displayed name on the Node Graph for this Stamp and its Anchor.\nIMPORTANT: This is only for display purposes, and is different from the real/internal name of the Stamps."}
   title smoke_FRONT
   addUserKnob {26 prev_title l "" +STARTLINE +HIDDEN T smoke_FRONT}
   addUserKnob {26 tags l Tags: t "Tags of this stamp's Anchor, for information purpose only.\nClick \"show anchor\" to change them." T <i>2D</i>}
   addUserKnob {26 backdrops l Backdrops: t "Labels of backdrop nodes which contain this stamp's Anchor." T "<i><Left>before or after Flare</i>"}
   addUserKnob {26 line1 l "" +STARTLINE}
   addUserKnob {6 postageStamp_show l "postage stamp" t "Enable the postage stamp thumbnail in this node.\nYou're seeing this because the class of this node includes the postage_stamp knob." +STARTLINE}
   addUserKnob {26 anchor_label l Anchor: T " "}
   addUserKnob {22 show_anchor l " show anchor " t "Show the properties panel for this Stamp's Anchor." -STARTLINE T stamps.wiredShowAnchor()}
   addUserKnob {22 zoom_anchor l "zoom anchor" t "Navigate to this Stamp's Anchor on the Node Graph." -STARTLINE T stamps.wiredZoomAnchor()}
   addUserKnob {26 stamps_label l Stamps: T " "}
   addUserKnob {22 zoomNext l " zoom next " t "Navigate to this Stamp's next sibling on the Node Graph." -STARTLINE T stamps.wiredZoomNext()}
   addUserKnob {22 selectSimilar l " select similar " t "Select all similar Stamps to this one on the Node Graph." -STARTLINE T stamps.wiredSelectSimilar()}
   addUserKnob {26 space_1 l "" +STARTLINE T " "}
   addUserKnob {26 reconnect_label l Reconnect: t "Reconnect by the stored Anchor name." T " "}
   addUserKnob {22 reconnect_this l this t "Reconnect this Stamp to its Anchor, by its stored Anchor name." -STARTLINE T "n = nuke.thisNode()\ntry:\n    n.setInput(0,nuke.toNode(n.knob(\"anchor\").value()))\nexcept:\n    nuke.message(\"Unable to reconnect.\")\ntry:\n    import stamps\n    stamps.wiredGetStyle(n)\nexcept:\n    pass\n"}
   addUserKnob {22 reconnect_similar l similar t "Reconnect this Stamp and similar ones to their Anchor, by their stored anchor name." -STARTLINE T stamps.wiredReconnectSimilar()}
   addUserKnob {22 reconnect_all l all t "Reconnect all the Stamps to their Anchors, by their stored anchor names." -STARTLINE T stamps.wiredReconnectAll()}
   addUserKnob {26 space_2 l "" +STARTLINE T " "}
   addUserKnob {20 advanced_reconnection l "Advanced Reconnection" n 2}
   addUserKnob {26 reconnect_by_title_label l "<font color=gold>By Title:" t "Reconnect by searching for a matching title." T " "}
   addUserKnob {22 reconnect_by_title_this l this t "Look for an Anchor that shares this Stamp's title, and connect this Stamp to it.\nIMPORTANT: Use this carefully, and only when the normal reconnection doesn't work." -STARTLINE T stamps.wiredReconnectByTitle()}
   addUserKnob {22 reconnect_by_title_similar l similar t "Look for an Anchor that shares this Stamp's title, and connect this Stamp and similar ones to it.\nIMPORTANT: Use this carefully, and only when the normal reconnection doesn't work." -STARTLINE T stamps.wiredReconnectByTitleSimilar()}
   addUserKnob {22 reconnect_by_title_selected l selected t "For each Stamp selected, look for an Anchor that shares its title, and connect to it.\nIMPORTANT: Use this carefully, and only when the normal reconnection doesn't work." -STARTLINE T stamps.wiredReconnectByTitleSelected()}
   addUserKnob {26 reconnect_by_selection_label l "<font color=orangered>By Selection:" t "Force reconnect to a selected Anchor." T " "}
   addUserKnob {22 reconnect_by_selection_this l this t "Force reconnect this Stamp to a selected Anchor, whatever its name or title.\nIMPORTANT: Use this carefully, and only when the normal reconnection doesn't work." -STARTLINE T stamps.wiredReconnectBySelection()}
   addUserKnob {22 reconnect_by_selection_similar l similar t "Force reconnect this Stamp and similar ones to a selected Anchor, whatever its name or title.\nIMPORTANT: Use this carefully, and only when the normal reconnection doesn't work." -STARTLINE T stamps.wiredReconnectBySelectionSimilar()}
   addUserKnob {22 reconnect_by_selection_selected l selected t "Force reconnect all selected Stamps to an also selected Anchor, whatever its name or title.\nIMPORTANT: Use this carefully, and only when the normal reconnection doesn't work." -STARTLINE T stamps.wiredReconnectBySelectionSelected()}
   addUserKnob {1 anchor l Anchor}
   anchor Anchor_220a2be282
   addUserKnob {6 auto_reconnect_by_title l "<font color=#ED9977>&nbsp; auto-reconnect by title" t "When creating this stamp again (like on copy-paste), auto-reconnect it by title instead of doing it by the saved anchor's name, and auto-turn this off immediately.\nIMPORTANT: Should be off by default. Only use this for setting up templates." +STARTLINE}
   addUserKnob {26 line2 l "" +STARTLINE}
   addUserKnob {22 buttonHelp l Help -STARTLINE T stamps.showHelp()}
   addUserKnob {26 version l " " t "Stamps by Adrian Pueyo and Alexey Kuchinski.\nUpdated May 18 2021." -STARTLINE T "<a href=\"http://www.nukepedia.com/gizmos/other/stamps\" style=\"color:#666;text-decoration: none;\"><span style=\"color:#666\"> <big>Stamps v1.1</big></b></a>"}
  }
  Dot {
   name Dot45
   xpos 8124
   ypos -681
  }
push $N58d70c10
  PostageStamp {
   name Stamp68
   help "Stamps by Adrian Pueyo and Alexey Kuchinski.\nUpdated May 18 2021"
   onCreate "if nuke.GUI:\n    try:\n        import stamps; stamps.wiredOnCreate()\n    except:\n        pass\n"
   knobChanged "import stamps; stamps.wiredKnobChanged()"
   autolabel "nuke.thisNode().knob(\"title\").value()"
   tile_color 0x1000001
   note_font "Bitstream Vera Sans"
   note_font_size 20
   xpos 8215
   ypos -729
   hide_input true
   addUserKnob {20 wired_tab l "Wired Stamp"}
   addUserKnob {26 identifier -STARTLINE +HIDDEN T wired}
   addUserKnob {3 lockCallbacks l "" +STARTLINE +HIDDEN}
   addUserKnob {6 toReconnect -STARTLINE +HIDDEN}
   addUserKnob {1 title l Title: t "Displayed name on the Node Graph for this Stamp and its Anchor.\nIMPORTANT: This is only for display purposes, and is different from the real/internal name of the Stamps."}
   title smoke_TOP
   addUserKnob {26 prev_title l "" +STARTLINE +HIDDEN T smoke_TOP}
   addUserKnob {26 tags l Tags: t "Tags of this stamp's Anchor, for information purpose only.\nClick \"show anchor\" to change them." T <i>2D</i>}
   addUserKnob {26 backdrops l Backdrops: t "Labels of backdrop nodes which contain this stamp's Anchor." T "<i><Left>before or after Flare</i>"}
   addUserKnob {26 line1 l "" +STARTLINE}
   addUserKnob {6 postageStamp_show l "postage stamp" t "Enable the postage stamp thumbnail in this node.\nYou're seeing this because the class of this node includes the postage_stamp knob." +STARTLINE}
   addUserKnob {26 anchor_label l Anchor: T " "}
   addUserKnob {22 show_anchor l " show anchor " t "Show the properties panel for this Stamp's Anchor." -STARTLINE T stamps.wiredShowAnchor()}
   addUserKnob {22 zoom_anchor l "zoom anchor" t "Navigate to this Stamp's Anchor on the Node Graph." -STARTLINE T stamps.wiredZoomAnchor()}
   addUserKnob {26 stamps_label l Stamps: T " "}
   addUserKnob {22 zoomNext l " zoom next " t "Navigate to this Stamp's next sibling on the Node Graph." -STARTLINE T stamps.wiredZoomNext()}
   addUserKnob {22 selectSimilar l " select similar " t "Select all similar Stamps to this one on the Node Graph." -STARTLINE T stamps.wiredSelectSimilar()}
   addUserKnob {26 space_1 l "" +STARTLINE T " "}
   addUserKnob {26 reconnect_label l Reconnect: t "Reconnect by the stored Anchor name." T " "}
   addUserKnob {22 reconnect_this l this t "Reconnect this Stamp to its Anchor, by its stored Anchor name." -STARTLINE T "n = nuke.thisNode()\ntry:\n    n.setInput(0,nuke.toNode(n.knob(\"anchor\").value()))\nexcept:\n    nuke.message(\"Unable to reconnect.\")\ntry:\n    import stamps\n    stamps.wiredGetStyle(n)\nexcept:\n    pass\n"}
   addUserKnob {22 reconnect_similar l similar t "Reconnect this Stamp and similar ones to their Anchor, by their stored anchor name." -STARTLINE T stamps.wiredReconnectSimilar()}
   addUserKnob {22 reconnect_all l all t "Reconnect all the Stamps to their Anchors, by their stored anchor names." -STARTLINE T stamps.wiredReconnectAll()}
   addUserKnob {26 space_2 l "" +STARTLINE T " "}
   addUserKnob {20 advanced_reconnection l "Advanced Reconnection" n 2}
   addUserKnob {26 reconnect_by_title_label l "<font color=gold>By Title:" t "Reconnect by searching for a matching title." T " "}
   addUserKnob {22 reconnect_by_title_this l this t "Look for an Anchor that shares this Stamp's title, and connect this Stamp to it.\nIMPORTANT: Use this carefully, and only when the normal reconnection doesn't work." -STARTLINE T stamps.wiredReconnectByTitle()}
   addUserKnob {22 reconnect_by_title_similar l similar t "Look for an Anchor that shares this Stamp's title, and connect this Stamp and similar ones to it.\nIMPORTANT: Use this carefully, and only when the normal reconnection doesn't work." -STARTLINE T stamps.wiredReconnectByTitleSimilar()}
   addUserKnob {22 reconnect_by_title_selected l selected t "For each Stamp selected, look for an Anchor that shares its title, and connect to it.\nIMPORTANT: Use this carefully, and only when the normal reconnection doesn't work." -STARTLINE T stamps.wiredReconnectByTitleSelected()}
   addUserKnob {26 reconnect_by_selection_label l "<font color=orangered>By Selection:" t "Force reconnect to a selected Anchor." T " "}
   addUserKnob {22 reconnect_by_selection_this l this t "Force reconnect this Stamp to a selected Anchor, whatever its name or title.\nIMPORTANT: Use this carefully, and only when the normal reconnection doesn't work." -STARTLINE T stamps.wiredReconnectBySelection()}
   addUserKnob {22 reconnect_by_selection_similar l similar t "Force reconnect this Stamp and similar ones to a selected Anchor, whatever its name or title.\nIMPORTANT: Use this carefully, and only when the normal reconnection doesn't work." -STARTLINE T stamps.wiredReconnectBySelectionSimilar()}
   addUserKnob {22 reconnect_by_selection_selected l selected t "Force reconnect all selected Stamps to an also selected Anchor, whatever its name or title.\nIMPORTANT: Use this carefully, and only when the normal reconnection doesn't work." -STARTLINE T stamps.wiredReconnectBySelectionSelected()}
   addUserKnob {1 anchor l Anchor}
   anchor Anchor_25b668170c
   addUserKnob {6 auto_reconnect_by_title l "<font color=#ED9977>&nbsp; auto-reconnect by title" t "When creating this stamp again (like on copy-paste), auto-reconnect it by title instead of doing it by the saved anchor's name, and auto-turn this off immediately.\nIMPORTANT: Should be off by default. Only use this for setting up templates." +STARTLINE}
   addUserKnob {26 line2 l "" +STARTLINE}
   addUserKnob {22 buttonHelp l Help -STARTLINE T stamps.showHelp()}
   addUserKnob {26 version l " " t "Stamps by Adrian Pueyo and Alexey Kuchinski.\nUpdated May 18 2021." -STARTLINE T "<a href=\"http://www.nukepedia.com/gizmos/other/stamps\" style=\"color:#666;text-decoration: none;\"><span style=\"color:#666\"> <big>Stamps v1.1</big></b></a>"}
  }
push $N56244930
  PostageStamp {
   name Stamp69
   help "Stamps by Adrian Pueyo and Alexey Kuchinski.\nUpdated May 18 2021"
   onCreate "if nuke.GUI:\n    try:\n        import stamps; stamps.wiredOnCreate()\n    except:\n        pass\n"
   knobChanged "import stamps; stamps.wiredKnobChanged()"
   autolabel "nuke.thisNode().knob(\"title\").value()"
   tile_color 0x1000001
   note_font "Bitstream Vera Sans"
   note_font_size 20
   xpos 8333
   ypos -731
   hide_input true
   addUserKnob {20 wired_tab l "Wired Stamp"}
   addUserKnob {26 identifier -STARTLINE +HIDDEN T wired}
   addUserKnob {3 lockCallbacks l "" +STARTLINE +HIDDEN}
   addUserKnob {6 toReconnect -STARTLINE +HIDDEN}
   addUserKnob {1 title l Title: t "Displayed name on the Node Graph for this Stamp and its Anchor.\nIMPORTANT: This is only for display purposes, and is different from the real/internal name of the Stamps."}
   title smoke_SIDE
   addUserKnob {26 prev_title l "" +STARTLINE +HIDDEN T smoke_SIDE}
   addUserKnob {26 tags l Tags: t "Tags of this stamp's Anchor, for information purpose only.\nClick \"show anchor\" to change them." T <i>2D</i>}
   addUserKnob {26 backdrops l Backdrops: t "Labels of backdrop nodes which contain this stamp's Anchor." T "<i><Left>before or after Flare</i>"}
   addUserKnob {26 line1 l "" +STARTLINE}
   addUserKnob {6 postageStamp_show l "postage stamp" t "Enable the postage stamp thumbnail in this node.\nYou're seeing this because the class of this node includes the postage_stamp knob." +STARTLINE}
   addUserKnob {26 anchor_label l Anchor: T " "}
   addUserKnob {22 show_anchor l " show anchor " t "Show the properties panel for this Stamp's Anchor." -STARTLINE T stamps.wiredShowAnchor()}
   addUserKnob {22 zoom_anchor l "zoom anchor" t "Navigate to this Stamp's Anchor on the Node Graph." -STARTLINE T stamps.wiredZoomAnchor()}
   addUserKnob {26 stamps_label l Stamps: T " "}
   addUserKnob {22 zoomNext l " zoom next " t "Navigate to this Stamp's next sibling on the Node Graph." -STARTLINE T stamps.wiredZoomNext()}
   addUserKnob {22 selectSimilar l " select similar " t "Select all similar Stamps to this one on the Node Graph." -STARTLINE T stamps.wiredSelectSimilar()}
   addUserKnob {26 space_1 l "" +STARTLINE T " "}
   addUserKnob {26 reconnect_label l Reconnect: t "Reconnect by the stored Anchor name." T " "}
   addUserKnob {22 reconnect_this l this t "Reconnect this Stamp to its Anchor, by its stored Anchor name." -STARTLINE T "n = nuke.thisNode()\ntry:\n    n.setInput(0,nuke.toNode(n.knob(\"anchor\").value()))\nexcept:\n    nuke.message(\"Unable to reconnect.\")\ntry:\n    import stamps\n    stamps.wiredGetStyle(n)\nexcept:\n    pass\n"}
   addUserKnob {22 reconnect_similar l similar t "Reconnect this Stamp and similar ones to their Anchor, by their stored anchor name." -STARTLINE T stamps.wiredReconnectSimilar()}
   addUserKnob {22 reconnect_all l all t "Reconnect all the Stamps to their Anchors, by their stored anchor names." -STARTLINE T stamps.wiredReconnectAll()}
   addUserKnob {26 space_2 l "" +STARTLINE T " "}
   addUserKnob {20 advanced_reconnection l "Advanced Reconnection" n 2}
   addUserKnob {26 reconnect_by_title_label l "<font color=gold>By Title:" t "Reconnect by searching for a matching title." T " "}
   addUserKnob {22 reconnect_by_title_this l this t "Look for an Anchor that shares this Stamp's title, and connect this Stamp to it.\nIMPORTANT: Use this carefully, and only when the normal reconnection doesn't work." -STARTLINE T stamps.wiredReconnectByTitle()}
   addUserKnob {22 reconnect_by_title_similar l similar t "Look for an Anchor that shares this Stamp's title, and connect this Stamp and similar ones to it.\nIMPORTANT: Use this carefully, and only when the normal reconnection doesn't work." -STARTLINE T stamps.wiredReconnectByTitleSimilar()}
   addUserKnob {22 reconnect_by_title_selected l selected t "For each Stamp selected, look for an Anchor that shares its title, and connect to it.\nIMPORTANT: Use this carefully, and only when the normal reconnection doesn't work." -STARTLINE T stamps.wiredReconnectByTitleSelected()}
   addUserKnob {26 reconnect_by_selection_label l "<font color=orangered>By Selection:" t "Force reconnect to a selected Anchor." T " "}
   addUserKnob {22 reconnect_by_selection_this l this t "Force reconnect this Stamp to a selected Anchor, whatever its name or title.\nIMPORTANT: Use this carefully, and only when the normal reconnection doesn't work." -STARTLINE T stamps.wiredReconnectBySelection()}
   addUserKnob {22 reconnect_by_selection_similar l similar t "Force reconnect this Stamp and similar ones to a selected Anchor, whatever its name or title.\nIMPORTANT: Use this carefully, and only when the normal reconnection doesn't work." -STARTLINE T stamps.wiredReconnectBySelectionSimilar()}
   addUserKnob {22 reconnect_by_selection_selected l selected t "Force reconnect all selected Stamps to an also selected Anchor, whatever its name or title.\nIMPORTANT: Use this carefully, and only when the normal reconnection doesn't work." -STARTLINE T stamps.wiredReconnectBySelectionSelected()}
   addUserKnob {1 anchor l Anchor}
   anchor Anchor_232c9aab88
   addUserKnob {6 auto_reconnect_by_title l "<font color=#ED9977>&nbsp; auto-reconnect by title" t "When creating this stamp again (like on copy-paste), auto-reconnect it by title instead of doing it by the saved anchor's name, and auto-turn this off immediately.\nIMPORTANT: Should be off by default. Only use this for setting up templates." +STARTLINE}
   addUserKnob {26 line2 l "" +STARTLINE}
   addUserKnob {22 buttonHelp l Help -STARTLINE T stamps.showHelp()}
   addUserKnob {26 version l " " t "Stamps by Adrian Pueyo and Alexey Kuchinski.\nUpdated May 18 2021." -STARTLINE T "<a href=\"http://www.nukepedia.com/gizmos/other/stamps\" style=\"color:#666;text-decoration: none;\"><span style=\"color:#666\"> <big>Stamps v1.1</big></b></a>"}
  }
  Dot {
   name Dot46
   xpos 8367
   ypos -681
  }
  Group {
   inputs 3
   name gunshot23
   label "shot: \[value shotcount]\non frame: \[value shotstart]\n"
   xpos 8215
   ypos -654
   addUserKnob {20 User}
   addUserKnob {3 shotcount l shot}
   shotcount 23
   addUserKnob {3 shotstart l frame +INVISIBLE}
   shotstart {{"shotcount==0 ? 0 : shot\[value shotcount]-1" i}}
  }
   BackdropNode {
    inputs 0
    name BackdropNode19
    knobChanged "try:\n    listenedKnobs = \['text', 'position', 'name']\n    node = nuke.thisNode()\n    name = node.knob('name').value()\n    text = node.knob('text').value()\n    position = node.knob('position').value()\n    position = \"<\" + position + \">\"\n    label = node.knob('label').value()\n    \n    if nuke.thisKnob().name() in listenedKnobs:\n        if text == \"\":\n            if node.knob('position').value() == \"left\":\n                node.knob('label').setValue()\n            else:\n                node.knob('label').setValue(position + name)\n        else:\n            if node.knob('position').value() == \"left\":\n                node.knob('label').setValue(text)\n            else:\n                node.knob('label').setValue(position + text)\n                \n    elif nuke.thisKnob().name() == 'font_size':\n        fontSize = node.knob('font_size').value()\n        node.knob('note_font_size').setValue(fontSize)\nexcept:\n    pass"
    tile_color 0x232323ff
    label "<Left><h2> Gunshot"
    note_font_size 31.5
    xpos -693
    ypos -554
    bdwidth 876
    bdheight 1682
    addUserKnob {20 F_VFX l BackdropNode}
    addUserKnob {43 text l Text}
    text "<h2> Gunshot"
    addUserKnob {7 font_size l "Font Size" R 10 100}
    font_size 31.5
    addUserKnob {4 position l "" -STARTLINE M {Left Center}}
    addUserKnob {26 S01 l " " T " "}
    addUserKnob {22 grow l " <img src=\"F_scalep.png\">" -STARTLINE T "n=nuke.thisNode()\n\ndef grow(node=None,step=50):\n    try:\n        if not node:\n            n=nuke.selectedNode()\n        else:\n            n=node\n            n\['xpos'].setValue(n\['xpos'].getValue()-step)\n            n\['ypos'].setValue(n\['ypos'].getValue()-step)\n            n\['bdwidth'].setValue(n\['bdwidth'].getValue()+step*2)\n            n\['bdheight'].setValue(n\['bdheight'].getValue()+step*2)\n    except:\n        pass\ngrow(n,50)"}
    addUserKnob {22 shrink l " <img src=\"F_scalem.png\">" -STARTLINE T "n=nuke.thisNode()\n\ndef shrink(node=None,step=50):\n    try:\n        if not node:\n            n=nuke.selectedNode()\n        else:\n            n=node\n            n\['xpos'].setValue(n\['xpos'].getValue()+step)\n            n\['ypos'].setValue(n\['ypos'].getValue()+step)\n            n\['bdwidth'].setValue(n\['bdwidth'].getValue()-step*2)\n            n\['bdheight'].setValue(n\['bdheight'].getValue()-step*2)\n    except:\n        pass\nshrink(n,50)"}
    addUserKnob {22 colorandom l " <img src=\"ColorBars.png\">" -STARTLINE T "import colorsys, random\nn=nuke.thisNode()\nR,G,B= colorsys.hsv_to_rgb(random.random(),.1+random.random()*.15,.15+random.random()*.15)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ) )"}
    addUserKnob {22 darkgrey l "<font color=\"#232323\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.0, 0.0, 0.14]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 lightgrey l "<font color=\"#383838\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.0, 0.0, 0.22]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 red l "<font color=\"#8c3838\" size=6>■</font>" T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.0, 0.6, 0.55]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n" +STARTLINE}
    addUserKnob {22 orange l "<font color=\"#b28e59\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.1, 0.5, 0.7]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 yellow l "<font color=\"#ccc766\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.16, 0.5, 0.8]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 green l "<font color=\"#5d995b\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.33, 0.4, 0.6]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 cyan l "<font color=\"#72998f\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.46, 0.25, 0.6]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 blue l "<font color=\"#59687f\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.6, 0.3, 0.5]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 darkblue l "<font color=\"#63628c\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.67, 0.3, 0.55]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 magenta l "<font color=\"#927a99\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.8, 0.2, 0.6]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 pink l "<font color=\"#997a89\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.92, 0.2, 0.6]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {26 S02 l " " T " "}
    addUserKnob {26 Ftools l "" +STARTLINE T "<font color=\"#1C1C1C\"> v1.2 - Franklin VFX - 2018"}
   }
   BackdropNode {
    inputs 0
    name BackdropNode2
    knobChanged "try:\n    listenedKnobs = \['text', 'position', 'name']\n    node = nuke.thisNode()\n    name = node.knob('name').value()\n    text = node.knob('text').value()\n    position = node.knob('position').value()\n    position = \"<\" + position + \">\"\n    label = node.knob('label').value()\n    \n    if nuke.thisKnob().name() in listenedKnobs:\n        if text == \"\":\n            if node.knob('position').value() == \"left\":\n                node.knob('label').setValue()\n            else:\n                node.knob('label').setValue(position + name)\n        else:\n            if node.knob('position').value() == \"left\":\n                node.knob('label').setValue(text)\n            else:\n                node.knob('label').setValue(position + text)\n                \n    elif nuke.thisKnob().name() == 'font_size':\n        fontSize = node.knob('font_size').value()\n        node.knob('note_font_size').setValue(fontSize)\nexcept:\n    pass"
    tile_color 0x927a99ff
    note_font_size 50
    xpos -473
    ypos -221
    bdwidth 435
    bdheight 786
    z_order 1
    addUserKnob {20 F_VFX l BackdropNode}
    addUserKnob {43 text l Text}
    addUserKnob {7 font_size l "Font Size" R 10 100}
    font_size 50
    addUserKnob {4 position l "" -STARTLINE M {Left Center}}
    addUserKnob {26 S01 l " " T " "}
    addUserKnob {22 grow l " <img src=\"F_scalep.png\">" -STARTLINE T "n=nuke.thisNode()\n\ndef grow(node=None,step=50):\n    try:\n        if not node:\n            n=nuke.selectedNode()\n        else:\n            n=node\n            n\['xpos'].setValue(n\['xpos'].getValue()-step)\n            n\['ypos'].setValue(n\['ypos'].getValue()-step)\n            n\['bdwidth'].setValue(n\['bdwidth'].getValue()+step*2)\n            n\['bdheight'].setValue(n\['bdheight'].getValue()+step*2)\n    except:\n        pass\ngrow(n,50)"}
    addUserKnob {22 shrink l " <img src=\"F_scalem.png\">" -STARTLINE T "n=nuke.thisNode()\n\ndef shrink(node=None,step=50):\n    try:\n        if not node:\n            n=nuke.selectedNode()\n        else:\n            n=node\n            n\['xpos'].setValue(n\['xpos'].getValue()+step)\n            n\['ypos'].setValue(n\['ypos'].getValue()+step)\n            n\['bdwidth'].setValue(n\['bdwidth'].getValue()-step*2)\n            n\['bdheight'].setValue(n\['bdheight'].getValue()-step*2)\n    except:\n        pass\nshrink(n,50)"}
    addUserKnob {22 colorandom l " <img src=\"ColorBars.png\">" -STARTLINE T "import colorsys, random\nn=nuke.thisNode()\nR,G,B= colorsys.hsv_to_rgb(random.random(),.1+random.random()*.15,.15+random.random()*.15)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ) )"}
    addUserKnob {22 darkgrey l "<font color=\"#232323\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.0, 0.0, 0.14]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 lightgrey l "<font color=\"#383838\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.0, 0.0, 0.22]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 red l "<font color=\"#8c3838\" size=6>■</font>" T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.0, 0.6, 0.55]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n" +STARTLINE}
    addUserKnob {22 orange l "<font color=\"#b28e59\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.1, 0.5, 0.7]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 yellow l "<font color=\"#ccc766\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.16, 0.5, 0.8]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 green l "<font color=\"#5d995b\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.33, 0.4, 0.6]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 cyan l "<font color=\"#72998f\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.46, 0.25, 0.6]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 blue l "<font color=\"#59687f\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.6, 0.3, 0.5]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 darkblue l "<font color=\"#63628c\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.67, 0.3, 0.55]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 magenta l "<font color=\"#927a99\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.8, 0.2, 0.6]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 pink l "<font color=\"#997a89\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.92, 0.2, 0.6]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {26 S02 l " " T " "}
    addUserKnob {26 Ftools l "" +STARTLINE T "<font color=\"#1C1C1C\"> v1.2 - Franklin VFX - 2018"}
   }
   Constant {
    inputs 0
    channels rgb
    name Constant13
    xpos -643
    ypos 714
   }
   AdjBBox {
    numpixels {{size_bbox}}
    name AdjBBox13
    xpos -643
    ypos 849
   }
   Dot {
    name Dot78
    xpos -609
    ypos 987
   }
   Axis3 {
    inputs 0
    useMatrix true
    matrix {
        {{parent.cCard3D_1.matrix} {parent.cCard3D_1.matrix} {parent.cCard3D_1.matrix} {parent.cCard3D_1.matrix}}
        {{parent.cCard3D_1.matrix} {parent.cCard3D_1.matrix} {parent.cCard3D_1.matrix} {parent.cCard3D_1.matrix}}
        {{parent.cCard3D_1.matrix} {parent.cCard3D_1.matrix} {parent.cCard3D_1.matrix} {parent.cCard3D_1.matrix}}
        {{parent.cCard3D_1.matrix} {parent.cCard3D_1.matrix} {parent.cCard3D_1.matrix} {parent.cCard3D_1.matrix}}
      }
    name Axis14
    xpos -203
    ypos -90
   }
set N565118f0 [stack 0]
push 0
   Input {
    inputs 0
    name top
    xpos -283
    ypos -1243
    number 1
   }
   TimeOffset {
    time_offset {{"shot_\[value shotnmbr]==0 ? 0 : shot_\[value shotnmbr]-1"}}
    time ""
    name CTimeOffset1
    label "shot: \[value shotnmbr]\non frame \[value time_offset]"
    xpos -283
    ypos -924
    addUserKnob {20 User}
    addUserKnob {3 shotnmbr l "shot "}
    shotnmbr {{shotcount}}
    addUserKnob {3 ref}
    ref {{time_offset+1}}
   }
   Group {
    name DecimalTimeOffset1
    tile_color 0xafa35dff
    label "random asset"
    note_font "Bitstream Vera Sans Bold"
    xpos -283
    ypos -841
    addUserKnob {20 User}
    addUserKnob {7 decimal l "time offset (decimal)"}
    decimal {{random(shotcount*seed)}}
    addUserKnob {26 ""}
    addUserKnob {26 _1 l "" +STARTLINE T "Chris Fryer | 2020\nupdated by Yorben Otto | 2024"}
   }
    Input {
     inputs 0
     name Input1
     xpos 426
     ypos -793
    }
    TimeOffset {
     time_offset {{(-floor(parent.decimal))*(DecimalTimeOffset1.decimal<0)}}
     time ""
     name TimeOffset1
     xpos 426
     ypos -675
    }
    Dot {
     name Dot6
     xpos 460
     ypos -635
    }
set N56551150 [stack 0]
    Dot {
     name Dot5
     xpos 350
     ypos -635
    }
    Dot {
     name Dot7
     xpos 350
     ypos -365
    }
push $N56551150
    Dot {
     name Dot1
     xpos 572
     ypos -635
    }
    TimeBlur {
     divisions 2
     shutter {{(parent.decimal-(floor(parent.decimal)))*2}}
     shutteroffset start
     shuttercustomoffset 0
     name TimeBlur1
     xpos 538
     ypos -558
    }
    Dot {
     name Dot2
     xpos 572
     ypos -490
    }
push $N56551150
    TimeBlur {
     divisions 2
     shutter {{parent.decimal*2}}
     shutteroffset start
     shuttercustomoffset 0
     name TimeBlur8
     xpos 426
     ypos -556
    }
    Switch {
     inputs 2
     which {{parent.decimal<0}}
     name Switch1
     xpos 426
     ypos -494
    }
    Multiply {
     value {{parent.TimeBlur8.divisions}}
     name Multiply6
     xpos 426
     ypos -436
    }
    Merge2 {
     inputs 2
     operation from
     name Merge6
     xpos 426
     ypos -369
    }
set N56593090 [stack 0]
    Output {
     name Output1
     xpos 426
     ypos -221
    }
push $N56593090
push $N56593090
    Viewer {
     inputs 2
     frame_range 1-100
     name Viewer1
     xpos 675
     ypos -246
    }
   end_group
   NoTimeBlur {
    name NoTimeBlur1
    xpos -283
    ypos -779
   }
   Transform {
    scale {{0.05+(0.05*(((parent.DecimalTimeOffset13.decimal-0.5)*2)*ScaleVariationSmoke))}}
    center {{root.width/2 x1015 2304} {root.height/2}}
    shutteroffset centred
    name Transform44
    xpos -283
    ypos -152
   }
   Card3D {
    inputs 3
    rot_order ZYX
    translate {0 0 0}
    rotate {90 0 0}
    shutteroffset centred
    name cCard3D25
    tile_color 0x7b1d1dff
    xpos -283
    ypos 11
    addUserKnob {20 User l parent}
    addUserKnob {22 python_button l "set parent" t "select parent node, and press this button to set the selected node as parent" +INVISIBLE T "n = nuke.selectedNode()\['name'].getValue()\nnuke.thisNode()\['string'].setValue(n)" +STARTLINE}
    addUserKnob {1 string l parent +INVISIBLE}
    string null
    addUserKnob {3 ref l "ref frame"}
    ref 1015
   }
   Transform {
    translate {{"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].translate.x(ref)\}]"} {"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].translate.y(ref)\}]"}}
    rotate {{"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].rotate-\[value parent_gun].rotate(ref)\}]"}}
    scale {{"\[if \{\[value parent_gun]==\"null\"\} \{return 1\} \{return 1+(\[value parent_gun].scale-\[value parent_gun].scale(ref))\}]"}}
    center {{"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].center.x(ref)\}]"} {"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].center.y(ref)\}]"}}
    name Transform_GUNMatchMove37
    xpos -283
    ypos 126
    addUserKnob {20 User l parent}
    addUserKnob {3 ref}
    ref {{parent.CTimeOffset.ref}}
   }
   Transform {
    translate {{"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].translate.x-\[value parent_env].translate.x(ref)\}]"} {"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].translate.y-\[value parent_env].translate.y(ref)\}]"}}
    rotate {{"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].rotate-\[value parent_env].rotate(ref)\}]"}}
    scale {{"\[if \{\[value parent_gun]==\"null\"\} \{return 1\} \{return 1+(\[value parent_env].scale-\[value parent_env].scale(ref))\}]"}}
    center {{"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].center.x(ref)\}]"} {"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].center.y(ref)\}]"}}
    motionblur 0.2
    shutter {{SmokeMB*0.5}}
    shutteroffset centred
    name Transform_ENVMatchMove37
    label "\n"
    xpos -283
    ypos 255
    addUserKnob {20 User l parent}
    addUserKnob {3 ref}
    ref {{parent.CTimeOffset.ref}}
   }
   Transform {
    translate {{"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return -((root.width/2)-(\[value parent_gun].center.x(1)+\[value parent_gun].translate.x(1)))\}]"} {"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return -((root.height/2)-(\[value parent_gun].center.y(1)+\[value parent_gun].translate.y(1)))\}]"}}
    name Transform_GUNMatchMove6
    label "alignment correction"
    xpos -283
    ypos 344
    addUserKnob {20 User l parent}
    addUserKnob {22 python_button l "set parent" t "select parent node, and press this button to set the selected node as parent" T "n = nuke.selectedNode()\['name'].getValue()\nnuke.thisNode()\['string'].setValue(n)" +STARTLINE}
    addUserKnob {1 string l parent}
    string Transform_MatchMove10
    addUserKnob {3 ref +INVISIBLE}
    ref {{parent.cCard3D_8.ref}}
   }
   Multiply {
    value {{math_matrix.result_y_smoke(parent.CTimeOffset.ref)}}
    name Angle_reveal_top1
    label TOP
    xpos -283
    ypos 403
   }
   Remove {
    operation keep
    channels rgb
    name Remove1
    xpos -283
    ypos 514
   }
push 0
   Switch {
    inputs 2
    which {{parent.Angle_reveal_top1.value>0.001}}
    name Switch1
    xpos -283
    ypos 660
   }
   Dot {
    name Dot82
    xpos -249
    ypos 705
   }
push 0
push $N565118f0
push 0
   Input {
    inputs 0
    name front
    xpos -436
    ypos -1243
    number 2
   }
   TimeOffset {
    time_offset {{"shot_\[value shotnmbr]==0 ? 0 : shot_\[value shotnmbr]-1"}}
    time ""
    name CTimeOffset2
    label "shot: \[value shotnmbr]\non frame \[value time_offset]"
    xpos -436
    ypos -925
    addUserKnob {20 User}
    addUserKnob {3 shotnmbr l "shot "}
    shotnmbr {{shotcount}}
    addUserKnob {3 ref}
    ref {{time_offset+1}}
   }
   Group {
    name DecimalTimeOffset2
    tile_color 0xafa35dff
    label "random asset"
    note_font "Bitstream Vera Sans Bold"
    xpos -436
    ypos -842
    addUserKnob {20 User}
    addUserKnob {7 decimal l "time offset (decimal)"}
    decimal {{random(shotcount*seed)}}
    addUserKnob {26 ""}
    addUserKnob {26 _1 l "" +STARTLINE T "Chris Fryer | 2020\nupdated by Yorben Otto | 2024"}
   }
    Input {
     inputs 0
     name Input1
     xpos 426
     ypos -793
    }
    TimeOffset {
     time_offset {{(-floor(parent.decimal))*(DecimalTimeOffset2.decimal<0)}}
     time ""
     name TimeOffset1
     xpos 426
     ypos -675
    }
    Dot {
     name Dot6
     xpos 460
     ypos -635
    }
set N4acded10 [stack 0]
    Dot {
     name Dot5
     xpos 350
     ypos -635
    }
    Dot {
     name Dot7
     xpos 350
     ypos -365
    }
push $N4acded10
    Dot {
     name Dot1
     xpos 572
     ypos -635
    }
    TimeBlur {
     divisions 2
     shutter {{(parent.decimal-(floor(parent.decimal)))*2}}
     shutteroffset start
     shuttercustomoffset 0
     name TimeBlur1
     xpos 538
     ypos -558
    }
    Dot {
     name Dot2
     xpos 572
     ypos -490
    }
push $N4acded10
    TimeBlur {
     divisions 2
     shutter {{parent.decimal*2}}
     shutteroffset start
     shuttercustomoffset 0
     name TimeBlur8
     xpos 426
     ypos -556
    }
    Switch {
     inputs 2
     which {{parent.decimal<0}}
     name Switch1
     xpos 426
     ypos -494
    }
    Multiply {
     value {{parent.TimeBlur8.divisions}}
     name Multiply6
     xpos 426
     ypos -436
    }
    Merge2 {
     inputs 2
     operation from
     name Merge6
     xpos 426
     ypos -369
    }
set N5c5308f0 [stack 0]
    Output {
     name Output1
     xpos 426
     ypos -221
    }
push $N5c5308f0
push $N5c5308f0
    Viewer {
     inputs 2
     frame_range 1-100
     name Viewer1
     xpos 675
     ypos -246
    }
   end_group
   NoTimeBlur {
    name NoTimeBlur5
    xpos -436
    ypos -780
   }
   Transform {
    scale {{0.05+(0.05*(((parent.DecimalTimeOffset13.decimal-0.5)*2)*ScaleVariationSmoke))}}
    center {{root.width/2 x1015 2304} {root.height/2}}
    shutteroffset centred
    name Transform45
    xpos -436
    ypos -151
   }
   Card3D {
    inputs 3
    rot_order ZYX
    translate {0 0 0}
    rotate {0 90 0}
    shutteroffset centred
    name cCard3D26
    tile_color 0x7b1d1dff
    xpos -436
    ypos 15
    addUserKnob {20 User l parent}
    addUserKnob {22 python_button l "set parent" t "select parent node, and press this button to set the selected node as parent" +INVISIBLE T "n = nuke.selectedNode()\['name'].getValue()\nnuke.thisNode()\['string'].setValue(n)" +STARTLINE}
    addUserKnob {1 string l parent +INVISIBLE}
    string null
    addUserKnob {3 ref l "ref frame"}
    ref 1015
   }
   Transform {
    translate {{"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].translate.x(ref)\}]"} {"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].translate.y(ref)\}]"}}
    rotate {{"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].rotate-\[value parent_gun].rotate(ref)\}]"}}
    scale {{"\[if \{\[value parent_gun]==\"null\"\} \{return 1\} \{return 1+(\[value parent_gun].scale-\[value parent_gun].scale(ref))\}]"}}
    center {{"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].center.x(ref)\}]"} {"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].center.y(ref)\}]"}}
    name Transform_GUNMatchMove38
    label "\n"
    xpos -436
    ypos 124
    addUserKnob {20 User l parent}
    addUserKnob {3 ref}
    ref {{parent.CTimeOffset.ref}}
   }
   Transform {
    translate {{"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].translate.x-\[value parent_env].translate.x(ref)\}]"} {"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].translate.y-\[value parent_env].translate.y(ref)\}]"}}
    rotate {{"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].rotate-\[value parent_env].rotate(ref)\}]"}}
    scale {{"\[if \{\[value parent_gun]==\"null\"\} \{return 1\} \{return 1+(\[value parent_env].scale-\[value parent_env].scale(ref))\}]"}}
    center {{"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].center.x(ref)\}]"} {"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].center.y(ref)\}]"}}
    motionblur 0.2
    shutter {{SmokeMB*0.5}}
    shutteroffset centred
    name Transform_ENVMatchMove38
    xpos -436
    ypos 254
    addUserKnob {20 User l parent}
    addUserKnob {3 ref}
    ref {{parent.CTimeOffset.ref}}
   }
   Transform {
    translate {{"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return -((root.width/2)-(\[value parent_gun].center.x(1)+\[value parent_gun].translate.x(1)))\}]"} {"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return -((root.height/2)-(\[value parent_gun].center.y(1)+\[value parent_gun].translate.y(1)))\}]"}}
    name Transform_GUNMatchMove7
    label "alignment correction"
    xpos -436
    ypos 343
    addUserKnob {20 User l parent}
    addUserKnob {22 python_button l "set parent" t "select parent node, and press this button to set the selected node as parent" T "n = nuke.selectedNode()\['name'].getValue()\nnuke.thisNode()\['string'].setValue(n)" +STARTLINE}
    addUserKnob {1 string l parent}
    string Transform_MatchMove10
    addUserKnob {3 ref +INVISIBLE}
    ref {{parent.cCard3D_8.ref}}
   }
   Multiply {
    value {{math_matrix.result_x_smoke(parent.CTimeOffset.ref)}}
    name Angle_reveal_front1
    label FRONT
    xpos -436
    ypos 401
   }
   Remove {
    operation keep
    channels rgb
    name Remove2
    xpos -436
    ypos 511
   }
push 0
   Switch {
    inputs 2
    which {{parent.Angle_reveal_front1.value>0.001}}
    name Switch2
    xpos -436
    ypos 660
   }
   Dot {
    name Dot83
    xpos -402
    ypos 735
   }
   Input {
    inputs 0
    name side
    xpos -130
    ypos -1242
   }
   TimeOffset {
    time_offset {{"shot_\[value shotnmbr]==0 ? 0 : shot_\[value shotnmbr]-1"}}
    time ""
    name CTimeOffset
    label "shot: \[value shotnmbr]\non frame \[value time_offset]"
    xpos -130
    ypos -927
    addUserKnob {20 User}
    addUserKnob {3 shotnmbr l "shot "}
    shotnmbr {{shotcount}}
    addUserKnob {3 ref}
    ref {{time_offset+1}}
   }
   Group {
    name DecimalTimeOffset13
    tile_color 0xafa35dff
    label "random asset"
    note_font "Bitstream Vera Sans Bold"
    xpos -130
    ypos -844
    addUserKnob {20 User}
    addUserKnob {7 decimal l "time offset (decimal)"}
    decimal {{random(shotcount*seed)}}
    addUserKnob {26 ""}
    addUserKnob {26 _1 l "" +STARTLINE T "Chris Fryer | 2020\nupdated by Yorben Otto | 2024"}
   }
    Input {
     inputs 0
     name Input1
     xpos 426
     ypos -793
    }
    TimeOffset {
     time_offset {{(-floor(parent.decimal))*(DecimalTimeOffset13.decimal<0)}}
     time ""
     name TimeOffset1
     xpos 426
     ypos -675
    }
    Dot {
     name Dot6
     xpos 460
     ypos -635
    }
set N5247c600 [stack 0]
    Dot {
     name Dot5
     xpos 350
     ypos -635
    }
    Dot {
     name Dot7
     xpos 350
     ypos -365
    }
push $N5247c600
    Dot {
     name Dot1
     xpos 572
     ypos -635
    }
    TimeBlur {
     divisions 2
     shutter {{(parent.decimal-(floor(parent.decimal)))*2}}
     shutteroffset start
     shuttercustomoffset 0
     name TimeBlur1
     xpos 538
     ypos -558
    }
    Dot {
     name Dot2
     xpos 572
     ypos -490
    }
push $N5247c600
    TimeBlur {
     divisions 2
     shutter {{parent.decimal*2}}
     shutteroffset start
     shuttercustomoffset 0
     name TimeBlur8
     xpos 426
     ypos -556
    }
    Switch {
     inputs 2
     which {{parent.decimal<0}}
     name Switch1
     xpos 426
     ypos -494
    }
    Multiply {
     value {{parent.TimeBlur8.divisions}}
     name Multiply6
     xpos 426
     ypos -436
    }
    Merge2 {
     inputs 2
     operation from
     name Merge6
     xpos 426
     ypos -369
    }
set N524be540 [stack 0]
    Output {
     name Output1
     xpos 426
     ypos -221
    }
push $N524be540
push $N524be540
    Viewer {
     inputs 2
     frame_range 1-100
     name Viewer1
     xpos 675
     ypos -246
    }
   end_group
   NoTimeBlur {
    name NoTimeBlur13
    xpos -130
    ypos -782
   }
   Transform {
    scale {{0.05+(0.05*(((parent.DecimalTimeOffset13.decimal-0.5)*2)*ScaleVariationSmoke))}}
    center {{root.width/2 x1015 2304} {root.height/2}}
    shutteroffset centred
    name Transform46
    xpos -130
    ypos -155
   }
   Card3D {
    translate {{"\[if \{\[exists  parent.parent.parent.input0]\} \{return \[value \[topnode parent.parent.parent.input0].name].translate.x(ref)\} \{return 0\}]"} {"\[if \{\[exists  parent.parent.parent.input0]\} \{return \[value \[topnode parent.parent.parent.input0].name].translate.y(ref)\} \{return 0\}]"} {"\[if \{\[exists  parent.parent.parent.input0]\} \{return \[value \[topnode parent.parent.parent.input0].name].translate.z(ref)\} \{return -1\}]"}}
    rotate {{"\[if \{\[exists  parent.parent.parent.input0]\} \{return \[value \[topnode parent.parent.parent.input0].name].rotate.x(ref)\} \{return 0\}]"} {"\[if \{\[exists  parent.parent.parent.input0]\} \{return \[value \[topnode parent.parent.parent.input0].name].rotate.y(ref)\} \{return 0\}]"} {"\[if \{\[exists  parent.parent.parent.input0]\} \{return \[value \[topnode parent.parent.parent.input0].name].rotate.z(ref)\} \{return 0\}]"}}
    scaling {{"\[if \{\[exists  parent.parent.parent.input0]\} \{return \[value \[topnode parent.parent.parent.input0].name].scaling.x(ref)\} \{return 1\}]"} {"\[if \{\[exists  parent.parent.parent.input0]\} \{return \[value \[topnode parent.parent.parent.input0].name].scaling.y(ref)\} \{return 1\}]"} {"\[if \{\[exists  parent.parent.parent.input0]\} \{return \[value \[topnode parent.parent.parent.input0].name].scaling.z(ref)\} \{return 1\}]"}}
    uniform_scale {{"\[if \{\[exists  parent.parent.parent.input0]\} \{return (\[value \[topnode parent.parent.parent.input0].name].uniform_scale(ref)*25)\} \{return 25\}]"}}
    shutteroffset centred
    name cCard3D_1
    tile_color 0x7b1d1dff
    label "ref frame: \[value ref]"
    xpos -130
    ypos 2
    addUserKnob {20 User l parent}
    addUserKnob {22 python_button l "set parent" t "select parent node, and press this button to set the selected node as parent" +INVISIBLE T "n = nuke.selectedNode()\['name'].getValue()\nnuke.thisNode()\['string'].setValue(n)" +STARTLINE}
    addUserKnob {1 string l parent +INVISIBLE}
    string null
    addUserKnob {3 id l "id number"}
    id {{parent.CTimeOffset.shotnmbr}}
    addUserKnob {3 ref l "ref frame"}
    ref {{parent.CTimeOffset.ref}}
   }
   Transform {
    translate {{"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].translate.x(ref)\}]"} {"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].translate.y(ref)\}]"}}
    rotate {{"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].rotate-\[value parent_gun].rotate(ref)\}]"}}
    scale {{"\[if \{\[value parent_gun]==\"null\"\} \{return 1\} \{return 1+(\[value parent_gun].scale-\[value parent_gun].scale(ref))\}]"}}
    center {{"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].center.x(ref)\}]"} {"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].center.y(ref)\}]"}}
    name Transform_GUNMatchMove39
    label "\n"
    xpos -130
    ypos 124
    addUserKnob {20 User l parent}
    addUserKnob {3 ref}
    ref {{parent.CTimeOffset.ref}}
   }
   Transform {
    translate {{"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].translate.x-\[value parent_env].translate.x(ref)\}]"} {"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].translate.y-\[value parent_env].translate.y(ref)\}]"}}
    rotate {{"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].rotate-\[value parent_env].rotate(ref)\}]"}}
    scale {{"\[if \{\[value parent_gun]==\"null\"\} \{return 1\} \{return 1+(\[value parent_env].scale-\[value parent_env].scale(ref))\}]"}}
    center {{"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].center.x(ref)\}]"} {"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].center.y(ref)\}]"}}
    motionblur 0.2
    shutter {{SmokeMB*0.5}}
    shutteroffset centred
    name Transform_ENVMatchMove39
    xpos -130
    ypos 258
    addUserKnob {20 User l parent}
    addUserKnob {3 ref}
    ref {{parent.CTimeOffset.ref}}
   }
   Transform {
    translate {{"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return -((root.width/2)-(\[value parent_gun].center.x(1)+\[value parent_gun].translate.x(1)))\}]"} {"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return -((root.height/2)-(\[value parent_gun].center.y(1)+\[value parent_gun].translate.y(1)))\}]"}}
    name Transform_GUNMatchMove5
    label "alignment correction"
    xpos -130
    ypos 340
    addUserKnob {20 User l parent}
    addUserKnob {22 python_button l "set parent" t "select parent node, and press this button to set the selected node as parent" T "n = nuke.selectedNode()\['name'].getValue()\nnuke.thisNode()\['string'].setValue(n)" +STARTLINE}
    addUserKnob {1 string l parent}
    string Transform_MatchMove10
    addUserKnob {3 ref +INVISIBLE}
    ref {{parent.cCard3D_8.ref}}
   }
   Multiply {
    value {{math_matrix.result_z_smoke(parent.CTimeOffset.ref)}}
    name Angle_reveal_side1
    label SIDE
    xpos -130
    ypos 404
   }
   Remove {
    operation keep
    channels rgb
    name Remove39
    xpos -130
    ypos 514
   }
push 0
   Switch {
    inputs 2
    which {{parent.Angle_reveal_side1.value>0.001}}
    name Switch3
    xpos -130
    ypos 658
   }
   Merge2 {
    inputs 3+1
    operation max
    Achannels rgb
    Bchannels rgb
    output rgb
    name Merge28
    xpos -130
    ypos 731
   }
   Merge2 {
    inputs 2
    operation plus
    bbox intersection
    Achannels rgb
    Bchannels rgb
    output rgb
    name Merge29
    xpos -130
    ypos 983
   }
   Shuffle2 {
    fromInput1 {{0} B}
    fromInput2 {{0} B}
    mappings "4 rgba.red 0 0 rgba.red 0 0 rgba.green 0 1 rgba.green 0 1 rgba.blue 0 2 rgba.alpha 0 3 rgba.blue 0 2 rgba.blue 0 2"
    name Shuffle1
    xpos -130
    ypos 1021
   }
push 0
   Switch {
    inputs 2
    which {{"shot_\[value count]==0?0:frame>=shot_\[value count]"}}
    name cSwitch_13
    xpos -130
    ypos 1078
    addUserKnob {20 User}
    addUserKnob {3 count}
    count {{parent.CTimeOffset.shotnmbr}}
   }
   Output {
    name Output1
    xpos -130
    ypos 1323
   }
   StickyNote {
    inputs 0
    name StickyNote1
    label "<-- handy to break concatonation?  "
    xpos -39
    ypos 193
   }
  end_group
push $N586971d0
  PostageStamp {
   name Stamp64
   help "Stamps by Adrian Pueyo and Alexey Kuchinski.\nUpdated May 18 2021"
   onCreate "if nuke.GUI:\n    try:\n        import stamps; stamps.wiredOnCreate()\n    except:\n        pass\n"
   knobChanged "import stamps; stamps.wiredKnobChanged()"
   autolabel "nuke.thisNode().knob(\"title\").value()"
   tile_color 0x1000001
   note_font "Bitstream Vera Sans"
   note_font_size 20
   xpos 7701
   ypos -726
   hide_input true
   addUserKnob {20 wired_tab l "Wired Stamp"}
   addUserKnob {26 identifier -STARTLINE +HIDDEN T wired}
   addUserKnob {3 lockCallbacks l "" +STARTLINE +HIDDEN}
   addUserKnob {6 toReconnect -STARTLINE +HIDDEN}
   addUserKnob {1 title l Title: t "Displayed name on the Node Graph for this Stamp and its Anchor.\nIMPORTANT: This is only for display purposes, and is different from the real/internal name of the Stamps."}
   title smoke_FRONT
   addUserKnob {26 prev_title l "" +STARTLINE +HIDDEN T smoke_FRONT}
   addUserKnob {26 tags l Tags: t "Tags of this stamp's Anchor, for information purpose only.\nClick \"show anchor\" to change them." T <i>2D</i>}
   addUserKnob {26 backdrops l Backdrops: t "Labels of backdrop nodes which contain this stamp's Anchor." T "<i><Left>before or after Flare</i>"}
   addUserKnob {26 line1 l "" +STARTLINE}
   addUserKnob {6 postageStamp_show l "postage stamp" t "Enable the postage stamp thumbnail in this node.\nYou're seeing this because the class of this node includes the postage_stamp knob." +STARTLINE}
   addUserKnob {26 anchor_label l Anchor: T " "}
   addUserKnob {22 show_anchor l " show anchor " t "Show the properties panel for this Stamp's Anchor." -STARTLINE T stamps.wiredShowAnchor()}
   addUserKnob {22 zoom_anchor l "zoom anchor" t "Navigate to this Stamp's Anchor on the Node Graph." -STARTLINE T stamps.wiredZoomAnchor()}
   addUserKnob {26 stamps_label l Stamps: T " "}
   addUserKnob {22 zoomNext l " zoom next " t "Navigate to this Stamp's next sibling on the Node Graph." -STARTLINE T stamps.wiredZoomNext()}
   addUserKnob {22 selectSimilar l " select similar " t "Select all similar Stamps to this one on the Node Graph." -STARTLINE T stamps.wiredSelectSimilar()}
   addUserKnob {26 space_1 l "" +STARTLINE T " "}
   addUserKnob {26 reconnect_label l Reconnect: t "Reconnect by the stored Anchor name." T " "}
   addUserKnob {22 reconnect_this l this t "Reconnect this Stamp to its Anchor, by its stored Anchor name." -STARTLINE T "n = nuke.thisNode()\ntry:\n    n.setInput(0,nuke.toNode(n.knob(\"anchor\").value()))\nexcept:\n    nuke.message(\"Unable to reconnect.\")\ntry:\n    import stamps\n    stamps.wiredGetStyle(n)\nexcept:\n    pass\n"}
   addUserKnob {22 reconnect_similar l similar t "Reconnect this Stamp and similar ones to their Anchor, by their stored anchor name." -STARTLINE T stamps.wiredReconnectSimilar()}
   addUserKnob {22 reconnect_all l all t "Reconnect all the Stamps to their Anchors, by their stored anchor names." -STARTLINE T stamps.wiredReconnectAll()}
   addUserKnob {26 space_2 l "" +STARTLINE T " "}
   addUserKnob {20 advanced_reconnection l "Advanced Reconnection" n 2}
   addUserKnob {26 reconnect_by_title_label l "<font color=gold>By Title:" t "Reconnect by searching for a matching title." T " "}
   addUserKnob {22 reconnect_by_title_this l this t "Look for an Anchor that shares this Stamp's title, and connect this Stamp to it.\nIMPORTANT: Use this carefully, and only when the normal reconnection doesn't work." -STARTLINE T stamps.wiredReconnectByTitle()}
   addUserKnob {22 reconnect_by_title_similar l similar t "Look for an Anchor that shares this Stamp's title, and connect this Stamp and similar ones to it.\nIMPORTANT: Use this carefully, and only when the normal reconnection doesn't work." -STARTLINE T stamps.wiredReconnectByTitleSimilar()}
   addUserKnob {22 reconnect_by_title_selected l selected t "For each Stamp selected, look for an Anchor that shares its title, and connect to it.\nIMPORTANT: Use this carefully, and only when the normal reconnection doesn't work." -STARTLINE T stamps.wiredReconnectByTitleSelected()}
   addUserKnob {26 reconnect_by_selection_label l "<font color=orangered>By Selection:" t "Force reconnect to a selected Anchor." T " "}
   addUserKnob {22 reconnect_by_selection_this l this t "Force reconnect this Stamp to a selected Anchor, whatever its name or title.\nIMPORTANT: Use this carefully, and only when the normal reconnection doesn't work." -STARTLINE T stamps.wiredReconnectBySelection()}
   addUserKnob {22 reconnect_by_selection_similar l similar t "Force reconnect this Stamp and similar ones to a selected Anchor, whatever its name or title.\nIMPORTANT: Use this carefully, and only when the normal reconnection doesn't work." -STARTLINE T stamps.wiredReconnectBySelectionSimilar()}
   addUserKnob {22 reconnect_by_selection_selected l selected t "Force reconnect all selected Stamps to an also selected Anchor, whatever its name or title.\nIMPORTANT: Use this carefully, and only when the normal reconnection doesn't work." -STARTLINE T stamps.wiredReconnectBySelectionSelected()}
   addUserKnob {1 anchor l Anchor}
   anchor Anchor_220a2be282
   addUserKnob {6 auto_reconnect_by_title l "<font color=#ED9977>&nbsp; auto-reconnect by title" t "When creating this stamp again (like on copy-paste), auto-reconnect it by title instead of doing it by the saved anchor's name, and auto-turn this off immediately.\nIMPORTANT: Should be off by default. Only use this for setting up templates." +STARTLINE}
   addUserKnob {26 line2 l "" +STARTLINE}
   addUserKnob {22 buttonHelp l Help -STARTLINE T stamps.showHelp()}
   addUserKnob {26 version l " " t "Stamps by Adrian Pueyo and Alexey Kuchinski.\nUpdated May 18 2021." -STARTLINE T "<a href=\"http://www.nukepedia.com/gizmos/other/stamps\" style=\"color:#666;text-decoration: none;\"><span style=\"color:#666\"> <big>Stamps v1.1</big></b></a>"}
  }
  Dot {
   name Dot43
   xpos 7735
   ypos -678
  }
push $N58d70c10
  PostageStamp {
   name Stamp65
   help "Stamps by Adrian Pueyo and Alexey Kuchinski.\nUpdated May 18 2021"
   onCreate "if nuke.GUI:\n    try:\n        import stamps; stamps.wiredOnCreate()\n    except:\n        pass\n"
   knobChanged "import stamps; stamps.wiredKnobChanged()"
   autolabel "nuke.thisNode().knob(\"title\").value()"
   tile_color 0x1000001
   note_font "Bitstream Vera Sans"
   note_font_size 20
   xpos 7826
   ypos -726
   hide_input true
   addUserKnob {20 wired_tab l "Wired Stamp"}
   addUserKnob {26 identifier -STARTLINE +HIDDEN T wired}
   addUserKnob {3 lockCallbacks l "" +STARTLINE +HIDDEN}
   addUserKnob {6 toReconnect -STARTLINE +HIDDEN}
   addUserKnob {1 title l Title: t "Displayed name on the Node Graph for this Stamp and its Anchor.\nIMPORTANT: This is only for display purposes, and is different from the real/internal name of the Stamps."}
   title smoke_TOP
   addUserKnob {26 prev_title l "" +STARTLINE +HIDDEN T smoke_TOP}
   addUserKnob {26 tags l Tags: t "Tags of this stamp's Anchor, for information purpose only.\nClick \"show anchor\" to change them." T <i>2D</i>}
   addUserKnob {26 backdrops l Backdrops: t "Labels of backdrop nodes which contain this stamp's Anchor." T "<i><Left>before or after Flare</i>"}
   addUserKnob {26 line1 l "" +STARTLINE}
   addUserKnob {6 postageStamp_show l "postage stamp" t "Enable the postage stamp thumbnail in this node.\nYou're seeing this because the class of this node includes the postage_stamp knob." +STARTLINE}
   addUserKnob {26 anchor_label l Anchor: T " "}
   addUserKnob {22 show_anchor l " show anchor " t "Show the properties panel for this Stamp's Anchor." -STARTLINE T stamps.wiredShowAnchor()}
   addUserKnob {22 zoom_anchor l "zoom anchor" t "Navigate to this Stamp's Anchor on the Node Graph." -STARTLINE T stamps.wiredZoomAnchor()}
   addUserKnob {26 stamps_label l Stamps: T " "}
   addUserKnob {22 zoomNext l " zoom next " t "Navigate to this Stamp's next sibling on the Node Graph." -STARTLINE T stamps.wiredZoomNext()}
   addUserKnob {22 selectSimilar l " select similar " t "Select all similar Stamps to this one on the Node Graph." -STARTLINE T stamps.wiredSelectSimilar()}
   addUserKnob {26 space_1 l "" +STARTLINE T " "}
   addUserKnob {26 reconnect_label l Reconnect: t "Reconnect by the stored Anchor name." T " "}
   addUserKnob {22 reconnect_this l this t "Reconnect this Stamp to its Anchor, by its stored Anchor name." -STARTLINE T "n = nuke.thisNode()\ntry:\n    n.setInput(0,nuke.toNode(n.knob(\"anchor\").value()))\nexcept:\n    nuke.message(\"Unable to reconnect.\")\ntry:\n    import stamps\n    stamps.wiredGetStyle(n)\nexcept:\n    pass\n"}
   addUserKnob {22 reconnect_similar l similar t "Reconnect this Stamp and similar ones to their Anchor, by their stored anchor name." -STARTLINE T stamps.wiredReconnectSimilar()}
   addUserKnob {22 reconnect_all l all t "Reconnect all the Stamps to their Anchors, by their stored anchor names." -STARTLINE T stamps.wiredReconnectAll()}
   addUserKnob {26 space_2 l "" +STARTLINE T " "}
   addUserKnob {20 advanced_reconnection l "Advanced Reconnection" n 2}
   addUserKnob {26 reconnect_by_title_label l "<font color=gold>By Title:" t "Reconnect by searching for a matching title." T " "}
   addUserKnob {22 reconnect_by_title_this l this t "Look for an Anchor that shares this Stamp's title, and connect this Stamp to it.\nIMPORTANT: Use this carefully, and only when the normal reconnection doesn't work." -STARTLINE T stamps.wiredReconnectByTitle()}
   addUserKnob {22 reconnect_by_title_similar l similar t "Look for an Anchor that shares this Stamp's title, and connect this Stamp and similar ones to it.\nIMPORTANT: Use this carefully, and only when the normal reconnection doesn't work." -STARTLINE T stamps.wiredReconnectByTitleSimilar()}
   addUserKnob {22 reconnect_by_title_selected l selected t "For each Stamp selected, look for an Anchor that shares its title, and connect to it.\nIMPORTANT: Use this carefully, and only when the normal reconnection doesn't work." -STARTLINE T stamps.wiredReconnectByTitleSelected()}
   addUserKnob {26 reconnect_by_selection_label l "<font color=orangered>By Selection:" t "Force reconnect to a selected Anchor." T " "}
   addUserKnob {22 reconnect_by_selection_this l this t "Force reconnect this Stamp to a selected Anchor, whatever its name or title.\nIMPORTANT: Use this carefully, and only when the normal reconnection doesn't work." -STARTLINE T stamps.wiredReconnectBySelection()}
   addUserKnob {22 reconnect_by_selection_similar l similar t "Force reconnect this Stamp and similar ones to a selected Anchor, whatever its name or title.\nIMPORTANT: Use this carefully, and only when the normal reconnection doesn't work." -STARTLINE T stamps.wiredReconnectBySelectionSimilar()}
   addUserKnob {22 reconnect_by_selection_selected l selected t "Force reconnect all selected Stamps to an also selected Anchor, whatever its name or title.\nIMPORTANT: Use this carefully, and only when the normal reconnection doesn't work." -STARTLINE T stamps.wiredReconnectBySelectionSelected()}
   addUserKnob {1 anchor l Anchor}
   anchor Anchor_25b668170c
   addUserKnob {6 auto_reconnect_by_title l "<font color=#ED9977>&nbsp; auto-reconnect by title" t "When creating this stamp again (like on copy-paste), auto-reconnect it by title instead of doing it by the saved anchor's name, and auto-turn this off immediately.\nIMPORTANT: Should be off by default. Only use this for setting up templates." +STARTLINE}
   addUserKnob {26 line2 l "" +STARTLINE}
   addUserKnob {22 buttonHelp l Help -STARTLINE T stamps.showHelp()}
   addUserKnob {26 version l " " t "Stamps by Adrian Pueyo and Alexey Kuchinski.\nUpdated May 18 2021." -STARTLINE T "<a href=\"http://www.nukepedia.com/gizmos/other/stamps\" style=\"color:#666;text-decoration: none;\"><span style=\"color:#666\"> <big>Stamps v1.1</big></b></a>"}
  }
push $N56244930
  PostageStamp {
   name Stamp66
   help "Stamps by Adrian Pueyo and Alexey Kuchinski.\nUpdated May 18 2021"
   onCreate "if nuke.GUI:\n    try:\n        import stamps; stamps.wiredOnCreate()\n    except:\n        pass\n"
   knobChanged "import stamps; stamps.wiredKnobChanged()"
   autolabel "nuke.thisNode().knob(\"title\").value()"
   tile_color 0x1000001
   note_font "Bitstream Vera Sans"
   note_font_size 20
   xpos 7944
   ypos -728
   hide_input true
   addUserKnob {20 wired_tab l "Wired Stamp"}
   addUserKnob {26 identifier -STARTLINE +HIDDEN T wired}
   addUserKnob {3 lockCallbacks l "" +STARTLINE +HIDDEN}
   addUserKnob {6 toReconnect -STARTLINE +HIDDEN}
   addUserKnob {1 title l Title: t "Displayed name on the Node Graph for this Stamp and its Anchor.\nIMPORTANT: This is only for display purposes, and is different from the real/internal name of the Stamps."}
   title smoke_SIDE
   addUserKnob {26 prev_title l "" +STARTLINE +HIDDEN T smoke_SIDE}
   addUserKnob {26 tags l Tags: t "Tags of this stamp's Anchor, for information purpose only.\nClick \"show anchor\" to change them." T <i>2D</i>}
   addUserKnob {26 backdrops l Backdrops: t "Labels of backdrop nodes which contain this stamp's Anchor." T "<i><Left>before or after Flare</i>"}
   addUserKnob {26 line1 l "" +STARTLINE}
   addUserKnob {6 postageStamp_show l "postage stamp" t "Enable the postage stamp thumbnail in this node.\nYou're seeing this because the class of this node includes the postage_stamp knob." +STARTLINE}
   addUserKnob {26 anchor_label l Anchor: T " "}
   addUserKnob {22 show_anchor l " show anchor " t "Show the properties panel for this Stamp's Anchor." -STARTLINE T stamps.wiredShowAnchor()}
   addUserKnob {22 zoom_anchor l "zoom anchor" t "Navigate to this Stamp's Anchor on the Node Graph." -STARTLINE T stamps.wiredZoomAnchor()}
   addUserKnob {26 stamps_label l Stamps: T " "}
   addUserKnob {22 zoomNext l " zoom next " t "Navigate to this Stamp's next sibling on the Node Graph." -STARTLINE T stamps.wiredZoomNext()}
   addUserKnob {22 selectSimilar l " select similar " t "Select all similar Stamps to this one on the Node Graph." -STARTLINE T stamps.wiredSelectSimilar()}
   addUserKnob {26 space_1 l "" +STARTLINE T " "}
   addUserKnob {26 reconnect_label l Reconnect: t "Reconnect by the stored Anchor name." T " "}
   addUserKnob {22 reconnect_this l this t "Reconnect this Stamp to its Anchor, by its stored Anchor name." -STARTLINE T "n = nuke.thisNode()\ntry:\n    n.setInput(0,nuke.toNode(n.knob(\"anchor\").value()))\nexcept:\n    nuke.message(\"Unable to reconnect.\")\ntry:\n    import stamps\n    stamps.wiredGetStyle(n)\nexcept:\n    pass\n"}
   addUserKnob {22 reconnect_similar l similar t "Reconnect this Stamp and similar ones to their Anchor, by their stored anchor name." -STARTLINE T stamps.wiredReconnectSimilar()}
   addUserKnob {22 reconnect_all l all t "Reconnect all the Stamps to their Anchors, by their stored anchor names." -STARTLINE T stamps.wiredReconnectAll()}
   addUserKnob {26 space_2 l "" +STARTLINE T " "}
   addUserKnob {20 advanced_reconnection l "Advanced Reconnection" n 2}
   addUserKnob {26 reconnect_by_title_label l "<font color=gold>By Title:" t "Reconnect by searching for a matching title." T " "}
   addUserKnob {22 reconnect_by_title_this l this t "Look for an Anchor that shares this Stamp's title, and connect this Stamp to it.\nIMPORTANT: Use this carefully, and only when the normal reconnection doesn't work." -STARTLINE T stamps.wiredReconnectByTitle()}
   addUserKnob {22 reconnect_by_title_similar l similar t "Look for an Anchor that shares this Stamp's title, and connect this Stamp and similar ones to it.\nIMPORTANT: Use this carefully, and only when the normal reconnection doesn't work." -STARTLINE T stamps.wiredReconnectByTitleSimilar()}
   addUserKnob {22 reconnect_by_title_selected l selected t "For each Stamp selected, look for an Anchor that shares its title, and connect to it.\nIMPORTANT: Use this carefully, and only when the normal reconnection doesn't work." -STARTLINE T stamps.wiredReconnectByTitleSelected()}
   addUserKnob {26 reconnect_by_selection_label l "<font color=orangered>By Selection:" t "Force reconnect to a selected Anchor." T " "}
   addUserKnob {22 reconnect_by_selection_this l this t "Force reconnect this Stamp to a selected Anchor, whatever its name or title.\nIMPORTANT: Use this carefully, and only when the normal reconnection doesn't work." -STARTLINE T stamps.wiredReconnectBySelection()}
   addUserKnob {22 reconnect_by_selection_similar l similar t "Force reconnect this Stamp and similar ones to a selected Anchor, whatever its name or title.\nIMPORTANT: Use this carefully, and only when the normal reconnection doesn't work." -STARTLINE T stamps.wiredReconnectBySelectionSimilar()}
   addUserKnob {22 reconnect_by_selection_selected l selected t "Force reconnect all selected Stamps to an also selected Anchor, whatever its name or title.\nIMPORTANT: Use this carefully, and only when the normal reconnection doesn't work." -STARTLINE T stamps.wiredReconnectBySelectionSelected()}
   addUserKnob {1 anchor l Anchor}
   anchor Anchor_232c9aab88
   addUserKnob {6 auto_reconnect_by_title l "<font color=#ED9977>&nbsp; auto-reconnect by title" t "When creating this stamp again (like on copy-paste), auto-reconnect it by title instead of doing it by the saved anchor's name, and auto-turn this off immediately.\nIMPORTANT: Should be off by default. Only use this for setting up templates." +STARTLINE}
   addUserKnob {26 line2 l "" +STARTLINE}
   addUserKnob {22 buttonHelp l Help -STARTLINE T stamps.showHelp()}
   addUserKnob {26 version l " " t "Stamps by Adrian Pueyo and Alexey Kuchinski.\nUpdated May 18 2021." -STARTLINE T "<a href=\"http://www.nukepedia.com/gizmos/other/stamps\" style=\"color:#666;text-decoration: none;\"><span style=\"color:#666\"> <big>Stamps v1.1</big></b></a>"}
  }
  Dot {
   name Dot44
   xpos 7978
   ypos -678
  }
  Group {
   inputs 3
   name gunshot22
   label "shot: \[value shotcount]\non frame: \[value shotstart]\n"
   xpos 7826
   ypos -651
   addUserKnob {20 User}
   addUserKnob {3 shotcount l shot}
   shotcount 22
   addUserKnob {3 shotstart l frame +INVISIBLE}
   shotstart {{"shotcount==0 ? 0 : shot\[value shotcount]-1" i}}
  }
   BackdropNode {
    inputs 0
    name BackdropNode19
    knobChanged "try:\n    listenedKnobs = \['text', 'position', 'name']\n    node = nuke.thisNode()\n    name = node.knob('name').value()\n    text = node.knob('text').value()\n    position = node.knob('position').value()\n    position = \"<\" + position + \">\"\n    label = node.knob('label').value()\n    \n    if nuke.thisKnob().name() in listenedKnobs:\n        if text == \"\":\n            if node.knob('position').value() == \"left\":\n                node.knob('label').setValue()\n            else:\n                node.knob('label').setValue(position + name)\n        else:\n            if node.knob('position').value() == \"left\":\n                node.knob('label').setValue(text)\n            else:\n                node.knob('label').setValue(position + text)\n                \n    elif nuke.thisKnob().name() == 'font_size':\n        fontSize = node.knob('font_size').value()\n        node.knob('note_font_size').setValue(fontSize)\nexcept:\n    pass"
    tile_color 0x232323ff
    label "<Left><h2> Gunshot"
    note_font_size 31.5
    xpos -693
    ypos -554
    bdwidth 876
    bdheight 1682
    addUserKnob {20 F_VFX l BackdropNode}
    addUserKnob {43 text l Text}
    text "<h2> Gunshot"
    addUserKnob {7 font_size l "Font Size" R 10 100}
    font_size 31.5
    addUserKnob {4 position l "" -STARTLINE M {Left Center}}
    addUserKnob {26 S01 l " " T " "}
    addUserKnob {22 grow l " <img src=\"F_scalep.png\">" -STARTLINE T "n=nuke.thisNode()\n\ndef grow(node=None,step=50):\n    try:\n        if not node:\n            n=nuke.selectedNode()\n        else:\n            n=node\n            n\['xpos'].setValue(n\['xpos'].getValue()-step)\n            n\['ypos'].setValue(n\['ypos'].getValue()-step)\n            n\['bdwidth'].setValue(n\['bdwidth'].getValue()+step*2)\n            n\['bdheight'].setValue(n\['bdheight'].getValue()+step*2)\n    except:\n        pass\ngrow(n,50)"}
    addUserKnob {22 shrink l " <img src=\"F_scalem.png\">" -STARTLINE T "n=nuke.thisNode()\n\ndef shrink(node=None,step=50):\n    try:\n        if not node:\n            n=nuke.selectedNode()\n        else:\n            n=node\n            n\['xpos'].setValue(n\['xpos'].getValue()+step)\n            n\['ypos'].setValue(n\['ypos'].getValue()+step)\n            n\['bdwidth'].setValue(n\['bdwidth'].getValue()-step*2)\n            n\['bdheight'].setValue(n\['bdheight'].getValue()-step*2)\n    except:\n        pass\nshrink(n,50)"}
    addUserKnob {22 colorandom l " <img src=\"ColorBars.png\">" -STARTLINE T "import colorsys, random\nn=nuke.thisNode()\nR,G,B= colorsys.hsv_to_rgb(random.random(),.1+random.random()*.15,.15+random.random()*.15)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ) )"}
    addUserKnob {22 darkgrey l "<font color=\"#232323\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.0, 0.0, 0.14]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 lightgrey l "<font color=\"#383838\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.0, 0.0, 0.22]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 red l "<font color=\"#8c3838\" size=6>■</font>" T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.0, 0.6, 0.55]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n" +STARTLINE}
    addUserKnob {22 orange l "<font color=\"#b28e59\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.1, 0.5, 0.7]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 yellow l "<font color=\"#ccc766\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.16, 0.5, 0.8]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 green l "<font color=\"#5d995b\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.33, 0.4, 0.6]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 cyan l "<font color=\"#72998f\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.46, 0.25, 0.6]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 blue l "<font color=\"#59687f\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.6, 0.3, 0.5]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 darkblue l "<font color=\"#63628c\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.67, 0.3, 0.55]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 magenta l "<font color=\"#927a99\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.8, 0.2, 0.6]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 pink l "<font color=\"#997a89\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.92, 0.2, 0.6]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {26 S02 l " " T " "}
    addUserKnob {26 Ftools l "" +STARTLINE T "<font color=\"#1C1C1C\"> v1.2 - Franklin VFX - 2018"}
   }
   BackdropNode {
    inputs 0
    name BackdropNode2
    knobChanged "try:\n    listenedKnobs = \['text', 'position', 'name']\n    node = nuke.thisNode()\n    name = node.knob('name').value()\n    text = node.knob('text').value()\n    position = node.knob('position').value()\n    position = \"<\" + position + \">\"\n    label = node.knob('label').value()\n    \n    if nuke.thisKnob().name() in listenedKnobs:\n        if text == \"\":\n            if node.knob('position').value() == \"left\":\n                node.knob('label').setValue()\n            else:\n                node.knob('label').setValue(position + name)\n        else:\n            if node.knob('position').value() == \"left\":\n                node.knob('label').setValue(text)\n            else:\n                node.knob('label').setValue(position + text)\n                \n    elif nuke.thisKnob().name() == 'font_size':\n        fontSize = node.knob('font_size').value()\n        node.knob('note_font_size').setValue(fontSize)\nexcept:\n    pass"
    tile_color 0x927a99ff
    note_font_size 50
    xpos -473
    ypos -221
    bdwidth 435
    bdheight 786
    z_order 1
    addUserKnob {20 F_VFX l BackdropNode}
    addUserKnob {43 text l Text}
    addUserKnob {7 font_size l "Font Size" R 10 100}
    font_size 50
    addUserKnob {4 position l "" -STARTLINE M {Left Center}}
    addUserKnob {26 S01 l " " T " "}
    addUserKnob {22 grow l " <img src=\"F_scalep.png\">" -STARTLINE T "n=nuke.thisNode()\n\ndef grow(node=None,step=50):\n    try:\n        if not node:\n            n=nuke.selectedNode()\n        else:\n            n=node\n            n\['xpos'].setValue(n\['xpos'].getValue()-step)\n            n\['ypos'].setValue(n\['ypos'].getValue()-step)\n            n\['bdwidth'].setValue(n\['bdwidth'].getValue()+step*2)\n            n\['bdheight'].setValue(n\['bdheight'].getValue()+step*2)\n    except:\n        pass\ngrow(n,50)"}
    addUserKnob {22 shrink l " <img src=\"F_scalem.png\">" -STARTLINE T "n=nuke.thisNode()\n\ndef shrink(node=None,step=50):\n    try:\n        if not node:\n            n=nuke.selectedNode()\n        else:\n            n=node\n            n\['xpos'].setValue(n\['xpos'].getValue()+step)\n            n\['ypos'].setValue(n\['ypos'].getValue()+step)\n            n\['bdwidth'].setValue(n\['bdwidth'].getValue()-step*2)\n            n\['bdheight'].setValue(n\['bdheight'].getValue()-step*2)\n    except:\n        pass\nshrink(n,50)"}
    addUserKnob {22 colorandom l " <img src=\"ColorBars.png\">" -STARTLINE T "import colorsys, random\nn=nuke.thisNode()\nR,G,B= colorsys.hsv_to_rgb(random.random(),.1+random.random()*.15,.15+random.random()*.15)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ) )"}
    addUserKnob {22 darkgrey l "<font color=\"#232323\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.0, 0.0, 0.14]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 lightgrey l "<font color=\"#383838\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.0, 0.0, 0.22]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 red l "<font color=\"#8c3838\" size=6>■</font>" T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.0, 0.6, 0.55]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n" +STARTLINE}
    addUserKnob {22 orange l "<font color=\"#b28e59\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.1, 0.5, 0.7]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 yellow l "<font color=\"#ccc766\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.16, 0.5, 0.8]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 green l "<font color=\"#5d995b\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.33, 0.4, 0.6]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 cyan l "<font color=\"#72998f\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.46, 0.25, 0.6]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 blue l "<font color=\"#59687f\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.6, 0.3, 0.5]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 darkblue l "<font color=\"#63628c\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.67, 0.3, 0.55]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 magenta l "<font color=\"#927a99\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.8, 0.2, 0.6]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {22 pink l "<font color=\"#997a89\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.92, 0.2, 0.6]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
    addUserKnob {26 S02 l " " T " "}
    addUserKnob {26 Ftools l "" +STARTLINE T "<font color=\"#1C1C1C\"> v1.2 - Franklin VFX - 2018"}
   }
   Constant {
    inputs 0
    channels rgb
    name Constant13
    xpos -643
    ypos 714
   }
   AdjBBox {
    numpixels {{size_bbox}}
    name AdjBBox13
    xpos -643
    ypos 849
   }
   Dot {
    name Dot78
    xpos -609
    ypos 987
   }
   Axis3 {
    inputs 0
    useMatrix true
    matrix {
        {{parent.cCard3D_1.matrix} {parent.cCard3D_1.matrix} {parent.cCard3D_1.matrix} {parent.cCard3D_1.matrix}}
        {{parent.cCard3D_1.matrix} {parent.cCard3D_1.matrix} {parent.cCard3D_1.matrix} {parent.cCard3D_1.matrix}}
        {{parent.cCard3D_1.matrix} {parent.cCard3D_1.matrix} {parent.cCard3D_1.matrix} {parent.cCard3D_1.matrix}}
        {{parent.cCard3D_1.matrix} {parent.cCard3D_1.matrix} {parent.cCard3D_1.matrix} {parent.cCard3D_1.matrix}}
      }
    name Axis14
    xpos -203
    ypos -90
   }
set N56898720 [stack 0]
push 0
   Input {
    inputs 0
    name top
    xpos -283
    ypos -1243
    number 1
   }
   TimeOffset {
    time_offset {{"shot_\[value shotnmbr]==0 ? 0 : shot_\[value shotnmbr]-1"}}
    time ""
    name CTimeOffset1
    label "shot: \[value shotnmbr]\non frame \[value time_offset]"
    xpos -283
    ypos -924
    addUserKnob {20 User}
    addUserKnob {3 shotnmbr l "shot "}
    shotnmbr {{shotcount}}
    addUserKnob {3 ref}
    ref {{time_offset+1}}
   }
   Group {
    name DecimalTimeOffset1
    tile_color 0xafa35dff
    label "random asset"
    note_font "Bitstream Vera Sans Bold"
    xpos -283
    ypos -841
    addUserKnob {20 User}
    addUserKnob {7 decimal l "time offset (decimal)"}
    decimal {{random(shotcount*seed)}}
    addUserKnob {26 ""}
    addUserKnob {26 _1 l "" +STARTLINE T "Chris Fryer | 2020\nupdated by Yorben Otto | 2024"}
   }
    Input {
     inputs 0
     name Input1
     xpos 426
     ypos -793
    }
    TimeOffset {
     time_offset {{(-floor(parent.decimal))*(DecimalTimeOffset1.decimal<0)}}
     time ""
     name TimeOffset1
     xpos 426
     ypos -675
    }
    Dot {
     name Dot6
     xpos 460
     ypos -635
    }
set N568d7f80 [stack 0]
    Dot {
     name Dot5
     xpos 350
     ypos -635
    }
    Dot {
     name Dot7
     xpos 350
     ypos -365
    }
push $N568d7f80
    Dot {
     name Dot1
     xpos 572
     ypos -635
    }
    TimeBlur {
     divisions 2
     shutter {{(parent.decimal-(floor(parent.decimal)))*2}}
     shutteroffset start
     shuttercustomoffset 0
     name TimeBlur1
     xpos 538
     ypos -558
    }
    Dot {
     name Dot2
     xpos 572
     ypos -490
    }
push $N568d7f80
    TimeBlur {
     divisions 2
     shutter {{parent.decimal*2}}
     shutteroffset start
     shuttercustomoffset 0
     name TimeBlur8
     xpos 426
     ypos -556
    }
    Switch {
     inputs 2
     which {{parent.decimal<0}}
     name Switch1
     xpos 426
     ypos -494
    }
    Multiply {
     value {{parent.TimeBlur8.divisions}}
     name Multiply6
     xpos 426
     ypos -436
    }
    Merge2 {
     inputs 2
     operation from
     name Merge6
     xpos 426
     ypos -369
    }
set N31425b20 [stack 0]
    Output {
     name Output1
     xpos 426
     ypos -221
    }
push $N31425b20
push $N31425b20
    Viewer {
     inputs 2
     frame_range 1-100
     name Viewer1
     xpos 675
     ypos -246
    }
   end_group
   NoTimeBlur {
    name NoTimeBlur1
    xpos -283
    ypos -779
   }
   Transform {
    scale {{0.05+(0.05*(((parent.DecimalTimeOffset13.decimal-0.5)*2)*ScaleVariationSmoke))}}
    center {{root.width/2 x1015 2304} {root.height/2}}
    shutteroffset centred
    name Transform44
    xpos -283
    ypos -152
   }
   Card3D {
    inputs 3
    rot_order ZYX
    translate {0 0 0}
    rotate {90 0 0}
    shutteroffset centred
    name cCard3D25
    tile_color 0x7b1d1dff
    xpos -283
    ypos 11
    addUserKnob {20 User l parent}
    addUserKnob {22 python_button l "set parent" t "select parent node, and press this button to set the selected node as parent" +INVISIBLE T "n = nuke.selectedNode()\['name'].getValue()\nnuke.thisNode()\['string'].setValue(n)" +STARTLINE}
    addUserKnob {1 string l parent +INVISIBLE}
    string null
    addUserKnob {3 ref l "ref frame"}
    ref 1015
   }
   Transform {
    translate {{"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].translate.x(ref)\}]"} {"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].translate.y(ref)\}]"}}
    rotate {{"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].rotate-\[value parent_gun].rotate(ref)\}]"}}
    scale {{"\[if \{\[value parent_gun]==\"null\"\} \{return 1\} \{return 1+(\[value parent_gun].scale-\[value parent_gun].scale(ref))\}]"}}
    center {{"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].center.x(ref)\}]"} {"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].center.y(ref)\}]"}}
    name Transform_GUNMatchMove37
    xpos -283
    ypos 126
    addUserKnob {20 User l parent}
    addUserKnob {3 ref}
    ref {{parent.CTimeOffset.ref}}
   }
   Transform {
    translate {{"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].translate.x-\[value parent_env].translate.x(ref)\}]"} {"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].translate.y-\[value parent_env].translate.y(ref)\}]"}}
    rotate {{"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].rotate-\[value parent_env].rotate(ref)\}]"}}
    scale {{"\[if \{\[value parent_gun]==\"null\"\} \{return 1\} \{return 1+(\[value parent_env].scale-\[value parent_env].scale(ref))\}]"}}
    center {{"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].center.x(ref)\}]"} {"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].center.y(ref)\}]"}}
    motionblur 0.2
    shutter {{SmokeMB*0.5}}
    shutteroffset centred
    name Transform_ENVMatchMove37
    label "\n"
    xpos -283
    ypos 255
    addUserKnob {20 User l parent}
    addUserKnob {3 ref}
    ref {{parent.CTimeOffset.ref}}
   }
   Transform {
    translate {{"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return -((root.width/2)-(\[value parent_gun].center.x(1)+\[value parent_gun].translate.x(1)))\}]"} {"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return -((root.height/2)-(\[value parent_gun].center.y(1)+\[value parent_gun].translate.y(1)))\}]"}}
    name Transform_GUNMatchMove6
    label "alignment correction"
    xpos -283
    ypos 344
    addUserKnob {20 User l parent}
    addUserKnob {22 python_button l "set parent" t "select parent node, and press this button to set the selected node as parent" T "n = nuke.selectedNode()\['name'].getValue()\nnuke.thisNode()\['string'].setValue(n)" +STARTLINE}
    addUserKnob {1 string l parent}
    string Transform_MatchMove10
    addUserKnob {3 ref +INVISIBLE}
    ref {{parent.cCard3D_8.ref}}
   }
   Multiply {
    value {{math_matrix.result_y_smoke(parent.CTimeOffset.ref)}}
    name Angle_reveal_top1
    label TOP
    xpos -283
    ypos 403
   }
   Remove {
    operation keep
    channels rgb
    name Remove1
    xpos -283
    ypos 514
   }
push 0
   Switch {
    inputs 2
    which {{parent.Angle_reveal_top1.value>0.001}}
    name Switch1
    xpos -283
    ypos 660
   }
   Dot {
    name Dot82
    xpos -249
    ypos 705
   }
push 0
push $N56898720
push 0
   Input {
    inputs 0
    name front
    xpos -436
    ypos -1243
    number 2
   }
   TimeOffset {
    time_offset {{"shot_\[value shotnmbr]==0 ? 0 : shot_\[value shotnmbr]-1"}}
    time ""
    name CTimeOffset2
    label "shot: \[value shotnmbr]\non frame \[value time_offset]"
    xpos -436
    ypos -925
    addUserKnob {20 User}
    addUserKnob {3 shotnmbr l "shot "}
    shotnmbr {{shotcount}}
    addUserKnob {3 ref}
    ref {{time_offset+1}}
   }
   Group {
    name DecimalTimeOffset2
    tile_color 0xafa35dff
    label "random asset"
    note_font "Bitstream Vera Sans Bold"
    xpos -436
    ypos -842
    addUserKnob {20 User}
    addUserKnob {7 decimal l "time offset (decimal)"}
    decimal {{random(shotcount*seed)}}
    addUserKnob {26 ""}
    addUserKnob {26 _1 l "" +STARTLINE T "Chris Fryer | 2020\nupdated by Yorben Otto | 2024"}
   }
    Input {
     inputs 0
     name Input1
     xpos 426
     ypos -793
    }
    TimeOffset {
     time_offset {{(-floor(parent.decimal))*(DecimalTimeOffset2.decimal<0)}}
     time ""
     name TimeOffset1
     xpos 426
     ypos -675
    }
    Dot {
     name Dot6
     xpos 460
     ypos -635
    }
set N51375760 [stack 0]
    Dot {
     name Dot5
     xpos 350
     ypos -635
    }
    Dot {
     name Dot7
     xpos 350
     ypos -365
    }
push $N51375760
    Dot {
     name Dot1
     xpos 572
     ypos -635
    }
    TimeBlur {
     divisions 2
     shutter {{(parent.decimal-(floor(parent.decimal)))*2}}
     shutteroffset start
     shuttercustomoffset 0
     name TimeBlur1
     xpos 538
     ypos -558
    }
    Dot {
     name Dot2
     xpos 572
     ypos -490
    }
push $N51375760
    TimeBlur {
     divisions 2
     shutter {{parent.decimal*2}}
     shutteroffset start
     shuttercustomoffset 0
     name TimeBlur8
     xpos 426
     ypos -556
    }
    Switch {
     inputs 2
     which {{parent.decimal<0}}
     name Switch1
     xpos 426
     ypos -494
    }
    Multiply {
     value {{parent.TimeBlur8.divisions}}
     name Multiply6
     xpos 426
     ypos -436
    }
    Merge2 {
     inputs 2
     operation from
     name Merge6
     xpos 426
     ypos -369
    }
set N513b76a0 [stack 0]
    Output {
     name Output1
     xpos 426
     ypos -221
    }
push $N513b76a0
push $N513b76a0
    Viewer {
     inputs 2
     frame_range 1-100
     name Viewer1
     xpos 675
     ypos -246
    }
   end_group
   NoTimeBlur {
    name NoTimeBlur5
    xpos -436
    ypos -780
   }
   Transform {
    scale {{0.05+(0.05*(((parent.DecimalTimeOffset13.decimal-0.5)*2)*ScaleVariationSmoke))}}
    center {{root.width/2 x1015 2304} {root.height/2}}
    shutteroffset centred
    name Transform45
    xpos -436
    ypos -151
   }
   Card3D {
    inputs 3
    rot_order ZYX
    translate {0 0 0}
    rotate {0 90 0}
    shutteroffset centred
    name cCard3D26
    tile_color 0x7b1d1dff
    xpos -436
    ypos 15
    addUserKnob {20 User l parent}
    addUserKnob {22 python_button l "set parent" t "select parent node, and press this button to set the selected node as parent" +INVISIBLE T "n = nuke.selectedNode()\['name'].getValue()\nnuke.thisNode()\['string'].setValue(n)" +STARTLINE}
    addUserKnob {1 string l parent +INVISIBLE}
    string null
    addUserKnob {3 ref l "ref frame"}
    ref 1015
   }
   Transform {
    translate {{"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].translate.x(ref)\}]"} {"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].translate.y(ref)\}]"}}
    rotate {{"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].rotate-\[value parent_gun].rotate(ref)\}]"}}
    scale {{"\[if \{\[value parent_gun]==\"null\"\} \{return 1\} \{return 1+(\[value parent_gun].scale-\[value parent_gun].scale(ref))\}]"}}
    center {{"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].center.x(ref)\}]"} {"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].center.y(ref)\}]"}}
    name Transform_GUNMatchMove38
    label "\n"
    xpos -436
    ypos 124
    addUserKnob {20 User l parent}
    addUserKnob {3 ref}
    ref {{parent.CTimeOffset.ref}}
   }
   Transform {
    translate {{"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].translate.x-\[value parent_env].translate.x(ref)\}]"} {"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].translate.y-\[value parent_env].translate.y(ref)\}]"}}
    rotate {{"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].rotate-\[value parent_env].rotate(ref)\}]"}}
    scale {{"\[if \{\[value parent_gun]==\"null\"\} \{return 1\} \{return 1+(\[value parent_env].scale-\[value parent_env].scale(ref))\}]"}}
    center {{"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].center.x(ref)\}]"} {"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].center.y(ref)\}]"}}
    motionblur 0.2
    shutter {{SmokeMB*0.5}}
    shutteroffset centred
    name Transform_ENVMatchMove38
    xpos -436
    ypos 254
    addUserKnob {20 User l parent}
    addUserKnob {3 ref}
    ref {{parent.CTimeOffset.ref}}
   }
   Transform {
    translate {{"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return -((root.width/2)-(\[value parent_gun].center.x(1)+\[value parent_gun].translate.x(1)))\}]"} {"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return -((root.height/2)-(\[value parent_gun].center.y(1)+\[value parent_gun].translate.y(1)))\}]"}}
    name Transform_GUNMatchMove7
    label "alignment correction"
    xpos -436
    ypos 343
    addUserKnob {20 User l parent}
    addUserKnob {22 python_button l "set parent" t "select parent node, and press this button to set the selected node as parent" T "n = nuke.selectedNode()\['name'].getValue()\nnuke.thisNode()\['string'].setValue(n)" +STARTLINE}
    addUserKnob {1 string l parent}
    string Transform_MatchMove10
    addUserKnob {3 ref +INVISIBLE}
    ref {{parent.cCard3D_8.ref}}
   }
   Multiply {
    value {{math_matrix.result_x_smoke(parent.CTimeOffset.ref)}}
    name Angle_reveal_front1
    label FRONT
    xpos -436
    ypos 401
   }
   Remove {
    operation keep
    channels rgb
    name Remove2
    xpos -436
    ypos 511
   }
push 0
   Switch {
    inputs 2
    which {{parent.Angle_reveal_front1.value>0.001}}
    name Switch2
    xpos -436
    ypos 660
   }
   Dot {
    name Dot83
    xpos -402
    ypos 735
   }
   Input {
    inputs 0
    name side
    xpos -130
    ypos -1242
   }
   TimeOffset {
    time_offset {{"shot_\[value shotnmbr]==0 ? 0 : shot_\[value shotnmbr]-1"}}
    time ""
    name CTimeOffset
    label "shot: \[value shotnmbr]\non frame \[value time_offset]"
    xpos -130
    ypos -927
    addUserKnob {20 User}
    addUserKnob {3 shotnmbr l "shot "}
    shotnmbr {{shotcount}}
    addUserKnob {3 ref}
    ref {{time_offset+1}}
   }
   Group {
    name DecimalTimeOffset13
    tile_color 0xafa35dff
    label "random asset"
    note_font "Bitstream Vera Sans Bold"
    xpos -130
    ypos -844
    addUserKnob {20 User}
    addUserKnob {7 decimal l "time offset (decimal)"}
    decimal {{random(shotcount*seed)}}
    addUserKnob {26 ""}
    addUserKnob {26 _1 l "" +STARTLINE T "Chris Fryer | 2020\nupdated by Yorben Otto | 2024"}
   }
    Input {
     inputs 0
     name Input1
     xpos 426
     ypos -793
    }
    TimeOffset {
     time_offset {{(-floor(parent.decimal))*(DecimalTimeOffset13.decimal<0)}}
     time ""
     name TimeOffset1
     xpos 426
     ypos -675
    }
    Dot {
     name Dot6
     xpos 460
     ypos -635
    }
set N59f12f30 [stack 0]
    Dot {
     name Dot5
     xpos 350
     ypos -635
    }
    Dot {
     name Dot7
     xpos 350
     ypos -365
    }
push $N59f12f30
    Dot {
     name Dot1
     xpos 572
     ypos -635
    }
    TimeBlur {
     divisions 2
     shutter {{(parent.decimal-(floor(parent.decimal)))*2}}
     shutteroffset start
     shuttercustomoffset 0
     name TimeBlur1
     xpos 538
     ypos -558
    }
    Dot {
     name Dot2
     xpos 572
     ypos -490
    }
push $N59f12f30
    TimeBlur {
     divisions 2
     shutter {{parent.decimal*2}}
     shutteroffset start
     shuttercustomoffset 0
     name TimeBlur8
     xpos 426
     ypos -556
    }
    Switch {
     inputs 2
     which {{parent.decimal<0}}
     name Switch1
     xpos 426
     ypos -494
    }
    Multiply {
     value {{parent.TimeBlur8.divisions}}
     name Multiply6
     xpos 426
     ypos -436
    }
    Merge2 {
     inputs 2
     operation from
     name Merge6
     xpos 426
     ypos -369
    }
set N59f54e70 [stack 0]
    Output {
     name Output1
     xpos 426
     ypos -221
    }
push $N59f54e70
push $N59f54e70
    Viewer {
     inputs 2
     frame_range 1-100
     name Viewer1
     xpos 675
     ypos -246
    }
   end_group
   NoTimeBlur {
    name NoTimeBlur13
    xpos -130
    ypos -782
   }
   Transform {
    scale {{0.05+(0.05*(((parent.DecimalTimeOffset13.decimal-0.5)*2)*ScaleVariationSmoke))}}
    center {{root.width/2 x1015 2304} {root.height/2}}
    shutteroffset centred
    name Transform46
    xpos -130
    ypos -155
   }
   Card3D {
    translate {{"\[if \{\[exists  parent.parent.parent.input0]\} \{return \[value \[topnode parent.parent.parent.input0].name].translate.x(ref)\} \{return 0\}]"} {"\[if \{\[exists  parent.parent.parent.input0]\} \{return \[value \[topnode parent.parent.parent.input0].name].translate.y(ref)\} \{return 0\}]"} {"\[if \{\[exists  parent.parent.parent.input0]\} \{return \[value \[topnode parent.parent.parent.input0].name].translate.z(ref)\} \{return -1\}]"}}
    rotate {{"\[if \{\[exists  parent.parent.parent.input0]\} \{return \[value \[topnode parent.parent.parent.input0].name].rotate.x(ref)\} \{return 0\}]"} {"\[if \{\[exists  parent.parent.parent.input0]\} \{return \[value \[topnode parent.parent.parent.input0].name].rotate.y(ref)\} \{return 0\}]"} {"\[if \{\[exists  parent.parent.parent.input0]\} \{return \[value \[topnode parent.parent.parent.input0].name].rotate.z(ref)\} \{return 0\}]"}}
    scaling {{"\[if \{\[exists  parent.parent.parent.input0]\} \{return \[value \[topnode parent.parent.parent.input0].name].scaling.x(ref)\} \{return 1\}]"} {"\[if \{\[exists  parent.parent.parent.input0]\} \{return \[value \[topnode parent.parent.parent.input0].name].scaling.y(ref)\} \{return 1\}]"} {"\[if \{\[exists  parent.parent.parent.input0]\} \{return \[value \[topnode parent.parent.parent.input0].name].scaling.z(ref)\} \{return 1\}]"}}
    uniform_scale {{"\[if \{\[exists  parent.parent.parent.input0]\} \{return (\[value \[topnode parent.parent.parent.input0].name].uniform_scale(ref)*25)\} \{return 25\}]"}}
    shutteroffset centred
    name cCard3D_1
    tile_color 0x7b1d1dff
    label "ref frame: \[value ref]"
    xpos -130
    ypos 2
    addUserKnob {20 User l parent}
    addUserKnob {22 python_button l "set parent" t "select parent node, and press this button to set the selected node as parent" +INVISIBLE T "n = nuke.selectedNode()\['name'].getValue()\nnuke.thisNode()\['string'].setValue(n)" +STARTLINE}
    addUserKnob {1 string l parent +INVISIBLE}
    string null
    addUserKnob {3 id l "id number"}
    id {{parent.CTimeOffset.shotnmbr}}
    addUserKnob {3 ref l "ref frame"}
    ref {{parent.CTimeOffset.ref}}
   }
   Transform {
    translate {{"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].translate.x(ref)\}]"} {"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].translate.y(ref)\}]"}}
    rotate {{"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].rotate-\[value parent_gun].rotate(ref)\}]"}}
    scale {{"\[if \{\[value parent_gun]==\"null\"\} \{return 1\} \{return 1+(\[value parent_gun].scale-\[value parent_gun].scale(ref))\}]"}}
    center {{"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].center.x(ref)\}]"} {"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return \[value parent_gun].center.y(ref)\}]"}}
    name Transform_GUNMatchMove39
    label "\n"
    xpos -130
    ypos 124
    addUserKnob {20 User l parent}
    addUserKnob {3 ref}
    ref {{parent.CTimeOffset.ref}}
   }
   Transform {
    translate {{"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].translate.x-\[value parent_env].translate.x(ref)\}]"} {"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].translate.y-\[value parent_env].translate.y(ref)\}]"}}
    rotate {{"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].rotate-\[value parent_env].rotate(ref)\}]"}}
    scale {{"\[if \{\[value parent_gun]==\"null\"\} \{return 1\} \{return 1+(\[value parent_env].scale-\[value parent_env].scale(ref))\}]"}}
    center {{"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].center.x(ref)\}]"} {"\[if \{\[value parent_env]==\"null\"\} \{return 0\} \{return \[value parent_env].center.y(ref)\}]"}}
    motionblur 0.2
    shutter {{SmokeMB*0.5}}
    shutteroffset centred
    name Transform_ENVMatchMove39
    xpos -130
    ypos 258
    addUserKnob {20 User l parent}
    addUserKnob {3 ref}
    ref {{parent.CTimeOffset.ref}}
   }
   Transform {
    translate {{"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return -((root.width/2)-(\[value parent_gun].center.x(1)+\[value parent_gun].translate.x(1)))\}]"} {"\[if \{\[value parent_gun]==\"null\"\} \{return 0\} \{return -((root.height/2)-(\[value parent_gun].center.y(1)+\[value parent_gun].translate.y(1)))\}]"}}
    name Transform_GUNMatchMove5
    label "alignment correction"
    xpos -130
    ypos 340
    addUserKnob {20 User l parent}
    addUserKnob {22 python_button l "set parent" t "select parent node, and press this button to set the selected node as parent" T "n = nuke.selectedNode()\['name'].getValue()\nnuke.thisNode()\['string'].setValue(n)" +STARTLINE}
    addUserKnob {1 string l parent}
    string Transform_MatchMove10
    addUserKnob {3 ref +INVISIBLE}
    ref {{parent.cCard3D_8.ref}}
   }
   Multiply {
    value {{math_matrix.result_z_smoke(parent.CTimeOffset.ref)}}
    name Angle_reveal_side1
    label SIDE
    xpos -130
    ypos 404
   }
   Remove {
    operation keep
    channels rgb
    name Remove39
    xpos -130
    ypos 514
   }
push 0
   Switch {
    inputs 2
    which {{parent.Angle_reveal_side1.value>0.001}}
    name Switch3
    xpos -130
    ypos 658
   }
   Merge2 {
    inputs 3+1
    operation max
    Achannels rgb
    Bchannels rgb
    output rgb
    name Merge28
    xpos -130
    ypos 731
   }
   Merge2 {
    inputs 2
    operation plus
    bbox intersection
    Achannels rgb
    Bchannels rgb
    output rgb
    name Merge29
    xpos -130
    ypos 983
   }
   Shuffle2 {
    fromInput1 {{0} B}
    fromInput2 {{0} B}
    mappings "4 rgba.red 0 0 rgba.red 0 0 rgba.green 0 1 rgba.green 0 1 rgba.blue 0 2 rgba.alpha 0 3 rgba.blue 0 2 rgba.blue 0 2"
    name Shuffle1
    xpos -130
    ypos 1021
   }
push 0
   Switch {
    inputs 2
    which {{"shot_\[value count]==0?0:frame>=shot_\[value count]"}}
    name cSwitch_13
    xpos -130
    ypos 1078
    addUserKnob {20 User}
    addUserKnob {3 count}
    count {{parent.CTimeOffset.shotnmbr}}
   }
   Output {
    name Output1
    xpos -130
    ypos 1323
   }
   StickyNote {
    inputs 0
    name StickyNote1
    label "<-- handy to break concatonation?  "
    xpos -39
    ypos 193
   }
  end_group
  Merge2 {
   inputs 24+1
   name Merge1
   xpos -268
   ypos -282
  }
  Output {
   name Output1
   xpos -272
   ypos 322
  }
push $N560e4d50
push 0
  Viewer {
   inputs 2
   frame_range 1-100
   input_number 1
   viewerProcess "sRGB (default)"
   name Viewer1
   xpos 1955
   ypos -2639
  }
 end_group
 Merge2 {
  inputs 2
  operation plus
  bbox B
  name Merge6
  xpos 1052
  ypos 85
 }
 Shuffle2 {
  fromInput1 {{0} B}
  out1 smoke
  fromInput2 {{0} B}
  mappings "4 rgba.red 0 0 smoke.red 0 0 rgba.green 0 1 smoke.green 0 1 rgba.blue 0 2 smoke.blue 0 2 rgba.alpha 0 3 smoke.alpha 0 3"
  name Shuffle5
  xpos 1052
  ypos 385
 }
 Merge2 {
  inputs 2
  operation plus
  also_merge muzzleflash
  name Merge7
  xpos 1052
  ypos 489
 }
 Switch {
  inputs 2
  which {{(mode==1)}}
  name Switch1
  xpos 1052
  ypos 779
 }
 Switch {
  inputs 2
  which {{ShowRefGuns}}
  name Switch3
  xpos 1052
  ypos 898
 }
 Output {
  name Output1
  xpos 1052
  ypos 1247
 }
 StickyNote {
  inputs 0
  name StickyNote1
  label FX
  xpos 1052
  ypos 707
 }
 StickyNote {
  inputs 0
  name StickyNote2
  label "align gun"
  xpos 886
  ypos 782
 }
 StickyNote {
  inputs 0
  name StickyNote3
  label "collection guns"
  xpos 889
  ypos 894
 }
end_group
Dot {
 name Dot2
 selected true
 xpos 639
 ypos -2024
}
set N50a28570 [stack 0]
Shuffle2 {
 fromInput1 {{0} B}
 in1 muzzleflash
 fromInput2 {{0} B}
 mappings "4 muzzleflash.red 0 0 rgba.red 0 0 muzzleflash.green 0 1 rgba.green 0 1 muzzleflash.blue 0 2 rgba.blue 0 2 black -1 -1 rgba.alpha 0 3"
 name Shuffle3
 selected true
 xpos 605
 ypos -1812
}
Remove {
 operation keep
 channels rgb
 name Remove3
 selected true
 xpos 605
 ypos -1786
}
push 0
Switch {
 inputs 2
 which {{parent.muzzleflash1.firing}}
 name Switch2
 selected true
 xpos 605
 ypos -1723
}
Dot {
 name Dot7
 selected true
 xpos 639
 ypos -1059
}
push $N50a28570
Dot {
 name Dot8
 selected true
 xpos 1199
 ypos -2024
}
Shuffle2 {
 fromInput1 {{0} B}
 in1 smoke
 fromInput2 {{0} B}
 mappings "4 smoke.red 0 0 rgba.red 0 0 smoke.green 0 1 rgba.green 0 1 smoke.blue 0 2 rgba.blue 0 2 smoke.alpha 0 3 rgba.alpha 0 3"
 name Shuffle4
 selected true
 xpos 1165
 ypos -1805
}
Remove {
 operation keep
 channels rgba
 name Remove4
 selected true
 xpos 1165
 ypos -1779
}
Dot {
 name Dot9
 selected true
 xpos 1199
 ypos -1194
}
Dot {
 inputs 0
 name Dot10
 label PLATE
 note_font_size 61
 selected true
 xpos 1559
 ypos -1945
}
Merge2 {
 inputs 2
 name Merge1
 selected true
 xpos 1525
 ypos -1198
}
Merge2 {
 inputs 2
 operation plus
 bbox B
 Achannels rgb
 Bchannels rgb
 output rgb
 name Merge4
 selected true
 xpos 1525
 ypos -1063
}
