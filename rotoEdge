Group {
name rotoEdge1
label "type: \[value pull_choice]"
selected true
xpos 5753
ypos 6049
addUserKnob {20 User l Controlls}
addUserKnob {26 txt_space1 l "" +STARTLINE T "\n"}
addUserKnob {26 txt_type l "" +STARTLINE T "<font color=\"#9ca9ff\">Type</font>"}
addUserKnob {26 ""}
addUserKnob {4 pull_choice l type M {dilate filter erodeBlur}}
pull_choice filter
addUserKnob {26 _2 l "" +STARTLINE T "\n"}
addUserKnob {26 txt l "" +STARTLINE T "<font color=\"#ffd269\">Edge size</font>"}
addUserKnob {26 ""}
addUserKnob {7 erodeIn l "erode in" R 0 100}
erodeIn 10
addUserKnob {7 erodeOut l "erode out" R 0 100}
erodeOut 10
addUserKnob {26 txt_space l "" t "\n" +STARTLINE T "\n"}
addUserKnob {7 blurIn l "blur in" R 0 100}
addUserKnob {7 blurOut l "blur out" R 0 100}
addUserKnob {26 _1 l "" +STARTLINE T "\n"}
addUserKnob {26 txt_edgeOpacity l "" +STARTLINE T "<font color=\"#ffd269\">Edge opacity</font>"}
addUserKnob {26 ""}
addUserKnob {7 edgeOpa l mix}
edgeOpa 1
addUserKnob {20 _3 l Credits}
addUserKnob {26 _4 l "" +STARTLINE T ""}
addUserKnob {26 ""}
addUserKnob {26 _7 l "" +STARTLINE T "RotoEdge 1.0"}
addUserKnob {26 _6 l "" +STARTLINE T "\n"}
addUserKnob {26 credit l "" +STARTLINE T "Maarten van der Veen"}
addUserKnob {26 credit_1 l "" +STARTLINE T ""}
addUserKnob {26 _5 l "" +STARTLINE T 2021}
}
BackdropNode {
inputs 0
name BackdropNode1
knobChanged "try:\n    listenedKnobs = \['text', 'position', 'name']\n    node = nuke.thisNode()\n    name = node.knob('name').value()\n    text = node.knob('text').value()\n    position = node.knob('position').value()\n    position = \"<\" + position + \">\"\n    label = node.knob('label').value()\n    \n    if nuke.thisKnob().name() in listenedKnobs:\n        if text == \"\":\n            if node.knob('position').value() == \"left\":\n                node.knob('label').setValue()\n            else:\n                node.knob('label').setValue(position + name)\n        else:\n            if node.knob('position').value() == \"left\":\n                node.knob('label').setValue(text)\n            else:\n                node.knob('label').setValue(position + text)\n                \n    elif nuke.thisKnob().name() == 'font_size':\n        fontSize = node.knob('font_size').value()\n        node.knob('note_font_size').setValue(fontSize)\nexcept:\n    pass"
tile_color 0x59687fff
label <Left>dilate
note_font_size 50
xpos -70
ypos -326
bdwidth 282
bdheight 397
addUserKnob {20 F_VFX l BackdropNode}
addUserKnob {43 text l Text}
text dilate
addUserKnob {7 font_size l "Font Size" R 10 100}
font_size 50
addUserKnob {4 position l "" -STARTLINE M {Left Center}}
addUserKnob {26 S01 l " " T " "}
addUserKnob {22 grow l " <img src=\"F_scalep.png\">" -STARTLINE T "n=nuke.thisNode()\n\ndef grow(node=None,step=50):\n    try:\n        if not node:\n            n=nuke.selectedNode()\n        else:\n            n=node\n            n\['xpos'].setValue(n\['xpos'].getValue()-step)\n            n\['ypos'].setValue(n\['ypos'].getValue()-step)\n            n\['bdwidth'].setValue(n\['bdwidth'].getValue()+step*2)\n            n\['bdheight'].setValue(n\['bdheight'].getValue()+step*2)\n    except:\n        pass\ngrow(n,50)"}
addUserKnob {22 shrink l " <img src=\"F_scalem.png\">" -STARTLINE T "n=nuke.thisNode()\n\ndef shrink(node=None,step=50):\n    try:\n        if not node:\n            n=nuke.selectedNode()\n        else:\n            n=node\n            n\['xpos'].setValue(n\['xpos'].getValue()+step)\n            n\['ypos'].setValue(n\['ypos'].getValue()+step)\n            n\['bdwidth'].setValue(n\['bdwidth'].getValue()-step*2)\n            n\['bdheight'].setValue(n\['bdheight'].getValue()-step*2)\n    except:\n        pass\nshrink(n,50)"}
addUserKnob {22 colorandom l " <img src=\"ColorBars.png\">" -STARTLINE T "import colorsys, random\nn=nuke.thisNode()\nR,G,B= colorsys.hsv_to_rgb(random.random(),.1+random.random()*.15,.15+random.random()*.15)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ) )"}
addUserKnob {22 darkgrey l "<font color=\"#232323\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.0, 0.0, 0.14]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
addUserKnob {22 lightgrey l "<font color=\"#383838\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.0, 0.0, 0.22]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
addUserKnob {22 red l "<font color=\"#8c3838\" size=6>■</font>" T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.0, 0.6, 0.55]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n" +STARTLINE}
addUserKnob {22 orange l "<font color=\"#b28e59\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.1, 0.5, 0.7]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
addUserKnob {22 yellow l "<font color=\"#ccc766\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.16, 0.5, 0.8]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
addUserKnob {22 green l "<font color=\"#5d995b\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.33, 0.4, 0.6]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
addUserKnob {22 cyan l "<font color=\"#72998f\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.46, 0.25, 0.6]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
addUserKnob {22 blue l "<font color=\"#59687f\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.6, 0.3, 0.5]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
addUserKnob {22 darkblue l "<font color=\"#63628c\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.67, 0.3, 0.55]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
addUserKnob {22 magenta l "<font color=\"#927a99\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.8, 0.2, 0.6]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
addUserKnob {22 pink l "<font color=\"#997a89\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.92, 0.2, 0.6]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
addUserKnob {26 S02 l " " T " "}
addUserKnob {26 Ftools l "" +STARTLINE T "<font color=\"#1C1C1C\"> v1.2 - Franklin VFX - 2018"}
}
BackdropNode {
inputs 0
name BackdropNode2
knobChanged "try:\n    listenedKnobs = \['text', 'position', 'name']\n    node = nuke.thisNode()\n    name = node.knob('name').value()\n    text = node.knob('text').value()\n    position = node.knob('position').value()\n    position = \"<\" + position + \">\"\n    label = node.knob('label').value()\n    \n    if nuke.thisKnob().name() in listenedKnobs:\n        if text == \"\":\n            if node.knob('position').value() == \"left\":\n                node.knob('label').setValue()\n            else:\n                node.knob('label').setValue(position + name)\n        else:\n            if node.knob('position').value() == \"left\":\n                node.knob('label').setValue(text)\n            else:\n                node.knob('label').setValue(position + text)\n                \n    elif nuke.thisKnob().name() == 'font_size':\n        fontSize = node.knob('font_size').value()\n        node.knob('note_font_size').setValue(fontSize)\nexcept:\n    pass"
tile_color 0x59687fff
label <Left>filter
note_font_size 50
xpos -430
ypos -327
bdwidth 282
bdheight 397
addUserKnob {20 F_VFX l BackdropNode}
addUserKnob {43 text l Text}
text filter
addUserKnob {7 font_size l "Font Size" R 10 100}
font_size 50
addUserKnob {4 position l "" -STARTLINE M {Left Center}}
addUserKnob {26 S01 l " " T " "}
addUserKnob {22 grow l " <img src=\"F_scalep.png\">" -STARTLINE T "n=nuke.thisNode()\n\ndef grow(node=None,step=50):\n    try:\n        if not node:\n            n=nuke.selectedNode()\n        else:\n            n=node\n            n\['xpos'].setValue(n\['xpos'].getValue()-step)\n            n\['ypos'].setValue(n\['ypos'].getValue()-step)\n            n\['bdwidth'].setValue(n\['bdwidth'].getValue()+step*2)\n            n\['bdheight'].setValue(n\['bdheight'].getValue()+step*2)\n    except:\n        pass\ngrow(n,50)"}
addUserKnob {22 shrink l " <img src=\"F_scalem.png\">" -STARTLINE T "n=nuke.thisNode()\n\ndef shrink(node=None,step=50):\n    try:\n        if not node:\n            n=nuke.selectedNode()\n        else:\n            n=node\n            n\['xpos'].setValue(n\['xpos'].getValue()+step)\n            n\['ypos'].setValue(n\['ypos'].getValue()+step)\n            n\['bdwidth'].setValue(n\['bdwidth'].getValue()-step*2)\n            n\['bdheight'].setValue(n\['bdheight'].getValue()-step*2)\n    except:\n        pass\nshrink(n,50)"}
addUserKnob {22 colorandom l " <img src=\"ColorBars.png\">" -STARTLINE T "import colorsys, random\nn=nuke.thisNode()\nR,G,B= colorsys.hsv_to_rgb(random.random(),.1+random.random()*.15,.15+random.random()*.15)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ) )"}
addUserKnob {22 darkgrey l "<font color=\"#232323\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.0, 0.0, 0.14]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
addUserKnob {22 lightgrey l "<font color=\"#383838\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.0, 0.0, 0.22]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
addUserKnob {22 red l "<font color=\"#8c3838\" size=6>■</font>" T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.0, 0.6, 0.55]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n" +STARTLINE}
addUserKnob {22 orange l "<font color=\"#b28e59\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.1, 0.5, 0.7]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
addUserKnob {22 yellow l "<font color=\"#ccc766\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.16, 0.5, 0.8]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
addUserKnob {22 green l "<font color=\"#5d995b\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.33, 0.4, 0.6]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
addUserKnob {22 cyan l "<font color=\"#72998f\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.46, 0.25, 0.6]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
addUserKnob {22 blue l "<font color=\"#59687f\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.6, 0.3, 0.5]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
addUserKnob {22 darkblue l "<font color=\"#63628c\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.67, 0.3, 0.55]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
addUserKnob {22 magenta l "<font color=\"#927a99\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.8, 0.2, 0.6]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
addUserKnob {22 pink l "<font color=\"#997a89\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.92, 0.2, 0.6]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
addUserKnob {26 S02 l " " T " "}
addUserKnob {26 Ftools l "" +STARTLINE T "<font color=\"#1C1C1C\"> v1.2 - Franklin VFX - 2018"}
}
BackdropNode {
inputs 0
name BackdropNode3
knobChanged "try:\n    listenedKnobs = \['text', 'position', 'name']\n    node = nuke.thisNode()\n    name = node.knob('name').value()\n    text = node.knob('text').value()\n    position = node.knob('position').value()\n    position = \"<\" + position + \">\"\n    label = node.knob('label').value()\n    \n    if nuke.thisKnob().name() in listenedKnobs:\n        if text == \"\":\n            if node.knob('position').value() == \"left\":\n                node.knob('label').setValue()\n            else:\n                node.knob('label').setValue(position + name)\n        else:\n            if node.knob('position').value() == \"left\":\n                node.knob('label').setValue(text)\n            else:\n                node.knob('label').setValue(position + text)\n                \n    elif nuke.thisKnob().name() == 'font_size':\n        fontSize = node.knob('font_size').value()\n        node.knob('note_font_size').setValue(fontSize)\nexcept:\n    pass"
tile_color 0x59687fff
label <Left>erode
note_font_size 50
xpos -850
ypos -326
bdwidth 282
bdheight 397
addUserKnob {20 F_VFX l BackdropNode}
addUserKnob {43 text l Text}
text erode
addUserKnob {7 font_size l "Font Size" R 10 100}
font_size 50
addUserKnob {4 position l "" -STARTLINE M {Left Center}}
addUserKnob {26 S01 l " " T " "}
addUserKnob {22 grow l " <img src=\"F_scalep.png\">" -STARTLINE T "n=nuke.thisNode()\n\ndef grow(node=None,step=50):\n    try:\n        if not node:\n            n=nuke.selectedNode()\n        else:\n            n=node\n            n\['xpos'].setValue(n\['xpos'].getValue()-step)\n            n\['ypos'].setValue(n\['ypos'].getValue()-step)\n            n\['bdwidth'].setValue(n\['bdwidth'].getValue()+step*2)\n            n\['bdheight'].setValue(n\['bdheight'].getValue()+step*2)\n    except:\n        pass\ngrow(n,50)"}
addUserKnob {22 shrink l " <img src=\"F_scalem.png\">" -STARTLINE T "n=nuke.thisNode()\n\ndef shrink(node=None,step=50):\n    try:\n        if not node:\n            n=nuke.selectedNode()\n        else:\n            n=node\n            n\['xpos'].setValue(n\['xpos'].getValue()+step)\n            n\['ypos'].setValue(n\['ypos'].getValue()+step)\n            n\['bdwidth'].setValue(n\['bdwidth'].getValue()-step*2)\n            n\['bdheight'].setValue(n\['bdheight'].getValue()-step*2)\n    except:\n        pass\nshrink(n,50)"}
addUserKnob {22 colorandom l " <img src=\"ColorBars.png\">" -STARTLINE T "import colorsys, random\nn=nuke.thisNode()\nR,G,B= colorsys.hsv_to_rgb(random.random(),.1+random.random()*.15,.15+random.random()*.15)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ) )"}
addUserKnob {22 darkgrey l "<font color=\"#232323\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.0, 0.0, 0.14]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
addUserKnob {22 lightgrey l "<font color=\"#383838\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.0, 0.0, 0.22]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
addUserKnob {22 red l "<font color=\"#8c3838\" size=6>■</font>" T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.0, 0.6, 0.55]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n" +STARTLINE}
addUserKnob {22 orange l "<font color=\"#b28e59\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.1, 0.5, 0.7]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
addUserKnob {22 yellow l "<font color=\"#ccc766\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.16, 0.5, 0.8]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
addUserKnob {22 green l "<font color=\"#5d995b\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.33, 0.4, 0.6]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
addUserKnob {22 cyan l "<font color=\"#72998f\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.46, 0.25, 0.6]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
addUserKnob {22 blue l "<font color=\"#59687f\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.6, 0.3, 0.5]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
addUserKnob {22 darkblue l "<font color=\"#63628c\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.67, 0.3, 0.55]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
addUserKnob {22 magenta l "<font color=\"#927a99\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.8, 0.2, 0.6]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
addUserKnob {22 pink l "<font color=\"#997a89\" size=6>■</font>" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.92, 0.2, 0.6]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nR,G,B=int(R*255),int(G*255),int(B*255)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R,G,B,255), 16 ))\n"}
addUserKnob {26 S02 l " " T " "}
addUserKnob {26 Ftools l "" +STARTLINE T "<font color=\"#1C1C1C\"> v1.2 - Franklin VFX - 2018"}
}
Input {
inputs 0
name mask
xpos 440
ypos 309
number 1
}
Remove {
operation keep
channels alpha
name Remove1
xpos 440
ypos 389
}
Dot {
name Dot1
xpos 474
ypos 504
}
Input {
inputs 0
name Input1
xpos 80
ypos -430
}
Dot {
name Dot100
xpos 114
ypos -215
}
set Na6676900 [stack 0]
Dot {
name Dot102
xpos -6
ypos -215
}
set Ncee28e00 [stack 0]
Dot {
name Dot2
xpos -246
ypos -215
}
set N30f5b690 [stack 0]
Dot {
name Dot4
xpos -366
ypos -216
}
set N30f29ee0 [stack 0]
Dot {
name Dot5
xpos -666
ypos -214
}
set N3cd2a0e0 [stack 0]
Dot {
name Dot7
xpos -786
ypos -215
}
Erode {
size {{(erodeIn)}}
name Erode_in
xpos -820
ypos -136
}
Blur {
size {{(blurIn)}}
name erodeBlur_in
xpos -820
ypos -46
}
push $N3cd2a0e0
Erode {
size {{(erodeOut)*-1}}
name Erode_out
xpos -700
ypos -136
}
Blur {
size {{(blurOut)}}
name erodeBlur_out
xpos -700
ypos -45
}
Dot {
name Dot6
xpos -666
ypos 25
}
Merge2 {
inputs 2
operation from
name Merge6
xpos -820
ypos 21
}
Dot {
name Dot9
xpos -786
ypos 408
}
push $N30f29ee0
FilterErode {
size {{(erodeIn)}}
name FilterErode_in
xpos -400
ypos -136
}
Blur {
size {{(blurIn)}}
name filterblur_in
xpos -400
ypos -46
}
push $N30f5b690
FilterErode {
size {{(erodeOut)*-1}}
name FilterErode_out
xpos -280
ypos -136
}
Blur {
size {{(blurOut)}}
name filterblur_out
xpos -280
ypos -45
}
Dot {
name Dot3
xpos -246
ypos 24
}
Merge2 {
inputs 2
operation from
name Merge5
xpos -400
ypos 20
}
Dot {
name Dot8
xpos -366
ypos 324
}
push $Ncee28e00
Dilate {
size {{(erodeIn)*-1}}
name Dilate_edge_in
xpos -40
ypos -136
}
Blur {
size {{(blurIn)}}
name dilateBlur_in
xpos -40
ypos -46
}
push $Na6676900
Dilate {
size {{(erodeOut)}}
name Dilate16_edge_out2
xpos 80
ypos -136
}
Blur {
size {{(blurOut)}}
name dilateBlur_out
xpos 80
ypos -46
}
Dot {
name Dot101
xpos 114
ypos 24
}
Merge2 {
inputs 2
operation from
name Merge4
xpos -40
ypos 20
}
Switch {
inputs 3
which {{pull_choice}}
name Switch1
xpos -40
ypos 404
}
Merge2 {
inputs 2
operation mask
name Merge2
xpos -40
ypos 501
disable {{"!\[exists parent.input1]"}}
}
Multiply {
value {{edgeOpa}}
name Multiply1_mix
xpos -40
ypos 674
}
Output {
name Output1
xpos -40
ypos 806
}
end_group
